var http = require("http");
var fs = require("fs");
var path = require("path");

function layacode(argument)
{
   var _this = this;
   setTimeout(_this.checkport,5000)
}
layacode.prototype.checkport = function()
{
	var _this = this;
	if (!_this.port)
	{
		var filepath = process.env.APPDATA;
		filepath = path.join(filepath, "LayaAirIDE", "port.json");
		if (fs.existsSync(filepath))
		{
			var con = fs.readFileSync(filepath);
			con = JSON.parse(con);
			_this.port = con.port;
			_this.workspacepath = con.workspacepath;
		}
	}

	return _this.port;
}
layacode.prototype.showPop = function(type, value)
{
	switch (type)
	{
		case "script":
			break;
		case "webview":
		case "window":
			var obj = {
				layatype: type,
				"data": value
			};
			var obj = encodeURIComponent(JSON.stringify(obj));
			http.get("http://localhost:" + this.checkport() + "/?data=" + obj, function(err, body)
			{
				console.log(err, body)
			});
			break;
	}

};

module.exports = new layacode()