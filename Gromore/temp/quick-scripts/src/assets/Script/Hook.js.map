{"version":3,"sources":["assets/Script/Hook.js"],"names":["cc","Class","Component","properties","start","init","Canvas","find","Main","getComponent","Prefab","Item","onCollisionEnter","onCollisionEnterA","other","self","HookState","isWall","Wall","isTnt","Tnt","isMouse","Mouse","PullBackHook","destroyTnt","node","getChildByName","active","boom","Animation","play","zm","showShake","sys","isNative","jsb","Device","vibrate","stopAllActions","SetSpeed","showMusic","audioEngine","CollisionAudio","y","Hook","height","x","width","parent","anchorY","Sprite","spriteFrame","HookFrames","MoveItemToHook","group","update","dt"],"mappings":"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","sourceRoot":"/","sourcesContent":["cc.Class({\n    extends: cc.Component,\n\n    properties: {\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n    //这个只是当前挂在了这个组件的节点初始完成执行，start 是所有节点初始完成执行\n    // onLoad () {},\n\n    start () {\n        //初始化 放到update里执行，必须等待canvas的prefab加载完事后才执行初始化\n        this.init();\n    },\n    /**\n     * @description 初始化 所有东西需要在动态资源加载完成后进行初始化\n     */\n    init(){\n        //获取Main 组件 需要先获取节点\n        this.Canvas = cc.find('Canvas');\n        this.Main = this.Canvas.getComponent('Main');\n        this.Prefab = this.Main.Prefab;\n        //获取钩子下item节点\n        this.Item = cc.find('Canvas/Header/Miner/Hook/item');\n        //监听碰撞\n        this.onCollisionEnter = this.onCollisionEnterA;\n    },\n\n    /**\n     * @description 监听碰撞\n     * @param {Object} other 其他与本节点碰撞的节点\n     * @param {Object} self 本节点\n     */\n    onCollisionEnterA(other, self){\n        if(this.Main.HookState == 2)return;\n        this.other = other;\n        this.isWall = this.Wall(other);\n        this.isTnt = this.Tnt(other);\n        this.isMouse = this.Mouse(other);\n        //处理钩子撞墙\n        if(this.isWall){\n            //拉回钩子\n            this.Main.PullBackHook();\n            return;\n        };\n        if(this.isTnt){\n            this.Main.destroyTnt(other.node);\n            other.node.getChildByName(\"icon\").active = false;\n            let boom = other.node.boom;\n            boom.active = true;\n            boom.getComponent(cc.Animation).play(\"boom\");\n            if(cc.zm.showShake){\n                if(cc.sys.isNative){\n                    jsb.Device.vibrate(0.3);\n                }\n            }\n        }\n        if(this.isMouse){\n            other.node.stopAllActions();\n        }\n        //根据物品设置拉回钩子速度\n        this.Main.SetSpeed(other);\n        //播放碰撞音效\n        if(cc.zm.showMusic){\n            cc.audioEngine.play(this.Main.CollisionAudio);\n        }\n        //将物品放置钩子上\n        this.other.node.y = -(this.Main.Hook.height + 2);\n        this.other.node.x = -(this.Main.Hook.width / 2);\n        other.node.parent = this.Item;\n        other.node.anchorY = 1;\n        this.node.getComponent(cc.Sprite).spriteFrame = this.Main.HookFrames[1]\n        this.Main.PullBackHook();\n    },\n    /**\n     * @description 删除被勾中的物品再创建被勾中的物品\n     */\n    MoveItemToHook(){\n        if(this.isWall)return;\n        // if(this.isTnt)return;\n        this.other.node.y = -(this.Main.Hook.height + 2);\n        this.other.node.x = -(this.Main.Hook.width / 2);\n    },\n\n    /**\n     * @description 返回钩子是否撞墙\n     */\n    Wall(other){\n        return other.node.group == 'Wall';\n    },\n    /**\n     * @description 返回是否是炸药桶\n     */\n     Tnt(other){\n        return other.node.group == 'Tnt';\n    },\n    Mouse(other){\n        return other.node.group == 'Mouse';\n    },\n    update (dt) {\n        if(this.other && this.other.node && this.Main.HookState == 2){\n            this.MoveItemToHook();\n        };\n    },\n});\n"]}