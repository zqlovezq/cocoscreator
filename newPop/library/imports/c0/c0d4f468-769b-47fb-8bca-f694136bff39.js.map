{"version":3,"sources":["assets/Script/Game/AssetsBundle.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["//写个功能AssetBundle--->负责资源的管理\n//如何实现基于AssetsBundle的资源管理模块\n/**\n * 资源管理的接口\n * 预加载：“场景”，我们要的那些资源先预加载进来\n * let resPkg = {\n *      ab包名(key):{\n *          assetType:cc.Prefab,\n *          urls:[第一个资源路径,第二个资源路径]\n *      }\n * }\n * 1:preloadResPkg(resPkg,progressFunc,endFunc)\n * 获取资源的接口\n * 2:getAsset(abName,url)--->返回资源\n * 3:realeseResPkg(resPkg)--->释放资源\n * 4:单独的加载资源；\n */\nexport default class AssetsBundle extends cc.Component {\n    public static Instance: AssetsBundle = null;\n    private total: number = 0;\n    private now: number = 0;\n    private totalAb: number = 0;\n    private nowAb: number = 0;\n    private progressFunc: Function = null;\n    private endFunc: Function = null;\n    private abBunds = {};\n    onLoad() {\n        //单例\n        if (AssetsBundle.Instance === null) {\n            AssetsBundle.Instance = this;\n        } else {\n            this.destroy();\n            return;\n        }\n    }\n    /**\n     * 加载我们的资源包\n     * @param resPkg = {ab包名:{assetType:cc.Prefab,urls:[路径1]}}\n    */\n    preloadResPkg(resPkg, progressFunc, endFunc): void {\n        this.total = 0;\n        this.now = 0;\n        this.totalAb = 0;\n        this.nowAb = 0;\n        this.progressFunc = progressFunc;\n        this.endFunc = endFunc;\n        for (let key in resPkg) {\n            this.totalAb++;\n            let json = resPkg[key];\n            for(let val in json){\n                this.total += json[val].urls.length;\n            }\n        }\n        for (let key in resPkg) {\n            this.loadAssetsBundle(key, () => {\n                this.nowAb++;\n                if (this.nowAb === this.totalAb) {\n                    this.loadAssetsInAssetsBundle(resPkg);\n                }\n            })\n        }\n    }\n    private loadAssetsBundle(abName: string, endFunc: Function): void {\n        cc.assetManager.loadBundle(abName, (err, bundle) => {\n            if (err !== null) {\n                console.log(\"[AssetsBundle]:load AssetsBundle Error:\" + abName);\n                this.abBunds[abName] = null;\n            } else {\n                console.log(\"[AssetsBundle]:load AssetsBundle Success:\" + abName);\n                this.abBunds[abName] = bundle;\n            }\n            if (endFunc) {\n                endFunc();\n            }\n        })\n\n    }\n    private loadAssetsInAssetsBundle(resPkg): void {\n        for (let key in resPkg) {\n            let json = resPkg[key];\n            for(let val in json){\n                let urlSet = json[val].urls;\n                let typeClass = json[val].assetType;\n                for (let i = 0; i < urlSet.length; i++) {\n                    this.loadRes(this.abBunds[key], urlSet[i], typeClass)\n                }\n            }\n        }\n    }\n    private loadRes(abBundle, url, typeClass): void {\n        abBundle.load(url, typeClass, (error, asset) => {\n            this.now++;\n            if (error) {\n                console.log(\"load Res\" + url + \"error:\" + error);\n            }\n            else {\n                console.log(\"load Res\" + url + \"success!\");\n            }\n            if (this.progressFunc) {\n                this.progressFunc(this.now, this.total);\n            }\n            console.log(this.now, this.total);\n            if (this.now >= this.total) {\n                if (this.endFunc !== null) {\n                    this.endFunc();\n                }\n            }\n        })\n    }\n    /**\n   * 获取资源\n   * @param abName--->包名\n   * @param url---->地址\n  */\n    getAsset(abName, url): any {\n        let bundle = cc.assetManager.getBundle(abName);\n        if (bundle === null) {\n            console.log(\"[error]:\" + abName + \"AssetsBundle not loaded:\");\n            return null;\n        }\n        return bundle.get(url);\n    }\n    loadScene(abName,url):any{\n        let bundle = cc.assetManager.getBundle(abName);\n        if (bundle === null) {\n            console.log(\"[error]:\" + abName + \"AssetsBundle not loaded:\");\n            return null;\n        }\n        bundle.loadScene(url, function (err, scene) {\n            cc.director.runScene(scene);\n        });\n    }\n    //释放bundle\n    realeseResPkg(abName): any {\n        let bundle = cc.assetManager.getBundle(abName);\n        if (bundle === null) {\n            console.log(\"[error]:\" + abName + \"AssetsBundle not loaded:\");\n            return null;\n        }\n        bundle.releaseAll();\n        cc.assetManager.removeBundle(bundle);\n    }\n}\n"]}