
                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/login.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '6b7cdHix81Ol6r4h+cnHYQh', 'login');
// Script/login.js

"use strict";

var http = require("Http");

cc.Class({
  "extends": cc.Component,
  properties: {},
  // LIFE-CYCLE CALLBACKS:
  // onLoad () {},
  start: function start() {
    this.protocol = false;
    this.needLogin = true;
    this.time = 0;

    if (!cc.sys.isNative) {
      cc.sys.localStorage.setItem("token", "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoxMDAxMTcxLCJvcGVuX2lkIjoib1FXNFI1OVVSRlF1YTNSWjlvX3lfdGJ6UEdLNCIsIm5pY2tfbmFtZSI6Iua1t-ebl-iIuemVvzIuMCIsImdlbmRlciI6MSwiYXZhdGFyIjoiaHR0cHM6Ly90aGlyZHd4LnFsb2dvLmNuL21tb3Blbi92aV8zMi9mR0xkR1pneG5wVmtJQldjaWEzeWljaWJ6aWJFQ0J0VzFhQkhEbUdhWmV6cTAycWdQUUN3STN5OGljVE5nWEtCcDBOcExBNUJFdDZ6UEdsSG1VTWY5bHd4Qk1nLzEzMiIsImNyZWF0ZV90aW1lIjowLCJjaGFubmVsIjoiMSIsImRpc3RpbmN0X2lkIjoiMSJ9.K5C9XSkEEjBBfPFn1m5BoXGu11ubPc9lSvDRAHkv_V4");
    }

    if (cc.sys.localStorage.getItem("token")) {
      this.needLogin = false;
      cc.wxToken = cc.sys.localStorage.getItem("token");
      cc.director.loadScene('Index');
    }
  },
  onLoginWX: function onLoginWX() {
    if (cc.sys.isNative) {
      if (this.protocol) {
        cc.Tools.wxLogin();
      } else {
        this.showTips();
      }
    }
  },
  // 选择用户协议
  clickProtocol: function clickProtocol(e) {
    var target = e.target;
    var right = target.getChildByName("right");

    if (this.protocol) {
      right.active = false;
      this.protocol = false;
    } else {
      right.active = true;
      this.protocol = true;
    }
  },
  showTips: function showTips() {
    var tips = this.node.getChildByName("tips");
    tips.y = 0;
    tips.active = true;
    cc.tween(tips).to(1, {
      y: 100
    }).delay(0.5).call(function () {
      tips.active = false;
    }).start();
  },
  update: function update(dt) {
    this.time += dt;

    if (!this.needLogin) {
      return;
    }

    if (this.time >= 1) {
      this.time = 0;

      if (cc.wxLoginResultcode && this.protocol) {
        this.protocol = false;
        var data = {
          "channel": "1",
          "imei": "1",
          "mac": "1",
          "distinct_id": "1",
          "oaid": "1",
          "android_id": "1",
          "code": cc.wxLoginResultcode
        };
        http.sendRequest("pit.v1/register", "POST", data).then(function (res) {
          // this.token.string = JSON.stringify(res)
          cc.wxToken = res.data.token;
          cc.sys.localStorage.setItem("token", res.data.token);
          cc.director.loadScene('Index');
        });
      }
    }
  },
  // 显示用户协议
  showUserProtocol: function showUserProtocol() {
    var protocol = this.node.getChildByName("user_protocol");
    protocol.active = true;
  },
  hideUserProtocol: function hideUserProtocol() {
    var protocol = this.node.getChildByName("user_protocol");
    protocol.active = false;
  },
  // 显示隐私政策
  showUserPrivacy: function showUserPrivacy() {
    var privacy = this.node.getChildByName("user_privacy");
    privacy.active = true;
  },
  hideUserPrivacy: function hideUserPrivacy() {
    var privacy = this.node.getChildByName("user_privacy");
    privacy.active = false;
  }
});

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9TY3JpcHQvbG9naW4uanMiXSwibmFtZXMiOlsiaHR0cCIsInJlcXVpcmUiLCJjYyIsIkNsYXNzIiwiQ29tcG9uZW50IiwicHJvcGVydGllcyIsInN0YXJ0IiwicHJvdG9jb2wiLCJuZWVkTG9naW4iLCJ0aW1lIiwic3lzIiwiaXNOYXRpdmUiLCJsb2NhbFN0b3JhZ2UiLCJzZXRJdGVtIiwiZ2V0SXRlbSIsInd4VG9rZW4iLCJkaXJlY3RvciIsImxvYWRTY2VuZSIsIm9uTG9naW5XWCIsIlRvb2xzIiwid3hMb2dpbiIsInNob3dUaXBzIiwiY2xpY2tQcm90b2NvbCIsImUiLCJ0YXJnZXQiLCJyaWdodCIsImdldENoaWxkQnlOYW1lIiwiYWN0aXZlIiwidGlwcyIsIm5vZGUiLCJ5IiwidHdlZW4iLCJ0byIsImRlbGF5IiwiY2FsbCIsInVwZGF0ZSIsImR0Iiwid3hMb2dpblJlc3VsdGNvZGUiLCJkYXRhIiwic2VuZFJlcXVlc3QiLCJ0aGVuIiwicmVzIiwidG9rZW4iLCJzaG93VXNlclByb3RvY29sIiwiaGlkZVVzZXJQcm90b2NvbCIsInNob3dVc2VyUHJpdmFjeSIsInByaXZhY3kiLCJoaWRlVXNlclByaXZhY3kiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsSUFBTUEsSUFBSSxHQUFHQyxPQUFPLENBQUMsTUFBRCxDQUFwQjs7QUFDQUMsRUFBRSxDQUFDQyxLQUFILENBQVM7QUFDTCxhQUFTRCxFQUFFLENBQUNFLFNBRFA7QUFHTEMsRUFBQUEsVUFBVSxFQUFFLEVBSFA7QUFPTDtBQUVBO0FBRUFDLEVBQUFBLEtBWEssbUJBV0c7QUFDSixTQUFLQyxRQUFMLEdBQWdCLEtBQWhCO0FBQ0EsU0FBS0MsU0FBTCxHQUFpQixJQUFqQjtBQUNBLFNBQUtDLElBQUwsR0FBWSxDQUFaOztBQUNBLFFBQUksQ0FBQ1AsRUFBRSxDQUFDUSxHQUFILENBQU9DLFFBQVosRUFBc0I7QUFDbEJULE1BQUFBLEVBQUUsQ0FBQ1EsR0FBSCxDQUFP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Q0FBU0ksS0FBdEI7QUFDQXhDLFVBQUFBLEVBQUUsQ0FBQ1EsR0FBSCxDQUFPRSxZQUFQLENBQW9CQyxPQUFwQixDQUE0QixPQUE1QixFQUFxQzRCLEdBQUcsQ0FBQ0gsSUFBSixDQUFTSSxLQUE5QztBQUNBeEMsVUFBQUEsRUFBRSxDQUFDYyxRQUFILENBQVlDLFNBQVosQ0FBc0IsT0FBdEI7QUFDSCxTQUxEO0FBTUg7QUFDSjtBQUNKLEdBL0VJO0FBZ0ZMO0FBQ0EwQixFQUFBQSxnQkFqRkssOEJBaUZjO0FBQ2YsUUFBSXBDLFFBQVEsR0FBRyxLQUFLc0IsSUFBTCxDQUFVSCxjQUFWLENBQXlCLGVBQXpCLENBQWY7QUFDQW5CLElBQUFBLFFBQVEsQ0FBQ29CLE1BQVQsR0FBa0IsSUFBbEI7QUFDSCxHQXBGSTtBQXFGTGlCLEVBQUFBLGdCQXJGSyw4QkFxRmM7QUFDZixRQUFJckMsUUFBUSxHQUFHLEtBQUtzQixJQUFMLENBQVVILGNBQVYsQ0FBeUIsZUFBekIsQ0FBZjtBQUNBbkIsSUFBQUEsUUFBUSxDQUFDb0IsTUFBVCxHQUFrQixLQUFsQjtBQUNILEdBeEZJO0FBeUZMO0FBQ0FrQixFQUFBQSxlQTFGSyw2QkEwRmE7QUFDZCxRQUFJQyxPQUFPLEdBQUcsS0FBS2pCLElBQUwsQ0FBVUgsY0FBVixDQUF5QixjQUF6QixDQUFkO0FBQ0FvQixJQUFBQSxPQUFPLENBQUNuQixNQUFSLEdBQWlCLElBQWpCO0FBQ0gsR0E3Rkk7QUE4RkxvQixFQUFBQSxlQTlGSyw2QkE4RmE7QUFDZCxRQUFJRCxPQUFPLEdBQUcsS0FBS2pCLElBQUwsQ0FBVUgsY0FBVixDQUF5QixjQUF6QixDQUFkO0FBQ0FvQixJQUFBQSxPQUFPLENBQUNuQixNQUFSLEdBQWlCLEtBQWpCO0FBQ0g7QUFqR0ksQ0FBVCIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgaHR0cCA9IHJlcXVpcmUoXCJIdHRwXCIpO1xuY2MuQ2xhc3Moe1xuICAgIGV4dGVuZHM6IGNjLkNvbXBvbmVudCxcblxuICAgIHByb3BlcnRpZXM6IHtcblxuICAgIH0sXG5cbiAgICAvLyBMSUZFLUNZQ0xFIENBTExCQUNLUzpcblxuICAgIC8vIG9uTG9hZCAoKSB7fSxcblxuICAgIHN0YXJ0KCkge1xuICAgICAgICB0aGlzLnByb3RvY29sID0gZmFsc2U7XG4gICAgICAgIHRoaXMubmVlZExvZ2luID0gdHJ1ZTtcbiAgICAgICAgdGhpcy50aW1lID0gMDtcbiAgICAgICAgaWYgKCFjYy5zeXMuaXNOYXRpdmUpIHtcbiAgICAgICAgICAgIGNjLnN5cy5sb2NhbFN0b3JhZ2Uuc2V0SXRlbShcInRva2VuXCIsIFwiZXlKaGJHY2lPaUpJVXpJMU5pSXNJblI1Y0NJNklrcFhWQ0o5LmV5SjFjMlZ5WDJsa0lqb3hNREF4TVRjeExDSnZjR1Z1WDJsa0lqb2liMUZYTkZJMU9WVlNSbEYxWVROU1dqbHZYM2xmZEdKNlVFZExOQ0lzSW01cFkydGZibUZ0WlNJNkl1YTF0LWVibC1pSXVlbVZ2ekl1TUNJc0ltZGxibVJsY2lJNk1Td2lZWFpoZEdGeUlqb2lhSFIwY0hNNkx5OTBhR2x5WkhkNExuRnNiMmR2TG1OdUwyMXRiM0JsYmk5MmFWOHpNaTltUjB4a1IxcG5lRzV3Vm10SlFsZGphV0V6ZVdsamFXSjZhV0pGUTBKMFZ6RmhRa2hFYlVkaFdtVjZjVEF5Y1dkUVVVTjNTVE41T0dsalZFNW5XRXRDY0RCT2NFeEJOVUpGZERaNlVFZHNTRzFWVFdZNWJIZDRRazFuTHpFek1pSXNJbU55WldGMFpWOTBhVzFsSWpvd0xDSmphR0Z1Ym1Wc0lqb2lNU0lzSW1ScGMzUnBibU4wWDJsa0lqb2lNU0o5Lks1QzlYU2tFRWpCQmZQRm4xbTVCb1hHdTExdWJQYzlsU3ZEUkFIa3ZfVjRcIilcbiAgICAgICAgfVxuICAgICAgICBpZiAoY2Muc3lzLmxvY2FsU3RvcmFnZS5nZXRJdGVtKFwidG9rZW5cIikpIHtcbiAgICAgICAgICAgIHRoaXMubmVlZExvZ2luID0gZmFsc2U7XG4gICAgICAgICAgICBjYy53eFRva2VuID0gY2Muc3lzLmxvY2FsU3RvcmFnZS5nZXRJdGVtKFwidG9rZW5cIik7XG4gICAgICAgICAgICBjYy5kaXJlY3Rvci5sb2FkU2NlbmUoJ0luZGV4Jyk7XG4gICAgICAgIH1cbiAgICB9LFxuICAgIG9uTG9naW5XWCgpIHtcbiAgICAgICAgaWYgKGNjLnN5cy5pc05hdGl2ZSkge1xuICAgICAgICAgICAgaWYgKHRoaXMucHJvdG9jb2wpIHtcbiAgICAgICAgICAgICAgICBjYy5Ub29scy53eExvZ2luKCk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIHRoaXMuc2hvd1RpcHMoKVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfSxcbiAgICAvLyDpgInmi6nnlKjmiLfljY/orq5cbiAgICBjbGlja1Byb3RvY29sKGUpIHtcbiAgICAgICAgbGV0IHRhcmdldCA9IGUudGFyZ2V0O1xuICAgICAgICBsZXQgcmlnaHQgPSB0YXJnZXQuZ2V0Q2hpbGRCeU5hbWUoXCJyaWdodFwiKTtcbiAgICAgICAgaWYgKHRoaXMucHJvdG9jb2wpIHtcbiAgICAgICAgICAgIHJpZ2h0LmFjdGl2ZSA9IGZhbHNlO1xuICAgICAgICAgICAgdGhpcy5wcm90b2NvbCA9IGZhbHNlO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgcmlnaHQuYWN0aXZlID0gdHJ1ZTtcbiAgICAgICAgICAgIHRoaXMucHJvdG9jb2wgPSB0cnVlO1xuICAgICAgICB9XG4gICAgfSxcbiAgICBzaG93VGlwcygpIHtcbiAgICAgICAgbGV0IHRpcHMgPSB0aGlzLm5vZGUuZ2V0Q2hpbGRCeU5hbWUoXCJ0aXBzXCIpO1xuICAgICAgICB0aXBzLnkgPSAwO1xuICAgICAgICB0aXBzLmFjdGl2ZSA9IHRydWU7XG4gICAgICAgIGNjLnR3ZWVuKHRpcHMpLnRvKDEsIHsgeTogMTAwIH0pLmRlbGF5KDAuNSkuY2FsbCgoKSA9PiB7XG4gICAgICAgICAgICB0aXBzLmFjdGl2ZSA9IGZhbHNlO1xuICAgICAgICB9KS5zdGFydCgpXG4gICAgfSxcbiAgICB1cGRhdGUoZHQpIHtcbiAgICAgICAgdGhpcy50aW1lICs9IGR0O1xuICAgICAgICBpZiAoIXRoaXMubmVlZExvZ2luKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHRoaXMudGltZSA+PSAxKSB7XG4gICAgICAgICAgICB0aGlzLnRpbWUgPSAwO1xuICAgICAgICAgICAgaWYgKGNjLnd4TG9naW5SZXN1bHRjb2RlICYmIHRoaXMucHJvdG9jb2wpIHtcbiAgICAgICAgICAgICAgICB0aGlzLnByb3RvY29sID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgbGV0IGRhdGEgPSB7XG4gICAgICAgICAgICAgICAgICAgIFwiY2hhbm5lbFwiOiBcIjFcIixcbiAgICAgICAgICAgICAgICAgICAgXCJpbWVpXCI6IFwiMVwiLFxuICAgICAgICAgICAgICAgICAgICBcIm1hY1wiOiBcIjFcIixcbiAgICAgICAgICAgICAgICAgICAgXCJkaXN0aW5jdF9pZFwiOiBcIjFcIixcbiAgICAgICAgICAgICAgICAgICAgXCJvYWlkXCI6IFwiMVwiLFxuICAgICAgICAgICAgICAgICAgICBcImFuZHJvaWRfaWRcIjogXCIxXCIsXG4gICAgICAgICAgICAgICAgICAgIFwiY29kZVwiOiBjYy53eExvZ2luUmVzdWx0Y29kZVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBodHRwLnNlbmRSZXF1ZXN0KFwicGl0LnYxL3JlZ2lzdGVyXCIsIFwiUE9TVFwiLCBkYXRhKS50aGVuKChyZXMpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgLy8gdGhpcy50b2tlbi5zdHJpbmcgPSBKU09OLnN0cmluZ2lmeShyZXMpXG4gICAgICAgICAgICAgICAgICAgIGNjLnd4VG9rZW4gPSByZXMuZGF0YS50b2tlbjtcbiAgICAgICAgICAgICAgICAgICAgY2Muc3lzLmxvY2FsU3RvcmFnZS5zZXRJdGVtKFwidG9rZW5cIiwgcmVzLmRhdGEudG9rZW4pO1xuICAgICAgICAgICAgICAgICAgICBjYy5kaXJlY3Rvci5sb2FkU2NlbmUoJ0luZGV4Jyk7XG4gICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH0sXG4gICAgLy8g5pi+56S655So5oi35Y2P6K6uXG4gICAgc2hvd1VzZXJQcm90b2NvbCgpIHtcbiAgICAgICAgbGV0IHByb3RvY29sID0gdGhpcy5ub2RlLmdldENoaWxkQnlOYW1lKFwidXNlcl9wcm90b2NvbFwiKTtcbiAgICAgICAgcHJvdG9jb2wuYWN0aXZlID0gdHJ1ZTtcbiAgICB9LFxuICAgIGhpZGVVc2VyUHJvdG9jb2woKSB7XG4gICAgICAgIGxldCBwcm90b2NvbCA9IHRoaXMubm9kZS5nZXRDaGlsZEJ5TmFtZShcInVzZXJfcHJvdG9jb2xcIik7XG4gICAgICAgIHByb3RvY29sLmFjdGl2ZSA9IGZhbHNlO1xuICAgIH0sXG4gICAgLy8g5pi+56S66ZqQ56eB5pS/562WXG4gICAgc2hvd1VzZXJQcml2YWN5KCkge1xuICAgICAgICBsZXQgcHJpdmFjeSA9IHRoaXMubm9kZS5nZXRDaGlsZEJ5TmFtZShcInVzZXJfcHJpdmFjeVwiKTtcbiAgICAgICAgcHJpdmFjeS5hY3RpdmUgPSB0cnVlO1xuICAgIH0sXG4gICAgaGlkZVVzZXJQcml2YWN5KCkge1xuICAgICAgICBsZXQgcHJpdmFjeSA9IHRoaXMubm9kZS5nZXRDaGlsZEJ5TmFtZShcInVzZXJfcHJpdmFjeVwiKTtcbiAgICAgICAgcHJpdmFjeS5hY3RpdmUgPSBmYWxzZTtcbiAgICB9LFxufSk7XG5cblxuIl19