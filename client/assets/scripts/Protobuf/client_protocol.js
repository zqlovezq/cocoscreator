/*eslint-disable block-scoped-var, id-length, no-control-regex, no-magic-numbers, no-prototype-builtins, no-redeclare, no-shadow, no-var, sort-vars*/
import * as $protobuf from "protobufjs";
import Long from 'long';
$protobuf.default.util.Long = Long;
$protobuf.default.configure();

const $Reader = $protobuf.default.Reader, $Writer = $protobuf.default.Writer, $util = $protobuf.default.util;

const $root = {};



// Common aliases


// Exported root namespace


export const proto = $root.proto = (() => {

    /**
     * Namespace proto.
     * @exports proto
     * @namespace
     */
    var proto = {};

    /**
     * Ptl enum.
     * @name proto.Ptl
     * @enum {number}
     * @property {number} UNSPECIFIED=0 UNSPECIFIED value
     * @property {number} Ping=10000 Ping value
     * @property {number} LoginReq=10001 LoginReq value
     * @property {number} LoginRsp=10002 LoginRsp value
     * @property {number} Pong=10003 Pong value
     * @property {number} CreateRoleReq=11000 CreateRoleReq value
     * @property {number} CreateRoleRsp=11001 CreateRoleRsp value
     * @property {number} SyncRolePush=11002 SyncRolePush value
     * @property {number} ItemChangePush=11007 ItemChangePush value
     * @property {number} GetHeroBagReq=11012 GetHeroBagReq value
     * @property {number} GetHeroBagRsp=11013 GetHeroBagRsp value
     * @property {number} SetTeamSlotReq=11014 SetTeamSlotReq value
     * @property {number} SetTeamSlotRsp=11015 SetTeamSlotRsp value
     * @property {number} UpTeamSlotLevelReq=11016 UpTeamSlotLevelReq value
     * @property {number} UpTeamSlotLevelRsp=11017 UpTeamSlotLevelRsp value
     * @property {number} ResetTeamSlotLevelReq=11018 ResetTeamSlotLevelReq value
     * @property {number} ResetTeamSlotLevelRsp=11019 ResetTeamSlotLevelRsp value
     * @property {number} UpHeroStarReq=11020 UpHeroStarReq value
     * @property {number} UpHeroStarRsp=11021 UpHeroStarRsp value
     * @property {number} ResetHeroStarReq=11022 ResetHeroStarReq value
     * @property {number} ResetHeroStarRsp=11023 ResetHeroStarRsp value
     * @property {number} DisbandHeroesReq=11024 DisbandHeroesReq value
     * @property {number} DisbandHeroesRsp=11025 DisbandHeroesRsp value
     * @property {number} UpHeroStarOneClickReq=11026 UpHeroStarOneClickReq value
     * @property {number} UpHeroStarOneClickRsp=11027 UpHeroStarOneClickRsp value
     * @property {number} UpHeroBagCapacityReq=11028 UpHeroBagCapacityReq value
     * @property {number} UpHeroBagCapacityRsp=11029 UpHeroBagCapacityRsp value
     * @property {number} ChangeEquipReq=11030 ChangeEquipReq value
     * @property {number} ChangeEquipRsp=11031 ChangeEquipRsp value
     * @property {number} EnhanceEquipReq=11032 EnhanceEquipReq value
     * @property {number} EnhanceEquipRsp=11033 EnhanceEquipRsp value
     * @property {number} RefineEquipReq=11034 RefineEquipReq value
     * @property {number} RefineEquipRsp=11035 RefineEquipRsp value
     * @property {number} UpdateHeroMasterLv=11036 UpdateHeroMasterLv value
     * @property {number} ReceiveRecommendTeamRewardReq=11037 ReceiveRecommendTeamRewardReq value
     * @property {number} ReceiveRecommendTeamRewardRsp=11038 ReceiveRecommendTeamRewardRsp value
     * @property {number} ReceiveHeroAlbumRewardReq=11039 ReceiveHeroAlbumRewardReq value
     * @property {number} ReceiveHeroAlbumRewardRsp=11040 ReceiveHeroAlbumRewardRsp value
     * @property {number} UpLevelResonanceReq=11041 UpLevelResonanceReq value
     * @property {number} UpLevelResonanceRsp=11042 UpLevelResonanceRsp value
     * @property {number} UpStarResonanceReq=11043 UpStarResonanceReq value
     * @property {number} UpStarResonanceRsp=11044 UpStarResonanceRsp value
     * @property {number} DecomposeEquipReq=11045 DecomposeEquipReq value
     * @property {number} DecomposeEquipRsp=11046 DecomposeEquipRsp value
     * @property {number} FeatherRecastReq=11047 FeatherRecastReq value
     * @property {number} FeatherRecastRsp=11048 FeatherRecastRsp value
     * @property {number} FeatherRecastConfirmReq=11049 FeatherRecastConfirmReq value
     * @property {number} FeatherRecastConfirmRsp=11050 FeatherRecastConfirmRsp value
     * @property {number} UpdateHeroPowerScore=11051 UpdateHeroPowerScore value
     * @property {number} UpdateRolePowerScore=11052 UpdateRolePowerScore value
     * @property {number} FinishHeroStarStepReq=11053 FinishHeroStarStepReq value
     * @property {number} FinishHeroStarStepRsp=11054 FinishHeroStarStepRsp value
     * @property {number} UpgradeGeneLevelReq=11055 UpgradeGeneLevelReq value
     * @property {number} UpgradeGeneLevelRsp=11056 UpgradeGeneLevelRsp value
     * @property {number} UndressEquipReq=11057 UndressEquipReq value
     * @property {number} UndressEquipRsp=11058 UndressEquipRsp value
     * @property {number} SwitchEquipReq=11059 SwitchEquipReq value
     * @property {number} SwitchEquipRsp=11060 SwitchEquipRsp value
     * @property {number} UpgradeBookLevelReq=11061 UpgradeBookLevelReq value
     * @property {number} UpgradeBookLevelRsp=11062 UpgradeBookLevelRsp value
     * @property {number} UpgradeBookStarReq=11063 UpgradeBookStarReq value
     * @property {number} UpgradeBookStarRsp=11064 UpgradeBookStarRsp value
     * @property {number} TakeBookReq=11065 TakeBookReq value
     * @property {number} TakeBookRsp=11066 TakeBookRsp value
     * @property {number} DropBookReq=11067 DropBookReq value
     * @property {number} DropBookRsp=11068 DropBookRsp value
     * @property {number} UpdateBookSeriesData=11069 UpdateBookSeriesData value
     * @property {number} GetScrollPaintingsReq=11070 GetScrollPaintingsReq value
     * @property {number} GetScrollPaintingsRsp=11071 GetScrollPaintingsRsp value
     * @property {number} UpgradeScrollPaintingStarReq=11072 UpgradeScrollPaintingStarReq value
     * @property {number} UpgradeScrollPaintingStarRsp=11073 UpgradeScrollPaintingStarRsp value
     * @property {number} GetSimpleRoleReq=11074 GetSimpleRoleReq value
     * @property {number} GetSimpleRoleRsp=11075 GetSimpleRoleRsp value
     * @property {number} LockEquipReq=11076 LockEquipReq value
     * @property {number} LockEquipRsp=11077 LockEquipRsp value
     * @property {number} ChangeRoleNameReq=11078 ChangeRoleNameReq value
     * @property {number} ChangeRoleNameRsp=11079 ChangeRoleNameRsp value
     * @property {number} GetAvatarInfoReq=11080 GetAvatarInfoReq value
     * @property {number} GetAvatarInfoRsp=11081 GetAvatarInfoRsp value
     * @property {number} SetHeadIconReq=11082 SetHeadIconReq value
     * @property {number} SetHeadIconRsp=11083 SetHeadIconRsp value
     * @property {number} SetHeadFrameReq=11084 SetHeadFrameReq value
     * @property {number} SetHeadFrameRsp=11085 SetHeadFrameRsp value
     * @property {number} SetChatBubbleReq=11086 SetChatBubbleReq value
     * @property {number} SetChatBubbleRsp=11087 SetChatBubbleRsp value
     * @property {number} SetMainSceneReq=11088 SetMainSceneReq value
     * @property {number} SetMainSceneRsp=11089 SetMainSceneRsp value
     * @property {number} BookFragmentSwitchReq=11090 BookFragmentSwitchReq value
     * @property {number} BookFragmentSwitchRsp=11091 BookFragmentSwitchRsp value
     * @property {number} CombineBookFragmentReq=11092 CombineBookFragmentReq value
     * @property {number} CombineBookFragmentRsp=11093 CombineBookFragmentRsp value
     * @property {number} RoleLevelUpPush=11094 RoleLevelUpPush value
     * @property {number} UpdateDropSum=11095 UpdateDropSum value
     * @property {number} GetMainStageInfoReq=11096 GetMainStageInfoReq value
     * @property {number} GetMainStageInfoRsp=11097 GetMainStageInfoRsp value
     * @property {number} StartStageReq=11098 StartStageReq value
     * @property {number} StartStageRsp=11099 StartStageRsp value
     * @property {number} FinishStageReq=11100 FinishStageReq value
     * @property {number} FinishStageRsp=11101 FinishStageRsp value
     * @property {number} ReceiveMainFirstRewardReq=11102 ReceiveMainFirstRewardReq value
     * @property {number} ReceiveMainFirstRewardRsp=11103 ReceiveMainFirstRewardRsp value
     * @property {number} GachaReq=11104 GachaReq value
     * @property {number} GachaRsp=11105 GachaRsp value
     * @property {number} UseItemReq=11106 UseItemReq value
     * @property {number} UseItemRsp=11107 UseItemRsp value
     * @property {number} GetOpenFunctionsReq=11108 GetOpenFunctionsReq value
     * @property {number} GetOpenFunctionsRsp=11109 GetOpenFunctionsRsp value
     * @property {number} OpenFunctionChangePush=11110 OpenFunctionChangePush value
     * @property {number} UpdateBookPowerScore=11111 UpdateBookPowerScore value
     * @property {number} UseElixirReq=11112 UseElixirReq value
     * @property {number} UseElixirRsp=11113 UseElixirRsp value
     * @property {number} FightInfoPush=11114 FightInfoPush value
     * @property {number} ReceiveOpenFunctionRewardReq=11115 ReceiveOpenFunctionRewardReq value
     * @property {number} ReceiveOpenFunctionRewardRsp=11116 ReceiveOpenFunctionRewardRsp value
     * @property {number} GetMailsReq=11117 GetMailsReq value
     * @property {number} GetMailsRsp=11118 GetMailsRsp value
     * @property {number} ReceiveMailsRewardReq=11119 ReceiveMailsRewardReq value
     * @property {number} ReceiveMailsRewardRsp=11120 ReceiveMailsRewardRsp value
     * @property {number} DeleteMailsReq=11121 DeleteMailsReq value
     * @property {number} DeleteMailsRsp=11122 DeleteMailsRsp value
     * @property {number} NewMailsPush=11123 NewMailsPush value
     * @property {number} GetDailyTasksReq=11124 GetDailyTasksReq value
     * @property {number} GetDailyTasksRsp=11125 GetDailyTasksRsp value
     * @property {number} ReceiveDailyTaskRewardReq=11126 ReceiveDailyTaskRewardReq value
     * @property {number} ReceiveDailyTaskRewardRsp=11127 ReceiveDailyTaskRewardRsp value
     * @property {number} ReceiveDailyActivityTaskRewardReq=11128 ReceiveDailyActivityTaskRewardReq value
     * @property {number} ReceiveDailyActivityTaskRewardRsp=11129 ReceiveDailyActivityTaskRewardRsp value
     * @property {number} GetWeeklyTasksReq=11130 GetWeeklyTasksReq value
     * @property {number} GetWeeklyTasksRsp=11131 GetWeeklyTasksRsp value
     * @property {number} ReceiveWeeklyTaskRewardReq=11132 ReceiveWeeklyTaskRewardReq value
     * @property {number} ReceiveWeeklyTaskRewardRsp=11133 ReceiveWeeklyTaskRewardRsp value
     * @property {number} ReceiveWeeklyActivityTaskRewardReq=11134 ReceiveWeeklyActivityTaskRewardReq value
     * @property {number} ReceiveWeeklyActivityTaskRewardRsp=11135 ReceiveWeeklyActivityTaskRewardRsp value
     * @property {number} GetAchievementTasksReq=11136 GetAchievementTasksReq value
     * @property {number} GetAchievementTasksRsp=11137 GetAchievementTasksRsp value
     * @property {number} ReceiveAchievementTaskRewardReq=11138 ReceiveAchievementTaskRewardReq value
     * @property {number} ReceiveAchievementTaskRewardRsp=11139 ReceiveAchievementTaskRewardRsp value
     * @property {number} AdvWatchDataPush=11140 AdvWatchDataPush value
     * @property {number} GetQuestLogsReq=11141 GetQuestLogsReq value
     * @property {number} GetQuestLogsRsp=11142 GetQuestLogsRsp value
     * @property {number} ReceiveQuestLogRewardReq=11143 ReceiveQuestLogRewardReq value
     * @property {number} ReceiveQuestLogRewardRsp=11144 ReceiveQuestLogRewardRsp value
     * @property {number} UpQuestLogLevelReq=11145 UpQuestLogLevelReq value
     * @property {number} UpQuestLogLevelRsp=11146 UpQuestLogLevelRsp value
     * @property {number} TaskChangePush=11147 TaskChangePush value
     * @property {number} GetFriendSimpleRoleReq=11148 GetFriendSimpleRoleReq value
     * @property {number} GetFriendSimpleRoleRsp=11149 GetFriendSimpleRoleRsp value
     * @property {number} AddFriendPush=11150 AddFriendPush value
     * @property {number} RemoveFriendPush=11151 RemoveFriendPush value
     * @property {number} AddBlacklistReq=11152 AddBlacklistReq value
     * @property {number} AddBlacklistRsp=11153 AddBlacklistRsp value
     * @property {number} RemoveBlacklistReq=11154 RemoveBlacklistReq value
     * @property {number} RemoveBlacklistRsp=11155 RemoveBlacklistRsp value
     * @property {number} UpdateFriendOnlineTime=11156 UpdateFriendOnlineTime value
     * @property {number} UpdatFriendPowerScore=11157 UpdatFriendPowerScore value
     * @property {number} AddFriendReq=11158 AddFriendReq value
     * @property {number} AddFriendRsp=11159 AddFriendRsp value
     * @property {number} RemoveFriendReq=11160 RemoveFriendReq value
     * @property {number} RemoveFriendRsp=11161 RemoveFriendRsp value
     * @property {number} ConfirmFriendReq=11162 ConfirmFriendReq value
     * @property {number} ConfirmFriendRsp=11163 ConfirmFriendRsp value
     * @property {number} RemoveFriendApplyReq=11164 RemoveFriendApplyReq value
     * @property {number} RemoveFriendApplyRsp=11165 RemoveFriendApplyRsp value
     * @property {number} RecommendFriendReq=11166 RecommendFriendReq value
     * @property {number} RecommendFriendRsp=11167 RecommendFriendRsp value
     * @property {number} FindFriendReq=11168 FindFriendReq value
     * @property {number} FindFriendRsp=11169 FindFriendRsp value
     * @property {number} GivingGiftReq=11170 GivingGiftReq value
     * @property {number} GivingGiftRsp=11171 GivingGiftRsp value
     * @property {number} RecvGiftReq=11172 RecvGiftReq value
     * @property {number} RecvGiftRsp=11173 RecvGiftRsp value
     * @property {number} SyncGiftList=11174 SyncGiftList value
     * @property {number} GiftPush=11175 GiftPush value
     * @property {number} UseRedeemCodeReq=11176 UseRedeemCodeReq value
     * @property {number} UseRedeemCodeRsp=11177 UseRedeemCodeRsp value
     * @property {number} GetHeroRankReq=11178 GetHeroRankReq value
     * @property {number} GetHeroRankRsp=11179 GetHeroRankRsp value
     * @property {number} GetRankReq=11180 GetRankReq value
     * @property {number} GetRankRsp=11181 GetRankRsp value
     * @property {number} GetStaminaInfoReq=11182 GetStaminaInfoReq value
     * @property {number} GetStaminaInfoRsp=11183 GetStaminaInfoRsp value
     * @property {number} BuyStaminaReq=11184 BuyStaminaReq value
     * @property {number} BuyStaminaRsp=11185 BuyStaminaRsp value
     * @property {number} SetAutoDisbandReq=11186 SetAutoDisbandReq value
     * @property {number} SetAutoDisbandRsp=11187 SetAutoDisbandRsp value
     * @property {number} GetPatrolInfoReq=11188 GetPatrolInfoReq value
     * @property {number} GetPatrolInfoRsp=11189 GetPatrolInfoRsp value
     * @property {number} ReceivePatrolRewardReq=11190 ReceivePatrolRewardReq value
     * @property {number} ReceivePatrolRewardRsp=11191 ReceivePatrolRewardRsp value
     * @property {number} ReceiveQuickPatrolRewardReq=11192 ReceiveQuickPatrolRewardReq value
     * @property {number} ReceiveQuickPatrolRewardRsp=11193 ReceiveQuickPatrolRewardRsp value
     * @property {number} LimitedRewardPush=11194 LimitedRewardPush value
     * @property {number} GetLimitedRewardReq=11195 GetLimitedRewardReq value
     * @property {number} GetLimitedRewardRsp=11196 GetLimitedRewardRsp value
     * @property {number} GetExploreStageInfoMapReq=11197 GetExploreStageInfoMapReq value
     * @property {number} GetExploreStageInfoMapRsp=11198 GetExploreStageInfoMapRsp value
     * @property {number} SweepExploreStageReq=11199 SweepExploreStageReq value
     * @property {number} SweepExploreStageRsp=11200 SweepExploreStageRsp value
     * @property {number} SweepExploreStageOneClickReq=11201 SweepExploreStageOneClickReq value
     * @property {number} SweepExploreStageOneClickRsp=11202 SweepExploreStageOneClickRsp value
     * @property {number} ReceiveExploreStageFirstRewardReq=11203 ReceiveExploreStageFirstRewardReq value
     * @property {number} ReceiveExploreStageFirstRewardRsp=11204 ReceiveExploreStageFirstRewardRsp value
     * @property {number} DailyRewardPush=11205 DailyRewardPush value
     * @property {number} GetDailyRewardReq=11206 GetDailyRewardReq value
     * @property {number} GetDailyRewardRsp=11207 GetDailyRewardRsp value
     * @property {number} UseHeroPieceOneClickReq=11208 UseHeroPieceOneClickReq value
     * @property {number} UseHeroPieceOneClickRsp=11209 UseHeroPieceOneClickRsp value
     * @property {number} GetFixedShopInfoMapReq=11210 GetFixedShopInfoMapReq value
     * @property {number} GetFixedShopInfoMapRsp=11211 GetFixedShopInfoMapRsp value
     * @property {number} BuyFixedShopCommodityReq=11212 BuyFixedShopCommodityReq value
     * @property {number} BuyFixedShopCommodityRsp=11213 BuyFixedShopCommodityRsp value
     * @property {number} StartPayReq=11214 StartPayReq value
     * @property {number} StartPayRsp=11215 StartPayRsp value
     * @property {number} EndPayReq=11216 EndPayReq value
     * @property {number} EndPayRsp=11217 EndPayRsp value
     * @property {number} PayByVoucherReq=11218 PayByVoucherReq value
     * @property {number} PayByVoucherRsp=11219 PayByVoucherRsp value
     * @property {number} GetPendingPayOrderIdReq=11220 GetPendingPayOrderIdReq value
     * @property {number} GetPendingPayOrderIdRsp=11221 GetPendingPayOrderIdRsp value
     * @property {number} ClearPendingPayOrderIdReq=11222 ClearPendingPayOrderIdReq value
     * @property {number} ClearPendingPayOrderIdRsp=11223 ClearPendingPayOrderIdRsp value
     * @property {number} DeliverGoodsPush=11224 DeliverGoodsPush value
     * @property {number} GetPayInfoReq=11225 GetPayInfoReq value
     * @property {number} GetPayInfoRsp=11226 GetPayInfoRsp value
     * @property {number} HeroCollectionPush=11227 HeroCollectionPush value
     * @property {number} GetHeroCollectionRewardReq=11228 GetHeroCollectionRewardReq value
     * @property {number} GetHeroCollectionRewardRsp=11229 GetHeroCollectionRewardRsp value
     * @property {number} GetDailyShopInfoReq=11230 GetDailyShopInfoReq value
     * @property {number} GetDailyShopInfoRsp=11231 GetDailyShopInfoRsp value
     * @property {number} RefreshDailyShopReq=11232 RefreshDailyShopReq value
     * @property {number} RefreshDailyShopRsp=11233 RefreshDailyShopRsp value
     * @property {number} BuyDailyShopCommodityReq=11234 BuyDailyShopCommodityReq value
     * @property {number} BuyDailyShopCommodityRsp=11235 BuyDailyShopCommodityRsp value
     * @property {number} BuyDailyShopCommodityOneClickReq=11236 BuyDailyShopCommodityOneClickReq value
     * @property {number} BuyDailyShopCommodityOneClickRsp=11237 BuyDailyShopCommodityOneClickRsp value
     * @property {number} BreakEggPush=11238 BreakEggPush value
     * @property {number} ReceiveMainStageDoubleRewardsReq=11239 ReceiveMainStageDoubleRewardsReq value
     * @property {number} ReceiveMainStageDoubleRewardsRsp=11240 ReceiveMainStageDoubleRewardsRsp value
     * @property {number} GetVipInfoReq=11241 GetVipInfoReq value
     * @property {number} GetVipInfoRsp=11242 GetVipInfoRsp value
     * @property {number} ReceiveVipDailyGiftReq=11243 ReceiveVipDailyGiftReq value
     * @property {number} ReceiveVipDailyGiftRsp=11244 ReceiveVipDailyGiftRsp value
     * @property {number} BuyVipGiftReq=11245 BuyVipGiftReq value
     * @property {number} BuyVipGiftRsp=11246 BuyVipGiftRsp value
     * @property {number} ReviveOnStageReq=11247 ReviveOnStageReq value
     * @property {number} ReviveOnStageRsp=11248 ReviveOnStageRsp value
     * @property {number} WatchAdReq=11249 WatchAdReq value
     * @property {number} WatchAdRsp=11250 WatchAdRsp value
     * @property {number} GetPrivilegeInfoReq=11251 GetPrivilegeInfoReq value
     * @property {number} GetPrivilegeInfoRsp=11252 GetPrivilegeInfoRsp value
     * @property {number} ReceivePrivilegeDailyRewardsReq=11253 ReceivePrivilegeDailyRewardsReq value
     * @property {number} ReceivePrivilegeDailyRewardsRsp=11254 ReceivePrivilegeDailyRewardsRsp value
     * @property {number} ReceiveMonthlyPassAdditionalRewardsReq=11255 ReceiveMonthlyPassAdditionalRewardsReq value
     * @property {number} ReceiveMonthlyPassAdditionalRewardsRsp=11256 ReceiveMonthlyPassAdditionalRewardsRsp value
     * @property {number} GetBattlePassInfoMapReq=11257 GetBattlePassInfoMapReq value
     * @property {number} GetBattlePassInfoMapRsp=11258 GetBattlePassInfoMapRsp value
     * @property {number} ReceiveBattlePassTaskRewardsReq=11259 ReceiveBattlePassTaskRewardsReq value
     * @property {number} ReceiveBattlePassTaskRewardsRsp=11260 ReceiveBattlePassTaskRewardsRsp value
     * @property {number} BuyBattlePassLevelReq=11263 BuyBattlePassLevelReq value
     * @property {number} BuyBattlePassLevelRsp=11264 BuyBattlePassLevelRsp value
     * @property {number} BuyGoldReq=11265 BuyGoldReq value
     * @property {number} BuyGoldRsp=11266 BuyGoldRsp value
     * @property {number} ClientDebugPush=11267 ClientDebugPush value
     * @property {number} VipBonusPush=11268 VipBonusPush value
     * @property {number} VipLevelUpPush=11269 VipLevelUpPush value
     * @property {number} WorldBossDataPush=11270 WorldBossDataPush value
     * @property {number} WorldBossSweepReq=11271 WorldBossSweepReq value
     * @property {number} WorldBossSweepRsp=11272 WorldBossSweepRsp value
     * @property {number} DailyChallengeLevelReq=11273 DailyChallengeLevelReq value
     * @property {number} DailyChallengeLevelRsp=11274 DailyChallengeLevelRsp value
     * @property {number} DailyChallengeRewardReq=11275 DailyChallengeRewardReq value
     * @property {number} DailyChallengeRewardRsp=11276 DailyChallengeRewardRsp value
     * @property {number} DailyChallengeSweepReq=11277 DailyChallengeSweepReq value
     * @property {number} DailyChallengeSweepRsp=11278 DailyChallengeSweepRsp value
     * @property {number} DailyChallengeWatchAdvReq=11279 DailyChallengeWatchAdvReq value
     * @property {number} DailyChallengeWatchAdvRsp=11280 DailyChallengeWatchAdvRsp value
     * @property {number} DailyChallengeDataPush=11281 DailyChallengeDataPush value
     * @property {number} GetNewPlayerTrialMapReq=11282 GetNewPlayerTrialMapReq value
     * @property {number} GetNewPlayerTrialMapRsp=11283 GetNewPlayerTrialMapRsp value
     * @property {number} ReceiveNewPlayerTrialTaskRewardsReq=11284 ReceiveNewPlayerTrialTaskRewardsReq value
     * @property {number} ReceiveNewPlayerTrialTaskRewardsRsp=11285 ReceiveNewPlayerTrialTaskRewardsRsp value
     * @property {number} ReceiveNewPlayerTrialScoreRewardsReq=11286 ReceiveNewPlayerTrialScoreRewardsReq value
     * @property {number} ReceiveNewPlayerTrialScoreRewardsRsp=11287 ReceiveNewPlayerTrialScoreRewardsRsp value
     * @property {number} GetClimbTowerInfoReq=11288 GetClimbTowerInfoReq value
     * @property {number} GetClimbTowerInfoRsp=11289 GetClimbTowerInfoRsp value
     * @property {number} ReceiveClimbTowerDailyRewardsReq=11290 ReceiveClimbTowerDailyRewardsReq value
     * @property {number} ReceiveClimbTowerDailyRewardsRsp=11291 ReceiveClimbTowerDailyRewardsRsp value
     * @property {number} ReceiveClimbTowerClearStageRewardsReq=11292 ReceiveClimbTowerClearStageRewardsReq value
     * @property {number} ReceiveClimbTowerClearStageRewardsRsp=11293 ReceiveClimbTowerClearStageRewardsRsp value
     * @property {number} QuickFinishClimbTowerStageReq=11294 QuickFinishClimbTowerStageReq value
     * @property {number} QuickFinishClimbTowerStageRsp=11295 QuickFinishClimbTowerStageRsp value
     * @property {number} UnlockedHeroAlbumPush=11296 UnlockedHeroAlbumPush value
     * @property {number} ChangedNewPlayerTrialScorePush=11297 ChangedNewPlayerTrialScorePush value
     * @property {number} GetHonorRollMapReq=11298 GetHonorRollMapReq value
     * @property {number} GetHonorRollMapRsp=11299 GetHonorRollMapRsp value
     * @property {number} ReceiveHonorRollTasksRewardsReq=11300 ReceiveHonorRollTasksRewardsReq value
     * @property {number} ReceiveHonorRollTasksRewardsRsp=11301 ReceiveHonorRollTasksRewardsRsp value
     * @property {number} ActivitiesPush=11302 ActivitiesPush value
     * @property {number} SetClientDataReq=11303 SetClientDataReq value
     * @property {number} SetClientDataRsp=11304 SetClientDataRsp value
     * @property {number} ChangedScrollPaintingPush=11305 ChangedScrollPaintingPush value
     * @property {number} GetServerTimeReq=11306 GetServerTimeReq value
     * @property {number} GetServerTimeRsp=11307 GetServerTimeRsp value
     * @property {number} PingDelay=11308 PingDelay value
     * @property {number} GetRecommendGuildsReq=11309 GetRecommendGuildsReq value
     * @property {number} GetRecommendGuildsRsp=11310 GetRecommendGuildsRsp value
     * @property {number} GetGuildInfoReq=11311 GetGuildInfoReq value
     * @property {number} GetGuildInfoRsp=11312 GetGuildInfoRsp value
     * @property {number} CreateGuildReq=11313 CreateGuildReq value
     * @property {number} CreateGuildRsp=11314 CreateGuildRsp value
     * @property {number} ApplyJoinGuildReq=11315 ApplyJoinGuildReq value
     * @property {number} ApplyJoinGuildRsp=11316 ApplyJoinGuildRsp value
     * @property {number} ProcessGuildApplyReq=11317 ProcessGuildApplyReq value
     * @property {number} ProcessGuildApplyRsp=11318 ProcessGuildApplyRsp value
     * @property {number} QuitGuildReq=11319 QuitGuildReq value
     * @property {number} QuitGuildRsp=11320 QuitGuildRsp value
     * @property {number} KickGuildMemberReq=11321 KickGuildMemberReq value
     * @property {number} KickGuildMemberRsp=11322 KickGuildMemberRsp value
     * @property {number} SetGuildNameAndFlagReq=11323 SetGuildNameAndFlagReq value
     * @property {number} SetGuildNameAndFlagRsp=11324 SetGuildNameAndFlagRsp value
     * @property {number} SetGuildMemberJobReq=11325 SetGuildMemberJobReq value
     * @property {number} SetGuildMemberJobRsp=11326 SetGuildMemberJobRsp value
     * @property {number} SignGuildReq=11327 SignGuildReq value
     * @property {number} SignGuildRsp=11328 SignGuildRsp value
     * @property {number} BargainGuildReq=11329 BargainGuildReq value
     * @property {number} BargainGuildRsp=11330 BargainGuildRsp value
     * @property {number} BuyGuildGiftReq=11331 BuyGuildGiftReq value
     * @property {number} BuyGuildGiftRsp=11332 BuyGuildGiftRsp value
     * @property {number} UpgradeGuildSkillReq=11333 UpgradeGuildSkillReq value
     * @property {number} UpgradeGuildSkillRsp=11334 UpgradeGuildSkillRsp value
     * @property {number} ResetGuildSkillReq=11335 ResetGuildSkillReq value
     * @property {number} ResetGuildSkillRsp=11336 ResetGuildSkillRsp value
     * @property {number} ReceiveGuildDailyTasksRewardsReq=11337 ReceiveGuildDailyTasksRewardsReq value
     * @property {number} ReceiveGuildDailyTasksRewardsRsp=11338 ReceiveGuildDailyTasksRewardsRsp value
     * @property {number} ReceiveGuildTaskChestRewardsReq=11339 ReceiveGuildTaskChestRewardsReq value
     * @property {number} ReceiveGuildTaskChestRewardsRsp=11340 ReceiveGuildTaskChestRewardsRsp value
     * @property {number} SetGuildNoticeReq=11341 SetGuildNoticeReq value
     * @property {number} SetGuildNoticeRsp=11342 SetGuildNoticeRsp value
     * @property {number} GetJoinGuildRequestsReq=11343 GetJoinGuildRequestsReq value
     * @property {number} GetJoinGuildRequestsRsp=11344 GetJoinGuildRequestsRsp value
     * @property {number} ApplyJoinGuildOneClickReq=11345 ApplyJoinGuildOneClickReq value
     * @property {number} ApplyJoinGuildOneClickRsp=11346 ApplyJoinGuildOneClickRsp value
     * @property {number} ImpeachGuildLeaderReq=11347 ImpeachGuildLeaderReq value
     * @property {number} ImpeachGuildLeaderRsp=11348 ImpeachGuildLeaderRsp value
     * @property {number} SetGuildNeedCheckReq=11349 SetGuildNeedCheckReq value
     * @property {number} SetGuildNeedCheckRsp=11350 SetGuildNeedCheckRsp value
     * @property {number} GuildChatChannelPush=11351 GuildChatChannelPush value
     * @property {number} GetGuildRankReq=11352 GetGuildRankReq value
     * @property {number} GetGuildRankRsp=11353 GetGuildRankRsp value
     * @property {number} GetGuildRankInfoReq=11354 GetGuildRankInfoReq value
     * @property {number} GetGuildRankInfoRsp=11355 GetGuildRankInfoRsp value
     * @property {number} GuildBossDataPush=11356 GuildBossDataPush value
     * @property {number} GetGuildBossRankReq=11357 GetGuildBossRankReq value
     * @property {number} GetGuildBossRankRsp=11358 GetGuildBossRankRsp value
     * @property {number} JoinedGuildPush=11359 JoinedGuildPush value
     * @property {number} KickedOutGuildPush=11360 KickedOutGuildPush value
     * @property {number} QuickFinGuildBossReq=11361 QuickFinGuildBossReq value
     * @property {number} QuickFinGuildBossRsp=11362 QuickFinGuildBossRsp value
     * @property {number} Mobile37PopupsPush=11363 Mobile37PopupsPush value
     * @property {number} GuildBossRankNotify=11364 GuildBossRankNotify value
     * @property {number} RejectAllGuildApplyReq=11365 RejectAllGuildApplyReq value
     * @property {number} RejectAllGuildApplyRsp=11366 RejectAllGuildApplyRsp value
     * @property {number} NewDayPush=11367 NewDayPush value
     * @property {number} GetSignInGiftInfoReq=11368 GetSignInGiftInfoReq value
     * @property {number} GetSignInGiftInfoRsp=11369 GetSignInGiftInfoRsp value
     * @property {number} ReceiveSignInGiftReq=11370 ReceiveSignInGiftReq value
     * @property {number} ReceiveSignInGiftRsp=11371 ReceiveSignInGiftRsp value
     * @property {number} GuileLevelUpPush=11372 GuileLevelUpPush value
     * @property {number} GetActivityHeroGrowMapReq=11373 GetActivityHeroGrowMapReq value
     * @property {number} GetActivityHeroGrowMapRsp=11374 GetActivityHeroGrowMapRsp value
     * @property {number} ReceiveActivityHeroGrowRewardReq=11375 ReceiveActivityHeroGrowRewardReq value
     * @property {number} ReceiveActivityHeroGrowRewardRsp=11376 ReceiveActivityHeroGrowRewardRsp value
     * @property {number} GetActivityGachaUpMapReq=11377 GetActivityGachaUpMapReq value
     * @property {number} GetActivityGachaUpMapRsp=11378 GetActivityGachaUpMapRsp value
     * @property {number} ReceiveActivityGachaUpTasksRewardsReq=11379 ReceiveActivityGachaUpTasksRewardsReq value
     * @property {number} ReceiveActivityGachaUpTasksRewardsRsp=11380 ReceiveActivityGachaUpTasksRewardsRsp value
     * @property {number} GetFincaBattleInfoReq=11381 GetFincaBattleInfoReq value
     * @property {number} GetFincaBattleInfoRsp=11382 GetFincaBattleInfoRsp value
     * @property {number} FincaBattleFightReq=11385 FincaBattleFightReq value
     * @property {number} FincaBattleFightRsp=11386 FincaBattleFightRsp value
     * @property {number} SetFincaBattleHeroIdsReq=11387 SetFincaBattleHeroIdsReq value
     * @property {number} SetFincaBattleHeroIdsRsp=11388 SetFincaBattleHeroIdsRsp value
     * @property {number} SetFincaBattleBookIdsReq=11389 SetFincaBattleBookIdsReq value
     * @property {number} SetFincaBattleBookIdsRsp=11390 SetFincaBattleBookIdsRsp value
     * @property {number} GetFincaBattleOpponentsReq=11391 GetFincaBattleOpponentsReq value
     * @property {number} GetFincaBattleOpponentsRsp=11392 GetFincaBattleOpponentsRsp value
     * @property {number} GetFincaBattleFightRecordsReq=11393 GetFincaBattleFightRecordsReq value
     * @property {number} GetFincaBattleFightRecordsRsp=11394 GetFincaBattleFightRecordsRsp value
     * @property {number} GuildMemberChangedPush=11395 GuildMemberChangedPush value
     * @property {number} QueryGuildInfoReq=11396 QueryGuildInfoReq value
     * @property {number} QueryGuildInfoRsp=11397 QueryGuildInfoRsp value
     * @property {number} GetSimpleRankReq=11398 GetSimpleRankReq value
     * @property {number} GetSimpleRankRsp=11399 GetSimpleRankRsp value
     * @property {number} GetMainStageCleardRecordsReq=11400 GetMainStageCleardRecordsReq value
     * @property {number} GetMainStageCleardRecordsRsp=11401 GetMainStageCleardRecordsRsp value
     * @property {number} GetCumulativeRechargeMapReq=11402 GetCumulativeRechargeMapReq value
     * @property {number} GetCumulativeRechargeMapRsp=11403 GetCumulativeRechargeMapRsp value
     * @property {number} ReceiveCumulativeRechargeRewardReq=11404 ReceiveCumulativeRechargeRewardReq value
     * @property {number} ReceiveCumulativeRechargeRewardRsp=11405 ReceiveCumulativeRechargeRewardRsp value
     * @property {number} GetEliteStageInfoReq=11406 GetEliteStageInfoReq value
     * @property {number} GetEliteStageInfoRsp=11407 GetEliteStageInfoRsp value
     * @property {number} ReceiveEliteClearStageRewardsReq=11408 ReceiveEliteClearStageRewardsReq value
     * @property {number} ReceiveEliteClearStageRewardsRsp=11409 ReceiveEliteClearStageRewardsRsp value
     * @property {number} JoinChatChannelReq=12000 JoinChatChannelReq value
     * @property {number} JoinChatChannelRsp=12001 JoinChatChannelRsp value
     * @property {number} LeaveChatChannelReq=12002 LeaveChatChannelReq value
     * @property {number} LeaveChatChannelRsp=12003 LeaveChatChannelRsp value
     * @property {number} SendChatMessageReq=12004 SendChatMessageReq value
     * @property {number} SendChatMessageRsp=12005 SendChatMessageRsp value
     * @property {number} ChatMessagePush=12006 ChatMessagePush value
     * @property {number} DefaultChatChannelsPush=12007 DefaultChatChannelsPush value
     * @property {number} JoinGuildRequestReplyPush=13000 JoinGuildRequestReplyPush value
     */
    proto.Ptl = (function() {
        var valuesById = {}, values = Object.create(valuesById);
        values[valuesById[0] = "UNSPECIFIED"] = 0;
        values[valuesById[10000] = "Ping"] = 10000;
        values[valuesById[10001] = "LoginReq"] = 10001;
        values[valuesById[10002] = "LoginRsp"] = 10002;
        values[valuesById[10003] = "Pong"] = 10003;
        values[valuesById[11000] = "CreateRoleReq"] = 11000;
        values[valuesById[11001] = "CreateRoleRsp"] = 11001;
        values[valuesById[11002] = "SyncRolePush"] = 11002;
        values[valuesById[11007] = "ItemChangePush"] = 11007;
        values[valuesById[11012] = "GetHeroBagReq"] = 11012;
        values[valuesById[11013] = "GetHeroBagRsp"] = 11013;
        values[valuesById[11014] = "SetTeamSlotReq"] = 11014;
        values[valuesById[11015] = "SetTeamSlotRsp"] = 11015;
        values[valuesById[11016] = "UpTeamSlotLevelReq"] = 11016;
        values[valuesById[11017] = "UpTeamSlotLevelRsp"] = 11017;
        values[valuesById[11018] = "ResetTeamSlotLevelReq"] = 11018;
        values[valuesById[11019] = "ResetTeamSlotLevelRsp"] = 11019;
        values[valuesById[11020] = "UpHeroStarReq"] = 11020;
        values[valuesById[11021] = "UpHeroStarRsp"] = 11021;
        values[valuesById[11022] = "ResetHeroStarReq"] = 11022;
        values[valuesById[11023] = "ResetHeroStarRsp"] = 11023;
        values[valuesById[11024] = "DisbandHeroesReq"] = 11024;
        values[valuesById[11025] = "DisbandHeroesRsp"] = 11025;
        values[valuesById[11026] = "UpHeroStarOneClickReq"] = 11026;
        values[valuesById[11027] = "UpHeroStarOneClickRsp"] = 11027;
        values[valuesById[11028] = "UpHeroBagCapacityReq"] = 11028;
        values[valuesById[11029] = "UpHeroBagCapacityRsp"] = 11029;
        values[valuesById[11030] = "ChangeEquipReq"] = 11030;
        values[valuesById[11031] = "ChangeEquipRsp"] = 11031;
        values[valuesById[11032] = "EnhanceEquipReq"] = 11032;
        values[valuesById[11033] = "EnhanceEquipRsp"] = 11033;
        values[valuesById[11034] = "RefineEquipReq"] = 11034;
        values[valuesById[11035] = "RefineEquipRsp"] = 11035;
        values[valuesById[11036] = "UpdateHeroMasterLv"] = 11036;
        values[valuesById[11037] = "ReceiveRecommendTeamRewardReq"] = 11037;
        values[valuesById[11038] = "ReceiveRecommendTeamRewardRsp"] = 11038;
        values[valuesById[11039] = "ReceiveHeroAlbumRewardReq"] = 11039;
        values[valuesById[11040] = "ReceiveHeroAlbumRewardRsp"] = 11040;
        values[valuesById[11041] = "UpLevelResonanceReq"] = 11041;
        values[valuesById[11042] = "UpLevelResonanceRsp"] = 11042;
        values[valuesById[11043] = "UpStarResonanceReq"] = 11043;
        values[valuesById[11044] = "UpStarResonanceRsp"] = 11044;
        values[valuesById[11045] = "DecomposeEquipReq"] = 11045;
        values[valuesById[11046] = "DecomposeEquipRsp"] = 11046;
        values[valuesById[11047] = "FeatherRecastReq"] = 11047;
        values[valuesById[11048] = "FeatherRecastRsp"] = 11048;
        values[valuesById[11049] = "FeatherRecastConfirmReq"] = 11049;
        values[valuesById[11050] = "FeatherRecastConfirmRsp"] = 11050;
        values[valuesById[11051] = "UpdateHeroPowerScore"] = 11051;
        values[valuesById[11052] = "UpdateRolePowerScore"] = 11052;
        values[valuesById[11053] = "FinishHeroStarStepReq"] = 11053;
        values[valuesById[11054] = "FinishHeroStarStepRsp"] = 11054;
        values[valuesById[11055] = "UpgradeGeneLevelReq"] = 11055;
        values[valuesById[11056] = "UpgradeGeneLevelRsp"] = 11056;
        values[valuesById[11057] = "UndressEquipReq"] = 11057;
        values[valuesById[11058] = "UndressEquipRsp"] = 11058;
        values[valuesById[11059] = "SwitchEquipReq"] = 11059;
        values[valuesById[11060] = "SwitchEquipRsp"] = 11060;
        values[valuesById[11061] = "UpgradeBookLevelReq"] = 11061;
        values[valuesById[11062] = "UpgradeBookLevelRsp"] = 11062;
        values[valuesById[11063] = "UpgradeBookStarReq"] = 11063;
        values[valuesById[11064] = "UpgradeBookStarRsp"] = 11064;
        values[valuesById[11065] = "TakeBookReq"] = 11065;
        values[valuesById[11066] = "TakeBookRsp"] = 11066;
        values[valuesById[11067] = "DropBookReq"] = 11067;
        values[valuesById[11068] = "DropBookRsp"] = 11068;
        values[valuesById[11069] = "UpdateBookSeriesData"] = 11069;
        values[valuesById[11070] = "GetScrollPaintingsReq"] = 11070;
        values[valuesById[11071] = "GetScrollPaintingsRsp"] = 11071;
        values[valuesById[11072] = "UpgradeScrollPaintingStarReq"] = 11072;
        values[valuesById[11073] = "UpgradeScrollPaintingStarRsp"] = 11073;
        values[valuesById[11074] = "GetSimpleRoleReq"] = 11074;
        values[valuesById[11075] = "GetSimpleRoleRsp"] = 11075;
        values[valuesById[11076] = "LockEquipReq"] = 11076;
        values[valuesById[11077] = "LockEquipRsp"] = 11077;
        values[valuesById[11078] = "ChangeRoleNameReq"] = 11078;
        values[valuesById[11079] = "ChangeRoleNameRsp"] = 11079;
        values[valuesById[11080] = "GetAvatarInfoReq"] = 11080;
        values[valuesById[11081] = "GetAvatarInfoRsp"] = 11081;
        values[valuesById[11082] = "SetHeadIconReq"] = 11082;
        values[valuesById[11083] = "SetHeadIconRsp"] = 11083;
        values[valuesById[11084] = "SetHeadFrameReq"] = 11084;
        values[valuesById[11085] = "SetHeadFrameRsp"] = 11085;
        values[valuesById[11086] = "SetChatBubbleReq"] = 11086;
        values[valuesById[11087] = "SetChatBubbleRsp"] = 11087;
        values[valuesById[11088] = "SetMainSceneReq"] = 11088;
        values[valuesById[11089] = "SetMainSceneRsp"] = 11089;
        values[valuesById[11090] = "BookFragmentSwitchReq"] = 11090;
        values[valuesById[11091] = "BookFragmentSwitchRsp"] = 11091;
        values[valuesById[11092] = "CombineBookFragmentReq"] = 11092;
        values[valuesById[11093] = "CombineBookFragmentRsp"] = 11093;
        values[valuesById[11094] = "RoleLevelUpPush"] = 11094;
        values[valuesById[11095] = "UpdateDropSum"] = 11095;
        values[valuesById[11096] = "GetMainStageInfoReq"] = 11096;
        values[valuesById[11097] = "GetMainStageInfoRsp"] = 11097;
        values[valuesById[11098] = "StartStageReq"] = 11098;
        values[valuesById[11099] = "StartStageRsp"] = 11099;
        values[valuesById[11100] = "FinishStageReq"] = 11100;
        values[valuesById[11101] = "FinishStageRsp"] = 11101;
        values[valuesById[11102] = "ReceiveMainFirstRewardReq"] = 11102;
        values[valuesById[11103] = "ReceiveMainFirstRewardRsp"] = 11103;
        values[valuesById[11104] = "GachaReq"] = 11104;
        values[valuesById[11105] = "GachaRsp"] = 11105;
        values[valuesById[11106] = "UseItemReq"] = 11106;
        values[valuesById[11107] = "UseItemRsp"] = 11107;
        values[valuesById[11108] = "GetOpenFunctionsReq"] = 11108;
        values[valuesById[11109] = "GetOpenFunctionsRsp"] = 11109;
        values[valuesById[11110] = "OpenFunctionChangePush"] = 11110;
        values[valuesById[11111] = "UpdateBookPowerScore"] = 11111;
        values[valuesById[11112] = "UseElixirReq"] = 11112;
        values[valuesById[11113] = "UseElixirRsp"] = 11113;
        values[valuesById[11114] = "FightInfoPush"] = 11114;
        values[valuesById[11115] = "ReceiveOpenFunctionRewardReq"] = 11115;
        values[valuesById[11116] = "ReceiveOpenFunctionRewardRsp"] = 11116;
        values[valuesById[11117] = "GetMailsReq"] = 11117;
        values[valuesById[11118] = "GetMailsRsp"] = 11118;
        values[valuesById[11119] = "ReceiveMailsRewardReq"] = 11119;
        values[valuesById[11120] = "ReceiveMailsRewardRsp"] = 11120;
        values[valuesById[11121] = "DeleteMailsReq"] = 11121;
        values[valuesById[11122] = "DeleteMailsRsp"] = 11122;
        values[valuesById[11123] = "NewMailsPush"] = 11123;
        values[valuesById[11124] = "GetDailyTasksReq"] = 11124;
        values[valuesById[11125] = "GetDailyTasksRsp"] = 11125;
        values[valuesById[11126] = "ReceiveDailyTaskRewardReq"] = 11126;
        values[valuesById[11127] = "ReceiveDailyTaskRewardRsp"] = 11127;
        values[valuesById[11128] = "ReceiveDailyActivityTaskRewardReq"] = 11128;
        values[valuesById[11129] = "ReceiveDailyActivityTaskRewardRsp"] = 11129;
        values[valuesById[11130] = "GetWeeklyTasksReq"] = 11130;
        values[valuesById[11131] = "GetWeeklyTasksRsp"] = 11131;
        values[valuesById[11132] = "ReceiveWeeklyTaskRewardReq"] = 11132;
        values[valuesById[11133] = "ReceiveWeeklyTaskRewardRsp"] = 11133;
        values[valuesById[11134] = "ReceiveWeeklyActivityTaskRewardReq"] = 11134;
        values[valuesById[11135] = "ReceiveWeeklyActivityTaskRewardRsp"] = 11135;
        values[valuesById[11136] = "GetAchievementTasksReq"] = 11136;
        values[valuesById[11137] = "GetAchievementTasksRsp"] = 11137;
        values[valuesById[11138] = "ReceiveAchievementTaskRewardReq"] = 11138;
        values[valuesById[11139] = "ReceiveAchievementTaskRewardRsp"] = 11139;
        values[valuesById[11140] = "AdvWatchDataPush"] = 11140;
        values[valuesById[11141] = "GetQuestLogsReq"] = 11141;
        values[valuesById[11142] = "GetQuestLogsRsp"] = 11142;
        values[valuesById[11143] = "ReceiveQuestLogRewardReq"] = 11143;
        values[valuesById[11144] = "ReceiveQuestLogRewardRsp"] = 11144;
        values[valuesById[11145] = "UpQuestLogLevelReq"] = 11145;
        values[valuesById[11146] = "UpQuestLogLevelRsp"] = 11146;
        values[valuesById[11147] = "TaskChangePush"] = 11147;
        values[valuesById[11148] = "GetFriendSimpleRoleReq"] = 11148;
        values[valuesById[11149] = "GetFriendSimpleRoleRsp"] = 11149;
        values[valuesById[11150] = "AddFriendPush"] = 11150;
        values[valuesById[11151] = "RemoveFriendPush"] = 11151;
        values[valuesById[11152] = "AddBlacklistReq"] = 11152;
        values[valuesById[11153] = "AddBlacklistRsp"] = 11153;
        values[valuesById[11154] = "RemoveBlacklistReq"] = 11154;
        values[valuesById[11155] = "RemoveBlacklistRsp"] = 11155;
        values[valuesById[11156] = "UpdateFriendOnlineTime"] = 11156;
        values[valuesById[11157] = "UpdatFriendPowerScore"] = 11157;
        values[valuesById[11158] = "AddFriendReq"] = 11158;
        values[valuesById[11159] = "AddFriendRsp"] = 11159;
        values[valuesById[11160] = "RemoveFriendReq"] = 11160;
        values[valuesById[11161] = "RemoveFriendRsp"] = 11161;
        values[valuesById[11162] = "ConfirmFriendReq"] = 11162;
        values[valuesById[11163] = "ConfirmFriendRsp"] = 11163;
        values[valuesById[11164] = "RemoveFriendApplyReq"] = 11164;
        values[valuesById[11165] = "RemoveFriendApplyRsp"] = 11165;
        values[valuesById[11166] = "RecommendFriendReq"] = 11166;
        values[valuesById[11167] = "RecommendFriendRsp"] = 11167;
        values[valuesById[11168] = "FindFriendReq"] = 11168;
        values[valuesById[11169] = "FindFriendRsp"] = 11169;
        values[valuesById[11170] = "GivingGiftReq"] = 11170;
        values[valuesById[11171] = "GivingGiftRsp"] = 11171;
        values[valuesById[11172] = "RecvGiftReq"] = 11172;
        values[valuesById[11173] = "RecvGiftRsp"] = 11173;
        values[valuesById[11174] = "SyncGiftList"] = 11174;
        values[valuesById[11175] = "GiftPush"] = 11175;
        values[valuesById[11176] = "UseRedeemCodeReq"] = 11176;
        values[valuesById[11177] = "UseRedeemCodeRsp"] = 11177;
        values[valuesById[11178] = "GetHeroRankReq"] = 11178;
        values[valuesById[11179] = "GetHeroRankRsp"] = 11179;
        values[valuesById[11180] = "GetRankReq"] = 11180;
        values[valuesById[11181] = "GetRankRsp"] = 11181;
        values[valuesById[11182] = "GetStaminaInfoReq"] = 11182;
        values[valuesById[11183] = "GetStaminaInfoRsp"] = 11183;
        values[valuesById[11184] = "BuyStaminaReq"] = 11184;
        values[valuesById[11185] = "BuyStaminaRsp"] = 11185;
        values[valuesById[11186] = "SetAutoDisbandReq"] = 11186;
        values[valuesById[11187] = "SetAutoDisbandRsp"] = 11187;
        values[valuesById[11188] = "GetPatrolInfoReq"] = 11188;
        values[valuesById[11189] = "GetPatrolInfoRsp"] = 11189;
        values[valuesById[11190] = "ReceivePatrolRewardReq"] = 11190;
        values[valuesById[11191] = "ReceivePatrolRewardRsp"] = 11191;
        values[valuesById[11192] = "ReceiveQuickPatrolRewardReq"] = 11192;
        values[valuesById[11193] = "ReceiveQuickPatrolRewardRsp"] = 11193;
        values[valuesById[11194] = "LimitedRewardPush"] = 11194;
        values[valuesById[11195] = "GetLimitedRewardReq"] = 11195;
        values[valuesById[11196] = "GetLimitedRewardRsp"] = 11196;
        values[valuesById[11197] = "GetExploreStageInfoMapReq"] = 11197;
        values[valuesById[11198] = "GetExploreStageInfoMapRsp"] = 11198;
        values[valuesById[11199] = "SweepExploreStageReq"] = 11199;
        values[valuesById[11200] = "SweepExploreStageRsp"] = 11200;
        values[valuesById[11201] = "SweepExploreStageOneClickReq"] = 11201;
        values[valuesById[11202] = "SweepExploreStageOneClickRsp"] = 11202;
        values[valuesById[11203] = "ReceiveExploreStageFirstRewardReq"] = 11203;
        values[valuesById[11204] = "ReceiveExploreStageFirstRewardRsp"] = 11204;
        values[valuesById[11205] = "DailyRewardPush"] = 11205;
        values[valuesById[11206] = "GetDailyRewardReq"] = 11206;
        values[valuesById[11207] = "GetDailyRewardRsp"] = 11207;
        values[valuesById[11208] = "UseHeroPieceOneClickReq"] = 11208;
        values[valuesById[11209] = "UseHeroPieceOneClickRsp"] = 11209;
        values[valuesById[11210] = "GetFixedShopInfoMapReq"] = 11210;
        values[valuesById[11211] = "GetFixedShopInfoMapRsp"] = 11211;
        values[valuesById[11212] = "BuyFixedShopCommodityReq"] = 11212;
        values[valuesById[11213] = "BuyFixedShopCommodityRsp"] = 11213;
        values[valuesById[11214] = "StartPayReq"] = 11214;
        values[valuesById[11215] = "StartPayRsp"] = 11215;
        values[valuesById[11216] = "EndPayReq"] = 11216;
        values[valuesById[11217] = "EndPayRsp"] = 11217;
        values[valuesById[11218] = "PayByVoucherReq"] = 11218;
        values[valuesById[11219] = "PayByVoucherRsp"] = 11219;
        values[valuesById[11220] = "GetPendingPayOrderIdReq"] = 11220;
        values[valuesById[11221] = "GetPendingPayOrderIdRsp"] = 11221;
        values[valuesById[11222] = "ClearPendingPayOrderIdReq"] = 11222;
        values[valuesById[11223] = "ClearPendingPayOrderIdRsp"] = 11223;
        values[valuesById[11224] = "DeliverGoodsPush"] = 11224;
        values[valuesById[11225] = "GetPayInfoReq"] = 11225;
        values[valuesById[11226] = "GetPayInfoRsp"] = 11226;
        values[valuesById[11227] = "HeroCollectionPush"] = 11227;
        values[valuesById[11228] = "GetHeroCollectionRewardReq"] = 11228;
        values[valuesById[11229] = "GetHeroCollectionRewardRsp"] = 11229;
        values[valuesById[11230] = "GetDailyShopInfoReq"] = 11230;
        values[valuesById[11231] = "GetDailyShopInfoRsp"] = 11231;
        values[valuesById[11232] = "RefreshDailyShopReq"] = 11232;
        values[valuesById[11233] = "RefreshDailyShopRsp"] = 11233;
        values[valuesById[11234] = "BuyDailyShopCommodityReq"] = 11234;
        values[valuesById[11235] = "BuyDailyShopCommodityRsp"] = 11235;
        values[valuesById[11236] = "BuyDailyShopCommodityOneClickReq"] = 11236;
        values[valuesById[11237] = "BuyDailyShopCommodityOneClickRsp"] = 11237;
        values[valuesById[11238] = "BreakEggPush"] = 11238;
        values[valuesById[11239] = "ReceiveMainStageDoubleRewardsReq"] = 11239;
        values[valuesById[11240] = "ReceiveMainStageDoubleRewardsRsp"] = 11240;
        values[valuesById[11241] = "GetVipInfoReq"] = 11241;
        values[valuesById[11242] = "GetVipInfoRsp"] = 11242;
        values[valuesById[11243] = "ReceiveVipDailyGiftReq"] = 11243;
        values[valuesById[11244] = "ReceiveVipDailyGiftRsp"] = 11244;
        values[valuesById[11245] = "BuyVipGiftReq"] = 11245;
        values[valuesById[11246] = "BuyVipGiftRsp"] = 11246;
        values[valuesById[11247] = "ReviveOnStageReq"] = 11247;
        values[valuesById[11248] = "ReviveOnStageRsp"] = 11248;
        values[valuesById[11249] = "WatchAdReq"] = 11249;
        values[valuesById[11250] = "WatchAdRsp"] = 11250;
        values[valuesById[11251] = "GetPrivilegeInfoReq"] = 11251;
        values[valuesById[11252] = "GetPrivilegeInfoRsp"] = 11252;
        values[valuesById[11253] = "ReceivePrivilegeDailyRewardsReq"] = 11253;
        values[valuesById[11254] = "ReceivePrivilegeDailyRewardsRsp"] = 11254;
        values[valuesById[11255] = "ReceiveMonthlyPassAdditionalRewardsReq"] = 11255;
        values[valuesById[11256] = "ReceiveMonthlyPassAdditionalRewardsRsp"] = 11256;
        values[valuesById[11257] = "GetBattlePassInfoMapReq"] = 11257;
        values[valuesById[11258] = "GetBattlePassInfoMapRsp"] = 11258;
        values[valuesById[11259] = "ReceiveBattlePassTaskRewardsReq"] = 11259;
        values[valuesById[11260] = "ReceiveBattlePassTaskRewardsRsp"] = 11260;
        values[valuesById[11263] = "BuyBattlePassLevelReq"] = 11263;
        values[valuesById[11264] = "BuyBattlePassLevelRsp"] = 11264;
        values[valuesById[11265] = "BuyGoldReq"] = 11265;
        values[valuesById[11266] = "BuyGoldRsp"] = 11266;
        values[valuesById[11267] = "ClientDebugPush"] = 11267;
        values[valuesById[11268] = "VipBonusPush"] = 11268;
        values[valuesById[11269] = "VipLevelUpPush"] = 11269;
        values[valuesById[11270] = "WorldBossDataPush"] = 11270;
        values[valuesById[11271] = "WorldBossSweepReq"] = 11271;
        values[valuesById[11272] = "WorldBossSweepRsp"] = 11272;
        values[valuesById[11273] = "DailyChallengeLevelReq"] = 11273;
        values[valuesById[11274] = "DailyChallengeLevelRsp"] = 11274;
        values[valuesById[11275] = "DailyChallengeRewardReq"] = 11275;
        values[valuesById[11276] = "DailyChallengeRewardRsp"] = 11276;
        values[valuesById[11277] = "DailyChallengeSweepReq"] = 11277;
        values[valuesById[11278] = "DailyChallengeSweepRsp"] = 11278;
        values[valuesById[11279] = "DailyChallengeWatchAdvReq"] = 11279;
        values[valuesById[11280] = "DailyChallengeWatchAdvRsp"] = 11280;
        values[valuesById[11281] = "DailyChallengeDataPush"] = 11281;
        values[valuesById[11282] = "GetNewPlayerTrialMapReq"] = 11282;
        values[valuesById[11283] = "GetNewPlayerTrialMapRsp"] = 11283;
        values[valuesById[11284] = "ReceiveNewPlayerTrialTaskRewardsReq"] = 11284;
        values[valuesById[11285] = "ReceiveNewPlayerTrialTaskRewardsRsp"] = 11285;
        values[valuesById[11286] = "ReceiveNewPlayerTrialScoreRewardsReq"] = 11286;
        values[valuesById[11287] = "ReceiveNewPlayerTrialScoreRewardsRsp"] = 11287;
        values[valuesById[11288] = "GetClimbTowerInfoReq"] = 11288;
        values[valuesById[11289] = "GetClimbTowerInfoRsp"] = 11289;
        values[valuesById[11290] = "ReceiveClimbTowerDailyRewardsReq"] = 11290;
        values[valuesById[11291] = "ReceiveClimbTowerDailyRewardsRsp"] = 11291;
        values[valuesById[11292] = "ReceiveClimbTowerClearStageRewardsReq"] = 11292;
        values[valuesById[11293] = "ReceiveClimbTowerClearStageRewardsRsp"] = 11293;
        values[valuesById[11294] = "QuickFinishClimbTowerStageReq"] = 11294;
        values[valuesById[11295] = "QuickFinishClimbTowerStageRsp"] = 11295;
        values[valuesById[11296] = "UnlockedHeroAlbumPush"] = 11296;
        values[valuesById[11297] = "ChangedNewPlayerTrialScorePush"] = 11297;
        values[valuesById[11298] = "GetHonorRollMapReq"] = 11298;
        values[valuesById[11299] = "GetHonorRollMapRsp"] = 11299;
        values[valuesById[11300] = "ReceiveHonorRollTasksRewardsReq"] = 11300;
        values[valuesById[11301] = "ReceiveHonorRollTasksRewardsRsp"] = 11301;
        values[valuesById[11302] = "ActivitiesPush"] = 11302;
        values[valuesById[11303] = "SetClientDataReq"] = 11303;
        values[valuesById[11304] = "SetClientDataRsp"] = 11304;
        values[valuesById[11305] = "ChangedScrollPaintingPush"] = 11305;
        values[valuesById[11306] = "GetServerTimeReq"] = 11306;
        values[valuesById[11307] = "GetServerTimeRsp"] = 11307;
        values[valuesById[11308] = "PingDelay"] = 11308;
        values[valuesById[11309] = "GetRecommendGuildsReq"] = 11309;
        values[valuesById[11310] = "GetRecommendGuildsRsp"] = 11310;
        values[valuesById[11311] = "GetGuildInfoReq"] = 11311;
        values[valuesById[11312] = "GetGuildInfoRsp"] = 11312;
        values[valuesById[11313] = "CreateGuildReq"] = 11313;
        values[valuesById[11314] = "CreateGuildRsp"] = 11314;
        values[valuesById[11315] = "ApplyJoinGuildReq"] = 11315;
        values[valuesById[11316] = "ApplyJoinGuildRsp"] = 11316;
        values[valuesById[11317] = "ProcessGuildApplyReq"] = 11317;
        values[valuesById[11318] = "ProcessGuildApplyRsp"] = 11318;
        values[valuesById[11319] = "QuitGuildReq"] = 11319;
        values[valuesById[11320] = "QuitGuildRsp"] = 11320;
        values[valuesById[11321] = "KickGuildMemberReq"] = 11321;
        values[valuesById[11322] = "KickGuildMemberRsp"] = 11322;
        values[valuesById[11323] = "SetGuildNameAndFlagReq"] = 11323;
        values[valuesById[11324] = "SetGuildNameAndFlagRsp"] = 11324;
        values[valuesById[11325] = "SetGuildMemberJobReq"] = 11325;
        values[valuesById[11326] = "SetGuildMemberJobRsp"] = 11326;
        values[valuesById[11327] = "SignGuildReq"] = 11327;
        values[valuesById[11328] = "SignGuildRsp"] = 11328;
        values[valuesById[11329] = "BargainGuildReq"] = 11329;
        values[valuesById[11330] = "BargainGuildRsp"] = 11330;
        values[valuesById[11331] = "BuyGuildGiftReq"] = 11331;
        values[valuesById[11332] = "BuyGuildGiftRsp"] = 11332;
        values[valuesById[11333] = "UpgradeGuildSkillReq"] = 11333;
        values[valuesById[11334] = "UpgradeGuildSkillRsp"] = 11334;
        values[valuesById[11335] = "ResetGuildSkillReq"] = 11335;
        values[valuesById[11336] = "ResetGuildSkillRsp"] = 11336;
        values[valuesById[11337] = "ReceiveGuildDailyTasksRewardsReq"] = 11337;
        values[valuesById[11338] = "ReceiveGuildDailyTasksRewardsRsp"] = 11338;
        values[valuesById[11339] = "ReceiveGuildTaskChestRewardsReq"] = 11339;
        values[valuesById[11340] = "ReceiveGuildTaskChestRewardsRsp"] = 11340;
        values[valuesById[11341] = "SetGuildNoticeReq"] = 11341;
        values[valuesById[11342] = "SetGuildNoticeRsp"] = 11342;
        values[valuesById[11343] = "GetJoinGuildRequestsReq"] = 11343;
        values[valuesById[11344] = "GetJoinGuildRequestsRsp"] = 11344;
        values[valuesById[11345] = "ApplyJoinGuildOneClickReq"] = 11345;
        values[valuesById[11346] = "ApplyJoinGuildOneClickRsp"] = 11346;
        values[valuesById[11347] = "ImpeachGuildLeaderReq"] = 11347;
        values[valuesById[11348] = "ImpeachGuildLeaderRsp"] = 11348;
        values[valuesById[11349] = "SetGuildNeedCheckReq"] = 11349;
        values[valuesById[11350] = "SetGuildNeedCheckRsp"] = 11350;
        values[valuesById[11351] = "GuildChatChannelPush"] = 11351;
        values[valuesById[11352] = "GetGuildRankReq"] = 11352;
        values[valuesById[11353] = "GetGuildRankRsp"] = 11353;
        values[valuesById[11354] = "GetGuildRankInfoReq"] = 11354;
        values[valuesById[11355] = "GetGuildRankInfoRsp"] = 11355;
        values[valuesById[11356] = "GuildBossDataPush"] = 11356;
        values[valuesById[11357] = "GetGuildBossRankReq"] = 11357;
        values[valuesById[11358] = "GetGuildBossRankRsp"] = 11358;
        values[valuesById[11359] = "JoinedGuildPush"] = 11359;
        values[valuesById[11360] = "KickedOutGuildPush"] = 11360;
        values[valuesById[11361] = "QuickFinGuildBossReq"] = 11361;
        values[valuesById[11362] = "QuickFinGuildBossRsp"] = 11362;
        values[valuesById[11363] = "Mobile37PopupsPush"] = 11363;
        values[valuesById[11364] = "GuildBossRankNotify"] = 11364;
        values[valuesById[11365] = "RejectAllGuildApplyReq"] = 11365;
        values[valuesById[11366] = "RejectAllGuildApplyRsp"] = 11366;
        values[valuesById[11367] = "NewDayPush"] = 11367;
        values[valuesById[11368] = "GetSignInGiftInfoReq"] = 11368;
        values[valuesById[11369] = "GetSignInGiftInfoRsp"] = 11369;
        values[valuesById[11370] = "ReceiveSignInGiftReq"] = 11370;
        values[valuesById[11371] = "ReceiveSignInGiftRsp"] = 11371;
        values[valuesById[11372] = "GuileLevelUpPush"] = 11372;
        values[valuesById[11373] = "GetActivityHeroGrowMapReq"] = 11373;
        values[valuesById[11374] = "GetActivityHeroGrowMapRsp"] = 11374;
        values[valuesById[11375] = "ReceiveActivityHeroGrowRewardReq"] = 11375;
        values[valuesById[11376] = "ReceiveActivityHeroGrowRewardRsp"] = 11376;
        values[valuesById[11377] = "GetActivityGachaUpMapReq"] = 11377;
        values[valuesById[11378] = "GetActivityGachaUpMapRsp"] = 11378;
        values[valuesById[11379] = "ReceiveActivityGachaUpTasksRewardsReq"] = 11379;
        values[valuesById[11380] = "ReceiveActivityGachaUpTasksRewardsRsp"] = 11380;
        values[valuesById[11381] = "GetFincaBattleInfoReq"] = 11381;
        values[valuesById[11382] = "GetFincaBattleInfoRsp"] = 11382;
        values[valuesById[11385] = "FincaBattleFightReq"] = 11385;
        values[valuesById[11386] = "FincaBattleFightRsp"] = 11386;
        values[valuesById[11387] = "SetFincaBattleHeroIdsReq"] = 11387;
        values[valuesById[11388] = "SetFincaBattleHeroIdsRsp"] = 11388;
        values[valuesById[11389] = "SetFincaBattleBookIdsReq"] = 11389;
        values[valuesById[11390] = "SetFincaBattleBookIdsRsp"] = 11390;
        values[valuesById[11391] = "GetFincaBattleOpponentsReq"] = 11391;
        values[valuesById[11392] = "GetFincaBattleOpponentsRsp"] = 11392;
        values[valuesById[11393] = "GetFincaBattleFightRecordsReq"] = 11393;
        values[valuesById[11394] = "GetFincaBattleFightRecordsRsp"] = 11394;
        values[valuesById[11395] = "GuildMemberChangedPush"] = 11395;
        values[valuesById[11396] = "QueryGuildInfoReq"] = 11396;
        values[valuesById[11397] = "QueryGuildInfoRsp"] = 11397;
        values[valuesById[11398] = "GetSimpleRankReq"] = 11398;
        values[valuesById[11399] = "GetSimpleRankRsp"] = 11399;
        values[valuesById[11400] = "GetMainStageCleardRecordsReq"] = 11400;
        values[valuesById[11401] = "GetMainStageCleardRecordsRsp"] = 11401;
        values[valuesById[11402] = "GetCumulativeRechargeMapReq"] = 11402;
        values[valuesById[11403] = "GetCumulativeRechargeMapRsp"] = 11403;
        values[valuesById[11404] = "ReceiveCumulativeRechargeRewardReq"] = 11404;
        values[valuesById[11405] = "ReceiveCumulativeRechargeRewardRsp"] = 11405;
        values[valuesById[11406] = "GetEliteStageInfoReq"] = 11406;
        values[valuesById[11407] = "GetEliteStageInfoRsp"] = 11407;
        values[valuesById[11408] = "ReceiveEliteClearStageRewardsReq"] = 11408;
        values[valuesById[11409] = "ReceiveEliteClearStageRewardsRsp"] = 11409;
        values[valuesById[12000] = "JoinChatChannelReq"] = 12000;
        values[valuesById[12001] = "JoinChatChannelRsp"] = 12001;
        values[valuesById[12002] = "LeaveChatChannelReq"] = 12002;
        values[valuesById[12003] = "LeaveChatChannelRsp"] = 12003;
        values[valuesById[12004] = "SendChatMessageReq"] = 12004;
        values[valuesById[12005] = "SendChatMessageRsp"] = 12005;
        values[valuesById[12006] = "ChatMessagePush"] = 12006;
        values[valuesById[12007] = "DefaultChatChannelsPush"] = 12007;
        values[valuesById[13000] = "JoinGuildRequestReplyPush"] = 13000;
        return values;
    })();

    /**
     * CommonErrorCode enum.
     * @name proto.CommonErrorCode
     * @enum {number}
     * @property {number} Succeed=0 Succeed value
     * @property {number} Failed=1 Failed value
     * @property {number} NoRole=2 NoRole value
     * @property {number} RoleNameExist=3 RoleNameExist value
     * @property {number} RoleNameInvalid=4 RoleNameInvalid value
     * @property {number} FuncNotOpen=5 FuncNotOpen value
     * @property {number} ItemNotEnough=6 ItemNotEnough value
     * @property {number} ChatSendFrequently=7 ChatSendFrequently value
     * @property {number} ChatSensitiveWords=8 ChatSensitiveWords value
     * @property {number} TryAgainLater=9 TryAgainLater value
     * @property {number} FriendListWasFull=10 FriendListWasFull value
     * @property {number} TargetFriendListWasFull=11 TargetFriendListWasFull value
     * @property {number} ApplyFriendListWasFull=12 ApplyFriendListWasFull value
     * @property {number} BlacklistWasFull=13 BlacklistWasFull value
     * @property {number} AlreadyBeBlacklist=14 AlreadyBeBlacklist value
     * @property {number} AlreadyBlacklist=15 AlreadyBlacklist value
     * @property {number} AlreadyFriend=16 AlreadyFriend value
     * @property {number} NotFriend=17 NotFriend value
     * @property {number} NotInApplyList=18 NotInApplyList value
     * @property {number} AlreadyApply=19 AlreadyApply value
     * @property {number} NotInBlacklist=20 NotInBlacklist value
     * @property {number} RecommendTimeLimit=21 RecommendTimeLimit value
     * @property {number} FriendGiftRecvLimit=22 FriendGiftRecvLimit value
     * @property {number} FriendGiftRepeatGive=23 FriendGiftRepeatGive value
     * @property {number} FriendGiftGivingLimit=24 FriendGiftGivingLimit value
     * @property {number} RoleBanned=25 RoleBanned value
     * @property {number} NotInWhiteList=26 NotInWhiteList value
     * @property {number} RedeemCodeNotFound=27 RedeemCodeNotFound value
     * @property {number} RedeemCodeUsed=28 RedeemCodeUsed value
     * @property {number} RedeemCodeGroupNotFound=29 RedeemCodeGroupNotFound value
     * @property {number} RedeemCodeExpired=30 RedeemCodeExpired value
     * @property {number} RedeemCodeGroupUsed=31 RedeemCodeGroupUsed value
     * @property {number} BagWasFull=32 BagWasFull value
     * @property {number} SensitiveWords=33 SensitiveWords value
     * @property {number} ChatMsgNotShow=34 ChatMsgNotShow value
     * @property {number} RoleBannedChat=35 RoleBannedChat value
     * @property {number} DiamondNegative=36 DiamondNegative value
     * @property {number} GuildNameExist=37 GuildNameExist value
     * @property {number} MemberNotInGuild=38 MemberNotInGuild value
     * @property {number} TargetNotInRank=39 TargetNotInRank value
     * @property {number} JoinGuildApplyNotFound=40 JoinGuildApplyNotFound value
     * @property {number} GuildMemberFull=41 GuildMemberFull value
     * @property {number} GuildCannotDisband=42 GuildCannotDisband value
     * @property {number} FightInnerError=43 FightInnerError value
     * @property {number} FincaBattleSettleing=44 FincaBattleSettleing value
     */
    proto.CommonErrorCode = (function() {
        var valuesById = {}, values = Object.create(valuesById);
        values[valuesById[0] = "Succeed"] = 0;
        values[valuesById[1] = "Failed"] = 1;
        values[valuesById[2] = "NoRole"] = 2;
        values[valuesById[3] = "RoleNameExist"] = 3;
        values[valuesById[4] = "RoleNameInvalid"] = 4;
        values[valuesById[5] = "FuncNotOpen"] = 5;
        values[valuesById[6] = "ItemNotEnough"] = 6;
        values[valuesById[7] = "ChatSendFrequently"] = 7;
        values[valuesById[8] = "ChatSensitiveWords"] = 8;
        values[valuesById[9] = "TryAgainLater"] = 9;
        values[valuesById[10] = "FriendListWasFull"] = 10;
        values[valuesById[11] = "TargetFriendListWasFull"] = 11;
        values[valuesById[12] = "ApplyFriendListWasFull"] = 12;
        values[valuesById[13] = "BlacklistWasFull"] = 13;
        values[valuesById[14] = "AlreadyBeBlacklist"] = 14;
        values[valuesById[15] = "AlreadyBlacklist"] = 15;
        values[valuesById[16] = "AlreadyFriend"] = 16;
        values[valuesById[17] = "NotFriend"] = 17;
        values[valuesById[18] = "NotInApplyList"] = 18;
        values[valuesById[19] = "AlreadyApply"] = 19;
        values[valuesById[20] = "NotInBlacklist"] = 20;
        values[valuesById[21] = "RecommendTimeLimit"] = 21;
        values[valuesById[22] = "FriendGiftRecvLimit"] = 22;
        values[valuesById[23] = "FriendGiftRepeatGive"] = 23;
        values[valuesById[24] = "FriendGiftGivingLimit"] = 24;
        values[valuesById[25] = "RoleBanned"] = 25;
        values[valuesById[26] = "NotInWhiteList"] = 26;
        values[valuesById[27] = "RedeemCodeNotFound"] = 27;
        values[valuesById[28] = "RedeemCodeUsed"] = 28;
        values[valuesById[29] = "RedeemCodeGroupNotFound"] = 29;
        values[valuesById[30] = "RedeemCodeExpired"] = 30;
        values[valuesById[31] = "RedeemCodeGroupUsed"] = 31;
        values[valuesById[32] = "BagWasFull"] = 32;
        values[valuesById[33] = "SensitiveWords"] = 33;
        values[valuesById[34] = "ChatMsgNotShow"] = 34;
        values[valuesById[35] = "RoleBannedChat"] = 35;
        values[valuesById[36] = "DiamondNegative"] = 36;
        values[valuesById[37] = "GuildNameExist"] = 37;
        values[valuesById[38] = "MemberNotInGuild"] = 38;
        values[valuesById[39] = "TargetNotInRank"] = 39;
        values[valuesById[40] = "JoinGuildApplyNotFound"] = 40;
        values[valuesById[41] = "GuildMemberFull"] = 41;
        values[valuesById[42] = "GuildCannotDisband"] = 42;
        values[valuesById[43] = "FightInnerError"] = 43;
        values[valuesById[44] = "FincaBattleSettleing"] = 44;
        return values;
    })();

    proto.CommonError = (function() {

        /**
         * Properties of a CommonError.
         * @memberof proto
         * @interface ICommonError
         * @property {proto.CommonErrorCode|null} [code] CommonError code
         * @property {string|null} [message] CommonError message
         */

        /**
         * Constructs a new CommonError.
         * @memberof proto
         * @classdesc Represents a CommonError.
         * @implements ICommonError
         * @constructor
         * @param {proto.ICommonError=} [p] Properties to set
         */
        function CommonError(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * CommonError code.
         * @member {proto.CommonErrorCode} code
         * @memberof proto.CommonError
         * @instance
         */
        CommonError.prototype.code = 0;

        /**
         * CommonError message.
         * @member {string} message
         * @memberof proto.CommonError
         * @instance
         */
        CommonError.prototype.message = "";

        /**
         * Encodes the specified CommonError message. Does not implicitly {@link proto.CommonError.verify|verify} messages.
         * @function encode
         * @memberof proto.CommonError
         * @static
         * @param {proto.ICommonError} m CommonError message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CommonError.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.code != null && Object.hasOwnProperty.call(m, "code"))
                w.uint32(8).int32(m.code);
            if (m.message != null && Object.hasOwnProperty.call(m, "message"))
                w.uint32(18).string(m.message);
            return w;
        };

        /**
         * Decodes a CommonError message from the specified reader or buffer.
         * @function decode
         * @memberof proto.CommonError
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.CommonError} CommonError
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CommonError.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.CommonError();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.code = r.int32();
                    break;
                case 2:
                    m.message = r.string();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return CommonError;
    })();

    proto.Msg_Ping = (function() {

        /**
         * Properties of a Msg_Ping.
         * @memberof proto
         * @interface IMsg_Ping
         * @property {number|Long|null} [id] Msg_Ping id
         * @property {number|Long|null} [time] Msg_Ping time
         */

        /**
         * Constructs a new Msg_Ping.
         * @memberof proto
         * @classdesc Represents a Msg_Ping.
         * @implements IMsg_Ping
         * @constructor
         * @param {proto.IMsg_Ping=} [p] Properties to set
         */
        function Msg_Ping(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_Ping id.
         * @member {number|Long} id
         * @memberof proto.Msg_Ping
         * @instance
         */
        Msg_Ping.prototype.id = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

        /**
         * Msg_Ping time.
         * @member {number|Long} time
         * @memberof proto.Msg_Ping
         * @instance
         */
        Msg_Ping.prototype.time = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

        /**
         * Encodes the specified Msg_Ping message. Does not implicitly {@link proto.Msg_Ping.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_Ping
         * @static
         * @param {proto.IMsg_Ping} m Msg_Ping message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_Ping.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.id != null && Object.hasOwnProperty.call(m, "id"))
                w.uint32(8).int64(m.id);
            if (m.time != null && Object.hasOwnProperty.call(m, "time"))
                w.uint32(16).int64(m.time);
            return w;
        };

        /**
         * Decodes a Msg_Ping message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_Ping
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_Ping} Msg_Ping
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_Ping.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_Ping();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.id = r.int64();
                    break;
                case 2:
                    m.time = r.int64();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_Ping;
    })();

    proto.Msg_Pong = (function() {

        /**
         * Properties of a Msg_Pong.
         * @memberof proto
         * @interface IMsg_Pong
         * @property {number|Long|null} [id] Msg_Pong id
         * @property {number|Long|null} [time] Msg_Pong time
         */

        /**
         * Constructs a new Msg_Pong.
         * @memberof proto
         * @classdesc Represents a Msg_Pong.
         * @implements IMsg_Pong
         * @constructor
         * @param {proto.IMsg_Pong=} [p] Properties to set
         */
        function Msg_Pong(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_Pong id.
         * @member {number|Long} id
         * @memberof proto.Msg_Pong
         * @instance
         */
        Msg_Pong.prototype.id = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

        /**
         * Msg_Pong time.
         * @member {number|Long} time
         * @memberof proto.Msg_Pong
         * @instance
         */
        Msg_Pong.prototype.time = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

        /**
         * Encodes the specified Msg_Pong message. Does not implicitly {@link proto.Msg_Pong.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_Pong
         * @static
         * @param {proto.IMsg_Pong} m Msg_Pong message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_Pong.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.id != null && Object.hasOwnProperty.call(m, "id"))
                w.uint32(8).int64(m.id);
            if (m.time != null && Object.hasOwnProperty.call(m, "time"))
                w.uint32(16).int64(m.time);
            return w;
        };

        /**
         * Decodes a Msg_Pong message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_Pong
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_Pong} Msg_Pong
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_Pong.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_Pong();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.id = r.int64();
                    break;
                case 2:
                    m.time = r.int64();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_Pong;
    })();

    proto.Msg_LoginReq = (function() {

        /**
         * Properties of a Msg_LoginReq.
         * @memberof proto
         * @interface IMsg_LoginReq
         * @property {string|null} [uid] Msg_LoginReq uid
         * @property {string|null} [token] Msg_LoginReq token
         * @property {string|null} [group] Msg_LoginReq group
         * @property {number|null} [area] Msg_LoginReq area
         */

        /**
         * Constructs a new Msg_LoginReq.
         * @memberof proto
         * @classdesc Represents a Msg_LoginReq.
         * @implements IMsg_LoginReq
         * @constructor
         * @param {proto.IMsg_LoginReq=} [p] Properties to set
         */
        function Msg_LoginReq(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_LoginReq uid.
         * @member {string} uid
         * @memberof proto.Msg_LoginReq
         * @instance
         */
        Msg_LoginReq.prototype.uid = "";

        /**
         * Msg_LoginReq token.
         * @member {string} token
         * @memberof proto.Msg_LoginReq
         * @instance
         */
        Msg_LoginReq.prototype.token = "";

        /**
         * Msg_LoginReq group.
         * @member {string} group
         * @memberof proto.Msg_LoginReq
         * @instance
         */
        Msg_LoginReq.prototype.group = "";

        /**
         * Msg_LoginReq area.
         * @member {number} area
         * @memberof proto.Msg_LoginReq
         * @instance
         */
        Msg_LoginReq.prototype.area = 0;

        /**
         * Encodes the specified Msg_LoginReq message. Does not implicitly {@link proto.Msg_LoginReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_LoginReq
         * @static
         * @param {proto.IMsg_LoginReq} m Msg_LoginReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_LoginReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.uid != null && Object.hasOwnProperty.call(m, "uid"))
                w.uint32(10).string(m.uid);
            if (m.token != null && Object.hasOwnProperty.call(m, "token"))
                w.uint32(18).string(m.token);
            if (m.group != null && Object.hasOwnProperty.call(m, "group"))
                w.uint32(26).string(m.group);
            if (m.area != null && Object.hasOwnProperty.call(m, "area"))
                w.uint32(32).int32(m.area);
            return w;
        };

        /**
         * Decodes a Msg_LoginReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_LoginReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_LoginReq} Msg_LoginReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_LoginReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_LoginReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.uid = r.string();
                    break;
                case 2:
                    m.token = r.string();
                    break;
                case 3:
                    m.group = r.string();
                    break;
                case 4:
                    m.area = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_LoginReq;
    })();

    proto.Msg_LoginRsp = (function() {

        /**
         * Properties of a Msg_LoginRsp.
         * @memberof proto
         * @interface IMsg_LoginRsp
         * @property {proto.ICommonError|null} [error] Msg_LoginRsp error
         */

        /**
         * Constructs a new Msg_LoginRsp.
         * @memberof proto
         * @classdesc Represents a Msg_LoginRsp.
         * @implements IMsg_LoginRsp
         * @constructor
         * @param {proto.IMsg_LoginRsp=} [p] Properties to set
         */
        function Msg_LoginRsp(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_LoginRsp error.
         * @member {proto.ICommonError|null|undefined} error
         * @memberof proto.Msg_LoginRsp
         * @instance
         */
        Msg_LoginRsp.prototype.error = null;

        /**
         * Encodes the specified Msg_LoginRsp message. Does not implicitly {@link proto.Msg_LoginRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_LoginRsp
         * @static
         * @param {proto.IMsg_LoginRsp} m Msg_LoginRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_LoginRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.error != null && Object.hasOwnProperty.call(m, "error"))
                $root.proto.CommonError.encode(m.error, w.uint32(10).fork()).ldelim();
            return w;
        };

        /**
         * Decodes a Msg_LoginRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_LoginRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_LoginRsp} Msg_LoginRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_LoginRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_LoginRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.error = $root.proto.CommonError.decode(r, r.uint32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_LoginRsp;
    })();

    proto.Msg_CreateRoleReq = (function() {

        /**
         * Properties of a Msg_CreateRoleReq.
         * @memberof proto
         * @interface IMsg_CreateRoleReq
         * @property {string|null} [name] Msg_CreateRoleReq name
         * @property {number|null} [area] Msg_CreateRoleReq area
         * @property {string|null} [platform] Msg_CreateRoleReq platform
         * @property {string|null} [adid] Msg_CreateRoleReq adid
         */

        /**
         * Constructs a new Msg_CreateRoleReq.
         * @memberof proto
         * @classdesc Represents a Msg_CreateRoleReq.
         * @implements IMsg_CreateRoleReq
         * @constructor
         * @param {proto.IMsg_CreateRoleReq=} [p] Properties to set
         */
        function Msg_CreateRoleReq(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_CreateRoleReq name.
         * @member {string} name
         * @memberof proto.Msg_CreateRoleReq
         * @instance
         */
        Msg_CreateRoleReq.prototype.name = "";

        /**
         * Msg_CreateRoleReq area.
         * @member {number} area
         * @memberof proto.Msg_CreateRoleReq
         * @instance
         */
        Msg_CreateRoleReq.prototype.area = 0;

        /**
         * Msg_CreateRoleReq platform.
         * @member {string} platform
         * @memberof proto.Msg_CreateRoleReq
         * @instance
         */
        Msg_CreateRoleReq.prototype.platform = "";

        /**
         * Msg_CreateRoleReq adid.
         * @member {string} adid
         * @memberof proto.Msg_CreateRoleReq
         * @instance
         */
        Msg_CreateRoleReq.prototype.adid = "";

        /**
         * Encodes the specified Msg_CreateRoleReq message. Does not implicitly {@link proto.Msg_CreateRoleReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_CreateRoleReq
         * @static
         * @param {proto.IMsg_CreateRoleReq} m Msg_CreateRoleReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_CreateRoleReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.name != null && Object.hasOwnProperty.call(m, "name"))
                w.uint32(10).string(m.name);
            if (m.area != null && Object.hasOwnProperty.call(m, "area"))
                w.uint32(16).int32(m.area);
            if (m.platform != null && Object.hasOwnProperty.call(m, "platform"))
                w.uint32(26).string(m.platform);
            if (m.adid != null && Object.hasOwnProperty.call(m, "adid"))
                w.uint32(34).string(m.adid);
            return w;
        };

        /**
         * Decodes a Msg_CreateRoleReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_CreateRoleReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_CreateRoleReq} Msg_CreateRoleReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_CreateRoleReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_CreateRoleReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.name = r.string();
                    break;
                case 2:
                    m.area = r.int32();
                    break;
                case 3:
                    m.platform = r.string();
                    break;
                case 4:
                    m.adid = r.string();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_CreateRoleReq;
    })();

    proto.Msg_CreateRoleRsp = (function() {

        /**
         * Properties of a Msg_CreateRoleRsp.
         * @memberof proto
         * @interface IMsg_CreateRoleRsp
         * @property {proto.ICommonError|null} [error] Msg_CreateRoleRsp error
         */

        /**
         * Constructs a new Msg_CreateRoleRsp.
         * @memberof proto
         * @classdesc Represents a Msg_CreateRoleRsp.
         * @implements IMsg_CreateRoleRsp
         * @constructor
         * @param {proto.IMsg_CreateRoleRsp=} [p] Properties to set
         */
        function Msg_CreateRoleRsp(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_CreateRoleRsp error.
         * @member {proto.ICommonError|null|undefined} error
         * @memberof proto.Msg_CreateRoleRsp
         * @instance
         */
        Msg_CreateRoleRsp.prototype.error = null;

        /**
         * Encodes the specified Msg_CreateRoleRsp message. Does not implicitly {@link proto.Msg_CreateRoleRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_CreateRoleRsp
         * @static
         * @param {proto.IMsg_CreateRoleRsp} m Msg_CreateRoleRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_CreateRoleRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.error != null && Object.hasOwnProperty.call(m, "error"))
                $root.proto.CommonError.encode(m.error, w.uint32(10).fork()).ldelim();
            return w;
        };

        /**
         * Decodes a Msg_CreateRoleRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_CreateRoleRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_CreateRoleRsp} Msg_CreateRoleRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_CreateRoleRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_CreateRoleRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.error = $root.proto.CommonError.decode(r, r.uint32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_CreateRoleRsp;
    })();

    proto.Role = (function() {

        /**
         * Properties of a Role.
         * @memberof proto
         * @interface IRole
         * @property {string|null} [id] Role id
         * @property {string|null} [uid] Role uid
         * @property {string|null} [name] Role name
         * @property {number|null} [area] Role area
         * @property {number|null} [changeNameTimes] Role changeNameTimes
         * @property {number|null} [level] Role level
         * @property {number|null} [vipLevel] Role vipLevel
         * @property {proto.IEquipPbData|null} [equip] Role equip
         * @property {proto.IMsg_GetHeroBagRsp|null} [heroBag] Role heroBag
         * @property {number|null} [powerScore] Role powerScore
         * @property {proto.IBookPbData|null} [book] Role book
         * @property {Array.<proto.IScrollPainting>|null} [paintings] Role paintings
         * @property {Array.<proto.IItem>|null} [simpleItems] Role simpleItems
         * @property {proto.IDropPbData|null} [drop] Role drop
         * @property {proto.IMsg_GetMainStageInfoRsp|null} [mainStageInfo] Role mainStageInfo
         * @property {proto.IElixirPbData|null} [elixir] Role elixir
         * @property {proto.IFightInfo|null} [fightInfo] Role fightInfo
         * @property {proto.IGenePbData|null} [gene] Role gene
         * @property {proto.IAdvPbData|null} [adv] Role adv
         * @property {boolean|null} [autoDisband] Role autoDisband
         * @property {Array.<proto.IBuyGoldHistory>|null} [buyGoldHistory] Role buyGoldHistory
         * @property {Object.<string,number>|null} [vipBonusMap] Role vipBonusMap
         * @property {number|Long|null} [createTime] Role createTime
         * @property {proto.IMsg_GetHonorRollMapRsp|null} [honorRollInfo] Role honorRollInfo
         * @property {number|null} [fightingStageId] Role fightingStageId
         * @property {Array.<proto.IOpenFunction>|null} [openFunctions] Role openFunctions
         * @property {Array.<proto.IActivity>|null} [activities] Role activities
         * @property {Object.<string,string>|null} [clientData] Role clientData
         * @property {proto.IMsg_GetAvatarInfoRsp|null} [avatarInfo] Role avatarInfo
         * @property {number|null} [todayLoginTimes] Role todayLoginTimes
         * @property {number|Long|null} [serverTime] Role serverTime
         * @property {proto.IMsg_GetActivityHeroGrowMapRsp|null} [heroGrowInfo] Role heroGrowInfo
         * @property {proto.IMsg_GetActivityGachaUpMapRsp|null} [gachaUpInfo] Role gachaUpInfo
         * @property {proto.IMsg_GetEliteStageInfoRsp|null} [eliteStageInfo] Role eliteStageInfo
         */

        /**
         * Constructs a new Role.
         * @memberof proto
         * @classdesc Represents a Role.
         * @implements IRole
         * @constructor
         * @param {proto.IRole=} [p] Properties to set
         */
        function Role(p) {
            this.paintings = [];
            this.simpleItems = [];
            this.buyGoldHistory = [];
            this.vipBonusMap = {};
            this.openFunctions = [];
            this.activities = [];
            this.clientData = {};
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Role id.
         * @member {string} id
         * @memberof proto.Role
         * @instance
         */
        Role.prototype.id = "";

        /**
         * Role uid.
         * @member {string} uid
         * @memberof proto.Role
         * @instance
         */
        Role.prototype.uid = "";

        /**
         * Role name.
         * @member {string} name
         * @memberof proto.Role
         * @instance
         */
        Role.prototype.name = "";

        /**
         * Role area.
         * @member {number} area
         * @memberof proto.Role
         * @instance
         */
        Role.prototype.area = 0;

        /**
         * Role changeNameTimes.
         * @member {number} changeNameTimes
         * @memberof proto.Role
         * @instance
         */
        Role.prototype.changeNameTimes = 0;

        /**
         * Role level.
         * @member {number} level
         * @memberof proto.Role
         * @instance
         */
        Role.prototype.level = 0;

        /**
         * Role vipLevel.
         * @member {number} vipLevel
         * @memberof proto.Role
         * @instance
         */
        Role.prototype.vipLevel = 0;

        /**
         * Role equip.
         * @member {proto.IEquipPbData|null|undefined} equip
         * @memberof proto.Role
         * @instance
         */
        Role.prototype.equip = null;

        /**
         * Role heroBag.
         * @member {proto.IMsg_GetHeroBagRsp|null|undefined} heroBag
         * @memberof proto.Role
         * @instance
         */
        Role.prototype.heroBag = null;

        /**
         * Role powerScore.
         * @member {number} powerScore
         * @memberof proto.Role
         * @instance
         */
        Role.prototype.powerScore = 0;

        /**
         * Role book.
         * @member {proto.IBookPbData|null|undefined} book
         * @memberof proto.Role
         * @instance
         */
        Role.prototype.book = null;

        /**
         * Role paintings.
         * @member {Array.<proto.IScrollPainting>} paintings
         * @memberof proto.Role
         * @instance
         */
        Role.prototype.paintings = $util.emptyArray;

        /**
         * Role simpleItems.
         * @member {Array.<proto.IItem>} simpleItems
         * @memberof proto.Role
         * @instance
         */
        Role.prototype.simpleItems = $util.emptyArray;

        /**
         * Role drop.
         * @member {proto.IDropPbData|null|undefined} drop
         * @memberof proto.Role
         * @instance
         */
        Role.prototype.drop = null;

        /**
         * Role mainStageInfo.
         * @member {proto.IMsg_GetMainStageInfoRsp|null|undefined} mainStageInfo
         * @memberof proto.Role
         * @instance
         */
        Role.prototype.mainStageInfo = null;

        /**
         * Role elixir.
         * @member {proto.IElixirPbData|null|undefined} elixir
         * @memberof proto.Role
         * @instance
         */
        Role.prototype.elixir = null;

        /**
         * Role fightInfo.
         * @member {proto.IFightInfo|null|undefined} fightInfo
         * @memberof proto.Role
         * @instance
         */
        Role.prototype.fightInfo = null;

        /**
         * Role gene.
         * @member {proto.IGenePbData|null|undefined} gene
         * @memberof proto.Role
         * @instance
         */
        Role.prototype.gene = null;

        /**
         * Role adv.
         * @member {proto.IAdvPbData|null|undefined} adv
         * @memberof proto.Role
         * @instance
         */
        Role.prototype.adv = null;

        /**
         * Role autoDisband.
         * @member {boolean} autoDisband
         * @memberof proto.Role
         * @instance
         */
        Role.prototype.autoDisband = false;

        /**
         * Role buyGoldHistory.
         * @member {Array.<proto.IBuyGoldHistory>} buyGoldHistory
         * @memberof proto.Role
         * @instance
         */
        Role.prototype.buyGoldHistory = $util.emptyArray;

        /**
         * Role vipBonusMap.
         * @member {Object.<string,number>} vipBonusMap
         * @memberof proto.Role
         * @instance
         */
        Role.prototype.vipBonusMap = $util.emptyObject;

        /**
         * Role createTime.
         * @member {number|Long} createTime
         * @memberof proto.Role
         * @instance
         */
        Role.prototype.createTime = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

        /**
         * Role honorRollInfo.
         * @member {proto.IMsg_GetHonorRollMapRsp|null|undefined} honorRollInfo
         * @memberof proto.Role
         * @instance
         */
        Role.prototype.honorRollInfo = null;

        /**
         * Role fightingStageId.
         * @member {number} fightingStageId
         * @memberof proto.Role
         * @instance
         */
        Role.prototype.fightingStageId = 0;

        /**
         * Role openFunctions.
         * @member {Array.<proto.IOpenFunction>} openFunctions
         * @memberof proto.Role
         * @instance
         */
        Role.prototype.openFunctions = $util.emptyArray;

        /**
         * Role activities.
         * @member {Array.<proto.IActivity>} activities
         * @memberof proto.Role
         * @instance
         */
        Role.prototype.activities = $util.emptyArray;

        /**
         * Role clientData.
         * @member {Object.<string,string>} clientData
         * @memberof proto.Role
         * @instance
         */
        Role.prototype.clientData = $util.emptyObject;

        /**
         * Role avatarInfo.
         * @member {proto.IMsg_GetAvatarInfoRsp|null|undefined} avatarInfo
         * @memberof proto.Role
         * @instance
         */
        Role.prototype.avatarInfo = null;

        /**
         * Role todayLoginTimes.
         * @member {number} todayLoginTimes
         * @memberof proto.Role
         * @instance
         */
        Role.prototype.todayLoginTimes = 0;

        /**
         * Role serverTime.
         * @member {number|Long} serverTime
         * @memberof proto.Role
         * @instance
         */
        Role.prototype.serverTime = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

        /**
         * Role heroGrowInfo.
         * @member {proto.IMsg_GetActivityHeroGrowMapRsp|null|undefined} heroGrowInfo
         * @memberof proto.Role
         * @instance
         */
        Role.prototype.heroGrowInfo = null;

        /**
         * Role gachaUpInfo.
         * @member {proto.IMsg_GetActivityGachaUpMapRsp|null|undefined} gachaUpInfo
         * @memberof proto.Role
         * @instance
         */
        Role.prototype.gachaUpInfo = null;

        /**
         * Role eliteStageInfo.
         * @member {proto.IMsg_GetEliteStageInfoRsp|null|undefined} eliteStageInfo
         * @memberof proto.Role
         * @instance
         */
        Role.prototype.eliteStageInfo = null;

        /**
         * Encodes the specified Role message. Does not implicitly {@link proto.Role.verify|verify} messages.
         * @function encode
         * @memberof proto.Role
         * @static
         * @param {proto.IRole} m Role message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Role.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.id != null && Object.hasOwnProperty.call(m, "id"))
                w.uint32(10).string(m.id);
            if (m.uid != null && Object.hasOwnProperty.call(m, "uid"))
                w.uint32(18).string(m.uid);
            if (m.name != null && Object.hasOwnProperty.call(m, "name"))
                w.uint32(26).string(m.name);
            if (m.area != null && Object.hasOwnProperty.call(m, "area"))
                w.uint32(32).int32(m.area);
            if (m.changeNameTimes != null && Object.hasOwnProperty.call(m, "changeNameTimes"))
                w.uint32(40).int32(m.changeNameTimes);
            if (m.level != null && Object.hasOwnProperty.call(m, "level"))
                w.uint32(48).int32(m.level);
            if (m.vipLevel != null && Object.hasOwnProperty.call(m, "vipLevel"))
                w.uint32(56).int32(m.vipLevel);
            if (m.equip != null && Object.hasOwnProperty.call(m, "equip"))
                $root.proto.EquipPbData.encode(m.equip, w.uint32(66).fork()).ldelim();
            if (m.heroBag != null && Object.hasOwnProperty.call(m, "heroBag"))
                $root.proto.Msg_GetHeroBagRsp.encode(m.heroBag, w.uint32(74).fork()).ldelim();
            if (m.powerScore != null && Object.hasOwnProperty.call(m, "powerScore"))
                w.uint32(80).int32(m.powerScore);
            if (m.book != null && Object.hasOwnProperty.call(m, "book"))
                $root.proto.BookPbData.encode(m.book, w.uint32(90).fork()).ldelim();
            if (m.paintings != null && m.paintings.length) {
                for (var i = 0; i < m.paintings.length; ++i)
                    $root.proto.ScrollPainting.encode(m.paintings[i], w.uint32(98).fork()).ldelim();
            }
            if (m.simpleItems != null && m.simpleItems.length) {
                for (var i = 0; i < m.simpleItems.length; ++i)
                    $root.proto.Item.encode(m.simpleItems[i], w.uint32(106).fork()).ldelim();
            }
            if (m.drop != null && Object.hasOwnProperty.call(m, "drop"))
                $root.proto.DropPbData.encode(m.drop, w.uint32(114).fork()).ldelim();
            if (m.mainStageInfo != null && Object.hasOwnProperty.call(m, "mainStageInfo"))
                $root.proto.Msg_GetMainStageInfoRsp.encode(m.mainStageInfo, w.uint32(122).fork()).ldelim();
            if (m.elixir != null && Object.hasOwnProperty.call(m, "elixir"))
                $root.proto.ElixirPbData.encode(m.elixir, w.uint32(130).fork()).ldelim();
            if (m.fightInfo != null && Object.hasOwnProperty.call(m, "fightInfo"))
                $root.proto.FightInfo.encode(m.fightInfo, w.uint32(138).fork()).ldelim();
            if (m.gene != null && Object.hasOwnProperty.call(m, "gene"))
                $root.proto.GenePbData.encode(m.gene, w.uint32(146).fork()).ldelim();
            if (m.adv != null && Object.hasOwnProperty.call(m, "adv"))
                $root.proto.AdvPbData.encode(m.adv, w.uint32(154).fork()).ldelim();
            if (m.autoDisband != null && Object.hasOwnProperty.call(m, "autoDisband"))
                w.uint32(160).bool(m.autoDisband);
            if (m.buyGoldHistory != null && m.buyGoldHistory.length) {
                for (var i = 0; i < m.buyGoldHistory.length; ++i)
                    $root.proto.BuyGoldHistory.encode(m.buyGoldHistory[i], w.uint32(170).fork()).ldelim();
            }
            if (m.vipBonusMap != null && Object.hasOwnProperty.call(m, "vipBonusMap")) {
                for (var ks = Object.keys(m.vipBonusMap), i = 0; i < ks.length; ++i) {
                    w.uint32(178).fork().uint32(8).int32(ks[i]).uint32(16).int32(m.vipBonusMap[ks[i]]).ldelim();
                }
            }
            if (m.createTime != null && Object.hasOwnProperty.call(m, "createTime"))
                w.uint32(184).int64(m.createTime);
            if (m.honorRollInfo != null && Object.hasOwnProperty.call(m, "honorRollInfo"))
                $root.proto.Msg_GetHonorRollMapRsp.encode(m.honorRollInfo, w.uint32(194).fork()).ldelim();
            if (m.fightingStageId != null && Object.hasOwnProperty.call(m, "fightingStageId"))
                w.uint32(200).int32(m.fightingStageId);
            if (m.openFunctions != null && m.openFunctions.length) {
                for (var i = 0; i < m.openFunctions.length; ++i)
                    $root.proto.OpenFunction.encode(m.openFunctions[i], w.uint32(210).fork()).ldelim();
            }
            if (m.activities != null && m.activities.length) {
                for (var i = 0; i < m.activities.length; ++i)
                    $root.proto.Activity.encode(m.activities[i], w.uint32(218).fork()).ldelim();
            }
            if (m.clientData != null && Object.hasOwnProperty.call(m, "clientData")) {
                for (var ks = Object.keys(m.clientData), i = 0; i < ks.length; ++i) {
                    w.uint32(226).fork().uint32(10).string(ks[i]).uint32(18).string(m.clientData[ks[i]]).ldelim();
                }
            }
            if (m.avatarInfo != null && Object.hasOwnProperty.call(m, "avatarInfo"))
                $root.proto.Msg_GetAvatarInfoRsp.encode(m.avatarInfo, w.uint32(234).fork()).ldelim();
            if (m.todayLoginTimes != null && Object.hasOwnProperty.call(m, "todayLoginTimes"))
                w.uint32(240).int32(m.todayLoginTimes);
            if (m.serverTime != null && Object.hasOwnProperty.call(m, "serverTime"))
                w.uint32(248).int64(m.serverTime);
            if (m.heroGrowInfo != null && Object.hasOwnProperty.call(m, "heroGrowInfo"))
                $root.proto.Msg_GetActivityHeroGrowMapRsp.encode(m.heroGrowInfo, w.uint32(258).fork()).ldelim();
            if (m.gachaUpInfo != null && Object.hasOwnProperty.call(m, "gachaUpInfo"))
                $root.proto.Msg_GetActivityGachaUpMapRsp.encode(m.gachaUpInfo, w.uint32(266).fork()).ldelim();
            if (m.eliteStageInfo != null && Object.hasOwnProperty.call(m, "eliteStageInfo"))
                $root.proto.Msg_GetEliteStageInfoRsp.encode(m.eliteStageInfo, w.uint32(274).fork()).ldelim();
            return w;
        };

        /**
         * Decodes a Role message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Role
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Role} Role
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Role.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Role(), k, value;
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.id = r.string();
                    break;
                case 2:
                    m.uid = r.string();
                    break;
                case 3:
                    m.name = r.string();
                    break;
                case 4:
                    m.area = r.int32();
                    break;
                case 5:
                    m.changeNameTimes = r.int32();
                    break;
                case 6:
                    m.level = r.int32();
                    break;
                case 7:
                    m.vipLevel = r.int32();
                    break;
                case 8:
                    m.equip = $root.proto.EquipPbData.decode(r, r.uint32());
                    break;
                case 9:
                    m.heroBag = $root.proto.Msg_GetHeroBagRsp.decode(r, r.uint32());
                    break;
                case 10:
                    m.powerScore = r.int32();
                    break;
                case 11:
                    m.book = $root.proto.BookPbData.decode(r, r.uint32());
                    break;
                case 12:
                    if (!(m.paintings && m.paintings.length))
                        m.paintings = [];
                    m.paintings.push($root.proto.ScrollPainting.decode(r, r.uint32()));
                    break;
                case 13:
                    if (!(m.simpleItems && m.simpleItems.length))
                        m.simpleItems = [];
                    m.simpleItems.push($root.proto.Item.decode(r, r.uint32()));
                    break;
                case 14:
                    m.drop = $root.proto.DropPbData.decode(r, r.uint32());
                    break;
                case 15:
                    m.mainStageInfo = $root.proto.Msg_GetMainStageInfoRsp.decode(r, r.uint32());
                    break;
                case 16:
                    m.elixir = $root.proto.ElixirPbData.decode(r, r.uint32());
                    break;
                case 17:
                    m.fightInfo = $root.proto.FightInfo.decode(r, r.uint32());
                    break;
                case 18:
                    m.gene = $root.proto.GenePbData.decode(r, r.uint32());
                    break;
                case 19:
                    m.adv = $root.proto.AdvPbData.decode(r, r.uint32());
                    break;
                case 20:
                    m.autoDisband = r.bool();
                    break;
                case 21:
                    if (!(m.buyGoldHistory && m.buyGoldHistory.length))
                        m.buyGoldHistory = [];
                    m.buyGoldHistory.push($root.proto.BuyGoldHistory.decode(r, r.uint32()));
                    break;
                case 22:
                    if (m.vipBonusMap === $util.emptyObject)
                        m.vipBonusMap = {};
                    var c2 = r.uint32() + r.pos;
                    k = 0;
                    value = 0;
                    while (r.pos < c2) {
                        var tag2 = r.uint32();
                        switch (tag2 >>> 3) {
                        case 1:
                            k = r.int32();
                            break;
                        case 2:
                            value = r.int32();
                            break;
                        default:
                            r.skipType(tag2 & 7);
                            break;
                        }
                    }
                    m.vipBonusMap[k] = value;
                    break;
                case 23:
                    m.createTime = r.int64();
                    break;
                case 24:
                    m.honorRollInfo = $root.proto.Msg_GetHonorRollMapRsp.decode(r, r.uint32());
                    break;
                case 25:
                    m.fightingStageId = r.int32();
                    break;
                case 26:
                    if (!(m.openFunctions && m.openFunctions.length))
                        m.openFunctions = [];
                    m.openFunctions.push($root.proto.OpenFunction.decode(r, r.uint32()));
                    break;
                case 27:
                    if (!(m.activities && m.activities.length))
                        m.activities = [];
                    m.activities.push($root.proto.Activity.decode(r, r.uint32()));
                    break;
                case 28:
                    if (m.clientData === $util.emptyObject)
                        m.clientData = {};
                    var c2 = r.uint32() + r.pos;
                    k = "";
                    value = "";
                    while (r.pos < c2) {
                        var tag2 = r.uint32();
                        switch (tag2 >>> 3) {
                        case 1:
                            k = r.string();
                            break;
                        case 2:
                            value = r.string();
                            break;
                        default:
                            r.skipType(tag2 & 7);
                            break;
                        }
                    }
                    m.clientData[k] = value;
                    break;
                case 29:
                    m.avatarInfo = $root.proto.Msg_GetAvatarInfoRsp.decode(r, r.uint32());
                    break;
                case 30:
                    m.todayLoginTimes = r.int32();
                    break;
                case 31:
                    m.serverTime = r.int64();
                    break;
                case 32:
                    m.heroGrowInfo = $root.proto.Msg_GetActivityHeroGrowMapRsp.decode(r, r.uint32());
                    break;
                case 33:
                    m.gachaUpInfo = $root.proto.Msg_GetActivityGachaUpMapRsp.decode(r, r.uint32());
                    break;
                case 34:
                    m.eliteStageInfo = $root.proto.Msg_GetEliteStageInfoRsp.decode(r, r.uint32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Role;
    })();

    proto.Msg_SyncRolePush = (function() {

        /**
         * Properties of a Msg_SyncRolePush.
         * @memberof proto
         * @interface IMsg_SyncRolePush
         * @property {proto.IRole|null} [role] Msg_SyncRolePush role
         */

        /**
         * Constructs a new Msg_SyncRolePush.
         * @memberof proto
         * @classdesc Represents a Msg_SyncRolePush.
         * @implements IMsg_SyncRolePush
         * @constructor
         * @param {proto.IMsg_SyncRolePush=} [p] Properties to set
         */
        function Msg_SyncRolePush(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_SyncRolePush role.
         * @member {proto.IRole|null|undefined} role
         * @memberof proto.Msg_SyncRolePush
         * @instance
         */
        Msg_SyncRolePush.prototype.role = null;

        /**
         * Encodes the specified Msg_SyncRolePush message. Does not implicitly {@link proto.Msg_SyncRolePush.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_SyncRolePush
         * @static
         * @param {proto.IMsg_SyncRolePush} m Msg_SyncRolePush message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_SyncRolePush.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.role != null && Object.hasOwnProperty.call(m, "role"))
                $root.proto.Role.encode(m.role, w.uint32(10).fork()).ldelim();
            return w;
        };

        /**
         * Decodes a Msg_SyncRolePush message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_SyncRolePush
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_SyncRolePush} Msg_SyncRolePush
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_SyncRolePush.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_SyncRolePush();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.role = $root.proto.Role.decode(r, r.uint32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_SyncRolePush;
    })();

    proto.Item = (function() {

        /**
         * Properties of an Item.
         * @memberof proto
         * @interface IItem
         * @property {number|null} [itemId] Item itemId
         * @property {number|Long|null} [num] Item num
         * @property {proto.Item.IExtra|null} [extra] Item extra
         * @property {Array.<proto.IItem>|null} [transaction] Item transaction
         */

        /**
         * Constructs a new Item.
         * @memberof proto
         * @classdesc Represents an Item.
         * @implements IItem
         * @constructor
         * @param {proto.IItem=} [p] Properties to set
         */
        function Item(p) {
            this.transaction = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Item itemId.
         * @member {number} itemId
         * @memberof proto.Item
         * @instance
         */
        Item.prototype.itemId = 0;

        /**
         * Item num.
         * @member {number|Long} num
         * @memberof proto.Item
         * @instance
         */
        Item.prototype.num = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

        /**
         * Item extra.
         * @member {proto.Item.IExtra|null|undefined} extra
         * @memberof proto.Item
         * @instance
         */
        Item.prototype.extra = null;

        /**
         * Item transaction.
         * @member {Array.<proto.IItem>} transaction
         * @memberof proto.Item
         * @instance
         */
        Item.prototype.transaction = $util.emptyArray;

        /**
         * Encodes the specified Item message. Does not implicitly {@link proto.Item.verify|verify} messages.
         * @function encode
         * @memberof proto.Item
         * @static
         * @param {proto.IItem} m Item message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Item.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.itemId != null && Object.hasOwnProperty.call(m, "itemId"))
                w.uint32(8).int32(m.itemId);
            if (m.num != null && Object.hasOwnProperty.call(m, "num"))
                w.uint32(16).int64(m.num);
            if (m.extra != null && Object.hasOwnProperty.call(m, "extra"))
                $root.proto.Item.Extra.encode(m.extra, w.uint32(26).fork()).ldelim();
            if (m.transaction != null && m.transaction.length) {
                for (var i = 0; i < m.transaction.length; ++i)
                    $root.proto.Item.encode(m.transaction[i], w.uint32(34).fork()).ldelim();
            }
            return w;
        };

        /**
         * Decodes an Item message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Item
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Item} Item
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Item.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Item();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.itemId = r.int32();
                    break;
                case 2:
                    m.num = r.int64();
                    break;
                case 3:
                    m.extra = $root.proto.Item.Extra.decode(r, r.uint32());
                    break;
                case 4:
                    if (!(m.transaction && m.transaction.length))
                        m.transaction = [];
                    m.transaction.push($root.proto.Item.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        Item.Extra = (function() {

            /**
             * Properties of an Extra.
             * @memberof proto.Item
             * @interface IExtra
             * @property {number|null} [heroStar] Extra heroStar
             * @property {number|Long|null} [expireAt] Extra expireAt
             */

            /**
             * Constructs a new Extra.
             * @memberof proto.Item
             * @classdesc Represents an Extra.
             * @implements IExtra
             * @constructor
             * @param {proto.Item.IExtra=} [p] Properties to set
             */
            function Extra(p) {
                if (p)
                    for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                        if (p[ks[i]] != null)
                            this[ks[i]] = p[ks[i]];
            }

            /**
             * Extra heroStar.
             * @member {number} heroStar
             * @memberof proto.Item.Extra
             * @instance
             */
            Extra.prototype.heroStar = 0;

            /**
             * Extra expireAt.
             * @member {number|Long} expireAt
             * @memberof proto.Item.Extra
             * @instance
             */
            Extra.prototype.expireAt = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

            /**
             * Encodes the specified Extra message. Does not implicitly {@link proto.Item.Extra.verify|verify} messages.
             * @function encode
             * @memberof proto.Item.Extra
             * @static
             * @param {proto.Item.IExtra} m Extra message or plain object to encode
             * @param {$protobuf.Writer} [w] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            Extra.encode = function encode(m, w) {
                if (!w)
                    w = $Writer.create();
                if (m.heroStar != null && Object.hasOwnProperty.call(m, "heroStar"))
                    w.uint32(8).int32(m.heroStar);
                if (m.expireAt != null && Object.hasOwnProperty.call(m, "expireAt"))
                    w.uint32(16).int64(m.expireAt);
                return w;
            };

            /**
             * Decodes an Extra message from the specified reader or buffer.
             * @function decode
             * @memberof proto.Item.Extra
             * @static
             * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
             * @param {number} [l] Message length if known beforehand
             * @returns {proto.Item.Extra} Extra
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            Extra.decode = function decode(r, l) {
                if (!(r instanceof $Reader))
                    r = $Reader.create(r);
                var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Item.Extra();
                while (r.pos < c) {
                    var t = r.uint32();
                    switch (t >>> 3) {
                    case 1:
                        m.heroStar = r.int32();
                        break;
                    case 2:
                        m.expireAt = r.int64();
                        break;
                    default:
                        r.skipType(t & 7);
                        break;
                    }
                }
                return m;
            };

            return Extra;
        })();

        return Item;
    })();

    proto.Hero = (function() {

        /**
         * Properties of a Hero.
         * @memberof proto
         * @interface IHero
         * @property {number|Long|null} [id] Hero id
         * @property {number|null} [itemId] Hero itemId
         * @property {number|null} [level] Hero level
         * @property {number|null} [star] Hero star
         * @property {number|null} [powerScore] Hero powerScore
         * @property {Array.<number>|null} [finshedStarSteps] Hero finshedStarSteps
         */

        /**
         * Constructs a new Hero.
         * @memberof proto
         * @classdesc Represents a Hero.
         * @implements IHero
         * @constructor
         * @param {proto.IHero=} [p] Properties to set
         */
        function Hero(p) {
            this.finshedStarSteps = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Hero id.
         * @member {number|Long} id
         * @memberof proto.Hero
         * @instance
         */
        Hero.prototype.id = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

        /**
         * Hero itemId.
         * @member {number} itemId
         * @memberof proto.Hero
         * @instance
         */
        Hero.prototype.itemId = 0;

        /**
         * Hero level.
         * @member {number} level
         * @memberof proto.Hero
         * @instance
         */
        Hero.prototype.level = 0;

        /**
         * Hero star.
         * @member {number} star
         * @memberof proto.Hero
         * @instance
         */
        Hero.prototype.star = 0;

        /**
         * Hero powerScore.
         * @member {number} powerScore
         * @memberof proto.Hero
         * @instance
         */
        Hero.prototype.powerScore = 0;

        /**
         * Hero finshedStarSteps.
         * @member {Array.<number>} finshedStarSteps
         * @memberof proto.Hero
         * @instance
         */
        Hero.prototype.finshedStarSteps = $util.emptyArray;

        /**
         * Encodes the specified Hero message. Does not implicitly {@link proto.Hero.verify|verify} messages.
         * @function encode
         * @memberof proto.Hero
         * @static
         * @param {proto.IHero} m Hero message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Hero.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.id != null && Object.hasOwnProperty.call(m, "id"))
                w.uint32(8).int64(m.id);
            if (m.itemId != null && Object.hasOwnProperty.call(m, "itemId"))
                w.uint32(16).int32(m.itemId);
            if (m.level != null && Object.hasOwnProperty.call(m, "level"))
                w.uint32(24).int32(m.level);
            if (m.star != null && Object.hasOwnProperty.call(m, "star"))
                w.uint32(32).int32(m.star);
            if (m.powerScore != null && Object.hasOwnProperty.call(m, "powerScore"))
                w.uint32(40).int32(m.powerScore);
            if (m.finshedStarSteps != null && m.finshedStarSteps.length) {
                w.uint32(50).fork();
                for (var i = 0; i < m.finshedStarSteps.length; ++i)
                    w.int32(m.finshedStarSteps[i]);
                w.ldelim();
            }
            return w;
        };

        /**
         * Decodes a Hero message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Hero
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Hero} Hero
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Hero.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Hero();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.id = r.int64();
                    break;
                case 2:
                    m.itemId = r.int32();
                    break;
                case 3:
                    m.level = r.int32();
                    break;
                case 4:
                    m.star = r.int32();
                    break;
                case 5:
                    m.powerScore = r.int32();
                    break;
                case 6:
                    if (!(m.finshedStarSteps && m.finshedStarSteps.length))
                        m.finshedStarSteps = [];
                    if ((t & 7) === 2) {
                        var c2 = r.uint32() + r.pos;
                        while (r.pos < c2)
                            m.finshedStarSteps.push(r.int32());
                    } else
                        m.finshedStarSteps.push(r.int32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Hero;
    })();

    proto.UniqueItem = (function() {

        /**
         * Properties of an UniqueItem.
         * @memberof proto
         * @interface IUniqueItem
         * @property {number|Long|null} [id] UniqueItem id
         * @property {number|null} [itemId] UniqueItem itemId
         */

        /**
         * Constructs a new UniqueItem.
         * @memberof proto
         * @classdesc Represents an UniqueItem.
         * @implements IUniqueItem
         * @constructor
         * @param {proto.IUniqueItem=} [p] Properties to set
         */
        function UniqueItem(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * UniqueItem id.
         * @member {number|Long} id
         * @memberof proto.UniqueItem
         * @instance
         */
        UniqueItem.prototype.id = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

        /**
         * UniqueItem itemId.
         * @member {number} itemId
         * @memberof proto.UniqueItem
         * @instance
         */
        UniqueItem.prototype.itemId = 0;

        /**
         * Encodes the specified UniqueItem message. Does not implicitly {@link proto.UniqueItem.verify|verify} messages.
         * @function encode
         * @memberof proto.UniqueItem
         * @static
         * @param {proto.IUniqueItem} m UniqueItem message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        UniqueItem.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.id != null && Object.hasOwnProperty.call(m, "id"))
                w.uint32(8).int64(m.id);
            if (m.itemId != null && Object.hasOwnProperty.call(m, "itemId"))
                w.uint32(16).int32(m.itemId);
            return w;
        };

        /**
         * Decodes an UniqueItem message from the specified reader or buffer.
         * @function decode
         * @memberof proto.UniqueItem
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.UniqueItem} UniqueItem
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        UniqueItem.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.UniqueItem();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.id = r.int64();
                    break;
                case 2:
                    m.itemId = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return UniqueItem;
    })();

    proto.Msg_ItemChangePush = (function() {

        /**
         * Properties of a Msg_ItemChangePush.
         * @memberof proto
         * @interface IMsg_ItemChangePush
         * @property {Array.<proto.IItem>|null} [updatedItems] Msg_ItemChangePush updatedItems
         * @property {Array.<proto.IItem>|null} [removedSingleItems] Msg_ItemChangePush removedSingleItems
         * @property {Array.<proto.IItem>|null} [updatedSingleItems] Msg_ItemChangePush updatedSingleItems
         * @property {Array.<proto.IUniqueItem>|null} [removedItems] Msg_ItemChangePush removedItems
         * @property {Array.<proto.IHero>|null} [updatedHeroes] Msg_ItemChangePush updatedHeroes
         * @property {Array.<proto.IEquipData>|null} [updatedEquipments] Msg_ItemChangePush updatedEquipments
         * @property {Array.<proto.IBookData>|null} [updatedBooks] Msg_ItemChangePush updatedBooks
         */

        /**
         * Constructs a new Msg_ItemChangePush.
         * @memberof proto
         * @classdesc Represents a Msg_ItemChangePush.
         * @implements IMsg_ItemChangePush
         * @constructor
         * @param {proto.IMsg_ItemChangePush=} [p] Properties to set
         */
        function Msg_ItemChangePush(p) {
            this.updatedItems = [];
            this.removedSingleItems = [];
            this.updatedSingleItems = [];
            this.removedItems = [];
            this.updatedHeroes = [];
            this.updatedEquipments = [];
            this.updatedBooks = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_ItemChangePush updatedItems.
         * @member {Array.<proto.IItem>} updatedItems
         * @memberof proto.Msg_ItemChangePush
         * @instance
         */
        Msg_ItemChangePush.prototype.updatedItems = $util.emptyArray;

        /**
         * Msg_ItemChangePush removedSingleItems.
         * @member {Array.<proto.IItem>} removedSingleItems
         * @memberof proto.Msg_ItemChangePush
         * @instance
         */
        Msg_ItemChangePush.prototype.removedSingleItems = $util.emptyArray;

        /**
         * Msg_ItemChangePush updatedSingleItems.
         * @member {Array.<proto.IItem>} updatedSingleItems
         * @memberof proto.Msg_ItemChangePush
         * @instance
         */
        Msg_ItemChangePush.prototype.updatedSingleItems = $util.emptyArray;

        /**
         * Msg_ItemChangePush removedItems.
         * @member {Array.<proto.IUniqueItem>} removedItems
         * @memberof proto.Msg_ItemChangePush
         * @instance
         */
        Msg_ItemChangePush.prototype.removedItems = $util.emptyArray;

        /**
         * Msg_ItemChangePush updatedHeroes.
         * @member {Array.<proto.IHero>} updatedHeroes
         * @memberof proto.Msg_ItemChangePush
         * @instance
         */
        Msg_ItemChangePush.prototype.updatedHeroes = $util.emptyArray;

        /**
         * Msg_ItemChangePush updatedEquipments.
         * @member {Array.<proto.IEquipData>} updatedEquipments
         * @memberof proto.Msg_ItemChangePush
         * @instance
         */
        Msg_ItemChangePush.prototype.updatedEquipments = $util.emptyArray;

        /**
         * Msg_ItemChangePush updatedBooks.
         * @member {Array.<proto.IBookData>} updatedBooks
         * @memberof proto.Msg_ItemChangePush
         * @instance
         */
        Msg_ItemChangePush.prototype.updatedBooks = $util.emptyArray;

        /**
         * Encodes the specified Msg_ItemChangePush message. Does not implicitly {@link proto.Msg_ItemChangePush.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_ItemChangePush
         * @static
         * @param {proto.IMsg_ItemChangePush} m Msg_ItemChangePush message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_ItemChangePush.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.updatedItems != null && m.updatedItems.length) {
                for (var i = 0; i < m.updatedItems.length; ++i)
                    $root.proto.Item.encode(m.updatedItems[i], w.uint32(10).fork()).ldelim();
            }
            if (m.removedSingleItems != null && m.removedSingleItems.length) {
                for (var i = 0; i < m.removedSingleItems.length; ++i)
                    $root.proto.Item.encode(m.removedSingleItems[i], w.uint32(18).fork()).ldelim();
            }
            if (m.updatedSingleItems != null && m.updatedSingleItems.length) {
                for (var i = 0; i < m.updatedSingleItems.length; ++i)
                    $root.proto.Item.encode(m.updatedSingleItems[i], w.uint32(26).fork()).ldelim();
            }
            if (m.removedItems != null && m.removedItems.length) {
                for (var i = 0; i < m.removedItems.length; ++i)
                    $root.proto.UniqueItem.encode(m.removedItems[i], w.uint32(34).fork()).ldelim();
            }
            if (m.updatedHeroes != null && m.updatedHeroes.length) {
                for (var i = 0; i < m.updatedHeroes.length; ++i)
                    $root.proto.Hero.encode(m.updatedHeroes[i], w.uint32(42).fork()).ldelim();
            }
            if (m.updatedEquipments != null && m.updatedEquipments.length) {
                for (var i = 0; i < m.updatedEquipments.length; ++i)
                    $root.proto.EquipData.encode(m.updatedEquipments[i], w.uint32(50).fork()).ldelim();
            }
            if (m.updatedBooks != null && m.updatedBooks.length) {
                for (var i = 0; i < m.updatedBooks.length; ++i)
                    $root.proto.BookData.encode(m.updatedBooks[i], w.uint32(58).fork()).ldelim();
            }
            return w;
        };

        /**
         * Decodes a Msg_ItemChangePush message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_ItemChangePush
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_ItemChangePush} Msg_ItemChangePush
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_ItemChangePush.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_ItemChangePush();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.updatedItems && m.updatedItems.length))
                        m.updatedItems = [];
                    m.updatedItems.push($root.proto.Item.decode(r, r.uint32()));
                    break;
                case 2:
                    if (!(m.removedSingleItems && m.removedSingleItems.length))
                        m.removedSingleItems = [];
                    m.removedSingleItems.push($root.proto.Item.decode(r, r.uint32()));
                    break;
                case 3:
                    if (!(m.updatedSingleItems && m.updatedSingleItems.length))
                        m.updatedSingleItems = [];
                    m.updatedSingleItems.push($root.proto.Item.decode(r, r.uint32()));
                    break;
                case 4:
                    if (!(m.removedItems && m.removedItems.length))
                        m.removedItems = [];
                    m.removedItems.push($root.proto.UniqueItem.decode(r, r.uint32()));
                    break;
                case 5:
                    if (!(m.updatedHeroes && m.updatedHeroes.length))
                        m.updatedHeroes = [];
                    m.updatedHeroes.push($root.proto.Hero.decode(r, r.uint32()));
                    break;
                case 6:
                    if (!(m.updatedEquipments && m.updatedEquipments.length))
                        m.updatedEquipments = [];
                    m.updatedEquipments.push($root.proto.EquipData.decode(r, r.uint32()));
                    break;
                case 7:
                    if (!(m.updatedBooks && m.updatedBooks.length))
                        m.updatedBooks = [];
                    m.updatedBooks.push($root.proto.BookData.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_ItemChangePush;
    })();

    proto.TeamSlot = (function() {

        /**
         * Properties of a TeamSlot.
         * @memberof proto
         * @interface ITeamSlot
         * @property {number|null} [heroClass] TeamSlot heroClass
         * @property {number|Long|null} [heroId] TeamSlot heroId
         * @property {number|null} [level] TeamSlot level
         */

        /**
         * Constructs a new TeamSlot.
         * @memberof proto
         * @classdesc Represents a TeamSlot.
         * @implements ITeamSlot
         * @constructor
         * @param {proto.ITeamSlot=} [p] Properties to set
         */
        function TeamSlot(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * TeamSlot heroClass.
         * @member {number} heroClass
         * @memberof proto.TeamSlot
         * @instance
         */
        TeamSlot.prototype.heroClass = 0;

        /**
         * TeamSlot heroId.
         * @member {number|Long} heroId
         * @memberof proto.TeamSlot
         * @instance
         */
        TeamSlot.prototype.heroId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

        /**
         * TeamSlot level.
         * @member {number} level
         * @memberof proto.TeamSlot
         * @instance
         */
        TeamSlot.prototype.level = 0;

        /**
         * Encodes the specified TeamSlot message. Does not implicitly {@link proto.TeamSlot.verify|verify} messages.
         * @function encode
         * @memberof proto.TeamSlot
         * @static
         * @param {proto.ITeamSlot} m TeamSlot message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        TeamSlot.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.heroClass != null && Object.hasOwnProperty.call(m, "heroClass"))
                w.uint32(8).int32(m.heroClass);
            if (m.heroId != null && Object.hasOwnProperty.call(m, "heroId"))
                w.uint32(16).int64(m.heroId);
            if (m.level != null && Object.hasOwnProperty.call(m, "level"))
                w.uint32(24).int32(m.level);
            return w;
        };

        /**
         * Decodes a TeamSlot message from the specified reader or buffer.
         * @function decode
         * @memberof proto.TeamSlot
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.TeamSlot} TeamSlot
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        TeamSlot.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.TeamSlot();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.heroClass = r.int32();
                    break;
                case 2:
                    m.heroId = r.int64();
                    break;
                case 3:
                    m.level = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return TeamSlot;
    })();

    proto.Msg_GetHeroBagReq = (function() {

        /**
         * Properties of a Msg_GetHeroBagReq.
         * @memberof proto
         * @interface IMsg_GetHeroBagReq
         */

        /**
         * Constructs a new Msg_GetHeroBagReq.
         * @memberof proto
         * @classdesc Represents a Msg_GetHeroBagReq.
         * @implements IMsg_GetHeroBagReq
         * @constructor
         * @param {proto.IMsg_GetHeroBagReq=} [p] Properties to set
         */
        function Msg_GetHeroBagReq(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Encodes the specified Msg_GetHeroBagReq message. Does not implicitly {@link proto.Msg_GetHeroBagReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_GetHeroBagReq
         * @static
         * @param {proto.IMsg_GetHeroBagReq} m Msg_GetHeroBagReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_GetHeroBagReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };

        /**
         * Decodes a Msg_GetHeroBagReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_GetHeroBagReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_GetHeroBagReq} Msg_GetHeroBagReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_GetHeroBagReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_GetHeroBagReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_GetHeroBagReq;
    })();

    proto.Msg_GetHeroBagRsp = (function() {

        /**
         * Properties of a Msg_GetHeroBagRsp.
         * @memberof proto
         * @interface IMsg_GetHeroBagRsp
         * @property {Array.<proto.IHero>|null} [heroes] Msg_GetHeroBagRsp heroes
         * @property {number|null} [capacityLevel] Msg_GetHeroBagRsp capacityLevel
         * @property {Array.<proto.ITeamSlot>|null} [teamSlots] Msg_GetHeroBagRsp teamSlots
         * @property {number|null} [levelResonance] Msg_GetHeroBagRsp levelResonance
         * @property {number|null} [starResonance] Msg_GetHeroBagRsp starResonance
         * @property {Array.<number>|null} [receivedRecommendTeamIds] Msg_GetHeroBagRsp receivedRecommendTeamIds
         * @property {Object.<string,proto.Msg_GetHeroBagRsp.IHeroAlbum>|null} [heroAlbumMap] Msg_GetHeroBagRsp heroAlbumMap
         */

        /**
         * Constructs a new Msg_GetHeroBagRsp.
         * @memberof proto
         * @classdesc Represents a Msg_GetHeroBagRsp.
         * @implements IMsg_GetHeroBagRsp
         * @constructor
         * @param {proto.IMsg_GetHeroBagRsp=} [p] Properties to set
         */
        function Msg_GetHeroBagRsp(p) {
            this.heroes = [];
            this.teamSlots = [];
            this.receivedRecommendTeamIds = [];
            this.heroAlbumMap = {};
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_GetHeroBagRsp heroes.
         * @member {Array.<proto.IHero>} heroes
         * @memberof proto.Msg_GetHeroBagRsp
         * @instance
         */
        Msg_GetHeroBagRsp.prototype.heroes = $util.emptyArray;

        /**
         * Msg_GetHeroBagRsp capacityLevel.
         * @member {number} capacityLevel
         * @memberof proto.Msg_GetHeroBagRsp
         * @instance
         */
        Msg_GetHeroBagRsp.prototype.capacityLevel = 0;

        /**
         * Msg_GetHeroBagRsp teamSlots.
         * @member {Array.<proto.ITeamSlot>} teamSlots
         * @memberof proto.Msg_GetHeroBagRsp
         * @instance
         */
        Msg_GetHeroBagRsp.prototype.teamSlots = $util.emptyArray;

        /**
         * Msg_GetHeroBagRsp levelResonance.
         * @member {number} levelResonance
         * @memberof proto.Msg_GetHeroBagRsp
         * @instance
         */
        Msg_GetHeroBagRsp.prototype.levelResonance = 0;

        /**
         * Msg_GetHeroBagRsp starResonance.
         * @member {number} starResonance
         * @memberof proto.Msg_GetHeroBagRsp
         * @instance
         */
        Msg_GetHeroBagRsp.prototype.starResonance = 0;

        /**
         * Msg_GetHeroBagRsp receivedRecommendTeamIds.
         * @member {Array.<number>} receivedRecommendTeamIds
         * @memberof proto.Msg_GetHeroBagRsp
         * @instance
         */
        Msg_GetHeroBagRsp.prototype.receivedRecommendTeamIds = $util.emptyArray;

        /**
         * Msg_GetHeroBagRsp heroAlbumMap.
         * @member {Object.<string,proto.Msg_GetHeroBagRsp.IHeroAlbum>} heroAlbumMap
         * @memberof proto.Msg_GetHeroBagRsp
         * @instance
         */
        Msg_GetHeroBagRsp.prototype.heroAlbumMap = $util.emptyObject;

        /**
         * Encodes the specified Msg_GetHeroBagRsp message. Does not implicitly {@link proto.Msg_GetHeroBagRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_GetHeroBagRsp
         * @static
         * @param {proto.IMsg_GetHeroBagRsp} m Msg_GetHeroBagRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_GetHeroBagRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.heroes != null && m.heroes.length) {
                for (var i = 0; i < m.heroes.length; ++i)
                    $root.proto.Hero.encode(m.heroes[i], w.uint32(10).fork()).ldelim();
            }
            if (m.capacityLevel != null && Object.hasOwnProperty.call(m, "capacityLevel"))
                w.uint32(16).int32(m.capacityLevel);
            if (m.teamSlots != null && m.teamSlots.length) {
                for (var i = 0; i < m.teamSlots.length; ++i)
                    $root.proto.TeamSlot.encode(m.teamSlots[i], w.uint32(26).fork()).ldelim();
            }
            if (m.levelResonance != null && Object.hasOwnProperty.call(m, "levelResonance"))
                w.uint32(32).int32(m.levelResonance);
            if (m.starResonance != null && Object.hasOwnProperty.call(m, "starResonance"))
                w.uint32(40).int32(m.starResonance);
            if (m.receivedRecommendTeamIds != null && m.receivedRecommendTeamIds.length) {
                w.uint32(50).fork();
                for (var i = 0; i < m.receivedRecommendTeamIds.length; ++i)
                    w.int32(m.receivedRecommendTeamIds[i]);
                w.ldelim();
            }
            if (m.heroAlbumMap != null && Object.hasOwnProperty.call(m, "heroAlbumMap")) {
                for (var ks = Object.keys(m.heroAlbumMap), i = 0; i < ks.length; ++i) {
                    w.uint32(58).fork().uint32(8).int32(ks[i]);
                    $root.proto.Msg_GetHeroBagRsp.HeroAlbum.encode(m.heroAlbumMap[ks[i]], w.uint32(18).fork()).ldelim().ldelim();
                }
            }
            return w;
        };

        /**
         * Decodes a Msg_GetHeroBagRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_GetHeroBagRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_GetHeroBagRsp} Msg_GetHeroBagRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_GetHeroBagRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_GetHeroBagRsp(), k, value;
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.heroes && m.heroes.length))
                        m.heroes = [];
                    m.heroes.push($root.proto.Hero.decode(r, r.uint32()));
                    break;
                case 2:
                    m.capacityLevel = r.int32();
                    break;
                case 3:
                    if (!(m.teamSlots && m.teamSlots.length))
                        m.teamSlots = [];
                    m.teamSlots.push($root.proto.TeamSlot.decode(r, r.uint32()));
                    break;
                case 4:
                    m.levelResonance = r.int32();
                    break;
                case 5:
                    m.starResonance = r.int32();
                    break;
                case 6:
                    if (!(m.receivedRecommendTeamIds && m.receivedRecommendTeamIds.length))
                        m.receivedRecommendTeamIds = [];
                    if ((t & 7) === 2) {
                        var c2 = r.uint32() + r.pos;
                        while (r.pos < c2)
                            m.receivedRecommendTeamIds.push(r.int32());
                    } else
                        m.receivedRecommendTeamIds.push(r.int32());
                    break;
                case 7:
                    if (m.heroAlbumMap === $util.emptyObject)
                        m.heroAlbumMap = {};
                    var c2 = r.uint32() + r.pos;
                    k = 0;
                    value = null;
                    while (r.pos < c2) {
                        var tag2 = r.uint32();
                        switch (tag2 >>> 3) {
                        case 1:
                            k = r.int32();
                            break;
                        case 2:
                            value = $root.proto.Msg_GetHeroBagRsp.HeroAlbum.decode(r, r.uint32());
                            break;
                        default:
                            r.skipType(tag2 & 7);
                            break;
                        }
                    }
                    m.heroAlbumMap[k] = value;
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        Msg_GetHeroBagRsp.HeroAlbum = (function() {

            /**
             * Properties of a HeroAlbum.
             * @memberof proto.Msg_GetHeroBagRsp
             * @interface IHeroAlbum
             * @property {number|null} [id] HeroAlbum id
             * @property {boolean|null} [isReceived] HeroAlbum isReceived
             */

            /**
             * Constructs a new HeroAlbum.
             * @memberof proto.Msg_GetHeroBagRsp
             * @classdesc Represents a HeroAlbum.
             * @implements IHeroAlbum
             * @constructor
             * @param {proto.Msg_GetHeroBagRsp.IHeroAlbum=} [p] Properties to set
             */
            function HeroAlbum(p) {
                if (p)
                    for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                        if (p[ks[i]] != null)
                            this[ks[i]] = p[ks[i]];
            }

            /**
             * HeroAlbum id.
             * @member {number} id
             * @memberof proto.Msg_GetHeroBagRsp.HeroAlbum
             * @instance
             */
            HeroAlbum.prototype.id = 0;

            /**
             * HeroAlbum isReceived.
             * @member {boolean} isReceived
             * @memberof proto.Msg_GetHeroBagRsp.HeroAlbum
             * @instance
             */
            HeroAlbum.prototype.isReceived = false;

            /**
             * Encodes the specified HeroAlbum message. Does not implicitly {@link proto.Msg_GetHeroBagRsp.HeroAlbum.verify|verify} messages.
             * @function encode
             * @memberof proto.Msg_GetHeroBagRsp.HeroAlbum
             * @static
             * @param {proto.Msg_GetHeroBagRsp.IHeroAlbum} m HeroAlbum message or plain object to encode
             * @param {$protobuf.Writer} [w] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            HeroAlbum.encode = function encode(m, w) {
                if (!w)
                    w = $Writer.create();
                if (m.id != null && Object.hasOwnProperty.call(m, "id"))
                    w.uint32(8).int32(m.id);
                if (m.isReceived != null && Object.hasOwnProperty.call(m, "isReceived"))
                    w.uint32(16).bool(m.isReceived);
                return w;
            };

            /**
             * Decodes a HeroAlbum message from the specified reader or buffer.
             * @function decode
             * @memberof proto.Msg_GetHeroBagRsp.HeroAlbum
             * @static
             * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
             * @param {number} [l] Message length if known beforehand
             * @returns {proto.Msg_GetHeroBagRsp.HeroAlbum} HeroAlbum
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            HeroAlbum.decode = function decode(r, l) {
                if (!(r instanceof $Reader))
                    r = $Reader.create(r);
                var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_GetHeroBagRsp.HeroAlbum();
                while (r.pos < c) {
                    var t = r.uint32();
                    switch (t >>> 3) {
                    case 1:
                        m.id = r.int32();
                        break;
                    case 2:
                        m.isReceived = r.bool();
                        break;
                    default:
                        r.skipType(t & 7);
                        break;
                    }
                }
                return m;
            };

            return HeroAlbum;
        })();

        return Msg_GetHeroBagRsp;
    })();

    proto.Msg_SetTeamSlotReq = (function() {

        /**
         * Properties of a Msg_SetTeamSlotReq.
         * @memberof proto
         * @interface IMsg_SetTeamSlotReq
         * @property {number|Long|null} [heroId] Msg_SetTeamSlotReq heroId
         */

        /**
         * Constructs a new Msg_SetTeamSlotReq.
         * @memberof proto
         * @classdesc Represents a Msg_SetTeamSlotReq.
         * @implements IMsg_SetTeamSlotReq
         * @constructor
         * @param {proto.IMsg_SetTeamSlotReq=} [p] Properties to set
         */
        function Msg_SetTeamSlotReq(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_SetTeamSlotReq heroId.
         * @member {number|Long} heroId
         * @memberof proto.Msg_SetTeamSlotReq
         * @instance
         */
        Msg_SetTeamSlotReq.prototype.heroId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

        /**
         * Encodes the specified Msg_SetTeamSlotReq message. Does not implicitly {@link proto.Msg_SetTeamSlotReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_SetTeamSlotReq
         * @static
         * @param {proto.IMsg_SetTeamSlotReq} m Msg_SetTeamSlotReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_SetTeamSlotReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.heroId != null && Object.hasOwnProperty.call(m, "heroId"))
                w.uint32(8).int64(m.heroId);
            return w;
        };

        /**
         * Decodes a Msg_SetTeamSlotReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_SetTeamSlotReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_SetTeamSlotReq} Msg_SetTeamSlotReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_SetTeamSlotReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_SetTeamSlotReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.heroId = r.int64();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_SetTeamSlotReq;
    })();

    proto.Msg_SetTeamSlotRsp = (function() {

        /**
         * Properties of a Msg_SetTeamSlotRsp.
         * @memberof proto
         * @interface IMsg_SetTeamSlotRsp
         * @property {proto.ICommonError|null} [error] Msg_SetTeamSlotRsp error
         * @property {number|Long|null} [heroId] Msg_SetTeamSlotRsp heroId
         */

        /**
         * Constructs a new Msg_SetTeamSlotRsp.
         * @memberof proto
         * @classdesc Represents a Msg_SetTeamSlotRsp.
         * @implements IMsg_SetTeamSlotRsp
         * @constructor
         * @param {proto.IMsg_SetTeamSlotRsp=} [p] Properties to set
         */
        function Msg_SetTeamSlotRsp(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_SetTeamSlotRsp error.
         * @member {proto.ICommonError|null|undefined} error
         * @memberof proto.Msg_SetTeamSlotRsp
         * @instance
         */
        Msg_SetTeamSlotRsp.prototype.error = null;

        /**
         * Msg_SetTeamSlotRsp heroId.
         * @member {number|Long} heroId
         * @memberof proto.Msg_SetTeamSlotRsp
         * @instance
         */
        Msg_SetTeamSlotRsp.prototype.heroId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

        /**
         * Encodes the specified Msg_SetTeamSlotRsp message. Does not implicitly {@link proto.Msg_SetTeamSlotRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_SetTeamSlotRsp
         * @static
         * @param {proto.IMsg_SetTeamSlotRsp} m Msg_SetTeamSlotRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_SetTeamSlotRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.error != null && Object.hasOwnProperty.call(m, "error"))
                $root.proto.CommonError.encode(m.error, w.uint32(10).fork()).ldelim();
            if (m.heroId != null && Object.hasOwnProperty.call(m, "heroId"))
                w.uint32(16).int64(m.heroId);
            return w;
        };

        /**
         * Decodes a Msg_SetTeamSlotRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_SetTeamSlotRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_SetTeamSlotRsp} Msg_SetTeamSlotRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_SetTeamSlotRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_SetTeamSlotRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.error = $root.proto.CommonError.decode(r, r.uint32());
                    break;
                case 2:
                    m.heroId = r.int64();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_SetTeamSlotRsp;
    })();

    proto.Msg_UpTeamSlotLevelReq = (function() {

        /**
         * Properties of a Msg_UpTeamSlotLevelReq.
         * @memberof proto
         * @interface IMsg_UpTeamSlotLevelReq
         * @property {number|null} [heroClass] Msg_UpTeamSlotLevelReq heroClass
         * @property {number|null} [level] Msg_UpTeamSlotLevelReq level
         */

        /**
         * Constructs a new Msg_UpTeamSlotLevelReq.
         * @memberof proto
         * @classdesc Represents a Msg_UpTeamSlotLevelReq.
         * @implements IMsg_UpTeamSlotLevelReq
         * @constructor
         * @param {proto.IMsg_UpTeamSlotLevelReq=} [p] Properties to set
         */
        function Msg_UpTeamSlotLevelReq(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_UpTeamSlotLevelReq heroClass.
         * @member {number} heroClass
         * @memberof proto.Msg_UpTeamSlotLevelReq
         * @instance
         */
        Msg_UpTeamSlotLevelReq.prototype.heroClass = 0;

        /**
         * Msg_UpTeamSlotLevelReq level.
         * @member {number} level
         * @memberof proto.Msg_UpTeamSlotLevelReq
         * @instance
         */
        Msg_UpTeamSlotLevelReq.prototype.level = 0;

        /**
         * Encodes the specified Msg_UpTeamSlotLevelReq message. Does not implicitly {@link proto.Msg_UpTeamSlotLevelReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_UpTeamSlotLevelReq
         * @static
         * @param {proto.IMsg_UpTeamSlotLevelReq} m Msg_UpTeamSlotLevelReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_UpTeamSlotLevelReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.heroClass != null && Object.hasOwnProperty.call(m, "heroClass"))
                w.uint32(8).int32(m.heroClass);
            if (m.level != null && Object.hasOwnProperty.call(m, "level"))
                w.uint32(16).int32(m.level);
            return w;
        };

        /**
         * Decodes a Msg_UpTeamSlotLevelReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_UpTeamSlotLevelReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_UpTeamSlotLevelReq} Msg_UpTeamSlotLevelReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_UpTeamSlotLevelReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_UpTeamSlotLevelReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.heroClass = r.int32();
                    break;
                case 2:
                    m.level = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_UpTeamSlotLevelReq;
    })();

    proto.Msg_UpTeamSlotLevelRsp = (function() {

        /**
         * Properties of a Msg_UpTeamSlotLevelRsp.
         * @memberof proto
         * @interface IMsg_UpTeamSlotLevelRsp
         * @property {proto.ICommonError|null} [error] Msg_UpTeamSlotLevelRsp error
         * @property {number|null} [heroClass] Msg_UpTeamSlotLevelRsp heroClass
         * @property {number|null} [newLevel] Msg_UpTeamSlotLevelRsp newLevel
         */

        /**
         * Constructs a new Msg_UpTeamSlotLevelRsp.
         * @memberof proto
         * @classdesc Represents a Msg_UpTeamSlotLevelRsp.
         * @implements IMsg_UpTeamSlotLevelRsp
         * @constructor
         * @param {proto.IMsg_UpTeamSlotLevelRsp=} [p] Properties to set
         */
        function Msg_UpTeamSlotLevelRsp(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_UpTeamSlotLevelRsp error.
         * @member {proto.ICommonError|null|undefined} error
         * @memberof proto.Msg_UpTeamSlotLevelRsp
         * @instance
         */
        Msg_UpTeamSlotLevelRsp.prototype.error = null;

        /**
         * Msg_UpTeamSlotLevelRsp heroClass.
         * @member {number} heroClass
         * @memberof proto.Msg_UpTeamSlotLevelRsp
         * @instance
         */
        Msg_UpTeamSlotLevelRsp.prototype.heroClass = 0;

        /**
         * Msg_UpTeamSlotLevelRsp newLevel.
         * @member {number} newLevel
         * @memberof proto.Msg_UpTeamSlotLevelRsp
         * @instance
         */
        Msg_UpTeamSlotLevelRsp.prototype.newLevel = 0;

        /**
         * Encodes the specified Msg_UpTeamSlotLevelRsp message. Does not implicitly {@link proto.Msg_UpTeamSlotLevelRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_UpTeamSlotLevelRsp
         * @static
         * @param {proto.IMsg_UpTeamSlotLevelRsp} m Msg_UpTeamSlotLevelRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_UpTeamSlotLevelRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.error != null && Object.hasOwnProperty.call(m, "error"))
                $root.proto.CommonError.encode(m.error, w.uint32(10).fork()).ldelim();
            if (m.heroClass != null && Object.hasOwnProperty.call(m, "heroClass"))
                w.uint32(16).int32(m.heroClass);
            if (m.newLevel != null && Object.hasOwnProperty.call(m, "newLevel"))
                w.uint32(24).int32(m.newLevel);
            return w;
        };

        /**
         * Decodes a Msg_UpTeamSlotLevelRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_UpTeamSlotLevelRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_UpTeamSlotLevelRsp} Msg_UpTeamSlotLevelRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_UpTeamSlotLevelRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_UpTeamSlotLevelRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.error = $root.proto.CommonError.decode(r, r.uint32());
                    break;
                case 2:
                    m.heroClass = r.int32();
                    break;
                case 3:
                    m.newLevel = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_UpTeamSlotLevelRsp;
    })();

    proto.Msg_ResetTeamSlotLevelReq = (function() {

        /**
         * Properties of a Msg_ResetTeamSlotLevelReq.
         * @memberof proto
         * @interface IMsg_ResetTeamSlotLevelReq
         * @property {number|null} [heroClass] Msg_ResetTeamSlotLevelReq heroClass
         */

        /**
         * Constructs a new Msg_ResetTeamSlotLevelReq.
         * @memberof proto
         * @classdesc Represents a Msg_ResetTeamSlotLevelReq.
         * @implements IMsg_ResetTeamSlotLevelReq
         * @constructor
         * @param {proto.IMsg_ResetTeamSlotLevelReq=} [p] Properties to set
         */
        function Msg_ResetTeamSlotLevelReq(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_ResetTeamSlotLevelReq heroClass.
         * @member {number} heroClass
         * @memberof proto.Msg_ResetTeamSlotLevelReq
         * @instance
         */
        Msg_ResetTeamSlotLevelReq.prototype.heroClass = 0;

        /**
         * Encodes the specified Msg_ResetTeamSlotLevelReq message. Does not implicitly {@link proto.Msg_ResetTeamSlotLevelReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_ResetTeamSlotLevelReq
         * @static
         * @param {proto.IMsg_ResetTeamSlotLevelReq} m Msg_ResetTeamSlotLevelReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_ResetTeamSlotLevelReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.heroClass != null && Object.hasOwnProperty.call(m, "heroClass"))
                w.uint32(8).int32(m.heroClass);
            return w;
        };

        /**
         * Decodes a Msg_ResetTeamSlotLevelReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_ResetTeamSlotLevelReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_ResetTeamSlotLevelReq} Msg_ResetTeamSlotLevelReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_ResetTeamSlotLevelReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_ResetTeamSlotLevelReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.heroClass = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_ResetTeamSlotLevelReq;
    })();

    proto.Msg_ResetTeamSlotLevelRsp = (function() {

        /**
         * Properties of a Msg_ResetTeamSlotLevelRsp.
         * @memberof proto
         * @interface IMsg_ResetTeamSlotLevelRsp
         * @property {proto.ICommonError|null} [error] Msg_ResetTeamSlotLevelRsp error
         * @property {number|null} [heroClass] Msg_ResetTeamSlotLevelRsp heroClass
         * @property {Array.<proto.IItem>|null} [rewards] Msg_ResetTeamSlotLevelRsp rewards
         */

        /**
         * Constructs a new Msg_ResetTeamSlotLevelRsp.
         * @memberof proto
         * @classdesc Represents a Msg_ResetTeamSlotLevelRsp.
         * @implements IMsg_ResetTeamSlotLevelRsp
         * @constructor
         * @param {proto.IMsg_ResetTeamSlotLevelRsp=} [p] Properties to set
         */
        function Msg_ResetTeamSlotLevelRsp(p) {
            this.rewards = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_ResetTeamSlotLevelRsp error.
         * @member {proto.ICommonError|null|undefined} error
         * @memberof proto.Msg_ResetTeamSlotLevelRsp
         * @instance
         */
        Msg_ResetTeamSlotLevelRsp.prototype.error = null;

        /**
         * Msg_ResetTeamSlotLevelRsp heroClass.
         * @member {number} heroClass
         * @memberof proto.Msg_ResetTeamSlotLevelRsp
         * @instance
         */
        Msg_ResetTeamSlotLevelRsp.prototype.heroClass = 0;

        /**
         * Msg_ResetTeamSlotLevelRsp rewards.
         * @member {Array.<proto.IItem>} rewards
         * @memberof proto.Msg_ResetTeamSlotLevelRsp
         * @instance
         */
        Msg_ResetTeamSlotLevelRsp.prototype.rewards = $util.emptyArray;

        /**
         * Encodes the specified Msg_ResetTeamSlotLevelRsp message. Does not implicitly {@link proto.Msg_ResetTeamSlotLevelRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_ResetTeamSlotLevelRsp
         * @static
         * @param {proto.IMsg_ResetTeamSlotLevelRsp} m Msg_ResetTeamSlotLevelRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_ResetTeamSlotLevelRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.error != null && Object.hasOwnProperty.call(m, "error"))
                $root.proto.CommonError.encode(m.error, w.uint32(10).fork()).ldelim();
            if (m.heroClass != null && Object.hasOwnProperty.call(m, "heroClass"))
                w.uint32(16).int32(m.heroClass);
            if (m.rewards != null && m.rewards.length) {
                for (var i = 0; i < m.rewards.length; ++i)
                    $root.proto.Item.encode(m.rewards[i], w.uint32(26).fork()).ldelim();
            }
            return w;
        };

        /**
         * Decodes a Msg_ResetTeamSlotLevelRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_ResetTeamSlotLevelRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_ResetTeamSlotLevelRsp} Msg_ResetTeamSlotLevelRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_ResetTeamSlotLevelRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_ResetTeamSlotLevelRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.error = $root.proto.CommonError.decode(r, r.uint32());
                    break;
                case 2:
                    m.heroClass = r.int32();
                    break;
                case 3:
                    if (!(m.rewards && m.rewards.length))
                        m.rewards = [];
                    m.rewards.push($root.proto.Item.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_ResetTeamSlotLevelRsp;
    })();

    proto.UpHeroStarCost = (function() {

        /**
         * Properties of an UpHeroStarCost.
         * @memberof proto
         * @interface IUpHeroStarCost
         * @property {number|null} [costType] UpHeroStarCost costType
         * @property {Array.<number|Long>|null} [costHeroIds] UpHeroStarCost costHeroIds
         * @property {Array.<proto.IItem>|null} [costItems] UpHeroStarCost costItems
         */

        /**
         * Constructs a new UpHeroStarCost.
         * @memberof proto
         * @classdesc Represents an UpHeroStarCost.
         * @implements IUpHeroStarCost
         * @constructor
         * @param {proto.IUpHeroStarCost=} [p] Properties to set
         */
        function UpHeroStarCost(p) {
            this.costHeroIds = [];
            this.costItems = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * UpHeroStarCost costType.
         * @member {number} costType
         * @memberof proto.UpHeroStarCost
         * @instance
         */
        UpHeroStarCost.prototype.costType = 0;

        /**
         * UpHeroStarCost costHeroIds.
         * @member {Array.<number|Long>} costHeroIds
         * @memberof proto.UpHeroStarCost
         * @instance
         */
        UpHeroStarCost.prototype.costHeroIds = $util.emptyArray;

        /**
         * UpHeroStarCost costItems.
         * @member {Array.<proto.IItem>} costItems
         * @memberof proto.UpHeroStarCost
         * @instance
         */
        UpHeroStarCost.prototype.costItems = $util.emptyArray;

        /**
         * Encodes the specified UpHeroStarCost message. Does not implicitly {@link proto.UpHeroStarCost.verify|verify} messages.
         * @function encode
         * @memberof proto.UpHeroStarCost
         * @static
         * @param {proto.IUpHeroStarCost} m UpHeroStarCost message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        UpHeroStarCost.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.costType != null && Object.hasOwnProperty.call(m, "costType"))
                w.uint32(8).int32(m.costType);
            if (m.costHeroIds != null && m.costHeroIds.length) {
                w.uint32(18).fork();
                for (var i = 0; i < m.costHeroIds.length; ++i)
                    w.int64(m.costHeroIds[i]);
                w.ldelim();
            }
            if (m.costItems != null && m.costItems.length) {
                for (var i = 0; i < m.costItems.length; ++i)
                    $root.proto.Item.encode(m.costItems[i], w.uint32(26).fork()).ldelim();
            }
            return w;
        };

        /**
         * Decodes an UpHeroStarCost message from the specified reader or buffer.
         * @function decode
         * @memberof proto.UpHeroStarCost
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.UpHeroStarCost} UpHeroStarCost
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        UpHeroStarCost.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.UpHeroStarCost();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.costType = r.int32();
                    break;
                case 2:
                    if (!(m.costHeroIds && m.costHeroIds.length))
                        m.costHeroIds = [];
                    if ((t & 7) === 2) {
                        var c2 = r.uint32() + r.pos;
                        while (r.pos < c2)
                            m.costHeroIds.push(r.int64());
                    } else
                        m.costHeroIds.push(r.int64());
                    break;
                case 3:
                    if (!(m.costItems && m.costItems.length))
                        m.costItems = [];
                    m.costItems.push($root.proto.Item.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return UpHeroStarCost;
    })();

    proto.Msg_UpHeroStarReq = (function() {

        /**
         * Properties of a Msg_UpHeroStarReq.
         * @memberof proto
         * @interface IMsg_UpHeroStarReq
         * @property {number|Long|null} [heroId] Msg_UpHeroStarReq heroId
         * @property {Array.<proto.IUpHeroStarCost>|null} [upStarCosts] Msg_UpHeroStarReq upStarCosts
         */

        /**
         * Constructs a new Msg_UpHeroStarReq.
         * @memberof proto
         * @classdesc Represents a Msg_UpHeroStarReq.
         * @implements IMsg_UpHeroStarReq
         * @constructor
         * @param {proto.IMsg_UpHeroStarReq=} [p] Properties to set
         */
        function Msg_UpHeroStarReq(p) {
            this.upStarCosts = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_UpHeroStarReq heroId.
         * @member {number|Long} heroId
         * @memberof proto.Msg_UpHeroStarReq
         * @instance
         */
        Msg_UpHeroStarReq.prototype.heroId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

        /**
         * Msg_UpHeroStarReq upStarCosts.
         * @member {Array.<proto.IUpHeroStarCost>} upStarCosts
         * @memberof proto.Msg_UpHeroStarReq
         * @instance
         */
        Msg_UpHeroStarReq.prototype.upStarCosts = $util.emptyArray;

        /**
         * Encodes the specified Msg_UpHeroStarReq message. Does not implicitly {@link proto.Msg_UpHeroStarReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_UpHeroStarReq
         * @static
         * @param {proto.IMsg_UpHeroStarReq} m Msg_UpHeroStarReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_UpHeroStarReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.heroId != null && Object.hasOwnProperty.call(m, "heroId"))
                w.uint32(8).int64(m.heroId);
            if (m.upStarCosts != null && m.upStarCosts.length) {
                for (var i = 0; i < m.upStarCosts.length; ++i)
                    $root.proto.UpHeroStarCost.encode(m.upStarCosts[i], w.uint32(18).fork()).ldelim();
            }
            return w;
        };

        /**
         * Decodes a Msg_UpHeroStarReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_UpHeroStarReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_UpHeroStarReq} Msg_UpHeroStarReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_UpHeroStarReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_UpHeroStarReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.heroId = r.int64();
                    break;
                case 2:
                    if (!(m.upStarCosts && m.upStarCosts.length))
                        m.upStarCosts = [];
                    m.upStarCosts.push($root.proto.UpHeroStarCost.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_UpHeroStarReq;
    })();

    proto.Msg_UpHeroStarRsp = (function() {

        /**
         * Properties of a Msg_UpHeroStarRsp.
         * @memberof proto
         * @interface IMsg_UpHeroStarRsp
         * @property {proto.ICommonError|null} [error] Msg_UpHeroStarRsp error
         * @property {number|Long|null} [heroId] Msg_UpHeroStarRsp heroId
         * @property {number|null} [star] Msg_UpHeroStarRsp star
         */

        /**
         * Constructs a new Msg_UpHeroStarRsp.
         * @memberof proto
         * @classdesc Represents a Msg_UpHeroStarRsp.
         * @implements IMsg_UpHeroStarRsp
         * @constructor
         * @param {proto.IMsg_UpHeroStarRsp=} [p] Properties to set
         */
        function Msg_UpHeroStarRsp(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_UpHeroStarRsp error.
         * @member {proto.ICommonError|null|undefined} error
         * @memberof proto.Msg_UpHeroStarRsp
         * @instance
         */
        Msg_UpHeroStarRsp.prototype.error = null;

        /**
         * Msg_UpHeroStarRsp heroId.
         * @member {number|Long} heroId
         * @memberof proto.Msg_UpHeroStarRsp
         * @instance
         */
        Msg_UpHeroStarRsp.prototype.heroId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

        /**
         * Msg_UpHeroStarRsp star.
         * @member {number} star
         * @memberof proto.Msg_UpHeroStarRsp
         * @instance
         */
        Msg_UpHeroStarRsp.prototype.star = 0;

        /**
         * Encodes the specified Msg_UpHeroStarRsp message. Does not implicitly {@link proto.Msg_UpHeroStarRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_UpHeroStarRsp
         * @static
         * @param {proto.IMsg_UpHeroStarRsp} m Msg_UpHeroStarRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_UpHeroStarRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.error != null && Object.hasOwnProperty.call(m, "error"))
                $root.proto.CommonError.encode(m.error, w.uint32(10).fork()).ldelim();
            if (m.heroId != null && Object.hasOwnProperty.call(m, "heroId"))
                w.uint32(16).int64(m.heroId);
            if (m.star != null && Object.hasOwnProperty.call(m, "star"))
                w.uint32(24).int32(m.star);
            return w;
        };

        /**
         * Decodes a Msg_UpHeroStarRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_UpHeroStarRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_UpHeroStarRsp} Msg_UpHeroStarRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_UpHeroStarRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_UpHeroStarRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.error = $root.proto.CommonError.decode(r, r.uint32());
                    break;
                case 2:
                    m.heroId = r.int64();
                    break;
                case 3:
                    m.star = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_UpHeroStarRsp;
    })();

    proto.Msg_ResetHeroStarReq = (function() {

        /**
         * Properties of a Msg_ResetHeroStarReq.
         * @memberof proto
         * @interface IMsg_ResetHeroStarReq
         * @property {number|Long|null} [heroId] Msg_ResetHeroStarReq heroId
         */

        /**
         * Constructs a new Msg_ResetHeroStarReq.
         * @memberof proto
         * @classdesc Represents a Msg_ResetHeroStarReq.
         * @implements IMsg_ResetHeroStarReq
         * @constructor
         * @param {proto.IMsg_ResetHeroStarReq=} [p] Properties to set
         */
        function Msg_ResetHeroStarReq(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_ResetHeroStarReq heroId.
         * @member {number|Long} heroId
         * @memberof proto.Msg_ResetHeroStarReq
         * @instance
         */
        Msg_ResetHeroStarReq.prototype.heroId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

        /**
         * Encodes the specified Msg_ResetHeroStarReq message. Does not implicitly {@link proto.Msg_ResetHeroStarReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_ResetHeroStarReq
         * @static
         * @param {proto.IMsg_ResetHeroStarReq} m Msg_ResetHeroStarReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_ResetHeroStarReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.heroId != null && Object.hasOwnProperty.call(m, "heroId"))
                w.uint32(8).int64(m.heroId);
            return w;
        };

        /**
         * Decodes a Msg_ResetHeroStarReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_ResetHeroStarReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_ResetHeroStarReq} Msg_ResetHeroStarReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_ResetHeroStarReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_ResetHeroStarReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.heroId = r.int64();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_ResetHeroStarReq;
    })();

    proto.Msg_ResetHeroStarRsp = (function() {

        /**
         * Properties of a Msg_ResetHeroStarRsp.
         * @memberof proto
         * @interface IMsg_ResetHeroStarRsp
         * @property {proto.ICommonError|null} [error] Msg_ResetHeroStarRsp error
         * @property {number|Long|null} [heroId] Msg_ResetHeroStarRsp heroId
         * @property {Array.<proto.IItem>|null} [rewards] Msg_ResetHeroStarRsp rewards
         * @property {number|null} [star] Msg_ResetHeroStarRsp star
         */

        /**
         * Constructs a new Msg_ResetHeroStarRsp.
         * @memberof proto
         * @classdesc Represents a Msg_ResetHeroStarRsp.
         * @implements IMsg_ResetHeroStarRsp
         * @constructor
         * @param {proto.IMsg_ResetHeroStarRsp=} [p] Properties to set
         */
        function Msg_ResetHeroStarRsp(p) {
            this.rewards = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_ResetHeroStarRsp error.
         * @member {proto.ICommonError|null|undefined} error
         * @memberof proto.Msg_ResetHeroStarRsp
         * @instance
         */
        Msg_ResetHeroStarRsp.prototype.error = null;

        /**
         * Msg_ResetHeroStarRsp heroId.
         * @member {number|Long} heroId
         * @memberof proto.Msg_ResetHeroStarRsp
         * @instance
         */
        Msg_ResetHeroStarRsp.prototype.heroId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

        /**
         * Msg_ResetHeroStarRsp rewards.
         * @member {Array.<proto.IItem>} rewards
         * @memberof proto.Msg_ResetHeroStarRsp
         * @instance
         */
        Msg_ResetHeroStarRsp.prototype.rewards = $util.emptyArray;

        /**
         * Msg_ResetHeroStarRsp star.
         * @member {number} star
         * @memberof proto.Msg_ResetHeroStarRsp
         * @instance
         */
        Msg_ResetHeroStarRsp.prototype.star = 0;

        /**
         * Encodes the specified Msg_ResetHeroStarRsp message. Does not implicitly {@link proto.Msg_ResetHeroStarRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_ResetHeroStarRsp
         * @static
         * @param {proto.IMsg_ResetHeroStarRsp} m Msg_ResetHeroStarRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_ResetHeroStarRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.error != null && Object.hasOwnProperty.call(m, "error"))
                $root.proto.CommonError.encode(m.error, w.uint32(10).fork()).ldelim();
            if (m.heroId != null && Object.hasOwnProperty.call(m, "heroId"))
                w.uint32(16).int64(m.heroId);
            if (m.rewards != null && m.rewards.length) {
                for (var i = 0; i < m.rewards.length; ++i)
                    $root.proto.Item.encode(m.rewards[i], w.uint32(26).fork()).ldelim();
            }
            if (m.star != null && Object.hasOwnProperty.call(m, "star"))
                w.uint32(32).int32(m.star);
            return w;
        };

        /**
         * Decodes a Msg_ResetHeroStarRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_ResetHeroStarRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_ResetHeroStarRsp} Msg_ResetHeroStarRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_ResetHeroStarRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_ResetHeroStarRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.error = $root.proto.CommonError.decode(r, r.uint32());
                    break;
                case 2:
                    m.heroId = r.int64();
                    break;
                case 3:
                    if (!(m.rewards && m.rewards.length))
                        m.rewards = [];
                    m.rewards.push($root.proto.Item.decode(r, r.uint32()));
                    break;
                case 4:
                    m.star = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_ResetHeroStarRsp;
    })();

    proto.Msg_DisbandHeroesReq = (function() {

        /**
         * Properties of a Msg_DisbandHeroesReq.
         * @memberof proto
         * @interface IMsg_DisbandHeroesReq
         * @property {Array.<number|Long>|null} [heroIds] Msg_DisbandHeroesReq heroIds
         */

        /**
         * Constructs a new Msg_DisbandHeroesReq.
         * @memberof proto
         * @classdesc Represents a Msg_DisbandHeroesReq.
         * @implements IMsg_DisbandHeroesReq
         * @constructor
         * @param {proto.IMsg_DisbandHeroesReq=} [p] Properties to set
         */
        function Msg_DisbandHeroesReq(p) {
            this.heroIds = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_DisbandHeroesReq heroIds.
         * @member {Array.<number|Long>} heroIds
         * @memberof proto.Msg_DisbandHeroesReq
         * @instance
         */
        Msg_DisbandHeroesReq.prototype.heroIds = $util.emptyArray;

        /**
         * Encodes the specified Msg_DisbandHeroesReq message. Does not implicitly {@link proto.Msg_DisbandHeroesReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_DisbandHeroesReq
         * @static
         * @param {proto.IMsg_DisbandHeroesReq} m Msg_DisbandHeroesReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_DisbandHeroesReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.heroIds != null && m.heroIds.length) {
                w.uint32(10).fork();
                for (var i = 0; i < m.heroIds.length; ++i)
                    w.int64(m.heroIds[i]);
                w.ldelim();
            }
            return w;
        };

        /**
         * Decodes a Msg_DisbandHeroesReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_DisbandHeroesReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_DisbandHeroesReq} Msg_DisbandHeroesReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_DisbandHeroesReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_DisbandHeroesReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.heroIds && m.heroIds.length))
                        m.heroIds = [];
                    if ((t & 7) === 2) {
                        var c2 = r.uint32() + r.pos;
                        while (r.pos < c2)
                            m.heroIds.push(r.int64());
                    } else
                        m.heroIds.push(r.int64());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_DisbandHeroesReq;
    })();

    proto.Msg_DisbandHeroesRsp = (function() {

        /**
         * Properties of a Msg_DisbandHeroesRsp.
         * @memberof proto
         * @interface IMsg_DisbandHeroesRsp
         * @property {proto.ICommonError|null} [error] Msg_DisbandHeroesRsp error
         * @property {Array.<proto.IItem>|null} [rewards] Msg_DisbandHeroesRsp rewards
         */

        /**
         * Constructs a new Msg_DisbandHeroesRsp.
         * @memberof proto
         * @classdesc Represents a Msg_DisbandHeroesRsp.
         * @implements IMsg_DisbandHeroesRsp
         * @constructor
         * @param {proto.IMsg_DisbandHeroesRsp=} [p] Properties to set
         */
        function Msg_DisbandHeroesRsp(p) {
            this.rewards = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_DisbandHeroesRsp error.
         * @member {proto.ICommonError|null|undefined} error
         * @memberof proto.Msg_DisbandHeroesRsp
         * @instance
         */
        Msg_DisbandHeroesRsp.prototype.error = null;

        /**
         * Msg_DisbandHeroesRsp rewards.
         * @member {Array.<proto.IItem>} rewards
         * @memberof proto.Msg_DisbandHeroesRsp
         * @instance
         */
        Msg_DisbandHeroesRsp.prototype.rewards = $util.emptyArray;

        /**
         * Encodes the specified Msg_DisbandHeroesRsp message. Does not implicitly {@link proto.Msg_DisbandHeroesRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_DisbandHeroesRsp
         * @static
         * @param {proto.IMsg_DisbandHeroesRsp} m Msg_DisbandHeroesRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_DisbandHeroesRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.error != null && Object.hasOwnProperty.call(m, "error"))
                $root.proto.CommonError.encode(m.error, w.uint32(10).fork()).ldelim();
            if (m.rewards != null && m.rewards.length) {
                for (var i = 0; i < m.rewards.length; ++i)
                    $root.proto.Item.encode(m.rewards[i], w.uint32(18).fork()).ldelim();
            }
            return w;
        };

        /**
         * Decodes a Msg_DisbandHeroesRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_DisbandHeroesRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_DisbandHeroesRsp} Msg_DisbandHeroesRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_DisbandHeroesRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_DisbandHeroesRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.error = $root.proto.CommonError.decode(r, r.uint32());
                    break;
                case 2:
                    if (!(m.rewards && m.rewards.length))
                        m.rewards = [];
                    m.rewards.push($root.proto.Item.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_DisbandHeroesRsp;
    })();

    proto.Msg_UpHeroStarOneClickReq = (function() {

        /**
         * Properties of a Msg_UpHeroStarOneClickReq.
         * @memberof proto
         * @interface IMsg_UpHeroStarOneClickReq
         * @property {Array.<proto.IMsg_UpHeroStarReq>|null} [upStarCosts] Msg_UpHeroStarOneClickReq upStarCosts
         */

        /**
         * Constructs a new Msg_UpHeroStarOneClickReq.
         * @memberof proto
         * @classdesc Represents a Msg_UpHeroStarOneClickReq.
         * @implements IMsg_UpHeroStarOneClickReq
         * @constructor
         * @param {proto.IMsg_UpHeroStarOneClickReq=} [p] Properties to set
         */
        function Msg_UpHeroStarOneClickReq(p) {
            this.upStarCosts = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_UpHeroStarOneClickReq upStarCosts.
         * @member {Array.<proto.IMsg_UpHeroStarReq>} upStarCosts
         * @memberof proto.Msg_UpHeroStarOneClickReq
         * @instance
         */
        Msg_UpHeroStarOneClickReq.prototype.upStarCosts = $util.emptyArray;

        /**
         * Encodes the specified Msg_UpHeroStarOneClickReq message. Does not implicitly {@link proto.Msg_UpHeroStarOneClickReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_UpHeroStarOneClickReq
         * @static
         * @param {proto.IMsg_UpHeroStarOneClickReq} m Msg_UpHeroStarOneClickReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_UpHeroStarOneClickReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.upStarCosts != null && m.upStarCosts.length) {
                for (var i = 0; i < m.upStarCosts.length; ++i)
                    $root.proto.Msg_UpHeroStarReq.encode(m.upStarCosts[i], w.uint32(10).fork()).ldelim();
            }
            return w;
        };

        /**
         * Decodes a Msg_UpHeroStarOneClickReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_UpHeroStarOneClickReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_UpHeroStarOneClickReq} Msg_UpHeroStarOneClickReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_UpHeroStarOneClickReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_UpHeroStarOneClickReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.upStarCosts && m.upStarCosts.length))
                        m.upStarCosts = [];
                    m.upStarCosts.push($root.proto.Msg_UpHeroStarReq.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_UpHeroStarOneClickReq;
    })();

    proto.Msg_UpHeroStarOneClickRsp = (function() {

        /**
         * Properties of a Msg_UpHeroStarOneClickRsp.
         * @memberof proto
         * @interface IMsg_UpHeroStarOneClickRsp
         * @property {proto.ICommonError|null} [error] Msg_UpHeroStarOneClickRsp error
         * @property {Array.<proto.IHero>|null} [heroes] Msg_UpHeroStarOneClickRsp heroes
         */

        /**
         * Constructs a new Msg_UpHeroStarOneClickRsp.
         * @memberof proto
         * @classdesc Represents a Msg_UpHeroStarOneClickRsp.
         * @implements IMsg_UpHeroStarOneClickRsp
         * @constructor
         * @param {proto.IMsg_UpHeroStarOneClickRsp=} [p] Properties to set
         */
        function Msg_UpHeroStarOneClickRsp(p) {
            this.heroes = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_UpHeroStarOneClickRsp error.
         * @member {proto.ICommonError|null|undefined} error
         * @memberof proto.Msg_UpHeroStarOneClickRsp
         * @instance
         */
        Msg_UpHeroStarOneClickRsp.prototype.error = null;

        /**
         * Msg_UpHeroStarOneClickRsp heroes.
         * @member {Array.<proto.IHero>} heroes
         * @memberof proto.Msg_UpHeroStarOneClickRsp
         * @instance
         */
        Msg_UpHeroStarOneClickRsp.prototype.heroes = $util.emptyArray;

        /**
         * Encodes the specified Msg_UpHeroStarOneClickRsp message. Does not implicitly {@link proto.Msg_UpHeroStarOneClickRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_UpHeroStarOneClickRsp
         * @static
         * @param {proto.IMsg_UpHeroStarOneClickRsp} m Msg_UpHeroStarOneClickRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_UpHeroStarOneClickRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.error != null && Object.hasOwnProperty.call(m, "error"))
                $root.proto.CommonError.encode(m.error, w.uint32(10).fork()).ldelim();
            if (m.heroes != null && m.heroes.length) {
                for (var i = 0; i < m.heroes.length; ++i)
                    $root.proto.Hero.encode(m.heroes[i], w.uint32(18).fork()).ldelim();
            }
            return w;
        };

        /**
         * Decodes a Msg_UpHeroStarOneClickRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_UpHeroStarOneClickRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_UpHeroStarOneClickRsp} Msg_UpHeroStarOneClickRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_UpHeroStarOneClickRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_UpHeroStarOneClickRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.error = $root.proto.CommonError.decode(r, r.uint32());
                    break;
                case 2:
                    if (!(m.heroes && m.heroes.length))
                        m.heroes = [];
                    m.heroes.push($root.proto.Hero.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_UpHeroStarOneClickRsp;
    })();

    proto.Msg_UpHeroBagCapacityReq = (function() {

        /**
         * Properties of a Msg_UpHeroBagCapacityReq.
         * @memberof proto
         * @interface IMsg_UpHeroBagCapacityReq
         */

        /**
         * Constructs a new Msg_UpHeroBagCapacityReq.
         * @memberof proto
         * @classdesc Represents a Msg_UpHeroBagCapacityReq.
         * @implements IMsg_UpHeroBagCapacityReq
         * @constructor
         * @param {proto.IMsg_UpHeroBagCapacityReq=} [p] Properties to set
         */
        function Msg_UpHeroBagCapacityReq(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Encodes the specified Msg_UpHeroBagCapacityReq message. Does not implicitly {@link proto.Msg_UpHeroBagCapacityReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_UpHeroBagCapacityReq
         * @static
         * @param {proto.IMsg_UpHeroBagCapacityReq} m Msg_UpHeroBagCapacityReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_UpHeroBagCapacityReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };

        /**
         * Decodes a Msg_UpHeroBagCapacityReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_UpHeroBagCapacityReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_UpHeroBagCapacityReq} Msg_UpHeroBagCapacityReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_UpHeroBagCapacityReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_UpHeroBagCapacityReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_UpHeroBagCapacityReq;
    })();

    proto.Msg_UpHeroBagCapacityRsp = (function() {

        /**
         * Properties of a Msg_UpHeroBagCapacityRsp.
         * @memberof proto
         * @interface IMsg_UpHeroBagCapacityRsp
         * @property {proto.ICommonError|null} [error] Msg_UpHeroBagCapacityRsp error
         * @property {number|null} [capacityLevel] Msg_UpHeroBagCapacityRsp capacityLevel
         */

        /**
         * Constructs a new Msg_UpHeroBagCapacityRsp.
         * @memberof proto
         * @classdesc Represents a Msg_UpHeroBagCapacityRsp.
         * @implements IMsg_UpHeroBagCapacityRsp
         * @constructor
         * @param {proto.IMsg_UpHeroBagCapacityRsp=} [p] Properties to set
         */
        function Msg_UpHeroBagCapacityRsp(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_UpHeroBagCapacityRsp error.
         * @member {proto.ICommonError|null|undefined} error
         * @memberof proto.Msg_UpHeroBagCapacityRsp
         * @instance
         */
        Msg_UpHeroBagCapacityRsp.prototype.error = null;

        /**
         * Msg_UpHeroBagCapacityRsp capacityLevel.
         * @member {number} capacityLevel
         * @memberof proto.Msg_UpHeroBagCapacityRsp
         * @instance
         */
        Msg_UpHeroBagCapacityRsp.prototype.capacityLevel = 0;

        /**
         * Encodes the specified Msg_UpHeroBagCapacityRsp message. Does not implicitly {@link proto.Msg_UpHeroBagCapacityRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_UpHeroBagCapacityRsp
         * @static
         * @param {proto.IMsg_UpHeroBagCapacityRsp} m Msg_UpHeroBagCapacityRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_UpHeroBagCapacityRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.error != null && Object.hasOwnProperty.call(m, "error"))
                $root.proto.CommonError.encode(m.error, w.uint32(10).fork()).ldelim();
            if (m.capacityLevel != null && Object.hasOwnProperty.call(m, "capacityLevel"))
                w.uint32(16).int32(m.capacityLevel);
            return w;
        };

        /**
         * Decodes a Msg_UpHeroBagCapacityRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_UpHeroBagCapacityRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_UpHeroBagCapacityRsp} Msg_UpHeroBagCapacityRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_UpHeroBagCapacityRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_UpHeroBagCapacityRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.error = $root.proto.CommonError.decode(r, r.uint32());
                    break;
                case 2:
                    m.capacityLevel = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_UpHeroBagCapacityRsp;
    })();

    proto.EquipData = (function() {

        /**
         * Properties of an EquipData.
         * @memberof proto
         * @interface IEquipData
         * @property {number|Long|null} [id] EquipData id
         * @property {number|null} [itemId] EquipData itemId
         * @property {number|null} [score] EquipData score
         * @property {Array.<number>|null} [baseAttr] EquipData baseAttr
         * @property {Array.<number>|null} [extraAttr] EquipData extraAttr
         * @property {Array.<number>|null} [skillList] EquipData skillList
         * @property {number|null} [luckRecastRCount] EquipData luckRecastRCount
         * @property {Array.<number>|null} [newSkillList1] EquipData newSkillList1
         * @property {Array.<number>|null} [newSkillList2] EquipData newSkillList2
         * @property {boolean|null} [locked] EquipData locked
         */

        /**
         * Constructs a new EquipData.
         * @memberof proto
         * @classdesc Represents an EquipData.
         * @implements IEquipData
         * @constructor
         * @param {proto.IEquipData=} [p] Properties to set
         */
        function EquipData(p) {
            this.baseAttr = [];
            this.extraAttr = [];
            this.skillList = [];
            this.newSkillList1 = [];
            this.newSkillList2 = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * EquipData id.
         * @member {number|Long} id
         * @memberof proto.EquipData
         * @instance
         */
        EquipData.prototype.id = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

        /**
         * EquipData itemId.
         * @member {number} itemId
         * @memberof proto.EquipData
         * @instance
         */
        EquipData.prototype.itemId = 0;

        /**
         * EquipData score.
         * @member {number} score
         * @memberof proto.EquipData
         * @instance
         */
        EquipData.prototype.score = 0;

        /**
         * EquipData baseAttr.
         * @member {Array.<number>} baseAttr
         * @memberof proto.EquipData
         * @instance
         */
        EquipData.prototype.baseAttr = $util.emptyArray;

        /**
         * EquipData extraAttr.
         * @member {Array.<number>} extraAttr
         * @memberof proto.EquipData
         * @instance
         */
        EquipData.prototype.extraAttr = $util.emptyArray;

        /**
         * EquipData skillList.
         * @member {Array.<number>} skillList
         * @memberof proto.EquipData
         * @instance
         */
        EquipData.prototype.skillList = $util.emptyArray;

        /**
         * EquipData luckRecastRCount.
         * @member {number} luckRecastRCount
         * @memberof proto.EquipData
         * @instance
         */
        EquipData.prototype.luckRecastRCount = 0;

        /**
         * EquipData newSkillList1.
         * @member {Array.<number>} newSkillList1
         * @memberof proto.EquipData
         * @instance
         */
        EquipData.prototype.newSkillList1 = $util.emptyArray;

        /**
         * EquipData newSkillList2.
         * @member {Array.<number>} newSkillList2
         * @memberof proto.EquipData
         * @instance
         */
        EquipData.prototype.newSkillList2 = $util.emptyArray;

        /**
         * EquipData locked.
         * @member {boolean} locked
         * @memberof proto.EquipData
         * @instance
         */
        EquipData.prototype.locked = false;

        /**
         * Encodes the specified EquipData message. Does not implicitly {@link proto.EquipData.verify|verify} messages.
         * @function encode
         * @memberof proto.EquipData
         * @static
         * @param {proto.IEquipData} m EquipData message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        EquipData.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.id != null && Object.hasOwnProperty.call(m, "id"))
                w.uint32(8).int64(m.id);
            if (m.itemId != null && Object.hasOwnProperty.call(m, "itemId"))
                w.uint32(16).int32(m.itemId);
            if (m.score != null && Object.hasOwnProperty.call(m, "score"))
                w.uint32(24).int32(m.score);
            if (m.baseAttr != null && m.baseAttr.length) {
                w.uint32(34).fork();
                for (var i = 0; i < m.baseAttr.length; ++i)
                    w.int32(m.baseAttr[i]);
                w.ldelim();
            }
            if (m.extraAttr != null && m.extraAttr.length) {
                w.uint32(42).fork();
                for (var i = 0; i < m.extraAttr.length; ++i)
                    w.int32(m.extraAttr[i]);
                w.ldelim();
            }
            if (m.skillList != null && m.skillList.length) {
                w.uint32(50).fork();
                for (var i = 0; i < m.skillList.length; ++i)
                    w.int32(m.skillList[i]);
                w.ldelim();
            }
            if (m.luckRecastRCount != null && Object.hasOwnProperty.call(m, "luckRecastRCount"))
                w.uint32(56).int32(m.luckRecastRCount);
            if (m.newSkillList1 != null && m.newSkillList1.length) {
                w.uint32(66).fork();
                for (var i = 0; i < m.newSkillList1.length; ++i)
                    w.int32(m.newSkillList1[i]);
                w.ldelim();
            }
            if (m.newSkillList2 != null && m.newSkillList2.length) {
                w.uint32(74).fork();
                for (var i = 0; i < m.newSkillList2.length; ++i)
                    w.int32(m.newSkillList2[i]);
                w.ldelim();
            }
            if (m.locked != null && Object.hasOwnProperty.call(m, "locked"))
                w.uint32(80).bool(m.locked);
            return w;
        };

        /**
         * Decodes an EquipData message from the specified reader or buffer.
         * @function decode
         * @memberof proto.EquipData
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.EquipData} EquipData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        EquipData.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.EquipData();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.id = r.int64();
                    break;
                case 2:
                    m.itemId = r.int32();
                    break;
                case 3:
                    m.score = r.int32();
                    break;
                case 4:
                    if (!(m.baseAttr && m.baseAttr.length))
                        m.baseAttr = [];
                    if ((t & 7) === 2) {
                        var c2 = r.uint32() + r.pos;
                        while (r.pos < c2)
                            m.baseAttr.push(r.int32());
                    } else
                        m.baseAttr.push(r.int32());
                    break;
                case 5:
                    if (!(m.extraAttr && m.extraAttr.length))
                        m.extraAttr = [];
                    if ((t & 7) === 2) {
                        var c2 = r.uint32() + r.pos;
                        while (r.pos < c2)
                            m.extraAttr.push(r.int32());
                    } else
                        m.extraAttr.push(r.int32());
                    break;
                case 6:
                    if (!(m.skillList && m.skillList.length))
                        m.skillList = [];
                    if ((t & 7) === 2) {
                        var c2 = r.uint32() + r.pos;
                        while (r.pos < c2)
                            m.skillList.push(r.int32());
                    } else
                        m.skillList.push(r.int32());
                    break;
                case 7:
                    m.luckRecastRCount = r.int32();
                    break;
                case 8:
                    if (!(m.newSkillList1 && m.newSkillList1.length))
                        m.newSkillList1 = [];
                    if ((t & 7) === 2) {
                        var c2 = r.uint32() + r.pos;
                        while (r.pos < c2)
                            m.newSkillList1.push(r.int32());
                    } else
                        m.newSkillList1.push(r.int32());
                    break;
                case 9:
                    if (!(m.newSkillList2 && m.newSkillList2.length))
                        m.newSkillList2 = [];
                    if ((t & 7) === 2) {
                        var c2 = r.uint32() + r.pos;
                        while (r.pos < c2)
                            m.newSkillList2.push(r.int32());
                    } else
                        m.newSkillList2.push(r.int32());
                    break;
                case 10:
                    m.locked = r.bool();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return EquipData;
    })();

    proto.HeroMasterData = (function() {

        /**
         * Properties of a HeroMasterData.
         * @memberof proto
         * @interface IHeroMasterData
         * @property {number|null} [qualityLv] HeroMasterData qualityLv
         * @property {number|null} [enhanceLv] HeroMasterData enhanceLv
         * @property {number|null} [refineLv] HeroMasterData refineLv
         */

        /**
         * Constructs a new HeroMasterData.
         * @memberof proto
         * @classdesc Represents a HeroMasterData.
         * @implements IHeroMasterData
         * @constructor
         * @param {proto.IHeroMasterData=} [p] Properties to set
         */
        function HeroMasterData(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * HeroMasterData qualityLv.
         * @member {number} qualityLv
         * @memberof proto.HeroMasterData
         * @instance
         */
        HeroMasterData.prototype.qualityLv = 0;

        /**
         * HeroMasterData enhanceLv.
         * @member {number} enhanceLv
         * @memberof proto.HeroMasterData
         * @instance
         */
        HeroMasterData.prototype.enhanceLv = 0;

        /**
         * HeroMasterData refineLv.
         * @member {number} refineLv
         * @memberof proto.HeroMasterData
         * @instance
         */
        HeroMasterData.prototype.refineLv = 0;

        /**
         * Encodes the specified HeroMasterData message. Does not implicitly {@link proto.HeroMasterData.verify|verify} messages.
         * @function encode
         * @memberof proto.HeroMasterData
         * @static
         * @param {proto.IHeroMasterData} m HeroMasterData message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        HeroMasterData.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.qualityLv != null && Object.hasOwnProperty.call(m, "qualityLv"))
                w.uint32(8).int32(m.qualityLv);
            if (m.enhanceLv != null && Object.hasOwnProperty.call(m, "enhanceLv"))
                w.uint32(16).int32(m.enhanceLv);
            if (m.refineLv != null && Object.hasOwnProperty.call(m, "refineLv"))
                w.uint32(24).int32(m.refineLv);
            return w;
        };

        /**
         * Decodes a HeroMasterData message from the specified reader or buffer.
         * @function decode
         * @memberof proto.HeroMasterData
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.HeroMasterData} HeroMasterData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        HeroMasterData.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.HeroMasterData();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.qualityLv = r.int32();
                    break;
                case 2:
                    m.enhanceLv = r.int32();
                    break;
                case 3:
                    m.refineLv = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return HeroMasterData;
    })();

    proto.EquipSlotData = (function() {

        /**
         * Properties of an EquipSlotData.
         * @memberof proto
         * @interface IEquipSlotData
         * @property {number|Long|null} [equipId] EquipSlotData equipId
         * @property {number|null} [enhanceLv] EquipSlotData enhanceLv
         * @property {number|null} [refineLv] EquipSlotData refineLv
         */

        /**
         * Constructs a new EquipSlotData.
         * @memberof proto
         * @classdesc Represents an EquipSlotData.
         * @implements IEquipSlotData
         * @constructor
         * @param {proto.IEquipSlotData=} [p] Properties to set
         */
        function EquipSlotData(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * EquipSlotData equipId.
         * @member {number|Long} equipId
         * @memberof proto.EquipSlotData
         * @instance
         */
        EquipSlotData.prototype.equipId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

        /**
         * EquipSlotData enhanceLv.
         * @member {number} enhanceLv
         * @memberof proto.EquipSlotData
         * @instance
         */
        EquipSlotData.prototype.enhanceLv = 0;

        /**
         * EquipSlotData refineLv.
         * @member {number} refineLv
         * @memberof proto.EquipSlotData
         * @instance
         */
        EquipSlotData.prototype.refineLv = 0;

        /**
         * Encodes the specified EquipSlotData message. Does not implicitly {@link proto.EquipSlotData.verify|verify} messages.
         * @function encode
         * @memberof proto.EquipSlotData
         * @static
         * @param {proto.IEquipSlotData} m EquipSlotData message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        EquipSlotData.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.equipId != null && Object.hasOwnProperty.call(m, "equipId"))
                w.uint32(8).int64(m.equipId);
            if (m.enhanceLv != null && Object.hasOwnProperty.call(m, "enhanceLv"))
                w.uint32(16).int32(m.enhanceLv);
            if (m.refineLv != null && Object.hasOwnProperty.call(m, "refineLv"))
                w.uint32(24).int32(m.refineLv);
            return w;
        };

        /**
         * Decodes an EquipSlotData message from the specified reader or buffer.
         * @function decode
         * @memberof proto.EquipSlotData
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.EquipSlotData} EquipSlotData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        EquipSlotData.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.EquipSlotData();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.equipId = r.int64();
                    break;
                case 2:
                    m.enhanceLv = r.int32();
                    break;
                case 3:
                    m.refineLv = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return EquipSlotData;
    })();

    proto.EquipContainerData = (function() {

        /**
         * Properties of an EquipContainerData.
         * @memberof proto
         * @interface IEquipContainerData
         * @property {number|null} [heroClass] EquipContainerData heroClass
         * @property {Array.<proto.IEquipSlotData>|null} [slotData] EquipContainerData slotData
         * @property {proto.IHeroMasterData|null} [masterData] EquipContainerData masterData
         */

        /**
         * Constructs a new EquipContainerData.
         * @memberof proto
         * @classdesc Represents an EquipContainerData.
         * @implements IEquipContainerData
         * @constructor
         * @param {proto.IEquipContainerData=} [p] Properties to set
         */
        function EquipContainerData(p) {
            this.slotData = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * EquipContainerData heroClass.
         * @member {number} heroClass
         * @memberof proto.EquipContainerData
         * @instance
         */
        EquipContainerData.prototype.heroClass = 0;

        /**
         * EquipContainerData slotData.
         * @member {Array.<proto.IEquipSlotData>} slotData
         * @memberof proto.EquipContainerData
         * @instance
         */
        EquipContainerData.prototype.slotData = $util.emptyArray;

        /**
         * EquipContainerData masterData.
         * @member {proto.IHeroMasterData|null|undefined} masterData
         * @memberof proto.EquipContainerData
         * @instance
         */
        EquipContainerData.prototype.masterData = null;

        /**
         * Encodes the specified EquipContainerData message. Does not implicitly {@link proto.EquipContainerData.verify|verify} messages.
         * @function encode
         * @memberof proto.EquipContainerData
         * @static
         * @param {proto.IEquipContainerData} m EquipContainerData message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        EquipContainerData.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.heroClass != null && Object.hasOwnProperty.call(m, "heroClass"))
                w.uint32(8).int32(m.heroClass);
            if (m.slotData != null && m.slotData.length) {
                for (var i = 0; i < m.slotData.length; ++i)
                    $root.proto.EquipSlotData.encode(m.slotData[i], w.uint32(18).fork()).ldelim();
            }
            if (m.masterData != null && Object.hasOwnProperty.call(m, "masterData"))
                $root.proto.HeroMasterData.encode(m.masterData, w.uint32(26).fork()).ldelim();
            return w;
        };

        /**
         * Decodes an EquipContainerData message from the specified reader or buffer.
         * @function decode
         * @memberof proto.EquipContainerData
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.EquipContainerData} EquipContainerData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        EquipContainerData.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.EquipContainerData();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.heroClass = r.int32();
                    break;
                case 2:
                    if (!(m.slotData && m.slotData.length))
                        m.slotData = [];
                    m.slotData.push($root.proto.EquipSlotData.decode(r, r.uint32()));
                    break;
                case 3:
                    m.masterData = $root.proto.HeroMasterData.decode(r, r.uint32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return EquipContainerData;
    })();

    proto.EquipPbData = (function() {

        /**
         * Properties of an EquipPbData.
         * @memberof proto
         * @interface IEquipPbData
         * @property {Array.<proto.IEquipData>|null} [equipList] EquipPbData equipList
         * @property {Array.<proto.IEquipContainerData>|null} [containerList] EquipPbData containerList
         */

        /**
         * Constructs a new EquipPbData.
         * @memberof proto
         * @classdesc Represents an EquipPbData.
         * @implements IEquipPbData
         * @constructor
         * @param {proto.IEquipPbData=} [p] Properties to set
         */
        function EquipPbData(p) {
            this.equipList = [];
            this.containerList = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * EquipPbData equipList.
         * @member {Array.<proto.IEquipData>} equipList
         * @memberof proto.EquipPbData
         * @instance
         */
        EquipPbData.prototype.equipList = $util.emptyArray;

        /**
         * EquipPbData containerList.
         * @member {Array.<proto.IEquipContainerData>} containerList
         * @memberof proto.EquipPbData
         * @instance
         */
        EquipPbData.prototype.containerList = $util.emptyArray;

        /**
         * Encodes the specified EquipPbData message. Does not implicitly {@link proto.EquipPbData.verify|verify} messages.
         * @function encode
         * @memberof proto.EquipPbData
         * @static
         * @param {proto.IEquipPbData} m EquipPbData message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        EquipPbData.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.equipList != null && m.equipList.length) {
                for (var i = 0; i < m.equipList.length; ++i)
                    $root.proto.EquipData.encode(m.equipList[i], w.uint32(10).fork()).ldelim();
            }
            if (m.containerList != null && m.containerList.length) {
                for (var i = 0; i < m.containerList.length; ++i)
                    $root.proto.EquipContainerData.encode(m.containerList[i], w.uint32(18).fork()).ldelim();
            }
            return w;
        };

        /**
         * Decodes an EquipPbData message from the specified reader or buffer.
         * @function decode
         * @memberof proto.EquipPbData
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.EquipPbData} EquipPbData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        EquipPbData.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.EquipPbData();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.equipList && m.equipList.length))
                        m.equipList = [];
                    m.equipList.push($root.proto.EquipData.decode(r, r.uint32()));
                    break;
                case 2:
                    if (!(m.containerList && m.containerList.length))
                        m.containerList = [];
                    m.containerList.push($root.proto.EquipContainerData.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return EquipPbData;
    })();

    proto.Msg_ChangeEquipReq = (function() {

        /**
         * Properties of a Msg_ChangeEquipReq.
         * @memberof proto
         * @interface IMsg_ChangeEquipReq
         * @property {number|null} [heroClass] Msg_ChangeEquipReq heroClass
         * @property {Array.<number|Long>|null} [equipList] Msg_ChangeEquipReq equipList
         */

        /**
         * Constructs a new Msg_ChangeEquipReq.
         * @memberof proto
         * @classdesc Represents a Msg_ChangeEquipReq.
         * @implements IMsg_ChangeEquipReq
         * @constructor
         * @param {proto.IMsg_ChangeEquipReq=} [p] Properties to set
         */
        function Msg_ChangeEquipReq(p) {
            this.equipList = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_ChangeEquipReq heroClass.
         * @member {number} heroClass
         * @memberof proto.Msg_ChangeEquipReq
         * @instance
         */
        Msg_ChangeEquipReq.prototype.heroClass = 0;

        /**
         * Msg_ChangeEquipReq equipList.
         * @member {Array.<number|Long>} equipList
         * @memberof proto.Msg_ChangeEquipReq
         * @instance
         */
        Msg_ChangeEquipReq.prototype.equipList = $util.emptyArray;

        /**
         * Encodes the specified Msg_ChangeEquipReq message. Does not implicitly {@link proto.Msg_ChangeEquipReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_ChangeEquipReq
         * @static
         * @param {proto.IMsg_ChangeEquipReq} m Msg_ChangeEquipReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_ChangeEquipReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.heroClass != null && Object.hasOwnProperty.call(m, "heroClass"))
                w.uint32(8).int32(m.heroClass);
            if (m.equipList != null && m.equipList.length) {
                w.uint32(18).fork();
                for (var i = 0; i < m.equipList.length; ++i)
                    w.int64(m.equipList[i]);
                w.ldelim();
            }
            return w;
        };

        /**
         * Decodes a Msg_ChangeEquipReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_ChangeEquipReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_ChangeEquipReq} Msg_ChangeEquipReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_ChangeEquipReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_ChangeEquipReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.heroClass = r.int32();
                    break;
                case 2:
                    if (!(m.equipList && m.equipList.length))
                        m.equipList = [];
                    if ((t & 7) === 2) {
                        var c2 = r.uint32() + r.pos;
                        while (r.pos < c2)
                            m.equipList.push(r.int64());
                    } else
                        m.equipList.push(r.int64());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_ChangeEquipReq;
    })();

    proto.Msg_ChangeEquipRsp = (function() {

        /**
         * Properties of a Msg_ChangeEquipRsp.
         * @memberof proto
         * @interface IMsg_ChangeEquipRsp
         * @property {proto.ICommonError|null} [error] Msg_ChangeEquipRsp error
         * @property {number|null} [heroClass] Msg_ChangeEquipRsp heroClass
         * @property {Array.<number|Long>|null} [equipList] Msg_ChangeEquipRsp equipList
         */

        /**
         * Constructs a new Msg_ChangeEquipRsp.
         * @memberof proto
         * @classdesc Represents a Msg_ChangeEquipRsp.
         * @implements IMsg_ChangeEquipRsp
         * @constructor
         * @param {proto.IMsg_ChangeEquipRsp=} [p] Properties to set
         */
        function Msg_ChangeEquipRsp(p) {
            this.equipList = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_ChangeEquipRsp error.
         * @member {proto.ICommonError|null|undefined} error
         * @memberof proto.Msg_ChangeEquipRsp
         * @instance
         */
        Msg_ChangeEquipRsp.prototype.error = null;

        /**
         * Msg_ChangeEquipRsp heroClass.
         * @member {number} heroClass
         * @memberof proto.Msg_ChangeEquipRsp
         * @instance
         */
        Msg_ChangeEquipRsp.prototype.heroClass = 0;

        /**
         * Msg_ChangeEquipRsp equipList.
         * @member {Array.<number|Long>} equipList
         * @memberof proto.Msg_ChangeEquipRsp
         * @instance
         */
        Msg_ChangeEquipRsp.prototype.equipList = $util.emptyArray;

        /**
         * Encodes the specified Msg_ChangeEquipRsp message. Does not implicitly {@link proto.Msg_ChangeEquipRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_ChangeEquipRsp
         * @static
         * @param {proto.IMsg_ChangeEquipRsp} m Msg_ChangeEquipRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_ChangeEquipRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.error != null && Object.hasOwnProperty.call(m, "error"))
                $root.proto.CommonError.encode(m.error, w.uint32(10).fork()).ldelim();
            if (m.heroClass != null && Object.hasOwnProperty.call(m, "heroClass"))
                w.uint32(16).int32(m.heroClass);
            if (m.equipList != null && m.equipList.length) {
                w.uint32(26).fork();
                for (var i = 0; i < m.equipList.length; ++i)
                    w.int64(m.equipList[i]);
                w.ldelim();
            }
            return w;
        };

        /**
         * Decodes a Msg_ChangeEquipRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_ChangeEquipRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_ChangeEquipRsp} Msg_ChangeEquipRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_ChangeEquipRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_ChangeEquipRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.error = $root.proto.CommonError.decode(r, r.uint32());
                    break;
                case 2:
                    m.heroClass = r.int32();
                    break;
                case 3:
                    if (!(m.equipList && m.equipList.length))
                        m.equipList = [];
                    if ((t & 7) === 2) {
                        var c2 = r.uint32() + r.pos;
                        while (r.pos < c2)
                            m.equipList.push(r.int64());
                    } else
                        m.equipList.push(r.int64());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_ChangeEquipRsp;
    })();

    proto.Msg_UndressEquipReq = (function() {

        /**
         * Properties of a Msg_UndressEquipReq.
         * @memberof proto
         * @interface IMsg_UndressEquipReq
         * @property {number|null} [heroClass] Msg_UndressEquipReq heroClass
         * @property {number|Long|null} [equipId] Msg_UndressEquipReq equipId
         */

        /**
         * Constructs a new Msg_UndressEquipReq.
         * @memberof proto
         * @classdesc Represents a Msg_UndressEquipReq.
         * @implements IMsg_UndressEquipReq
         * @constructor
         * @param {proto.IMsg_UndressEquipReq=} [p] Properties to set
         */
        function Msg_UndressEquipReq(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_UndressEquipReq heroClass.
         * @member {number} heroClass
         * @memberof proto.Msg_UndressEquipReq
         * @instance
         */
        Msg_UndressEquipReq.prototype.heroClass = 0;

        /**
         * Msg_UndressEquipReq equipId.
         * @member {number|Long} equipId
         * @memberof proto.Msg_UndressEquipReq
         * @instance
         */
        Msg_UndressEquipReq.prototype.equipId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

        /**
         * Encodes the specified Msg_UndressEquipReq message. Does not implicitly {@link proto.Msg_UndressEquipReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_UndressEquipReq
         * @static
         * @param {proto.IMsg_UndressEquipReq} m Msg_UndressEquipReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_UndressEquipReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.heroClass != null && Object.hasOwnProperty.call(m, "heroClass"))
                w.uint32(8).int32(m.heroClass);
            if (m.equipId != null && Object.hasOwnProperty.call(m, "equipId"))
                w.uint32(16).int64(m.equipId);
            return w;
        };

        /**
         * Decodes a Msg_UndressEquipReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_UndressEquipReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_UndressEquipReq} Msg_UndressEquipReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_UndressEquipReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_UndressEquipReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.heroClass = r.int32();
                    break;
                case 2:
                    m.equipId = r.int64();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_UndressEquipReq;
    })();

    proto.Msg_UndressEquipRsp = (function() {

        /**
         * Properties of a Msg_UndressEquipRsp.
         * @memberof proto
         * @interface IMsg_UndressEquipRsp
         * @property {proto.ICommonError|null} [error] Msg_UndressEquipRsp error
         * @property {number|null} [heroClass] Msg_UndressEquipRsp heroClass
         * @property {number|Long|null} [equipId] Msg_UndressEquipRsp equipId
         */

        /**
         * Constructs a new Msg_UndressEquipRsp.
         * @memberof proto
         * @classdesc Represents a Msg_UndressEquipRsp.
         * @implements IMsg_UndressEquipRsp
         * @constructor
         * @param {proto.IMsg_UndressEquipRsp=} [p] Properties to set
         */
        function Msg_UndressEquipRsp(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_UndressEquipRsp error.
         * @member {proto.ICommonError|null|undefined} error
         * @memberof proto.Msg_UndressEquipRsp
         * @instance
         */
        Msg_UndressEquipRsp.prototype.error = null;

        /**
         * Msg_UndressEquipRsp heroClass.
         * @member {number} heroClass
         * @memberof proto.Msg_UndressEquipRsp
         * @instance
         */
        Msg_UndressEquipRsp.prototype.heroClass = 0;

        /**
         * Msg_UndressEquipRsp equipId.
         * @member {number|Long} equipId
         * @memberof proto.Msg_UndressEquipRsp
         * @instance
         */
        Msg_UndressEquipRsp.prototype.equipId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

        /**
         * Encodes the specified Msg_UndressEquipRsp message. Does not implicitly {@link proto.Msg_UndressEquipRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_UndressEquipRsp
         * @static
         * @param {proto.IMsg_UndressEquipRsp} m Msg_UndressEquipRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_UndressEquipRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.error != null && Object.hasOwnProperty.call(m, "error"))
                $root.proto.CommonError.encode(m.error, w.uint32(10).fork()).ldelim();
            if (m.heroClass != null && Object.hasOwnProperty.call(m, "heroClass"))
                w.uint32(16).int32(m.heroClass);
            if (m.equipId != null && Object.hasOwnProperty.call(m, "equipId"))
                w.uint32(24).int64(m.equipId);
            return w;
        };

        /**
         * Decodes a Msg_UndressEquipRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_UndressEquipRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_UndressEquipRsp} Msg_UndressEquipRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_UndressEquipRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_UndressEquipRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.error = $root.proto.CommonError.decode(r, r.uint32());
                    break;
                case 2:
                    m.heroClass = r.int32();
                    break;
                case 3:
                    m.equipId = r.int64();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_UndressEquipRsp;
    })();

    proto.Msg_SwitchEquipReq = (function() {

        /**
         * Properties of a Msg_SwitchEquipReq.
         * @memberof proto
         * @interface IMsg_SwitchEquipReq
         * @property {number|null} [heroClass1] Msg_SwitchEquipReq heroClass1
         * @property {number|Long|null} [equipId1] Msg_SwitchEquipReq equipId1
         * @property {number|null} [heroClass2] Msg_SwitchEquipReq heroClass2
         * @property {number|Long|null} [equipId2] Msg_SwitchEquipReq equipId2
         */

        /**
         * Constructs a new Msg_SwitchEquipReq.
         * @memberof proto
         * @classdesc Represents a Msg_SwitchEquipReq.
         * @implements IMsg_SwitchEquipReq
         * @constructor
         * @param {proto.IMsg_SwitchEquipReq=} [p] Properties to set
         */
        function Msg_SwitchEquipReq(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_SwitchEquipReq heroClass1.
         * @member {number} heroClass1
         * @memberof proto.Msg_SwitchEquipReq
         * @instance
         */
        Msg_SwitchEquipReq.prototype.heroClass1 = 0;

        /**
         * Msg_SwitchEquipReq equipId1.
         * @member {number|Long} equipId1
         * @memberof proto.Msg_SwitchEquipReq
         * @instance
         */
        Msg_SwitchEquipReq.prototype.equipId1 = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

        /**
         * Msg_SwitchEquipReq heroClass2.
         * @member {number} heroClass2
         * @memberof proto.Msg_SwitchEquipReq
         * @instance
         */
        Msg_SwitchEquipReq.prototype.heroClass2 = 0;

        /**
         * Msg_SwitchEquipReq equipId2.
         * @member {number|Long} equipId2
         * @memberof proto.Msg_SwitchEquipReq
         * @instance
         */
        Msg_SwitchEquipReq.prototype.equipId2 = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

        /**
         * Encodes the specified Msg_SwitchEquipReq message. Does not implicitly {@link proto.Msg_SwitchEquipReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_SwitchEquipReq
         * @static
         * @param {proto.IMsg_SwitchEquipReq} m Msg_SwitchEquipReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_SwitchEquipReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.heroClass1 != null && Object.hasOwnProperty.call(m, "heroClass1"))
                w.uint32(8).int32(m.heroClass1);
            if (m.equipId1 != null && Object.hasOwnProperty.call(m, "equipId1"))
                w.uint32(16).int64(m.equipId1);
            if (m.heroClass2 != null && Object.hasOwnProperty.call(m, "heroClass2"))
                w.uint32(24).int32(m.heroClass2);
            if (m.equipId2 != null && Object.hasOwnProperty.call(m, "equipId2"))
                w.uint32(32).int64(m.equipId2);
            return w;
        };

        /**
         * Decodes a Msg_SwitchEquipReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_SwitchEquipReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_SwitchEquipReq} Msg_SwitchEquipReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_SwitchEquipReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_SwitchEquipReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.heroClass1 = r.int32();
                    break;
                case 2:
                    m.equipId1 = r.int64();
                    break;
                case 3:
                    m.heroClass2 = r.int32();
                    break;
                case 4:
                    m.equipId2 = r.int64();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_SwitchEquipReq;
    })();

    proto.Msg_SwitchEquipRsp = (function() {

        /**
         * Properties of a Msg_SwitchEquipRsp.
         * @memberof proto
         * @interface IMsg_SwitchEquipRsp
         * @property {proto.ICommonError|null} [error] Msg_SwitchEquipRsp error
         * @property {number|null} [heroClass1] Msg_SwitchEquipRsp heroClass1
         * @property {number|Long|null} [equipId1] Msg_SwitchEquipRsp equipId1
         * @property {number|null} [heroClass2] Msg_SwitchEquipRsp heroClass2
         * @property {number|Long|null} [equipId2] Msg_SwitchEquipRsp equipId2
         */

        /**
         * Constructs a new Msg_SwitchEquipRsp.
         * @memberof proto
         * @classdesc Represents a Msg_SwitchEquipRsp.
         * @implements IMsg_SwitchEquipRsp
         * @constructor
         * @param {proto.IMsg_SwitchEquipRsp=} [p] Properties to set
         */
        function Msg_SwitchEquipRsp(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_SwitchEquipRsp error.
         * @member {proto.ICommonError|null|undefined} error
         * @memberof proto.Msg_SwitchEquipRsp
         * @instance
         */
        Msg_SwitchEquipRsp.prototype.error = null;

        /**
         * Msg_SwitchEquipRsp heroClass1.
         * @member {number} heroClass1
         * @memberof proto.Msg_SwitchEquipRsp
         * @instance
         */
        Msg_SwitchEquipRsp.prototype.heroClass1 = 0;

        /**
         * Msg_SwitchEquipRsp equipId1.
         * @member {number|Long} equipId1
         * @memberof proto.Msg_SwitchEquipRsp
         * @instance
         */
        Msg_SwitchEquipRsp.prototype.equipId1 = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

        /**
         * Msg_SwitchEquipRsp heroClass2.
         * @member {number} heroClass2
         * @memberof proto.Msg_SwitchEquipRsp
         * @instance
         */
        Msg_SwitchEquipRsp.prototype.heroClass2 = 0;

        /**
         * Msg_SwitchEquipRsp equipId2.
         * @member {number|Long} equipId2
         * @memberof proto.Msg_SwitchEquipRsp
         * @instance
         */
        Msg_SwitchEquipRsp.prototype.equipId2 = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

        /**
         * Encodes the specified Msg_SwitchEquipRsp message. Does not implicitly {@link proto.Msg_SwitchEquipRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_SwitchEquipRsp
         * @static
         * @param {proto.IMsg_SwitchEquipRsp} m Msg_SwitchEquipRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_SwitchEquipRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.error != null && Object.hasOwnProperty.call(m, "error"))
                $root.proto.CommonError.encode(m.error, w.uint32(10).fork()).ldelim();
            if (m.heroClass1 != null && Object.hasOwnProperty.call(m, "heroClass1"))
                w.uint32(16).int32(m.heroClass1);
            if (m.equipId1 != null && Object.hasOwnProperty.call(m, "equipId1"))
                w.uint32(24).int64(m.equipId1);
            if (m.heroClass2 != null && Object.hasOwnProperty.call(m, "heroClass2"))
                w.uint32(32).int32(m.heroClass2);
            if (m.equipId2 != null && Object.hasOwnProperty.call(m, "equipId2"))
                w.uint32(40).int64(m.equipId2);
            return w;
        };

        /**
         * Decodes a Msg_SwitchEquipRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_SwitchEquipRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_SwitchEquipRsp} Msg_SwitchEquipRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_SwitchEquipRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_SwitchEquipRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.error = $root.proto.CommonError.decode(r, r.uint32());
                    break;
                case 2:
                    m.heroClass1 = r.int32();
                    break;
                case 3:
                    m.equipId1 = r.int64();
                    break;
                case 4:
                    m.heroClass2 = r.int32();
                    break;
                case 5:
                    m.equipId2 = r.int64();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_SwitchEquipRsp;
    })();

    proto.Msg_DecomposeEquipReq = (function() {

        /**
         * Properties of a Msg_DecomposeEquipReq.
         * @memberof proto
         * @interface IMsg_DecomposeEquipReq
         * @property {Array.<number|Long>|null} [equipList] Msg_DecomposeEquipReq equipList
         */

        /**
         * Constructs a new Msg_DecomposeEquipReq.
         * @memberof proto
         * @classdesc Represents a Msg_DecomposeEquipReq.
         * @implements IMsg_DecomposeEquipReq
         * @constructor
         * @param {proto.IMsg_DecomposeEquipReq=} [p] Properties to set
         */
        function Msg_DecomposeEquipReq(p) {
            this.equipList = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_DecomposeEquipReq equipList.
         * @member {Array.<number|Long>} equipList
         * @memberof proto.Msg_DecomposeEquipReq
         * @instance
         */
        Msg_DecomposeEquipReq.prototype.equipList = $util.emptyArray;

        /**
         * Encodes the specified Msg_DecomposeEquipReq message. Does not implicitly {@link proto.Msg_DecomposeEquipReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_DecomposeEquipReq
         * @static
         * @param {proto.IMsg_DecomposeEquipReq} m Msg_DecomposeEquipReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_DecomposeEquipReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.equipList != null && m.equipList.length) {
                w.uint32(10).fork();
                for (var i = 0; i < m.equipList.length; ++i)
                    w.int64(m.equipList[i]);
                w.ldelim();
            }
            return w;
        };

        /**
         * Decodes a Msg_DecomposeEquipReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_DecomposeEquipReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_DecomposeEquipReq} Msg_DecomposeEquipReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_DecomposeEquipReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_DecomposeEquipReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.equipList && m.equipList.length))
                        m.equipList = [];
                    if ((t & 7) === 2) {
                        var c2 = r.uint32() + r.pos;
                        while (r.pos < c2)
                            m.equipList.push(r.int64());
                    } else
                        m.equipList.push(r.int64());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_DecomposeEquipReq;
    })();

    proto.Msg_DecomposeEquipRsp = (function() {

        /**
         * Properties of a Msg_DecomposeEquipRsp.
         * @memberof proto
         * @interface IMsg_DecomposeEquipRsp
         * @property {proto.ICommonError|null} [error] Msg_DecomposeEquipRsp error
         * @property {Array.<number|Long>|null} [equipList] Msg_DecomposeEquipRsp equipList
         * @property {Array.<proto.IItem>|null} [items] Msg_DecomposeEquipRsp items
         */

        /**
         * Constructs a new Msg_DecomposeEquipRsp.
         * @memberof proto
         * @classdesc Represents a Msg_DecomposeEquipRsp.
         * @implements IMsg_DecomposeEquipRsp
         * @constructor
         * @param {proto.IMsg_DecomposeEquipRsp=} [p] Properties to set
         */
        function Msg_DecomposeEquipRsp(p) {
            this.equipList = [];
            this.items = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_DecomposeEquipRsp error.
         * @member {proto.ICommonError|null|undefined} error
         * @memberof proto.Msg_DecomposeEquipRsp
         * @instance
         */
        Msg_DecomposeEquipRsp.prototype.error = null;

        /**
         * Msg_DecomposeEquipRsp equipList.
         * @member {Array.<number|Long>} equipList
         * @memberof proto.Msg_DecomposeEquipRsp
         * @instance
         */
        Msg_DecomposeEquipRsp.prototype.equipList = $util.emptyArray;

        /**
         * Msg_DecomposeEquipRsp items.
         * @member {Array.<proto.IItem>} items
         * @memberof proto.Msg_DecomposeEquipRsp
         * @instance
         */
        Msg_DecomposeEquipRsp.prototype.items = $util.emptyArray;

        /**
         * Encodes the specified Msg_DecomposeEquipRsp message. Does not implicitly {@link proto.Msg_DecomposeEquipRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_DecomposeEquipRsp
         * @static
         * @param {proto.IMsg_DecomposeEquipRsp} m Msg_DecomposeEquipRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_DecomposeEquipRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.error != null && Object.hasOwnProperty.call(m, "error"))
                $root.proto.CommonError.encode(m.error, w.uint32(10).fork()).ldelim();
            if (m.equipList != null && m.equipList.length) {
                w.uint32(18).fork();
                for (var i = 0; i < m.equipList.length; ++i)
                    w.int64(m.equipList[i]);
                w.ldelim();
            }
            if (m.items != null && m.items.length) {
                for (var i = 0; i < m.items.length; ++i)
                    $root.proto.Item.encode(m.items[i], w.uint32(26).fork()).ldelim();
            }
            return w;
        };

        /**
         * Decodes a Msg_DecomposeEquipRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_DecomposeEquipRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_DecomposeEquipRsp} Msg_DecomposeEquipRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_DecomposeEquipRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_DecomposeEquipRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.error = $root.proto.CommonError.decode(r, r.uint32());
                    break;
                case 2:
                    if (!(m.equipList && m.equipList.length))
                        m.equipList = [];
                    if ((t & 7) === 2) {
                        var c2 = r.uint32() + r.pos;
                        while (r.pos < c2)
                            m.equipList.push(r.int64());
                    } else
                        m.equipList.push(r.int64());
                    break;
                case 3:
                    if (!(m.items && m.items.length))
                        m.items = [];
                    m.items.push($root.proto.Item.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_DecomposeEquipRsp;
    })();

    proto.Msg_EnhanceEquipReq = (function() {

        /**
         * Properties of a Msg_EnhanceEquipReq.
         * @memberof proto
         * @interface IMsg_EnhanceEquipReq
         * @property {number|null} [heroClass] Msg_EnhanceEquipReq heroClass
         * @property {Array.<number>|null} [slotList] Msg_EnhanceEquipReq slotList
         */

        /**
         * Constructs a new Msg_EnhanceEquipReq.
         * @memberof proto
         * @classdesc Represents a Msg_EnhanceEquipReq.
         * @implements IMsg_EnhanceEquipReq
         * @constructor
         * @param {proto.IMsg_EnhanceEquipReq=} [p] Properties to set
         */
        function Msg_EnhanceEquipReq(p) {
            this.slotList = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_EnhanceEquipReq heroClass.
         * @member {number} heroClass
         * @memberof proto.Msg_EnhanceEquipReq
         * @instance
         */
        Msg_EnhanceEquipReq.prototype.heroClass = 0;

        /**
         * Msg_EnhanceEquipReq slotList.
         * @member {Array.<number>} slotList
         * @memberof proto.Msg_EnhanceEquipReq
         * @instance
         */
        Msg_EnhanceEquipReq.prototype.slotList = $util.emptyArray;

        /**
         * Encodes the specified Msg_EnhanceEquipReq message. Does not implicitly {@link proto.Msg_EnhanceEquipReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_EnhanceEquipReq
         * @static
         * @param {proto.IMsg_EnhanceEquipReq} m Msg_EnhanceEquipReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_EnhanceEquipReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.heroClass != null && Object.hasOwnProperty.call(m, "heroClass"))
                w.uint32(8).int32(m.heroClass);
            if (m.slotList != null && m.slotList.length) {
                w.uint32(18).fork();
                for (var i = 0; i < m.slotList.length; ++i)
                    w.int32(m.slotList[i]);
                w.ldelim();
            }
            return w;
        };

        /**
         * Decodes a Msg_EnhanceEquipReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_EnhanceEquipReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_EnhanceEquipReq} Msg_EnhanceEquipReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_EnhanceEquipReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_EnhanceEquipReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.heroClass = r.int32();
                    break;
                case 2:
                    if (!(m.slotList && m.slotList.length))
                        m.slotList = [];
                    if ((t & 7) === 2) {
                        var c2 = r.uint32() + r.pos;
                        while (r.pos < c2)
                            m.slotList.push(r.int32());
                    } else
                        m.slotList.push(r.int32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_EnhanceEquipReq;
    })();

    proto.UpdateEquipSlotData = (function() {

        /**
         * Properties of an UpdateEquipSlotData.
         * @memberof proto
         * @interface IUpdateEquipSlotData
         * @property {number|null} [equipType] UpdateEquipSlotData equipType
         * @property {proto.IEquipSlotData|null} [slotData] UpdateEquipSlotData slotData
         */

        /**
         * Constructs a new UpdateEquipSlotData.
         * @memberof proto
         * @classdesc Represents an UpdateEquipSlotData.
         * @implements IUpdateEquipSlotData
         * @constructor
         * @param {proto.IUpdateEquipSlotData=} [p] Properties to set
         */
        function UpdateEquipSlotData(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * UpdateEquipSlotData equipType.
         * @member {number} equipType
         * @memberof proto.UpdateEquipSlotData
         * @instance
         */
        UpdateEquipSlotData.prototype.equipType = 0;

        /**
         * UpdateEquipSlotData slotData.
         * @member {proto.IEquipSlotData|null|undefined} slotData
         * @memberof proto.UpdateEquipSlotData
         * @instance
         */
        UpdateEquipSlotData.prototype.slotData = null;

        /**
         * Encodes the specified UpdateEquipSlotData message. Does not implicitly {@link proto.UpdateEquipSlotData.verify|verify} messages.
         * @function encode
         * @memberof proto.UpdateEquipSlotData
         * @static
         * @param {proto.IUpdateEquipSlotData} m UpdateEquipSlotData message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        UpdateEquipSlotData.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.equipType != null && Object.hasOwnProperty.call(m, "equipType"))
                w.uint32(8).int32(m.equipType);
            if (m.slotData != null && Object.hasOwnProperty.call(m, "slotData"))
                $root.proto.EquipSlotData.encode(m.slotData, w.uint32(18).fork()).ldelim();
            return w;
        };

        /**
         * Decodes an UpdateEquipSlotData message from the specified reader or buffer.
         * @function decode
         * @memberof proto.UpdateEquipSlotData
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.UpdateEquipSlotData} UpdateEquipSlotData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        UpdateEquipSlotData.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.UpdateEquipSlotData();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.equipType = r.int32();
                    break;
                case 2:
                    m.slotData = $root.proto.EquipSlotData.decode(r, r.uint32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return UpdateEquipSlotData;
    })();

    proto.Msg_EnhanceEquipRsp = (function() {

        /**
         * Properties of a Msg_EnhanceEquipRsp.
         * @memberof proto
         * @interface IMsg_EnhanceEquipRsp
         * @property {proto.ICommonError|null} [error] Msg_EnhanceEquipRsp error
         * @property {number|null} [heroClass] Msg_EnhanceEquipRsp heroClass
         * @property {Array.<proto.IUpdateEquipSlotData>|null} [updateData] Msg_EnhanceEquipRsp updateData
         */

        /**
         * Constructs a new Msg_EnhanceEquipRsp.
         * @memberof proto
         * @classdesc Represents a Msg_EnhanceEquipRsp.
         * @implements IMsg_EnhanceEquipRsp
         * @constructor
         * @param {proto.IMsg_EnhanceEquipRsp=} [p] Properties to set
         */
        function Msg_EnhanceEquipRsp(p) {
            this.updateData = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_EnhanceEquipRsp error.
         * @member {proto.ICommonError|null|undefined} error
         * @memberof proto.Msg_EnhanceEquipRsp
         * @instance
         */
        Msg_EnhanceEquipRsp.prototype.error = null;

        /**
         * Msg_EnhanceEquipRsp heroClass.
         * @member {number} heroClass
         * @memberof proto.Msg_EnhanceEquipRsp
         * @instance
         */
        Msg_EnhanceEquipRsp.prototype.heroClass = 0;

        /**
         * Msg_EnhanceEquipRsp updateData.
         * @member {Array.<proto.IUpdateEquipSlotData>} updateData
         * @memberof proto.Msg_EnhanceEquipRsp
         * @instance
         */
        Msg_EnhanceEquipRsp.prototype.updateData = $util.emptyArray;

        /**
         * Encodes the specified Msg_EnhanceEquipRsp message. Does not implicitly {@link proto.Msg_EnhanceEquipRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_EnhanceEquipRsp
         * @static
         * @param {proto.IMsg_EnhanceEquipRsp} m Msg_EnhanceEquipRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_EnhanceEquipRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.error != null && Object.hasOwnProperty.call(m, "error"))
                $root.proto.CommonError.encode(m.error, w.uint32(10).fork()).ldelim();
            if (m.heroClass != null && Object.hasOwnProperty.call(m, "heroClass"))
                w.uint32(16).int32(m.heroClass);
            if (m.updateData != null && m.updateData.length) {
                for (var i = 0; i < m.updateData.length; ++i)
                    $root.proto.UpdateEquipSlotData.encode(m.updateData[i], w.uint32(26).fork()).ldelim();
            }
            return w;
        };

        /**
         * Decodes a Msg_EnhanceEquipRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_EnhanceEquipRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_EnhanceEquipRsp} Msg_EnhanceEquipRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_EnhanceEquipRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_EnhanceEquipRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.error = $root.proto.CommonError.decode(r, r.uint32());
                    break;
                case 2:
                    m.heroClass = r.int32();
                    break;
                case 3:
                    if (!(m.updateData && m.updateData.length))
                        m.updateData = [];
                    m.updateData.push($root.proto.UpdateEquipSlotData.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_EnhanceEquipRsp;
    })();

    proto.Msg_RefineEquipReq = (function() {

        /**
         * Properties of a Msg_RefineEquipReq.
         * @memberof proto
         * @interface IMsg_RefineEquipReq
         * @property {number|null} [heroClass] Msg_RefineEquipReq heroClass
         * @property {number|null} [slotIndex] Msg_RefineEquipReq slotIndex
         */

        /**
         * Constructs a new Msg_RefineEquipReq.
         * @memberof proto
         * @classdesc Represents a Msg_RefineEquipReq.
         * @implements IMsg_RefineEquipReq
         * @constructor
         * @param {proto.IMsg_RefineEquipReq=} [p] Properties to set
         */
        function Msg_RefineEquipReq(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_RefineEquipReq heroClass.
         * @member {number} heroClass
         * @memberof proto.Msg_RefineEquipReq
         * @instance
         */
        Msg_RefineEquipReq.prototype.heroClass = 0;

        /**
         * Msg_RefineEquipReq slotIndex.
         * @member {number} slotIndex
         * @memberof proto.Msg_RefineEquipReq
         * @instance
         */
        Msg_RefineEquipReq.prototype.slotIndex = 0;

        /**
         * Encodes the specified Msg_RefineEquipReq message. Does not implicitly {@link proto.Msg_RefineEquipReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_RefineEquipReq
         * @static
         * @param {proto.IMsg_RefineEquipReq} m Msg_RefineEquipReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_RefineEquipReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.heroClass != null && Object.hasOwnProperty.call(m, "heroClass"))
                w.uint32(8).int32(m.heroClass);
            if (m.slotIndex != null && Object.hasOwnProperty.call(m, "slotIndex"))
                w.uint32(16).int32(m.slotIndex);
            return w;
        };

        /**
         * Decodes a Msg_RefineEquipReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_RefineEquipReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_RefineEquipReq} Msg_RefineEquipReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_RefineEquipReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_RefineEquipReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.heroClass = r.int32();
                    break;
                case 2:
                    m.slotIndex = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_RefineEquipReq;
    })();

    proto.Msg_RefineEquipRsp = (function() {

        /**
         * Properties of a Msg_RefineEquipRsp.
         * @memberof proto
         * @interface IMsg_RefineEquipRsp
         * @property {proto.ICommonError|null} [error] Msg_RefineEquipRsp error
         * @property {number|null} [heroClass] Msg_RefineEquipRsp heroClass
         * @property {proto.IUpdateEquipSlotData|null} [updateData] Msg_RefineEquipRsp updateData
         */

        /**
         * Constructs a new Msg_RefineEquipRsp.
         * @memberof proto
         * @classdesc Represents a Msg_RefineEquipRsp.
         * @implements IMsg_RefineEquipRsp
         * @constructor
         * @param {proto.IMsg_RefineEquipRsp=} [p] Properties to set
         */
        function Msg_RefineEquipRsp(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_RefineEquipRsp error.
         * @member {proto.ICommonError|null|undefined} error
         * @memberof proto.Msg_RefineEquipRsp
         * @instance
         */
        Msg_RefineEquipRsp.prototype.error = null;

        /**
         * Msg_RefineEquipRsp heroClass.
         * @member {number} heroClass
         * @memberof proto.Msg_RefineEquipRsp
         * @instance
         */
        Msg_RefineEquipRsp.prototype.heroClass = 0;

        /**
         * Msg_RefineEquipRsp updateData.
         * @member {proto.IUpdateEquipSlotData|null|undefined} updateData
         * @memberof proto.Msg_RefineEquipRsp
         * @instance
         */
        Msg_RefineEquipRsp.prototype.updateData = null;

        /**
         * Encodes the specified Msg_RefineEquipRsp message. Does not implicitly {@link proto.Msg_RefineEquipRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_RefineEquipRsp
         * @static
         * @param {proto.IMsg_RefineEquipRsp} m Msg_RefineEquipRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_RefineEquipRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.error != null && Object.hasOwnProperty.call(m, "error"))
                $root.proto.CommonError.encode(m.error, w.uint32(10).fork()).ldelim();
            if (m.heroClass != null && Object.hasOwnProperty.call(m, "heroClass"))
                w.uint32(16).int32(m.heroClass);
            if (m.updateData != null && Object.hasOwnProperty.call(m, "updateData"))
                $root.proto.UpdateEquipSlotData.encode(m.updateData, w.uint32(26).fork()).ldelim();
            return w;
        };

        /**
         * Decodes a Msg_RefineEquipRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_RefineEquipRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_RefineEquipRsp} Msg_RefineEquipRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_RefineEquipRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_RefineEquipRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.error = $root.proto.CommonError.decode(r, r.uint32());
                    break;
                case 2:
                    m.heroClass = r.int32();
                    break;
                case 3:
                    m.updateData = $root.proto.UpdateEquipSlotData.decode(r, r.uint32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_RefineEquipRsp;
    })();

    proto.Msg_UpdateHeroMasterLv = (function() {

        /**
         * Properties of a Msg_UpdateHeroMasterLv.
         * @memberof proto
         * @interface IMsg_UpdateHeroMasterLv
         * @property {number|null} [heroClass] Msg_UpdateHeroMasterLv heroClass
         * @property {proto.IHeroMasterData|null} [masterData] Msg_UpdateHeroMasterLv masterData
         */

        /**
         * Constructs a new Msg_UpdateHeroMasterLv.
         * @memberof proto
         * @classdesc Represents a Msg_UpdateHeroMasterLv.
         * @implements IMsg_UpdateHeroMasterLv
         * @constructor
         * @param {proto.IMsg_UpdateHeroMasterLv=} [p] Properties to set
         */
        function Msg_UpdateHeroMasterLv(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_UpdateHeroMasterLv heroClass.
         * @member {number} heroClass
         * @memberof proto.Msg_UpdateHeroMasterLv
         * @instance
         */
        Msg_UpdateHeroMasterLv.prototype.heroClass = 0;

        /**
         * Msg_UpdateHeroMasterLv masterData.
         * @member {proto.IHeroMasterData|null|undefined} masterData
         * @memberof proto.Msg_UpdateHeroMasterLv
         * @instance
         */
        Msg_UpdateHeroMasterLv.prototype.masterData = null;

        /**
         * Encodes the specified Msg_UpdateHeroMasterLv message. Does not implicitly {@link proto.Msg_UpdateHeroMasterLv.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_UpdateHeroMasterLv
         * @static
         * @param {proto.IMsg_UpdateHeroMasterLv} m Msg_UpdateHeroMasterLv message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_UpdateHeroMasterLv.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.heroClass != null && Object.hasOwnProperty.call(m, "heroClass"))
                w.uint32(8).int32(m.heroClass);
            if (m.masterData != null && Object.hasOwnProperty.call(m, "masterData"))
                $root.proto.HeroMasterData.encode(m.masterData, w.uint32(18).fork()).ldelim();
            return w;
        };

        /**
         * Decodes a Msg_UpdateHeroMasterLv message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_UpdateHeroMasterLv
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_UpdateHeroMasterLv} Msg_UpdateHeroMasterLv
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_UpdateHeroMasterLv.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_UpdateHeroMasterLv();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.heroClass = r.int32();
                    break;
                case 2:
                    m.masterData = $root.proto.HeroMasterData.decode(r, r.uint32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_UpdateHeroMasterLv;
    })();

    proto.Msg_ReceiveRecommendTeamRewardReq = (function() {

        /**
         * Properties of a Msg_ReceiveRecommendTeamRewardReq.
         * @memberof proto
         * @interface IMsg_ReceiveRecommendTeamRewardReq
         * @property {number|null} [recommendTeamId] Msg_ReceiveRecommendTeamRewardReq recommendTeamId
         */

        /**
         * Constructs a new Msg_ReceiveRecommendTeamRewardReq.
         * @memberof proto
         * @classdesc Represents a Msg_ReceiveRecommendTeamRewardReq.
         * @implements IMsg_ReceiveRecommendTeamRewardReq
         * @constructor
         * @param {proto.IMsg_ReceiveRecommendTeamRewardReq=} [p] Properties to set
         */
        function Msg_ReceiveRecommendTeamRewardReq(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_ReceiveRecommendTeamRewardReq recommendTeamId.
         * @member {number} recommendTeamId
         * @memberof proto.Msg_ReceiveRecommendTeamRewardReq
         * @instance
         */
        Msg_ReceiveRecommendTeamRewardReq.prototype.recommendTeamId = 0;

        /**
         * Encodes the specified Msg_ReceiveRecommendTeamRewardReq message. Does not implicitly {@link proto.Msg_ReceiveRecommendTeamRewardReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_ReceiveRecommendTeamRewardReq
         * @static
         * @param {proto.IMsg_ReceiveRecommendTeamRewardReq} m Msg_ReceiveRecommendTeamRewardReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_ReceiveRecommendTeamRewardReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.recommendTeamId != null && Object.hasOwnProperty.call(m, "recommendTeamId"))
                w.uint32(8).int32(m.recommendTeamId);
            return w;
        };

        /**
         * Decodes a Msg_ReceiveRecommendTeamRewardReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_ReceiveRecommendTeamRewardReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_ReceiveRecommendTeamRewardReq} Msg_ReceiveRecommendTeamRewardReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_ReceiveRecommendTeamRewardReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_ReceiveRecommendTeamRewardReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.recommendTeamId = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_ReceiveRecommendTeamRewardReq;
    })();

    proto.Msg_ReceiveRecommendTeamRewardRsp = (function() {

        /**
         * Properties of a Msg_ReceiveRecommendTeamRewardRsp.
         * @memberof proto
         * @interface IMsg_ReceiveRecommendTeamRewardRsp
         * @property {proto.ICommonError|null} [error] Msg_ReceiveRecommendTeamRewardRsp error
         * @property {number|null} [recommendTeamId] Msg_ReceiveRecommendTeamRewardRsp recommendTeamId
         * @property {Array.<proto.IItem>|null} [rewards] Msg_ReceiveRecommendTeamRewardRsp rewards
         */

        /**
         * Constructs a new Msg_ReceiveRecommendTeamRewardRsp.
         * @memberof proto
         * @classdesc Represents a Msg_ReceiveRecommendTeamRewardRsp.
         * @implements IMsg_ReceiveRecommendTeamRewardRsp
         * @constructor
         * @param {proto.IMsg_ReceiveRecommendTeamRewardRsp=} [p] Properties to set
         */
        function Msg_ReceiveRecommendTeamRewardRsp(p) {
            this.rewards = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_ReceiveRecommendTeamRewardRsp error.
         * @member {proto.ICommonError|null|undefined} error
         * @memberof proto.Msg_ReceiveRecommendTeamRewardRsp
         * @instance
         */
        Msg_ReceiveRecommendTeamRewardRsp.prototype.error = null;

        /**
         * Msg_ReceiveRecommendTeamRewardRsp recommendTeamId.
         * @member {number} recommendTeamId
         * @memberof proto.Msg_ReceiveRecommendTeamRewardRsp
         * @instance
         */
        Msg_ReceiveRecommendTeamRewardRsp.prototype.recommendTeamId = 0;

        /**
         * Msg_ReceiveRecommendTeamRewardRsp rewards.
         * @member {Array.<proto.IItem>} rewards
         * @memberof proto.Msg_ReceiveRecommendTeamRewardRsp
         * @instance
         */
        Msg_ReceiveRecommendTeamRewardRsp.prototype.rewards = $util.emptyArray;

        /**
         * Encodes the specified Msg_ReceiveRecommendTeamRewardRsp message. Does not implicitly {@link proto.Msg_ReceiveRecommendTeamRewardRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_ReceiveRecommendTeamRewardRsp
         * @static
         * @param {proto.IMsg_ReceiveRecommendTeamRewardRsp} m Msg_ReceiveRecommendTeamRewardRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_ReceiveRecommendTeamRewardRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.error != null && Object.hasOwnProperty.call(m, "error"))
                $root.proto.CommonError.encode(m.error, w.uint32(10).fork()).ldelim();
            if (m.recommendTeamId != null && Object.hasOwnProperty.call(m, "recommendTeamId"))
                w.uint32(16).int32(m.recommendTeamId);
            if (m.rewards != null && m.rewards.length) {
                for (var i = 0; i < m.rewards.length; ++i)
                    $root.proto.Item.encode(m.rewards[i], w.uint32(26).fork()).ldelim();
            }
            return w;
        };

        /**
         * Decodes a Msg_ReceiveRecommendTeamRewardRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_ReceiveRecommendTeamRewardRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_ReceiveRecommendTeamRewardRsp} Msg_ReceiveRecommendTeamRewardRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_ReceiveRecommendTeamRewardRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_ReceiveRecommendTeamRewardRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.error = $root.proto.CommonError.decode(r, r.uint32());
                    break;
                case 2:
                    m.recommendTeamId = r.int32();
                    break;
                case 3:
                    if (!(m.rewards && m.rewards.length))
                        m.rewards = [];
                    m.rewards.push($root.proto.Item.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_ReceiveRecommendTeamRewardRsp;
    })();

    proto.Msg_ReceiveHeroAlbumRewardReq = (function() {

        /**
         * Properties of a Msg_ReceiveHeroAlbumRewardReq.
         * @memberof proto
         * @interface IMsg_ReceiveHeroAlbumRewardReq
         * @property {number|null} [heroItemId] Msg_ReceiveHeroAlbumRewardReq heroItemId
         */

        /**
         * Constructs a new Msg_ReceiveHeroAlbumRewardReq.
         * @memberof proto
         * @classdesc Represents a Msg_ReceiveHeroAlbumRewardReq.
         * @implements IMsg_ReceiveHeroAlbumRewardReq
         * @constructor
         * @param {proto.IMsg_ReceiveHeroAlbumRewardReq=} [p] Properties to set
         */
        function Msg_ReceiveHeroAlbumRewardReq(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_ReceiveHeroAlbumRewardReq heroItemId.
         * @member {number} heroItemId
         * @memberof proto.Msg_ReceiveHeroAlbumRewardReq
         * @instance
         */
        Msg_ReceiveHeroAlbumRewardReq.prototype.heroItemId = 0;

        /**
         * Encodes the specified Msg_ReceiveHeroAlbumRewardReq message. Does not implicitly {@link proto.Msg_ReceiveHeroAlbumRewardReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_ReceiveHeroAlbumRewardReq
         * @static
         * @param {proto.IMsg_ReceiveHeroAlbumRewardReq} m Msg_ReceiveHeroAlbumRewardReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_ReceiveHeroAlbumRewardReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.heroItemId != null && Object.hasOwnProperty.call(m, "heroItemId"))
                w.uint32(8).int32(m.heroItemId);
            return w;
        };

        /**
         * Decodes a Msg_ReceiveHeroAlbumRewardReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_ReceiveHeroAlbumRewardReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_ReceiveHeroAlbumRewardReq} Msg_ReceiveHeroAlbumRewardReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_ReceiveHeroAlbumRewardReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_ReceiveHeroAlbumRewardReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.heroItemId = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_ReceiveHeroAlbumRewardReq;
    })();

    proto.Msg_ReceiveHeroAlbumRewardRsp = (function() {

        /**
         * Properties of a Msg_ReceiveHeroAlbumRewardRsp.
         * @memberof proto
         * @interface IMsg_ReceiveHeroAlbumRewardRsp
         * @property {proto.ICommonError|null} [error] Msg_ReceiveHeroAlbumRewardRsp error
         * @property {number|null} [heroItemId] Msg_ReceiveHeroAlbumRewardRsp heroItemId
         * @property {Array.<proto.IItem>|null} [rewards] Msg_ReceiveHeroAlbumRewardRsp rewards
         */

        /**
         * Constructs a new Msg_ReceiveHeroAlbumRewardRsp.
         * @memberof proto
         * @classdesc Represents a Msg_ReceiveHeroAlbumRewardRsp.
         * @implements IMsg_ReceiveHeroAlbumRewardRsp
         * @constructor
         * @param {proto.IMsg_ReceiveHeroAlbumRewardRsp=} [p] Properties to set
         */
        function Msg_ReceiveHeroAlbumRewardRsp(p) {
            this.rewards = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_ReceiveHeroAlbumRewardRsp error.
         * @member {proto.ICommonError|null|undefined} error
         * @memberof proto.Msg_ReceiveHeroAlbumRewardRsp
         * @instance
         */
        Msg_ReceiveHeroAlbumRewardRsp.prototype.error = null;

        /**
         * Msg_ReceiveHeroAlbumRewardRsp heroItemId.
         * @member {number} heroItemId
         * @memberof proto.Msg_ReceiveHeroAlbumRewardRsp
         * @instance
         */
        Msg_ReceiveHeroAlbumRewardRsp.prototype.heroItemId = 0;

        /**
         * Msg_ReceiveHeroAlbumRewardRsp rewards.
         * @member {Array.<proto.IItem>} rewards
         * @memberof proto.Msg_ReceiveHeroAlbumRewardRsp
         * @instance
         */
        Msg_ReceiveHeroAlbumRewardRsp.prototype.rewards = $util.emptyArray;

        /**
         * Encodes the specified Msg_ReceiveHeroAlbumRewardRsp message. Does not implicitly {@link proto.Msg_ReceiveHeroAlbumRewardRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_ReceiveHeroAlbumRewardRsp
         * @static
         * @param {proto.IMsg_ReceiveHeroAlbumRewardRsp} m Msg_ReceiveHeroAlbumRewardRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_ReceiveHeroAlbumRewardRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.error != null && Object.hasOwnProperty.call(m, "error"))
                $root.proto.CommonError.encode(m.error, w.uint32(10).fork()).ldelim();
            if (m.heroItemId != null && Object.hasOwnProperty.call(m, "heroItemId"))
                w.uint32(16).int32(m.heroItemId);
            if (m.rewards != null && m.rewards.length) {
                for (var i = 0; i < m.rewards.length; ++i)
                    $root.proto.Item.encode(m.rewards[i], w.uint32(26).fork()).ldelim();
            }
            return w;
        };

        /**
         * Decodes a Msg_ReceiveHeroAlbumRewardRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_ReceiveHeroAlbumRewardRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_ReceiveHeroAlbumRewardRsp} Msg_ReceiveHeroAlbumRewardRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_ReceiveHeroAlbumRewardRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_ReceiveHeroAlbumRewardRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.error = $root.proto.CommonError.decode(r, r.uint32());
                    break;
                case 2:
                    m.heroItemId = r.int32();
                    break;
                case 3:
                    if (!(m.rewards && m.rewards.length))
                        m.rewards = [];
                    m.rewards.push($root.proto.Item.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_ReceiveHeroAlbumRewardRsp;
    })();

    proto.Msg_UpLevelResonanceReq = (function() {

        /**
         * Properties of a Msg_UpLevelResonanceReq.
         * @memberof proto
         * @interface IMsg_UpLevelResonanceReq
         */

        /**
         * Constructs a new Msg_UpLevelResonanceReq.
         * @memberof proto
         * @classdesc Represents a Msg_UpLevelResonanceReq.
         * @implements IMsg_UpLevelResonanceReq
         * @constructor
         * @param {proto.IMsg_UpLevelResonanceReq=} [p] Properties to set
         */
        function Msg_UpLevelResonanceReq(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Encodes the specified Msg_UpLevelResonanceReq message. Does not implicitly {@link proto.Msg_UpLevelResonanceReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_UpLevelResonanceReq
         * @static
         * @param {proto.IMsg_UpLevelResonanceReq} m Msg_UpLevelResonanceReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_UpLevelResonanceReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };

        /**
         * Decodes a Msg_UpLevelResonanceReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_UpLevelResonanceReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_UpLevelResonanceReq} Msg_UpLevelResonanceReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_UpLevelResonanceReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_UpLevelResonanceReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_UpLevelResonanceReq;
    })();

    proto.Msg_UpLevelResonanceRsp = (function() {

        /**
         * Properties of a Msg_UpLevelResonanceRsp.
         * @memberof proto
         * @interface IMsg_UpLevelResonanceRsp
         * @property {proto.ICommonError|null} [error] Msg_UpLevelResonanceRsp error
         * @property {number|null} [levelResonance] Msg_UpLevelResonanceRsp levelResonance
         */

        /**
         * Constructs a new Msg_UpLevelResonanceRsp.
         * @memberof proto
         * @classdesc Represents a Msg_UpLevelResonanceRsp.
         * @implements IMsg_UpLevelResonanceRsp
         * @constructor
         * @param {proto.IMsg_UpLevelResonanceRsp=} [p] Properties to set
         */
        function Msg_UpLevelResonanceRsp(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_UpLevelResonanceRsp error.
         * @member {proto.ICommonError|null|undefined} error
         * @memberof proto.Msg_UpLevelResonanceRsp
         * @instance
         */
        Msg_UpLevelResonanceRsp.prototype.error = null;

        /**
         * Msg_UpLevelResonanceRsp levelResonance.
         * @member {number} levelResonance
         * @memberof proto.Msg_UpLevelResonanceRsp
         * @instance
         */
        Msg_UpLevelResonanceRsp.prototype.levelResonance = 0;

        /**
         * Encodes the specified Msg_UpLevelResonanceRsp message. Does not implicitly {@link proto.Msg_UpLevelResonanceRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_UpLevelResonanceRsp
         * @static
         * @param {proto.IMsg_UpLevelResonanceRsp} m Msg_UpLevelResonanceRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_UpLevelResonanceRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.error != null && Object.hasOwnProperty.call(m, "error"))
                $root.proto.CommonError.encode(m.error, w.uint32(10).fork()).ldelim();
            if (m.levelResonance != null && Object.hasOwnProperty.call(m, "levelResonance"))
                w.uint32(16).int32(m.levelResonance);
            return w;
        };

        /**
         * Decodes a Msg_UpLevelResonanceRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_UpLevelResonanceRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_UpLevelResonanceRsp} Msg_UpLevelResonanceRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_UpLevelResonanceRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_UpLevelResonanceRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.error = $root.proto.CommonError.decode(r, r.uint32());
                    break;
                case 2:
                    m.levelResonance = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_UpLevelResonanceRsp;
    })();

    proto.Msg_UpStarResonanceReq = (function() {

        /**
         * Properties of a Msg_UpStarResonanceReq.
         * @memberof proto
         * @interface IMsg_UpStarResonanceReq
         */

        /**
         * Constructs a new Msg_UpStarResonanceReq.
         * @memberof proto
         * @classdesc Represents a Msg_UpStarResonanceReq.
         * @implements IMsg_UpStarResonanceReq
         * @constructor
         * @param {proto.IMsg_UpStarResonanceReq=} [p] Properties to set
         */
        function Msg_UpStarResonanceReq(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Encodes the specified Msg_UpStarResonanceReq message. Does not implicitly {@link proto.Msg_UpStarResonanceReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_UpStarResonanceReq
         * @static
         * @param {proto.IMsg_UpStarResonanceReq} m Msg_UpStarResonanceReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_UpStarResonanceReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };

        /**
         * Decodes a Msg_UpStarResonanceReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_UpStarResonanceReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_UpStarResonanceReq} Msg_UpStarResonanceReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_UpStarResonanceReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_UpStarResonanceReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_UpStarResonanceReq;
    })();

    proto.Msg_UpStarResonanceRsp = (function() {

        /**
         * Properties of a Msg_UpStarResonanceRsp.
         * @memberof proto
         * @interface IMsg_UpStarResonanceRsp
         * @property {proto.ICommonError|null} [error] Msg_UpStarResonanceRsp error
         * @property {number|null} [starResonance] Msg_UpStarResonanceRsp starResonance
         */

        /**
         * Constructs a new Msg_UpStarResonanceRsp.
         * @memberof proto
         * @classdesc Represents a Msg_UpStarResonanceRsp.
         * @implements IMsg_UpStarResonanceRsp
         * @constructor
         * @param {proto.IMsg_UpStarResonanceRsp=} [p] Properties to set
         */
        function Msg_UpStarResonanceRsp(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_UpStarResonanceRsp error.
         * @member {proto.ICommonError|null|undefined} error
         * @memberof proto.Msg_UpStarResonanceRsp
         * @instance
         */
        Msg_UpStarResonanceRsp.prototype.error = null;

        /**
         * Msg_UpStarResonanceRsp starResonance.
         * @member {number} starResonance
         * @memberof proto.Msg_UpStarResonanceRsp
         * @instance
         */
        Msg_UpStarResonanceRsp.prototype.starResonance = 0;

        /**
         * Encodes the specified Msg_UpStarResonanceRsp message. Does not implicitly {@link proto.Msg_UpStarResonanceRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_UpStarResonanceRsp
         * @static
         * @param {proto.IMsg_UpStarResonanceRsp} m Msg_UpStarResonanceRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_UpStarResonanceRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.error != null && Object.hasOwnProperty.call(m, "error"))
                $root.proto.CommonError.encode(m.error, w.uint32(10).fork()).ldelim();
            if (m.starResonance != null && Object.hasOwnProperty.call(m, "starResonance"))
                w.uint32(16).int32(m.starResonance);
            return w;
        };

        /**
         * Decodes a Msg_UpStarResonanceRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_UpStarResonanceRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_UpStarResonanceRsp} Msg_UpStarResonanceRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_UpStarResonanceRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_UpStarResonanceRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.error = $root.proto.CommonError.decode(r, r.uint32());
                    break;
                case 2:
                    m.starResonance = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_UpStarResonanceRsp;
    })();

    proto.Msg_FeatherRecastReq = (function() {

        /**
         * Properties of a Msg_FeatherRecastReq.
         * @memberof proto
         * @interface IMsg_FeatherRecastReq
         * @property {number|Long|null} [equipId] Msg_FeatherRecastReq equipId
         */

        /**
         * Constructs a new Msg_FeatherRecastReq.
         * @memberof proto
         * @classdesc Represents a Msg_FeatherRecastReq.
         * @implements IMsg_FeatherRecastReq
         * @constructor
         * @param {proto.IMsg_FeatherRecastReq=} [p] Properties to set
         */
        function Msg_FeatherRecastReq(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_FeatherRecastReq equipId.
         * @member {number|Long} equipId
         * @memberof proto.Msg_FeatherRecastReq
         * @instance
         */
        Msg_FeatherRecastReq.prototype.equipId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

        /**
         * Encodes the specified Msg_FeatherRecastReq message. Does not implicitly {@link proto.Msg_FeatherRecastReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_FeatherRecastReq
         * @static
         * @param {proto.IMsg_FeatherRecastReq} m Msg_FeatherRecastReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_FeatherRecastReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.equipId != null && Object.hasOwnProperty.call(m, "equipId"))
                w.uint32(8).int64(m.equipId);
            return w;
        };

        /**
         * Decodes a Msg_FeatherRecastReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_FeatherRecastReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_FeatherRecastReq} Msg_FeatherRecastReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_FeatherRecastReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_FeatherRecastReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.equipId = r.int64();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_FeatherRecastReq;
    })();

    proto.Msg_FeatherRecastRsp = (function() {

        /**
         * Properties of a Msg_FeatherRecastRsp.
         * @memberof proto
         * @interface IMsg_FeatherRecastRsp
         * @property {proto.ICommonError|null} [error] Msg_FeatherRecastRsp error
         * @property {proto.IEquipData|null} [data] Msg_FeatherRecastRsp data
         */

        /**
         * Constructs a new Msg_FeatherRecastRsp.
         * @memberof proto
         * @classdesc Represents a Msg_FeatherRecastRsp.
         * @implements IMsg_FeatherRecastRsp
         * @constructor
         * @param {proto.IMsg_FeatherRecastRsp=} [p] Properties to set
         */
        function Msg_FeatherRecastRsp(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_FeatherRecastRsp error.
         * @member {proto.ICommonError|null|undefined} error
         * @memberof proto.Msg_FeatherRecastRsp
         * @instance
         */
        Msg_FeatherRecastRsp.prototype.error = null;

        /**
         * Msg_FeatherRecastRsp data.
         * @member {proto.IEquipData|null|undefined} data
         * @memberof proto.Msg_FeatherRecastRsp
         * @instance
         */
        Msg_FeatherRecastRsp.prototype.data = null;

        /**
         * Encodes the specified Msg_FeatherRecastRsp message. Does not implicitly {@link proto.Msg_FeatherRecastRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_FeatherRecastRsp
         * @static
         * @param {proto.IMsg_FeatherRecastRsp} m Msg_FeatherRecastRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_FeatherRecastRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.error != null && Object.hasOwnProperty.call(m, "error"))
                $root.proto.CommonError.encode(m.error, w.uint32(10).fork()).ldelim();
            if (m.data != null && Object.hasOwnProperty.call(m, "data"))
                $root.proto.EquipData.encode(m.data, w.uint32(18).fork()).ldelim();
            return w;
        };

        /**
         * Decodes a Msg_FeatherRecastRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_FeatherRecastRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_FeatherRecastRsp} Msg_FeatherRecastRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_FeatherRecastRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_FeatherRecastRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.error = $root.proto.CommonError.decode(r, r.uint32());
                    break;
                case 2:
                    m.data = $root.proto.EquipData.decode(r, r.uint32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_FeatherRecastRsp;
    })();

    proto.Msg_FeatherRecastConfirmReq = (function() {

        /**
         * Properties of a Msg_FeatherRecastConfirmReq.
         * @memberof proto
         * @interface IMsg_FeatherRecastConfirmReq
         * @property {number|Long|null} [equipId] Msg_FeatherRecastConfirmReq equipId
         * @property {proto.Msg_FeatherRecastConfirmReq.ConfirmResult|null} [result] Msg_FeatherRecastConfirmReq result
         */

        /**
         * Constructs a new Msg_FeatherRecastConfirmReq.
         * @memberof proto
         * @classdesc Represents a Msg_FeatherRecastConfirmReq.
         * @implements IMsg_FeatherRecastConfirmReq
         * @constructor
         * @param {proto.IMsg_FeatherRecastConfirmReq=} [p] Properties to set
         */
        function Msg_FeatherRecastConfirmReq(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_FeatherRecastConfirmReq equipId.
         * @member {number|Long} equipId
         * @memberof proto.Msg_FeatherRecastConfirmReq
         * @instance
         */
        Msg_FeatherRecastConfirmReq.prototype.equipId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

        /**
         * Msg_FeatherRecastConfirmReq result.
         * @member {proto.Msg_FeatherRecastConfirmReq.ConfirmResult} result
         * @memberof proto.Msg_FeatherRecastConfirmReq
         * @instance
         */
        Msg_FeatherRecastConfirmReq.prototype.result = 0;

        /**
         * Encodes the specified Msg_FeatherRecastConfirmReq message. Does not implicitly {@link proto.Msg_FeatherRecastConfirmReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_FeatherRecastConfirmReq
         * @static
         * @param {proto.IMsg_FeatherRecastConfirmReq} m Msg_FeatherRecastConfirmReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_FeatherRecastConfirmReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.equipId != null && Object.hasOwnProperty.call(m, "equipId"))
                w.uint32(8).int64(m.equipId);
            if (m.result != null && Object.hasOwnProperty.call(m, "result"))
                w.uint32(16).int32(m.result);
            return w;
        };

        /**
         * Decodes a Msg_FeatherRecastConfirmReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_FeatherRecastConfirmReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_FeatherRecastConfirmReq} Msg_FeatherRecastConfirmReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_FeatherRecastConfirmReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_FeatherRecastConfirmReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.equipId = r.int64();
                    break;
                case 2:
                    m.result = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        /**
         * ConfirmResult enum.
         * @name proto.Msg_FeatherRecastConfirmReq.ConfirmResult
         * @enum {number}
         * @property {number} Left=0 Left value
         * @property {number} Right=1 Right value
         */
        Msg_FeatherRecastConfirmReq.ConfirmResult = (function() {
            var valuesById = {}, values = Object.create(valuesById);
            values[valuesById[0] = "Left"] = 0;
            values[valuesById[1] = "Right"] = 1;
            return values;
        })();

        return Msg_FeatherRecastConfirmReq;
    })();

    proto.Msg_FeatherRecastConfirmRsp = (function() {

        /**
         * Properties of a Msg_FeatherRecastConfirmRsp.
         * @memberof proto
         * @interface IMsg_FeatherRecastConfirmRsp
         * @property {proto.ICommonError|null} [error] Msg_FeatherRecastConfirmRsp error
         * @property {proto.IEquipData|null} [data] Msg_FeatherRecastConfirmRsp data
         */

        /**
         * Constructs a new Msg_FeatherRecastConfirmRsp.
         * @memberof proto
         * @classdesc Represents a Msg_FeatherRecastConfirmRsp.
         * @implements IMsg_FeatherRecastConfirmRsp
         * @constructor
         * @param {proto.IMsg_FeatherRecastConfirmRsp=} [p] Properties to set
         */
        function Msg_FeatherRecastConfirmRsp(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_FeatherRecastConfirmRsp error.
         * @member {proto.ICommonError|null|undefined} error
         * @memberof proto.Msg_FeatherRecastConfirmRsp
         * @instance
         */
        Msg_FeatherRecastConfirmRsp.prototype.error = null;

        /**
         * Msg_FeatherRecastConfirmRsp data.
         * @member {proto.IEquipData|null|undefined} data
         * @memberof proto.Msg_FeatherRecastConfirmRsp
         * @instance
         */
        Msg_FeatherRecastConfirmRsp.prototype.data = null;

        /**
         * Encodes the specified Msg_FeatherRecastConfirmRsp message. Does not implicitly {@link proto.Msg_FeatherRecastConfirmRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_FeatherRecastConfirmRsp
         * @static
         * @param {proto.IMsg_FeatherRecastConfirmRsp} m Msg_FeatherRecastConfirmRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_FeatherRecastConfirmRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.error != null && Object.hasOwnProperty.call(m, "error"))
                $root.proto.CommonError.encode(m.error, w.uint32(10).fork()).ldelim();
            if (m.data != null && Object.hasOwnProperty.call(m, "data"))
                $root.proto.EquipData.encode(m.data, w.uint32(18).fork()).ldelim();
            return w;
        };

        /**
         * Decodes a Msg_FeatherRecastConfirmRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_FeatherRecastConfirmRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_FeatherRecastConfirmRsp} Msg_FeatherRecastConfirmRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_FeatherRecastConfirmRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_FeatherRecastConfirmRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.error = $root.proto.CommonError.decode(r, r.uint32());
                    break;
                case 2:
                    m.data = $root.proto.EquipData.decode(r, r.uint32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_FeatherRecastConfirmRsp;
    })();

    /**
     * EquipLockState enum.
     * @name proto.EquipLockState
     * @enum {number}
     * @property {number} Unlock=0 Unlock value
     * @property {number} Lock=1 Lock value
     */
    proto.EquipLockState = (function() {
        var valuesById = {}, values = Object.create(valuesById);
        values[valuesById[0] = "Unlock"] = 0;
        values[valuesById[1] = "Lock"] = 1;
        return values;
    })();

    proto.Msg_LockEquipReq = (function() {

        /**
         * Properties of a Msg_LockEquipReq.
         * @memberof proto
         * @interface IMsg_LockEquipReq
         * @property {number|Long|null} [equipId] Msg_LockEquipReq equipId
         * @property {proto.EquipLockState|null} [state] Msg_LockEquipReq state
         */

        /**
         * Constructs a new Msg_LockEquipReq.
         * @memberof proto
         * @classdesc Represents a Msg_LockEquipReq.
         * @implements IMsg_LockEquipReq
         * @constructor
         * @param {proto.IMsg_LockEquipReq=} [p] Properties to set
         */
        function Msg_LockEquipReq(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_LockEquipReq equipId.
         * @member {number|Long} equipId
         * @memberof proto.Msg_LockEquipReq
         * @instance
         */
        Msg_LockEquipReq.prototype.equipId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

        /**
         * Msg_LockEquipReq state.
         * @member {proto.EquipLockState} state
         * @memberof proto.Msg_LockEquipReq
         * @instance
         */
        Msg_LockEquipReq.prototype.state = 0;

        /**
         * Encodes the specified Msg_LockEquipReq message. Does not implicitly {@link proto.Msg_LockEquipReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_LockEquipReq
         * @static
         * @param {proto.IMsg_LockEquipReq} m Msg_LockEquipReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_LockEquipReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.equipId != null && Object.hasOwnProperty.call(m, "equipId"))
                w.uint32(8).int64(m.equipId);
            if (m.state != null && Object.hasOwnProperty.call(m, "state"))
                w.uint32(16).int32(m.state);
            return w;
        };

        /**
         * Decodes a Msg_LockEquipReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_LockEquipReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_LockEquipReq} Msg_LockEquipReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_LockEquipReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_LockEquipReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.equipId = r.int64();
                    break;
                case 2:
                    m.state = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_LockEquipReq;
    })();

    proto.Msg_LockEquipRsp = (function() {

        /**
         * Properties of a Msg_LockEquipRsp.
         * @memberof proto
         * @interface IMsg_LockEquipRsp
         * @property {proto.ICommonError|null} [error] Msg_LockEquipRsp error
         * @property {number|Long|null} [equipId] Msg_LockEquipRsp equipId
         * @property {proto.EquipLockState|null} [state] Msg_LockEquipRsp state
         */

        /**
         * Constructs a new Msg_LockEquipRsp.
         * @memberof proto
         * @classdesc Represents a Msg_LockEquipRsp.
         * @implements IMsg_LockEquipRsp
         * @constructor
         * @param {proto.IMsg_LockEquipRsp=} [p] Properties to set
         */
        function Msg_LockEquipRsp(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_LockEquipRsp error.
         * @member {proto.ICommonError|null|undefined} error
         * @memberof proto.Msg_LockEquipRsp
         * @instance
         */
        Msg_LockEquipRsp.prototype.error = null;

        /**
         * Msg_LockEquipRsp equipId.
         * @member {number|Long} equipId
         * @memberof proto.Msg_LockEquipRsp
         * @instance
         */
        Msg_LockEquipRsp.prototype.equipId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

        /**
         * Msg_LockEquipRsp state.
         * @member {proto.EquipLockState} state
         * @memberof proto.Msg_LockEquipRsp
         * @instance
         */
        Msg_LockEquipRsp.prototype.state = 0;

        /**
         * Encodes the specified Msg_LockEquipRsp message. Does not implicitly {@link proto.Msg_LockEquipRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_LockEquipRsp
         * @static
         * @param {proto.IMsg_LockEquipRsp} m Msg_LockEquipRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_LockEquipRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.error != null && Object.hasOwnProperty.call(m, "error"))
                $root.proto.CommonError.encode(m.error, w.uint32(10).fork()).ldelim();
            if (m.equipId != null && Object.hasOwnProperty.call(m, "equipId"))
                w.uint32(16).int64(m.equipId);
            if (m.state != null && Object.hasOwnProperty.call(m, "state"))
                w.uint32(24).int32(m.state);
            return w;
        };

        /**
         * Decodes a Msg_LockEquipRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_LockEquipRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_LockEquipRsp} Msg_LockEquipRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_LockEquipRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_LockEquipRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.error = $root.proto.CommonError.decode(r, r.uint32());
                    break;
                case 2:
                    m.equipId = r.int64();
                    break;
                case 3:
                    m.state = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_LockEquipRsp;
    })();

    proto.Msg_UpdateHeroPowerScore = (function() {

        /**
         * Properties of a Msg_UpdateHeroPowerScore.
         * @memberof proto
         * @interface IMsg_UpdateHeroPowerScore
         * @property {number|Long|null} [heroId] Msg_UpdateHeroPowerScore heroId
         * @property {number|null} [powerScore] Msg_UpdateHeroPowerScore powerScore
         */

        /**
         * Constructs a new Msg_UpdateHeroPowerScore.
         * @memberof proto
         * @classdesc Represents a Msg_UpdateHeroPowerScore.
         * @implements IMsg_UpdateHeroPowerScore
         * @constructor
         * @param {proto.IMsg_UpdateHeroPowerScore=} [p] Properties to set
         */
        function Msg_UpdateHeroPowerScore(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_UpdateHeroPowerScore heroId.
         * @member {number|Long} heroId
         * @memberof proto.Msg_UpdateHeroPowerScore
         * @instance
         */
        Msg_UpdateHeroPowerScore.prototype.heroId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

        /**
         * Msg_UpdateHeroPowerScore powerScore.
         * @member {number} powerScore
         * @memberof proto.Msg_UpdateHeroPowerScore
         * @instance
         */
        Msg_UpdateHeroPowerScore.prototype.powerScore = 0;

        /**
         * Encodes the specified Msg_UpdateHeroPowerScore message. Does not implicitly {@link proto.Msg_UpdateHeroPowerScore.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_UpdateHeroPowerScore
         * @static
         * @param {proto.IMsg_UpdateHeroPowerScore} m Msg_UpdateHeroPowerScore message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_UpdateHeroPowerScore.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.heroId != null && Object.hasOwnProperty.call(m, "heroId"))
                w.uint32(8).int64(m.heroId);
            if (m.powerScore != null && Object.hasOwnProperty.call(m, "powerScore"))
                w.uint32(16).int32(m.powerScore);
            return w;
        };

        /**
         * Decodes a Msg_UpdateHeroPowerScore message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_UpdateHeroPowerScore
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_UpdateHeroPowerScore} Msg_UpdateHeroPowerScore
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_UpdateHeroPowerScore.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_UpdateHeroPowerScore();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.heroId = r.int64();
                    break;
                case 2:
                    m.powerScore = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_UpdateHeroPowerScore;
    })();

    proto.Msg_UpdateRolePowerScore = (function() {

        /**
         * Properties of a Msg_UpdateRolePowerScore.
         * @memberof proto
         * @interface IMsg_UpdateRolePowerScore
         * @property {number|null} [powerScore] Msg_UpdateRolePowerScore powerScore
         */

        /**
         * Constructs a new Msg_UpdateRolePowerScore.
         * @memberof proto
         * @classdesc Represents a Msg_UpdateRolePowerScore.
         * @implements IMsg_UpdateRolePowerScore
         * @constructor
         * @param {proto.IMsg_UpdateRolePowerScore=} [p] Properties to set
         */
        function Msg_UpdateRolePowerScore(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_UpdateRolePowerScore powerScore.
         * @member {number} powerScore
         * @memberof proto.Msg_UpdateRolePowerScore
         * @instance
         */
        Msg_UpdateRolePowerScore.prototype.powerScore = 0;

        /**
         * Encodes the specified Msg_UpdateRolePowerScore message. Does not implicitly {@link proto.Msg_UpdateRolePowerScore.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_UpdateRolePowerScore
         * @static
         * @param {proto.IMsg_UpdateRolePowerScore} m Msg_UpdateRolePowerScore message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_UpdateRolePowerScore.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.powerScore != null && Object.hasOwnProperty.call(m, "powerScore"))
                w.uint32(8).int32(m.powerScore);
            return w;
        };

        /**
         * Decodes a Msg_UpdateRolePowerScore message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_UpdateRolePowerScore
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_UpdateRolePowerScore} Msg_UpdateRolePowerScore
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_UpdateRolePowerScore.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_UpdateRolePowerScore();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.powerScore = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_UpdateRolePowerScore;
    })();

    proto.Msg_FinishHeroStarStepReq = (function() {

        /**
         * Properties of a Msg_FinishHeroStarStepReq.
         * @memberof proto
         * @interface IMsg_FinishHeroStarStepReq
         * @property {number|Long|null} [heroId] Msg_FinishHeroStarStepReq heroId
         * @property {number|null} [stepId] Msg_FinishHeroStarStepReq stepId
         * @property {Array.<proto.IUpHeroStarCost>|null} [upStarCosts] Msg_FinishHeroStarStepReq upStarCosts
         */

        /**
         * Constructs a new Msg_FinishHeroStarStepReq.
         * @memberof proto
         * @classdesc Represents a Msg_FinishHeroStarStepReq.
         * @implements IMsg_FinishHeroStarStepReq
         * @constructor
         * @param {proto.IMsg_FinishHeroStarStepReq=} [p] Properties to set
         */
        function Msg_FinishHeroStarStepReq(p) {
            this.upStarCosts = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_FinishHeroStarStepReq heroId.
         * @member {number|Long} heroId
         * @memberof proto.Msg_FinishHeroStarStepReq
         * @instance
         */
        Msg_FinishHeroStarStepReq.prototype.heroId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

        /**
         * Msg_FinishHeroStarStepReq stepId.
         * @member {number} stepId
         * @memberof proto.Msg_FinishHeroStarStepReq
         * @instance
         */
        Msg_FinishHeroStarStepReq.prototype.stepId = 0;

        /**
         * Msg_FinishHeroStarStepReq upStarCosts.
         * @member {Array.<proto.IUpHeroStarCost>} upStarCosts
         * @memberof proto.Msg_FinishHeroStarStepReq
         * @instance
         */
        Msg_FinishHeroStarStepReq.prototype.upStarCosts = $util.emptyArray;

        /**
         * Encodes the specified Msg_FinishHeroStarStepReq message. Does not implicitly {@link proto.Msg_FinishHeroStarStepReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_FinishHeroStarStepReq
         * @static
         * @param {proto.IMsg_FinishHeroStarStepReq} m Msg_FinishHeroStarStepReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_FinishHeroStarStepReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.heroId != null && Object.hasOwnProperty.call(m, "heroId"))
                w.uint32(8).int64(m.heroId);
            if (m.stepId != null && Object.hasOwnProperty.call(m, "stepId"))
                w.uint32(16).int32(m.stepId);
            if (m.upStarCosts != null && m.upStarCosts.length) {
                for (var i = 0; i < m.upStarCosts.length; ++i)
                    $root.proto.UpHeroStarCost.encode(m.upStarCosts[i], w.uint32(26).fork()).ldelim();
            }
            return w;
        };

        /**
         * Decodes a Msg_FinishHeroStarStepReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_FinishHeroStarStepReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_FinishHeroStarStepReq} Msg_FinishHeroStarStepReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_FinishHeroStarStepReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_FinishHeroStarStepReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.heroId = r.int64();
                    break;
                case 2:
                    m.stepId = r.int32();
                    break;
                case 3:
                    if (!(m.upStarCosts && m.upStarCosts.length))
                        m.upStarCosts = [];
                    m.upStarCosts.push($root.proto.UpHeroStarCost.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_FinishHeroStarStepReq;
    })();

    proto.Msg_FinishHeroStarStepRsp = (function() {

        /**
         * Properties of a Msg_FinishHeroStarStepRsp.
         * @memberof proto
         * @interface IMsg_FinishHeroStarStepRsp
         * @property {proto.ICommonError|null} [error] Msg_FinishHeroStarStepRsp error
         * @property {number|Long|null} [heroId] Msg_FinishHeroStarStepRsp heroId
         * @property {number|null} [stepId] Msg_FinishHeroStarStepRsp stepId
         */

        /**
         * Constructs a new Msg_FinishHeroStarStepRsp.
         * @memberof proto
         * @classdesc Represents a Msg_FinishHeroStarStepRsp.
         * @implements IMsg_FinishHeroStarStepRsp
         * @constructor
         * @param {proto.IMsg_FinishHeroStarStepRsp=} [p] Properties to set
         */
        function Msg_FinishHeroStarStepRsp(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_FinishHeroStarStepRsp error.
         * @member {proto.ICommonError|null|undefined} error
         * @memberof proto.Msg_FinishHeroStarStepRsp
         * @instance
         */
        Msg_FinishHeroStarStepRsp.prototype.error = null;

        /**
         * Msg_FinishHeroStarStepRsp heroId.
         * @member {number|Long} heroId
         * @memberof proto.Msg_FinishHeroStarStepRsp
         * @instance
         */
        Msg_FinishHeroStarStepRsp.prototype.heroId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

        /**
         * Msg_FinishHeroStarStepRsp stepId.
         * @member {number} stepId
         * @memberof proto.Msg_FinishHeroStarStepRsp
         * @instance
         */
        Msg_FinishHeroStarStepRsp.prototype.stepId = 0;

        /**
         * Encodes the specified Msg_FinishHeroStarStepRsp message. Does not implicitly {@link proto.Msg_FinishHeroStarStepRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_FinishHeroStarStepRsp
         * @static
         * @param {proto.IMsg_FinishHeroStarStepRsp} m Msg_FinishHeroStarStepRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_FinishHeroStarStepRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.error != null && Object.hasOwnProperty.call(m, "error"))
                $root.proto.CommonError.encode(m.error, w.uint32(10).fork()).ldelim();
            if (m.heroId != null && Object.hasOwnProperty.call(m, "heroId"))
                w.uint32(16).int64(m.heroId);
            if (m.stepId != null && Object.hasOwnProperty.call(m, "stepId"))
                w.uint32(24).int32(m.stepId);
            return w;
        };

        /**
         * Decodes a Msg_FinishHeroStarStepRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_FinishHeroStarStepRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_FinishHeroStarStepRsp} Msg_FinishHeroStarStepRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_FinishHeroStarStepRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_FinishHeroStarStepRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.error = $root.proto.CommonError.decode(r, r.uint32());
                    break;
                case 2:
                    m.heroId = r.int64();
                    break;
                case 3:
                    m.stepId = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_FinishHeroStarStepRsp;
    })();

    proto.GenePbData = (function() {

        /**
         * Properties of a GenePbData.
         * @memberof proto
         * @interface IGenePbData
         * @property {number|null} [smallGeneLevel] GenePbData smallGeneLevel
         * @property {number|null} [bigGeneLevel] GenePbData bigGeneLevel
         */

        /**
         * Constructs a new GenePbData.
         * @memberof proto
         * @classdesc Represents a GenePbData.
         * @implements IGenePbData
         * @constructor
         * @param {proto.IGenePbData=} [p] Properties to set
         */
        function GenePbData(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * GenePbData smallGeneLevel.
         * @member {number} smallGeneLevel
         * @memberof proto.GenePbData
         * @instance
         */
        GenePbData.prototype.smallGeneLevel = 0;

        /**
         * GenePbData bigGeneLevel.
         * @member {number} bigGeneLevel
         * @memberof proto.GenePbData
         * @instance
         */
        GenePbData.prototype.bigGeneLevel = 0;

        /**
         * Encodes the specified GenePbData message. Does not implicitly {@link proto.GenePbData.verify|verify} messages.
         * @function encode
         * @memberof proto.GenePbData
         * @static
         * @param {proto.IGenePbData} m GenePbData message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        GenePbData.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.smallGeneLevel != null && Object.hasOwnProperty.call(m, "smallGeneLevel"))
                w.uint32(8).int32(m.smallGeneLevel);
            if (m.bigGeneLevel != null && Object.hasOwnProperty.call(m, "bigGeneLevel"))
                w.uint32(16).int32(m.bigGeneLevel);
            return w;
        };

        /**
         * Decodes a GenePbData message from the specified reader or buffer.
         * @function decode
         * @memberof proto.GenePbData
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.GenePbData} GenePbData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        GenePbData.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.GenePbData();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.smallGeneLevel = r.int32();
                    break;
                case 2:
                    m.bigGeneLevel = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return GenePbData;
    })();

    proto.Msg_UpgradeGeneLevelReq = (function() {

        /**
         * Properties of a Msg_UpgradeGeneLevelReq.
         * @memberof proto
         * @interface IMsg_UpgradeGeneLevelReq
         * @property {number|null} [type] Msg_UpgradeGeneLevelReq type
         */

        /**
         * Constructs a new Msg_UpgradeGeneLevelReq.
         * @memberof proto
         * @classdesc Represents a Msg_UpgradeGeneLevelReq.
         * @implements IMsg_UpgradeGeneLevelReq
         * @constructor
         * @param {proto.IMsg_UpgradeGeneLevelReq=} [p] Properties to set
         */
        function Msg_UpgradeGeneLevelReq(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_UpgradeGeneLevelReq type.
         * @member {number} type
         * @memberof proto.Msg_UpgradeGeneLevelReq
         * @instance
         */
        Msg_UpgradeGeneLevelReq.prototype.type = 0;

        /**
         * Encodes the specified Msg_UpgradeGeneLevelReq message. Does not implicitly {@link proto.Msg_UpgradeGeneLevelReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_UpgradeGeneLevelReq
         * @static
         * @param {proto.IMsg_UpgradeGeneLevelReq} m Msg_UpgradeGeneLevelReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_UpgradeGeneLevelReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.type != null && Object.hasOwnProperty.call(m, "type"))
                w.uint32(8).int32(m.type);
            return w;
        };

        /**
         * Decodes a Msg_UpgradeGeneLevelReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_UpgradeGeneLevelReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_UpgradeGeneLevelReq} Msg_UpgradeGeneLevelReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_UpgradeGeneLevelReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_UpgradeGeneLevelReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.type = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_UpgradeGeneLevelReq;
    })();

    proto.Msg_UpgradeGeneLevelRsp = (function() {

        /**
         * Properties of a Msg_UpgradeGeneLevelRsp.
         * @memberof proto
         * @interface IMsg_UpgradeGeneLevelRsp
         * @property {proto.ICommonError|null} [error] Msg_UpgradeGeneLevelRsp error
         * @property {number|null} [type] Msg_UpgradeGeneLevelRsp type
         * @property {number|null} [level] Msg_UpgradeGeneLevelRsp level
         */

        /**
         * Constructs a new Msg_UpgradeGeneLevelRsp.
         * @memberof proto
         * @classdesc Represents a Msg_UpgradeGeneLevelRsp.
         * @implements IMsg_UpgradeGeneLevelRsp
         * @constructor
         * @param {proto.IMsg_UpgradeGeneLevelRsp=} [p] Properties to set
         */
        function Msg_UpgradeGeneLevelRsp(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_UpgradeGeneLevelRsp error.
         * @member {proto.ICommonError|null|undefined} error
         * @memberof proto.Msg_UpgradeGeneLevelRsp
         * @instance
         */
        Msg_UpgradeGeneLevelRsp.prototype.error = null;

        /**
         * Msg_UpgradeGeneLevelRsp type.
         * @member {number} type
         * @memberof proto.Msg_UpgradeGeneLevelRsp
         * @instance
         */
        Msg_UpgradeGeneLevelRsp.prototype.type = 0;

        /**
         * Msg_UpgradeGeneLevelRsp level.
         * @member {number} level
         * @memberof proto.Msg_UpgradeGeneLevelRsp
         * @instance
         */
        Msg_UpgradeGeneLevelRsp.prototype.level = 0;

        /**
         * Encodes the specified Msg_UpgradeGeneLevelRsp message. Does not implicitly {@link proto.Msg_UpgradeGeneLevelRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_UpgradeGeneLevelRsp
         * @static
         * @param {proto.IMsg_UpgradeGeneLevelRsp} m Msg_UpgradeGeneLevelRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_UpgradeGeneLevelRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.error != null && Object.hasOwnProperty.call(m, "error"))
                $root.proto.CommonError.encode(m.error, w.uint32(10).fork()).ldelim();
            if (m.type != null && Object.hasOwnProperty.call(m, "type"))
                w.uint32(16).int32(m.type);
            if (m.level != null && Object.hasOwnProperty.call(m, "level"))
                w.uint32(24).int32(m.level);
            return w;
        };

        /**
         * Decodes a Msg_UpgradeGeneLevelRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_UpgradeGeneLevelRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_UpgradeGeneLevelRsp} Msg_UpgradeGeneLevelRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_UpgradeGeneLevelRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_UpgradeGeneLevelRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.error = $root.proto.CommonError.decode(r, r.uint32());
                    break;
                case 2:
                    m.type = r.int32();
                    break;
                case 3:
                    m.level = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_UpgradeGeneLevelRsp;
    })();

    proto.BookData = (function() {

        /**
         * Properties of a BookData.
         * @memberof proto
         * @interface IBookData
         * @property {number|Long|null} [id] BookData id
         * @property {number|null} [itemId] BookData itemId
         * @property {number|null} [star] BookData star
         * @property {number|null} [level] BookData level
         * @property {number|null} [powerScore] BookData powerScore
         */

        /**
         * Constructs a new BookData.
         * @memberof proto
         * @classdesc Represents a BookData.
         * @implements IBookData
         * @constructor
         * @param {proto.IBookData=} [p] Properties to set
         */
        function BookData(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * BookData id.
         * @member {number|Long} id
         * @memberof proto.BookData
         * @instance
         */
        BookData.prototype.id = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

        /**
         * BookData itemId.
         * @member {number} itemId
         * @memberof proto.BookData
         * @instance
         */
        BookData.prototype.itemId = 0;

        /**
         * BookData star.
         * @member {number} star
         * @memberof proto.BookData
         * @instance
         */
        BookData.prototype.star = 0;

        /**
         * BookData level.
         * @member {number} level
         * @memberof proto.BookData
         * @instance
         */
        BookData.prototype.level = 0;

        /**
         * BookData powerScore.
         * @member {number} powerScore
         * @memberof proto.BookData
         * @instance
         */
        BookData.prototype.powerScore = 0;

        /**
         * Encodes the specified BookData message. Does not implicitly {@link proto.BookData.verify|verify} messages.
         * @function encode
         * @memberof proto.BookData
         * @static
         * @param {proto.IBookData} m BookData message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        BookData.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.id != null && Object.hasOwnProperty.call(m, "id"))
                w.uint32(8).int64(m.id);
            if (m.itemId != null && Object.hasOwnProperty.call(m, "itemId"))
                w.uint32(16).int32(m.itemId);
            if (m.star != null && Object.hasOwnProperty.call(m, "star"))
                w.uint32(24).int32(m.star);
            if (m.level != null && Object.hasOwnProperty.call(m, "level"))
                w.uint32(32).int32(m.level);
            if (m.powerScore != null && Object.hasOwnProperty.call(m, "powerScore"))
                w.uint32(40).int32(m.powerScore);
            return w;
        };

        /**
         * Decodes a BookData message from the specified reader or buffer.
         * @function decode
         * @memberof proto.BookData
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.BookData} BookData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        BookData.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.BookData();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.id = r.int64();
                    break;
                case 2:
                    m.itemId = r.int32();
                    break;
                case 3:
                    m.star = r.int32();
                    break;
                case 4:
                    m.level = r.int32();
                    break;
                case 5:
                    m.powerScore = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return BookData;
    })();

    proto.BookSlotData = (function() {

        /**
         * Properties of a BookSlotData.
         * @memberof proto
         * @interface IBookSlotData
         * @property {number|Long|null} [bookId] BookSlotData bookId
         */

        /**
         * Constructs a new BookSlotData.
         * @memberof proto
         * @classdesc Represents a BookSlotData.
         * @implements IBookSlotData
         * @constructor
         * @param {proto.IBookSlotData=} [p] Properties to set
         */
        function BookSlotData(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * BookSlotData bookId.
         * @member {number|Long} bookId
         * @memberof proto.BookSlotData
         * @instance
         */
        BookSlotData.prototype.bookId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

        /**
         * Encodes the specified BookSlotData message. Does not implicitly {@link proto.BookSlotData.verify|verify} messages.
         * @function encode
         * @memberof proto.BookSlotData
         * @static
         * @param {proto.IBookSlotData} m BookSlotData message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        BookSlotData.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.bookId != null && Object.hasOwnProperty.call(m, "bookId"))
                w.uint32(8).int64(m.bookId);
            return w;
        };

        /**
         * Decodes a BookSlotData message from the specified reader or buffer.
         * @function decode
         * @memberof proto.BookSlotData
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.BookSlotData} BookSlotData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        BookSlotData.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.BookSlotData();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.bookId = r.int64();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return BookSlotData;
    })();

    proto.BookContainerData = (function() {

        /**
         * Properties of a BookContainerData.
         * @memberof proto
         * @interface IBookContainerData
         * @property {number|null} [heroClass] BookContainerData heroClass
         * @property {Array.<proto.IBookSlotData>|null} [slotData] BookContainerData slotData
         */

        /**
         * Constructs a new BookContainerData.
         * @memberof proto
         * @classdesc Represents a BookContainerData.
         * @implements IBookContainerData
         * @constructor
         * @param {proto.IBookContainerData=} [p] Properties to set
         */
        function BookContainerData(p) {
            this.slotData = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * BookContainerData heroClass.
         * @member {number} heroClass
         * @memberof proto.BookContainerData
         * @instance
         */
        BookContainerData.prototype.heroClass = 0;

        /**
         * BookContainerData slotData.
         * @member {Array.<proto.IBookSlotData>} slotData
         * @memberof proto.BookContainerData
         * @instance
         */
        BookContainerData.prototype.slotData = $util.emptyArray;

        /**
         * Encodes the specified BookContainerData message. Does not implicitly {@link proto.BookContainerData.verify|verify} messages.
         * @function encode
         * @memberof proto.BookContainerData
         * @static
         * @param {proto.IBookContainerData} m BookContainerData message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        BookContainerData.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.heroClass != null && Object.hasOwnProperty.call(m, "heroClass"))
                w.uint32(8).int32(m.heroClass);
            if (m.slotData != null && m.slotData.length) {
                for (var i = 0; i < m.slotData.length; ++i)
                    $root.proto.BookSlotData.encode(m.slotData[i], w.uint32(18).fork()).ldelim();
            }
            return w;
        };

        /**
         * Decodes a BookContainerData message from the specified reader or buffer.
         * @function decode
         * @memberof proto.BookContainerData
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.BookContainerData} BookContainerData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        BookContainerData.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.BookContainerData();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.heroClass = r.int32();
                    break;
                case 2:
                    if (!(m.slotData && m.slotData.length))
                        m.slotData = [];
                    m.slotData.push($root.proto.BookSlotData.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return BookContainerData;
    })();

    proto.BookSeriesData = (function() {

        /**
         * Properties of a BookSeriesData.
         * @memberof proto
         * @interface IBookSeriesData
         * @property {number|null} [id] BookSeriesData id
         * @property {number|null} [count] BookSeriesData count
         */

        /**
         * Constructs a new BookSeriesData.
         * @memberof proto
         * @classdesc Represents a BookSeriesData.
         * @implements IBookSeriesData
         * @constructor
         * @param {proto.IBookSeriesData=} [p] Properties to set
         */
        function BookSeriesData(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * BookSeriesData id.
         * @member {number} id
         * @memberof proto.BookSeriesData
         * @instance
         */
        BookSeriesData.prototype.id = 0;

        /**
         * BookSeriesData count.
         * @member {number} count
         * @memberof proto.BookSeriesData
         * @instance
         */
        BookSeriesData.prototype.count = 0;

        /**
         * Encodes the specified BookSeriesData message. Does not implicitly {@link proto.BookSeriesData.verify|verify} messages.
         * @function encode
         * @memberof proto.BookSeriesData
         * @static
         * @param {proto.IBookSeriesData} m BookSeriesData message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        BookSeriesData.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.id != null && Object.hasOwnProperty.call(m, "id"))
                w.uint32(8).int32(m.id);
            if (m.count != null && Object.hasOwnProperty.call(m, "count"))
                w.uint32(16).int32(m.count);
            return w;
        };

        /**
         * Decodes a BookSeriesData message from the specified reader or buffer.
         * @function decode
         * @memberof proto.BookSeriesData
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.BookSeriesData} BookSeriesData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        BookSeriesData.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.BookSeriesData();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.id = r.int32();
                    break;
                case 2:
                    m.count = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return BookSeriesData;
    })();

    proto.BookPbData = (function() {

        /**
         * Properties of a BookPbData.
         * @memberof proto
         * @interface IBookPbData
         * @property {Array.<proto.IBookData>|null} [equipList] BookPbData equipList
         * @property {Array.<proto.IBookContainerData>|null} [containerList] BookPbData containerList
         * @property {Array.<proto.IBookSeriesData>|null} [seriesData] BookPbData seriesData
         * @property {number|null} [powerScore] BookPbData powerScore
         */

        /**
         * Constructs a new BookPbData.
         * @memberof proto
         * @classdesc Represents a BookPbData.
         * @implements IBookPbData
         * @constructor
         * @param {proto.IBookPbData=} [p] Properties to set
         */
        function BookPbData(p) {
            this.equipList = [];
            this.containerList = [];
            this.seriesData = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * BookPbData equipList.
         * @member {Array.<proto.IBookData>} equipList
         * @memberof proto.BookPbData
         * @instance
         */
        BookPbData.prototype.equipList = $util.emptyArray;

        /**
         * BookPbData containerList.
         * @member {Array.<proto.IBookContainerData>} containerList
         * @memberof proto.BookPbData
         * @instance
         */
        BookPbData.prototype.containerList = $util.emptyArray;

        /**
         * BookPbData seriesData.
         * @member {Array.<proto.IBookSeriesData>} seriesData
         * @memberof proto.BookPbData
         * @instance
         */
        BookPbData.prototype.seriesData = $util.emptyArray;

        /**
         * BookPbData powerScore.
         * @member {number} powerScore
         * @memberof proto.BookPbData
         * @instance
         */
        BookPbData.prototype.powerScore = 0;

        /**
         * Encodes the specified BookPbData message. Does not implicitly {@link proto.BookPbData.verify|verify} messages.
         * @function encode
         * @memberof proto.BookPbData
         * @static
         * @param {proto.IBookPbData} m BookPbData message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        BookPbData.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.equipList != null && m.equipList.length) {
                for (var i = 0; i < m.equipList.length; ++i)
                    $root.proto.BookData.encode(m.equipList[i], w.uint32(10).fork()).ldelim();
            }
            if (m.containerList != null && m.containerList.length) {
                for (var i = 0; i < m.containerList.length; ++i)
                    $root.proto.BookContainerData.encode(m.containerList[i], w.uint32(18).fork()).ldelim();
            }
            if (m.seriesData != null && m.seriesData.length) {
                for (var i = 0; i < m.seriesData.length; ++i)
                    $root.proto.BookSeriesData.encode(m.seriesData[i], w.uint32(26).fork()).ldelim();
            }
            if (m.powerScore != null && Object.hasOwnProperty.call(m, "powerScore"))
                w.uint32(32).int32(m.powerScore);
            return w;
        };

        /**
         * Decodes a BookPbData message from the specified reader or buffer.
         * @function decode
         * @memberof proto.BookPbData
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.BookPbData} BookPbData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        BookPbData.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.BookPbData();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.equipList && m.equipList.length))
                        m.equipList = [];
                    m.equipList.push($root.proto.BookData.decode(r, r.uint32()));
                    break;
                case 2:
                    if (!(m.containerList && m.containerList.length))
                        m.containerList = [];
                    m.containerList.push($root.proto.BookContainerData.decode(r, r.uint32()));
                    break;
                case 3:
                    if (!(m.seriesData && m.seriesData.length))
                        m.seriesData = [];
                    m.seriesData.push($root.proto.BookSeriesData.decode(r, r.uint32()));
                    break;
                case 4:
                    m.powerScore = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return BookPbData;
    })();

    proto.Msg_UpgradeBookLevelReq = (function() {

        /**
         * Properties of a Msg_UpgradeBookLevelReq.
         * @memberof proto
         * @interface IMsg_UpgradeBookLevelReq
         * @property {number|Long|null} [bookId] Msg_UpgradeBookLevelReq bookId
         */

        /**
         * Constructs a new Msg_UpgradeBookLevelReq.
         * @memberof proto
         * @classdesc Represents a Msg_UpgradeBookLevelReq.
         * @implements IMsg_UpgradeBookLevelReq
         * @constructor
         * @param {proto.IMsg_UpgradeBookLevelReq=} [p] Properties to set
         */
        function Msg_UpgradeBookLevelReq(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_UpgradeBookLevelReq bookId.
         * @member {number|Long} bookId
         * @memberof proto.Msg_UpgradeBookLevelReq
         * @instance
         */
        Msg_UpgradeBookLevelReq.prototype.bookId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

        /**
         * Encodes the specified Msg_UpgradeBookLevelReq message. Does not implicitly {@link proto.Msg_UpgradeBookLevelReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_UpgradeBookLevelReq
         * @static
         * @param {proto.IMsg_UpgradeBookLevelReq} m Msg_UpgradeBookLevelReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_UpgradeBookLevelReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.bookId != null && Object.hasOwnProperty.call(m, "bookId"))
                w.uint32(8).int64(m.bookId);
            return w;
        };

        /**
         * Decodes a Msg_UpgradeBookLevelReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_UpgradeBookLevelReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_UpgradeBookLevelReq} Msg_UpgradeBookLevelReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_UpgradeBookLevelReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_UpgradeBookLevelReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.bookId = r.int64();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_UpgradeBookLevelReq;
    })();

    proto.Msg_UpgradeBookLevelRsp = (function() {

        /**
         * Properties of a Msg_UpgradeBookLevelRsp.
         * @memberof proto
         * @interface IMsg_UpgradeBookLevelRsp
         * @property {proto.ICommonError|null} [error] Msg_UpgradeBookLevelRsp error
         * @property {proto.IBookData|null} [book] Msg_UpgradeBookLevelRsp book
         */

        /**
         * Constructs a new Msg_UpgradeBookLevelRsp.
         * @memberof proto
         * @classdesc Represents a Msg_UpgradeBookLevelRsp.
         * @implements IMsg_UpgradeBookLevelRsp
         * @constructor
         * @param {proto.IMsg_UpgradeBookLevelRsp=} [p] Properties to set
         */
        function Msg_UpgradeBookLevelRsp(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_UpgradeBookLevelRsp error.
         * @member {proto.ICommonError|null|undefined} error
         * @memberof proto.Msg_UpgradeBookLevelRsp
         * @instance
         */
        Msg_UpgradeBookLevelRsp.prototype.error = null;

        /**
         * Msg_UpgradeBookLevelRsp book.
         * @member {proto.IBookData|null|undefined} book
         * @memberof proto.Msg_UpgradeBookLevelRsp
         * @instance
         */
        Msg_UpgradeBookLevelRsp.prototype.book = null;

        /**
         * Encodes the specified Msg_UpgradeBookLevelRsp message. Does not implicitly {@link proto.Msg_UpgradeBookLevelRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_UpgradeBookLevelRsp
         * @static
         * @param {proto.IMsg_UpgradeBookLevelRsp} m Msg_UpgradeBookLevelRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_UpgradeBookLevelRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.error != null && Object.hasOwnProperty.call(m, "error"))
                $root.proto.CommonError.encode(m.error, w.uint32(10).fork()).ldelim();
            if (m.book != null && Object.hasOwnProperty.call(m, "book"))
                $root.proto.BookData.encode(m.book, w.uint32(18).fork()).ldelim();
            return w;
        };

        /**
         * Decodes a Msg_UpgradeBookLevelRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_UpgradeBookLevelRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_UpgradeBookLevelRsp} Msg_UpgradeBookLevelRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_UpgradeBookLevelRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_UpgradeBookLevelRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.error = $root.proto.CommonError.decode(r, r.uint32());
                    break;
                case 2:
                    m.book = $root.proto.BookData.decode(r, r.uint32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_UpgradeBookLevelRsp;
    })();

    proto.Msg_UpgradeBookStarReq = (function() {

        /**
         * Properties of a Msg_UpgradeBookStarReq.
         * @memberof proto
         * @interface IMsg_UpgradeBookStarReq
         * @property {number|Long|null} [bookId] Msg_UpgradeBookStarReq bookId
         */

        /**
         * Constructs a new Msg_UpgradeBookStarReq.
         * @memberof proto
         * @classdesc Represents a Msg_UpgradeBookStarReq.
         * @implements IMsg_UpgradeBookStarReq
         * @constructor
         * @param {proto.IMsg_UpgradeBookStarReq=} [p] Properties to set
         */
        function Msg_UpgradeBookStarReq(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_UpgradeBookStarReq bookId.
         * @member {number|Long} bookId
         * @memberof proto.Msg_UpgradeBookStarReq
         * @instance
         */
        Msg_UpgradeBookStarReq.prototype.bookId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

        /**
         * Encodes the specified Msg_UpgradeBookStarReq message. Does not implicitly {@link proto.Msg_UpgradeBookStarReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_UpgradeBookStarReq
         * @static
         * @param {proto.IMsg_UpgradeBookStarReq} m Msg_UpgradeBookStarReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_UpgradeBookStarReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.bookId != null && Object.hasOwnProperty.call(m, "bookId"))
                w.uint32(8).int64(m.bookId);
            return w;
        };

        /**
         * Decodes a Msg_UpgradeBookStarReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_UpgradeBookStarReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_UpgradeBookStarReq} Msg_UpgradeBookStarReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_UpgradeBookStarReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_UpgradeBookStarReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.bookId = r.int64();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_UpgradeBookStarReq;
    })();

    proto.Msg_UpgradeBookStarRsp = (function() {

        /**
         * Properties of a Msg_UpgradeBookStarRsp.
         * @memberof proto
         * @interface IMsg_UpgradeBookStarRsp
         * @property {proto.ICommonError|null} [error] Msg_UpgradeBookStarRsp error
         * @property {proto.IBookData|null} [book] Msg_UpgradeBookStarRsp book
         */

        /**
         * Constructs a new Msg_UpgradeBookStarRsp.
         * @memberof proto
         * @classdesc Represents a Msg_UpgradeBookStarRsp.
         * @implements IMsg_UpgradeBookStarRsp
         * @constructor
         * @param {proto.IMsg_UpgradeBookStarRsp=} [p] Properties to set
         */
        function Msg_UpgradeBookStarRsp(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_UpgradeBookStarRsp error.
         * @member {proto.ICommonError|null|undefined} error
         * @memberof proto.Msg_UpgradeBookStarRsp
         * @instance
         */
        Msg_UpgradeBookStarRsp.prototype.error = null;

        /**
         * Msg_UpgradeBookStarRsp book.
         * @member {proto.IBookData|null|undefined} book
         * @memberof proto.Msg_UpgradeBookStarRsp
         * @instance
         */
        Msg_UpgradeBookStarRsp.prototype.book = null;

        /**
         * Encodes the specified Msg_UpgradeBookStarRsp message. Does not implicitly {@link proto.Msg_UpgradeBookStarRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_UpgradeBookStarRsp
         * @static
         * @param {proto.IMsg_UpgradeBookStarRsp} m Msg_UpgradeBookStarRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_UpgradeBookStarRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.error != null && Object.hasOwnProperty.call(m, "error"))
                $root.proto.CommonError.encode(m.error, w.uint32(10).fork()).ldelim();
            if (m.book != null && Object.hasOwnProperty.call(m, "book"))
                $root.proto.BookData.encode(m.book, w.uint32(18).fork()).ldelim();
            return w;
        };

        /**
         * Decodes a Msg_UpgradeBookStarRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_UpgradeBookStarRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_UpgradeBookStarRsp} Msg_UpgradeBookStarRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_UpgradeBookStarRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_UpgradeBookStarRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.error = $root.proto.CommonError.decode(r, r.uint32());
                    break;
                case 2:
                    m.book = $root.proto.BookData.decode(r, r.uint32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_UpgradeBookStarRsp;
    })();

    proto.Msg_TakeBookReq = (function() {

        /**
         * Properties of a Msg_TakeBookReq.
         * @memberof proto
         * @interface IMsg_TakeBookReq
         * @property {number|Long|null} [bookId] Msg_TakeBookReq bookId
         */

        /**
         * Constructs a new Msg_TakeBookReq.
         * @memberof proto
         * @classdesc Represents a Msg_TakeBookReq.
         * @implements IMsg_TakeBookReq
         * @constructor
         * @param {proto.IMsg_TakeBookReq=} [p] Properties to set
         */
        function Msg_TakeBookReq(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_TakeBookReq bookId.
         * @member {number|Long} bookId
         * @memberof proto.Msg_TakeBookReq
         * @instance
         */
        Msg_TakeBookReq.prototype.bookId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

        /**
         * Encodes the specified Msg_TakeBookReq message. Does not implicitly {@link proto.Msg_TakeBookReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_TakeBookReq
         * @static
         * @param {proto.IMsg_TakeBookReq} m Msg_TakeBookReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_TakeBookReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.bookId != null && Object.hasOwnProperty.call(m, "bookId"))
                w.uint32(8).int64(m.bookId);
            return w;
        };

        /**
         * Decodes a Msg_TakeBookReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_TakeBookReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_TakeBookReq} Msg_TakeBookReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_TakeBookReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_TakeBookReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.bookId = r.int64();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_TakeBookReq;
    })();

    proto.Msg_TakeBookRsp = (function() {

        /**
         * Properties of a Msg_TakeBookRsp.
         * @memberof proto
         * @interface IMsg_TakeBookRsp
         * @property {proto.ICommonError|null} [error] Msg_TakeBookRsp error
         * @property {number|Long|null} [bookId] Msg_TakeBookRsp bookId
         * @property {number|null} [slot] Msg_TakeBookRsp slot
         */

        /**
         * Constructs a new Msg_TakeBookRsp.
         * @memberof proto
         * @classdesc Represents a Msg_TakeBookRsp.
         * @implements IMsg_TakeBookRsp
         * @constructor
         * @param {proto.IMsg_TakeBookRsp=} [p] Properties to set
         */
        function Msg_TakeBookRsp(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_TakeBookRsp error.
         * @member {proto.ICommonError|null|undefined} error
         * @memberof proto.Msg_TakeBookRsp
         * @instance
         */
        Msg_TakeBookRsp.prototype.error = null;

        /**
         * Msg_TakeBookRsp bookId.
         * @member {number|Long} bookId
         * @memberof proto.Msg_TakeBookRsp
         * @instance
         */
        Msg_TakeBookRsp.prototype.bookId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

        /**
         * Msg_TakeBookRsp slot.
         * @member {number} slot
         * @memberof proto.Msg_TakeBookRsp
         * @instance
         */
        Msg_TakeBookRsp.prototype.slot = 0;

        /**
         * Encodes the specified Msg_TakeBookRsp message. Does not implicitly {@link proto.Msg_TakeBookRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_TakeBookRsp
         * @static
         * @param {proto.IMsg_TakeBookRsp} m Msg_TakeBookRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_TakeBookRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.error != null && Object.hasOwnProperty.call(m, "error"))
                $root.proto.CommonError.encode(m.error, w.uint32(10).fork()).ldelim();
            if (m.bookId != null && Object.hasOwnProperty.call(m, "bookId"))
                w.uint32(16).int64(m.bookId);
            if (m.slot != null && Object.hasOwnProperty.call(m, "slot"))
                w.uint32(24).int32(m.slot);
            return w;
        };

        /**
         * Decodes a Msg_TakeBookRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_TakeBookRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_TakeBookRsp} Msg_TakeBookRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_TakeBookRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_TakeBookRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.error = $root.proto.CommonError.decode(r, r.uint32());
                    break;
                case 2:
                    m.bookId = r.int64();
                    break;
                case 3:
                    m.slot = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_TakeBookRsp;
    })();

    proto.Msg_DropBookReq = (function() {

        /**
         * Properties of a Msg_DropBookReq.
         * @memberof proto
         * @interface IMsg_DropBookReq
         * @property {number|Long|null} [bookId] Msg_DropBookReq bookId
         */

        /**
         * Constructs a new Msg_DropBookReq.
         * @memberof proto
         * @classdesc Represents a Msg_DropBookReq.
         * @implements IMsg_DropBookReq
         * @constructor
         * @param {proto.IMsg_DropBookReq=} [p] Properties to set
         */
        function Msg_DropBookReq(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_DropBookReq bookId.
         * @member {number|Long} bookId
         * @memberof proto.Msg_DropBookReq
         * @instance
         */
        Msg_DropBookReq.prototype.bookId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

        /**
         * Encodes the specified Msg_DropBookReq message. Does not implicitly {@link proto.Msg_DropBookReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_DropBookReq
         * @static
         * @param {proto.IMsg_DropBookReq} m Msg_DropBookReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_DropBookReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.bookId != null && Object.hasOwnProperty.call(m, "bookId"))
                w.uint32(8).int64(m.bookId);
            return w;
        };

        /**
         * Decodes a Msg_DropBookReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_DropBookReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_DropBookReq} Msg_DropBookReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_DropBookReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_DropBookReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.bookId = r.int64();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_DropBookReq;
    })();

    proto.Msg_DropBookRsp = (function() {

        /**
         * Properties of a Msg_DropBookRsp.
         * @memberof proto
         * @interface IMsg_DropBookRsp
         * @property {proto.ICommonError|null} [error] Msg_DropBookRsp error
         * @property {number|Long|null} [bookId] Msg_DropBookRsp bookId
         * @property {number|null} [slot] Msg_DropBookRsp slot
         */

        /**
         * Constructs a new Msg_DropBookRsp.
         * @memberof proto
         * @classdesc Represents a Msg_DropBookRsp.
         * @implements IMsg_DropBookRsp
         * @constructor
         * @param {proto.IMsg_DropBookRsp=} [p] Properties to set
         */
        function Msg_DropBookRsp(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_DropBookRsp error.
         * @member {proto.ICommonError|null|undefined} error
         * @memberof proto.Msg_DropBookRsp
         * @instance
         */
        Msg_DropBookRsp.prototype.error = null;

        /**
         * Msg_DropBookRsp bookId.
         * @member {number|Long} bookId
         * @memberof proto.Msg_DropBookRsp
         * @instance
         */
        Msg_DropBookRsp.prototype.bookId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

        /**
         * Msg_DropBookRsp slot.
         * @member {number} slot
         * @memberof proto.Msg_DropBookRsp
         * @instance
         */
        Msg_DropBookRsp.prototype.slot = 0;

        /**
         * Encodes the specified Msg_DropBookRsp message. Does not implicitly {@link proto.Msg_DropBookRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_DropBookRsp
         * @static
         * @param {proto.IMsg_DropBookRsp} m Msg_DropBookRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_DropBookRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.error != null && Object.hasOwnProperty.call(m, "error"))
                $root.proto.CommonError.encode(m.error, w.uint32(10).fork()).ldelim();
            if (m.bookId != null && Object.hasOwnProperty.call(m, "bookId"))
                w.uint32(16).int64(m.bookId);
            if (m.slot != null && Object.hasOwnProperty.call(m, "slot"))
                w.uint32(24).int32(m.slot);
            return w;
        };

        /**
         * Decodes a Msg_DropBookRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_DropBookRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_DropBookRsp} Msg_DropBookRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_DropBookRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_DropBookRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.error = $root.proto.CommonError.decode(r, r.uint32());
                    break;
                case 2:
                    m.bookId = r.int64();
                    break;
                case 3:
                    m.slot = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_DropBookRsp;
    })();

    proto.Msg_UpdateBookSeriesData = (function() {

        /**
         * Properties of a Msg_UpdateBookSeriesData.
         * @memberof proto
         * @interface IMsg_UpdateBookSeriesData
         * @property {Array.<proto.IBookSeriesData>|null} [seriesData] Msg_UpdateBookSeriesData seriesData
         */

        /**
         * Constructs a new Msg_UpdateBookSeriesData.
         * @memberof proto
         * @classdesc Represents a Msg_UpdateBookSeriesData.
         * @implements IMsg_UpdateBookSeriesData
         * @constructor
         * @param {proto.IMsg_UpdateBookSeriesData=} [p] Properties to set
         */
        function Msg_UpdateBookSeriesData(p) {
            this.seriesData = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_UpdateBookSeriesData seriesData.
         * @member {Array.<proto.IBookSeriesData>} seriesData
         * @memberof proto.Msg_UpdateBookSeriesData
         * @instance
         */
        Msg_UpdateBookSeriesData.prototype.seriesData = $util.emptyArray;

        /**
         * Encodes the specified Msg_UpdateBookSeriesData message. Does not implicitly {@link proto.Msg_UpdateBookSeriesData.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_UpdateBookSeriesData
         * @static
         * @param {proto.IMsg_UpdateBookSeriesData} m Msg_UpdateBookSeriesData message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_UpdateBookSeriesData.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.seriesData != null && m.seriesData.length) {
                for (var i = 0; i < m.seriesData.length; ++i)
                    $root.proto.BookSeriesData.encode(m.seriesData[i], w.uint32(10).fork()).ldelim();
            }
            return w;
        };

        /**
         * Decodes a Msg_UpdateBookSeriesData message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_UpdateBookSeriesData
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_UpdateBookSeriesData} Msg_UpdateBookSeriesData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_UpdateBookSeriesData.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_UpdateBookSeriesData();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.seriesData && m.seriesData.length))
                        m.seriesData = [];
                    m.seriesData.push($root.proto.BookSeriesData.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_UpdateBookSeriesData;
    })();

    proto.Msg_BookFragmentSwitchReq = (function() {

        /**
         * Properties of a Msg_BookFragmentSwitchReq.
         * @memberof proto
         * @interface IMsg_BookFragmentSwitchReq
         */

        /**
         * Constructs a new Msg_BookFragmentSwitchReq.
         * @memberof proto
         * @classdesc Represents a Msg_BookFragmentSwitchReq.
         * @implements IMsg_BookFragmentSwitchReq
         * @constructor
         * @param {proto.IMsg_BookFragmentSwitchReq=} [p] Properties to set
         */
        function Msg_BookFragmentSwitchReq(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Encodes the specified Msg_BookFragmentSwitchReq message. Does not implicitly {@link proto.Msg_BookFragmentSwitchReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_BookFragmentSwitchReq
         * @static
         * @param {proto.IMsg_BookFragmentSwitchReq} m Msg_BookFragmentSwitchReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_BookFragmentSwitchReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };

        /**
         * Decodes a Msg_BookFragmentSwitchReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_BookFragmentSwitchReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_BookFragmentSwitchReq} Msg_BookFragmentSwitchReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_BookFragmentSwitchReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_BookFragmentSwitchReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_BookFragmentSwitchReq;
    })();

    proto.Msg_BookFragmentSwitchRsp = (function() {

        /**
         * Properties of a Msg_BookFragmentSwitchRsp.
         * @memberof proto
         * @interface IMsg_BookFragmentSwitchRsp
         * @property {proto.ICommonError|null} [error] Msg_BookFragmentSwitchRsp error
         * @property {Array.<proto.IItem>|null} [rewards] Msg_BookFragmentSwitchRsp rewards
         */

        /**
         * Constructs a new Msg_BookFragmentSwitchRsp.
         * @memberof proto
         * @classdesc Represents a Msg_BookFragmentSwitchRsp.
         * @implements IMsg_BookFragmentSwitchRsp
         * @constructor
         * @param {proto.IMsg_BookFragmentSwitchRsp=} [p] Properties to set
         */
        function Msg_BookFragmentSwitchRsp(p) {
            this.rewards = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_BookFragmentSwitchRsp error.
         * @member {proto.ICommonError|null|undefined} error
         * @memberof proto.Msg_BookFragmentSwitchRsp
         * @instance
         */
        Msg_BookFragmentSwitchRsp.prototype.error = null;

        /**
         * Msg_BookFragmentSwitchRsp rewards.
         * @member {Array.<proto.IItem>} rewards
         * @memberof proto.Msg_BookFragmentSwitchRsp
         * @instance
         */
        Msg_BookFragmentSwitchRsp.prototype.rewards = $util.emptyArray;

        /**
         * Encodes the specified Msg_BookFragmentSwitchRsp message. Does not implicitly {@link proto.Msg_BookFragmentSwitchRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_BookFragmentSwitchRsp
         * @static
         * @param {proto.IMsg_BookFragmentSwitchRsp} m Msg_BookFragmentSwitchRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_BookFragmentSwitchRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.error != null && Object.hasOwnProperty.call(m, "error"))
                $root.proto.CommonError.encode(m.error, w.uint32(10).fork()).ldelim();
            if (m.rewards != null && m.rewards.length) {
                for (var i = 0; i < m.rewards.length; ++i)
                    $root.proto.Item.encode(m.rewards[i], w.uint32(18).fork()).ldelim();
            }
            return w;
        };

        /**
         * Decodes a Msg_BookFragmentSwitchRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_BookFragmentSwitchRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_BookFragmentSwitchRsp} Msg_BookFragmentSwitchRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_BookFragmentSwitchRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_BookFragmentSwitchRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.error = $root.proto.CommonError.decode(r, r.uint32());
                    break;
                case 2:
                    if (!(m.rewards && m.rewards.length))
                        m.rewards = [];
                    m.rewards.push($root.proto.Item.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_BookFragmentSwitchRsp;
    })();

    proto.Msg_CombineBookFragmentReq = (function() {

        /**
         * Properties of a Msg_CombineBookFragmentReq.
         * @memberof proto
         * @interface IMsg_CombineBookFragmentReq
         * @property {number|null} [itemId] Msg_CombineBookFragmentReq itemId
         */

        /**
         * Constructs a new Msg_CombineBookFragmentReq.
         * @memberof proto
         * @classdesc Represents a Msg_CombineBookFragmentReq.
         * @implements IMsg_CombineBookFragmentReq
         * @constructor
         * @param {proto.IMsg_CombineBookFragmentReq=} [p] Properties to set
         */
        function Msg_CombineBookFragmentReq(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_CombineBookFragmentReq itemId.
         * @member {number} itemId
         * @memberof proto.Msg_CombineBookFragmentReq
         * @instance
         */
        Msg_CombineBookFragmentReq.prototype.itemId = 0;

        /**
         * Encodes the specified Msg_CombineBookFragmentReq message. Does not implicitly {@link proto.Msg_CombineBookFragmentReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_CombineBookFragmentReq
         * @static
         * @param {proto.IMsg_CombineBookFragmentReq} m Msg_CombineBookFragmentReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_CombineBookFragmentReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.itemId != null && Object.hasOwnProperty.call(m, "itemId"))
                w.uint32(8).int32(m.itemId);
            return w;
        };

        /**
         * Decodes a Msg_CombineBookFragmentReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_CombineBookFragmentReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_CombineBookFragmentReq} Msg_CombineBookFragmentReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_CombineBookFragmentReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_CombineBookFragmentReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.itemId = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_CombineBookFragmentReq;
    })();

    proto.Msg_CombineBookFragmentRsp = (function() {

        /**
         * Properties of a Msg_CombineBookFragmentRsp.
         * @memberof proto
         * @interface IMsg_CombineBookFragmentRsp
         * @property {proto.ICommonError|null} [error] Msg_CombineBookFragmentRsp error
         * @property {number|Long|null} [bookId] Msg_CombineBookFragmentRsp bookId
         */

        /**
         * Constructs a new Msg_CombineBookFragmentRsp.
         * @memberof proto
         * @classdesc Represents a Msg_CombineBookFragmentRsp.
         * @implements IMsg_CombineBookFragmentRsp
         * @constructor
         * @param {proto.IMsg_CombineBookFragmentRsp=} [p] Properties to set
         */
        function Msg_CombineBookFragmentRsp(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_CombineBookFragmentRsp error.
         * @member {proto.ICommonError|null|undefined} error
         * @memberof proto.Msg_CombineBookFragmentRsp
         * @instance
         */
        Msg_CombineBookFragmentRsp.prototype.error = null;

        /**
         * Msg_CombineBookFragmentRsp bookId.
         * @member {number|Long} bookId
         * @memberof proto.Msg_CombineBookFragmentRsp
         * @instance
         */
        Msg_CombineBookFragmentRsp.prototype.bookId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

        /**
         * Encodes the specified Msg_CombineBookFragmentRsp message. Does not implicitly {@link proto.Msg_CombineBookFragmentRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_CombineBookFragmentRsp
         * @static
         * @param {proto.IMsg_CombineBookFragmentRsp} m Msg_CombineBookFragmentRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_CombineBookFragmentRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.error != null && Object.hasOwnProperty.call(m, "error"))
                $root.proto.CommonError.encode(m.error, w.uint32(10).fork()).ldelim();
            if (m.bookId != null && Object.hasOwnProperty.call(m, "bookId"))
                w.uint32(16).int64(m.bookId);
            return w;
        };

        /**
         * Decodes a Msg_CombineBookFragmentRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_CombineBookFragmentRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_CombineBookFragmentRsp} Msg_CombineBookFragmentRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_CombineBookFragmentRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_CombineBookFragmentRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.error = $root.proto.CommonError.decode(r, r.uint32());
                    break;
                case 2:
                    m.bookId = r.int64();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_CombineBookFragmentRsp;
    })();

    proto.Msg_UpdateBookPowerScore = (function() {

        /**
         * Properties of a Msg_UpdateBookPowerScore.
         * @memberof proto
         * @interface IMsg_UpdateBookPowerScore
         * @property {number|null} [powerScore] Msg_UpdateBookPowerScore powerScore
         */

        /**
         * Constructs a new Msg_UpdateBookPowerScore.
         * @memberof proto
         * @classdesc Represents a Msg_UpdateBookPowerScore.
         * @implements IMsg_UpdateBookPowerScore
         * @constructor
         * @param {proto.IMsg_UpdateBookPowerScore=} [p] Properties to set
         */
        function Msg_UpdateBookPowerScore(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_UpdateBookPowerScore powerScore.
         * @member {number} powerScore
         * @memberof proto.Msg_UpdateBookPowerScore
         * @instance
         */
        Msg_UpdateBookPowerScore.prototype.powerScore = 0;

        /**
         * Encodes the specified Msg_UpdateBookPowerScore message. Does not implicitly {@link proto.Msg_UpdateBookPowerScore.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_UpdateBookPowerScore
         * @static
         * @param {proto.IMsg_UpdateBookPowerScore} m Msg_UpdateBookPowerScore message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_UpdateBookPowerScore.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.powerScore != null && Object.hasOwnProperty.call(m, "powerScore"))
                w.uint32(8).int32(m.powerScore);
            return w;
        };

        /**
         * Decodes a Msg_UpdateBookPowerScore message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_UpdateBookPowerScore
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_UpdateBookPowerScore} Msg_UpdateBookPowerScore
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_UpdateBookPowerScore.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_UpdateBookPowerScore();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.powerScore = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_UpdateBookPowerScore;
    })();

    proto.ScrollPainting = (function() {

        /**
         * Properties of a ScrollPainting.
         * @memberof proto
         * @interface IScrollPainting
         * @property {number|null} [heroItemId] ScrollPainting heroItemId
         * @property {number|null} [star] ScrollPainting star
         * @property {number|null} [unlockStar] ScrollPainting unlockStar
         */

        /**
         * Constructs a new ScrollPainting.
         * @memberof proto
         * @classdesc Represents a ScrollPainting.
         * @implements IScrollPainting
         * @constructor
         * @param {proto.IScrollPainting=} [p] Properties to set
         */
        function ScrollPainting(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * ScrollPainting heroItemId.
         * @member {number} heroItemId
         * @memberof proto.ScrollPainting
         * @instance
         */
        ScrollPainting.prototype.heroItemId = 0;

        /**
         * ScrollPainting star.
         * @member {number} star
         * @memberof proto.ScrollPainting
         * @instance
         */
        ScrollPainting.prototype.star = 0;

        /**
         * ScrollPainting unlockStar.
         * @member {number} unlockStar
         * @memberof proto.ScrollPainting
         * @instance
         */
        ScrollPainting.prototype.unlockStar = 0;

        /**
         * Encodes the specified ScrollPainting message. Does not implicitly {@link proto.ScrollPainting.verify|verify} messages.
         * @function encode
         * @memberof proto.ScrollPainting
         * @static
         * @param {proto.IScrollPainting} m ScrollPainting message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        ScrollPainting.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.heroItemId != null && Object.hasOwnProperty.call(m, "heroItemId"))
                w.uint32(8).int32(m.heroItemId);
            if (m.star != null && Object.hasOwnProperty.call(m, "star"))
                w.uint32(16).int32(m.star);
            if (m.unlockStar != null && Object.hasOwnProperty.call(m, "unlockStar"))
                w.uint32(24).int32(m.unlockStar);
            return w;
        };

        /**
         * Decodes a ScrollPainting message from the specified reader or buffer.
         * @function decode
         * @memberof proto.ScrollPainting
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.ScrollPainting} ScrollPainting
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        ScrollPainting.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.ScrollPainting();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.heroItemId = r.int32();
                    break;
                case 2:
                    m.star = r.int32();
                    break;
                case 3:
                    m.unlockStar = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return ScrollPainting;
    })();

    proto.Msg_GetScrollPaintingsReq = (function() {

        /**
         * Properties of a Msg_GetScrollPaintingsReq.
         * @memberof proto
         * @interface IMsg_GetScrollPaintingsReq
         */

        /**
         * Constructs a new Msg_GetScrollPaintingsReq.
         * @memberof proto
         * @classdesc Represents a Msg_GetScrollPaintingsReq.
         * @implements IMsg_GetScrollPaintingsReq
         * @constructor
         * @param {proto.IMsg_GetScrollPaintingsReq=} [p] Properties to set
         */
        function Msg_GetScrollPaintingsReq(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Encodes the specified Msg_GetScrollPaintingsReq message. Does not implicitly {@link proto.Msg_GetScrollPaintingsReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_GetScrollPaintingsReq
         * @static
         * @param {proto.IMsg_GetScrollPaintingsReq} m Msg_GetScrollPaintingsReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_GetScrollPaintingsReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };

        /**
         * Decodes a Msg_GetScrollPaintingsReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_GetScrollPaintingsReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_GetScrollPaintingsReq} Msg_GetScrollPaintingsReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_GetScrollPaintingsReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_GetScrollPaintingsReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_GetScrollPaintingsReq;
    })();

    proto.Msg_GetScrollPaintingsRsp = (function() {

        /**
         * Properties of a Msg_GetScrollPaintingsRsp.
         * @memberof proto
         * @interface IMsg_GetScrollPaintingsRsp
         * @property {Array.<proto.IScrollPainting>|null} [paintings] Msg_GetScrollPaintingsRsp paintings
         */

        /**
         * Constructs a new Msg_GetScrollPaintingsRsp.
         * @memberof proto
         * @classdesc Represents a Msg_GetScrollPaintingsRsp.
         * @implements IMsg_GetScrollPaintingsRsp
         * @constructor
         * @param {proto.IMsg_GetScrollPaintingsRsp=} [p] Properties to set
         */
        function Msg_GetScrollPaintingsRsp(p) {
            this.paintings = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_GetScrollPaintingsRsp paintings.
         * @member {Array.<proto.IScrollPainting>} paintings
         * @memberof proto.Msg_GetScrollPaintingsRsp
         * @instance
         */
        Msg_GetScrollPaintingsRsp.prototype.paintings = $util.emptyArray;

        /**
         * Encodes the specified Msg_GetScrollPaintingsRsp message. Does not implicitly {@link proto.Msg_GetScrollPaintingsRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_GetScrollPaintingsRsp
         * @static
         * @param {proto.IMsg_GetScrollPaintingsRsp} m Msg_GetScrollPaintingsRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_GetScrollPaintingsRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.paintings != null && m.paintings.length) {
                for (var i = 0; i < m.paintings.length; ++i)
                    $root.proto.ScrollPainting.encode(m.paintings[i], w.uint32(10).fork()).ldelim();
            }
            return w;
        };

        /**
         * Decodes a Msg_GetScrollPaintingsRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_GetScrollPaintingsRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_GetScrollPaintingsRsp} Msg_GetScrollPaintingsRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_GetScrollPaintingsRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_GetScrollPaintingsRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.paintings && m.paintings.length))
                        m.paintings = [];
                    m.paintings.push($root.proto.ScrollPainting.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_GetScrollPaintingsRsp;
    })();

    proto.Msg_UpgradeScrollPaintingStarReq = (function() {

        /**
         * Properties of a Msg_UpgradeScrollPaintingStarReq.
         * @memberof proto
         * @interface IMsg_UpgradeScrollPaintingStarReq
         * @property {number|null} [heroItemId] Msg_UpgradeScrollPaintingStarReq heroItemId
         */

        /**
         * Constructs a new Msg_UpgradeScrollPaintingStarReq.
         * @memberof proto
         * @classdesc Represents a Msg_UpgradeScrollPaintingStarReq.
         * @implements IMsg_UpgradeScrollPaintingStarReq
         * @constructor
         * @param {proto.IMsg_UpgradeScrollPaintingStarReq=} [p] Properties to set
         */
        function Msg_UpgradeScrollPaintingStarReq(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_UpgradeScrollPaintingStarReq heroItemId.
         * @member {number} heroItemId
         * @memberof proto.Msg_UpgradeScrollPaintingStarReq
         * @instance
         */
        Msg_UpgradeScrollPaintingStarReq.prototype.heroItemId = 0;

        /**
         * Encodes the specified Msg_UpgradeScrollPaintingStarReq message. Does not implicitly {@link proto.Msg_UpgradeScrollPaintingStarReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_UpgradeScrollPaintingStarReq
         * @static
         * @param {proto.IMsg_UpgradeScrollPaintingStarReq} m Msg_UpgradeScrollPaintingStarReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_UpgradeScrollPaintingStarReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.heroItemId != null && Object.hasOwnProperty.call(m, "heroItemId"))
                w.uint32(8).int32(m.heroItemId);
            return w;
        };

        /**
         * Decodes a Msg_UpgradeScrollPaintingStarReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_UpgradeScrollPaintingStarReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_UpgradeScrollPaintingStarReq} Msg_UpgradeScrollPaintingStarReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_UpgradeScrollPaintingStarReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_UpgradeScrollPaintingStarReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.heroItemId = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_UpgradeScrollPaintingStarReq;
    })();

    proto.Msg_UpgradeScrollPaintingStarRsp = (function() {

        /**
         * Properties of a Msg_UpgradeScrollPaintingStarRsp.
         * @memberof proto
         * @interface IMsg_UpgradeScrollPaintingStarRsp
         * @property {proto.ICommonError|null} [error] Msg_UpgradeScrollPaintingStarRsp error
         * @property {number|null} [heroItemId] Msg_UpgradeScrollPaintingStarRsp heroItemId
         * @property {number|null} [star] Msg_UpgradeScrollPaintingStarRsp star
         */

        /**
         * Constructs a new Msg_UpgradeScrollPaintingStarRsp.
         * @memberof proto
         * @classdesc Represents a Msg_UpgradeScrollPaintingStarRsp.
         * @implements IMsg_UpgradeScrollPaintingStarRsp
         * @constructor
         * @param {proto.IMsg_UpgradeScrollPaintingStarRsp=} [p] Properties to set
         */
        function Msg_UpgradeScrollPaintingStarRsp(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_UpgradeScrollPaintingStarRsp error.
         * @member {proto.ICommonError|null|undefined} error
         * @memberof proto.Msg_UpgradeScrollPaintingStarRsp
         * @instance
         */
        Msg_UpgradeScrollPaintingStarRsp.prototype.error = null;

        /**
         * Msg_UpgradeScrollPaintingStarRsp heroItemId.
         * @member {number} heroItemId
         * @memberof proto.Msg_UpgradeScrollPaintingStarRsp
         * @instance
         */
        Msg_UpgradeScrollPaintingStarRsp.prototype.heroItemId = 0;

        /**
         * Msg_UpgradeScrollPaintingStarRsp star.
         * @member {number} star
         * @memberof proto.Msg_UpgradeScrollPaintingStarRsp
         * @instance
         */
        Msg_UpgradeScrollPaintingStarRsp.prototype.star = 0;

        /**
         * Encodes the specified Msg_UpgradeScrollPaintingStarRsp message. Does not implicitly {@link proto.Msg_UpgradeScrollPaintingStarRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_UpgradeScrollPaintingStarRsp
         * @static
         * @param {proto.IMsg_UpgradeScrollPaintingStarRsp} m Msg_UpgradeScrollPaintingStarRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_UpgradeScrollPaintingStarRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.error != null && Object.hasOwnProperty.call(m, "error"))
                $root.proto.CommonError.encode(m.error, w.uint32(10).fork()).ldelim();
            if (m.heroItemId != null && Object.hasOwnProperty.call(m, "heroItemId"))
                w.uint32(16).int32(m.heroItemId);
            if (m.star != null && Object.hasOwnProperty.call(m, "star"))
                w.uint32(24).int32(m.star);
            return w;
        };

        /**
         * Decodes a Msg_UpgradeScrollPaintingStarRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_UpgradeScrollPaintingStarRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_UpgradeScrollPaintingStarRsp} Msg_UpgradeScrollPaintingStarRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_UpgradeScrollPaintingStarRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_UpgradeScrollPaintingStarRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.error = $root.proto.CommonError.decode(r, r.uint32());
                    break;
                case 2:
                    m.heroItemId = r.int32();
                    break;
                case 3:
                    m.star = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_UpgradeScrollPaintingStarRsp;
    })();

    proto.SimpleHeroEquip = (function() {

        /**
         * Properties of a SimpleHeroEquip.
         * @memberof proto
         * @interface ISimpleHeroEquip
         * @property {number|null} [itemId] SimpleHeroEquip itemId
         * @property {number|null} [enhanceLv] SimpleHeroEquip enhanceLv
         * @property {number|null} [refineLv] SimpleHeroEquip refineLv
         * @property {number|null} [powerScore] SimpleHeroEquip powerScore
         * @property {Array.<number>|null} [baseAttr] SimpleHeroEquip baseAttr
         * @property {Array.<number>|null} [extraAttr] SimpleHeroEquip extraAttr
         * @property {Array.<number>|null} [skillList] SimpleHeroEquip skillList
         */

        /**
         * Constructs a new SimpleHeroEquip.
         * @memberof proto
         * @classdesc Represents a SimpleHeroEquip.
         * @implements ISimpleHeroEquip
         * @constructor
         * @param {proto.ISimpleHeroEquip=} [p] Properties to set
         */
        function SimpleHeroEquip(p) {
            this.baseAttr = [];
            this.extraAttr = [];
            this.skillList = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * SimpleHeroEquip itemId.
         * @member {number} itemId
         * @memberof proto.SimpleHeroEquip
         * @instance
         */
        SimpleHeroEquip.prototype.itemId = 0;

        /**
         * SimpleHeroEquip enhanceLv.
         * @member {number} enhanceLv
         * @memberof proto.SimpleHeroEquip
         * @instance
         */
        SimpleHeroEquip.prototype.enhanceLv = 0;

        /**
         * SimpleHeroEquip refineLv.
         * @member {number} refineLv
         * @memberof proto.SimpleHeroEquip
         * @instance
         */
        SimpleHeroEquip.prototype.refineLv = 0;

        /**
         * SimpleHeroEquip powerScore.
         * @member {number} powerScore
         * @memberof proto.SimpleHeroEquip
         * @instance
         */
        SimpleHeroEquip.prototype.powerScore = 0;

        /**
         * SimpleHeroEquip baseAttr.
         * @member {Array.<number>} baseAttr
         * @memberof proto.SimpleHeroEquip
         * @instance
         */
        SimpleHeroEquip.prototype.baseAttr = $util.emptyArray;

        /**
         * SimpleHeroEquip extraAttr.
         * @member {Array.<number>} extraAttr
         * @memberof proto.SimpleHeroEquip
         * @instance
         */
        SimpleHeroEquip.prototype.extraAttr = $util.emptyArray;

        /**
         * SimpleHeroEquip skillList.
         * @member {Array.<number>} skillList
         * @memberof proto.SimpleHeroEquip
         * @instance
         */
        SimpleHeroEquip.prototype.skillList = $util.emptyArray;

        /**
         * Encodes the specified SimpleHeroEquip message. Does not implicitly {@link proto.SimpleHeroEquip.verify|verify} messages.
         * @function encode
         * @memberof proto.SimpleHeroEquip
         * @static
         * @param {proto.ISimpleHeroEquip} m SimpleHeroEquip message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        SimpleHeroEquip.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.itemId != null && Object.hasOwnProperty.call(m, "itemId"))
                w.uint32(8).int32(m.itemId);
            if (m.enhanceLv != null && Object.hasOwnProperty.call(m, "enhanceLv"))
                w.uint32(16).int32(m.enhanceLv);
            if (m.refineLv != null && Object.hasOwnProperty.call(m, "refineLv"))
                w.uint32(24).int32(m.refineLv);
            if (m.powerScore != null && Object.hasOwnProperty.call(m, "powerScore"))
                w.uint32(32).int32(m.powerScore);
            if (m.baseAttr != null && m.baseAttr.length) {
                w.uint32(42).fork();
                for (var i = 0; i < m.baseAttr.length; ++i)
                    w.int32(m.baseAttr[i]);
                w.ldelim();
            }
            if (m.extraAttr != null && m.extraAttr.length) {
                w.uint32(50).fork();
                for (var i = 0; i < m.extraAttr.length; ++i)
                    w.int32(m.extraAttr[i]);
                w.ldelim();
            }
            if (m.skillList != null && m.skillList.length) {
                w.uint32(58).fork();
                for (var i = 0; i < m.skillList.length; ++i)
                    w.int32(m.skillList[i]);
                w.ldelim();
            }
            return w;
        };

        /**
         * Decodes a SimpleHeroEquip message from the specified reader or buffer.
         * @function decode
         * @memberof proto.SimpleHeroEquip
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.SimpleHeroEquip} SimpleHeroEquip
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        SimpleHeroEquip.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.SimpleHeroEquip();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.itemId = r.int32();
                    break;
                case 2:
                    m.enhanceLv = r.int32();
                    break;
                case 3:
                    m.refineLv = r.int32();
                    break;
                case 4:
                    m.powerScore = r.int32();
                    break;
                case 5:
                    if (!(m.baseAttr && m.baseAttr.length))
                        m.baseAttr = [];
                    if ((t & 7) === 2) {
                        var c2 = r.uint32() + r.pos;
                        while (r.pos < c2)
                            m.baseAttr.push(r.int32());
                    } else
                        m.baseAttr.push(r.int32());
                    break;
                case 6:
                    if (!(m.extraAttr && m.extraAttr.length))
                        m.extraAttr = [];
                    if ((t & 7) === 2) {
                        var c2 = r.uint32() + r.pos;
                        while (r.pos < c2)
                            m.extraAttr.push(r.int32());
                    } else
                        m.extraAttr.push(r.int32());
                    break;
                case 7:
                    if (!(m.skillList && m.skillList.length))
                        m.skillList = [];
                    if ((t & 7) === 2) {
                        var c2 = r.uint32() + r.pos;
                        while (r.pos < c2)
                            m.skillList.push(r.int32());
                    } else
                        m.skillList.push(r.int32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return SimpleHeroEquip;
    })();

    proto.SimpleHeroBook = (function() {

        /**
         * Properties of a SimpleHeroBook.
         * @memberof proto
         * @interface ISimpleHeroBook
         * @property {number|null} [itemId] SimpleHeroBook itemId
         * @property {number|null} [star] SimpleHeroBook star
         * @property {number|null} [level] SimpleHeroBook level
         * @property {number|null} [powerScore] SimpleHeroBook powerScore
         */

        /**
         * Constructs a new SimpleHeroBook.
         * @memberof proto
         * @classdesc Represents a SimpleHeroBook.
         * @implements ISimpleHeroBook
         * @constructor
         * @param {proto.ISimpleHeroBook=} [p] Properties to set
         */
        function SimpleHeroBook(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * SimpleHeroBook itemId.
         * @member {number} itemId
         * @memberof proto.SimpleHeroBook
         * @instance
         */
        SimpleHeroBook.prototype.itemId = 0;

        /**
         * SimpleHeroBook star.
         * @member {number} star
         * @memberof proto.SimpleHeroBook
         * @instance
         */
        SimpleHeroBook.prototype.star = 0;

        /**
         * SimpleHeroBook level.
         * @member {number} level
         * @memberof proto.SimpleHeroBook
         * @instance
         */
        SimpleHeroBook.prototype.level = 0;

        /**
         * SimpleHeroBook powerScore.
         * @member {number} powerScore
         * @memberof proto.SimpleHeroBook
         * @instance
         */
        SimpleHeroBook.prototype.powerScore = 0;

        /**
         * Encodes the specified SimpleHeroBook message. Does not implicitly {@link proto.SimpleHeroBook.verify|verify} messages.
         * @function encode
         * @memberof proto.SimpleHeroBook
         * @static
         * @param {proto.ISimpleHeroBook} m SimpleHeroBook message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        SimpleHeroBook.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.itemId != null && Object.hasOwnProperty.call(m, "itemId"))
                w.uint32(8).int32(m.itemId);
            if (m.star != null && Object.hasOwnProperty.call(m, "star"))
                w.uint32(16).int32(m.star);
            if (m.level != null && Object.hasOwnProperty.call(m, "level"))
                w.uint32(24).int32(m.level);
            if (m.powerScore != null && Object.hasOwnProperty.call(m, "powerScore"))
                w.uint32(32).int32(m.powerScore);
            return w;
        };

        /**
         * Decodes a SimpleHeroBook message from the specified reader or buffer.
         * @function decode
         * @memberof proto.SimpleHeroBook
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.SimpleHeroBook} SimpleHeroBook
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        SimpleHeroBook.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.SimpleHeroBook();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.itemId = r.int32();
                    break;
                case 2:
                    m.star = r.int32();
                    break;
                case 3:
                    m.level = r.int32();
                    break;
                case 4:
                    m.powerScore = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return SimpleHeroBook;
    })();

    proto.SimpleHero = (function() {

        /**
         * Properties of a SimpleHero.
         * @memberof proto
         * @interface ISimpleHero
         * @property {string|null} [roleId] SimpleHero roleId
         * @property {number|null} [areaId] SimpleHero areaId
         * @property {number|null} [itemId] SimpleHero itemId
         * @property {string|null} [roleName] SimpleHero roleName
         * @property {number|null} [powerScore] SimpleHero powerScore
         * @property {number|null} [star] SimpleHero star
         * @property {number|null} [level] SimpleHero level
         * @property {Array.<proto.IFightAttrData>|null} [attrList] SimpleHero attrList
         * @property {Array.<proto.ISimpleHeroEquip>|null} [equipList] SimpleHero equipList
         * @property {Array.<proto.ISimpleHeroBook>|null} [bookList] SimpleHero bookList
         */

        /**
         * Constructs a new SimpleHero.
         * @memberof proto
         * @classdesc Represents a SimpleHero.
         * @implements ISimpleHero
         * @constructor
         * @param {proto.ISimpleHero=} [p] Properties to set
         */
        function SimpleHero(p) {
            this.attrList = [];
            this.equipList = [];
            this.bookList = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * SimpleHero roleId.
         * @member {string} roleId
         * @memberof proto.SimpleHero
         * @instance
         */
        SimpleHero.prototype.roleId = "";

        /**
         * SimpleHero areaId.
         * @member {number} areaId
         * @memberof proto.SimpleHero
         * @instance
         */
        SimpleHero.prototype.areaId = 0;

        /**
         * SimpleHero itemId.
         * @member {number} itemId
         * @memberof proto.SimpleHero
         * @instance
         */
        SimpleHero.prototype.itemId = 0;

        /**
         * SimpleHero roleName.
         * @member {string} roleName
         * @memberof proto.SimpleHero
         * @instance
         */
        SimpleHero.prototype.roleName = "";

        /**
         * SimpleHero powerScore.
         * @member {number} powerScore
         * @memberof proto.SimpleHero
         * @instance
         */
        SimpleHero.prototype.powerScore = 0;

        /**
         * SimpleHero star.
         * @member {number} star
         * @memberof proto.SimpleHero
         * @instance
         */
        SimpleHero.prototype.star = 0;

        /**
         * SimpleHero level.
         * @member {number} level
         * @memberof proto.SimpleHero
         * @instance
         */
        SimpleHero.prototype.level = 0;

        /**
         * SimpleHero attrList.
         * @member {Array.<proto.IFightAttrData>} attrList
         * @memberof proto.SimpleHero
         * @instance
         */
        SimpleHero.prototype.attrList = $util.emptyArray;

        /**
         * SimpleHero equipList.
         * @member {Array.<proto.ISimpleHeroEquip>} equipList
         * @memberof proto.SimpleHero
         * @instance
         */
        SimpleHero.prototype.equipList = $util.emptyArray;

        /**
         * SimpleHero bookList.
         * @member {Array.<proto.ISimpleHeroBook>} bookList
         * @memberof proto.SimpleHero
         * @instance
         */
        SimpleHero.prototype.bookList = $util.emptyArray;

        /**
         * Encodes the specified SimpleHero message. Does not implicitly {@link proto.SimpleHero.verify|verify} messages.
         * @function encode
         * @memberof proto.SimpleHero
         * @static
         * @param {proto.ISimpleHero} m SimpleHero message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        SimpleHero.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.roleId != null && Object.hasOwnProperty.call(m, "roleId"))
                w.uint32(10).string(m.roleId);
            if (m.areaId != null && Object.hasOwnProperty.call(m, "areaId"))
                w.uint32(16).int32(m.areaId);
            if (m.itemId != null && Object.hasOwnProperty.call(m, "itemId"))
                w.uint32(24).int32(m.itemId);
            if (m.roleName != null && Object.hasOwnProperty.call(m, "roleName"))
                w.uint32(34).string(m.roleName);
            if (m.powerScore != null && Object.hasOwnProperty.call(m, "powerScore"))
                w.uint32(40).int32(m.powerScore);
            if (m.star != null && Object.hasOwnProperty.call(m, "star"))
                w.uint32(48).int32(m.star);
            if (m.level != null && Object.hasOwnProperty.call(m, "level"))
                w.uint32(56).int32(m.level);
            if (m.attrList != null && m.attrList.length) {
                for (var i = 0; i < m.attrList.length; ++i)
                    $root.proto.FightAttrData.encode(m.attrList[i], w.uint32(66).fork()).ldelim();
            }
            if (m.equipList != null && m.equipList.length) {
                for (var i = 0; i < m.equipList.length; ++i)
                    $root.proto.SimpleHeroEquip.encode(m.equipList[i], w.uint32(74).fork()).ldelim();
            }
            if (m.bookList != null && m.bookList.length) {
                for (var i = 0; i < m.bookList.length; ++i)
                    $root.proto.SimpleHeroBook.encode(m.bookList[i], w.uint32(82).fork()).ldelim();
            }
            return w;
        };

        /**
         * Decodes a SimpleHero message from the specified reader or buffer.
         * @function decode
         * @memberof proto.SimpleHero
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.SimpleHero} SimpleHero
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        SimpleHero.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.SimpleHero();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.roleId = r.string();
                    break;
                case 2:
                    m.areaId = r.int32();
                    break;
                case 3:
                    m.itemId = r.int32();
                    break;
                case 4:
                    m.roleName = r.string();
                    break;
                case 5:
                    m.powerScore = r.int32();
                    break;
                case 6:
                    m.star = r.int32();
                    break;
                case 7:
                    m.level = r.int32();
                    break;
                case 8:
                    if (!(m.attrList && m.attrList.length))
                        m.attrList = [];
                    m.attrList.push($root.proto.FightAttrData.decode(r, r.uint32()));
                    break;
                case 9:
                    if (!(m.equipList && m.equipList.length))
                        m.equipList = [];
                    m.equipList.push($root.proto.SimpleHeroEquip.decode(r, r.uint32()));
                    break;
                case 10:
                    if (!(m.bookList && m.bookList.length))
                        m.bookList = [];
                    m.bookList.push($root.proto.SimpleHeroBook.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return SimpleHero;
    })();

    proto.SimpleRole = (function() {

        /**
         * Properties of a SimpleRole.
         * @memberof proto
         * @interface ISimpleRole
         * @property {string|null} [id] SimpleRole id
         * @property {number|null} [areaId] SimpleRole areaId
         * @property {string|null} [name] SimpleRole name
         * @property {number|null} [headIcon] SimpleRole headIcon
         * @property {number|null} [headFrame] SimpleRole headFrame
         * @property {number|null} [level] SimpleRole level
         * @property {number|null} [reputation] SimpleRole reputation
         * @property {number|null} [powerScore] SimpleRole powerScore
         * @property {number|null} [mainStage] SimpleRole mainStage
         * @property {string|null} [guildName] SimpleRole guildName
         * @property {number|Long|null} [offlineTime] SimpleRole offlineTime
         * @property {Array.<proto.ISimpleHero>|null} [heroes] SimpleRole heroes
         */

        /**
         * Constructs a new SimpleRole.
         * @memberof proto
         * @classdesc Represents a SimpleRole.
         * @implements ISimpleRole
         * @constructor
         * @param {proto.ISimpleRole=} [p] Properties to set
         */
        function SimpleRole(p) {
            this.heroes = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * SimpleRole id.
         * @member {string} id
         * @memberof proto.SimpleRole
         * @instance
         */
        SimpleRole.prototype.id = "";

        /**
         * SimpleRole areaId.
         * @member {number} areaId
         * @memberof proto.SimpleRole
         * @instance
         */
        SimpleRole.prototype.areaId = 0;

        /**
         * SimpleRole name.
         * @member {string} name
         * @memberof proto.SimpleRole
         * @instance
         */
        SimpleRole.prototype.name = "";

        /**
         * SimpleRole headIcon.
         * @member {number} headIcon
         * @memberof proto.SimpleRole
         * @instance
         */
        SimpleRole.prototype.headIcon = 0;

        /**
         * SimpleRole headFrame.
         * @member {number} headFrame
         * @memberof proto.SimpleRole
         * @instance
         */
        SimpleRole.prototype.headFrame = 0;

        /**
         * SimpleRole level.
         * @member {number} level
         * @memberof proto.SimpleRole
         * @instance
         */
        SimpleRole.prototype.level = 0;

        /**
         * SimpleRole reputation.
         * @member {number} reputation
         * @memberof proto.SimpleRole
         * @instance
         */
        SimpleRole.prototype.reputation = 0;

        /**
         * SimpleRole powerScore.
         * @member {number} powerScore
         * @memberof proto.SimpleRole
         * @instance
         */
        SimpleRole.prototype.powerScore = 0;

        /**
         * SimpleRole mainStage.
         * @member {number} mainStage
         * @memberof proto.SimpleRole
         * @instance
         */
        SimpleRole.prototype.mainStage = 0;

        /**
         * SimpleRole guildName.
         * @member {string} guildName
         * @memberof proto.SimpleRole
         * @instance
         */
        SimpleRole.prototype.guildName = "";

        /**
         * SimpleRole offlineTime.
         * @member {number|Long} offlineTime
         * @memberof proto.SimpleRole
         * @instance
         */
        SimpleRole.prototype.offlineTime = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

        /**
         * SimpleRole heroes.
         * @member {Array.<proto.ISimpleHero>} heroes
         * @memberof proto.SimpleRole
         * @instance
         */
        SimpleRole.prototype.heroes = $util.emptyArray;

        /**
         * Encodes the specified SimpleRole message. Does not implicitly {@link proto.SimpleRole.verify|verify} messages.
         * @function encode
         * @memberof proto.SimpleRole
         * @static
         * @param {proto.ISimpleRole} m SimpleRole message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        SimpleRole.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.id != null && Object.hasOwnProperty.call(m, "id"))
                w.uint32(10).string(m.id);
            if (m.areaId != null && Object.hasOwnProperty.call(m, "areaId"))
                w.uint32(16).int32(m.areaId);
            if (m.name != null && Object.hasOwnProperty.call(m, "name"))
                w.uint32(26).string(m.name);
            if (m.headIcon != null && Object.hasOwnProperty.call(m, "headIcon"))
                w.uint32(32).int32(m.headIcon);
            if (m.headFrame != null && Object.hasOwnProperty.call(m, "headFrame"))
                w.uint32(40).int32(m.headFrame);
            if (m.level != null && Object.hasOwnProperty.call(m, "level"))
                w.uint32(48).int32(m.level);
            if (m.reputation != null && Object.hasOwnProperty.call(m, "reputation"))
                w.uint32(56).int32(m.reputation);
            if (m.powerScore != null && Object.hasOwnProperty.call(m, "powerScore"))
                w.uint32(64).int32(m.powerScore);
            if (m.mainStage != null && Object.hasOwnProperty.call(m, "mainStage"))
                w.uint32(72).int32(m.mainStage);
            if (m.guildName != null && Object.hasOwnProperty.call(m, "guildName"))
                w.uint32(82).string(m.guildName);
            if (m.offlineTime != null && Object.hasOwnProperty.call(m, "offlineTime"))
                w.uint32(88).int64(m.offlineTime);
            if (m.heroes != null && m.heroes.length) {
                for (var i = 0; i < m.heroes.length; ++i)
                    $root.proto.SimpleHero.encode(m.heroes[i], w.uint32(98).fork()).ldelim();
            }
            return w;
        };

        /**
         * Decodes a SimpleRole message from the specified reader or buffer.
         * @function decode
         * @memberof proto.SimpleRole
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.SimpleRole} SimpleRole
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        SimpleRole.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.SimpleRole();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.id = r.string();
                    break;
                case 2:
                    m.areaId = r.int32();
                    break;
                case 3:
                    m.name = r.string();
                    break;
                case 4:
                    m.headIcon = r.int32();
                    break;
                case 5:
                    m.headFrame = r.int32();
                    break;
                case 6:
                    m.level = r.int32();
                    break;
                case 7:
                    m.reputation = r.int32();
                    break;
                case 8:
                    m.powerScore = r.int32();
                    break;
                case 9:
                    m.mainStage = r.int32();
                    break;
                case 10:
                    m.guildName = r.string();
                    break;
                case 11:
                    m.offlineTime = r.int64();
                    break;
                case 12:
                    if (!(m.heroes && m.heroes.length))
                        m.heroes = [];
                    m.heroes.push($root.proto.SimpleHero.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return SimpleRole;
    })();

    proto.Msg_GetSimpleRoleReq = (function() {

        /**
         * Properties of a Msg_GetSimpleRoleReq.
         * @memberof proto
         * @interface IMsg_GetSimpleRoleReq
         * @property {string|null} [roleId] Msg_GetSimpleRoleReq roleId
         */

        /**
         * Constructs a new Msg_GetSimpleRoleReq.
         * @memberof proto
         * @classdesc Represents a Msg_GetSimpleRoleReq.
         * @implements IMsg_GetSimpleRoleReq
         * @constructor
         * @param {proto.IMsg_GetSimpleRoleReq=} [p] Properties to set
         */
        function Msg_GetSimpleRoleReq(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_GetSimpleRoleReq roleId.
         * @member {string} roleId
         * @memberof proto.Msg_GetSimpleRoleReq
         * @instance
         */
        Msg_GetSimpleRoleReq.prototype.roleId = "";

        /**
         * Encodes the specified Msg_GetSimpleRoleReq message. Does not implicitly {@link proto.Msg_GetSimpleRoleReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_GetSimpleRoleReq
         * @static
         * @param {proto.IMsg_GetSimpleRoleReq} m Msg_GetSimpleRoleReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_GetSimpleRoleReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.roleId != null && Object.hasOwnProperty.call(m, "roleId"))
                w.uint32(10).string(m.roleId);
            return w;
        };

        /**
         * Decodes a Msg_GetSimpleRoleReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_GetSimpleRoleReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_GetSimpleRoleReq} Msg_GetSimpleRoleReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_GetSimpleRoleReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_GetSimpleRoleReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.roleId = r.string();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_GetSimpleRoleReq;
    })();

    proto.Msg_GetSimpleRoleRsp = (function() {

        /**
         * Properties of a Msg_GetSimpleRoleRsp.
         * @memberof proto
         * @interface IMsg_GetSimpleRoleRsp
         * @property {proto.ISimpleRole|null} [role] Msg_GetSimpleRoleRsp role
         */

        /**
         * Constructs a new Msg_GetSimpleRoleRsp.
         * @memberof proto
         * @classdesc Represents a Msg_GetSimpleRoleRsp.
         * @implements IMsg_GetSimpleRoleRsp
         * @constructor
         * @param {proto.IMsg_GetSimpleRoleRsp=} [p] Properties to set
         */
        function Msg_GetSimpleRoleRsp(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_GetSimpleRoleRsp role.
         * @member {proto.ISimpleRole|null|undefined} role
         * @memberof proto.Msg_GetSimpleRoleRsp
         * @instance
         */
        Msg_GetSimpleRoleRsp.prototype.role = null;

        /**
         * Encodes the specified Msg_GetSimpleRoleRsp message. Does not implicitly {@link proto.Msg_GetSimpleRoleRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_GetSimpleRoleRsp
         * @static
         * @param {proto.IMsg_GetSimpleRoleRsp} m Msg_GetSimpleRoleRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_GetSimpleRoleRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.role != null && Object.hasOwnProperty.call(m, "role"))
                $root.proto.SimpleRole.encode(m.role, w.uint32(10).fork()).ldelim();
            return w;
        };

        /**
         * Decodes a Msg_GetSimpleRoleRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_GetSimpleRoleRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_GetSimpleRoleRsp} Msg_GetSimpleRoleRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_GetSimpleRoleRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_GetSimpleRoleRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.role = $root.proto.SimpleRole.decode(r, r.uint32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_GetSimpleRoleRsp;
    })();

    proto.Msg_ChangeRoleNameReq = (function() {

        /**
         * Properties of a Msg_ChangeRoleNameReq.
         * @memberof proto
         * @interface IMsg_ChangeRoleNameReq
         * @property {string|null} [name] Msg_ChangeRoleNameReq name
         */

        /**
         * Constructs a new Msg_ChangeRoleNameReq.
         * @memberof proto
         * @classdesc Represents a Msg_ChangeRoleNameReq.
         * @implements IMsg_ChangeRoleNameReq
         * @constructor
         * @param {proto.IMsg_ChangeRoleNameReq=} [p] Properties to set
         */
        function Msg_ChangeRoleNameReq(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_ChangeRoleNameReq name.
         * @member {string} name
         * @memberof proto.Msg_ChangeRoleNameReq
         * @instance
         */
        Msg_ChangeRoleNameReq.prototype.name = "";

        /**
         * Encodes the specified Msg_ChangeRoleNameReq message. Does not implicitly {@link proto.Msg_ChangeRoleNameReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_ChangeRoleNameReq
         * @static
         * @param {proto.IMsg_ChangeRoleNameReq} m Msg_ChangeRoleNameReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_ChangeRoleNameReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.name != null && Object.hasOwnProperty.call(m, "name"))
                w.uint32(10).string(m.name);
            return w;
        };

        /**
         * Decodes a Msg_ChangeRoleNameReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_ChangeRoleNameReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_ChangeRoleNameReq} Msg_ChangeRoleNameReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_ChangeRoleNameReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_ChangeRoleNameReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.name = r.string();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_ChangeRoleNameReq;
    })();

    proto.Msg_ChangeRoleNameRsp = (function() {

        /**
         * Properties of a Msg_ChangeRoleNameRsp.
         * @memberof proto
         * @interface IMsg_ChangeRoleNameRsp
         * @property {proto.ICommonError|null} [error] Msg_ChangeRoleNameRsp error
         * @property {string|null} [name] Msg_ChangeRoleNameRsp name
         */

        /**
         * Constructs a new Msg_ChangeRoleNameRsp.
         * @memberof proto
         * @classdesc Represents a Msg_ChangeRoleNameRsp.
         * @implements IMsg_ChangeRoleNameRsp
         * @constructor
         * @param {proto.IMsg_ChangeRoleNameRsp=} [p] Properties to set
         */
        function Msg_ChangeRoleNameRsp(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_ChangeRoleNameRsp error.
         * @member {proto.ICommonError|null|undefined} error
         * @memberof proto.Msg_ChangeRoleNameRsp
         * @instance
         */
        Msg_ChangeRoleNameRsp.prototype.error = null;

        /**
         * Msg_ChangeRoleNameRsp name.
         * @member {string} name
         * @memberof proto.Msg_ChangeRoleNameRsp
         * @instance
         */
        Msg_ChangeRoleNameRsp.prototype.name = "";

        /**
         * Encodes the specified Msg_ChangeRoleNameRsp message. Does not implicitly {@link proto.Msg_ChangeRoleNameRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_ChangeRoleNameRsp
         * @static
         * @param {proto.IMsg_ChangeRoleNameRsp} m Msg_ChangeRoleNameRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_ChangeRoleNameRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.error != null && Object.hasOwnProperty.call(m, "error"))
                $root.proto.CommonError.encode(m.error, w.uint32(10).fork()).ldelim();
            if (m.name != null && Object.hasOwnProperty.call(m, "name"))
                w.uint32(18).string(m.name);
            return w;
        };

        /**
         * Decodes a Msg_ChangeRoleNameRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_ChangeRoleNameRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_ChangeRoleNameRsp} Msg_ChangeRoleNameRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_ChangeRoleNameRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_ChangeRoleNameRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.error = $root.proto.CommonError.decode(r, r.uint32());
                    break;
                case 2:
                    m.name = r.string();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_ChangeRoleNameRsp;
    })();

    proto.Msg_GetAvatarInfoReq = (function() {

        /**
         * Properties of a Msg_GetAvatarInfoReq.
         * @memberof proto
         * @interface IMsg_GetAvatarInfoReq
         */

        /**
         * Constructs a new Msg_GetAvatarInfoReq.
         * @memberof proto
         * @classdesc Represents a Msg_GetAvatarInfoReq.
         * @implements IMsg_GetAvatarInfoReq
         * @constructor
         * @param {proto.IMsg_GetAvatarInfoReq=} [p] Properties to set
         */
        function Msg_GetAvatarInfoReq(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Encodes the specified Msg_GetAvatarInfoReq message. Does not implicitly {@link proto.Msg_GetAvatarInfoReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_GetAvatarInfoReq
         * @static
         * @param {proto.IMsg_GetAvatarInfoReq} m Msg_GetAvatarInfoReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_GetAvatarInfoReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };

        /**
         * Decodes a Msg_GetAvatarInfoReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_GetAvatarInfoReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_GetAvatarInfoReq} Msg_GetAvatarInfoReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_GetAvatarInfoReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_GetAvatarInfoReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_GetAvatarInfoReq;
    })();

    proto.Msg_GetAvatarInfoRsp = (function() {

        /**
         * Properties of a Msg_GetAvatarInfoRsp.
         * @memberof proto
         * @interface IMsg_GetAvatarInfoRsp
         * @property {Array.<proto.IItem>|null} [headIcons] Msg_GetAvatarInfoRsp headIcons
         * @property {number|null} [headIcon] Msg_GetAvatarInfoRsp headIcon
         * @property {Array.<proto.IItem>|null} [headFrames] Msg_GetAvatarInfoRsp headFrames
         * @property {number|null} [headFrame] Msg_GetAvatarInfoRsp headFrame
         * @property {Array.<proto.IItem>|null} [chatBubbles] Msg_GetAvatarInfoRsp chatBubbles
         * @property {number|null} [chatBubble] Msg_GetAvatarInfoRsp chatBubble
         * @property {Array.<proto.IItem>|null} [mainScenes] Msg_GetAvatarInfoRsp mainScenes
         * @property {number|null} [mainScene] Msg_GetAvatarInfoRsp mainScene
         */

        /**
         * Constructs a new Msg_GetAvatarInfoRsp.
         * @memberof proto
         * @classdesc Represents a Msg_GetAvatarInfoRsp.
         * @implements IMsg_GetAvatarInfoRsp
         * @constructor
         * @param {proto.IMsg_GetAvatarInfoRsp=} [p] Properties to set
         */
        function Msg_GetAvatarInfoRsp(p) {
            this.headIcons = [];
            this.headFrames = [];
            this.chatBubbles = [];
            this.mainScenes = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_GetAvatarInfoRsp headIcons.
         * @member {Array.<proto.IItem>} headIcons
         * @memberof proto.Msg_GetAvatarInfoRsp
         * @instance
         */
        Msg_GetAvatarInfoRsp.prototype.headIcons = $util.emptyArray;

        /**
         * Msg_GetAvatarInfoRsp headIcon.
         * @member {number} headIcon
         * @memberof proto.Msg_GetAvatarInfoRsp
         * @instance
         */
        Msg_GetAvatarInfoRsp.prototype.headIcon = 0;

        /**
         * Msg_GetAvatarInfoRsp headFrames.
         * @member {Array.<proto.IItem>} headFrames
         * @memberof proto.Msg_GetAvatarInfoRsp
         * @instance
         */
        Msg_GetAvatarInfoRsp.prototype.headFrames = $util.emptyArray;

        /**
         * Msg_GetAvatarInfoRsp headFrame.
         * @member {number} headFrame
         * @memberof proto.Msg_GetAvatarInfoRsp
         * @instance
         */
        Msg_GetAvatarInfoRsp.prototype.headFrame = 0;

        /**
         * Msg_GetAvatarInfoRsp chatBubbles.
         * @member {Array.<proto.IItem>} chatBubbles
         * @memberof proto.Msg_GetAvatarInfoRsp
         * @instance
         */
        Msg_GetAvatarInfoRsp.prototype.chatBubbles = $util.emptyArray;

        /**
         * Msg_GetAvatarInfoRsp chatBubble.
         * @member {number} chatBubble
         * @memberof proto.Msg_GetAvatarInfoRsp
         * @instance
         */
        Msg_GetAvatarInfoRsp.prototype.chatBubble = 0;

        /**
         * Msg_GetAvatarInfoRsp mainScenes.
         * @member {Array.<proto.IItem>} mainScenes
         * @memberof proto.Msg_GetAvatarInfoRsp
         * @instance
         */
        Msg_GetAvatarInfoRsp.prototype.mainScenes = $util.emptyArray;

        /**
         * Msg_GetAvatarInfoRsp mainScene.
         * @member {number} mainScene
         * @memberof proto.Msg_GetAvatarInfoRsp
         * @instance
         */
        Msg_GetAvatarInfoRsp.prototype.mainScene = 0;

        /**
         * Encodes the specified Msg_GetAvatarInfoRsp message. Does not implicitly {@link proto.Msg_GetAvatarInfoRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_GetAvatarInfoRsp
         * @static
         * @param {proto.IMsg_GetAvatarInfoRsp} m Msg_GetAvatarInfoRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_GetAvatarInfoRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.headIcons != null && m.headIcons.length) {
                for (var i = 0; i < m.headIcons.length; ++i)
                    $root.proto.Item.encode(m.headIcons[i], w.uint32(10).fork()).ldelim();
            }
            if (m.headIcon != null && Object.hasOwnProperty.call(m, "headIcon"))
                w.uint32(16).int32(m.headIcon);
            if (m.headFrames != null && m.headFrames.length) {
                for (var i = 0; i < m.headFrames.length; ++i)
                    $root.proto.Item.encode(m.headFrames[i], w.uint32(26).fork()).ldelim();
            }
            if (m.headFrame != null && Object.hasOwnProperty.call(m, "headFrame"))
                w.uint32(32).int32(m.headFrame);
            if (m.chatBubbles != null && m.chatBubbles.length) {
                for (var i = 0; i < m.chatBubbles.length; ++i)
                    $root.proto.Item.encode(m.chatBubbles[i], w.uint32(42).fork()).ldelim();
            }
            if (m.chatBubble != null && Object.hasOwnProperty.call(m, "chatBubble"))
                w.uint32(48).int32(m.chatBubble);
            if (m.mainScenes != null && m.mainScenes.length) {
                for (var i = 0; i < m.mainScenes.length; ++i)
                    $root.proto.Item.encode(m.mainScenes[i], w.uint32(58).fork()).ldelim();
            }
            if (m.mainScene != null && Object.hasOwnProperty.call(m, "mainScene"))
                w.uint32(64).int32(m.mainScene);
            return w;
        };

        /**
         * Decodes a Msg_GetAvatarInfoRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_GetAvatarInfoRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_GetAvatarInfoRsp} Msg_GetAvatarInfoRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_GetAvatarInfoRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_GetAvatarInfoRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.headIcons && m.headIcons.length))
                        m.headIcons = [];
                    m.headIcons.push($root.proto.Item.decode(r, r.uint32()));
                    break;
                case 2:
                    m.headIcon = r.int32();
                    break;
                case 3:
                    if (!(m.headFrames && m.headFrames.length))
                        m.headFrames = [];
                    m.headFrames.push($root.proto.Item.decode(r, r.uint32()));
                    break;
                case 4:
                    m.headFrame = r.int32();
                    break;
                case 5:
                    if (!(m.chatBubbles && m.chatBubbles.length))
                        m.chatBubbles = [];
                    m.chatBubbles.push($root.proto.Item.decode(r, r.uint32()));
                    break;
                case 6:
                    m.chatBubble = r.int32();
                    break;
                case 7:
                    if (!(m.mainScenes && m.mainScenes.length))
                        m.mainScenes = [];
                    m.mainScenes.push($root.proto.Item.decode(r, r.uint32()));
                    break;
                case 8:
                    m.mainScene = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_GetAvatarInfoRsp;
    })();

    proto.Msg_SetHeadIconReq = (function() {

        /**
         * Properties of a Msg_SetHeadIconReq.
         * @memberof proto
         * @interface IMsg_SetHeadIconReq
         * @property {number|null} [headIcon] Msg_SetHeadIconReq headIcon
         */

        /**
         * Constructs a new Msg_SetHeadIconReq.
         * @memberof proto
         * @classdesc Represents a Msg_SetHeadIconReq.
         * @implements IMsg_SetHeadIconReq
         * @constructor
         * @param {proto.IMsg_SetHeadIconReq=} [p] Properties to set
         */
        function Msg_SetHeadIconReq(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_SetHeadIconReq headIcon.
         * @member {number} headIcon
         * @memberof proto.Msg_SetHeadIconReq
         * @instance
         */
        Msg_SetHeadIconReq.prototype.headIcon = 0;

        /**
         * Encodes the specified Msg_SetHeadIconReq message. Does not implicitly {@link proto.Msg_SetHeadIconReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_SetHeadIconReq
         * @static
         * @param {proto.IMsg_SetHeadIconReq} m Msg_SetHeadIconReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_SetHeadIconReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.headIcon != null && Object.hasOwnProperty.call(m, "headIcon"))
                w.uint32(8).int32(m.headIcon);
            return w;
        };

        /**
         * Decodes a Msg_SetHeadIconReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_SetHeadIconReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_SetHeadIconReq} Msg_SetHeadIconReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_SetHeadIconReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_SetHeadIconReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.headIcon = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_SetHeadIconReq;
    })();

    proto.Msg_SetHeadIconRsp = (function() {

        /**
         * Properties of a Msg_SetHeadIconRsp.
         * @memberof proto
         * @interface IMsg_SetHeadIconRsp
         * @property {proto.ICommonError|null} [error] Msg_SetHeadIconRsp error
         * @property {number|null} [headIcon] Msg_SetHeadIconRsp headIcon
         */

        /**
         * Constructs a new Msg_SetHeadIconRsp.
         * @memberof proto
         * @classdesc Represents a Msg_SetHeadIconRsp.
         * @implements IMsg_SetHeadIconRsp
         * @constructor
         * @param {proto.IMsg_SetHeadIconRsp=} [p] Properties to set
         */
        function Msg_SetHeadIconRsp(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_SetHeadIconRsp error.
         * @member {proto.ICommonError|null|undefined} error
         * @memberof proto.Msg_SetHeadIconRsp
         * @instance
         */
        Msg_SetHeadIconRsp.prototype.error = null;

        /**
         * Msg_SetHeadIconRsp headIcon.
         * @member {number} headIcon
         * @memberof proto.Msg_SetHeadIconRsp
         * @instance
         */
        Msg_SetHeadIconRsp.prototype.headIcon = 0;

        /**
         * Encodes the specified Msg_SetHeadIconRsp message. Does not implicitly {@link proto.Msg_SetHeadIconRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_SetHeadIconRsp
         * @static
         * @param {proto.IMsg_SetHeadIconRsp} m Msg_SetHeadIconRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_SetHeadIconRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.error != null && Object.hasOwnProperty.call(m, "error"))
                $root.proto.CommonError.encode(m.error, w.uint32(10).fork()).ldelim();
            if (m.headIcon != null && Object.hasOwnProperty.call(m, "headIcon"))
                w.uint32(16).int32(m.headIcon);
            return w;
        };

        /**
         * Decodes a Msg_SetHeadIconRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_SetHeadIconRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_SetHeadIconRsp} Msg_SetHeadIconRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_SetHeadIconRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_SetHeadIconRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.error = $root.proto.CommonError.decode(r, r.uint32());
                    break;
                case 2:
                    m.headIcon = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_SetHeadIconRsp;
    })();

    proto.Msg_SetHeadFrameReq = (function() {

        /**
         * Properties of a Msg_SetHeadFrameReq.
         * @memberof proto
         * @interface IMsg_SetHeadFrameReq
         * @property {number|null} [headFrame] Msg_SetHeadFrameReq headFrame
         */

        /**
         * Constructs a new Msg_SetHeadFrameReq.
         * @memberof proto
         * @classdesc Represents a Msg_SetHeadFrameReq.
         * @implements IMsg_SetHeadFrameReq
         * @constructor
         * @param {proto.IMsg_SetHeadFrameReq=} [p] Properties to set
         */
        function Msg_SetHeadFrameReq(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_SetHeadFrameReq headFrame.
         * @member {number} headFrame
         * @memberof proto.Msg_SetHeadFrameReq
         * @instance
         */
        Msg_SetHeadFrameReq.prototype.headFrame = 0;

        /**
         * Encodes the specified Msg_SetHeadFrameReq message. Does not implicitly {@link proto.Msg_SetHeadFrameReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_SetHeadFrameReq
         * @static
         * @param {proto.IMsg_SetHeadFrameReq} m Msg_SetHeadFrameReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_SetHeadFrameReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.headFrame != null && Object.hasOwnProperty.call(m, "headFrame"))
                w.uint32(8).int32(m.headFrame);
            return w;
        };

        /**
         * Decodes a Msg_SetHeadFrameReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_SetHeadFrameReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_SetHeadFrameReq} Msg_SetHeadFrameReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_SetHeadFrameReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_SetHeadFrameReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.headFrame = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_SetHeadFrameReq;
    })();

    proto.Msg_SetHeadFrameRsp = (function() {

        /**
         * Properties of a Msg_SetHeadFrameRsp.
         * @memberof proto
         * @interface IMsg_SetHeadFrameRsp
         * @property {proto.ICommonError|null} [error] Msg_SetHeadFrameRsp error
         * @property {number|null} [headFrame] Msg_SetHeadFrameRsp headFrame
         */

        /**
         * Constructs a new Msg_SetHeadFrameRsp.
         * @memberof proto
         * @classdesc Represents a Msg_SetHeadFrameRsp.
         * @implements IMsg_SetHeadFrameRsp
         * @constructor
         * @param {proto.IMsg_SetHeadFrameRsp=} [p] Properties to set
         */
        function Msg_SetHeadFrameRsp(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_SetHeadFrameRsp error.
         * @member {proto.ICommonError|null|undefined} error
         * @memberof proto.Msg_SetHeadFrameRsp
         * @instance
         */
        Msg_SetHeadFrameRsp.prototype.error = null;

        /**
         * Msg_SetHeadFrameRsp headFrame.
         * @member {number} headFrame
         * @memberof proto.Msg_SetHeadFrameRsp
         * @instance
         */
        Msg_SetHeadFrameRsp.prototype.headFrame = 0;

        /**
         * Encodes the specified Msg_SetHeadFrameRsp message. Does not implicitly {@link proto.Msg_SetHeadFrameRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_SetHeadFrameRsp
         * @static
         * @param {proto.IMsg_SetHeadFrameRsp} m Msg_SetHeadFrameRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_SetHeadFrameRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.error != null && Object.hasOwnProperty.call(m, "error"))
                $root.proto.CommonError.encode(m.error, w.uint32(10).fork()).ldelim();
            if (m.headFrame != null && Object.hasOwnProperty.call(m, "headFrame"))
                w.uint32(16).int32(m.headFrame);
            return w;
        };

        /**
         * Decodes a Msg_SetHeadFrameRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_SetHeadFrameRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_SetHeadFrameRsp} Msg_SetHeadFrameRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_SetHeadFrameRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_SetHeadFrameRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.error = $root.proto.CommonError.decode(r, r.uint32());
                    break;
                case 2:
                    m.headFrame = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_SetHeadFrameRsp;
    })();

    proto.Msg_SetChatBubbleReq = (function() {

        /**
         * Properties of a Msg_SetChatBubbleReq.
         * @memberof proto
         * @interface IMsg_SetChatBubbleReq
         * @property {number|null} [chatBubble] Msg_SetChatBubbleReq chatBubble
         */

        /**
         * Constructs a new Msg_SetChatBubbleReq.
         * @memberof proto
         * @classdesc Represents a Msg_SetChatBubbleReq.
         * @implements IMsg_SetChatBubbleReq
         * @constructor
         * @param {proto.IMsg_SetChatBubbleReq=} [p] Properties to set
         */
        function Msg_SetChatBubbleReq(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_SetChatBubbleReq chatBubble.
         * @member {number} chatBubble
         * @memberof proto.Msg_SetChatBubbleReq
         * @instance
         */
        Msg_SetChatBubbleReq.prototype.chatBubble = 0;

        /**
         * Encodes the specified Msg_SetChatBubbleReq message. Does not implicitly {@link proto.Msg_SetChatBubbleReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_SetChatBubbleReq
         * @static
         * @param {proto.IMsg_SetChatBubbleReq} m Msg_SetChatBubbleReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_SetChatBubbleReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.chatBubble != null && Object.hasOwnProperty.call(m, "chatBubble"))
                w.uint32(8).int32(m.chatBubble);
            return w;
        };

        /**
         * Decodes a Msg_SetChatBubbleReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_SetChatBubbleReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_SetChatBubbleReq} Msg_SetChatBubbleReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_SetChatBubbleReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_SetChatBubbleReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.chatBubble = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_SetChatBubbleReq;
    })();

    proto.Msg_SetChatBubbleRsp = (function() {

        /**
         * Properties of a Msg_SetChatBubbleRsp.
         * @memberof proto
         * @interface IMsg_SetChatBubbleRsp
         * @property {proto.ICommonError|null} [error] Msg_SetChatBubbleRsp error
         * @property {number|null} [chatBubble] Msg_SetChatBubbleRsp chatBubble
         */

        /**
         * Constructs a new Msg_SetChatBubbleRsp.
         * @memberof proto
         * @classdesc Represents a Msg_SetChatBubbleRsp.
         * @implements IMsg_SetChatBubbleRsp
         * @constructor
         * @param {proto.IMsg_SetChatBubbleRsp=} [p] Properties to set
         */
        function Msg_SetChatBubbleRsp(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_SetChatBubbleRsp error.
         * @member {proto.ICommonError|null|undefined} error
         * @memberof proto.Msg_SetChatBubbleRsp
         * @instance
         */
        Msg_SetChatBubbleRsp.prototype.error = null;

        /**
         * Msg_SetChatBubbleRsp chatBubble.
         * @member {number} chatBubble
         * @memberof proto.Msg_SetChatBubbleRsp
         * @instance
         */
        Msg_SetChatBubbleRsp.prototype.chatBubble = 0;

        /**
         * Encodes the specified Msg_SetChatBubbleRsp message. Does not implicitly {@link proto.Msg_SetChatBubbleRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_SetChatBubbleRsp
         * @static
         * @param {proto.IMsg_SetChatBubbleRsp} m Msg_SetChatBubbleRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_SetChatBubbleRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.error != null && Object.hasOwnProperty.call(m, "error"))
                $root.proto.CommonError.encode(m.error, w.uint32(10).fork()).ldelim();
            if (m.chatBubble != null && Object.hasOwnProperty.call(m, "chatBubble"))
                w.uint32(16).int32(m.chatBubble);
            return w;
        };

        /**
         * Decodes a Msg_SetChatBubbleRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_SetChatBubbleRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_SetChatBubbleRsp} Msg_SetChatBubbleRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_SetChatBubbleRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_SetChatBubbleRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.error = $root.proto.CommonError.decode(r, r.uint32());
                    break;
                case 2:
                    m.chatBubble = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_SetChatBubbleRsp;
    })();

    proto.Msg_SetMainSceneReq = (function() {

        /**
         * Properties of a Msg_SetMainSceneReq.
         * @memberof proto
         * @interface IMsg_SetMainSceneReq
         * @property {number|null} [mainScene] Msg_SetMainSceneReq mainScene
         */

        /**
         * Constructs a new Msg_SetMainSceneReq.
         * @memberof proto
         * @classdesc Represents a Msg_SetMainSceneReq.
         * @implements IMsg_SetMainSceneReq
         * @constructor
         * @param {proto.IMsg_SetMainSceneReq=} [p] Properties to set
         */
        function Msg_SetMainSceneReq(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_SetMainSceneReq mainScene.
         * @member {number} mainScene
         * @memberof proto.Msg_SetMainSceneReq
         * @instance
         */
        Msg_SetMainSceneReq.prototype.mainScene = 0;

        /**
         * Encodes the specified Msg_SetMainSceneReq message. Does not implicitly {@link proto.Msg_SetMainSceneReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_SetMainSceneReq
         * @static
         * @param {proto.IMsg_SetMainSceneReq} m Msg_SetMainSceneReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_SetMainSceneReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.mainScene != null && Object.hasOwnProperty.call(m, "mainScene"))
                w.uint32(8).int32(m.mainScene);
            return w;
        };

        /**
         * Decodes a Msg_SetMainSceneReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_SetMainSceneReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_SetMainSceneReq} Msg_SetMainSceneReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_SetMainSceneReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_SetMainSceneReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.mainScene = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_SetMainSceneReq;
    })();

    proto.Msg_SetMainSceneRsp = (function() {

        /**
         * Properties of a Msg_SetMainSceneRsp.
         * @memberof proto
         * @interface IMsg_SetMainSceneRsp
         * @property {proto.ICommonError|null} [error] Msg_SetMainSceneRsp error
         * @property {number|null} [mainScene] Msg_SetMainSceneRsp mainScene
         */

        /**
         * Constructs a new Msg_SetMainSceneRsp.
         * @memberof proto
         * @classdesc Represents a Msg_SetMainSceneRsp.
         * @implements IMsg_SetMainSceneRsp
         * @constructor
         * @param {proto.IMsg_SetMainSceneRsp=} [p] Properties to set
         */
        function Msg_SetMainSceneRsp(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_SetMainSceneRsp error.
         * @member {proto.ICommonError|null|undefined} error
         * @memberof proto.Msg_SetMainSceneRsp
         * @instance
         */
        Msg_SetMainSceneRsp.prototype.error = null;

        /**
         * Msg_SetMainSceneRsp mainScene.
         * @member {number} mainScene
         * @memberof proto.Msg_SetMainSceneRsp
         * @instance
         */
        Msg_SetMainSceneRsp.prototype.mainScene = 0;

        /**
         * Encodes the specified Msg_SetMainSceneRsp message. Does not implicitly {@link proto.Msg_SetMainSceneRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_SetMainSceneRsp
         * @static
         * @param {proto.IMsg_SetMainSceneRsp} m Msg_SetMainSceneRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_SetMainSceneRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.error != null && Object.hasOwnProperty.call(m, "error"))
                $root.proto.CommonError.encode(m.error, w.uint32(10).fork()).ldelim();
            if (m.mainScene != null && Object.hasOwnProperty.call(m, "mainScene"))
                w.uint32(16).int32(m.mainScene);
            return w;
        };

        /**
         * Decodes a Msg_SetMainSceneRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_SetMainSceneRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_SetMainSceneRsp} Msg_SetMainSceneRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_SetMainSceneRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_SetMainSceneRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.error = $root.proto.CommonError.decode(r, r.uint32());
                    break;
                case 2:
                    m.mainScene = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_SetMainSceneRsp;
    })();

    proto.Msg_RoleLevelUpPush = (function() {

        /**
         * Properties of a Msg_RoleLevelUpPush.
         * @memberof proto
         * @interface IMsg_RoleLevelUpPush
         * @property {number|null} [level] Msg_RoleLevelUpPush level
         * @property {Array.<proto.IItem>|null} [rewards] Msg_RoleLevelUpPush rewards
         */

        /**
         * Constructs a new Msg_RoleLevelUpPush.
         * @memberof proto
         * @classdesc Represents a Msg_RoleLevelUpPush.
         * @implements IMsg_RoleLevelUpPush
         * @constructor
         * @param {proto.IMsg_RoleLevelUpPush=} [p] Properties to set
         */
        function Msg_RoleLevelUpPush(p) {
            this.rewards = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_RoleLevelUpPush level.
         * @member {number} level
         * @memberof proto.Msg_RoleLevelUpPush
         * @instance
         */
        Msg_RoleLevelUpPush.prototype.level = 0;

        /**
         * Msg_RoleLevelUpPush rewards.
         * @member {Array.<proto.IItem>} rewards
         * @memberof proto.Msg_RoleLevelUpPush
         * @instance
         */
        Msg_RoleLevelUpPush.prototype.rewards = $util.emptyArray;

        /**
         * Encodes the specified Msg_RoleLevelUpPush message. Does not implicitly {@link proto.Msg_RoleLevelUpPush.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_RoleLevelUpPush
         * @static
         * @param {proto.IMsg_RoleLevelUpPush} m Msg_RoleLevelUpPush message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_RoleLevelUpPush.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.level != null && Object.hasOwnProperty.call(m, "level"))
                w.uint32(8).int32(m.level);
            if (m.rewards != null && m.rewards.length) {
                for (var i = 0; i < m.rewards.length; ++i)
                    $root.proto.Item.encode(m.rewards[i], w.uint32(18).fork()).ldelim();
            }
            return w;
        };

        /**
         * Decodes a Msg_RoleLevelUpPush message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_RoleLevelUpPush
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_RoleLevelUpPush} Msg_RoleLevelUpPush
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_RoleLevelUpPush.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_RoleLevelUpPush();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.level = r.int32();
                    break;
                case 2:
                    if (!(m.rewards && m.rewards.length))
                        m.rewards = [];
                    m.rewards.push($root.proto.Item.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_RoleLevelUpPush;
    })();

    proto.DropSumData = (function() {

        /**
         * Properties of a DropSumData.
         * @memberof proto
         * @interface IDropSumData
         * @property {string|null} [id] DropSumData id
         * @property {number|null} [sum] DropSumData sum
         */

        /**
         * Constructs a new DropSumData.
         * @memberof proto
         * @classdesc Represents a DropSumData.
         * @implements IDropSumData
         * @constructor
         * @param {proto.IDropSumData=} [p] Properties to set
         */
        function DropSumData(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * DropSumData id.
         * @member {string} id
         * @memberof proto.DropSumData
         * @instance
         */
        DropSumData.prototype.id = "";

        /**
         * DropSumData sum.
         * @member {number} sum
         * @memberof proto.DropSumData
         * @instance
         */
        DropSumData.prototype.sum = 0;

        /**
         * Encodes the specified DropSumData message. Does not implicitly {@link proto.DropSumData.verify|verify} messages.
         * @function encode
         * @memberof proto.DropSumData
         * @static
         * @param {proto.IDropSumData} m DropSumData message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        DropSumData.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.id != null && Object.hasOwnProperty.call(m, "id"))
                w.uint32(10).string(m.id);
            if (m.sum != null && Object.hasOwnProperty.call(m, "sum"))
                w.uint32(16).int32(m.sum);
            return w;
        };

        /**
         * Decodes a DropSumData message from the specified reader or buffer.
         * @function decode
         * @memberof proto.DropSumData
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.DropSumData} DropSumData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        DropSumData.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.DropSumData();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.id = r.string();
                    break;
                case 2:
                    m.sum = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return DropSumData;
    })();

    proto.DropPbData = (function() {

        /**
         * Properties of a DropPbData.
         * @memberof proto
         * @interface IDropPbData
         * @property {Array.<proto.IDropSumData>|null} [data] DropPbData data
         */

        /**
         * Constructs a new DropPbData.
         * @memberof proto
         * @classdesc Represents a DropPbData.
         * @implements IDropPbData
         * @constructor
         * @param {proto.IDropPbData=} [p] Properties to set
         */
        function DropPbData(p) {
            this.data = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * DropPbData data.
         * @member {Array.<proto.IDropSumData>} data
         * @memberof proto.DropPbData
         * @instance
         */
        DropPbData.prototype.data = $util.emptyArray;

        /**
         * Encodes the specified DropPbData message. Does not implicitly {@link proto.DropPbData.verify|verify} messages.
         * @function encode
         * @memberof proto.DropPbData
         * @static
         * @param {proto.IDropPbData} m DropPbData message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        DropPbData.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.data != null && m.data.length) {
                for (var i = 0; i < m.data.length; ++i)
                    $root.proto.DropSumData.encode(m.data[i], w.uint32(10).fork()).ldelim();
            }
            return w;
        };

        /**
         * Decodes a DropPbData message from the specified reader or buffer.
         * @function decode
         * @memberof proto.DropPbData
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.DropPbData} DropPbData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        DropPbData.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.DropPbData();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.data && m.data.length))
                        m.data = [];
                    m.data.push($root.proto.DropSumData.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return DropPbData;
    })();

    proto.Msg_UpdateDropSum = (function() {

        /**
         * Properties of a Msg_UpdateDropSum.
         * @memberof proto
         * @interface IMsg_UpdateDropSum
         * @property {Array.<proto.IDropSumData>|null} [data] Msg_UpdateDropSum data
         */

        /**
         * Constructs a new Msg_UpdateDropSum.
         * @memberof proto
         * @classdesc Represents a Msg_UpdateDropSum.
         * @implements IMsg_UpdateDropSum
         * @constructor
         * @param {proto.IMsg_UpdateDropSum=} [p] Properties to set
         */
        function Msg_UpdateDropSum(p) {
            this.data = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_UpdateDropSum data.
         * @member {Array.<proto.IDropSumData>} data
         * @memberof proto.Msg_UpdateDropSum
         * @instance
         */
        Msg_UpdateDropSum.prototype.data = $util.emptyArray;

        /**
         * Encodes the specified Msg_UpdateDropSum message. Does not implicitly {@link proto.Msg_UpdateDropSum.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_UpdateDropSum
         * @static
         * @param {proto.IMsg_UpdateDropSum} m Msg_UpdateDropSum message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_UpdateDropSum.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.data != null && m.data.length) {
                for (var i = 0; i < m.data.length; ++i)
                    $root.proto.DropSumData.encode(m.data[i], w.uint32(10).fork()).ldelim();
            }
            return w;
        };

        /**
         * Decodes a Msg_UpdateDropSum message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_UpdateDropSum
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_UpdateDropSum} Msg_UpdateDropSum
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_UpdateDropSum.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_UpdateDropSum();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.data && m.data.length))
                        m.data = [];
                    m.data.push($root.proto.DropSumData.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_UpdateDropSum;
    })();

    proto.FirstRewardId = (function() {

        /**
         * Properties of a FirstRewardId.
         * @memberof proto
         * @interface IFirstRewardId
         * @property {number|null} [stageId] FirstRewardId stageId
         * @property {number|null} [index] FirstRewardId index
         */

        /**
         * Constructs a new FirstRewardId.
         * @memberof proto
         * @classdesc Represents a FirstRewardId.
         * @implements IFirstRewardId
         * @constructor
         * @param {proto.IFirstRewardId=} [p] Properties to set
         */
        function FirstRewardId(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * FirstRewardId stageId.
         * @member {number} stageId
         * @memberof proto.FirstRewardId
         * @instance
         */
        FirstRewardId.prototype.stageId = 0;

        /**
         * FirstRewardId index.
         * @member {number} index
         * @memberof proto.FirstRewardId
         * @instance
         */
        FirstRewardId.prototype.index = 0;

        /**
         * Encodes the specified FirstRewardId message. Does not implicitly {@link proto.FirstRewardId.verify|verify} messages.
         * @function encode
         * @memberof proto.FirstRewardId
         * @static
         * @param {proto.IFirstRewardId} m FirstRewardId message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        FirstRewardId.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.stageId != null && Object.hasOwnProperty.call(m, "stageId"))
                w.uint32(8).int32(m.stageId);
            if (m.index != null && Object.hasOwnProperty.call(m, "index"))
                w.uint32(16).int32(m.index);
            return w;
        };

        /**
         * Decodes a FirstRewardId message from the specified reader or buffer.
         * @function decode
         * @memberof proto.FirstRewardId
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.FirstRewardId} FirstRewardId
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        FirstRewardId.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.FirstRewardId();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.stageId = r.int32();
                    break;
                case 2:
                    m.index = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return FirstRewardId;
    })();

    proto.Msg_GetMainStageInfoReq = (function() {

        /**
         * Properties of a Msg_GetMainStageInfoReq.
         * @memberof proto
         * @interface IMsg_GetMainStageInfoReq
         */

        /**
         * Constructs a new Msg_GetMainStageInfoReq.
         * @memberof proto
         * @classdesc Represents a Msg_GetMainStageInfoReq.
         * @implements IMsg_GetMainStageInfoReq
         * @constructor
         * @param {proto.IMsg_GetMainStageInfoReq=} [p] Properties to set
         */
        function Msg_GetMainStageInfoReq(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Encodes the specified Msg_GetMainStageInfoReq message. Does not implicitly {@link proto.Msg_GetMainStageInfoReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_GetMainStageInfoReq
         * @static
         * @param {proto.IMsg_GetMainStageInfoReq} m Msg_GetMainStageInfoReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_GetMainStageInfoReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };

        /**
         * Decodes a Msg_GetMainStageInfoReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_GetMainStageInfoReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_GetMainStageInfoReq} Msg_GetMainStageInfoReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_GetMainStageInfoReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_GetMainStageInfoReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_GetMainStageInfoReq;
    })();

    proto.Msg_GetMainStageInfoRsp = (function() {

        /**
         * Properties of a Msg_GetMainStageInfoRsp.
         * @memberof proto
         * @interface IMsg_GetMainStageInfoRsp
         * @property {Array.<number>|null} [clearedStageIds] Msg_GetMainStageInfoRsp clearedStageIds
         * @property {number|null} [currentMainStageMaxAliveSeconds] Msg_GetMainStageInfoRsp currentMainStageMaxAliveSeconds
         * @property {number|null} [fightingMainStageId] Msg_GetMainStageInfoRsp fightingMainStageId
         * @property {Array.<proto.IFirstRewardId>|null} [receivedMainFirstRewardIds] Msg_GetMainStageInfoRsp receivedMainFirstRewardIds
         */

        /**
         * Constructs a new Msg_GetMainStageInfoRsp.
         * @memberof proto
         * @classdesc Represents a Msg_GetMainStageInfoRsp.
         * @implements IMsg_GetMainStageInfoRsp
         * @constructor
         * @param {proto.IMsg_GetMainStageInfoRsp=} [p] Properties to set
         */
        function Msg_GetMainStageInfoRsp(p) {
            this.clearedStageIds = [];
            this.receivedMainFirstRewardIds = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_GetMainStageInfoRsp clearedStageIds.
         * @member {Array.<number>} clearedStageIds
         * @memberof proto.Msg_GetMainStageInfoRsp
         * @instance
         */
        Msg_GetMainStageInfoRsp.prototype.clearedStageIds = $util.emptyArray;

        /**
         * Msg_GetMainStageInfoRsp currentMainStageMaxAliveSeconds.
         * @member {number} currentMainStageMaxAliveSeconds
         * @memberof proto.Msg_GetMainStageInfoRsp
         * @instance
         */
        Msg_GetMainStageInfoRsp.prototype.currentMainStageMaxAliveSeconds = 0;

        /**
         * Msg_GetMainStageInfoRsp fightingMainStageId.
         * @member {number} fightingMainStageId
         * @memberof proto.Msg_GetMainStageInfoRsp
         * @instance
         */
        Msg_GetMainStageInfoRsp.prototype.fightingMainStageId = 0;

        /**
         * Msg_GetMainStageInfoRsp receivedMainFirstRewardIds.
         * @member {Array.<proto.IFirstRewardId>} receivedMainFirstRewardIds
         * @memberof proto.Msg_GetMainStageInfoRsp
         * @instance
         */
        Msg_GetMainStageInfoRsp.prototype.receivedMainFirstRewardIds = $util.emptyArray;

        /**
         * Encodes the specified Msg_GetMainStageInfoRsp message. Does not implicitly {@link proto.Msg_GetMainStageInfoRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_GetMainStageInfoRsp
         * @static
         * @param {proto.IMsg_GetMainStageInfoRsp} m Msg_GetMainStageInfoRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_GetMainStageInfoRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.clearedStageIds != null && m.clearedStageIds.length) {
                w.uint32(10).fork();
                for (var i = 0; i < m.clearedStageIds.length; ++i)
                    w.int32(m.clearedStageIds[i]);
                w.ldelim();
            }
            if (m.currentMainStageMaxAliveSeconds != null && Object.hasOwnProperty.call(m, "currentMainStageMaxAliveSeconds"))
                w.uint32(16).int32(m.currentMainStageMaxAliveSeconds);
            if (m.fightingMainStageId != null && Object.hasOwnProperty.call(m, "fightingMainStageId"))
                w.uint32(24).int32(m.fightingMainStageId);
            if (m.receivedMainFirstRewardIds != null && m.receivedMainFirstRewardIds.length) {
                for (var i = 0; i < m.receivedMainFirstRewardIds.length; ++i)
                    $root.proto.FirstRewardId.encode(m.receivedMainFirstRewardIds[i], w.uint32(34).fork()).ldelim();
            }
            return w;
        };

        /**
         * Decodes a Msg_GetMainStageInfoRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_GetMainStageInfoRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_GetMainStageInfoRsp} Msg_GetMainStageInfoRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_GetMainStageInfoRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_GetMainStageInfoRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.clearedStageIds && m.clearedStageIds.length))
                        m.clearedStageIds = [];
                    if ((t & 7) === 2) {
                        var c2 = r.uint32() + r.pos;
                        while (r.pos < c2)
                            m.clearedStageIds.push(r.int32());
                    } else
                        m.clearedStageIds.push(r.int32());
                    break;
                case 2:
                    m.currentMainStageMaxAliveSeconds = r.int32();
                    break;
                case 3:
                    m.fightingMainStageId = r.int32();
                    break;
                case 4:
                    if (!(m.receivedMainFirstRewardIds && m.receivedMainFirstRewardIds.length))
                        m.receivedMainFirstRewardIds = [];
                    m.receivedMainFirstRewardIds.push($root.proto.FirstRewardId.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_GetMainStageInfoRsp;
    })();

    proto.Msg_StartStageReq = (function() {

        /**
         * Properties of a Msg_StartStageReq.
         * @memberof proto
         * @interface IMsg_StartStageReq
         * @property {number|null} [stageId] Msg_StartStageReq stageId
         */

        /**
         * Constructs a new Msg_StartStageReq.
         * @memberof proto
         * @classdesc Represents a Msg_StartStageReq.
         * @implements IMsg_StartStageReq
         * @constructor
         * @param {proto.IMsg_StartStageReq=} [p] Properties to set
         */
        function Msg_StartStageReq(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_StartStageReq stageId.
         * @member {number} stageId
         * @memberof proto.Msg_StartStageReq
         * @instance
         */
        Msg_StartStageReq.prototype.stageId = 0;

        /**
         * Encodes the specified Msg_StartStageReq message. Does not implicitly {@link proto.Msg_StartStageReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_StartStageReq
         * @static
         * @param {proto.IMsg_StartStageReq} m Msg_StartStageReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_StartStageReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.stageId != null && Object.hasOwnProperty.call(m, "stageId"))
                w.uint32(8).int32(m.stageId);
            return w;
        };

        /**
         * Decodes a Msg_StartStageReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_StartStageReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_StartStageReq} Msg_StartStageReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_StartStageReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_StartStageReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.stageId = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_StartStageReq;
    })();

    proto.Msg_StartStageRsp = (function() {

        /**
         * Properties of a Msg_StartStageRsp.
         * @memberof proto
         * @interface IMsg_StartStageRsp
         * @property {proto.ICommonError|null} [error] Msg_StartStageRsp error
         */

        /**
         * Constructs a new Msg_StartStageRsp.
         * @memberof proto
         * @classdesc Represents a Msg_StartStageRsp.
         * @implements IMsg_StartStageRsp
         * @constructor
         * @param {proto.IMsg_StartStageRsp=} [p] Properties to set
         */
        function Msg_StartStageRsp(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_StartStageRsp error.
         * @member {proto.ICommonError|null|undefined} error
         * @memberof proto.Msg_StartStageRsp
         * @instance
         */
        Msg_StartStageRsp.prototype.error = null;

        /**
         * Encodes the specified Msg_StartStageRsp message. Does not implicitly {@link proto.Msg_StartStageRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_StartStageRsp
         * @static
         * @param {proto.IMsg_StartStageRsp} m Msg_StartStageRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_StartStageRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.error != null && Object.hasOwnProperty.call(m, "error"))
                $root.proto.CommonError.encode(m.error, w.uint32(10).fork()).ldelim();
            return w;
        };

        /**
         * Decodes a Msg_StartStageRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_StartStageRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_StartStageRsp} Msg_StartStageRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_StartStageRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_StartStageRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.error = $root.proto.CommonError.decode(r, r.uint32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_StartStageRsp;
    })();

    proto.StageFightBufferData = (function() {

        /**
         * Properties of a StageFightBufferData.
         * @memberof proto
         * @interface IStageFightBufferData
         * @property {number|null} [bufferId] StageFightBufferData bufferId
         * @property {number|null} [createTime] StageFightBufferData createTime
         * @property {number|null} [layer] StageFightBufferData layer
         * @property {number|null} [adder] StageFightBufferData adder
         * @property {number|null} [target] StageFightBufferData target
         */

        /**
         * Constructs a new StageFightBufferData.
         * @memberof proto
         * @classdesc Represents a StageFightBufferData.
         * @implements IStageFightBufferData
         * @constructor
         * @param {proto.IStageFightBufferData=} [p] Properties to set
         */
        function StageFightBufferData(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * StageFightBufferData bufferId.
         * @member {number} bufferId
         * @memberof proto.StageFightBufferData
         * @instance
         */
        StageFightBufferData.prototype.bufferId = 0;

        /**
         * StageFightBufferData createTime.
         * @member {number} createTime
         * @memberof proto.StageFightBufferData
         * @instance
         */
        StageFightBufferData.prototype.createTime = 0;

        /**
         * StageFightBufferData layer.
         * @member {number} layer
         * @memberof proto.StageFightBufferData
         * @instance
         */
        StageFightBufferData.prototype.layer = 0;

        /**
         * StageFightBufferData adder.
         * @member {number} adder
         * @memberof proto.StageFightBufferData
         * @instance
         */
        StageFightBufferData.prototype.adder = 0;

        /**
         * StageFightBufferData target.
         * @member {number} target
         * @memberof proto.StageFightBufferData
         * @instance
         */
        StageFightBufferData.prototype.target = 0;

        /**
         * Encodes the specified StageFightBufferData message. Does not implicitly {@link proto.StageFightBufferData.verify|verify} messages.
         * @function encode
         * @memberof proto.StageFightBufferData
         * @static
         * @param {proto.IStageFightBufferData} m StageFightBufferData message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        StageFightBufferData.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.bufferId != null && Object.hasOwnProperty.call(m, "bufferId"))
                w.uint32(8).int32(m.bufferId);
            if (m.createTime != null && Object.hasOwnProperty.call(m, "createTime"))
                w.uint32(16).int32(m.createTime);
            if (m.layer != null && Object.hasOwnProperty.call(m, "layer"))
                w.uint32(24).int32(m.layer);
            if (m.adder != null && Object.hasOwnProperty.call(m, "adder"))
                w.uint32(32).int32(m.adder);
            if (m.target != null && Object.hasOwnProperty.call(m, "target"))
                w.uint32(40).int32(m.target);
            return w;
        };

        /**
         * Decodes a StageFightBufferData message from the specified reader or buffer.
         * @function decode
         * @memberof proto.StageFightBufferData
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.StageFightBufferData} StageFightBufferData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        StageFightBufferData.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.StageFightBufferData();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.bufferId = r.int32();
                    break;
                case 2:
                    m.createTime = r.int32();
                    break;
                case 3:
                    m.layer = r.int32();
                    break;
                case 4:
                    m.adder = r.int32();
                    break;
                case 5:
                    m.target = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return StageFightBufferData;
    })();

    /**
     * CombatEvent enum.
     * @name proto.CombatEvent
     * @enum {number}
     * @property {number} AddBuffer=0 AddBuffer value
     * @property {number} RemoveBuffer=1 RemoveBuffer value
     * @property {number} Attack=2 Attack value
     */
    proto.CombatEvent = (function() {
        var valuesById = {}, values = Object.create(valuesById);
        values[valuesById[0] = "AddBuffer"] = 0;
        values[valuesById[1] = "RemoveBuffer"] = 1;
        values[valuesById[2] = "Attack"] = 2;
        return values;
    })();

    proto.CombatData = (function() {

        /**
         * Properties of a CombatData.
         * @memberof proto
         * @interface ICombatData
         * @property {number|null} [timestamp] CombatData timestamp
         * @property {proto.CombatEvent|null} [ev] CombatData ev
         * @property {proto.ICombatEventAddBuffer|null} [addBuffer] CombatData addBuffer
         * @property {proto.ICombatEventRemoveBuffer|null} [removeBuffer] CombatData removeBuffer
         * @property {proto.ICombatEventAttack|null} [attack] CombatData attack
         */

        /**
         * Constructs a new CombatData.
         * @memberof proto
         * @classdesc Represents a CombatData.
         * @implements ICombatData
         * @constructor
         * @param {proto.ICombatData=} [p] Properties to set
         */
        function CombatData(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * CombatData timestamp.
         * @member {number} timestamp
         * @memberof proto.CombatData
         * @instance
         */
        CombatData.prototype.timestamp = 0;

        /**
         * CombatData ev.
         * @member {proto.CombatEvent} ev
         * @memberof proto.CombatData
         * @instance
         */
        CombatData.prototype.ev = 0;

        /**
         * CombatData addBuffer.
         * @member {proto.ICombatEventAddBuffer|null|undefined} addBuffer
         * @memberof proto.CombatData
         * @instance
         */
        CombatData.prototype.addBuffer = null;

        /**
         * CombatData removeBuffer.
         * @member {proto.ICombatEventRemoveBuffer|null|undefined} removeBuffer
         * @memberof proto.CombatData
         * @instance
         */
        CombatData.prototype.removeBuffer = null;

        /**
         * CombatData attack.
         * @member {proto.ICombatEventAttack|null|undefined} attack
         * @memberof proto.CombatData
         * @instance
         */
        CombatData.prototype.attack = null;

        // OneOf field names bound to virtual getters and setters
        var $oneOfFields;

        /**
         * CombatData EventData.
         * @member {"addBuffer"|"removeBuffer"|"attack"|undefined} EventData
         * @memberof proto.CombatData
         * @instance
         */
        Object.defineProperty(CombatData.prototype, "EventData", {
            get: $util.oneOfGetter($oneOfFields = ["addBuffer", "removeBuffer", "attack"]),
            set: $util.oneOfSetter($oneOfFields)
        });

        /**
         * Encodes the specified CombatData message. Does not implicitly {@link proto.CombatData.verify|verify} messages.
         * @function encode
         * @memberof proto.CombatData
         * @static
         * @param {proto.ICombatData} m CombatData message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CombatData.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.timestamp != null && Object.hasOwnProperty.call(m, "timestamp"))
                w.uint32(8).int32(m.timestamp);
            if (m.ev != null && Object.hasOwnProperty.call(m, "ev"))
                w.uint32(16).int32(m.ev);
            if (m.addBuffer != null && Object.hasOwnProperty.call(m, "addBuffer"))
                $root.proto.CombatEventAddBuffer.encode(m.addBuffer, w.uint32(26).fork()).ldelim();
            if (m.removeBuffer != null && Object.hasOwnProperty.call(m, "removeBuffer"))
                $root.proto.CombatEventRemoveBuffer.encode(m.removeBuffer, w.uint32(34).fork()).ldelim();
            if (m.attack != null && Object.hasOwnProperty.call(m, "attack"))
                $root.proto.CombatEventAttack.encode(m.attack, w.uint32(42).fork()).ldelim();
            return w;
        };

        /**
         * Decodes a CombatData message from the specified reader or buffer.
         * @function decode
         * @memberof proto.CombatData
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.CombatData} CombatData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CombatData.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.CombatData();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.timestamp = r.int32();
                    break;
                case 2:
                    m.ev = r.int32();
                    break;
                case 3:
                    m.addBuffer = $root.proto.CombatEventAddBuffer.decode(r, r.uint32());
                    break;
                case 4:
                    m.removeBuffer = $root.proto.CombatEventRemoveBuffer.decode(r, r.uint32());
                    break;
                case 5:
                    m.attack = $root.proto.CombatEventAttack.decode(r, r.uint32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return CombatData;
    })();

    proto.StageFightHeroData = (function() {

        /**
         * Properties of a StageFightHeroData.
         * @memberof proto
         * @interface IStageFightHeroData
         * @property {number|null} [heroClass] StageFightHeroData heroClass
         * @property {number|null} [heroSerial] StageFightHeroData heroSerial
         * @property {Array.<proto.IStageFightBufferData>|null} [bufferList] StageFightHeroData bufferList
         * @property {number|Long|null} [hp] StageFightHeroData hp
         */

        /**
         * Constructs a new StageFightHeroData.
         * @memberof proto
         * @classdesc Represents a StageFightHeroData.
         * @implements IStageFightHeroData
         * @constructor
         * @param {proto.IStageFightHeroData=} [p] Properties to set
         */
        function StageFightHeroData(p) {
            this.bufferList = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * StageFightHeroData heroClass.
         * @member {number} heroClass
         * @memberof proto.StageFightHeroData
         * @instance
         */
        StageFightHeroData.prototype.heroClass = 0;

        /**
         * StageFightHeroData heroSerial.
         * @member {number} heroSerial
         * @memberof proto.StageFightHeroData
         * @instance
         */
        StageFightHeroData.prototype.heroSerial = 0;

        /**
         * StageFightHeroData bufferList.
         * @member {Array.<proto.IStageFightBufferData>} bufferList
         * @memberof proto.StageFightHeroData
         * @instance
         */
        StageFightHeroData.prototype.bufferList = $util.emptyArray;

        /**
         * StageFightHeroData hp.
         * @member {number|Long} hp
         * @memberof proto.StageFightHeroData
         * @instance
         */
        StageFightHeroData.prototype.hp = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

        /**
         * Encodes the specified StageFightHeroData message. Does not implicitly {@link proto.StageFightHeroData.verify|verify} messages.
         * @function encode
         * @memberof proto.StageFightHeroData
         * @static
         * @param {proto.IStageFightHeroData} m StageFightHeroData message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        StageFightHeroData.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.heroClass != null && Object.hasOwnProperty.call(m, "heroClass"))
                w.uint32(8).int32(m.heroClass);
            if (m.heroSerial != null && Object.hasOwnProperty.call(m, "heroSerial"))
                w.uint32(16).int32(m.heroSerial);
            if (m.bufferList != null && m.bufferList.length) {
                for (var i = 0; i < m.bufferList.length; ++i)
                    $root.proto.StageFightBufferData.encode(m.bufferList[i], w.uint32(26).fork()).ldelim();
            }
            if (m.hp != null && Object.hasOwnProperty.call(m, "hp"))
                w.uint32(32).int64(m.hp);
            return w;
        };

        /**
         * Decodes a StageFightHeroData message from the specified reader or buffer.
         * @function decode
         * @memberof proto.StageFightHeroData
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.StageFightHeroData} StageFightHeroData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        StageFightHeroData.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.StageFightHeroData();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.heroClass = r.int32();
                    break;
                case 2:
                    m.heroSerial = r.int32();
                    break;
                case 3:
                    if (!(m.bufferList && m.bufferList.length))
                        m.bufferList = [];
                    m.bufferList.push($root.proto.StageFightBufferData.decode(r, r.uint32()));
                    break;
                case 4:
                    m.hp = r.int64();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return StageFightHeroData;
    })();

    proto.StageFightExtraWeaponData = (function() {

        /**
         * Properties of a StageFightExtraWeaponData.
         * @memberof proto
         * @interface IStageFightExtraWeaponData
         * @property {number|null} [timestamp] StageFightExtraWeaponData timestamp
         * @property {number|null} [weaponId] StageFightExtraWeaponData weaponId
         */

        /**
         * Constructs a new StageFightExtraWeaponData.
         * @memberof proto
         * @classdesc Represents a StageFightExtraWeaponData.
         * @implements IStageFightExtraWeaponData
         * @constructor
         * @param {proto.IStageFightExtraWeaponData=} [p] Properties to set
         */
        function StageFightExtraWeaponData(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * StageFightExtraWeaponData timestamp.
         * @member {number} timestamp
         * @memberof proto.StageFightExtraWeaponData
         * @instance
         */
        StageFightExtraWeaponData.prototype.timestamp = 0;

        /**
         * StageFightExtraWeaponData weaponId.
         * @member {number} weaponId
         * @memberof proto.StageFightExtraWeaponData
         * @instance
         */
        StageFightExtraWeaponData.prototype.weaponId = 0;

        /**
         * Encodes the specified StageFightExtraWeaponData message. Does not implicitly {@link proto.StageFightExtraWeaponData.verify|verify} messages.
         * @function encode
         * @memberof proto.StageFightExtraWeaponData
         * @static
         * @param {proto.IStageFightExtraWeaponData} m StageFightExtraWeaponData message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        StageFightExtraWeaponData.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.timestamp != null && Object.hasOwnProperty.call(m, "timestamp"))
                w.uint32(8).int32(m.timestamp);
            if (m.weaponId != null && Object.hasOwnProperty.call(m, "weaponId"))
                w.uint32(16).int32(m.weaponId);
            return w;
        };

        /**
         * Decodes a StageFightExtraWeaponData message from the specified reader or buffer.
         * @function decode
         * @memberof proto.StageFightExtraWeaponData
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.StageFightExtraWeaponData} StageFightExtraWeaponData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        StageFightExtraWeaponData.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.StageFightExtraWeaponData();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.timestamp = r.int32();
                    break;
                case 2:
                    m.weaponId = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return StageFightExtraWeaponData;
    })();

    proto.StageBossFightData = (function() {

        /**
         * Properties of a StageBossFightData.
         * @memberof proto
         * @interface IStageBossFightData
         * @property {number|null} [bossId] StageBossFightData bossId
         * @property {number|null} [bossSerial] StageBossFightData bossSerial
         * @property {Array.<number>|null} [weaponList] StageBossFightData weaponList
         * @property {Array.<proto.IStageFightExtraWeaponData>|null} [extraWeaponList] StageBossFightData extraWeaponList
         * @property {number|null} [startTime] StageBossFightData startTime
         * @property {number|null} [fightTime] StageBossFightData fightTime
         * @property {Array.<number>|null} [reviveRecord] StageBossFightData reviveRecord
         * @property {Array.<proto.IStageFightHeroData>|null} [heroList] StageBossFightData heroList
         * @property {Array.<proto.ICombatData>|null} [combatData] StageBossFightData combatData
         */

        /**
         * Constructs a new StageBossFightData.
         * @memberof proto
         * @classdesc Represents a StageBossFightData.
         * @implements IStageBossFightData
         * @constructor
         * @param {proto.IStageBossFightData=} [p] Properties to set
         */
        function StageBossFightData(p) {
            this.weaponList = [];
            this.extraWeaponList = [];
            this.reviveRecord = [];
            this.heroList = [];
            this.combatData = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * StageBossFightData bossId.
         * @member {number} bossId
         * @memberof proto.StageBossFightData
         * @instance
         */
        StageBossFightData.prototype.bossId = 0;

        /**
         * StageBossFightData bossSerial.
         * @member {number} bossSerial
         * @memberof proto.StageBossFightData
         * @instance
         */
        StageBossFightData.prototype.bossSerial = 0;

        /**
         * StageBossFightData weaponList.
         * @member {Array.<number>} weaponList
         * @memberof proto.StageBossFightData
         * @instance
         */
        StageBossFightData.prototype.weaponList = $util.emptyArray;

        /**
         * StageBossFightData extraWeaponList.
         * @member {Array.<proto.IStageFightExtraWeaponData>} extraWeaponList
         * @memberof proto.StageBossFightData
         * @instance
         */
        StageBossFightData.prototype.extraWeaponList = $util.emptyArray;

        /**
         * StageBossFightData startTime.
         * @member {number} startTime
         * @memberof proto.StageBossFightData
         * @instance
         */
        StageBossFightData.prototype.startTime = 0;

        /**
         * StageBossFightData fightTime.
         * @member {number} fightTime
         * @memberof proto.StageBossFightData
         * @instance
         */
        StageBossFightData.prototype.fightTime = 0;

        /**
         * StageBossFightData reviveRecord.
         * @member {Array.<number>} reviveRecord
         * @memberof proto.StageBossFightData
         * @instance
         */
        StageBossFightData.prototype.reviveRecord = $util.emptyArray;

        /**
         * StageBossFightData heroList.
         * @member {Array.<proto.IStageFightHeroData>} heroList
         * @memberof proto.StageBossFightData
         * @instance
         */
        StageBossFightData.prototype.heroList = $util.emptyArray;

        /**
         * StageBossFightData combatData.
         * @member {Array.<proto.ICombatData>} combatData
         * @memberof proto.StageBossFightData
         * @instance
         */
        StageBossFightData.prototype.combatData = $util.emptyArray;

        /**
         * Encodes the specified StageBossFightData message. Does not implicitly {@link proto.StageBossFightData.verify|verify} messages.
         * @function encode
         * @memberof proto.StageBossFightData
         * @static
         * @param {proto.IStageBossFightData} m StageBossFightData message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        StageBossFightData.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.bossId != null && Object.hasOwnProperty.call(m, "bossId"))
                w.uint32(8).int32(m.bossId);
            if (m.bossSerial != null && Object.hasOwnProperty.call(m, "bossSerial"))
                w.uint32(16).int32(m.bossSerial);
            if (m.weaponList != null && m.weaponList.length) {
                w.uint32(26).fork();
                for (var i = 0; i < m.weaponList.length; ++i)
                    w.int32(m.weaponList[i]);
                w.ldelim();
            }
            if (m.extraWeaponList != null && m.extraWeaponList.length) {
                for (var i = 0; i < m.extraWeaponList.length; ++i)
                    $root.proto.StageFightExtraWeaponData.encode(m.extraWeaponList[i], w.uint32(34).fork()).ldelim();
            }
            if (m.startTime != null && Object.hasOwnProperty.call(m, "startTime"))
                w.uint32(40).int32(m.startTime);
            if (m.fightTime != null && Object.hasOwnProperty.call(m, "fightTime"))
                w.uint32(48).int32(m.fightTime);
            if (m.reviveRecord != null && m.reviveRecord.length) {
                w.uint32(58).fork();
                for (var i = 0; i < m.reviveRecord.length; ++i)
                    w.int32(m.reviveRecord[i]);
                w.ldelim();
            }
            if (m.heroList != null && m.heroList.length) {
                for (var i = 0; i < m.heroList.length; ++i)
                    $root.proto.StageFightHeroData.encode(m.heroList[i], w.uint32(66).fork()).ldelim();
            }
            if (m.combatData != null && m.combatData.length) {
                for (var i = 0; i < m.combatData.length; ++i)
                    $root.proto.CombatData.encode(m.combatData[i], w.uint32(74).fork()).ldelim();
            }
            return w;
        };

        /**
         * Decodes a StageBossFightData message from the specified reader or buffer.
         * @function decode
         * @memberof proto.StageBossFightData
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.StageBossFightData} StageBossFightData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        StageBossFightData.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.StageBossFightData();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.bossId = r.int32();
                    break;
                case 2:
                    m.bossSerial = r.int32();
                    break;
                case 3:
                    if (!(m.weaponList && m.weaponList.length))
                        m.weaponList = [];
                    if ((t & 7) === 2) {
                        var c2 = r.uint32() + r.pos;
                        while (r.pos < c2)
                            m.weaponList.push(r.int32());
                    } else
                        m.weaponList.push(r.int32());
                    break;
                case 4:
                    if (!(m.extraWeaponList && m.extraWeaponList.length))
                        m.extraWeaponList = [];
                    m.extraWeaponList.push($root.proto.StageFightExtraWeaponData.decode(r, r.uint32()));
                    break;
                case 5:
                    m.startTime = r.int32();
                    break;
                case 6:
                    m.fightTime = r.int32();
                    break;
                case 7:
                    if (!(m.reviveRecord && m.reviveRecord.length))
                        m.reviveRecord = [];
                    if ((t & 7) === 2) {
                        var c2 = r.uint32() + r.pos;
                        while (r.pos < c2)
                            m.reviveRecord.push(r.int32());
                    } else
                        m.reviveRecord.push(r.int32());
                    break;
                case 8:
                    if (!(m.heroList && m.heroList.length))
                        m.heroList = [];
                    m.heroList.push($root.proto.StageFightHeroData.decode(r, r.uint32()));
                    break;
                case 9:
                    if (!(m.combatData && m.combatData.length))
                        m.combatData = [];
                    m.combatData.push($root.proto.CombatData.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return StageBossFightData;
    })();

    proto.CombatEventAddBuffer = (function() {

        /**
         * Properties of a CombatEventAddBuffer.
         * @memberof proto
         * @interface ICombatEventAddBuffer
         * @property {number|null} [adder] CombatEventAddBuffer adder
         * @property {number|null} [target] CombatEventAddBuffer target
         * @property {number|null} [bufferId] CombatEventAddBuffer bufferId
         * @property {number|null} [layer] CombatEventAddBuffer layer
         */

        /**
         * Constructs a new CombatEventAddBuffer.
         * @memberof proto
         * @classdesc Represents a CombatEventAddBuffer.
         * @implements ICombatEventAddBuffer
         * @constructor
         * @param {proto.ICombatEventAddBuffer=} [p] Properties to set
         */
        function CombatEventAddBuffer(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * CombatEventAddBuffer adder.
         * @member {number} adder
         * @memberof proto.CombatEventAddBuffer
         * @instance
         */
        CombatEventAddBuffer.prototype.adder = 0;

        /**
         * CombatEventAddBuffer target.
         * @member {number} target
         * @memberof proto.CombatEventAddBuffer
         * @instance
         */
        CombatEventAddBuffer.prototype.target = 0;

        /**
         * CombatEventAddBuffer bufferId.
         * @member {number} bufferId
         * @memberof proto.CombatEventAddBuffer
         * @instance
         */
        CombatEventAddBuffer.prototype.bufferId = 0;

        /**
         * CombatEventAddBuffer layer.
         * @member {number} layer
         * @memberof proto.CombatEventAddBuffer
         * @instance
         */
        CombatEventAddBuffer.prototype.layer = 0;

        /**
         * Encodes the specified CombatEventAddBuffer message. Does not implicitly {@link proto.CombatEventAddBuffer.verify|verify} messages.
         * @function encode
         * @memberof proto.CombatEventAddBuffer
         * @static
         * @param {proto.ICombatEventAddBuffer} m CombatEventAddBuffer message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CombatEventAddBuffer.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.adder != null && Object.hasOwnProperty.call(m, "adder"))
                w.uint32(8).int32(m.adder);
            if (m.target != null && Object.hasOwnProperty.call(m, "target"))
                w.uint32(16).int32(m.target);
            if (m.bufferId != null && Object.hasOwnProperty.call(m, "bufferId"))
                w.uint32(24).int32(m.bufferId);
            if (m.layer != null && Object.hasOwnProperty.call(m, "layer"))
                w.uint32(32).int32(m.layer);
            return w;
        };

        /**
         * Decodes a CombatEventAddBuffer message from the specified reader or buffer.
         * @function decode
         * @memberof proto.CombatEventAddBuffer
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.CombatEventAddBuffer} CombatEventAddBuffer
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CombatEventAddBuffer.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.CombatEventAddBuffer();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.adder = r.int32();
                    break;
                case 2:
                    m.target = r.int32();
                    break;
                case 3:
                    m.bufferId = r.int32();
                    break;
                case 4:
                    m.layer = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return CombatEventAddBuffer;
    })();

    proto.CombatEventRemoveBuffer = (function() {

        /**
         * Properties of a CombatEventRemoveBuffer.
         * @memberof proto
         * @interface ICombatEventRemoveBuffer
         * @property {number|null} [owner] CombatEventRemoveBuffer owner
         * @property {number|null} [bufferId] CombatEventRemoveBuffer bufferId
         * @property {number|null} [layer] CombatEventRemoveBuffer layer
         */

        /**
         * Constructs a new CombatEventRemoveBuffer.
         * @memberof proto
         * @classdesc Represents a CombatEventRemoveBuffer.
         * @implements ICombatEventRemoveBuffer
         * @constructor
         * @param {proto.ICombatEventRemoveBuffer=} [p] Properties to set
         */
        function CombatEventRemoveBuffer(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * CombatEventRemoveBuffer owner.
         * @member {number} owner
         * @memberof proto.CombatEventRemoveBuffer
         * @instance
         */
        CombatEventRemoveBuffer.prototype.owner = 0;

        /**
         * CombatEventRemoveBuffer bufferId.
         * @member {number} bufferId
         * @memberof proto.CombatEventRemoveBuffer
         * @instance
         */
        CombatEventRemoveBuffer.prototype.bufferId = 0;

        /**
         * CombatEventRemoveBuffer layer.
         * @member {number} layer
         * @memberof proto.CombatEventRemoveBuffer
         * @instance
         */
        CombatEventRemoveBuffer.prototype.layer = 0;

        /**
         * Encodes the specified CombatEventRemoveBuffer message. Does not implicitly {@link proto.CombatEventRemoveBuffer.verify|verify} messages.
         * @function encode
         * @memberof proto.CombatEventRemoveBuffer
         * @static
         * @param {proto.ICombatEventRemoveBuffer} m CombatEventRemoveBuffer message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CombatEventRemoveBuffer.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.owner != null && Object.hasOwnProperty.call(m, "owner"))
                w.uint32(8).int32(m.owner);
            if (m.bufferId != null && Object.hasOwnProperty.call(m, "bufferId"))
                w.uint32(16).int32(m.bufferId);
            if (m.layer != null && Object.hasOwnProperty.call(m, "layer"))
                w.uint32(24).int32(m.layer);
            return w;
        };

        /**
         * Decodes a CombatEventRemoveBuffer message from the specified reader or buffer.
         * @function decode
         * @memberof proto.CombatEventRemoveBuffer
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.CombatEventRemoveBuffer} CombatEventRemoveBuffer
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CombatEventRemoveBuffer.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.CombatEventRemoveBuffer();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.owner = r.int32();
                    break;
                case 2:
                    m.bufferId = r.int32();
                    break;
                case 3:
                    m.layer = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return CombatEventRemoveBuffer;
    })();

    proto.CombatEventAttack = (function() {

        /**
         * Properties of a CombatEventAttack.
         * @memberof proto
         * @interface ICombatEventAttack
         * @property {number|null} [attacker] CombatEventAttack attacker
         * @property {number|null} [target] CombatEventAttack target
         * @property {number|null} [bulletId] CombatEventAttack bulletId
         * @property {boolean|null} [isCritical] CombatEventAttack isCritical
         * @property {boolean|null} [isFatalAtk] CombatEventAttack isFatalAtk
         * @property {number|Long|null} [damage] CombatEventAttack damage
         */

        /**
         * Constructs a new CombatEventAttack.
         * @memberof proto
         * @classdesc Represents a CombatEventAttack.
         * @implements ICombatEventAttack
         * @constructor
         * @param {proto.ICombatEventAttack=} [p] Properties to set
         */
        function CombatEventAttack(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * CombatEventAttack attacker.
         * @member {number} attacker
         * @memberof proto.CombatEventAttack
         * @instance
         */
        CombatEventAttack.prototype.attacker = 0;

        /**
         * CombatEventAttack target.
         * @member {number} target
         * @memberof proto.CombatEventAttack
         * @instance
         */
        CombatEventAttack.prototype.target = 0;

        /**
         * CombatEventAttack bulletId.
         * @member {number} bulletId
         * @memberof proto.CombatEventAttack
         * @instance
         */
        CombatEventAttack.prototype.bulletId = 0;

        /**
         * CombatEventAttack isCritical.
         * @member {boolean} isCritical
         * @memberof proto.CombatEventAttack
         * @instance
         */
        CombatEventAttack.prototype.isCritical = false;

        /**
         * CombatEventAttack isFatalAtk.
         * @member {boolean} isFatalAtk
         * @memberof proto.CombatEventAttack
         * @instance
         */
        CombatEventAttack.prototype.isFatalAtk = false;

        /**
         * CombatEventAttack damage.
         * @member {number|Long} damage
         * @memberof proto.CombatEventAttack
         * @instance
         */
        CombatEventAttack.prototype.damage = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

        /**
         * Encodes the specified CombatEventAttack message. Does not implicitly {@link proto.CombatEventAttack.verify|verify} messages.
         * @function encode
         * @memberof proto.CombatEventAttack
         * @static
         * @param {proto.ICombatEventAttack} m CombatEventAttack message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CombatEventAttack.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.attacker != null && Object.hasOwnProperty.call(m, "attacker"))
                w.uint32(8).int32(m.attacker);
            if (m.target != null && Object.hasOwnProperty.call(m, "target"))
                w.uint32(16).int32(m.target);
            if (m.bulletId != null && Object.hasOwnProperty.call(m, "bulletId"))
                w.uint32(24).int32(m.bulletId);
            if (m.isCritical != null && Object.hasOwnProperty.call(m, "isCritical"))
                w.uint32(32).bool(m.isCritical);
            if (m.isFatalAtk != null && Object.hasOwnProperty.call(m, "isFatalAtk"))
                w.uint32(40).bool(m.isFatalAtk);
            if (m.damage != null && Object.hasOwnProperty.call(m, "damage"))
                w.uint32(48).int64(m.damage);
            return w;
        };

        /**
         * Decodes a CombatEventAttack message from the specified reader or buffer.
         * @function decode
         * @memberof proto.CombatEventAttack
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.CombatEventAttack} CombatEventAttack
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CombatEventAttack.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.CombatEventAttack();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.attacker = r.int32();
                    break;
                case 2:
                    m.target = r.int32();
                    break;
                case 3:
                    m.bulletId = r.int32();
                    break;
                case 4:
                    m.isCritical = r.bool();
                    break;
                case 5:
                    m.isFatalAtk = r.bool();
                    break;
                case 6:
                    m.damage = r.int64();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return CombatEventAttack;
    })();

    proto.Msg_FinishStageReq = (function() {

        /**
         * Properties of a Msg_FinishStageReq.
         * @memberof proto
         * @interface IMsg_FinishStageReq
         * @property {proto.Msg_FinishStageReq.Result|null} [result] Msg_FinishStageReq result
         * @property {number|null} [aliveSeconds] Msg_FinishStageReq aliveSeconds
         * @property {number|Long|null} [score] Msg_FinishStageReq score
         * @property {number|Long|null} [killNum] Msg_FinishStageReq killNum
         * @property {number|null} [collectFeatherNum] Msg_FinishStageReq collectFeatherNum
         * @property {number|null} [killBossNum] Msg_FinishStageReq killBossNum
         * @property {Array.<proto.IStageBossFightData>|null} [bossFightData] Msg_FinishStageReq bossFightData
         * @property {proto.IMainStageCleardRecord|null} [record] Msg_FinishStageReq record
         */

        /**
         * Constructs a new Msg_FinishStageReq.
         * @memberof proto
         * @classdesc Represents a Msg_FinishStageReq.
         * @implements IMsg_FinishStageReq
         * @constructor
         * @param {proto.IMsg_FinishStageReq=} [p] Properties to set
         */
        function Msg_FinishStageReq(p) {
            this.bossFightData = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_FinishStageReq result.
         * @member {proto.Msg_FinishStageReq.Result} result
         * @memberof proto.Msg_FinishStageReq
         * @instance
         */
        Msg_FinishStageReq.prototype.result = 0;

        /**
         * Msg_FinishStageReq aliveSeconds.
         * @member {number} aliveSeconds
         * @memberof proto.Msg_FinishStageReq
         * @instance
         */
        Msg_FinishStageReq.prototype.aliveSeconds = 0;

        /**
         * Msg_FinishStageReq score.
         * @member {number|Long} score
         * @memberof proto.Msg_FinishStageReq
         * @instance
         */
        Msg_FinishStageReq.prototype.score = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

        /**
         * Msg_FinishStageReq killNum.
         * @member {number|Long} killNum
         * @memberof proto.Msg_FinishStageReq
         * @instance
         */
        Msg_FinishStageReq.prototype.killNum = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

        /**
         * Msg_FinishStageReq collectFeatherNum.
         * @member {number} collectFeatherNum
         * @memberof proto.Msg_FinishStageReq
         * @instance
         */
        Msg_FinishStageReq.prototype.collectFeatherNum = 0;

        /**
         * Msg_FinishStageReq killBossNum.
         * @member {number} killBossNum
         * @memberof proto.Msg_FinishStageReq
         * @instance
         */
        Msg_FinishStageReq.prototype.killBossNum = 0;

        /**
         * Msg_FinishStageReq bossFightData.
         * @member {Array.<proto.IStageBossFightData>} bossFightData
         * @memberof proto.Msg_FinishStageReq
         * @instance
         */
        Msg_FinishStageReq.prototype.bossFightData = $util.emptyArray;

        /**
         * Msg_FinishStageReq record.
         * @member {proto.IMainStageCleardRecord|null|undefined} record
         * @memberof proto.Msg_FinishStageReq
         * @instance
         */
        Msg_FinishStageReq.prototype.record = null;

        /**
         * Encodes the specified Msg_FinishStageReq message. Does not implicitly {@link proto.Msg_FinishStageReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_FinishStageReq
         * @static
         * @param {proto.IMsg_FinishStageReq} m Msg_FinishStageReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_FinishStageReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.result != null && Object.hasOwnProperty.call(m, "result"))
                w.uint32(8).int32(m.result);
            if (m.aliveSeconds != null && Object.hasOwnProperty.call(m, "aliveSeconds"))
                w.uint32(16).int32(m.aliveSeconds);
            if (m.score != null && Object.hasOwnProperty.call(m, "score"))
                w.uint32(24).int64(m.score);
            if (m.killNum != null && Object.hasOwnProperty.call(m, "killNum"))
                w.uint32(32).int64(m.killNum);
            if (m.collectFeatherNum != null && Object.hasOwnProperty.call(m, "collectFeatherNum"))
                w.uint32(40).int32(m.collectFeatherNum);
            if (m.killBossNum != null && Object.hasOwnProperty.call(m, "killBossNum"))
                w.uint32(48).int32(m.killBossNum);
            if (m.bossFightData != null && m.bossFightData.length) {
                for (var i = 0; i < m.bossFightData.length; ++i)
                    $root.proto.StageBossFightData.encode(m.bossFightData[i], w.uint32(58).fork()).ldelim();
            }
            if (m.record != null && Object.hasOwnProperty.call(m, "record"))
                $root.proto.MainStageCleardRecord.encode(m.record, w.uint32(66).fork()).ldelim();
            return w;
        };

        /**
         * Decodes a Msg_FinishStageReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_FinishStageReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_FinishStageReq} Msg_FinishStageReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_FinishStageReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_FinishStageReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.result = r.int32();
                    break;
                case 2:
                    m.aliveSeconds = r.int32();
                    break;
                case 3:
                    m.score = r.int64();
                    break;
                case 4:
                    m.killNum = r.int64();
                    break;
                case 5:
                    m.collectFeatherNum = r.int32();
                    break;
                case 6:
                    m.killBossNum = r.int32();
                    break;
                case 7:
                    if (!(m.bossFightData && m.bossFightData.length))
                        m.bossFightData = [];
                    m.bossFightData.push($root.proto.StageBossFightData.decode(r, r.uint32()));
                    break;
                case 8:
                    m.record = $root.proto.MainStageCleardRecord.decode(r, r.uint32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        /**
         * Result enum.
         * @name proto.Msg_FinishStageReq.Result
         * @enum {number}
         * @property {number} Quit=0 Quit value
         * @property {number} Win=1 Win value
         * @property {number} Lose=2 Lose value
         */
        Msg_FinishStageReq.Result = (function() {
            var valuesById = {}, values = Object.create(valuesById);
            values[valuesById[0] = "Quit"] = 0;
            values[valuesById[1] = "Win"] = 1;
            values[valuesById[2] = "Lose"] = 2;
            return values;
        })();

        return Msg_FinishStageReq;
    })();

    proto.Msg_FinishStageRsp = (function() {

        /**
         * Properties of a Msg_FinishStageRsp.
         * @memberof proto
         * @interface IMsg_FinishStageRsp
         * @property {proto.ICommonError|null} [error] Msg_FinishStageRsp error
         * @property {Array.<proto.IItem>|null} [rewards] Msg_FinishStageRsp rewards
         * @property {number|null} [stageId] Msg_FinishStageRsp stageId
         */

        /**
         * Constructs a new Msg_FinishStageRsp.
         * @memberof proto
         * @classdesc Represents a Msg_FinishStageRsp.
         * @implements IMsg_FinishStageRsp
         * @constructor
         * @param {proto.IMsg_FinishStageRsp=} [p] Properties to set
         */
        function Msg_FinishStageRsp(p) {
            this.rewards = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_FinishStageRsp error.
         * @member {proto.ICommonError|null|undefined} error
         * @memberof proto.Msg_FinishStageRsp
         * @instance
         */
        Msg_FinishStageRsp.prototype.error = null;

        /**
         * Msg_FinishStageRsp rewards.
         * @member {Array.<proto.IItem>} rewards
         * @memberof proto.Msg_FinishStageRsp
         * @instance
         */
        Msg_FinishStageRsp.prototype.rewards = $util.emptyArray;

        /**
         * Msg_FinishStageRsp stageId.
         * @member {number} stageId
         * @memberof proto.Msg_FinishStageRsp
         * @instance
         */
        Msg_FinishStageRsp.prototype.stageId = 0;

        /**
         * Encodes the specified Msg_FinishStageRsp message. Does not implicitly {@link proto.Msg_FinishStageRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_FinishStageRsp
         * @static
         * @param {proto.IMsg_FinishStageRsp} m Msg_FinishStageRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_FinishStageRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.error != null && Object.hasOwnProperty.call(m, "error"))
                $root.proto.CommonError.encode(m.error, w.uint32(10).fork()).ldelim();
            if (m.rewards != null && m.rewards.length) {
                for (var i = 0; i < m.rewards.length; ++i)
                    $root.proto.Item.encode(m.rewards[i], w.uint32(18).fork()).ldelim();
            }
            if (m.stageId != null && Object.hasOwnProperty.call(m, "stageId"))
                w.uint32(24).int32(m.stageId);
            return w;
        };

        /**
         * Decodes a Msg_FinishStageRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_FinishStageRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_FinishStageRsp} Msg_FinishStageRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_FinishStageRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_FinishStageRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.error = $root.proto.CommonError.decode(r, r.uint32());
                    break;
                case 2:
                    if (!(m.rewards && m.rewards.length))
                        m.rewards = [];
                    m.rewards.push($root.proto.Item.decode(r, r.uint32()));
                    break;
                case 3:
                    m.stageId = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_FinishStageRsp;
    })();

    proto.Msg_ReceiveMainStageDoubleRewardsReq = (function() {

        /**
         * Properties of a Msg_ReceiveMainStageDoubleRewardsReq.
         * @memberof proto
         * @interface IMsg_ReceiveMainStageDoubleRewardsReq
         */

        /**
         * Constructs a new Msg_ReceiveMainStageDoubleRewardsReq.
         * @memberof proto
         * @classdesc Represents a Msg_ReceiveMainStageDoubleRewardsReq.
         * @implements IMsg_ReceiveMainStageDoubleRewardsReq
         * @constructor
         * @param {proto.IMsg_ReceiveMainStageDoubleRewardsReq=} [p] Properties to set
         */
        function Msg_ReceiveMainStageDoubleRewardsReq(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Encodes the specified Msg_ReceiveMainStageDoubleRewardsReq message. Does not implicitly {@link proto.Msg_ReceiveMainStageDoubleRewardsReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_ReceiveMainStageDoubleRewardsReq
         * @static
         * @param {proto.IMsg_ReceiveMainStageDoubleRewardsReq} m Msg_ReceiveMainStageDoubleRewardsReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_ReceiveMainStageDoubleRewardsReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };

        /**
         * Decodes a Msg_ReceiveMainStageDoubleRewardsReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_ReceiveMainStageDoubleRewardsReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_ReceiveMainStageDoubleRewardsReq} Msg_ReceiveMainStageDoubleRewardsReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_ReceiveMainStageDoubleRewardsReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_ReceiveMainStageDoubleRewardsReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_ReceiveMainStageDoubleRewardsReq;
    })();

    proto.Msg_ReceiveMainStageDoubleRewardsRsp = (function() {

        /**
         * Properties of a Msg_ReceiveMainStageDoubleRewardsRsp.
         * @memberof proto
         * @interface IMsg_ReceiveMainStageDoubleRewardsRsp
         * @property {proto.ICommonError|null} [error] Msg_ReceiveMainStageDoubleRewardsRsp error
         * @property {Array.<proto.IItem>|null} [rewards] Msg_ReceiveMainStageDoubleRewardsRsp rewards
         */

        /**
         * Constructs a new Msg_ReceiveMainStageDoubleRewardsRsp.
         * @memberof proto
         * @classdesc Represents a Msg_ReceiveMainStageDoubleRewardsRsp.
         * @implements IMsg_ReceiveMainStageDoubleRewardsRsp
         * @constructor
         * @param {proto.IMsg_ReceiveMainStageDoubleRewardsRsp=} [p] Properties to set
         */
        function Msg_ReceiveMainStageDoubleRewardsRsp(p) {
            this.rewards = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_ReceiveMainStageDoubleRewardsRsp error.
         * @member {proto.ICommonError|null|undefined} error
         * @memberof proto.Msg_ReceiveMainStageDoubleRewardsRsp
         * @instance
         */
        Msg_ReceiveMainStageDoubleRewardsRsp.prototype.error = null;

        /**
         * Msg_ReceiveMainStageDoubleRewardsRsp rewards.
         * @member {Array.<proto.IItem>} rewards
         * @memberof proto.Msg_ReceiveMainStageDoubleRewardsRsp
         * @instance
         */
        Msg_ReceiveMainStageDoubleRewardsRsp.prototype.rewards = $util.emptyArray;

        /**
         * Encodes the specified Msg_ReceiveMainStageDoubleRewardsRsp message. Does not implicitly {@link proto.Msg_ReceiveMainStageDoubleRewardsRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_ReceiveMainStageDoubleRewardsRsp
         * @static
         * @param {proto.IMsg_ReceiveMainStageDoubleRewardsRsp} m Msg_ReceiveMainStageDoubleRewardsRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_ReceiveMainStageDoubleRewardsRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.error != null && Object.hasOwnProperty.call(m, "error"))
                $root.proto.CommonError.encode(m.error, w.uint32(10).fork()).ldelim();
            if (m.rewards != null && m.rewards.length) {
                for (var i = 0; i < m.rewards.length; ++i)
                    $root.proto.Item.encode(m.rewards[i], w.uint32(18).fork()).ldelim();
            }
            return w;
        };

        /**
         * Decodes a Msg_ReceiveMainStageDoubleRewardsRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_ReceiveMainStageDoubleRewardsRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_ReceiveMainStageDoubleRewardsRsp} Msg_ReceiveMainStageDoubleRewardsRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_ReceiveMainStageDoubleRewardsRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_ReceiveMainStageDoubleRewardsRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.error = $root.proto.CommonError.decode(r, r.uint32());
                    break;
                case 2:
                    if (!(m.rewards && m.rewards.length))
                        m.rewards = [];
                    m.rewards.push($root.proto.Item.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_ReceiveMainStageDoubleRewardsRsp;
    })();

    proto.Msg_ReceiveMainFirstRewardReq = (function() {

        /**
         * Properties of a Msg_ReceiveMainFirstRewardReq.
         * @memberof proto
         * @interface IMsg_ReceiveMainFirstRewardReq
         * @property {number|null} [stageId] Msg_ReceiveMainFirstRewardReq stageId
         * @property {Array.<number>|null} [indexes] Msg_ReceiveMainFirstRewardReq indexes
         */

        /**
         * Constructs a new Msg_ReceiveMainFirstRewardReq.
         * @memberof proto
         * @classdesc Represents a Msg_ReceiveMainFirstRewardReq.
         * @implements IMsg_ReceiveMainFirstRewardReq
         * @constructor
         * @param {proto.IMsg_ReceiveMainFirstRewardReq=} [p] Properties to set
         */
        function Msg_ReceiveMainFirstRewardReq(p) {
            this.indexes = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_ReceiveMainFirstRewardReq stageId.
         * @member {number} stageId
         * @memberof proto.Msg_ReceiveMainFirstRewardReq
         * @instance
         */
        Msg_ReceiveMainFirstRewardReq.prototype.stageId = 0;

        /**
         * Msg_ReceiveMainFirstRewardReq indexes.
         * @member {Array.<number>} indexes
         * @memberof proto.Msg_ReceiveMainFirstRewardReq
         * @instance
         */
        Msg_ReceiveMainFirstRewardReq.prototype.indexes = $util.emptyArray;

        /**
         * Encodes the specified Msg_ReceiveMainFirstRewardReq message. Does not implicitly {@link proto.Msg_ReceiveMainFirstRewardReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_ReceiveMainFirstRewardReq
         * @static
         * @param {proto.IMsg_ReceiveMainFirstRewardReq} m Msg_ReceiveMainFirstRewardReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_ReceiveMainFirstRewardReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.stageId != null && Object.hasOwnProperty.call(m, "stageId"))
                w.uint32(8).int32(m.stageId);
            if (m.indexes != null && m.indexes.length) {
                w.uint32(18).fork();
                for (var i = 0; i < m.indexes.length; ++i)
                    w.int32(m.indexes[i]);
                w.ldelim();
            }
            return w;
        };

        /**
         * Decodes a Msg_ReceiveMainFirstRewardReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_ReceiveMainFirstRewardReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_ReceiveMainFirstRewardReq} Msg_ReceiveMainFirstRewardReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_ReceiveMainFirstRewardReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_ReceiveMainFirstRewardReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.stageId = r.int32();
                    break;
                case 2:
                    if (!(m.indexes && m.indexes.length))
                        m.indexes = [];
                    if ((t & 7) === 2) {
                        var c2 = r.uint32() + r.pos;
                        while (r.pos < c2)
                            m.indexes.push(r.int32());
                    } else
                        m.indexes.push(r.int32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_ReceiveMainFirstRewardReq;
    })();

    proto.Msg_ReceiveMainFirstRewardRsp = (function() {

        /**
         * Properties of a Msg_ReceiveMainFirstRewardRsp.
         * @memberof proto
         * @interface IMsg_ReceiveMainFirstRewardRsp
         * @property {proto.ICommonError|null} [error] Msg_ReceiveMainFirstRewardRsp error
         * @property {number|null} [stageId] Msg_ReceiveMainFirstRewardRsp stageId
         * @property {Array.<number>|null} [indexes] Msg_ReceiveMainFirstRewardRsp indexes
         * @property {Array.<proto.IItem>|null} [rewards] Msg_ReceiveMainFirstRewardRsp rewards
         */

        /**
         * Constructs a new Msg_ReceiveMainFirstRewardRsp.
         * @memberof proto
         * @classdesc Represents a Msg_ReceiveMainFirstRewardRsp.
         * @implements IMsg_ReceiveMainFirstRewardRsp
         * @constructor
         * @param {proto.IMsg_ReceiveMainFirstRewardRsp=} [p] Properties to set
         */
        function Msg_ReceiveMainFirstRewardRsp(p) {
            this.indexes = [];
            this.rewards = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_ReceiveMainFirstRewardRsp error.
         * @member {proto.ICommonError|null|undefined} error
         * @memberof proto.Msg_ReceiveMainFirstRewardRsp
         * @instance
         */
        Msg_ReceiveMainFirstRewardRsp.prototype.error = null;

        /**
         * Msg_ReceiveMainFirstRewardRsp stageId.
         * @member {number} stageId
         * @memberof proto.Msg_ReceiveMainFirstRewardRsp
         * @instance
         */
        Msg_ReceiveMainFirstRewardRsp.prototype.stageId = 0;

        /**
         * Msg_ReceiveMainFirstRewardRsp indexes.
         * @member {Array.<number>} indexes
         * @memberof proto.Msg_ReceiveMainFirstRewardRsp
         * @instance
         */
        Msg_ReceiveMainFirstRewardRsp.prototype.indexes = $util.emptyArray;

        /**
         * Msg_ReceiveMainFirstRewardRsp rewards.
         * @member {Array.<proto.IItem>} rewards
         * @memberof proto.Msg_ReceiveMainFirstRewardRsp
         * @instance
         */
        Msg_ReceiveMainFirstRewardRsp.prototype.rewards = $util.emptyArray;

        /**
         * Encodes the specified Msg_ReceiveMainFirstRewardRsp message. Does not implicitly {@link proto.Msg_ReceiveMainFirstRewardRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_ReceiveMainFirstRewardRsp
         * @static
         * @param {proto.IMsg_ReceiveMainFirstRewardRsp} m Msg_ReceiveMainFirstRewardRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_ReceiveMainFirstRewardRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.error != null && Object.hasOwnProperty.call(m, "error"))
                $root.proto.CommonError.encode(m.error, w.uint32(10).fork()).ldelim();
            if (m.stageId != null && Object.hasOwnProperty.call(m, "stageId"))
                w.uint32(16).int32(m.stageId);
            if (m.indexes != null && m.indexes.length) {
                w.uint32(26).fork();
                for (var i = 0; i < m.indexes.length; ++i)
                    w.int32(m.indexes[i]);
                w.ldelim();
            }
            if (m.rewards != null && m.rewards.length) {
                for (var i = 0; i < m.rewards.length; ++i)
                    $root.proto.Item.encode(m.rewards[i], w.uint32(34).fork()).ldelim();
            }
            return w;
        };

        /**
         * Decodes a Msg_ReceiveMainFirstRewardRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_ReceiveMainFirstRewardRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_ReceiveMainFirstRewardRsp} Msg_ReceiveMainFirstRewardRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_ReceiveMainFirstRewardRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_ReceiveMainFirstRewardRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.error = $root.proto.CommonError.decode(r, r.uint32());
                    break;
                case 2:
                    m.stageId = r.int32();
                    break;
                case 3:
                    if (!(m.indexes && m.indexes.length))
                        m.indexes = [];
                    if ((t & 7) === 2) {
                        var c2 = r.uint32() + r.pos;
                        while (r.pos < c2)
                            m.indexes.push(r.int32());
                    } else
                        m.indexes.push(r.int32());
                    break;
                case 4:
                    if (!(m.rewards && m.rewards.length))
                        m.rewards = [];
                    m.rewards.push($root.proto.Item.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_ReceiveMainFirstRewardRsp;
    })();

    proto.Msg_GachaReq = (function() {

        /**
         * Properties of a Msg_GachaReq.
         * @memberof proto
         * @interface IMsg_GachaReq
         * @property {number|null} [id] Msg_GachaReq id
         * @property {boolean|null} [fromAdv] Msg_GachaReq fromAdv
         */

        /**
         * Constructs a new Msg_GachaReq.
         * @memberof proto
         * @classdesc Represents a Msg_GachaReq.
         * @implements IMsg_GachaReq
         * @constructor
         * @param {proto.IMsg_GachaReq=} [p] Properties to set
         */
        function Msg_GachaReq(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_GachaReq id.
         * @member {number} id
         * @memberof proto.Msg_GachaReq
         * @instance
         */
        Msg_GachaReq.prototype.id = 0;

        /**
         * Msg_GachaReq fromAdv.
         * @member {boolean} fromAdv
         * @memberof proto.Msg_GachaReq
         * @instance
         */
        Msg_GachaReq.prototype.fromAdv = false;

        /**
         * Encodes the specified Msg_GachaReq message. Does not implicitly {@link proto.Msg_GachaReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_GachaReq
         * @static
         * @param {proto.IMsg_GachaReq} m Msg_GachaReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_GachaReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.id != null && Object.hasOwnProperty.call(m, "id"))
                w.uint32(8).int32(m.id);
            if (m.fromAdv != null && Object.hasOwnProperty.call(m, "fromAdv"))
                w.uint32(16).bool(m.fromAdv);
            return w;
        };

        /**
         * Decodes a Msg_GachaReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_GachaReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_GachaReq} Msg_GachaReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_GachaReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_GachaReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.id = r.int32();
                    break;
                case 2:
                    m.fromAdv = r.bool();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_GachaReq;
    })();

    proto.Msg_GachaRsp = (function() {

        /**
         * Properties of a Msg_GachaRsp.
         * @memberof proto
         * @interface IMsg_GachaRsp
         * @property {proto.ICommonError|null} [error] Msg_GachaRsp error
         * @property {number|null} [id] Msg_GachaRsp id
         * @property {Array.<proto.IItem>|null} [rewards] Msg_GachaRsp rewards
         */

        /**
         * Constructs a new Msg_GachaRsp.
         * @memberof proto
         * @classdesc Represents a Msg_GachaRsp.
         * @implements IMsg_GachaRsp
         * @constructor
         * @param {proto.IMsg_GachaRsp=} [p] Properties to set
         */
        function Msg_GachaRsp(p) {
            this.rewards = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_GachaRsp error.
         * @member {proto.ICommonError|null|undefined} error
         * @memberof proto.Msg_GachaRsp
         * @instance
         */
        Msg_GachaRsp.prototype.error = null;

        /**
         * Msg_GachaRsp id.
         * @member {number} id
         * @memberof proto.Msg_GachaRsp
         * @instance
         */
        Msg_GachaRsp.prototype.id = 0;

        /**
         * Msg_GachaRsp rewards.
         * @member {Array.<proto.IItem>} rewards
         * @memberof proto.Msg_GachaRsp
         * @instance
         */
        Msg_GachaRsp.prototype.rewards = $util.emptyArray;

        /**
         * Encodes the specified Msg_GachaRsp message. Does not implicitly {@link proto.Msg_GachaRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_GachaRsp
         * @static
         * @param {proto.IMsg_GachaRsp} m Msg_GachaRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_GachaRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.error != null && Object.hasOwnProperty.call(m, "error"))
                $root.proto.CommonError.encode(m.error, w.uint32(10).fork()).ldelim();
            if (m.id != null && Object.hasOwnProperty.call(m, "id"))
                w.uint32(16).int32(m.id);
            if (m.rewards != null && m.rewards.length) {
                for (var i = 0; i < m.rewards.length; ++i)
                    $root.proto.Item.encode(m.rewards[i], w.uint32(26).fork()).ldelim();
            }
            return w;
        };

        /**
         * Decodes a Msg_GachaRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_GachaRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_GachaRsp} Msg_GachaRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_GachaRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_GachaRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.error = $root.proto.CommonError.decode(r, r.uint32());
                    break;
                case 2:
                    m.id = r.int32();
                    break;
                case 3:
                    if (!(m.rewards && m.rewards.length))
                        m.rewards = [];
                    m.rewards.push($root.proto.Item.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_GachaRsp;
    })();

    proto.UseItemExtra = (function() {

        /**
         * Properties of a UseItemExtra.
         * @memberof proto
         * @interface IUseItemExtra
         * @property {Array.<number>|null} [choiceIndexes] UseItemExtra choiceIndexes
         */

        /**
         * Constructs a new UseItemExtra.
         * @memberof proto
         * @classdesc Represents a UseItemExtra.
         * @implements IUseItemExtra
         * @constructor
         * @param {proto.IUseItemExtra=} [p] Properties to set
         */
        function UseItemExtra(p) {
            this.choiceIndexes = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * UseItemExtra choiceIndexes.
         * @member {Array.<number>} choiceIndexes
         * @memberof proto.UseItemExtra
         * @instance
         */
        UseItemExtra.prototype.choiceIndexes = $util.emptyArray;

        /**
         * Encodes the specified UseItemExtra message. Does not implicitly {@link proto.UseItemExtra.verify|verify} messages.
         * @function encode
         * @memberof proto.UseItemExtra
         * @static
         * @param {proto.IUseItemExtra} m UseItemExtra message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        UseItemExtra.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.choiceIndexes != null && m.choiceIndexes.length) {
                w.uint32(10).fork();
                for (var i = 0; i < m.choiceIndexes.length; ++i)
                    w.int32(m.choiceIndexes[i]);
                w.ldelim();
            }
            return w;
        };

        /**
         * Decodes a UseItemExtra message from the specified reader or buffer.
         * @function decode
         * @memberof proto.UseItemExtra
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.UseItemExtra} UseItemExtra
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        UseItemExtra.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.UseItemExtra();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.choiceIndexes && m.choiceIndexes.length))
                        m.choiceIndexes = [];
                    if ((t & 7) === 2) {
                        var c2 = r.uint32() + r.pos;
                        while (r.pos < c2)
                            m.choiceIndexes.push(r.int32());
                    } else
                        m.choiceIndexes.push(r.int32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return UseItemExtra;
    })();

    proto.Msg_UseItemReq = (function() {

        /**
         * Properties of a Msg_UseItemReq.
         * @memberof proto
         * @interface IMsg_UseItemReq
         * @property {number|null} [timestamp] Msg_UseItemReq timestamp
         * @property {number|null} [itemId] Msg_UseItemReq itemId
         * @property {number|Long|null} [itemCount] Msg_UseItemReq itemCount
         * @property {proto.IUseItemExtra|null} [extra] Msg_UseItemReq extra
         */

        /**
         * Constructs a new Msg_UseItemReq.
         * @memberof proto
         * @classdesc Represents a Msg_UseItemReq.
         * @implements IMsg_UseItemReq
         * @constructor
         * @param {proto.IMsg_UseItemReq=} [p] Properties to set
         */
        function Msg_UseItemReq(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_UseItemReq timestamp.
         * @member {number} timestamp
         * @memberof proto.Msg_UseItemReq
         * @instance
         */
        Msg_UseItemReq.prototype.timestamp = 0;

        /**
         * Msg_UseItemReq itemId.
         * @member {number} itemId
         * @memberof proto.Msg_UseItemReq
         * @instance
         */
        Msg_UseItemReq.prototype.itemId = 0;

        /**
         * Msg_UseItemReq itemCount.
         * @member {number|Long} itemCount
         * @memberof proto.Msg_UseItemReq
         * @instance
         */
        Msg_UseItemReq.prototype.itemCount = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

        /**
         * Msg_UseItemReq extra.
         * @member {proto.IUseItemExtra|null|undefined} extra
         * @memberof proto.Msg_UseItemReq
         * @instance
         */
        Msg_UseItemReq.prototype.extra = null;

        /**
         * Encodes the specified Msg_UseItemReq message. Does not implicitly {@link proto.Msg_UseItemReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_UseItemReq
         * @static
         * @param {proto.IMsg_UseItemReq} m Msg_UseItemReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_UseItemReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.timestamp != null && Object.hasOwnProperty.call(m, "timestamp"))
                w.uint32(8).int32(m.timestamp);
            if (m.itemId != null && Object.hasOwnProperty.call(m, "itemId"))
                w.uint32(16).int32(m.itemId);
            if (m.itemCount != null && Object.hasOwnProperty.call(m, "itemCount"))
                w.uint32(24).int64(m.itemCount);
            if (m.extra != null && Object.hasOwnProperty.call(m, "extra"))
                $root.proto.UseItemExtra.encode(m.extra, w.uint32(34).fork()).ldelim();
            return w;
        };

        /**
         * Decodes a Msg_UseItemReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_UseItemReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_UseItemReq} Msg_UseItemReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_UseItemReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_UseItemReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.timestamp = r.int32();
                    break;
                case 2:
                    m.itemId = r.int32();
                    break;
                case 3:
                    m.itemCount = r.int64();
                    break;
                case 4:
                    m.extra = $root.proto.UseItemExtra.decode(r, r.uint32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_UseItemReq;
    })();

    proto.Msg_UseItemRsp = (function() {

        /**
         * Properties of a Msg_UseItemRsp.
         * @memberof proto
         * @interface IMsg_UseItemRsp
         * @property {number|null} [timestamp] Msg_UseItemRsp timestamp
         * @property {proto.ICommonError|null} [error] Msg_UseItemRsp error
         * @property {Array.<proto.IItem>|null} [rewards] Msg_UseItemRsp rewards
         */

        /**
         * Constructs a new Msg_UseItemRsp.
         * @memberof proto
         * @classdesc Represents a Msg_UseItemRsp.
         * @implements IMsg_UseItemRsp
         * @constructor
         * @param {proto.IMsg_UseItemRsp=} [p] Properties to set
         */
        function Msg_UseItemRsp(p) {
            this.rewards = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_UseItemRsp timestamp.
         * @member {number} timestamp
         * @memberof proto.Msg_UseItemRsp
         * @instance
         */
        Msg_UseItemRsp.prototype.timestamp = 0;

        /**
         * Msg_UseItemRsp error.
         * @member {proto.ICommonError|null|undefined} error
         * @memberof proto.Msg_UseItemRsp
         * @instance
         */
        Msg_UseItemRsp.prototype.error = null;

        /**
         * Msg_UseItemRsp rewards.
         * @member {Array.<proto.IItem>} rewards
         * @memberof proto.Msg_UseItemRsp
         * @instance
         */
        Msg_UseItemRsp.prototype.rewards = $util.emptyArray;

        /**
         * Encodes the specified Msg_UseItemRsp message. Does not implicitly {@link proto.Msg_UseItemRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_UseItemRsp
         * @static
         * @param {proto.IMsg_UseItemRsp} m Msg_UseItemRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_UseItemRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.timestamp != null && Object.hasOwnProperty.call(m, "timestamp"))
                w.uint32(8).int32(m.timestamp);
            if (m.error != null && Object.hasOwnProperty.call(m, "error"))
                $root.proto.CommonError.encode(m.error, w.uint32(18).fork()).ldelim();
            if (m.rewards != null && m.rewards.length) {
                for (var i = 0; i < m.rewards.length; ++i)
                    $root.proto.Item.encode(m.rewards[i], w.uint32(26).fork()).ldelim();
            }
            return w;
        };

        /**
         * Decodes a Msg_UseItemRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_UseItemRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_UseItemRsp} Msg_UseItemRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_UseItemRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_UseItemRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.timestamp = r.int32();
                    break;
                case 2:
                    m.error = $root.proto.CommonError.decode(r, r.uint32());
                    break;
                case 3:
                    if (!(m.rewards && m.rewards.length))
                        m.rewards = [];
                    m.rewards.push($root.proto.Item.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_UseItemRsp;
    })();

    proto.OpenFunction = (function() {

        /**
         * Properties of an OpenFunction.
         * @memberof proto
         * @interface IOpenFunction
         * @property {number|null} [name] OpenFunction name
         * @property {boolean|null} [isOpen] OpenFunction isOpen
         * @property {boolean|null} [isReceivedRewards] OpenFunction isReceivedRewards
         */

        /**
         * Constructs a new OpenFunction.
         * @memberof proto
         * @classdesc Represents an OpenFunction.
         * @implements IOpenFunction
         * @constructor
         * @param {proto.IOpenFunction=} [p] Properties to set
         */
        function OpenFunction(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * OpenFunction name.
         * @member {number} name
         * @memberof proto.OpenFunction
         * @instance
         */
        OpenFunction.prototype.name = 0;

        /**
         * OpenFunction isOpen.
         * @member {boolean} isOpen
         * @memberof proto.OpenFunction
         * @instance
         */
        OpenFunction.prototype.isOpen = false;

        /**
         * OpenFunction isReceivedRewards.
         * @member {boolean} isReceivedRewards
         * @memberof proto.OpenFunction
         * @instance
         */
        OpenFunction.prototype.isReceivedRewards = false;

        /**
         * Encodes the specified OpenFunction message. Does not implicitly {@link proto.OpenFunction.verify|verify} messages.
         * @function encode
         * @memberof proto.OpenFunction
         * @static
         * @param {proto.IOpenFunction} m OpenFunction message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        OpenFunction.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.name != null && Object.hasOwnProperty.call(m, "name"))
                w.uint32(8).int32(m.name);
            if (m.isOpen != null && Object.hasOwnProperty.call(m, "isOpen"))
                w.uint32(16).bool(m.isOpen);
            if (m.isReceivedRewards != null && Object.hasOwnProperty.call(m, "isReceivedRewards"))
                w.uint32(24).bool(m.isReceivedRewards);
            return w;
        };

        /**
         * Decodes an OpenFunction message from the specified reader or buffer.
         * @function decode
         * @memberof proto.OpenFunction
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.OpenFunction} OpenFunction
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        OpenFunction.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.OpenFunction();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.name = r.int32();
                    break;
                case 2:
                    m.isOpen = r.bool();
                    break;
                case 3:
                    m.isReceivedRewards = r.bool();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return OpenFunction;
    })();

    proto.Msg_GetOpenFunctionsReq = (function() {

        /**
         * Properties of a Msg_GetOpenFunctionsReq.
         * @memberof proto
         * @interface IMsg_GetOpenFunctionsReq
         */

        /**
         * Constructs a new Msg_GetOpenFunctionsReq.
         * @memberof proto
         * @classdesc Represents a Msg_GetOpenFunctionsReq.
         * @implements IMsg_GetOpenFunctionsReq
         * @constructor
         * @param {proto.IMsg_GetOpenFunctionsReq=} [p] Properties to set
         */
        function Msg_GetOpenFunctionsReq(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Encodes the specified Msg_GetOpenFunctionsReq message. Does not implicitly {@link proto.Msg_GetOpenFunctionsReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_GetOpenFunctionsReq
         * @static
         * @param {proto.IMsg_GetOpenFunctionsReq} m Msg_GetOpenFunctionsReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_GetOpenFunctionsReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };

        /**
         * Decodes a Msg_GetOpenFunctionsReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_GetOpenFunctionsReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_GetOpenFunctionsReq} Msg_GetOpenFunctionsReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_GetOpenFunctionsReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_GetOpenFunctionsReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_GetOpenFunctionsReq;
    })();

    proto.Msg_GetOpenFunctionsRsp = (function() {

        /**
         * Properties of a Msg_GetOpenFunctionsRsp.
         * @memberof proto
         * @interface IMsg_GetOpenFunctionsRsp
         * @property {Array.<proto.IOpenFunction>|null} [openFunctions] Msg_GetOpenFunctionsRsp openFunctions
         */

        /**
         * Constructs a new Msg_GetOpenFunctionsRsp.
         * @memberof proto
         * @classdesc Represents a Msg_GetOpenFunctionsRsp.
         * @implements IMsg_GetOpenFunctionsRsp
         * @constructor
         * @param {proto.IMsg_GetOpenFunctionsRsp=} [p] Properties to set
         */
        function Msg_GetOpenFunctionsRsp(p) {
            this.openFunctions = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_GetOpenFunctionsRsp openFunctions.
         * @member {Array.<proto.IOpenFunction>} openFunctions
         * @memberof proto.Msg_GetOpenFunctionsRsp
         * @instance
         */
        Msg_GetOpenFunctionsRsp.prototype.openFunctions = $util.emptyArray;

        /**
         * Encodes the specified Msg_GetOpenFunctionsRsp message. Does not implicitly {@link proto.Msg_GetOpenFunctionsRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_GetOpenFunctionsRsp
         * @static
         * @param {proto.IMsg_GetOpenFunctionsRsp} m Msg_GetOpenFunctionsRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_GetOpenFunctionsRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.openFunctions != null && m.openFunctions.length) {
                for (var i = 0; i < m.openFunctions.length; ++i)
                    $root.proto.OpenFunction.encode(m.openFunctions[i], w.uint32(10).fork()).ldelim();
            }
            return w;
        };

        /**
         * Decodes a Msg_GetOpenFunctionsRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_GetOpenFunctionsRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_GetOpenFunctionsRsp} Msg_GetOpenFunctionsRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_GetOpenFunctionsRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_GetOpenFunctionsRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.openFunctions && m.openFunctions.length))
                        m.openFunctions = [];
                    m.openFunctions.push($root.proto.OpenFunction.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_GetOpenFunctionsRsp;
    })();

    proto.Msg_OpenFunctionChangePush = (function() {

        /**
         * Properties of a Msg_OpenFunctionChangePush.
         * @memberof proto
         * @interface IMsg_OpenFunctionChangePush
         * @property {Array.<proto.IOpenFunction>|null} [openFunctions] Msg_OpenFunctionChangePush openFunctions
         */

        /**
         * Constructs a new Msg_OpenFunctionChangePush.
         * @memberof proto
         * @classdesc Represents a Msg_OpenFunctionChangePush.
         * @implements IMsg_OpenFunctionChangePush
         * @constructor
         * @param {proto.IMsg_OpenFunctionChangePush=} [p] Properties to set
         */
        function Msg_OpenFunctionChangePush(p) {
            this.openFunctions = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_OpenFunctionChangePush openFunctions.
         * @member {Array.<proto.IOpenFunction>} openFunctions
         * @memberof proto.Msg_OpenFunctionChangePush
         * @instance
         */
        Msg_OpenFunctionChangePush.prototype.openFunctions = $util.emptyArray;

        /**
         * Encodes the specified Msg_OpenFunctionChangePush message. Does not implicitly {@link proto.Msg_OpenFunctionChangePush.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_OpenFunctionChangePush
         * @static
         * @param {proto.IMsg_OpenFunctionChangePush} m Msg_OpenFunctionChangePush message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_OpenFunctionChangePush.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.openFunctions != null && m.openFunctions.length) {
                for (var i = 0; i < m.openFunctions.length; ++i)
                    $root.proto.OpenFunction.encode(m.openFunctions[i], w.uint32(10).fork()).ldelim();
            }
            return w;
        };

        /**
         * Decodes a Msg_OpenFunctionChangePush message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_OpenFunctionChangePush
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_OpenFunctionChangePush} Msg_OpenFunctionChangePush
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_OpenFunctionChangePush.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_OpenFunctionChangePush();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.openFunctions && m.openFunctions.length))
                        m.openFunctions = [];
                    m.openFunctions.push($root.proto.OpenFunction.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_OpenFunctionChangePush;
    })();

    proto.Msg_ReceiveOpenFunctionRewardReq = (function() {

        /**
         * Properties of a Msg_ReceiveOpenFunctionRewardReq.
         * @memberof proto
         * @interface IMsg_ReceiveOpenFunctionRewardReq
         * @property {number|null} [name] Msg_ReceiveOpenFunctionRewardReq name
         */

        /**
         * Constructs a new Msg_ReceiveOpenFunctionRewardReq.
         * @memberof proto
         * @classdesc Represents a Msg_ReceiveOpenFunctionRewardReq.
         * @implements IMsg_ReceiveOpenFunctionRewardReq
         * @constructor
         * @param {proto.IMsg_ReceiveOpenFunctionRewardReq=} [p] Properties to set
         */
        function Msg_ReceiveOpenFunctionRewardReq(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_ReceiveOpenFunctionRewardReq name.
         * @member {number} name
         * @memberof proto.Msg_ReceiveOpenFunctionRewardReq
         * @instance
         */
        Msg_ReceiveOpenFunctionRewardReq.prototype.name = 0;

        /**
         * Encodes the specified Msg_ReceiveOpenFunctionRewardReq message. Does not implicitly {@link proto.Msg_ReceiveOpenFunctionRewardReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_ReceiveOpenFunctionRewardReq
         * @static
         * @param {proto.IMsg_ReceiveOpenFunctionRewardReq} m Msg_ReceiveOpenFunctionRewardReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_ReceiveOpenFunctionRewardReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.name != null && Object.hasOwnProperty.call(m, "name"))
                w.uint32(8).int32(m.name);
            return w;
        };

        /**
         * Decodes a Msg_ReceiveOpenFunctionRewardReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_ReceiveOpenFunctionRewardReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_ReceiveOpenFunctionRewardReq} Msg_ReceiveOpenFunctionRewardReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_ReceiveOpenFunctionRewardReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_ReceiveOpenFunctionRewardReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.name = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_ReceiveOpenFunctionRewardReq;
    })();

    proto.Msg_ReceiveOpenFunctionRewardRsp = (function() {

        /**
         * Properties of a Msg_ReceiveOpenFunctionRewardRsp.
         * @memberof proto
         * @interface IMsg_ReceiveOpenFunctionRewardRsp
         * @property {proto.ICommonError|null} [error] Msg_ReceiveOpenFunctionRewardRsp error
         * @property {number|null} [name] Msg_ReceiveOpenFunctionRewardRsp name
         * @property {Array.<proto.IItem>|null} [rewards] Msg_ReceiveOpenFunctionRewardRsp rewards
         */

        /**
         * Constructs a new Msg_ReceiveOpenFunctionRewardRsp.
         * @memberof proto
         * @classdesc Represents a Msg_ReceiveOpenFunctionRewardRsp.
         * @implements IMsg_ReceiveOpenFunctionRewardRsp
         * @constructor
         * @param {proto.IMsg_ReceiveOpenFunctionRewardRsp=} [p] Properties to set
         */
        function Msg_ReceiveOpenFunctionRewardRsp(p) {
            this.rewards = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_ReceiveOpenFunctionRewardRsp error.
         * @member {proto.ICommonError|null|undefined} error
         * @memberof proto.Msg_ReceiveOpenFunctionRewardRsp
         * @instance
         */
        Msg_ReceiveOpenFunctionRewardRsp.prototype.error = null;

        /**
         * Msg_ReceiveOpenFunctionRewardRsp name.
         * @member {number} name
         * @memberof proto.Msg_ReceiveOpenFunctionRewardRsp
         * @instance
         */
        Msg_ReceiveOpenFunctionRewardRsp.prototype.name = 0;

        /**
         * Msg_ReceiveOpenFunctionRewardRsp rewards.
         * @member {Array.<proto.IItem>} rewards
         * @memberof proto.Msg_ReceiveOpenFunctionRewardRsp
         * @instance
         */
        Msg_ReceiveOpenFunctionRewardRsp.prototype.rewards = $util.emptyArray;

        /**
         * Encodes the specified Msg_ReceiveOpenFunctionRewardRsp message. Does not implicitly {@link proto.Msg_ReceiveOpenFunctionRewardRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_ReceiveOpenFunctionRewardRsp
         * @static
         * @param {proto.IMsg_ReceiveOpenFunctionRewardRsp} m Msg_ReceiveOpenFunctionRewardRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_ReceiveOpenFunctionRewardRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.error != null && Object.hasOwnProperty.call(m, "error"))
                $root.proto.CommonError.encode(m.error, w.uint32(10).fork()).ldelim();
            if (m.name != null && Object.hasOwnProperty.call(m, "name"))
                w.uint32(16).int32(m.name);
            if (m.rewards != null && m.rewards.length) {
                for (var i = 0; i < m.rewards.length; ++i)
                    $root.proto.Item.encode(m.rewards[i], w.uint32(26).fork()).ldelim();
            }
            return w;
        };

        /**
         * Decodes a Msg_ReceiveOpenFunctionRewardRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_ReceiveOpenFunctionRewardRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_ReceiveOpenFunctionRewardRsp} Msg_ReceiveOpenFunctionRewardRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_ReceiveOpenFunctionRewardRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_ReceiveOpenFunctionRewardRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.error = $root.proto.CommonError.decode(r, r.uint32());
                    break;
                case 2:
                    m.name = r.int32();
                    break;
                case 3:
                    if (!(m.rewards && m.rewards.length))
                        m.rewards = [];
                    m.rewards.push($root.proto.Item.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_ReceiveOpenFunctionRewardRsp;
    })();

    proto.ElixirData = (function() {

        /**
         * Properties of an ElixirData.
         * @memberof proto
         * @interface IElixirData
         * @property {number|null} [id] ElixirData id
         * @property {number|null} [count] ElixirData count
         */

        /**
         * Constructs a new ElixirData.
         * @memberof proto
         * @classdesc Represents an ElixirData.
         * @implements IElixirData
         * @constructor
         * @param {proto.IElixirData=} [p] Properties to set
         */
        function ElixirData(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * ElixirData id.
         * @member {number} id
         * @memberof proto.ElixirData
         * @instance
         */
        ElixirData.prototype.id = 0;

        /**
         * ElixirData count.
         * @member {number} count
         * @memberof proto.ElixirData
         * @instance
         */
        ElixirData.prototype.count = 0;

        /**
         * Encodes the specified ElixirData message. Does not implicitly {@link proto.ElixirData.verify|verify} messages.
         * @function encode
         * @memberof proto.ElixirData
         * @static
         * @param {proto.IElixirData} m ElixirData message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        ElixirData.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.id != null && Object.hasOwnProperty.call(m, "id"))
                w.uint32(8).int32(m.id);
            if (m.count != null && Object.hasOwnProperty.call(m, "count"))
                w.uint32(16).int32(m.count);
            return w;
        };

        /**
         * Decodes an ElixirData message from the specified reader or buffer.
         * @function decode
         * @memberof proto.ElixirData
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.ElixirData} ElixirData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        ElixirData.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.ElixirData();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.id = r.int32();
                    break;
                case 2:
                    m.count = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return ElixirData;
    })();

    proto.ElixirPbData = (function() {

        /**
         * Properties of an ElixirPbData.
         * @memberof proto
         * @interface IElixirPbData
         * @property {Array.<proto.IElixirData>|null} [data] ElixirPbData data
         */

        /**
         * Constructs a new ElixirPbData.
         * @memberof proto
         * @classdesc Represents an ElixirPbData.
         * @implements IElixirPbData
         * @constructor
         * @param {proto.IElixirPbData=} [p] Properties to set
         */
        function ElixirPbData(p) {
            this.data = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * ElixirPbData data.
         * @member {Array.<proto.IElixirData>} data
         * @memberof proto.ElixirPbData
         * @instance
         */
        ElixirPbData.prototype.data = $util.emptyArray;

        /**
         * Encodes the specified ElixirPbData message. Does not implicitly {@link proto.ElixirPbData.verify|verify} messages.
         * @function encode
         * @memberof proto.ElixirPbData
         * @static
         * @param {proto.IElixirPbData} m ElixirPbData message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        ElixirPbData.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.data != null && m.data.length) {
                for (var i = 0; i < m.data.length; ++i)
                    $root.proto.ElixirData.encode(m.data[i], w.uint32(10).fork()).ldelim();
            }
            return w;
        };

        /**
         * Decodes an ElixirPbData message from the specified reader or buffer.
         * @function decode
         * @memberof proto.ElixirPbData
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.ElixirPbData} ElixirPbData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        ElixirPbData.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.ElixirPbData();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.data && m.data.length))
                        m.data = [];
                    m.data.push($root.proto.ElixirData.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return ElixirPbData;
    })();

    proto.ElixirItem = (function() {

        /**
         * Properties of an ElixirItem.
         * @memberof proto
         * @interface IElixirItem
         * @property {number|null} [id] ElixirItem id
         * @property {number|null} [count] ElixirItem count
         */

        /**
         * Constructs a new ElixirItem.
         * @memberof proto
         * @classdesc Represents an ElixirItem.
         * @implements IElixirItem
         * @constructor
         * @param {proto.IElixirItem=} [p] Properties to set
         */
        function ElixirItem(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * ElixirItem id.
         * @member {number} id
         * @memberof proto.ElixirItem
         * @instance
         */
        ElixirItem.prototype.id = 0;

        /**
         * ElixirItem count.
         * @member {number} count
         * @memberof proto.ElixirItem
         * @instance
         */
        ElixirItem.prototype.count = 0;

        /**
         * Encodes the specified ElixirItem message. Does not implicitly {@link proto.ElixirItem.verify|verify} messages.
         * @function encode
         * @memberof proto.ElixirItem
         * @static
         * @param {proto.IElixirItem} m ElixirItem message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        ElixirItem.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.id != null && Object.hasOwnProperty.call(m, "id"))
                w.uint32(8).int32(m.id);
            if (m.count != null && Object.hasOwnProperty.call(m, "count"))
                w.uint32(16).int32(m.count);
            return w;
        };

        /**
         * Decodes an ElixirItem message from the specified reader or buffer.
         * @function decode
         * @memberof proto.ElixirItem
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.ElixirItem} ElixirItem
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        ElixirItem.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.ElixirItem();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.id = r.int32();
                    break;
                case 2:
                    m.count = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return ElixirItem;
    })();

    proto.Msg_UseElixirReq = (function() {

        /**
         * Properties of a Msg_UseElixirReq.
         * @memberof proto
         * @interface IMsg_UseElixirReq
         * @property {Array.<proto.IElixirItem>|null} [items] Msg_UseElixirReq items
         */

        /**
         * Constructs a new Msg_UseElixirReq.
         * @memberof proto
         * @classdesc Represents a Msg_UseElixirReq.
         * @implements IMsg_UseElixirReq
         * @constructor
         * @param {proto.IMsg_UseElixirReq=} [p] Properties to set
         */
        function Msg_UseElixirReq(p) {
            this.items = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_UseElixirReq items.
         * @member {Array.<proto.IElixirItem>} items
         * @memberof proto.Msg_UseElixirReq
         * @instance
         */
        Msg_UseElixirReq.prototype.items = $util.emptyArray;

        /**
         * Encodes the specified Msg_UseElixirReq message. Does not implicitly {@link proto.Msg_UseElixirReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_UseElixirReq
         * @static
         * @param {proto.IMsg_UseElixirReq} m Msg_UseElixirReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_UseElixirReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.items != null && m.items.length) {
                for (var i = 0; i < m.items.length; ++i)
                    $root.proto.ElixirItem.encode(m.items[i], w.uint32(10).fork()).ldelim();
            }
            return w;
        };

        /**
         * Decodes a Msg_UseElixirReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_UseElixirReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_UseElixirReq} Msg_UseElixirReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_UseElixirReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_UseElixirReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.items && m.items.length))
                        m.items = [];
                    m.items.push($root.proto.ElixirItem.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_UseElixirReq;
    })();

    proto.Msg_UseElixirRsp = (function() {

        /**
         * Properties of a Msg_UseElixirRsp.
         * @memberof proto
         * @interface IMsg_UseElixirRsp
         * @property {proto.ICommonError|null} [error] Msg_UseElixirRsp error
         * @property {Array.<proto.IElixirData>|null} [data] Msg_UseElixirRsp data
         */

        /**
         * Constructs a new Msg_UseElixirRsp.
         * @memberof proto
         * @classdesc Represents a Msg_UseElixirRsp.
         * @implements IMsg_UseElixirRsp
         * @constructor
         * @param {proto.IMsg_UseElixirRsp=} [p] Properties to set
         */
        function Msg_UseElixirRsp(p) {
            this.data = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_UseElixirRsp error.
         * @member {proto.ICommonError|null|undefined} error
         * @memberof proto.Msg_UseElixirRsp
         * @instance
         */
        Msg_UseElixirRsp.prototype.error = null;

        /**
         * Msg_UseElixirRsp data.
         * @member {Array.<proto.IElixirData>} data
         * @memberof proto.Msg_UseElixirRsp
         * @instance
         */
        Msg_UseElixirRsp.prototype.data = $util.emptyArray;

        /**
         * Encodes the specified Msg_UseElixirRsp message. Does not implicitly {@link proto.Msg_UseElixirRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_UseElixirRsp
         * @static
         * @param {proto.IMsg_UseElixirRsp} m Msg_UseElixirRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_UseElixirRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.error != null && Object.hasOwnProperty.call(m, "error"))
                $root.proto.CommonError.encode(m.error, w.uint32(10).fork()).ldelim();
            if (m.data != null && m.data.length) {
                for (var i = 0; i < m.data.length; ++i)
                    $root.proto.ElixirData.encode(m.data[i], w.uint32(18).fork()).ldelim();
            }
            return w;
        };

        /**
         * Decodes a Msg_UseElixirRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_UseElixirRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_UseElixirRsp} Msg_UseElixirRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_UseElixirRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_UseElixirRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.error = $root.proto.CommonError.decode(r, r.uint32());
                    break;
                case 2:
                    if (!(m.data && m.data.length))
                        m.data = [];
                    m.data.push($root.proto.ElixirData.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_UseElixirRsp;
    })();

    proto.FightAttrData = (function() {

        /**
         * Properties of a FightAttrData.
         * @memberof proto
         * @interface IFightAttrData
         * @property {number|null} [type] FightAttrData type
         * @property {number|Long|null} [value] FightAttrData value
         */

        /**
         * Constructs a new FightAttrData.
         * @memberof proto
         * @classdesc Represents a FightAttrData.
         * @implements IFightAttrData
         * @constructor
         * @param {proto.IFightAttrData=} [p] Properties to set
         */
        function FightAttrData(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * FightAttrData type.
         * @member {number} type
         * @memberof proto.FightAttrData
         * @instance
         */
        FightAttrData.prototype.type = 0;

        /**
         * FightAttrData value.
         * @member {number|Long} value
         * @memberof proto.FightAttrData
         * @instance
         */
        FightAttrData.prototype.value = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

        /**
         * Encodes the specified FightAttrData message. Does not implicitly {@link proto.FightAttrData.verify|verify} messages.
         * @function encode
         * @memberof proto.FightAttrData
         * @static
         * @param {proto.IFightAttrData} m FightAttrData message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        FightAttrData.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.type != null && Object.hasOwnProperty.call(m, "type"))
                w.uint32(8).int32(m.type);
            if (m.value != null && Object.hasOwnProperty.call(m, "value"))
                w.uint32(16).int64(m.value);
            return w;
        };

        /**
         * Decodes a FightAttrData message from the specified reader or buffer.
         * @function decode
         * @memberof proto.FightAttrData
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.FightAttrData} FightAttrData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        FightAttrData.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.FightAttrData();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.type = r.int32();
                    break;
                case 2:
                    m.value = r.int64();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return FightAttrData;
    })();

    proto.HeroFightData = (function() {

        /**
         * Properties of a HeroFightData.
         * @memberof proto
         * @interface IHeroFightData
         * @property {number|null} [id] HeroFightData id
         * @property {number|null} [itemId] HeroFightData itemId
         * @property {number|null} [star] HeroFightData star
         * @property {number|null} [level] HeroFightData level
         * @property {Array.<proto.IFightAttrData>|null} [attrList] HeroFightData attrList
         * @property {Array.<number>|null} [skillList] HeroFightData skillList
         */

        /**
         * Constructs a new HeroFightData.
         * @memberof proto
         * @classdesc Represents a HeroFightData.
         * @implements IHeroFightData
         * @constructor
         * @param {proto.IHeroFightData=} [p] Properties to set
         */
        function HeroFightData(p) {
            this.attrList = [];
            this.skillList = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * HeroFightData id.
         * @member {number} id
         * @memberof proto.HeroFightData
         * @instance
         */
        HeroFightData.prototype.id = 0;

        /**
         * HeroFightData itemId.
         * @member {number} itemId
         * @memberof proto.HeroFightData
         * @instance
         */
        HeroFightData.prototype.itemId = 0;

        /**
         * HeroFightData star.
         * @member {number} star
         * @memberof proto.HeroFightData
         * @instance
         */
        HeroFightData.prototype.star = 0;

        /**
         * HeroFightData level.
         * @member {number} level
         * @memberof proto.HeroFightData
         * @instance
         */
        HeroFightData.prototype.level = 0;

        /**
         * HeroFightData attrList.
         * @member {Array.<proto.IFightAttrData>} attrList
         * @memberof proto.HeroFightData
         * @instance
         */
        HeroFightData.prototype.attrList = $util.emptyArray;

        /**
         * HeroFightData skillList.
         * @member {Array.<number>} skillList
         * @memberof proto.HeroFightData
         * @instance
         */
        HeroFightData.prototype.skillList = $util.emptyArray;

        /**
         * Encodes the specified HeroFightData message. Does not implicitly {@link proto.HeroFightData.verify|verify} messages.
         * @function encode
         * @memberof proto.HeroFightData
         * @static
         * @param {proto.IHeroFightData} m HeroFightData message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        HeroFightData.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.id != null && Object.hasOwnProperty.call(m, "id"))
                w.uint32(8).int32(m.id);
            if (m.itemId != null && Object.hasOwnProperty.call(m, "itemId"))
                w.uint32(16).int32(m.itemId);
            if (m.star != null && Object.hasOwnProperty.call(m, "star"))
                w.uint32(24).int32(m.star);
            if (m.level != null && Object.hasOwnProperty.call(m, "level"))
                w.uint32(32).int32(m.level);
            if (m.attrList != null && m.attrList.length) {
                for (var i = 0; i < m.attrList.length; ++i)
                    $root.proto.FightAttrData.encode(m.attrList[i], w.uint32(42).fork()).ldelim();
            }
            if (m.skillList != null && m.skillList.length) {
                w.uint32(50).fork();
                for (var i = 0; i < m.skillList.length; ++i)
                    w.int32(m.skillList[i]);
                w.ldelim();
            }
            return w;
        };

        /**
         * Decodes a HeroFightData message from the specified reader or buffer.
         * @function decode
         * @memberof proto.HeroFightData
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.HeroFightData} HeroFightData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        HeroFightData.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.HeroFightData();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.id = r.int32();
                    break;
                case 2:
                    m.itemId = r.int32();
                    break;
                case 3:
                    m.star = r.int32();
                    break;
                case 4:
                    m.level = r.int32();
                    break;
                case 5:
                    if (!(m.attrList && m.attrList.length))
                        m.attrList = [];
                    m.attrList.push($root.proto.FightAttrData.decode(r, r.uint32()));
                    break;
                case 6:
                    if (!(m.skillList && m.skillList.length))
                        m.skillList = [];
                    if ((t & 7) === 2) {
                        var c2 = r.uint32() + r.pos;
                        while (r.pos < c2)
                            m.skillList.push(r.int32());
                    } else
                        m.skillList.push(r.int32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return HeroFightData;
    })();

    proto.BookFightData = (function() {

        /**
         * Properties of a BookFightData.
         * @memberof proto
         * @interface IBookFightData
         * @property {number|null} [id] BookFightData id
         * @property {number|null} [star] BookFightData star
         * @property {number|null} [level] BookFightData level
         */

        /**
         * Constructs a new BookFightData.
         * @memberof proto
         * @classdesc Represents a BookFightData.
         * @implements IBookFightData
         * @constructor
         * @param {proto.IBookFightData=} [p] Properties to set
         */
        function BookFightData(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * BookFightData id.
         * @member {number} id
         * @memberof proto.BookFightData
         * @instance
         */
        BookFightData.prototype.id = 0;

        /**
         * BookFightData star.
         * @member {number} star
         * @memberof proto.BookFightData
         * @instance
         */
        BookFightData.prototype.star = 0;

        /**
         * BookFightData level.
         * @member {number} level
         * @memberof proto.BookFightData
         * @instance
         */
        BookFightData.prototype.level = 0;

        /**
         * Encodes the specified BookFightData message. Does not implicitly {@link proto.BookFightData.verify|verify} messages.
         * @function encode
         * @memberof proto.BookFightData
         * @static
         * @param {proto.IBookFightData} m BookFightData message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        BookFightData.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.id != null && Object.hasOwnProperty.call(m, "id"))
                w.uint32(8).int32(m.id);
            if (m.star != null && Object.hasOwnProperty.call(m, "star"))
                w.uint32(16).int32(m.star);
            if (m.level != null && Object.hasOwnProperty.call(m, "level"))
                w.uint32(24).int32(m.level);
            return w;
        };

        /**
         * Decodes a BookFightData message from the specified reader or buffer.
         * @function decode
         * @memberof proto.BookFightData
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.BookFightData} BookFightData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        BookFightData.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.BookFightData();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.id = r.int32();
                    break;
                case 2:
                    m.star = r.int32();
                    break;
                case 3:
                    m.level = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return BookFightData;
    })();

    proto.FightInfo = (function() {

        /**
         * Properties of a FightInfo.
         * @memberof proto
         * @interface IFightInfo
         * @property {number|null} [stageId] FightInfo stageId
         * @property {Array.<proto.IHeroFightData>|null} [heroData] FightInfo heroData
         * @property {Array.<number>|null} [skillList] FightInfo skillList
         * @property {Array.<number>|null} [bufferList] FightInfo bufferList
         * @property {Array.<proto.IBookFightData>|null} [bookList] FightInfo bookList
         */

        /**
         * Constructs a new FightInfo.
         * @memberof proto
         * @classdesc Represents a FightInfo.
         * @implements IFightInfo
         * @constructor
         * @param {proto.IFightInfo=} [p] Properties to set
         */
        function FightInfo(p) {
            this.heroData = [];
            this.skillList = [];
            this.bufferList = [];
            this.bookList = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * FightInfo stageId.
         * @member {number} stageId
         * @memberof proto.FightInfo
         * @instance
         */
        FightInfo.prototype.stageId = 0;

        /**
         * FightInfo heroData.
         * @member {Array.<proto.IHeroFightData>} heroData
         * @memberof proto.FightInfo
         * @instance
         */
        FightInfo.prototype.heroData = $util.emptyArray;

        /**
         * FightInfo skillList.
         * @member {Array.<number>} skillList
         * @memberof proto.FightInfo
         * @instance
         */
        FightInfo.prototype.skillList = $util.emptyArray;

        /**
         * FightInfo bufferList.
         * @member {Array.<number>} bufferList
         * @memberof proto.FightInfo
         * @instance
         */
        FightInfo.prototype.bufferList = $util.emptyArray;

        /**
         * FightInfo bookList.
         * @member {Array.<proto.IBookFightData>} bookList
         * @memberof proto.FightInfo
         * @instance
         */
        FightInfo.prototype.bookList = $util.emptyArray;

        /**
         * Encodes the specified FightInfo message. Does not implicitly {@link proto.FightInfo.verify|verify} messages.
         * @function encode
         * @memberof proto.FightInfo
         * @static
         * @param {proto.IFightInfo} m FightInfo message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        FightInfo.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.stageId != null && Object.hasOwnProperty.call(m, "stageId"))
                w.uint32(8).int32(m.stageId);
            if (m.heroData != null && m.heroData.length) {
                for (var i = 0; i < m.heroData.length; ++i)
                    $root.proto.HeroFightData.encode(m.heroData[i], w.uint32(18).fork()).ldelim();
            }
            if (m.skillList != null && m.skillList.length) {
                w.uint32(26).fork();
                for (var i = 0; i < m.skillList.length; ++i)
                    w.int32(m.skillList[i]);
                w.ldelim();
            }
            if (m.bufferList != null && m.bufferList.length) {
                w.uint32(34).fork();
                for (var i = 0; i < m.bufferList.length; ++i)
                    w.int32(m.bufferList[i]);
                w.ldelim();
            }
            if (m.bookList != null && m.bookList.length) {
                for (var i = 0; i < m.bookList.length; ++i)
                    $root.proto.BookFightData.encode(m.bookList[i], w.uint32(42).fork()).ldelim();
            }
            return w;
        };

        /**
         * Decodes a FightInfo message from the specified reader or buffer.
         * @function decode
         * @memberof proto.FightInfo
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.FightInfo} FightInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        FightInfo.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.FightInfo();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.stageId = r.int32();
                    break;
                case 2:
                    if (!(m.heroData && m.heroData.length))
                        m.heroData = [];
                    m.heroData.push($root.proto.HeroFightData.decode(r, r.uint32()));
                    break;
                case 3:
                    if (!(m.skillList && m.skillList.length))
                        m.skillList = [];
                    if ((t & 7) === 2) {
                        var c2 = r.uint32() + r.pos;
                        while (r.pos < c2)
                            m.skillList.push(r.int32());
                    } else
                        m.skillList.push(r.int32());
                    break;
                case 4:
                    if (!(m.bufferList && m.bufferList.length))
                        m.bufferList = [];
                    if ((t & 7) === 2) {
                        var c2 = r.uint32() + r.pos;
                        while (r.pos < c2)
                            m.bufferList.push(r.int32());
                    } else
                        m.bufferList.push(r.int32());
                    break;
                case 5:
                    if (!(m.bookList && m.bookList.length))
                        m.bookList = [];
                    m.bookList.push($root.proto.BookFightData.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return FightInfo;
    })();

    proto.Msg_FightInfoPush = (function() {

        /**
         * Properties of a Msg_FightInfoPush.
         * @memberof proto
         * @interface IMsg_FightInfoPush
         * @property {proto.IFightInfo|null} [info] Msg_FightInfoPush info
         */

        /**
         * Constructs a new Msg_FightInfoPush.
         * @memberof proto
         * @classdesc Represents a Msg_FightInfoPush.
         * @implements IMsg_FightInfoPush
         * @constructor
         * @param {proto.IMsg_FightInfoPush=} [p] Properties to set
         */
        function Msg_FightInfoPush(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_FightInfoPush info.
         * @member {proto.IFightInfo|null|undefined} info
         * @memberof proto.Msg_FightInfoPush
         * @instance
         */
        Msg_FightInfoPush.prototype.info = null;

        /**
         * Encodes the specified Msg_FightInfoPush message. Does not implicitly {@link proto.Msg_FightInfoPush.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_FightInfoPush
         * @static
         * @param {proto.IMsg_FightInfoPush} m Msg_FightInfoPush message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_FightInfoPush.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.info != null && Object.hasOwnProperty.call(m, "info"))
                $root.proto.FightInfo.encode(m.info, w.uint32(10).fork()).ldelim();
            return w;
        };

        /**
         * Decodes a Msg_FightInfoPush message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_FightInfoPush
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_FightInfoPush} Msg_FightInfoPush
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_FightInfoPush.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_FightInfoPush();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.info = $root.proto.FightInfo.decode(r, r.uint32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_FightInfoPush;
    })();

    /**
     * SysMailType enum.
     * @name proto.SysMailType
     * @enum {number}
     * @property {number} Gm=0 Gm value
     * @property {number} Function=1 Function value
     */
    proto.SysMailType = (function() {
        var valuesById = {}, values = Object.create(valuesById);
        values[valuesById[0] = "Gm"] = 0;
        values[valuesById[1] = "Function"] = 1;
        return values;
    })();

    proto.Mail = (function() {

        /**
         * Properties of a Mail.
         * @memberof proto
         * @interface IMail
         * @property {number|Long|null} [id] Mail id
         * @property {string|null} [Title] Mail Title
         * @property {string|null} [Sender] Mail Sender
         * @property {string|null} [Content] Mail Content
         * @property {Array.<proto.IItem>|null} [Rewards] Mail Rewards
         * @property {boolean|null} [IsRewardsReceived] Mail IsRewardsReceived
         * @property {number|Long|null} [CreatedAt] Mail CreatedAt
         * @property {number|Long|null} [ExpireAt] Mail ExpireAt
         * @property {proto.SysMailType|null} [Type] Mail Type
         */

        /**
         * Constructs a new Mail.
         * @memberof proto
         * @classdesc Represents a Mail.
         * @implements IMail
         * @constructor
         * @param {proto.IMail=} [p] Properties to set
         */
        function Mail(p) {
            this.Rewards = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Mail id.
         * @member {number|Long} id
         * @memberof proto.Mail
         * @instance
         */
        Mail.prototype.id = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

        /**
         * Mail Title.
         * @member {string} Title
         * @memberof proto.Mail
         * @instance
         */
        Mail.prototype.Title = "";

        /**
         * Mail Sender.
         * @member {string} Sender
         * @memberof proto.Mail
         * @instance
         */
        Mail.prototype.Sender = "";

        /**
         * Mail Content.
         * @member {string} Content
         * @memberof proto.Mail
         * @instance
         */
        Mail.prototype.Content = "";

        /**
         * Mail Rewards.
         * @member {Array.<proto.IItem>} Rewards
         * @memberof proto.Mail
         * @instance
         */
        Mail.prototype.Rewards = $util.emptyArray;

        /**
         * Mail IsRewardsReceived.
         * @member {boolean} IsRewardsReceived
         * @memberof proto.Mail
         * @instance
         */
        Mail.prototype.IsRewardsReceived = false;

        /**
         * Mail CreatedAt.
         * @member {number|Long} CreatedAt
         * @memberof proto.Mail
         * @instance
         */
        Mail.prototype.CreatedAt = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

        /**
         * Mail ExpireAt.
         * @member {number|Long} ExpireAt
         * @memberof proto.Mail
         * @instance
         */
        Mail.prototype.ExpireAt = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

        /**
         * Mail Type.
         * @member {proto.SysMailType} Type
         * @memberof proto.Mail
         * @instance
         */
        Mail.prototype.Type = 0;

        /**
         * Encodes the specified Mail message. Does not implicitly {@link proto.Mail.verify|verify} messages.
         * @function encode
         * @memberof proto.Mail
         * @static
         * @param {proto.IMail} m Mail message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Mail.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.id != null && Object.hasOwnProperty.call(m, "id"))
                w.uint32(8).int64(m.id);
            if (m.Title != null && Object.hasOwnProperty.call(m, "Title"))
                w.uint32(18).string(m.Title);
            if (m.Sender != null && Object.hasOwnProperty.call(m, "Sender"))
                w.uint32(26).string(m.Sender);
            if (m.Content != null && Object.hasOwnProperty.call(m, "Content"))
                w.uint32(34).string(m.Content);
            if (m.Rewards != null && m.Rewards.length) {
                for (var i = 0; i < m.Rewards.length; ++i)
                    $root.proto.Item.encode(m.Rewards[i], w.uint32(42).fork()).ldelim();
            }
            if (m.IsRewardsReceived != null && Object.hasOwnProperty.call(m, "IsRewardsReceived"))
                w.uint32(48).bool(m.IsRewardsReceived);
            if (m.CreatedAt != null && Object.hasOwnProperty.call(m, "CreatedAt"))
                w.uint32(56).int64(m.CreatedAt);
            if (m.ExpireAt != null && Object.hasOwnProperty.call(m, "ExpireAt"))
                w.uint32(64).int64(m.ExpireAt);
            if (m.Type != null && Object.hasOwnProperty.call(m, "Type"))
                w.uint32(72).int32(m.Type);
            return w;
        };

        /**
         * Decodes a Mail message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Mail
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Mail} Mail
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Mail.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Mail();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.id = r.int64();
                    break;
                case 2:
                    m.Title = r.string();
                    break;
                case 3:
                    m.Sender = r.string();
                    break;
                case 4:
                    m.Content = r.string();
                    break;
                case 5:
                    if (!(m.Rewards && m.Rewards.length))
                        m.Rewards = [];
                    m.Rewards.push($root.proto.Item.decode(r, r.uint32()));
                    break;
                case 6:
                    m.IsRewardsReceived = r.bool();
                    break;
                case 7:
                    m.CreatedAt = r.int64();
                    break;
                case 8:
                    m.ExpireAt = r.int64();
                    break;
                case 9:
                    m.Type = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Mail;
    })();

    proto.Msg_GetMailsReq = (function() {

        /**
         * Properties of a Msg_GetMailsReq.
         * @memberof proto
         * @interface IMsg_GetMailsReq
         */

        /**
         * Constructs a new Msg_GetMailsReq.
         * @memberof proto
         * @classdesc Represents a Msg_GetMailsReq.
         * @implements IMsg_GetMailsReq
         * @constructor
         * @param {proto.IMsg_GetMailsReq=} [p] Properties to set
         */
        function Msg_GetMailsReq(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Encodes the specified Msg_GetMailsReq message. Does not implicitly {@link proto.Msg_GetMailsReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_GetMailsReq
         * @static
         * @param {proto.IMsg_GetMailsReq} m Msg_GetMailsReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_GetMailsReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };

        /**
         * Decodes a Msg_GetMailsReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_GetMailsReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_GetMailsReq} Msg_GetMailsReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_GetMailsReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_GetMailsReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_GetMailsReq;
    })();

    proto.Msg_GetMailsRsp = (function() {

        /**
         * Properties of a Msg_GetMailsRsp.
         * @memberof proto
         * @interface IMsg_GetMailsRsp
         * @property {Array.<proto.IMail>|null} [mails] Msg_GetMailsRsp mails
         */

        /**
         * Constructs a new Msg_GetMailsRsp.
         * @memberof proto
         * @classdesc Represents a Msg_GetMailsRsp.
         * @implements IMsg_GetMailsRsp
         * @constructor
         * @param {proto.IMsg_GetMailsRsp=} [p] Properties to set
         */
        function Msg_GetMailsRsp(p) {
            this.mails = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_GetMailsRsp mails.
         * @member {Array.<proto.IMail>} mails
         * @memberof proto.Msg_GetMailsRsp
         * @instance
         */
        Msg_GetMailsRsp.prototype.mails = $util.emptyArray;

        /**
         * Encodes the specified Msg_GetMailsRsp message. Does not implicitly {@link proto.Msg_GetMailsRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_GetMailsRsp
         * @static
         * @param {proto.IMsg_GetMailsRsp} m Msg_GetMailsRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_GetMailsRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.mails != null && m.mails.length) {
                for (var i = 0; i < m.mails.length; ++i)
                    $root.proto.Mail.encode(m.mails[i], w.uint32(10).fork()).ldelim();
            }
            return w;
        };

        /**
         * Decodes a Msg_GetMailsRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_GetMailsRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_GetMailsRsp} Msg_GetMailsRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_GetMailsRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_GetMailsRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.mails && m.mails.length))
                        m.mails = [];
                    m.mails.push($root.proto.Mail.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_GetMailsRsp;
    })();

    proto.Msg_ReceiveMailsRewardReq = (function() {

        /**
         * Properties of a Msg_ReceiveMailsRewardReq.
         * @memberof proto
         * @interface IMsg_ReceiveMailsRewardReq
         * @property {Array.<number|Long>|null} [ids] Msg_ReceiveMailsRewardReq ids
         */

        /**
         * Constructs a new Msg_ReceiveMailsRewardReq.
         * @memberof proto
         * @classdesc Represents a Msg_ReceiveMailsRewardReq.
         * @implements IMsg_ReceiveMailsRewardReq
         * @constructor
         * @param {proto.IMsg_ReceiveMailsRewardReq=} [p] Properties to set
         */
        function Msg_ReceiveMailsRewardReq(p) {
            this.ids = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_ReceiveMailsRewardReq ids.
         * @member {Array.<number|Long>} ids
         * @memberof proto.Msg_ReceiveMailsRewardReq
         * @instance
         */
        Msg_ReceiveMailsRewardReq.prototype.ids = $util.emptyArray;

        /**
         * Encodes the specified Msg_ReceiveMailsRewardReq message. Does not implicitly {@link proto.Msg_ReceiveMailsRewardReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_ReceiveMailsRewardReq
         * @static
         * @param {proto.IMsg_ReceiveMailsRewardReq} m Msg_ReceiveMailsRewardReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_ReceiveMailsRewardReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.ids != null && m.ids.length) {
                w.uint32(10).fork();
                for (var i = 0; i < m.ids.length; ++i)
                    w.int64(m.ids[i]);
                w.ldelim();
            }
            return w;
        };

        /**
         * Decodes a Msg_ReceiveMailsRewardReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_ReceiveMailsRewardReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_ReceiveMailsRewardReq} Msg_ReceiveMailsRewardReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_ReceiveMailsRewardReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_ReceiveMailsRewardReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.ids && m.ids.length))
                        m.ids = [];
                    if ((t & 7) === 2) {
                        var c2 = r.uint32() + r.pos;
                        while (r.pos < c2)
                            m.ids.push(r.int64());
                    } else
                        m.ids.push(r.int64());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_ReceiveMailsRewardReq;
    })();

    proto.Msg_ReceiveMailsRewardRsp = (function() {

        /**
         * Properties of a Msg_ReceiveMailsRewardRsp.
         * @memberof proto
         * @interface IMsg_ReceiveMailsRewardRsp
         * @property {proto.ICommonError|null} [error] Msg_ReceiveMailsRewardRsp error
         * @property {Array.<number|Long>|null} [ids] Msg_ReceiveMailsRewardRsp ids
         * @property {Array.<proto.IItem>|null} [rewards] Msg_ReceiveMailsRewardRsp rewards
         */

        /**
         * Constructs a new Msg_ReceiveMailsRewardRsp.
         * @memberof proto
         * @classdesc Represents a Msg_ReceiveMailsRewardRsp.
         * @implements IMsg_ReceiveMailsRewardRsp
         * @constructor
         * @param {proto.IMsg_ReceiveMailsRewardRsp=} [p] Properties to set
         */
        function Msg_ReceiveMailsRewardRsp(p) {
            this.ids = [];
            this.rewards = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_ReceiveMailsRewardRsp error.
         * @member {proto.ICommonError|null|undefined} error
         * @memberof proto.Msg_ReceiveMailsRewardRsp
         * @instance
         */
        Msg_ReceiveMailsRewardRsp.prototype.error = null;

        /**
         * Msg_ReceiveMailsRewardRsp ids.
         * @member {Array.<number|Long>} ids
         * @memberof proto.Msg_ReceiveMailsRewardRsp
         * @instance
         */
        Msg_ReceiveMailsRewardRsp.prototype.ids = $util.emptyArray;

        /**
         * Msg_ReceiveMailsRewardRsp rewards.
         * @member {Array.<proto.IItem>} rewards
         * @memberof proto.Msg_ReceiveMailsRewardRsp
         * @instance
         */
        Msg_ReceiveMailsRewardRsp.prototype.rewards = $util.emptyArray;

        /**
         * Encodes the specified Msg_ReceiveMailsRewardRsp message. Does not implicitly {@link proto.Msg_ReceiveMailsRewardRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_ReceiveMailsRewardRsp
         * @static
         * @param {proto.IMsg_ReceiveMailsRewardRsp} m Msg_ReceiveMailsRewardRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_ReceiveMailsRewardRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.error != null && Object.hasOwnProperty.call(m, "error"))
                $root.proto.CommonError.encode(m.error, w.uint32(10).fork()).ldelim();
            if (m.ids != null && m.ids.length) {
                w.uint32(18).fork();
                for (var i = 0; i < m.ids.length; ++i)
                    w.int64(m.ids[i]);
                w.ldelim();
            }
            if (m.rewards != null && m.rewards.length) {
                for (var i = 0; i < m.rewards.length; ++i)
                    $root.proto.Item.encode(m.rewards[i], w.uint32(26).fork()).ldelim();
            }
            return w;
        };

        /**
         * Decodes a Msg_ReceiveMailsRewardRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_ReceiveMailsRewardRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_ReceiveMailsRewardRsp} Msg_ReceiveMailsRewardRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_ReceiveMailsRewardRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_ReceiveMailsRewardRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.error = $root.proto.CommonError.decode(r, r.uint32());
                    break;
                case 2:
                    if (!(m.ids && m.ids.length))
                        m.ids = [];
                    if ((t & 7) === 2) {
                        var c2 = r.uint32() + r.pos;
                        while (r.pos < c2)
                            m.ids.push(r.int64());
                    } else
                        m.ids.push(r.int64());
                    break;
                case 3:
                    if (!(m.rewards && m.rewards.length))
                        m.rewards = [];
                    m.rewards.push($root.proto.Item.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_ReceiveMailsRewardRsp;
    })();

    proto.Msg_DeleteMailsReq = (function() {

        /**
         * Properties of a Msg_DeleteMailsReq.
         * @memberof proto
         * @interface IMsg_DeleteMailsReq
         * @property {Array.<number|Long>|null} [ids] Msg_DeleteMailsReq ids
         */

        /**
         * Constructs a new Msg_DeleteMailsReq.
         * @memberof proto
         * @classdesc Represents a Msg_DeleteMailsReq.
         * @implements IMsg_DeleteMailsReq
         * @constructor
         * @param {proto.IMsg_DeleteMailsReq=} [p] Properties to set
         */
        function Msg_DeleteMailsReq(p) {
            this.ids = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_DeleteMailsReq ids.
         * @member {Array.<number|Long>} ids
         * @memberof proto.Msg_DeleteMailsReq
         * @instance
         */
        Msg_DeleteMailsReq.prototype.ids = $util.emptyArray;

        /**
         * Encodes the specified Msg_DeleteMailsReq message. Does not implicitly {@link proto.Msg_DeleteMailsReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_DeleteMailsReq
         * @static
         * @param {proto.IMsg_DeleteMailsReq} m Msg_DeleteMailsReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_DeleteMailsReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.ids != null && m.ids.length) {
                w.uint32(10).fork();
                for (var i = 0; i < m.ids.length; ++i)
                    w.int64(m.ids[i]);
                w.ldelim();
            }
            return w;
        };

        /**
         * Decodes a Msg_DeleteMailsReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_DeleteMailsReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_DeleteMailsReq} Msg_DeleteMailsReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_DeleteMailsReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_DeleteMailsReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.ids && m.ids.length))
                        m.ids = [];
                    if ((t & 7) === 2) {
                        var c2 = r.uint32() + r.pos;
                        while (r.pos < c2)
                            m.ids.push(r.int64());
                    } else
                        m.ids.push(r.int64());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_DeleteMailsReq;
    })();

    proto.Msg_DeleteMailsRsp = (function() {

        /**
         * Properties of a Msg_DeleteMailsRsp.
         * @memberof proto
         * @interface IMsg_DeleteMailsRsp
         * @property {proto.ICommonError|null} [error] Msg_DeleteMailsRsp error
         * @property {Array.<number|Long>|null} [ids] Msg_DeleteMailsRsp ids
         */

        /**
         * Constructs a new Msg_DeleteMailsRsp.
         * @memberof proto
         * @classdesc Represents a Msg_DeleteMailsRsp.
         * @implements IMsg_DeleteMailsRsp
         * @constructor
         * @param {proto.IMsg_DeleteMailsRsp=} [p] Properties to set
         */
        function Msg_DeleteMailsRsp(p) {
            this.ids = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_DeleteMailsRsp error.
         * @member {proto.ICommonError|null|undefined} error
         * @memberof proto.Msg_DeleteMailsRsp
         * @instance
         */
        Msg_DeleteMailsRsp.prototype.error = null;

        /**
         * Msg_DeleteMailsRsp ids.
         * @member {Array.<number|Long>} ids
         * @memberof proto.Msg_DeleteMailsRsp
         * @instance
         */
        Msg_DeleteMailsRsp.prototype.ids = $util.emptyArray;

        /**
         * Encodes the specified Msg_DeleteMailsRsp message. Does not implicitly {@link proto.Msg_DeleteMailsRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_DeleteMailsRsp
         * @static
         * @param {proto.IMsg_DeleteMailsRsp} m Msg_DeleteMailsRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_DeleteMailsRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.error != null && Object.hasOwnProperty.call(m, "error"))
                $root.proto.CommonError.encode(m.error, w.uint32(10).fork()).ldelim();
            if (m.ids != null && m.ids.length) {
                w.uint32(18).fork();
                for (var i = 0; i < m.ids.length; ++i)
                    w.int64(m.ids[i]);
                w.ldelim();
            }
            return w;
        };

        /**
         * Decodes a Msg_DeleteMailsRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_DeleteMailsRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_DeleteMailsRsp} Msg_DeleteMailsRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_DeleteMailsRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_DeleteMailsRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.error = $root.proto.CommonError.decode(r, r.uint32());
                    break;
                case 2:
                    if (!(m.ids && m.ids.length))
                        m.ids = [];
                    if ((t & 7) === 2) {
                        var c2 = r.uint32() + r.pos;
                        while (r.pos < c2)
                            m.ids.push(r.int64());
                    } else
                        m.ids.push(r.int64());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_DeleteMailsRsp;
    })();

    proto.Msg_NewMailsPush = (function() {

        /**
         * Properties of a Msg_NewMailsPush.
         * @memberof proto
         * @interface IMsg_NewMailsPush
         */

        /**
         * Constructs a new Msg_NewMailsPush.
         * @memberof proto
         * @classdesc Represents a Msg_NewMailsPush.
         * @implements IMsg_NewMailsPush
         * @constructor
         * @param {proto.IMsg_NewMailsPush=} [p] Properties to set
         */
        function Msg_NewMailsPush(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Encodes the specified Msg_NewMailsPush message. Does not implicitly {@link proto.Msg_NewMailsPush.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_NewMailsPush
         * @static
         * @param {proto.IMsg_NewMailsPush} m Msg_NewMailsPush message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_NewMailsPush.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };

        /**
         * Decodes a Msg_NewMailsPush message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_NewMailsPush
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_NewMailsPush} Msg_NewMailsPush
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_NewMailsPush.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_NewMailsPush();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_NewMailsPush;
    })();

    proto.Task = (function() {

        /**
         * Properties of a Task.
         * @memberof proto
         * @interface ITask
         * @property {number|null} [id] Task id
         * @property {number|null} [taskTabId] Task taskTabId
         * @property {number|null} [progress] Task progress
         * @property {boolean|null} [isReceived] Task isReceived
         * @property {boolean|null} [isAdvanceReceived] Task isAdvanceReceived
         */

        /**
         * Constructs a new Task.
         * @memberof proto
         * @classdesc Represents a Task.
         * @implements ITask
         * @constructor
         * @param {proto.ITask=} [p] Properties to set
         */
        function Task(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Task id.
         * @member {number} id
         * @memberof proto.Task
         * @instance
         */
        Task.prototype.id = 0;

        /**
         * Task taskTabId.
         * @member {number} taskTabId
         * @memberof proto.Task
         * @instance
         */
        Task.prototype.taskTabId = 0;

        /**
         * Task progress.
         * @member {number} progress
         * @memberof proto.Task
         * @instance
         */
        Task.prototype.progress = 0;

        /**
         * Task isReceived.
         * @member {boolean} isReceived
         * @memberof proto.Task
         * @instance
         */
        Task.prototype.isReceived = false;

        /**
         * Task isAdvanceReceived.
         * @member {boolean} isAdvanceReceived
         * @memberof proto.Task
         * @instance
         */
        Task.prototype.isAdvanceReceived = false;

        /**
         * Encodes the specified Task message. Does not implicitly {@link proto.Task.verify|verify} messages.
         * @function encode
         * @memberof proto.Task
         * @static
         * @param {proto.ITask} m Task message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Task.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.id != null && Object.hasOwnProperty.call(m, "id"))
                w.uint32(8).int32(m.id);
            if (m.taskTabId != null && Object.hasOwnProperty.call(m, "taskTabId"))
                w.uint32(16).int32(m.taskTabId);
            if (m.progress != null && Object.hasOwnProperty.call(m, "progress"))
                w.uint32(24).int32(m.progress);
            if (m.isReceived != null && Object.hasOwnProperty.call(m, "isReceived"))
                w.uint32(32).bool(m.isReceived);
            if (m.isAdvanceReceived != null && Object.hasOwnProperty.call(m, "isAdvanceReceived"))
                w.uint32(40).bool(m.isAdvanceReceived);
            return w;
        };

        /**
         * Decodes a Task message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Task
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Task} Task
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Task.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Task();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.id = r.int32();
                    break;
                case 2:
                    m.taskTabId = r.int32();
                    break;
                case 3:
                    m.progress = r.int32();
                    break;
                case 4:
                    m.isReceived = r.bool();
                    break;
                case 5:
                    m.isAdvanceReceived = r.bool();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Task;
    })();

    proto.Msg_GetDailyTasksReq = (function() {

        /**
         * Properties of a Msg_GetDailyTasksReq.
         * @memberof proto
         * @interface IMsg_GetDailyTasksReq
         */

        /**
         * Constructs a new Msg_GetDailyTasksReq.
         * @memberof proto
         * @classdesc Represents a Msg_GetDailyTasksReq.
         * @implements IMsg_GetDailyTasksReq
         * @constructor
         * @param {proto.IMsg_GetDailyTasksReq=} [p] Properties to set
         */
        function Msg_GetDailyTasksReq(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Encodes the specified Msg_GetDailyTasksReq message. Does not implicitly {@link proto.Msg_GetDailyTasksReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_GetDailyTasksReq
         * @static
         * @param {proto.IMsg_GetDailyTasksReq} m Msg_GetDailyTasksReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_GetDailyTasksReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };

        /**
         * Decodes a Msg_GetDailyTasksReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_GetDailyTasksReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_GetDailyTasksReq} Msg_GetDailyTasksReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_GetDailyTasksReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_GetDailyTasksReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_GetDailyTasksReq;
    })();

    proto.Msg_GetDailyTasksRsp = (function() {

        /**
         * Properties of a Msg_GetDailyTasksRsp.
         * @memberof proto
         * @interface IMsg_GetDailyTasksRsp
         * @property {Array.<proto.ITask>|null} [tasks] Msg_GetDailyTasksRsp tasks
         * @property {Array.<number>|null} [ReceivedIndexes] Msg_GetDailyTasksRsp ReceivedIndexes
         * @property {number|null} [TodayChapterId] Msg_GetDailyTasksRsp TodayChapterId
         */

        /**
         * Constructs a new Msg_GetDailyTasksRsp.
         * @memberof proto
         * @classdesc Represents a Msg_GetDailyTasksRsp.
         * @implements IMsg_GetDailyTasksRsp
         * @constructor
         * @param {proto.IMsg_GetDailyTasksRsp=} [p] Properties to set
         */
        function Msg_GetDailyTasksRsp(p) {
            this.tasks = [];
            this.ReceivedIndexes = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_GetDailyTasksRsp tasks.
         * @member {Array.<proto.ITask>} tasks
         * @memberof proto.Msg_GetDailyTasksRsp
         * @instance
         */
        Msg_GetDailyTasksRsp.prototype.tasks = $util.emptyArray;

        /**
         * Msg_GetDailyTasksRsp ReceivedIndexes.
         * @member {Array.<number>} ReceivedIndexes
         * @memberof proto.Msg_GetDailyTasksRsp
         * @instance
         */
        Msg_GetDailyTasksRsp.prototype.ReceivedIndexes = $util.emptyArray;

        /**
         * Msg_GetDailyTasksRsp TodayChapterId.
         * @member {number} TodayChapterId
         * @memberof proto.Msg_GetDailyTasksRsp
         * @instance
         */
        Msg_GetDailyTasksRsp.prototype.TodayChapterId = 0;

        /**
         * Encodes the specified Msg_GetDailyTasksRsp message. Does not implicitly {@link proto.Msg_GetDailyTasksRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_GetDailyTasksRsp
         * @static
         * @param {proto.IMsg_GetDailyTasksRsp} m Msg_GetDailyTasksRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_GetDailyTasksRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.tasks != null && m.tasks.length) {
                for (var i = 0; i < m.tasks.length; ++i)
                    $root.proto.Task.encode(m.tasks[i], w.uint32(10).fork()).ldelim();
            }
            if (m.ReceivedIndexes != null && m.ReceivedIndexes.length) {
                w.uint32(18).fork();
                for (var i = 0; i < m.ReceivedIndexes.length; ++i)
                    w.int32(m.ReceivedIndexes[i]);
                w.ldelim();
            }
            if (m.TodayChapterId != null && Object.hasOwnProperty.call(m, "TodayChapterId"))
                w.uint32(24).int32(m.TodayChapterId);
            return w;
        };

        /**
         * Decodes a Msg_GetDailyTasksRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_GetDailyTasksRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_GetDailyTasksRsp} Msg_GetDailyTasksRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_GetDailyTasksRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_GetDailyTasksRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.tasks && m.tasks.length))
                        m.tasks = [];
                    m.tasks.push($root.proto.Task.decode(r, r.uint32()));
                    break;
                case 2:
                    if (!(m.ReceivedIndexes && m.ReceivedIndexes.length))
                        m.ReceivedIndexes = [];
                    if ((t & 7) === 2) {
                        var c2 = r.uint32() + r.pos;
                        while (r.pos < c2)
                            m.ReceivedIndexes.push(r.int32());
                    } else
                        m.ReceivedIndexes.push(r.int32());
                    break;
                case 3:
                    m.TodayChapterId = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_GetDailyTasksRsp;
    })();

    proto.Msg_ReceiveDailyTaskRewardReq = (function() {

        /**
         * Properties of a Msg_ReceiveDailyTaskRewardReq.
         * @memberof proto
         * @interface IMsg_ReceiveDailyTaskRewardReq
         * @property {Array.<number>|null} [taskIds] Msg_ReceiveDailyTaskRewardReq taskIds
         */

        /**
         * Constructs a new Msg_ReceiveDailyTaskRewardReq.
         * @memberof proto
         * @classdesc Represents a Msg_ReceiveDailyTaskRewardReq.
         * @implements IMsg_ReceiveDailyTaskRewardReq
         * @constructor
         * @param {proto.IMsg_ReceiveDailyTaskRewardReq=} [p] Properties to set
         */
        function Msg_ReceiveDailyTaskRewardReq(p) {
            this.taskIds = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_ReceiveDailyTaskRewardReq taskIds.
         * @member {Array.<number>} taskIds
         * @memberof proto.Msg_ReceiveDailyTaskRewardReq
         * @instance
         */
        Msg_ReceiveDailyTaskRewardReq.prototype.taskIds = $util.emptyArray;

        /**
         * Encodes the specified Msg_ReceiveDailyTaskRewardReq message. Does not implicitly {@link proto.Msg_ReceiveDailyTaskRewardReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_ReceiveDailyTaskRewardReq
         * @static
         * @param {proto.IMsg_ReceiveDailyTaskRewardReq} m Msg_ReceiveDailyTaskRewardReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_ReceiveDailyTaskRewardReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.taskIds != null && m.taskIds.length) {
                w.uint32(10).fork();
                for (var i = 0; i < m.taskIds.length; ++i)
                    w.int32(m.taskIds[i]);
                w.ldelim();
            }
            return w;
        };

        /**
         * Decodes a Msg_ReceiveDailyTaskRewardReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_ReceiveDailyTaskRewardReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_ReceiveDailyTaskRewardReq} Msg_ReceiveDailyTaskRewardReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_ReceiveDailyTaskRewardReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_ReceiveDailyTaskRewardReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.taskIds && m.taskIds.length))
                        m.taskIds = [];
                    if ((t & 7) === 2) {
                        var c2 = r.uint32() + r.pos;
                        while (r.pos < c2)
                            m.taskIds.push(r.int32());
                    } else
                        m.taskIds.push(r.int32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_ReceiveDailyTaskRewardReq;
    })();

    proto.Msg_ReceiveDailyTaskRewardRsp = (function() {

        /**
         * Properties of a Msg_ReceiveDailyTaskRewardRsp.
         * @memberof proto
         * @interface IMsg_ReceiveDailyTaskRewardRsp
         * @property {proto.ICommonError|null} [error] Msg_ReceiveDailyTaskRewardRsp error
         * @property {Array.<number>|null} [taskIds] Msg_ReceiveDailyTaskRewardRsp taskIds
         * @property {Array.<proto.IItem>|null} [rewards] Msg_ReceiveDailyTaskRewardRsp rewards
         */

        /**
         * Constructs a new Msg_ReceiveDailyTaskRewardRsp.
         * @memberof proto
         * @classdesc Represents a Msg_ReceiveDailyTaskRewardRsp.
         * @implements IMsg_ReceiveDailyTaskRewardRsp
         * @constructor
         * @param {proto.IMsg_ReceiveDailyTaskRewardRsp=} [p] Properties to set
         */
        function Msg_ReceiveDailyTaskRewardRsp(p) {
            this.taskIds = [];
            this.rewards = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_ReceiveDailyTaskRewardRsp error.
         * @member {proto.ICommonError|null|undefined} error
         * @memberof proto.Msg_ReceiveDailyTaskRewardRsp
         * @instance
         */
        Msg_ReceiveDailyTaskRewardRsp.prototype.error = null;

        /**
         * Msg_ReceiveDailyTaskRewardRsp taskIds.
         * @member {Array.<number>} taskIds
         * @memberof proto.Msg_ReceiveDailyTaskRewardRsp
         * @instance
         */
        Msg_ReceiveDailyTaskRewardRsp.prototype.taskIds = $util.emptyArray;

        /**
         * Msg_ReceiveDailyTaskRewardRsp rewards.
         * @member {Array.<proto.IItem>} rewards
         * @memberof proto.Msg_ReceiveDailyTaskRewardRsp
         * @instance
         */
        Msg_ReceiveDailyTaskRewardRsp.prototype.rewards = $util.emptyArray;

        /**
         * Encodes the specified Msg_ReceiveDailyTaskRewardRsp message. Does not implicitly {@link proto.Msg_ReceiveDailyTaskRewardRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_ReceiveDailyTaskRewardRsp
         * @static
         * @param {proto.IMsg_ReceiveDailyTaskRewardRsp} m Msg_ReceiveDailyTaskRewardRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_ReceiveDailyTaskRewardRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.error != null && Object.hasOwnProperty.call(m, "error"))
                $root.proto.CommonError.encode(m.error, w.uint32(10).fork()).ldelim();
            if (m.taskIds != null && m.taskIds.length) {
                w.uint32(18).fork();
                for (var i = 0; i < m.taskIds.length; ++i)
                    w.int32(m.taskIds[i]);
                w.ldelim();
            }
            if (m.rewards != null && m.rewards.length) {
                for (var i = 0; i < m.rewards.length; ++i)
                    $root.proto.Item.encode(m.rewards[i], w.uint32(26).fork()).ldelim();
            }
            return w;
        };

        /**
         * Decodes a Msg_ReceiveDailyTaskRewardRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_ReceiveDailyTaskRewardRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_ReceiveDailyTaskRewardRsp} Msg_ReceiveDailyTaskRewardRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_ReceiveDailyTaskRewardRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_ReceiveDailyTaskRewardRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.error = $root.proto.CommonError.decode(r, r.uint32());
                    break;
                case 2:
                    if (!(m.taskIds && m.taskIds.length))
                        m.taskIds = [];
                    if ((t & 7) === 2) {
                        var c2 = r.uint32() + r.pos;
                        while (r.pos < c2)
                            m.taskIds.push(r.int32());
                    } else
                        m.taskIds.push(r.int32());
                    break;
                case 3:
                    if (!(m.rewards && m.rewards.length))
                        m.rewards = [];
                    m.rewards.push($root.proto.Item.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_ReceiveDailyTaskRewardRsp;
    })();

    proto.Msg_ReceiveDailyActivityTaskRewardReq = (function() {

        /**
         * Properties of a Msg_ReceiveDailyActivityTaskRewardReq.
         * @memberof proto
         * @interface IMsg_ReceiveDailyActivityTaskRewardReq
         * @property {Array.<number>|null} [indexes] Msg_ReceiveDailyActivityTaskRewardReq indexes
         */

        /**
         * Constructs a new Msg_ReceiveDailyActivityTaskRewardReq.
         * @memberof proto
         * @classdesc Represents a Msg_ReceiveDailyActivityTaskRewardReq.
         * @implements IMsg_ReceiveDailyActivityTaskRewardReq
         * @constructor
         * @param {proto.IMsg_ReceiveDailyActivityTaskRewardReq=} [p] Properties to set
         */
        function Msg_ReceiveDailyActivityTaskRewardReq(p) {
            this.indexes = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_ReceiveDailyActivityTaskRewardReq indexes.
         * @member {Array.<number>} indexes
         * @memberof proto.Msg_ReceiveDailyActivityTaskRewardReq
         * @instance
         */
        Msg_ReceiveDailyActivityTaskRewardReq.prototype.indexes = $util.emptyArray;

        /**
         * Encodes the specified Msg_ReceiveDailyActivityTaskRewardReq message. Does not implicitly {@link proto.Msg_ReceiveDailyActivityTaskRewardReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_ReceiveDailyActivityTaskRewardReq
         * @static
         * @param {proto.IMsg_ReceiveDailyActivityTaskRewardReq} m Msg_ReceiveDailyActivityTaskRewardReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_ReceiveDailyActivityTaskRewardReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.indexes != null && m.indexes.length) {
                w.uint32(10).fork();
                for (var i = 0; i < m.indexes.length; ++i)
                    w.int32(m.indexes[i]);
                w.ldelim();
            }
            return w;
        };

        /**
         * Decodes a Msg_ReceiveDailyActivityTaskRewardReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_ReceiveDailyActivityTaskRewardReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_ReceiveDailyActivityTaskRewardReq} Msg_ReceiveDailyActivityTaskRewardReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_ReceiveDailyActivityTaskRewardReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_ReceiveDailyActivityTaskRewardReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.indexes && m.indexes.length))
                        m.indexes = [];
                    if ((t & 7) === 2) {
                        var c2 = r.uint32() + r.pos;
                        while (r.pos < c2)
                            m.indexes.push(r.int32());
                    } else
                        m.indexes.push(r.int32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_ReceiveDailyActivityTaskRewardReq;
    })();

    proto.Msg_ReceiveDailyActivityTaskRewardRsp = (function() {

        /**
         * Properties of a Msg_ReceiveDailyActivityTaskRewardRsp.
         * @memberof proto
         * @interface IMsg_ReceiveDailyActivityTaskRewardRsp
         * @property {proto.ICommonError|null} [error] Msg_ReceiveDailyActivityTaskRewardRsp error
         * @property {Array.<number>|null} [indexes] Msg_ReceiveDailyActivityTaskRewardRsp indexes
         * @property {Array.<proto.IItem>|null} [rewards] Msg_ReceiveDailyActivityTaskRewardRsp rewards
         */

        /**
         * Constructs a new Msg_ReceiveDailyActivityTaskRewardRsp.
         * @memberof proto
         * @classdesc Represents a Msg_ReceiveDailyActivityTaskRewardRsp.
         * @implements IMsg_ReceiveDailyActivityTaskRewardRsp
         * @constructor
         * @param {proto.IMsg_ReceiveDailyActivityTaskRewardRsp=} [p] Properties to set
         */
        function Msg_ReceiveDailyActivityTaskRewardRsp(p) {
            this.indexes = [];
            this.rewards = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_ReceiveDailyActivityTaskRewardRsp error.
         * @member {proto.ICommonError|null|undefined} error
         * @memberof proto.Msg_ReceiveDailyActivityTaskRewardRsp
         * @instance
         */
        Msg_ReceiveDailyActivityTaskRewardRsp.prototype.error = null;

        /**
         * Msg_ReceiveDailyActivityTaskRewardRsp indexes.
         * @member {Array.<number>} indexes
         * @memberof proto.Msg_ReceiveDailyActivityTaskRewardRsp
         * @instance
         */
        Msg_ReceiveDailyActivityTaskRewardRsp.prototype.indexes = $util.emptyArray;

        /**
         * Msg_ReceiveDailyActivityTaskRewardRsp rewards.
         * @member {Array.<proto.IItem>} rewards
         * @memberof proto.Msg_ReceiveDailyActivityTaskRewardRsp
         * @instance
         */
        Msg_ReceiveDailyActivityTaskRewardRsp.prototype.rewards = $util.emptyArray;

        /**
         * Encodes the specified Msg_ReceiveDailyActivityTaskRewardRsp message. Does not implicitly {@link proto.Msg_ReceiveDailyActivityTaskRewardRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_ReceiveDailyActivityTaskRewardRsp
         * @static
         * @param {proto.IMsg_ReceiveDailyActivityTaskRewardRsp} m Msg_ReceiveDailyActivityTaskRewardRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_ReceiveDailyActivityTaskRewardRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.error != null && Object.hasOwnProperty.call(m, "error"))
                $root.proto.CommonError.encode(m.error, w.uint32(10).fork()).ldelim();
            if (m.indexes != null && m.indexes.length) {
                w.uint32(18).fork();
                for (var i = 0; i < m.indexes.length; ++i)
                    w.int32(m.indexes[i]);
                w.ldelim();
            }
            if (m.rewards != null && m.rewards.length) {
                for (var i = 0; i < m.rewards.length; ++i)
                    $root.proto.Item.encode(m.rewards[i], w.uint32(26).fork()).ldelim();
            }
            return w;
        };

        /**
         * Decodes a Msg_ReceiveDailyActivityTaskRewardRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_ReceiveDailyActivityTaskRewardRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_ReceiveDailyActivityTaskRewardRsp} Msg_ReceiveDailyActivityTaskRewardRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_ReceiveDailyActivityTaskRewardRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_ReceiveDailyActivityTaskRewardRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.error = $root.proto.CommonError.decode(r, r.uint32());
                    break;
                case 2:
                    if (!(m.indexes && m.indexes.length))
                        m.indexes = [];
                    if ((t & 7) === 2) {
                        var c2 = r.uint32() + r.pos;
                        while (r.pos < c2)
                            m.indexes.push(r.int32());
                    } else
                        m.indexes.push(r.int32());
                    break;
                case 3:
                    if (!(m.rewards && m.rewards.length))
                        m.rewards = [];
                    m.rewards.push($root.proto.Item.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_ReceiveDailyActivityTaskRewardRsp;
    })();

    proto.Msg_GetWeeklyTasksReq = (function() {

        /**
         * Properties of a Msg_GetWeeklyTasksReq.
         * @memberof proto
         * @interface IMsg_GetWeeklyTasksReq
         */

        /**
         * Constructs a new Msg_GetWeeklyTasksReq.
         * @memberof proto
         * @classdesc Represents a Msg_GetWeeklyTasksReq.
         * @implements IMsg_GetWeeklyTasksReq
         * @constructor
         * @param {proto.IMsg_GetWeeklyTasksReq=} [p] Properties to set
         */
        function Msg_GetWeeklyTasksReq(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Encodes the specified Msg_GetWeeklyTasksReq message. Does not implicitly {@link proto.Msg_GetWeeklyTasksReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_GetWeeklyTasksReq
         * @static
         * @param {proto.IMsg_GetWeeklyTasksReq} m Msg_GetWeeklyTasksReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_GetWeeklyTasksReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };

        /**
         * Decodes a Msg_GetWeeklyTasksReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_GetWeeklyTasksReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_GetWeeklyTasksReq} Msg_GetWeeklyTasksReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_GetWeeklyTasksReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_GetWeeklyTasksReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_GetWeeklyTasksReq;
    })();

    proto.Msg_GetWeeklyTasksRsp = (function() {

        /**
         * Properties of a Msg_GetWeeklyTasksRsp.
         * @memberof proto
         * @interface IMsg_GetWeeklyTasksRsp
         * @property {Array.<proto.ITask>|null} [tasks] Msg_GetWeeklyTasksRsp tasks
         * @property {Array.<number>|null} [ReceivedIndexes] Msg_GetWeeklyTasksRsp ReceivedIndexes
         */

        /**
         * Constructs a new Msg_GetWeeklyTasksRsp.
         * @memberof proto
         * @classdesc Represents a Msg_GetWeeklyTasksRsp.
         * @implements IMsg_GetWeeklyTasksRsp
         * @constructor
         * @param {proto.IMsg_GetWeeklyTasksRsp=} [p] Properties to set
         */
        function Msg_GetWeeklyTasksRsp(p) {
            this.tasks = [];
            this.ReceivedIndexes = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_GetWeeklyTasksRsp tasks.
         * @member {Array.<proto.ITask>} tasks
         * @memberof proto.Msg_GetWeeklyTasksRsp
         * @instance
         */
        Msg_GetWeeklyTasksRsp.prototype.tasks = $util.emptyArray;

        /**
         * Msg_GetWeeklyTasksRsp ReceivedIndexes.
         * @member {Array.<number>} ReceivedIndexes
         * @memberof proto.Msg_GetWeeklyTasksRsp
         * @instance
         */
        Msg_GetWeeklyTasksRsp.prototype.ReceivedIndexes = $util.emptyArray;

        /**
         * Encodes the specified Msg_GetWeeklyTasksRsp message. Does not implicitly {@link proto.Msg_GetWeeklyTasksRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_GetWeeklyTasksRsp
         * @static
         * @param {proto.IMsg_GetWeeklyTasksRsp} m Msg_GetWeeklyTasksRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_GetWeeklyTasksRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.tasks != null && m.tasks.length) {
                for (var i = 0; i < m.tasks.length; ++i)
                    $root.proto.Task.encode(m.tasks[i], w.uint32(10).fork()).ldelim();
            }
            if (m.ReceivedIndexes != null && m.ReceivedIndexes.length) {
                w.uint32(18).fork();
                for (var i = 0; i < m.ReceivedIndexes.length; ++i)
                    w.int32(m.ReceivedIndexes[i]);
                w.ldelim();
            }
            return w;
        };

        /**
         * Decodes a Msg_GetWeeklyTasksRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_GetWeeklyTasksRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_GetWeeklyTasksRsp} Msg_GetWeeklyTasksRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_GetWeeklyTasksRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_GetWeeklyTasksRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.tasks && m.tasks.length))
                        m.tasks = [];
                    m.tasks.push($root.proto.Task.decode(r, r.uint32()));
                    break;
                case 2:
                    if (!(m.ReceivedIndexes && m.ReceivedIndexes.length))
                        m.ReceivedIndexes = [];
                    if ((t & 7) === 2) {
                        var c2 = r.uint32() + r.pos;
                        while (r.pos < c2)
                            m.ReceivedIndexes.push(r.int32());
                    } else
                        m.ReceivedIndexes.push(r.int32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_GetWeeklyTasksRsp;
    })();

    proto.Msg_ReceiveWeeklyTaskRewardReq = (function() {

        /**
         * Properties of a Msg_ReceiveWeeklyTaskRewardReq.
         * @memberof proto
         * @interface IMsg_ReceiveWeeklyTaskRewardReq
         * @property {Array.<number>|null} [taskIds] Msg_ReceiveWeeklyTaskRewardReq taskIds
         */

        /**
         * Constructs a new Msg_ReceiveWeeklyTaskRewardReq.
         * @memberof proto
         * @classdesc Represents a Msg_ReceiveWeeklyTaskRewardReq.
         * @implements IMsg_ReceiveWeeklyTaskRewardReq
         * @constructor
         * @param {proto.IMsg_ReceiveWeeklyTaskRewardReq=} [p] Properties to set
         */
        function Msg_ReceiveWeeklyTaskRewardReq(p) {
            this.taskIds = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_ReceiveWeeklyTaskRewardReq taskIds.
         * @member {Array.<number>} taskIds
         * @memberof proto.Msg_ReceiveWeeklyTaskRewardReq
         * @instance
         */
        Msg_ReceiveWeeklyTaskRewardReq.prototype.taskIds = $util.emptyArray;

        /**
         * Encodes the specified Msg_ReceiveWeeklyTaskRewardReq message. Does not implicitly {@link proto.Msg_ReceiveWeeklyTaskRewardReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_ReceiveWeeklyTaskRewardReq
         * @static
         * @param {proto.IMsg_ReceiveWeeklyTaskRewardReq} m Msg_ReceiveWeeklyTaskRewardReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_ReceiveWeeklyTaskRewardReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.taskIds != null && m.taskIds.length) {
                w.uint32(10).fork();
                for (var i = 0; i < m.taskIds.length; ++i)
                    w.int32(m.taskIds[i]);
                w.ldelim();
            }
            return w;
        };

        /**
         * Decodes a Msg_ReceiveWeeklyTaskRewardReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_ReceiveWeeklyTaskRewardReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_ReceiveWeeklyTaskRewardReq} Msg_ReceiveWeeklyTaskRewardReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_ReceiveWeeklyTaskRewardReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_ReceiveWeeklyTaskRewardReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.taskIds && m.taskIds.length))
                        m.taskIds = [];
                    if ((t & 7) === 2) {
                        var c2 = r.uint32() + r.pos;
                        while (r.pos < c2)
                            m.taskIds.push(r.int32());
                    } else
                        m.taskIds.push(r.int32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_ReceiveWeeklyTaskRewardReq;
    })();

    proto.Msg_ReceiveWeeklyTaskRewardRsp = (function() {

        /**
         * Properties of a Msg_ReceiveWeeklyTaskRewardRsp.
         * @memberof proto
         * @interface IMsg_ReceiveWeeklyTaskRewardRsp
         * @property {proto.ICommonError|null} [error] Msg_ReceiveWeeklyTaskRewardRsp error
         * @property {Array.<number>|null} [taskIds] Msg_ReceiveWeeklyTaskRewardRsp taskIds
         * @property {Array.<proto.IItem>|null} [rewards] Msg_ReceiveWeeklyTaskRewardRsp rewards
         */

        /**
         * Constructs a new Msg_ReceiveWeeklyTaskRewardRsp.
         * @memberof proto
         * @classdesc Represents a Msg_ReceiveWeeklyTaskRewardRsp.
         * @implements IMsg_ReceiveWeeklyTaskRewardRsp
         * @constructor
         * @param {proto.IMsg_ReceiveWeeklyTaskRewardRsp=} [p] Properties to set
         */
        function Msg_ReceiveWeeklyTaskRewardRsp(p) {
            this.taskIds = [];
            this.rewards = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_ReceiveWeeklyTaskRewardRsp error.
         * @member {proto.ICommonError|null|undefined} error
         * @memberof proto.Msg_ReceiveWeeklyTaskRewardRsp
         * @instance
         */
        Msg_ReceiveWeeklyTaskRewardRsp.prototype.error = null;

        /**
         * Msg_ReceiveWeeklyTaskRewardRsp taskIds.
         * @member {Array.<number>} taskIds
         * @memberof proto.Msg_ReceiveWeeklyTaskRewardRsp
         * @instance
         */
        Msg_ReceiveWeeklyTaskRewardRsp.prototype.taskIds = $util.emptyArray;

        /**
         * Msg_ReceiveWeeklyTaskRewardRsp rewards.
         * @member {Array.<proto.IItem>} rewards
         * @memberof proto.Msg_ReceiveWeeklyTaskRewardRsp
         * @instance
         */
        Msg_ReceiveWeeklyTaskRewardRsp.prototype.rewards = $util.emptyArray;

        /**
         * Encodes the specified Msg_ReceiveWeeklyTaskRewardRsp message. Does not implicitly {@link proto.Msg_ReceiveWeeklyTaskRewardRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_ReceiveWeeklyTaskRewardRsp
         * @static
         * @param {proto.IMsg_ReceiveWeeklyTaskRewardRsp} m Msg_ReceiveWeeklyTaskRewardRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_ReceiveWeeklyTaskRewardRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.error != null && Object.hasOwnProperty.call(m, "error"))
                $root.proto.CommonError.encode(m.error, w.uint32(10).fork()).ldelim();
            if (m.taskIds != null && m.taskIds.length) {
                w.uint32(18).fork();
                for (var i = 0; i < m.taskIds.length; ++i)
                    w.int32(m.taskIds[i]);
                w.ldelim();
            }
            if (m.rewards != null && m.rewards.length) {
                for (var i = 0; i < m.rewards.length; ++i)
                    $root.proto.Item.encode(m.rewards[i], w.uint32(26).fork()).ldelim();
            }
            return w;
        };

        /**
         * Decodes a Msg_ReceiveWeeklyTaskRewardRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_ReceiveWeeklyTaskRewardRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_ReceiveWeeklyTaskRewardRsp} Msg_ReceiveWeeklyTaskRewardRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_ReceiveWeeklyTaskRewardRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_ReceiveWeeklyTaskRewardRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.error = $root.proto.CommonError.decode(r, r.uint32());
                    break;
                case 2:
                    if (!(m.taskIds && m.taskIds.length))
                        m.taskIds = [];
                    if ((t & 7) === 2) {
                        var c2 = r.uint32() + r.pos;
                        while (r.pos < c2)
                            m.taskIds.push(r.int32());
                    } else
                        m.taskIds.push(r.int32());
                    break;
                case 3:
                    if (!(m.rewards && m.rewards.length))
                        m.rewards = [];
                    m.rewards.push($root.proto.Item.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_ReceiveWeeklyTaskRewardRsp;
    })();

    proto.Msg_ReceiveWeeklyActivityTaskRewardReq = (function() {

        /**
         * Properties of a Msg_ReceiveWeeklyActivityTaskRewardReq.
         * @memberof proto
         * @interface IMsg_ReceiveWeeklyActivityTaskRewardReq
         * @property {Array.<number>|null} [indexes] Msg_ReceiveWeeklyActivityTaskRewardReq indexes
         */

        /**
         * Constructs a new Msg_ReceiveWeeklyActivityTaskRewardReq.
         * @memberof proto
         * @classdesc Represents a Msg_ReceiveWeeklyActivityTaskRewardReq.
         * @implements IMsg_ReceiveWeeklyActivityTaskRewardReq
         * @constructor
         * @param {proto.IMsg_ReceiveWeeklyActivityTaskRewardReq=} [p] Properties to set
         */
        function Msg_ReceiveWeeklyActivityTaskRewardReq(p) {
            this.indexes = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_ReceiveWeeklyActivityTaskRewardReq indexes.
         * @member {Array.<number>} indexes
         * @memberof proto.Msg_ReceiveWeeklyActivityTaskRewardReq
         * @instance
         */
        Msg_ReceiveWeeklyActivityTaskRewardReq.prototype.indexes = $util.emptyArray;

        /**
         * Encodes the specified Msg_ReceiveWeeklyActivityTaskRewardReq message. Does not implicitly {@link proto.Msg_ReceiveWeeklyActivityTaskRewardReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_ReceiveWeeklyActivityTaskRewardReq
         * @static
         * @param {proto.IMsg_ReceiveWeeklyActivityTaskRewardReq} m Msg_ReceiveWeeklyActivityTaskRewardReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_ReceiveWeeklyActivityTaskRewardReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.indexes != null && m.indexes.length) {
                w.uint32(10).fork();
                for (var i = 0; i < m.indexes.length; ++i)
                    w.int32(m.indexes[i]);
                w.ldelim();
            }
            return w;
        };

        /**
         * Decodes a Msg_ReceiveWeeklyActivityTaskRewardReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_ReceiveWeeklyActivityTaskRewardReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_ReceiveWeeklyActivityTaskRewardReq} Msg_ReceiveWeeklyActivityTaskRewardReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_ReceiveWeeklyActivityTaskRewardReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_ReceiveWeeklyActivityTaskRewardReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.indexes && m.indexes.length))
                        m.indexes = [];
                    if ((t & 7) === 2) {
                        var c2 = r.uint32() + r.pos;
                        while (r.pos < c2)
                            m.indexes.push(r.int32());
                    } else
                        m.indexes.push(r.int32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_ReceiveWeeklyActivityTaskRewardReq;
    })();

    proto.Msg_ReceiveWeeklyActivityTaskRewardRsp = (function() {

        /**
         * Properties of a Msg_ReceiveWeeklyActivityTaskRewardRsp.
         * @memberof proto
         * @interface IMsg_ReceiveWeeklyActivityTaskRewardRsp
         * @property {proto.ICommonError|null} [error] Msg_ReceiveWeeklyActivityTaskRewardRsp error
         * @property {Array.<number>|null} [indexes] Msg_ReceiveWeeklyActivityTaskRewardRsp indexes
         * @property {Array.<proto.IItem>|null} [rewards] Msg_ReceiveWeeklyActivityTaskRewardRsp rewards
         */

        /**
         * Constructs a new Msg_ReceiveWeeklyActivityTaskRewardRsp.
         * @memberof proto
         * @classdesc Represents a Msg_ReceiveWeeklyActivityTaskRewardRsp.
         * @implements IMsg_ReceiveWeeklyActivityTaskRewardRsp
         * @constructor
         * @param {proto.IMsg_ReceiveWeeklyActivityTaskRewardRsp=} [p] Properties to set
         */
        function Msg_ReceiveWeeklyActivityTaskRewardRsp(p) {
            this.indexes = [];
            this.rewards = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_ReceiveWeeklyActivityTaskRewardRsp error.
         * @member {proto.ICommonError|null|undefined} error
         * @memberof proto.Msg_ReceiveWeeklyActivityTaskRewardRsp
         * @instance
         */
        Msg_ReceiveWeeklyActivityTaskRewardRsp.prototype.error = null;

        /**
         * Msg_ReceiveWeeklyActivityTaskRewardRsp indexes.
         * @member {Array.<number>} indexes
         * @memberof proto.Msg_ReceiveWeeklyActivityTaskRewardRsp
         * @instance
         */
        Msg_ReceiveWeeklyActivityTaskRewardRsp.prototype.indexes = $util.emptyArray;

        /**
         * Msg_ReceiveWeeklyActivityTaskRewardRsp rewards.
         * @member {Array.<proto.IItem>} rewards
         * @memberof proto.Msg_ReceiveWeeklyActivityTaskRewardRsp
         * @instance
         */
        Msg_ReceiveWeeklyActivityTaskRewardRsp.prototype.rewards = $util.emptyArray;

        /**
         * Encodes the specified Msg_ReceiveWeeklyActivityTaskRewardRsp message. Does not implicitly {@link proto.Msg_ReceiveWeeklyActivityTaskRewardRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_ReceiveWeeklyActivityTaskRewardRsp
         * @static
         * @param {proto.IMsg_ReceiveWeeklyActivityTaskRewardRsp} m Msg_ReceiveWeeklyActivityTaskRewardRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_ReceiveWeeklyActivityTaskRewardRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.error != null && Object.hasOwnProperty.call(m, "error"))
                $root.proto.CommonError.encode(m.error, w.uint32(10).fork()).ldelim();
            if (m.indexes != null && m.indexes.length) {
                w.uint32(18).fork();
                for (var i = 0; i < m.indexes.length; ++i)
                    w.int32(m.indexes[i]);
                w.ldelim();
            }
            if (m.rewards != null && m.rewards.length) {
                for (var i = 0; i < m.rewards.length; ++i)
                    $root.proto.Item.encode(m.rewards[i], w.uint32(26).fork()).ldelim();
            }
            return w;
        };

        /**
         * Decodes a Msg_ReceiveWeeklyActivityTaskRewardRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_ReceiveWeeklyActivityTaskRewardRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_ReceiveWeeklyActivityTaskRewardRsp} Msg_ReceiveWeeklyActivityTaskRewardRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_ReceiveWeeklyActivityTaskRewardRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_ReceiveWeeklyActivityTaskRewardRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.error = $root.proto.CommonError.decode(r, r.uint32());
                    break;
                case 2:
                    if (!(m.indexes && m.indexes.length))
                        m.indexes = [];
                    if ((t & 7) === 2) {
                        var c2 = r.uint32() + r.pos;
                        while (r.pos < c2)
                            m.indexes.push(r.int32());
                    } else
                        m.indexes.push(r.int32());
                    break;
                case 3:
                    if (!(m.rewards && m.rewards.length))
                        m.rewards = [];
                    m.rewards.push($root.proto.Item.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_ReceiveWeeklyActivityTaskRewardRsp;
    })();

    proto.Msg_GetAchievementTasksReq = (function() {

        /**
         * Properties of a Msg_GetAchievementTasksReq.
         * @memberof proto
         * @interface IMsg_GetAchievementTasksReq
         */

        /**
         * Constructs a new Msg_GetAchievementTasksReq.
         * @memberof proto
         * @classdesc Represents a Msg_GetAchievementTasksReq.
         * @implements IMsg_GetAchievementTasksReq
         * @constructor
         * @param {proto.IMsg_GetAchievementTasksReq=} [p] Properties to set
         */
        function Msg_GetAchievementTasksReq(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Encodes the specified Msg_GetAchievementTasksReq message. Does not implicitly {@link proto.Msg_GetAchievementTasksReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_GetAchievementTasksReq
         * @static
         * @param {proto.IMsg_GetAchievementTasksReq} m Msg_GetAchievementTasksReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_GetAchievementTasksReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };

        /**
         * Decodes a Msg_GetAchievementTasksReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_GetAchievementTasksReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_GetAchievementTasksReq} Msg_GetAchievementTasksReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_GetAchievementTasksReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_GetAchievementTasksReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_GetAchievementTasksReq;
    })();

    proto.Msg_GetAchievementTasksRsp = (function() {

        /**
         * Properties of a Msg_GetAchievementTasksRsp.
         * @memberof proto
         * @interface IMsg_GetAchievementTasksRsp
         * @property {Array.<proto.ITask>|null} [tasks] Msg_GetAchievementTasksRsp tasks
         */

        /**
         * Constructs a new Msg_GetAchievementTasksRsp.
         * @memberof proto
         * @classdesc Represents a Msg_GetAchievementTasksRsp.
         * @implements IMsg_GetAchievementTasksRsp
         * @constructor
         * @param {proto.IMsg_GetAchievementTasksRsp=} [p] Properties to set
         */
        function Msg_GetAchievementTasksRsp(p) {
            this.tasks = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_GetAchievementTasksRsp tasks.
         * @member {Array.<proto.ITask>} tasks
         * @memberof proto.Msg_GetAchievementTasksRsp
         * @instance
         */
        Msg_GetAchievementTasksRsp.prototype.tasks = $util.emptyArray;

        /**
         * Encodes the specified Msg_GetAchievementTasksRsp message. Does not implicitly {@link proto.Msg_GetAchievementTasksRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_GetAchievementTasksRsp
         * @static
         * @param {proto.IMsg_GetAchievementTasksRsp} m Msg_GetAchievementTasksRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_GetAchievementTasksRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.tasks != null && m.tasks.length) {
                for (var i = 0; i < m.tasks.length; ++i)
                    $root.proto.Task.encode(m.tasks[i], w.uint32(10).fork()).ldelim();
            }
            return w;
        };

        /**
         * Decodes a Msg_GetAchievementTasksRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_GetAchievementTasksRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_GetAchievementTasksRsp} Msg_GetAchievementTasksRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_GetAchievementTasksRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_GetAchievementTasksRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.tasks && m.tasks.length))
                        m.tasks = [];
                    m.tasks.push($root.proto.Task.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_GetAchievementTasksRsp;
    })();

    proto.Msg_ReceiveAchievementTaskRewardReq = (function() {

        /**
         * Properties of a Msg_ReceiveAchievementTaskRewardReq.
         * @memberof proto
         * @interface IMsg_ReceiveAchievementTaskRewardReq
         * @property {Array.<number>|null} [taskIds] Msg_ReceiveAchievementTaskRewardReq taskIds
         */

        /**
         * Constructs a new Msg_ReceiveAchievementTaskRewardReq.
         * @memberof proto
         * @classdesc Represents a Msg_ReceiveAchievementTaskRewardReq.
         * @implements IMsg_ReceiveAchievementTaskRewardReq
         * @constructor
         * @param {proto.IMsg_ReceiveAchievementTaskRewardReq=} [p] Properties to set
         */
        function Msg_ReceiveAchievementTaskRewardReq(p) {
            this.taskIds = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_ReceiveAchievementTaskRewardReq taskIds.
         * @member {Array.<number>} taskIds
         * @memberof proto.Msg_ReceiveAchievementTaskRewardReq
         * @instance
         */
        Msg_ReceiveAchievementTaskRewardReq.prototype.taskIds = $util.emptyArray;

        /**
         * Encodes the specified Msg_ReceiveAchievementTaskRewardReq message. Does not implicitly {@link proto.Msg_ReceiveAchievementTaskRewardReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_ReceiveAchievementTaskRewardReq
         * @static
         * @param {proto.IMsg_ReceiveAchievementTaskRewardReq} m Msg_ReceiveAchievementTaskRewardReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_ReceiveAchievementTaskRewardReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.taskIds != null && m.taskIds.length) {
                w.uint32(10).fork();
                for (var i = 0; i < m.taskIds.length; ++i)
                    w.int32(m.taskIds[i]);
                w.ldelim();
            }
            return w;
        };

        /**
         * Decodes a Msg_ReceiveAchievementTaskRewardReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_ReceiveAchievementTaskRewardReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_ReceiveAchievementTaskRewardReq} Msg_ReceiveAchievementTaskRewardReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_ReceiveAchievementTaskRewardReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_ReceiveAchievementTaskRewardReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.taskIds && m.taskIds.length))
                        m.taskIds = [];
                    if ((t & 7) === 2) {
                        var c2 = r.uint32() + r.pos;
                        while (r.pos < c2)
                            m.taskIds.push(r.int32());
                    } else
                        m.taskIds.push(r.int32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_ReceiveAchievementTaskRewardReq;
    })();

    proto.Msg_ReceiveAchievementTaskRewardRsp = (function() {

        /**
         * Properties of a Msg_ReceiveAchievementTaskRewardRsp.
         * @memberof proto
         * @interface IMsg_ReceiveAchievementTaskRewardRsp
         * @property {proto.ICommonError|null} [error] Msg_ReceiveAchievementTaskRewardRsp error
         * @property {Array.<number>|null} [taskIds] Msg_ReceiveAchievementTaskRewardRsp taskIds
         * @property {Array.<proto.IItem>|null} [rewards] Msg_ReceiveAchievementTaskRewardRsp rewards
         */

        /**
         * Constructs a new Msg_ReceiveAchievementTaskRewardRsp.
         * @memberof proto
         * @classdesc Represents a Msg_ReceiveAchievementTaskRewardRsp.
         * @implements IMsg_ReceiveAchievementTaskRewardRsp
         * @constructor
         * @param {proto.IMsg_ReceiveAchievementTaskRewardRsp=} [p] Properties to set
         */
        function Msg_ReceiveAchievementTaskRewardRsp(p) {
            this.taskIds = [];
            this.rewards = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_ReceiveAchievementTaskRewardRsp error.
         * @member {proto.ICommonError|null|undefined} error
         * @memberof proto.Msg_ReceiveAchievementTaskRewardRsp
         * @instance
         */
        Msg_ReceiveAchievementTaskRewardRsp.prototype.error = null;

        /**
         * Msg_ReceiveAchievementTaskRewardRsp taskIds.
         * @member {Array.<number>} taskIds
         * @memberof proto.Msg_ReceiveAchievementTaskRewardRsp
         * @instance
         */
        Msg_ReceiveAchievementTaskRewardRsp.prototype.taskIds = $util.emptyArray;

        /**
         * Msg_ReceiveAchievementTaskRewardRsp rewards.
         * @member {Array.<proto.IItem>} rewards
         * @memberof proto.Msg_ReceiveAchievementTaskRewardRsp
         * @instance
         */
        Msg_ReceiveAchievementTaskRewardRsp.prototype.rewards = $util.emptyArray;

        /**
         * Encodes the specified Msg_ReceiveAchievementTaskRewardRsp message. Does not implicitly {@link proto.Msg_ReceiveAchievementTaskRewardRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_ReceiveAchievementTaskRewardRsp
         * @static
         * @param {proto.IMsg_ReceiveAchievementTaskRewardRsp} m Msg_ReceiveAchievementTaskRewardRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_ReceiveAchievementTaskRewardRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.error != null && Object.hasOwnProperty.call(m, "error"))
                $root.proto.CommonError.encode(m.error, w.uint32(10).fork()).ldelim();
            if (m.taskIds != null && m.taskIds.length) {
                w.uint32(18).fork();
                for (var i = 0; i < m.taskIds.length; ++i)
                    w.int32(m.taskIds[i]);
                w.ldelim();
            }
            if (m.rewards != null && m.rewards.length) {
                for (var i = 0; i < m.rewards.length; ++i)
                    $root.proto.Item.encode(m.rewards[i], w.uint32(26).fork()).ldelim();
            }
            return w;
        };

        /**
         * Decodes a Msg_ReceiveAchievementTaskRewardRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_ReceiveAchievementTaskRewardRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_ReceiveAchievementTaskRewardRsp} Msg_ReceiveAchievementTaskRewardRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_ReceiveAchievementTaskRewardRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_ReceiveAchievementTaskRewardRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.error = $root.proto.CommonError.decode(r, r.uint32());
                    break;
                case 2:
                    if (!(m.taskIds && m.taskIds.length))
                        m.taskIds = [];
                    if ((t & 7) === 2) {
                        var c2 = r.uint32() + r.pos;
                        while (r.pos < c2)
                            m.taskIds.push(r.int32());
                    } else
                        m.taskIds.push(r.int32());
                    break;
                case 3:
                    if (!(m.rewards && m.rewards.length))
                        m.rewards = [];
                    m.rewards.push($root.proto.Item.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_ReceiveAchievementTaskRewardRsp;
    })();

    proto.AdvWatchData = (function() {

        /**
         * Properties of an AdvWatchData.
         * @memberof proto
         * @interface IAdvWatchData
         * @property {number|null} [type] AdvWatchData type
         * @property {number|null} [count] AdvWatchData count
         */

        /**
         * Constructs a new AdvWatchData.
         * @memberof proto
         * @classdesc Represents an AdvWatchData.
         * @implements IAdvWatchData
         * @constructor
         * @param {proto.IAdvWatchData=} [p] Properties to set
         */
        function AdvWatchData(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * AdvWatchData type.
         * @member {number} type
         * @memberof proto.AdvWatchData
         * @instance
         */
        AdvWatchData.prototype.type = 0;

        /**
         * AdvWatchData count.
         * @member {number} count
         * @memberof proto.AdvWatchData
         * @instance
         */
        AdvWatchData.prototype.count = 0;

        /**
         * Encodes the specified AdvWatchData message. Does not implicitly {@link proto.AdvWatchData.verify|verify} messages.
         * @function encode
         * @memberof proto.AdvWatchData
         * @static
         * @param {proto.IAdvWatchData} m AdvWatchData message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        AdvWatchData.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.type != null && Object.hasOwnProperty.call(m, "type"))
                w.uint32(8).int32(m.type);
            if (m.count != null && Object.hasOwnProperty.call(m, "count"))
                w.uint32(16).int32(m.count);
            return w;
        };

        /**
         * Decodes an AdvWatchData message from the specified reader or buffer.
         * @function decode
         * @memberof proto.AdvWatchData
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.AdvWatchData} AdvWatchData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        AdvWatchData.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.AdvWatchData();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.type = r.int32();
                    break;
                case 2:
                    m.count = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return AdvWatchData;
    })();

    proto.AdvPbData = (function() {

        /**
         * Properties of an AdvPbData.
         * @memberof proto
         * @interface IAdvPbData
         * @property {Array.<proto.IAdvWatchData>|null} [data] AdvPbData data
         */

        /**
         * Constructs a new AdvPbData.
         * @memberof proto
         * @classdesc Represents an AdvPbData.
         * @implements IAdvPbData
         * @constructor
         * @param {proto.IAdvPbData=} [p] Properties to set
         */
        function AdvPbData(p) {
            this.data = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * AdvPbData data.
         * @member {Array.<proto.IAdvWatchData>} data
         * @memberof proto.AdvPbData
         * @instance
         */
        AdvPbData.prototype.data = $util.emptyArray;

        /**
         * Encodes the specified AdvPbData message. Does not implicitly {@link proto.AdvPbData.verify|verify} messages.
         * @function encode
         * @memberof proto.AdvPbData
         * @static
         * @param {proto.IAdvPbData} m AdvPbData message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        AdvPbData.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.data != null && m.data.length) {
                for (var i = 0; i < m.data.length; ++i)
                    $root.proto.AdvWatchData.encode(m.data[i], w.uint32(10).fork()).ldelim();
            }
            return w;
        };

        /**
         * Decodes an AdvPbData message from the specified reader or buffer.
         * @function decode
         * @memberof proto.AdvPbData
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.AdvPbData} AdvPbData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        AdvPbData.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.AdvPbData();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.data && m.data.length))
                        m.data = [];
                    m.data.push($root.proto.AdvWatchData.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return AdvPbData;
    })();

    proto.Msg_AdvWatchDataPush = (function() {

        /**
         * Properties of a Msg_AdvWatchDataPush.
         * @memberof proto
         * @interface IMsg_AdvWatchDataPush
         * @property {proto.IAdvWatchData|null} [data] Msg_AdvWatchDataPush data
         */

        /**
         * Constructs a new Msg_AdvWatchDataPush.
         * @memberof proto
         * @classdesc Represents a Msg_AdvWatchDataPush.
         * @implements IMsg_AdvWatchDataPush
         * @constructor
         * @param {proto.IMsg_AdvWatchDataPush=} [p] Properties to set
         */
        function Msg_AdvWatchDataPush(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_AdvWatchDataPush data.
         * @member {proto.IAdvWatchData|null|undefined} data
         * @memberof proto.Msg_AdvWatchDataPush
         * @instance
         */
        Msg_AdvWatchDataPush.prototype.data = null;

        /**
         * Encodes the specified Msg_AdvWatchDataPush message. Does not implicitly {@link proto.Msg_AdvWatchDataPush.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_AdvWatchDataPush
         * @static
         * @param {proto.IMsg_AdvWatchDataPush} m Msg_AdvWatchDataPush message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_AdvWatchDataPush.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.data != null && Object.hasOwnProperty.call(m, "data"))
                $root.proto.AdvWatchData.encode(m.data, w.uint32(10).fork()).ldelim();
            return w;
        };

        /**
         * Decodes a Msg_AdvWatchDataPush message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_AdvWatchDataPush
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_AdvWatchDataPush} Msg_AdvWatchDataPush
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_AdvWatchDataPush.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_AdvWatchDataPush();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.data = $root.proto.AdvWatchData.decode(r, r.uint32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_AdvWatchDataPush;
    })();

    proto.Msg_GetQuestLogsReq = (function() {

        /**
         * Properties of a Msg_GetQuestLogsReq.
         * @memberof proto
         * @interface IMsg_GetQuestLogsReq
         */

        /**
         * Constructs a new Msg_GetQuestLogsReq.
         * @memberof proto
         * @classdesc Represents a Msg_GetQuestLogsReq.
         * @implements IMsg_GetQuestLogsReq
         * @constructor
         * @param {proto.IMsg_GetQuestLogsReq=} [p] Properties to set
         */
        function Msg_GetQuestLogsReq(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Encodes the specified Msg_GetQuestLogsReq message. Does not implicitly {@link proto.Msg_GetQuestLogsReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_GetQuestLogsReq
         * @static
         * @param {proto.IMsg_GetQuestLogsReq} m Msg_GetQuestLogsReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_GetQuestLogsReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };

        /**
         * Decodes a Msg_GetQuestLogsReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_GetQuestLogsReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_GetQuestLogsReq} Msg_GetQuestLogsReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_GetQuestLogsReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_GetQuestLogsReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_GetQuestLogsReq;
    })();

    proto.Msg_GetQuestLogsRsp = (function() {

        /**
         * Properties of a Msg_GetQuestLogsRsp.
         * @memberof proto
         * @interface IMsg_GetQuestLogsRsp
         * @property {Array.<proto.ITask>|null} [tasks] Msg_GetQuestLogsRsp tasks
         * @property {number|null} [level] Msg_GetQuestLogsRsp level
         */

        /**
         * Constructs a new Msg_GetQuestLogsRsp.
         * @memberof proto
         * @classdesc Represents a Msg_GetQuestLogsRsp.
         * @implements IMsg_GetQuestLogsRsp
         * @constructor
         * @param {proto.IMsg_GetQuestLogsRsp=} [p] Properties to set
         */
        function Msg_GetQuestLogsRsp(p) {
            this.tasks = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_GetQuestLogsRsp tasks.
         * @member {Array.<proto.ITask>} tasks
         * @memberof proto.Msg_GetQuestLogsRsp
         * @instance
         */
        Msg_GetQuestLogsRsp.prototype.tasks = $util.emptyArray;

        /**
         * Msg_GetQuestLogsRsp level.
         * @member {number} level
         * @memberof proto.Msg_GetQuestLogsRsp
         * @instance
         */
        Msg_GetQuestLogsRsp.prototype.level = 0;

        /**
         * Encodes the specified Msg_GetQuestLogsRsp message. Does not implicitly {@link proto.Msg_GetQuestLogsRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_GetQuestLogsRsp
         * @static
         * @param {proto.IMsg_GetQuestLogsRsp} m Msg_GetQuestLogsRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_GetQuestLogsRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.tasks != null && m.tasks.length) {
                for (var i = 0; i < m.tasks.length; ++i)
                    $root.proto.Task.encode(m.tasks[i], w.uint32(10).fork()).ldelim();
            }
            if (m.level != null && Object.hasOwnProperty.call(m, "level"))
                w.uint32(16).int32(m.level);
            return w;
        };

        /**
         * Decodes a Msg_GetQuestLogsRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_GetQuestLogsRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_GetQuestLogsRsp} Msg_GetQuestLogsRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_GetQuestLogsRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_GetQuestLogsRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.tasks && m.tasks.length))
                        m.tasks = [];
                    m.tasks.push($root.proto.Task.decode(r, r.uint32()));
                    break;
                case 2:
                    m.level = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_GetQuestLogsRsp;
    })();

    proto.Msg_ReceiveQuestLogRewardReq = (function() {

        /**
         * Properties of a Msg_ReceiveQuestLogRewardReq.
         * @memberof proto
         * @interface IMsg_ReceiveQuestLogRewardReq
         * @property {Array.<number>|null} [taskIds] Msg_ReceiveQuestLogRewardReq taskIds
         */

        /**
         * Constructs a new Msg_ReceiveQuestLogRewardReq.
         * @memberof proto
         * @classdesc Represents a Msg_ReceiveQuestLogRewardReq.
         * @implements IMsg_ReceiveQuestLogRewardReq
         * @constructor
         * @param {proto.IMsg_ReceiveQuestLogRewardReq=} [p] Properties to set
         */
        function Msg_ReceiveQuestLogRewardReq(p) {
            this.taskIds = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_ReceiveQuestLogRewardReq taskIds.
         * @member {Array.<number>} taskIds
         * @memberof proto.Msg_ReceiveQuestLogRewardReq
         * @instance
         */
        Msg_ReceiveQuestLogRewardReq.prototype.taskIds = $util.emptyArray;

        /**
         * Encodes the specified Msg_ReceiveQuestLogRewardReq message. Does not implicitly {@link proto.Msg_ReceiveQuestLogRewardReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_ReceiveQuestLogRewardReq
         * @static
         * @param {proto.IMsg_ReceiveQuestLogRewardReq} m Msg_ReceiveQuestLogRewardReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_ReceiveQuestLogRewardReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.taskIds != null && m.taskIds.length) {
                w.uint32(10).fork();
                for (var i = 0; i < m.taskIds.length; ++i)
                    w.int32(m.taskIds[i]);
                w.ldelim();
            }
            return w;
        };

        /**
         * Decodes a Msg_ReceiveQuestLogRewardReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_ReceiveQuestLogRewardReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_ReceiveQuestLogRewardReq} Msg_ReceiveQuestLogRewardReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_ReceiveQuestLogRewardReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_ReceiveQuestLogRewardReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.taskIds && m.taskIds.length))
                        m.taskIds = [];
                    if ((t & 7) === 2) {
                        var c2 = r.uint32() + r.pos;
                        while (r.pos < c2)
                            m.taskIds.push(r.int32());
                    } else
                        m.taskIds.push(r.int32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_ReceiveQuestLogRewardReq;
    })();

    proto.Msg_ReceiveQuestLogRewardRsp = (function() {

        /**
         * Properties of a Msg_ReceiveQuestLogRewardRsp.
         * @memberof proto
         * @interface IMsg_ReceiveQuestLogRewardRsp
         * @property {proto.ICommonError|null} [error] Msg_ReceiveQuestLogRewardRsp error
         * @property {Array.<number>|null} [taskIds] Msg_ReceiveQuestLogRewardRsp taskIds
         * @property {Array.<proto.IItem>|null} [rewards] Msg_ReceiveQuestLogRewardRsp rewards
         */

        /**
         * Constructs a new Msg_ReceiveQuestLogRewardRsp.
         * @memberof proto
         * @classdesc Represents a Msg_ReceiveQuestLogRewardRsp.
         * @implements IMsg_ReceiveQuestLogRewardRsp
         * @constructor
         * @param {proto.IMsg_ReceiveQuestLogRewardRsp=} [p] Properties to set
         */
        function Msg_ReceiveQuestLogRewardRsp(p) {
            this.taskIds = [];
            this.rewards = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_ReceiveQuestLogRewardRsp error.
         * @member {proto.ICommonError|null|undefined} error
         * @memberof proto.Msg_ReceiveQuestLogRewardRsp
         * @instance
         */
        Msg_ReceiveQuestLogRewardRsp.prototype.error = null;

        /**
         * Msg_ReceiveQuestLogRewardRsp taskIds.
         * @member {Array.<number>} taskIds
         * @memberof proto.Msg_ReceiveQuestLogRewardRsp
         * @instance
         */
        Msg_ReceiveQuestLogRewardRsp.prototype.taskIds = $util.emptyArray;

        /**
         * Msg_ReceiveQuestLogRewardRsp rewards.
         * @member {Array.<proto.IItem>} rewards
         * @memberof proto.Msg_ReceiveQuestLogRewardRsp
         * @instance
         */
        Msg_ReceiveQuestLogRewardRsp.prototype.rewards = $util.emptyArray;

        /**
         * Encodes the specified Msg_ReceiveQuestLogRewardRsp message. Does not implicitly {@link proto.Msg_ReceiveQuestLogRewardRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_ReceiveQuestLogRewardRsp
         * @static
         * @param {proto.IMsg_ReceiveQuestLogRewardRsp} m Msg_ReceiveQuestLogRewardRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_ReceiveQuestLogRewardRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.error != null && Object.hasOwnProperty.call(m, "error"))
                $root.proto.CommonError.encode(m.error, w.uint32(10).fork()).ldelim();
            if (m.taskIds != null && m.taskIds.length) {
                w.uint32(18).fork();
                for (var i = 0; i < m.taskIds.length; ++i)
                    w.int32(m.taskIds[i]);
                w.ldelim();
            }
            if (m.rewards != null && m.rewards.length) {
                for (var i = 0; i < m.rewards.length; ++i)
                    $root.proto.Item.encode(m.rewards[i], w.uint32(26).fork()).ldelim();
            }
            return w;
        };

        /**
         * Decodes a Msg_ReceiveQuestLogRewardRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_ReceiveQuestLogRewardRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_ReceiveQuestLogRewardRsp} Msg_ReceiveQuestLogRewardRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_ReceiveQuestLogRewardRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_ReceiveQuestLogRewardRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.error = $root.proto.CommonError.decode(r, r.uint32());
                    break;
                case 2:
                    if (!(m.taskIds && m.taskIds.length))
                        m.taskIds = [];
                    if ((t & 7) === 2) {
                        var c2 = r.uint32() + r.pos;
                        while (r.pos < c2)
                            m.taskIds.push(r.int32());
                    } else
                        m.taskIds.push(r.int32());
                    break;
                case 3:
                    if (!(m.rewards && m.rewards.length))
                        m.rewards = [];
                    m.rewards.push($root.proto.Item.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_ReceiveQuestLogRewardRsp;
    })();

    proto.Msg_UpQuestLogLevelReq = (function() {

        /**
         * Properties of a Msg_UpQuestLogLevelReq.
         * @memberof proto
         * @interface IMsg_UpQuestLogLevelReq
         */

        /**
         * Constructs a new Msg_UpQuestLogLevelReq.
         * @memberof proto
         * @classdesc Represents a Msg_UpQuestLogLevelReq.
         * @implements IMsg_UpQuestLogLevelReq
         * @constructor
         * @param {proto.IMsg_UpQuestLogLevelReq=} [p] Properties to set
         */
        function Msg_UpQuestLogLevelReq(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Encodes the specified Msg_UpQuestLogLevelReq message. Does not implicitly {@link proto.Msg_UpQuestLogLevelReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_UpQuestLogLevelReq
         * @static
         * @param {proto.IMsg_UpQuestLogLevelReq} m Msg_UpQuestLogLevelReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_UpQuestLogLevelReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };

        /**
         * Decodes a Msg_UpQuestLogLevelReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_UpQuestLogLevelReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_UpQuestLogLevelReq} Msg_UpQuestLogLevelReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_UpQuestLogLevelReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_UpQuestLogLevelReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_UpQuestLogLevelReq;
    })();

    proto.Msg_UpQuestLogLevelRsp = (function() {

        /**
         * Properties of a Msg_UpQuestLogLevelRsp.
         * @memberof proto
         * @interface IMsg_UpQuestLogLevelRsp
         * @property {proto.ICommonError|null} [error] Msg_UpQuestLogLevelRsp error
         * @property {number|null} [level] Msg_UpQuestLogLevelRsp level
         */

        /**
         * Constructs a new Msg_UpQuestLogLevelRsp.
         * @memberof proto
         * @classdesc Represents a Msg_UpQuestLogLevelRsp.
         * @implements IMsg_UpQuestLogLevelRsp
         * @constructor
         * @param {proto.IMsg_UpQuestLogLevelRsp=} [p] Properties to set
         */
        function Msg_UpQuestLogLevelRsp(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_UpQuestLogLevelRsp error.
         * @member {proto.ICommonError|null|undefined} error
         * @memberof proto.Msg_UpQuestLogLevelRsp
         * @instance
         */
        Msg_UpQuestLogLevelRsp.prototype.error = null;

        /**
         * Msg_UpQuestLogLevelRsp level.
         * @member {number} level
         * @memberof proto.Msg_UpQuestLogLevelRsp
         * @instance
         */
        Msg_UpQuestLogLevelRsp.prototype.level = 0;

        /**
         * Encodes the specified Msg_UpQuestLogLevelRsp message. Does not implicitly {@link proto.Msg_UpQuestLogLevelRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_UpQuestLogLevelRsp
         * @static
         * @param {proto.IMsg_UpQuestLogLevelRsp} m Msg_UpQuestLogLevelRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_UpQuestLogLevelRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.error != null && Object.hasOwnProperty.call(m, "error"))
                $root.proto.CommonError.encode(m.error, w.uint32(10).fork()).ldelim();
            if (m.level != null && Object.hasOwnProperty.call(m, "level"))
                w.uint32(16).int32(m.level);
            return w;
        };

        /**
         * Decodes a Msg_UpQuestLogLevelRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_UpQuestLogLevelRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_UpQuestLogLevelRsp} Msg_UpQuestLogLevelRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_UpQuestLogLevelRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_UpQuestLogLevelRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.error = $root.proto.CommonError.decode(r, r.uint32());
                    break;
                case 2:
                    m.level = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_UpQuestLogLevelRsp;
    })();

    proto.Msg_TaskChangePush = (function() {

        /**
         * Properties of a Msg_TaskChangePush.
         * @memberof proto
         * @interface IMsg_TaskChangePush
         * @property {Array.<proto.ITask>|null} [addedTasks] Msg_TaskChangePush addedTasks
         * @property {Array.<proto.ITask>|null} [removedTasks] Msg_TaskChangePush removedTasks
         * @property {Array.<proto.ITask>|null} [finishedTasks] Msg_TaskChangePush finishedTasks
         */

        /**
         * Constructs a new Msg_TaskChangePush.
         * @memberof proto
         * @classdesc Represents a Msg_TaskChangePush.
         * @implements IMsg_TaskChangePush
         * @constructor
         * @param {proto.IMsg_TaskChangePush=} [p] Properties to set
         */
        function Msg_TaskChangePush(p) {
            this.addedTasks = [];
            this.removedTasks = [];
            this.finishedTasks = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_TaskChangePush addedTasks.
         * @member {Array.<proto.ITask>} addedTasks
         * @memberof proto.Msg_TaskChangePush
         * @instance
         */
        Msg_TaskChangePush.prototype.addedTasks = $util.emptyArray;

        /**
         * Msg_TaskChangePush removedTasks.
         * @member {Array.<proto.ITask>} removedTasks
         * @memberof proto.Msg_TaskChangePush
         * @instance
         */
        Msg_TaskChangePush.prototype.removedTasks = $util.emptyArray;

        /**
         * Msg_TaskChangePush finishedTasks.
         * @member {Array.<proto.ITask>} finishedTasks
         * @memberof proto.Msg_TaskChangePush
         * @instance
         */
        Msg_TaskChangePush.prototype.finishedTasks = $util.emptyArray;

        /**
         * Encodes the specified Msg_TaskChangePush message. Does not implicitly {@link proto.Msg_TaskChangePush.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_TaskChangePush
         * @static
         * @param {proto.IMsg_TaskChangePush} m Msg_TaskChangePush message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_TaskChangePush.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.addedTasks != null && m.addedTasks.length) {
                for (var i = 0; i < m.addedTasks.length; ++i)
                    $root.proto.Task.encode(m.addedTasks[i], w.uint32(10).fork()).ldelim();
            }
            if (m.removedTasks != null && m.removedTasks.length) {
                for (var i = 0; i < m.removedTasks.length; ++i)
                    $root.proto.Task.encode(m.removedTasks[i], w.uint32(18).fork()).ldelim();
            }
            if (m.finishedTasks != null && m.finishedTasks.length) {
                for (var i = 0; i < m.finishedTasks.length; ++i)
                    $root.proto.Task.encode(m.finishedTasks[i], w.uint32(26).fork()).ldelim();
            }
            return w;
        };

        /**
         * Decodes a Msg_TaskChangePush message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_TaskChangePush
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_TaskChangePush} Msg_TaskChangePush
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_TaskChangePush.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_TaskChangePush();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.addedTasks && m.addedTasks.length))
                        m.addedTasks = [];
                    m.addedTasks.push($root.proto.Task.decode(r, r.uint32()));
                    break;
                case 2:
                    if (!(m.removedTasks && m.removedTasks.length))
                        m.removedTasks = [];
                    m.removedTasks.push($root.proto.Task.decode(r, r.uint32()));
                    break;
                case 3:
                    if (!(m.finishedTasks && m.finishedTasks.length))
                        m.finishedTasks = [];
                    m.finishedTasks.push($root.proto.Task.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_TaskChangePush;
    })();

    proto.Msg_JoinChatChannelReq = (function() {

        /**
         * Properties of a Msg_JoinChatChannelReq.
         * @memberof proto
         * @interface IMsg_JoinChatChannelReq
         * @property {number|Long|null} [channelId] Msg_JoinChatChannelReq channelId
         */

        /**
         * Constructs a new Msg_JoinChatChannelReq.
         * @memberof proto
         * @classdesc Represents a Msg_JoinChatChannelReq.
         * @implements IMsg_JoinChatChannelReq
         * @constructor
         * @param {proto.IMsg_JoinChatChannelReq=} [p] Properties to set
         */
        function Msg_JoinChatChannelReq(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_JoinChatChannelReq channelId.
         * @member {number|Long} channelId
         * @memberof proto.Msg_JoinChatChannelReq
         * @instance
         */
        Msg_JoinChatChannelReq.prototype.channelId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

        /**
         * Encodes the specified Msg_JoinChatChannelReq message. Does not implicitly {@link proto.Msg_JoinChatChannelReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_JoinChatChannelReq
         * @static
         * @param {proto.IMsg_JoinChatChannelReq} m Msg_JoinChatChannelReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_JoinChatChannelReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.channelId != null && Object.hasOwnProperty.call(m, "channelId"))
                w.uint32(8).int64(m.channelId);
            return w;
        };

        /**
         * Decodes a Msg_JoinChatChannelReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_JoinChatChannelReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_JoinChatChannelReq} Msg_JoinChatChannelReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_JoinChatChannelReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_JoinChatChannelReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.channelId = r.int64();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_JoinChatChannelReq;
    })();

    proto.Msg_JoinChatChannelRsp = (function() {

        /**
         * Properties of a Msg_JoinChatChannelRsp.
         * @memberof proto
         * @interface IMsg_JoinChatChannelRsp
         * @property {proto.ICommonError|null} [error] Msg_JoinChatChannelRsp error
         * @property {number|Long|null} [channelId] Msg_JoinChatChannelRsp channelId
         */

        /**
         * Constructs a new Msg_JoinChatChannelRsp.
         * @memberof proto
         * @classdesc Represents a Msg_JoinChatChannelRsp.
         * @implements IMsg_JoinChatChannelRsp
         * @constructor
         * @param {proto.IMsg_JoinChatChannelRsp=} [p] Properties to set
         */
        function Msg_JoinChatChannelRsp(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_JoinChatChannelRsp error.
         * @member {proto.ICommonError|null|undefined} error
         * @memberof proto.Msg_JoinChatChannelRsp
         * @instance
         */
        Msg_JoinChatChannelRsp.prototype.error = null;

        /**
         * Msg_JoinChatChannelRsp channelId.
         * @member {number|Long} channelId
         * @memberof proto.Msg_JoinChatChannelRsp
         * @instance
         */
        Msg_JoinChatChannelRsp.prototype.channelId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

        /**
         * Encodes the specified Msg_JoinChatChannelRsp message. Does not implicitly {@link proto.Msg_JoinChatChannelRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_JoinChatChannelRsp
         * @static
         * @param {proto.IMsg_JoinChatChannelRsp} m Msg_JoinChatChannelRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_JoinChatChannelRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.error != null && Object.hasOwnProperty.call(m, "error"))
                $root.proto.CommonError.encode(m.error, w.uint32(10).fork()).ldelim();
            if (m.channelId != null && Object.hasOwnProperty.call(m, "channelId"))
                w.uint32(16).int64(m.channelId);
            return w;
        };

        /**
         * Decodes a Msg_JoinChatChannelRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_JoinChatChannelRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_JoinChatChannelRsp} Msg_JoinChatChannelRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_JoinChatChannelRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_JoinChatChannelRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.error = $root.proto.CommonError.decode(r, r.uint32());
                    break;
                case 2:
                    m.channelId = r.int64();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_JoinChatChannelRsp;
    })();

    proto.Msg_LeaveChatChannelReq = (function() {

        /**
         * Properties of a Msg_LeaveChatChannelReq.
         * @memberof proto
         * @interface IMsg_LeaveChatChannelReq
         * @property {number|Long|null} [channelId] Msg_LeaveChatChannelReq channelId
         */

        /**
         * Constructs a new Msg_LeaveChatChannelReq.
         * @memberof proto
         * @classdesc Represents a Msg_LeaveChatChannelReq.
         * @implements IMsg_LeaveChatChannelReq
         * @constructor
         * @param {proto.IMsg_LeaveChatChannelReq=} [p] Properties to set
         */
        function Msg_LeaveChatChannelReq(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_LeaveChatChannelReq channelId.
         * @member {number|Long} channelId
         * @memberof proto.Msg_LeaveChatChannelReq
         * @instance
         */
        Msg_LeaveChatChannelReq.prototype.channelId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

        /**
         * Encodes the specified Msg_LeaveChatChannelReq message. Does not implicitly {@link proto.Msg_LeaveChatChannelReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_LeaveChatChannelReq
         * @static
         * @param {proto.IMsg_LeaveChatChannelReq} m Msg_LeaveChatChannelReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_LeaveChatChannelReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.channelId != null && Object.hasOwnProperty.call(m, "channelId"))
                w.uint32(8).int64(m.channelId);
            return w;
        };

        /**
         * Decodes a Msg_LeaveChatChannelReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_LeaveChatChannelReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_LeaveChatChannelReq} Msg_LeaveChatChannelReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_LeaveChatChannelReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_LeaveChatChannelReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.channelId = r.int64();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_LeaveChatChannelReq;
    })();

    proto.Msg_LeaveChatChannelRsp = (function() {

        /**
         * Properties of a Msg_LeaveChatChannelRsp.
         * @memberof proto
         * @interface IMsg_LeaveChatChannelRsp
         * @property {proto.ICommonError|null} [error] Msg_LeaveChatChannelRsp error
         * @property {number|Long|null} [channelId] Msg_LeaveChatChannelRsp channelId
         */

        /**
         * Constructs a new Msg_LeaveChatChannelRsp.
         * @memberof proto
         * @classdesc Represents a Msg_LeaveChatChannelRsp.
         * @implements IMsg_LeaveChatChannelRsp
         * @constructor
         * @param {proto.IMsg_LeaveChatChannelRsp=} [p] Properties to set
         */
        function Msg_LeaveChatChannelRsp(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_LeaveChatChannelRsp error.
         * @member {proto.ICommonError|null|undefined} error
         * @memberof proto.Msg_LeaveChatChannelRsp
         * @instance
         */
        Msg_LeaveChatChannelRsp.prototype.error = null;

        /**
         * Msg_LeaveChatChannelRsp channelId.
         * @member {number|Long} channelId
         * @memberof proto.Msg_LeaveChatChannelRsp
         * @instance
         */
        Msg_LeaveChatChannelRsp.prototype.channelId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

        /**
         * Encodes the specified Msg_LeaveChatChannelRsp message. Does not implicitly {@link proto.Msg_LeaveChatChannelRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_LeaveChatChannelRsp
         * @static
         * @param {proto.IMsg_LeaveChatChannelRsp} m Msg_LeaveChatChannelRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_LeaveChatChannelRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.error != null && Object.hasOwnProperty.call(m, "error"))
                $root.proto.CommonError.encode(m.error, w.uint32(10).fork()).ldelim();
            if (m.channelId != null && Object.hasOwnProperty.call(m, "channelId"))
                w.uint32(16).int64(m.channelId);
            return w;
        };

        /**
         * Decodes a Msg_LeaveChatChannelRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_LeaveChatChannelRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_LeaveChatChannelRsp} Msg_LeaveChatChannelRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_LeaveChatChannelRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_LeaveChatChannelRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.error = $root.proto.CommonError.decode(r, r.uint32());
                    break;
                case 2:
                    m.channelId = r.int64();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_LeaveChatChannelRsp;
    })();

    /**
     * ChatChannelType enum.
     * @name proto.ChatChannelType
     * @enum {number}
     * @property {number} System=0 System value
     * @property {number} World=1 World value
     * @property {number} Guild=2 Guild value
     */
    proto.ChatChannelType = (function() {
        var valuesById = {}, values = Object.create(valuesById);
        values[valuesById[0] = "System"] = 0;
        values[valuesById[1] = "World"] = 1;
        values[valuesById[2] = "Guild"] = 2;
        return values;
    })();

    proto.ChatChannel = (function() {

        /**
         * Properties of a ChatChannel.
         * @memberof proto
         * @interface IChatChannel
         * @property {number|Long|null} [Id] ChatChannel Id
         * @property {proto.ChatChannelType|null} [type] ChatChannel type
         */

        /**
         * Constructs a new ChatChannel.
         * @memberof proto
         * @classdesc Represents a ChatChannel.
         * @implements IChatChannel
         * @constructor
         * @param {proto.IChatChannel=} [p] Properties to set
         */
        function ChatChannel(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * ChatChannel Id.
         * @member {number|Long} Id
         * @memberof proto.ChatChannel
         * @instance
         */
        ChatChannel.prototype.Id = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

        /**
         * ChatChannel type.
         * @member {proto.ChatChannelType} type
         * @memberof proto.ChatChannel
         * @instance
         */
        ChatChannel.prototype.type = 0;

        /**
         * Encodes the specified ChatChannel message. Does not implicitly {@link proto.ChatChannel.verify|verify} messages.
         * @function encode
         * @memberof proto.ChatChannel
         * @static
         * @param {proto.IChatChannel} m ChatChannel message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        ChatChannel.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.Id != null && Object.hasOwnProperty.call(m, "Id"))
                w.uint32(16).int64(m.Id);
            if (m.type != null && Object.hasOwnProperty.call(m, "type"))
                w.uint32(24).int32(m.type);
            return w;
        };

        /**
         * Decodes a ChatChannel message from the specified reader or buffer.
         * @function decode
         * @memberof proto.ChatChannel
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.ChatChannel} ChatChannel
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        ChatChannel.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.ChatChannel();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 2:
                    m.Id = r.int64();
                    break;
                case 3:
                    m.type = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return ChatChannel;
    })();

    proto.Msg_DefaultChatChannelsPush = (function() {

        /**
         * Properties of a Msg_DefaultChatChannelsPush.
         * @memberof proto
         * @interface IMsg_DefaultChatChannelsPush
         * @property {Array.<proto.IChatChannel>|null} [channels] Msg_DefaultChatChannelsPush channels
         */

        /**
         * Constructs a new Msg_DefaultChatChannelsPush.
         * @memberof proto
         * @classdesc Represents a Msg_DefaultChatChannelsPush.
         * @implements IMsg_DefaultChatChannelsPush
         * @constructor
         * @param {proto.IMsg_DefaultChatChannelsPush=} [p] Properties to set
         */
        function Msg_DefaultChatChannelsPush(p) {
            this.channels = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_DefaultChatChannelsPush channels.
         * @member {Array.<proto.IChatChannel>} channels
         * @memberof proto.Msg_DefaultChatChannelsPush
         * @instance
         */
        Msg_DefaultChatChannelsPush.prototype.channels = $util.emptyArray;

        /**
         * Encodes the specified Msg_DefaultChatChannelsPush message. Does not implicitly {@link proto.Msg_DefaultChatChannelsPush.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_DefaultChatChannelsPush
         * @static
         * @param {proto.IMsg_DefaultChatChannelsPush} m Msg_DefaultChatChannelsPush message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_DefaultChatChannelsPush.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.channels != null && m.channels.length) {
                for (var i = 0; i < m.channels.length; ++i)
                    $root.proto.ChatChannel.encode(m.channels[i], w.uint32(10).fork()).ldelim();
            }
            return w;
        };

        /**
         * Decodes a Msg_DefaultChatChannelsPush message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_DefaultChatChannelsPush
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_DefaultChatChannelsPush} Msg_DefaultChatChannelsPush
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_DefaultChatChannelsPush.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_DefaultChatChannelsPush();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.channels && m.channels.length))
                        m.channels = [];
                    m.channels.push($root.proto.ChatChannel.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_DefaultChatChannelsPush;
    })();

    proto.ChatPlayer = (function() {

        /**
         * Properties of a ChatPlayer.
         * @memberof proto
         * @interface IChatPlayer
         * @property {string|null} [uid] ChatPlayer uid
         * @property {string|null} [roleId] ChatPlayer roleId
         * @property {number|null} [areaId] ChatPlayer areaId
         * @property {string|null} [name] ChatPlayer name
         * @property {number|null} [headIcon] ChatPlayer headIcon
         * @property {number|null} [headFrame] ChatPlayer headFrame
         * @property {number|null} [chatBubble] ChatPlayer chatBubble
         * @property {number|null} [level] ChatPlayer level
         * @property {number|null} [questLogLevel] ChatPlayer questLogLevel
         * @property {string|null} [guildId] ChatPlayer guildId
         * @property {number|null} [totalRechargeAmount] ChatPlayer totalRechargeAmount
         * @property {number|null} [powerScore] ChatPlayer powerScore
         */

        /**
         * Constructs a new ChatPlayer.
         * @memberof proto
         * @classdesc Represents a ChatPlayer.
         * @implements IChatPlayer
         * @constructor
         * @param {proto.IChatPlayer=} [p] Properties to set
         */
        function ChatPlayer(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * ChatPlayer uid.
         * @member {string} uid
         * @memberof proto.ChatPlayer
         * @instance
         */
        ChatPlayer.prototype.uid = "";

        /**
         * ChatPlayer roleId.
         * @member {string} roleId
         * @memberof proto.ChatPlayer
         * @instance
         */
        ChatPlayer.prototype.roleId = "";

        /**
         * ChatPlayer areaId.
         * @member {number} areaId
         * @memberof proto.ChatPlayer
         * @instance
         */
        ChatPlayer.prototype.areaId = 0;

        /**
         * ChatPlayer name.
         * @member {string} name
         * @memberof proto.ChatPlayer
         * @instance
         */
        ChatPlayer.prototype.name = "";

        /**
         * ChatPlayer headIcon.
         * @member {number} headIcon
         * @memberof proto.ChatPlayer
         * @instance
         */
        ChatPlayer.prototype.headIcon = 0;

        /**
         * ChatPlayer headFrame.
         * @member {number} headFrame
         * @memberof proto.ChatPlayer
         * @instance
         */
        ChatPlayer.prototype.headFrame = 0;

        /**
         * ChatPlayer chatBubble.
         * @member {number} chatBubble
         * @memberof proto.ChatPlayer
         * @instance
         */
        ChatPlayer.prototype.chatBubble = 0;

        /**
         * ChatPlayer level.
         * @member {number} level
         * @memberof proto.ChatPlayer
         * @instance
         */
        ChatPlayer.prototype.level = 0;

        /**
         * ChatPlayer questLogLevel.
         * @member {number} questLogLevel
         * @memberof proto.ChatPlayer
         * @instance
         */
        ChatPlayer.prototype.questLogLevel = 0;

        /**
         * ChatPlayer guildId.
         * @member {string} guildId
         * @memberof proto.ChatPlayer
         * @instance
         */
        ChatPlayer.prototype.guildId = "";

        /**
         * ChatPlayer totalRechargeAmount.
         * @member {number} totalRechargeAmount
         * @memberof proto.ChatPlayer
         * @instance
         */
        ChatPlayer.prototype.totalRechargeAmount = 0;

        /**
         * ChatPlayer powerScore.
         * @member {number} powerScore
         * @memberof proto.ChatPlayer
         * @instance
         */
        ChatPlayer.prototype.powerScore = 0;

        /**
         * Encodes the specified ChatPlayer message. Does not implicitly {@link proto.ChatPlayer.verify|verify} messages.
         * @function encode
         * @memberof proto.ChatPlayer
         * @static
         * @param {proto.IChatPlayer} m ChatPlayer message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        ChatPlayer.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.uid != null && Object.hasOwnProperty.call(m, "uid"))
                w.uint32(10).string(m.uid);
            if (m.roleId != null && Object.hasOwnProperty.call(m, "roleId"))
                w.uint32(18).string(m.roleId);
            if (m.areaId != null && Object.hasOwnProperty.call(m, "areaId"))
                w.uint32(24).int32(m.areaId);
            if (m.name != null && Object.hasOwnProperty.call(m, "name"))
                w.uint32(34).string(m.name);
            if (m.headIcon != null && Object.hasOwnProperty.call(m, "headIcon"))
                w.uint32(40).int32(m.headIcon);
            if (m.headFrame != null && Object.hasOwnProperty.call(m, "headFrame"))
                w.uint32(48).int32(m.headFrame);
            if (m.chatBubble != null && Object.hasOwnProperty.call(m, "chatBubble"))
                w.uint32(56).int32(m.chatBubble);
            if (m.level != null && Object.hasOwnProperty.call(m, "level"))
                w.uint32(64).int32(m.level);
            if (m.questLogLevel != null && Object.hasOwnProperty.call(m, "questLogLevel"))
                w.uint32(72).int32(m.questLogLevel);
            if (m.guildId != null && Object.hasOwnProperty.call(m, "guildId"))
                w.uint32(82).string(m.guildId);
            if (m.totalRechargeAmount != null && Object.hasOwnProperty.call(m, "totalRechargeAmount"))
                w.uint32(88).int32(m.totalRechargeAmount);
            if (m.powerScore != null && Object.hasOwnProperty.call(m, "powerScore"))
                w.uint32(96).int32(m.powerScore);
            return w;
        };

        /**
         * Decodes a ChatPlayer message from the specified reader or buffer.
         * @function decode
         * @memberof proto.ChatPlayer
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.ChatPlayer} ChatPlayer
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        ChatPlayer.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.ChatPlayer();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.uid = r.string();
                    break;
                case 2:
                    m.roleId = r.string();
                    break;
                case 3:
                    m.areaId = r.int32();
                    break;
                case 4:
                    m.name = r.string();
                    break;
                case 5:
                    m.headIcon = r.int32();
                    break;
                case 6:
                    m.headFrame = r.int32();
                    break;
                case 7:
                    m.chatBubble = r.int32();
                    break;
                case 8:
                    m.level = r.int32();
                    break;
                case 9:
                    m.questLogLevel = r.int32();
                    break;
                case 10:
                    m.guildId = r.string();
                    break;
                case 11:
                    m.totalRechargeAmount = r.int32();
                    break;
                case 12:
                    m.powerScore = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return ChatPlayer;
    })();

    proto.ChatMessage = (function() {

        /**
         * Properties of a ChatMessage.
         * @memberof proto
         * @interface IChatMessage
         * @property {number|Long|null} [id] ChatMessage id
         * @property {number|Long|null} [channelId] ChatMessage channelId
         * @property {string|null} [receiverId] ChatMessage receiverId
         * @property {number|Long|null} [timestamp] ChatMessage timestamp
         * @property {proto.IChatPlayer|null} [sender] ChatMessage sender
         * @property {string|null} [normal] ChatMessage normal
         * @property {proto.ChatMessage.ISystemNotice|null} [notice] ChatMessage notice
         * @property {proto.ChatMessage.IClientCustomNotice|null} [clientCustomNotice] ChatMessage clientCustomNotice
         */

        /**
         * Constructs a new ChatMessage.
         * @memberof proto
         * @classdesc Represents a ChatMessage.
         * @implements IChatMessage
         * @constructor
         * @param {proto.IChatMessage=} [p] Properties to set
         */
        function ChatMessage(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * ChatMessage id.
         * @member {number|Long} id
         * @memberof proto.ChatMessage
         * @instance
         */
        ChatMessage.prototype.id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;

        /**
         * ChatMessage channelId.
         * @member {number|Long} channelId
         * @memberof proto.ChatMessage
         * @instance
         */
        ChatMessage.prototype.channelId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

        /**
         * ChatMessage receiverId.
         * @member {string} receiverId
         * @memberof proto.ChatMessage
         * @instance
         */
        ChatMessage.prototype.receiverId = "";

        /**
         * ChatMessage timestamp.
         * @member {number|Long} timestamp
         * @memberof proto.ChatMessage
         * @instance
         */
        ChatMessage.prototype.timestamp = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

        /**
         * ChatMessage sender.
         * @member {proto.IChatPlayer|null|undefined} sender
         * @memberof proto.ChatMessage
         * @instance
         */
        ChatMessage.prototype.sender = null;

        /**
         * ChatMessage normal.
         * @member {string} normal
         * @memberof proto.ChatMessage
         * @instance
         */
        ChatMessage.prototype.normal = "";

        /**
         * ChatMessage notice.
         * @member {proto.ChatMessage.ISystemNotice|null|undefined} notice
         * @memberof proto.ChatMessage
         * @instance
         */
        ChatMessage.prototype.notice = null;

        /**
         * ChatMessage clientCustomNotice.
         * @member {proto.ChatMessage.IClientCustomNotice|null|undefined} clientCustomNotice
         * @memberof proto.ChatMessage
         * @instance
         */
        ChatMessage.prototype.clientCustomNotice = null;

        // OneOf field names bound to virtual getters and setters
        var $oneOfFields;

        /**
         * ChatMessage content.
         * @member {"normal"|"notice"|"clientCustomNotice"|undefined} content
         * @memberof proto.ChatMessage
         * @instance
         */
        Object.defineProperty(ChatMessage.prototype, "content", {
            get: $util.oneOfGetter($oneOfFields = ["normal", "notice", "clientCustomNotice"]),
            set: $util.oneOfSetter($oneOfFields)
        });

        /**
         * Encodes the specified ChatMessage message. Does not implicitly {@link proto.ChatMessage.verify|verify} messages.
         * @function encode
         * @memberof proto.ChatMessage
         * @static
         * @param {proto.IChatMessage} m ChatMessage message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        ChatMessage.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.id != null && Object.hasOwnProperty.call(m, "id"))
                w.uint32(8).uint64(m.id);
            if (m.channelId != null && Object.hasOwnProperty.call(m, "channelId"))
                w.uint32(16).int64(m.channelId);
            if (m.receiverId != null && Object.hasOwnProperty.call(m, "receiverId"))
                w.uint32(26).string(m.receiverId);
            if (m.timestamp != null && Object.hasOwnProperty.call(m, "timestamp"))
                w.uint32(32).int64(m.timestamp);
            if (m.sender != null && Object.hasOwnProperty.call(m, "sender"))
                $root.proto.ChatPlayer.encode(m.sender, w.uint32(42).fork()).ldelim();
            if (m.normal != null && Object.hasOwnProperty.call(m, "normal"))
                w.uint32(50).string(m.normal);
            if (m.notice != null && Object.hasOwnProperty.call(m, "notice"))
                $root.proto.ChatMessage.SystemNotice.encode(m.notice, w.uint32(58).fork()).ldelim();
            if (m.clientCustomNotice != null && Object.hasOwnProperty.call(m, "clientCustomNotice"))
                $root.proto.ChatMessage.ClientCustomNotice.encode(m.clientCustomNotice, w.uint32(66).fork()).ldelim();
            return w;
        };

        /**
         * Decodes a ChatMessage message from the specified reader or buffer.
         * @function decode
         * @memberof proto.ChatMessage
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.ChatMessage} ChatMessage
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        ChatMessage.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.ChatMessage();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.id = r.uint64();
                    break;
                case 2:
                    m.channelId = r.int64();
                    break;
                case 3:
                    m.receiverId = r.string();
                    break;
                case 4:
                    m.timestamp = r.int64();
                    break;
                case 5:
                    m.sender = $root.proto.ChatPlayer.decode(r, r.uint32());
                    break;
                case 6:
                    m.normal = r.string();
                    break;
                case 7:
                    m.notice = $root.proto.ChatMessage.SystemNotice.decode(r, r.uint32());
                    break;
                case 8:
                    m.clientCustomNotice = $root.proto.ChatMessage.ClientCustomNotice.decode(r, r.uint32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        ChatMessage.SystemNotice = (function() {

            /**
             * Properties of a SystemNotice.
             * @memberof proto.ChatMessage
             * @interface ISystemNotice
             * @property {number|null} [noticeId] SystemNotice noticeId
             * @property {Array.<string>|null} [params] SystemNotice params
             */

            /**
             * Constructs a new SystemNotice.
             * @memberof proto.ChatMessage
             * @classdesc Represents a SystemNotice.
             * @implements ISystemNotice
             * @constructor
             * @param {proto.ChatMessage.ISystemNotice=} [p] Properties to set
             */
            function SystemNotice(p) {
                this.params = [];
                if (p)
                    for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                        if (p[ks[i]] != null)
                            this[ks[i]] = p[ks[i]];
            }

            /**
             * SystemNotice noticeId.
             * @member {number} noticeId
             * @memberof proto.ChatMessage.SystemNotice
             * @instance
             */
            SystemNotice.prototype.noticeId = 0;

            /**
             * SystemNotice params.
             * @member {Array.<string>} params
             * @memberof proto.ChatMessage.SystemNotice
             * @instance
             */
            SystemNotice.prototype.params = $util.emptyArray;

            /**
             * Encodes the specified SystemNotice message. Does not implicitly {@link proto.ChatMessage.SystemNotice.verify|verify} messages.
             * @function encode
             * @memberof proto.ChatMessage.SystemNotice
             * @static
             * @param {proto.ChatMessage.ISystemNotice} m SystemNotice message or plain object to encode
             * @param {$protobuf.Writer} [w] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            SystemNotice.encode = function encode(m, w) {
                if (!w)
                    w = $Writer.create();
                if (m.noticeId != null && Object.hasOwnProperty.call(m, "noticeId"))
                    w.uint32(8).int32(m.noticeId);
                if (m.params != null && m.params.length) {
                    for (var i = 0; i < m.params.length; ++i)
                        w.uint32(18).string(m.params[i]);
                }
                return w;
            };

            /**
             * Decodes a SystemNotice message from the specified reader or buffer.
             * @function decode
             * @memberof proto.ChatMessage.SystemNotice
             * @static
             * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
             * @param {number} [l] Message length if known beforehand
             * @returns {proto.ChatMessage.SystemNotice} SystemNotice
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            SystemNotice.decode = function decode(r, l) {
                if (!(r instanceof $Reader))
                    r = $Reader.create(r);
                var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.ChatMessage.SystemNotice();
                while (r.pos < c) {
                    var t = r.uint32();
                    switch (t >>> 3) {
                    case 1:
                        m.noticeId = r.int32();
                        break;
                    case 2:
                        if (!(m.params && m.params.length))
                            m.params = [];
                        m.params.push(r.string());
                        break;
                    default:
                        r.skipType(t & 7);
                        break;
                    }
                }
                return m;
            };

            return SystemNotice;
        })();

        ChatMessage.ClientCustomNotice = (function() {

            /**
             * Properties of a ClientCustomNotice.
             * @memberof proto.ChatMessage
             * @interface IClientCustomNotice
             * @property {number|null} [noticeType] ClientCustomNotice noticeType
             * @property {string|null} [content] ClientCustomNotice content
             * @property {Array.<string>|null} [params] ClientCustomNotice params
             */

            /**
             * Constructs a new ClientCustomNotice.
             * @memberof proto.ChatMessage
             * @classdesc Represents a ClientCustomNotice.
             * @implements IClientCustomNotice
             * @constructor
             * @param {proto.ChatMessage.IClientCustomNotice=} [p] Properties to set
             */
            function ClientCustomNotice(p) {
                this.params = [];
                if (p)
                    for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                        if (p[ks[i]] != null)
                            this[ks[i]] = p[ks[i]];
            }

            /**
             * ClientCustomNotice noticeType.
             * @member {number} noticeType
             * @memberof proto.ChatMessage.ClientCustomNotice
             * @instance
             */
            ClientCustomNotice.prototype.noticeType = 0;

            /**
             * ClientCustomNotice content.
             * @member {string} content
             * @memberof proto.ChatMessage.ClientCustomNotice
             * @instance
             */
            ClientCustomNotice.prototype.content = "";

            /**
             * ClientCustomNotice params.
             * @member {Array.<string>} params
             * @memberof proto.ChatMessage.ClientCustomNotice
             * @instance
             */
            ClientCustomNotice.prototype.params = $util.emptyArray;

            /**
             * Encodes the specified ClientCustomNotice message. Does not implicitly {@link proto.ChatMessage.ClientCustomNotice.verify|verify} messages.
             * @function encode
             * @memberof proto.ChatMessage.ClientCustomNotice
             * @static
             * @param {proto.ChatMessage.IClientCustomNotice} m ClientCustomNotice message or plain object to encode
             * @param {$protobuf.Writer} [w] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            ClientCustomNotice.encode = function encode(m, w) {
                if (!w)
                    w = $Writer.create();
                if (m.noticeType != null && Object.hasOwnProperty.call(m, "noticeType"))
                    w.uint32(8).int32(m.noticeType);
                if (m.content != null && Object.hasOwnProperty.call(m, "content"))
                    w.uint32(18).string(m.content);
                if (m.params != null && m.params.length) {
                    for (var i = 0; i < m.params.length; ++i)
                        w.uint32(26).string(m.params[i]);
                }
                return w;
            };

            /**
             * Decodes a ClientCustomNotice message from the specified reader or buffer.
             * @function decode
             * @memberof proto.ChatMessage.ClientCustomNotice
             * @static
             * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
             * @param {number} [l] Message length if known beforehand
             * @returns {proto.ChatMessage.ClientCustomNotice} ClientCustomNotice
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            ClientCustomNotice.decode = function decode(r, l) {
                if (!(r instanceof $Reader))
                    r = $Reader.create(r);
                var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.ChatMessage.ClientCustomNotice();
                while (r.pos < c) {
                    var t = r.uint32();
                    switch (t >>> 3) {
                    case 1:
                        m.noticeType = r.int32();
                        break;
                    case 2:
                        m.content = r.string();
                        break;
                    case 3:
                        if (!(m.params && m.params.length))
                            m.params = [];
                        m.params.push(r.string());
                        break;
                    default:
                        r.skipType(t & 7);
                        break;
                    }
                }
                return m;
            };

            return ClientCustomNotice;
        })();

        return ChatMessage;
    })();

    proto.Msg_SendChatMessageReq = (function() {

        /**
         * Properties of a Msg_SendChatMessageReq.
         * @memberof proto
         * @interface IMsg_SendChatMessageReq
         * @property {number|Long|null} [channelId] Msg_SendChatMessageReq channelId
         * @property {proto.IChatMessage|null} [message] Msg_SendChatMessageReq message
         */

        /**
         * Constructs a new Msg_SendChatMessageReq.
         * @memberof proto
         * @classdesc Represents a Msg_SendChatMessageReq.
         * @implements IMsg_SendChatMessageReq
         * @constructor
         * @param {proto.IMsg_SendChatMessageReq=} [p] Properties to set
         */
        function Msg_SendChatMessageReq(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_SendChatMessageReq channelId.
         * @member {number|Long} channelId
         * @memberof proto.Msg_SendChatMessageReq
         * @instance
         */
        Msg_SendChatMessageReq.prototype.channelId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

        /**
         * Msg_SendChatMessageReq message.
         * @member {proto.IChatMessage|null|undefined} message
         * @memberof proto.Msg_SendChatMessageReq
         * @instance
         */
        Msg_SendChatMessageReq.prototype.message = null;

        /**
         * Encodes the specified Msg_SendChatMessageReq message. Does not implicitly {@link proto.Msg_SendChatMessageReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_SendChatMessageReq
         * @static
         * @param {proto.IMsg_SendChatMessageReq} m Msg_SendChatMessageReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_SendChatMessageReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.channelId != null && Object.hasOwnProperty.call(m, "channelId"))
                w.uint32(8).int64(m.channelId);
            if (m.message != null && Object.hasOwnProperty.call(m, "message"))
                $root.proto.ChatMessage.encode(m.message, w.uint32(18).fork()).ldelim();
            return w;
        };

        /**
         * Decodes a Msg_SendChatMessageReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_SendChatMessageReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_SendChatMessageReq} Msg_SendChatMessageReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_SendChatMessageReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_SendChatMessageReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.channelId = r.int64();
                    break;
                case 2:
                    m.message = $root.proto.ChatMessage.decode(r, r.uint32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_SendChatMessageReq;
    })();

    proto.Msg_SendChatMessageRsp = (function() {

        /**
         * Properties of a Msg_SendChatMessageRsp.
         * @memberof proto
         * @interface IMsg_SendChatMessageRsp
         * @property {proto.ICommonError|null} [error] Msg_SendChatMessageRsp error
         * @property {proto.IChatMessage|null} [message] Msg_SendChatMessageRsp message
         */

        /**
         * Constructs a new Msg_SendChatMessageRsp.
         * @memberof proto
         * @classdesc Represents a Msg_SendChatMessageRsp.
         * @implements IMsg_SendChatMessageRsp
         * @constructor
         * @param {proto.IMsg_SendChatMessageRsp=} [p] Properties to set
         */
        function Msg_SendChatMessageRsp(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_SendChatMessageRsp error.
         * @member {proto.ICommonError|null|undefined} error
         * @memberof proto.Msg_SendChatMessageRsp
         * @instance
         */
        Msg_SendChatMessageRsp.prototype.error = null;

        /**
         * Msg_SendChatMessageRsp message.
         * @member {proto.IChatMessage|null|undefined} message
         * @memberof proto.Msg_SendChatMessageRsp
         * @instance
         */
        Msg_SendChatMessageRsp.prototype.message = null;

        /**
         * Encodes the specified Msg_SendChatMessageRsp message. Does not implicitly {@link proto.Msg_SendChatMessageRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_SendChatMessageRsp
         * @static
         * @param {proto.IMsg_SendChatMessageRsp} m Msg_SendChatMessageRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_SendChatMessageRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.error != null && Object.hasOwnProperty.call(m, "error"))
                $root.proto.CommonError.encode(m.error, w.uint32(10).fork()).ldelim();
            if (m.message != null && Object.hasOwnProperty.call(m, "message"))
                $root.proto.ChatMessage.encode(m.message, w.uint32(18).fork()).ldelim();
            return w;
        };

        /**
         * Decodes a Msg_SendChatMessageRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_SendChatMessageRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_SendChatMessageRsp} Msg_SendChatMessageRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_SendChatMessageRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_SendChatMessageRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.error = $root.proto.CommonError.decode(r, r.uint32());
                    break;
                case 2:
                    m.message = $root.proto.ChatMessage.decode(r, r.uint32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_SendChatMessageRsp;
    })();

    proto.Msg_ChatMessagePush = (function() {

        /**
         * Properties of a Msg_ChatMessagePush.
         * @memberof proto
         * @interface IMsg_ChatMessagePush
         * @property {proto.IChatMessage|null} [message] Msg_ChatMessagePush message
         */

        /**
         * Constructs a new Msg_ChatMessagePush.
         * @memberof proto
         * @classdesc Represents a Msg_ChatMessagePush.
         * @implements IMsg_ChatMessagePush
         * @constructor
         * @param {proto.IMsg_ChatMessagePush=} [p] Properties to set
         */
        function Msg_ChatMessagePush(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_ChatMessagePush message.
         * @member {proto.IChatMessage|null|undefined} message
         * @memberof proto.Msg_ChatMessagePush
         * @instance
         */
        Msg_ChatMessagePush.prototype.message = null;

        /**
         * Encodes the specified Msg_ChatMessagePush message. Does not implicitly {@link proto.Msg_ChatMessagePush.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_ChatMessagePush
         * @static
         * @param {proto.IMsg_ChatMessagePush} m Msg_ChatMessagePush message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_ChatMessagePush.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.message != null && Object.hasOwnProperty.call(m, "message"))
                $root.proto.ChatMessage.encode(m.message, w.uint32(10).fork()).ldelim();
            return w;
        };

        /**
         * Decodes a Msg_ChatMessagePush message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_ChatMessagePush
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_ChatMessagePush} Msg_ChatMessagePush
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_ChatMessagePush.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_ChatMessagePush();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.message = $root.proto.ChatMessage.decode(r, r.uint32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_ChatMessagePush;
    })();

    /**
     * FriendListType enum.
     * @name proto.FriendListType
     * @enum {number}
     * @property {number} FriendList=0 FriendList value
     * @property {number} ApplyList=1 ApplyList value
     * @property {number} BlackList=2 BlackList value
     */
    proto.FriendListType = (function() {
        var valuesById = {}, values = Object.create(valuesById);
        values[valuesById[0] = "FriendList"] = 0;
        values[valuesById[1] = "ApplyList"] = 1;
        values[valuesById[2] = "BlackList"] = 2;
        return values;
    })();

    proto.Msg_GetFriendSimpleRoleReq = (function() {

        /**
         * Properties of a Msg_GetFriendSimpleRoleReq.
         * @memberof proto
         * @interface IMsg_GetFriendSimpleRoleReq
         * @property {proto.FriendListType|null} [type] Msg_GetFriendSimpleRoleReq type
         */

        /**
         * Constructs a new Msg_GetFriendSimpleRoleReq.
         * @memberof proto
         * @classdesc Represents a Msg_GetFriendSimpleRoleReq.
         * @implements IMsg_GetFriendSimpleRoleReq
         * @constructor
         * @param {proto.IMsg_GetFriendSimpleRoleReq=} [p] Properties to set
         */
        function Msg_GetFriendSimpleRoleReq(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_GetFriendSimpleRoleReq type.
         * @member {proto.FriendListType} type
         * @memberof proto.Msg_GetFriendSimpleRoleReq
         * @instance
         */
        Msg_GetFriendSimpleRoleReq.prototype.type = 0;

        /**
         * Encodes the specified Msg_GetFriendSimpleRoleReq message. Does not implicitly {@link proto.Msg_GetFriendSimpleRoleReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_GetFriendSimpleRoleReq
         * @static
         * @param {proto.IMsg_GetFriendSimpleRoleReq} m Msg_GetFriendSimpleRoleReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_GetFriendSimpleRoleReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.type != null && Object.hasOwnProperty.call(m, "type"))
                w.uint32(8).int32(m.type);
            return w;
        };

        /**
         * Decodes a Msg_GetFriendSimpleRoleReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_GetFriendSimpleRoleReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_GetFriendSimpleRoleReq} Msg_GetFriendSimpleRoleReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_GetFriendSimpleRoleReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_GetFriendSimpleRoleReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.type = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_GetFriendSimpleRoleReq;
    })();

    proto.Msg_GetFriendSimpleRoleRsp = (function() {

        /**
         * Properties of a Msg_GetFriendSimpleRoleRsp.
         * @memberof proto
         * @interface IMsg_GetFriendSimpleRoleRsp
         * @property {proto.ICommonError|null} [error] Msg_GetFriendSimpleRoleRsp error
         * @property {proto.FriendListType|null} [type] Msg_GetFriendSimpleRoleRsp type
         * @property {Array.<proto.ISimpleRole>|null} [list] Msg_GetFriendSimpleRoleRsp list
         */

        /**
         * Constructs a new Msg_GetFriendSimpleRoleRsp.
         * @memberof proto
         * @classdesc Represents a Msg_GetFriendSimpleRoleRsp.
         * @implements IMsg_GetFriendSimpleRoleRsp
         * @constructor
         * @param {proto.IMsg_GetFriendSimpleRoleRsp=} [p] Properties to set
         */
        function Msg_GetFriendSimpleRoleRsp(p) {
            this.list = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_GetFriendSimpleRoleRsp error.
         * @member {proto.ICommonError|null|undefined} error
         * @memberof proto.Msg_GetFriendSimpleRoleRsp
         * @instance
         */
        Msg_GetFriendSimpleRoleRsp.prototype.error = null;

        /**
         * Msg_GetFriendSimpleRoleRsp type.
         * @member {proto.FriendListType} type
         * @memberof proto.Msg_GetFriendSimpleRoleRsp
         * @instance
         */
        Msg_GetFriendSimpleRoleRsp.prototype.type = 0;

        /**
         * Msg_GetFriendSimpleRoleRsp list.
         * @member {Array.<proto.ISimpleRole>} list
         * @memberof proto.Msg_GetFriendSimpleRoleRsp
         * @instance
         */
        Msg_GetFriendSimpleRoleRsp.prototype.list = $util.emptyArray;

        /**
         * Encodes the specified Msg_GetFriendSimpleRoleRsp message. Does not implicitly {@link proto.Msg_GetFriendSimpleRoleRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_GetFriendSimpleRoleRsp
         * @static
         * @param {proto.IMsg_GetFriendSimpleRoleRsp} m Msg_GetFriendSimpleRoleRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_GetFriendSimpleRoleRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.error != null && Object.hasOwnProperty.call(m, "error"))
                $root.proto.CommonError.encode(m.error, w.uint32(10).fork()).ldelim();
            if (m.type != null && Object.hasOwnProperty.call(m, "type"))
                w.uint32(16).int32(m.type);
            if (m.list != null && m.list.length) {
                for (var i = 0; i < m.list.length; ++i)
                    $root.proto.SimpleRole.encode(m.list[i], w.uint32(26).fork()).ldelim();
            }
            return w;
        };

        /**
         * Decodes a Msg_GetFriendSimpleRoleRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_GetFriendSimpleRoleRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_GetFriendSimpleRoleRsp} Msg_GetFriendSimpleRoleRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_GetFriendSimpleRoleRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_GetFriendSimpleRoleRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.error = $root.proto.CommonError.decode(r, r.uint32());
                    break;
                case 2:
                    m.type = r.int32();
                    break;
                case 3:
                    if (!(m.list && m.list.length))
                        m.list = [];
                    m.list.push($root.proto.SimpleRole.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_GetFriendSimpleRoleRsp;
    })();

    proto.Msg_AddFriendPush = (function() {

        /**
         * Properties of a Msg_AddFriendPush.
         * @memberof proto
         * @interface IMsg_AddFriendPush
         * @property {proto.FriendListType|null} [type] Msg_AddFriendPush type
         * @property {proto.ISimpleRole|null} [role] Msg_AddFriendPush role
         */

        /**
         * Constructs a new Msg_AddFriendPush.
         * @memberof proto
         * @classdesc Represents a Msg_AddFriendPush.
         * @implements IMsg_AddFriendPush
         * @constructor
         * @param {proto.IMsg_AddFriendPush=} [p] Properties to set
         */
        function Msg_AddFriendPush(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_AddFriendPush type.
         * @member {proto.FriendListType} type
         * @memberof proto.Msg_AddFriendPush
         * @instance
         */
        Msg_AddFriendPush.prototype.type = 0;

        /**
         * Msg_AddFriendPush role.
         * @member {proto.ISimpleRole|null|undefined} role
         * @memberof proto.Msg_AddFriendPush
         * @instance
         */
        Msg_AddFriendPush.prototype.role = null;

        /**
         * Encodes the specified Msg_AddFriendPush message. Does not implicitly {@link proto.Msg_AddFriendPush.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_AddFriendPush
         * @static
         * @param {proto.IMsg_AddFriendPush} m Msg_AddFriendPush message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_AddFriendPush.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.type != null && Object.hasOwnProperty.call(m, "type"))
                w.uint32(8).int32(m.type);
            if (m.role != null && Object.hasOwnProperty.call(m, "role"))
                $root.proto.SimpleRole.encode(m.role, w.uint32(18).fork()).ldelim();
            return w;
        };

        /**
         * Decodes a Msg_AddFriendPush message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_AddFriendPush
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_AddFriendPush} Msg_AddFriendPush
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_AddFriendPush.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_AddFriendPush();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.type = r.int32();
                    break;
                case 2:
                    m.role = $root.proto.SimpleRole.decode(r, r.uint32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_AddFriendPush;
    })();

    proto.Msg_RemoveFriendPush = (function() {

        /**
         * Properties of a Msg_RemoveFriendPush.
         * @memberof proto
         * @interface IMsg_RemoveFriendPush
         * @property {proto.FriendListType|null} [type] Msg_RemoveFriendPush type
         * @property {string|null} [roleId] Msg_RemoveFriendPush roleId
         */

        /**
         * Constructs a new Msg_RemoveFriendPush.
         * @memberof proto
         * @classdesc Represents a Msg_RemoveFriendPush.
         * @implements IMsg_RemoveFriendPush
         * @constructor
         * @param {proto.IMsg_RemoveFriendPush=} [p] Properties to set
         */
        function Msg_RemoveFriendPush(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_RemoveFriendPush type.
         * @member {proto.FriendListType} type
         * @memberof proto.Msg_RemoveFriendPush
         * @instance
         */
        Msg_RemoveFriendPush.prototype.type = 0;

        /**
         * Msg_RemoveFriendPush roleId.
         * @member {string} roleId
         * @memberof proto.Msg_RemoveFriendPush
         * @instance
         */
        Msg_RemoveFriendPush.prototype.roleId = "";

        /**
         * Encodes the specified Msg_RemoveFriendPush message. Does not implicitly {@link proto.Msg_RemoveFriendPush.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_RemoveFriendPush
         * @static
         * @param {proto.IMsg_RemoveFriendPush} m Msg_RemoveFriendPush message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_RemoveFriendPush.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.type != null && Object.hasOwnProperty.call(m, "type"))
                w.uint32(8).int32(m.type);
            if (m.roleId != null && Object.hasOwnProperty.call(m, "roleId"))
                w.uint32(18).string(m.roleId);
            return w;
        };

        /**
         * Decodes a Msg_RemoveFriendPush message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_RemoveFriendPush
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_RemoveFriendPush} Msg_RemoveFriendPush
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_RemoveFriendPush.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_RemoveFriendPush();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.type = r.int32();
                    break;
                case 2:
                    m.roleId = r.string();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_RemoveFriendPush;
    })();

    proto.Msg_UpdateFriendOnlineTime = (function() {

        /**
         * Properties of a Msg_UpdateFriendOnlineTime.
         * @memberof proto
         * @interface IMsg_UpdateFriendOnlineTime
         * @property {string|null} [roleId] Msg_UpdateFriendOnlineTime roleId
         * @property {number|Long|null} [offlineTime] Msg_UpdateFriendOnlineTime offlineTime
         */

        /**
         * Constructs a new Msg_UpdateFriendOnlineTime.
         * @memberof proto
         * @classdesc Represents a Msg_UpdateFriendOnlineTime.
         * @implements IMsg_UpdateFriendOnlineTime
         * @constructor
         * @param {proto.IMsg_UpdateFriendOnlineTime=} [p] Properties to set
         */
        function Msg_UpdateFriendOnlineTime(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_UpdateFriendOnlineTime roleId.
         * @member {string} roleId
         * @memberof proto.Msg_UpdateFriendOnlineTime
         * @instance
         */
        Msg_UpdateFriendOnlineTime.prototype.roleId = "";

        /**
         * Msg_UpdateFriendOnlineTime offlineTime.
         * @member {number|Long} offlineTime
         * @memberof proto.Msg_UpdateFriendOnlineTime
         * @instance
         */
        Msg_UpdateFriendOnlineTime.prototype.offlineTime = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

        /**
         * Encodes the specified Msg_UpdateFriendOnlineTime message. Does not implicitly {@link proto.Msg_UpdateFriendOnlineTime.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_UpdateFriendOnlineTime
         * @static
         * @param {proto.IMsg_UpdateFriendOnlineTime} m Msg_UpdateFriendOnlineTime message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_UpdateFriendOnlineTime.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.roleId != null && Object.hasOwnProperty.call(m, "roleId"))
                w.uint32(10).string(m.roleId);
            if (m.offlineTime != null && Object.hasOwnProperty.call(m, "offlineTime"))
                w.uint32(16).int64(m.offlineTime);
            return w;
        };

        /**
         * Decodes a Msg_UpdateFriendOnlineTime message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_UpdateFriendOnlineTime
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_UpdateFriendOnlineTime} Msg_UpdateFriendOnlineTime
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_UpdateFriendOnlineTime.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_UpdateFriendOnlineTime();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.roleId = r.string();
                    break;
                case 2:
                    m.offlineTime = r.int64();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_UpdateFriendOnlineTime;
    })();

    proto.Msg_UpdatFriendPowerScore = (function() {

        /**
         * Properties of a Msg_UpdatFriendPowerScore.
         * @memberof proto
         * @interface IMsg_UpdatFriendPowerScore
         * @property {string|null} [roleId] Msg_UpdatFriendPowerScore roleId
         * @property {number|null} [powerScore] Msg_UpdatFriendPowerScore powerScore
         */

        /**
         * Constructs a new Msg_UpdatFriendPowerScore.
         * @memberof proto
         * @classdesc Represents a Msg_UpdatFriendPowerScore.
         * @implements IMsg_UpdatFriendPowerScore
         * @constructor
         * @param {proto.IMsg_UpdatFriendPowerScore=} [p] Properties to set
         */
        function Msg_UpdatFriendPowerScore(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_UpdatFriendPowerScore roleId.
         * @member {string} roleId
         * @memberof proto.Msg_UpdatFriendPowerScore
         * @instance
         */
        Msg_UpdatFriendPowerScore.prototype.roleId = "";

        /**
         * Msg_UpdatFriendPowerScore powerScore.
         * @member {number} powerScore
         * @memberof proto.Msg_UpdatFriendPowerScore
         * @instance
         */
        Msg_UpdatFriendPowerScore.prototype.powerScore = 0;

        /**
         * Encodes the specified Msg_UpdatFriendPowerScore message. Does not implicitly {@link proto.Msg_UpdatFriendPowerScore.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_UpdatFriendPowerScore
         * @static
         * @param {proto.IMsg_UpdatFriendPowerScore} m Msg_UpdatFriendPowerScore message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_UpdatFriendPowerScore.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.roleId != null && Object.hasOwnProperty.call(m, "roleId"))
                w.uint32(10).string(m.roleId);
            if (m.powerScore != null && Object.hasOwnProperty.call(m, "powerScore"))
                w.uint32(16).int32(m.powerScore);
            return w;
        };

        /**
         * Decodes a Msg_UpdatFriendPowerScore message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_UpdatFriendPowerScore
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_UpdatFriendPowerScore} Msg_UpdatFriendPowerScore
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_UpdatFriendPowerScore.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_UpdatFriendPowerScore();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.roleId = r.string();
                    break;
                case 2:
                    m.powerScore = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_UpdatFriendPowerScore;
    })();

    proto.Msg_AddBlacklistReq = (function() {

        /**
         * Properties of a Msg_AddBlacklistReq.
         * @memberof proto
         * @interface IMsg_AddBlacklistReq
         * @property {string|null} [roleId] Msg_AddBlacklistReq roleId
         */

        /**
         * Constructs a new Msg_AddBlacklistReq.
         * @memberof proto
         * @classdesc Represents a Msg_AddBlacklistReq.
         * @implements IMsg_AddBlacklistReq
         * @constructor
         * @param {proto.IMsg_AddBlacklistReq=} [p] Properties to set
         */
        function Msg_AddBlacklistReq(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_AddBlacklistReq roleId.
         * @member {string} roleId
         * @memberof proto.Msg_AddBlacklistReq
         * @instance
         */
        Msg_AddBlacklistReq.prototype.roleId = "";

        /**
         * Encodes the specified Msg_AddBlacklistReq message. Does not implicitly {@link proto.Msg_AddBlacklistReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_AddBlacklistReq
         * @static
         * @param {proto.IMsg_AddBlacklistReq} m Msg_AddBlacklistReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_AddBlacklistReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.roleId != null && Object.hasOwnProperty.call(m, "roleId"))
                w.uint32(10).string(m.roleId);
            return w;
        };

        /**
         * Decodes a Msg_AddBlacklistReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_AddBlacklistReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_AddBlacklistReq} Msg_AddBlacklistReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_AddBlacklistReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_AddBlacklistReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.roleId = r.string();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_AddBlacklistReq;
    })();

    proto.Msg_AddBlacklistRsp = (function() {

        /**
         * Properties of a Msg_AddBlacklistRsp.
         * @memberof proto
         * @interface IMsg_AddBlacklistRsp
         * @property {proto.ICommonError|null} [error] Msg_AddBlacklistRsp error
         */

        /**
         * Constructs a new Msg_AddBlacklistRsp.
         * @memberof proto
         * @classdesc Represents a Msg_AddBlacklistRsp.
         * @implements IMsg_AddBlacklistRsp
         * @constructor
         * @param {proto.IMsg_AddBlacklistRsp=} [p] Properties to set
         */
        function Msg_AddBlacklistRsp(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_AddBlacklistRsp error.
         * @member {proto.ICommonError|null|undefined} error
         * @memberof proto.Msg_AddBlacklistRsp
         * @instance
         */
        Msg_AddBlacklistRsp.prototype.error = null;

        /**
         * Encodes the specified Msg_AddBlacklistRsp message. Does not implicitly {@link proto.Msg_AddBlacklistRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_AddBlacklistRsp
         * @static
         * @param {proto.IMsg_AddBlacklistRsp} m Msg_AddBlacklistRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_AddBlacklistRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.error != null && Object.hasOwnProperty.call(m, "error"))
                $root.proto.CommonError.encode(m.error, w.uint32(10).fork()).ldelim();
            return w;
        };

        /**
         * Decodes a Msg_AddBlacklistRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_AddBlacklistRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_AddBlacklistRsp} Msg_AddBlacklistRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_AddBlacklistRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_AddBlacklistRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.error = $root.proto.CommonError.decode(r, r.uint32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_AddBlacklistRsp;
    })();

    proto.Msg_RemoveBlacklistReq = (function() {

        /**
         * Properties of a Msg_RemoveBlacklistReq.
         * @memberof proto
         * @interface IMsg_RemoveBlacklistReq
         * @property {string|null} [roleId] Msg_RemoveBlacklistReq roleId
         */

        /**
         * Constructs a new Msg_RemoveBlacklistReq.
         * @memberof proto
         * @classdesc Represents a Msg_RemoveBlacklistReq.
         * @implements IMsg_RemoveBlacklistReq
         * @constructor
         * @param {proto.IMsg_RemoveBlacklistReq=} [p] Properties to set
         */
        function Msg_RemoveBlacklistReq(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_RemoveBlacklistReq roleId.
         * @member {string} roleId
         * @memberof proto.Msg_RemoveBlacklistReq
         * @instance
         */
        Msg_RemoveBlacklistReq.prototype.roleId = "";

        /**
         * Encodes the specified Msg_RemoveBlacklistReq message. Does not implicitly {@link proto.Msg_RemoveBlacklistReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_RemoveBlacklistReq
         * @static
         * @param {proto.IMsg_RemoveBlacklistReq} m Msg_RemoveBlacklistReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_RemoveBlacklistReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.roleId != null && Object.hasOwnProperty.call(m, "roleId"))
                w.uint32(10).string(m.roleId);
            return w;
        };

        /**
         * Decodes a Msg_RemoveBlacklistReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_RemoveBlacklistReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_RemoveBlacklistReq} Msg_RemoveBlacklistReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_RemoveBlacklistReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_RemoveBlacklistReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.roleId = r.string();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_RemoveBlacklistReq;
    })();

    proto.Msg_RemoveBlacklistRsp = (function() {

        /**
         * Properties of a Msg_RemoveBlacklistRsp.
         * @memberof proto
         * @interface IMsg_RemoveBlacklistRsp
         * @property {proto.ICommonError|null} [error] Msg_RemoveBlacklistRsp error
         */

        /**
         * Constructs a new Msg_RemoveBlacklistRsp.
         * @memberof proto
         * @classdesc Represents a Msg_RemoveBlacklistRsp.
         * @implements IMsg_RemoveBlacklistRsp
         * @constructor
         * @param {proto.IMsg_RemoveBlacklistRsp=} [p] Properties to set
         */
        function Msg_RemoveBlacklistRsp(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_RemoveBlacklistRsp error.
         * @member {proto.ICommonError|null|undefined} error
         * @memberof proto.Msg_RemoveBlacklistRsp
         * @instance
         */
        Msg_RemoveBlacklistRsp.prototype.error = null;

        /**
         * Encodes the specified Msg_RemoveBlacklistRsp message. Does not implicitly {@link proto.Msg_RemoveBlacklistRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_RemoveBlacklistRsp
         * @static
         * @param {proto.IMsg_RemoveBlacklistRsp} m Msg_RemoveBlacklistRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_RemoveBlacklistRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.error != null && Object.hasOwnProperty.call(m, "error"))
                $root.proto.CommonError.encode(m.error, w.uint32(10).fork()).ldelim();
            return w;
        };

        /**
         * Decodes a Msg_RemoveBlacklistRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_RemoveBlacklistRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_RemoveBlacklistRsp} Msg_RemoveBlacklistRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_RemoveBlacklistRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_RemoveBlacklistRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.error = $root.proto.CommonError.decode(r, r.uint32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_RemoveBlacklistRsp;
    })();

    proto.Msg_AddFriendReq = (function() {

        /**
         * Properties of a Msg_AddFriendReq.
         * @memberof proto
         * @interface IMsg_AddFriendReq
         * @property {string|null} [roleId] Msg_AddFriendReq roleId
         */

        /**
         * Constructs a new Msg_AddFriendReq.
         * @memberof proto
         * @classdesc Represents a Msg_AddFriendReq.
         * @implements IMsg_AddFriendReq
         * @constructor
         * @param {proto.IMsg_AddFriendReq=} [p] Properties to set
         */
        function Msg_AddFriendReq(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_AddFriendReq roleId.
         * @member {string} roleId
         * @memberof proto.Msg_AddFriendReq
         * @instance
         */
        Msg_AddFriendReq.prototype.roleId = "";

        /**
         * Encodes the specified Msg_AddFriendReq message. Does not implicitly {@link proto.Msg_AddFriendReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_AddFriendReq
         * @static
         * @param {proto.IMsg_AddFriendReq} m Msg_AddFriendReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_AddFriendReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.roleId != null && Object.hasOwnProperty.call(m, "roleId"))
                w.uint32(10).string(m.roleId);
            return w;
        };

        /**
         * Decodes a Msg_AddFriendReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_AddFriendReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_AddFriendReq} Msg_AddFriendReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_AddFriendReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_AddFriendReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.roleId = r.string();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_AddFriendReq;
    })();

    proto.Msg_AddFriendRsp = (function() {

        /**
         * Properties of a Msg_AddFriendRsp.
         * @memberof proto
         * @interface IMsg_AddFriendRsp
         * @property {proto.ICommonError|null} [error] Msg_AddFriendRsp error
         * @property {string|null} [roleId] Msg_AddFriendRsp roleId
         */

        /**
         * Constructs a new Msg_AddFriendRsp.
         * @memberof proto
         * @classdesc Represents a Msg_AddFriendRsp.
         * @implements IMsg_AddFriendRsp
         * @constructor
         * @param {proto.IMsg_AddFriendRsp=} [p] Properties to set
         */
        function Msg_AddFriendRsp(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_AddFriendRsp error.
         * @member {proto.ICommonError|null|undefined} error
         * @memberof proto.Msg_AddFriendRsp
         * @instance
         */
        Msg_AddFriendRsp.prototype.error = null;

        /**
         * Msg_AddFriendRsp roleId.
         * @member {string} roleId
         * @memberof proto.Msg_AddFriendRsp
         * @instance
         */
        Msg_AddFriendRsp.prototype.roleId = "";

        /**
         * Encodes the specified Msg_AddFriendRsp message. Does not implicitly {@link proto.Msg_AddFriendRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_AddFriendRsp
         * @static
         * @param {proto.IMsg_AddFriendRsp} m Msg_AddFriendRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_AddFriendRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.error != null && Object.hasOwnProperty.call(m, "error"))
                $root.proto.CommonError.encode(m.error, w.uint32(10).fork()).ldelim();
            if (m.roleId != null && Object.hasOwnProperty.call(m, "roleId"))
                w.uint32(18).string(m.roleId);
            return w;
        };

        /**
         * Decodes a Msg_AddFriendRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_AddFriendRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_AddFriendRsp} Msg_AddFriendRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_AddFriendRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_AddFriendRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.error = $root.proto.CommonError.decode(r, r.uint32());
                    break;
                case 2:
                    m.roleId = r.string();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_AddFriendRsp;
    })();

    proto.Msg_ConfirmFriendReq = (function() {

        /**
         * Properties of a Msg_ConfirmFriendReq.
         * @memberof proto
         * @interface IMsg_ConfirmFriendReq
         * @property {Array.<string>|null} [roleId] Msg_ConfirmFriendReq roleId
         */

        /**
         * Constructs a new Msg_ConfirmFriendReq.
         * @memberof proto
         * @classdesc Represents a Msg_ConfirmFriendReq.
         * @implements IMsg_ConfirmFriendReq
         * @constructor
         * @param {proto.IMsg_ConfirmFriendReq=} [p] Properties to set
         */
        function Msg_ConfirmFriendReq(p) {
            this.roleId = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_ConfirmFriendReq roleId.
         * @member {Array.<string>} roleId
         * @memberof proto.Msg_ConfirmFriendReq
         * @instance
         */
        Msg_ConfirmFriendReq.prototype.roleId = $util.emptyArray;

        /**
         * Encodes the specified Msg_ConfirmFriendReq message. Does not implicitly {@link proto.Msg_ConfirmFriendReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_ConfirmFriendReq
         * @static
         * @param {proto.IMsg_ConfirmFriendReq} m Msg_ConfirmFriendReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_ConfirmFriendReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.roleId != null && m.roleId.length) {
                for (var i = 0; i < m.roleId.length; ++i)
                    w.uint32(10).string(m.roleId[i]);
            }
            return w;
        };

        /**
         * Decodes a Msg_ConfirmFriendReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_ConfirmFriendReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_ConfirmFriendReq} Msg_ConfirmFriendReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_ConfirmFriendReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_ConfirmFriendReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.roleId && m.roleId.length))
                        m.roleId = [];
                    m.roleId.push(r.string());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_ConfirmFriendReq;
    })();

    proto.Msg_ConfirmFriendRsp = (function() {

        /**
         * Properties of a Msg_ConfirmFriendRsp.
         * @memberof proto
         * @interface IMsg_ConfirmFriendRsp
         * @property {proto.ICommonError|null} [error] Msg_ConfirmFriendRsp error
         */

        /**
         * Constructs a new Msg_ConfirmFriendRsp.
         * @memberof proto
         * @classdesc Represents a Msg_ConfirmFriendRsp.
         * @implements IMsg_ConfirmFriendRsp
         * @constructor
         * @param {proto.IMsg_ConfirmFriendRsp=} [p] Properties to set
         */
        function Msg_ConfirmFriendRsp(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_ConfirmFriendRsp error.
         * @member {proto.ICommonError|null|undefined} error
         * @memberof proto.Msg_ConfirmFriendRsp
         * @instance
         */
        Msg_ConfirmFriendRsp.prototype.error = null;

        /**
         * Encodes the specified Msg_ConfirmFriendRsp message. Does not implicitly {@link proto.Msg_ConfirmFriendRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_ConfirmFriendRsp
         * @static
         * @param {proto.IMsg_ConfirmFriendRsp} m Msg_ConfirmFriendRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_ConfirmFriendRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.error != null && Object.hasOwnProperty.call(m, "error"))
                $root.proto.CommonError.encode(m.error, w.uint32(10).fork()).ldelim();
            return w;
        };

        /**
         * Decodes a Msg_ConfirmFriendRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_ConfirmFriendRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_ConfirmFriendRsp} Msg_ConfirmFriendRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_ConfirmFriendRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_ConfirmFriendRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.error = $root.proto.CommonError.decode(r, r.uint32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_ConfirmFriendRsp;
    })();

    proto.Msg_RemoveFriendApplyReq = (function() {

        /**
         * Properties of a Msg_RemoveFriendApplyReq.
         * @memberof proto
         * @interface IMsg_RemoveFriendApplyReq
         * @property {Array.<string>|null} [roleId] Msg_RemoveFriendApplyReq roleId
         */

        /**
         * Constructs a new Msg_RemoveFriendApplyReq.
         * @memberof proto
         * @classdesc Represents a Msg_RemoveFriendApplyReq.
         * @implements IMsg_RemoveFriendApplyReq
         * @constructor
         * @param {proto.IMsg_RemoveFriendApplyReq=} [p] Properties to set
         */
        function Msg_RemoveFriendApplyReq(p) {
            this.roleId = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_RemoveFriendApplyReq roleId.
         * @member {Array.<string>} roleId
         * @memberof proto.Msg_RemoveFriendApplyReq
         * @instance
         */
        Msg_RemoveFriendApplyReq.prototype.roleId = $util.emptyArray;

        /**
         * Encodes the specified Msg_RemoveFriendApplyReq message. Does not implicitly {@link proto.Msg_RemoveFriendApplyReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_RemoveFriendApplyReq
         * @static
         * @param {proto.IMsg_RemoveFriendApplyReq} m Msg_RemoveFriendApplyReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_RemoveFriendApplyReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.roleId != null && m.roleId.length) {
                for (var i = 0; i < m.roleId.length; ++i)
                    w.uint32(10).string(m.roleId[i]);
            }
            return w;
        };

        /**
         * Decodes a Msg_RemoveFriendApplyReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_RemoveFriendApplyReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_RemoveFriendApplyReq} Msg_RemoveFriendApplyReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_RemoveFriendApplyReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_RemoveFriendApplyReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.roleId && m.roleId.length))
                        m.roleId = [];
                    m.roleId.push(r.string());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_RemoveFriendApplyReq;
    })();

    proto.Msg_RemoveFriendApplyRsp = (function() {

        /**
         * Properties of a Msg_RemoveFriendApplyRsp.
         * @memberof proto
         * @interface IMsg_RemoveFriendApplyRsp
         * @property {proto.ICommonError|null} [error] Msg_RemoveFriendApplyRsp error
         */

        /**
         * Constructs a new Msg_RemoveFriendApplyRsp.
         * @memberof proto
         * @classdesc Represents a Msg_RemoveFriendApplyRsp.
         * @implements IMsg_RemoveFriendApplyRsp
         * @constructor
         * @param {proto.IMsg_RemoveFriendApplyRsp=} [p] Properties to set
         */
        function Msg_RemoveFriendApplyRsp(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_RemoveFriendApplyRsp error.
         * @member {proto.ICommonError|null|undefined} error
         * @memberof proto.Msg_RemoveFriendApplyRsp
         * @instance
         */
        Msg_RemoveFriendApplyRsp.prototype.error = null;

        /**
         * Encodes the specified Msg_RemoveFriendApplyRsp message. Does not implicitly {@link proto.Msg_RemoveFriendApplyRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_RemoveFriendApplyRsp
         * @static
         * @param {proto.IMsg_RemoveFriendApplyRsp} m Msg_RemoveFriendApplyRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_RemoveFriendApplyRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.error != null && Object.hasOwnProperty.call(m, "error"))
                $root.proto.CommonError.encode(m.error, w.uint32(10).fork()).ldelim();
            return w;
        };

        /**
         * Decodes a Msg_RemoveFriendApplyRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_RemoveFriendApplyRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_RemoveFriendApplyRsp} Msg_RemoveFriendApplyRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_RemoveFriendApplyRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_RemoveFriendApplyRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.error = $root.proto.CommonError.decode(r, r.uint32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_RemoveFriendApplyRsp;
    })();

    proto.Msg_RemoveFriendReq = (function() {

        /**
         * Properties of a Msg_RemoveFriendReq.
         * @memberof proto
         * @interface IMsg_RemoveFriendReq
         * @property {string|null} [roleId] Msg_RemoveFriendReq roleId
         */

        /**
         * Constructs a new Msg_RemoveFriendReq.
         * @memberof proto
         * @classdesc Represents a Msg_RemoveFriendReq.
         * @implements IMsg_RemoveFriendReq
         * @constructor
         * @param {proto.IMsg_RemoveFriendReq=} [p] Properties to set
         */
        function Msg_RemoveFriendReq(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_RemoveFriendReq roleId.
         * @member {string} roleId
         * @memberof proto.Msg_RemoveFriendReq
         * @instance
         */
        Msg_RemoveFriendReq.prototype.roleId = "";

        /**
         * Encodes the specified Msg_RemoveFriendReq message. Does not implicitly {@link proto.Msg_RemoveFriendReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_RemoveFriendReq
         * @static
         * @param {proto.IMsg_RemoveFriendReq} m Msg_RemoveFriendReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_RemoveFriendReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.roleId != null && Object.hasOwnProperty.call(m, "roleId"))
                w.uint32(10).string(m.roleId);
            return w;
        };

        /**
         * Decodes a Msg_RemoveFriendReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_RemoveFriendReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_RemoveFriendReq} Msg_RemoveFriendReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_RemoveFriendReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_RemoveFriendReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.roleId = r.string();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_RemoveFriendReq;
    })();

    proto.Msg_RemoveFriendRsp = (function() {

        /**
         * Properties of a Msg_RemoveFriendRsp.
         * @memberof proto
         * @interface IMsg_RemoveFriendRsp
         * @property {proto.ICommonError|null} [error] Msg_RemoveFriendRsp error
         * @property {string|null} [roleId] Msg_RemoveFriendRsp roleId
         */

        /**
         * Constructs a new Msg_RemoveFriendRsp.
         * @memberof proto
         * @classdesc Represents a Msg_RemoveFriendRsp.
         * @implements IMsg_RemoveFriendRsp
         * @constructor
         * @param {proto.IMsg_RemoveFriendRsp=} [p] Properties to set
         */
        function Msg_RemoveFriendRsp(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_RemoveFriendRsp error.
         * @member {proto.ICommonError|null|undefined} error
         * @memberof proto.Msg_RemoveFriendRsp
         * @instance
         */
        Msg_RemoveFriendRsp.prototype.error = null;

        /**
         * Msg_RemoveFriendRsp roleId.
         * @member {string} roleId
         * @memberof proto.Msg_RemoveFriendRsp
         * @instance
         */
        Msg_RemoveFriendRsp.prototype.roleId = "";

        /**
         * Encodes the specified Msg_RemoveFriendRsp message. Does not implicitly {@link proto.Msg_RemoveFriendRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_RemoveFriendRsp
         * @static
         * @param {proto.IMsg_RemoveFriendRsp} m Msg_RemoveFriendRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_RemoveFriendRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.error != null && Object.hasOwnProperty.call(m, "error"))
                $root.proto.CommonError.encode(m.error, w.uint32(10).fork()).ldelim();
            if (m.roleId != null && Object.hasOwnProperty.call(m, "roleId"))
                w.uint32(18).string(m.roleId);
            return w;
        };

        /**
         * Decodes a Msg_RemoveFriendRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_RemoveFriendRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_RemoveFriendRsp} Msg_RemoveFriendRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_RemoveFriendRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_RemoveFriendRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.error = $root.proto.CommonError.decode(r, r.uint32());
                    break;
                case 2:
                    m.roleId = r.string();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_RemoveFriendRsp;
    })();

    proto.Msg_RecommendFriendReq = (function() {

        /**
         * Properties of a Msg_RecommendFriendReq.
         * @memberof proto
         * @interface IMsg_RecommendFriendReq
         */

        /**
         * Constructs a new Msg_RecommendFriendReq.
         * @memberof proto
         * @classdesc Represents a Msg_RecommendFriendReq.
         * @implements IMsg_RecommendFriendReq
         * @constructor
         * @param {proto.IMsg_RecommendFriendReq=} [p] Properties to set
         */
        function Msg_RecommendFriendReq(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Encodes the specified Msg_RecommendFriendReq message. Does not implicitly {@link proto.Msg_RecommendFriendReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_RecommendFriendReq
         * @static
         * @param {proto.IMsg_RecommendFriendReq} m Msg_RecommendFriendReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_RecommendFriendReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };

        /**
         * Decodes a Msg_RecommendFriendReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_RecommendFriendReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_RecommendFriendReq} Msg_RecommendFriendReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_RecommendFriendReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_RecommendFriendReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_RecommendFriendReq;
    })();

    proto.Msg_RecommendFriendRsp = (function() {

        /**
         * Properties of a Msg_RecommendFriendRsp.
         * @memberof proto
         * @interface IMsg_RecommendFriendRsp
         * @property {proto.ICommonError|null} [error] Msg_RecommendFriendRsp error
         * @property {Array.<proto.ISimpleRole>|null} [list] Msg_RecommendFriendRsp list
         */

        /**
         * Constructs a new Msg_RecommendFriendRsp.
         * @memberof proto
         * @classdesc Represents a Msg_RecommendFriendRsp.
         * @implements IMsg_RecommendFriendRsp
         * @constructor
         * @param {proto.IMsg_RecommendFriendRsp=} [p] Properties to set
         */
        function Msg_RecommendFriendRsp(p) {
            this.list = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_RecommendFriendRsp error.
         * @member {proto.ICommonError|null|undefined} error
         * @memberof proto.Msg_RecommendFriendRsp
         * @instance
         */
        Msg_RecommendFriendRsp.prototype.error = null;

        /**
         * Msg_RecommendFriendRsp list.
         * @member {Array.<proto.ISimpleRole>} list
         * @memberof proto.Msg_RecommendFriendRsp
         * @instance
         */
        Msg_RecommendFriendRsp.prototype.list = $util.emptyArray;

        /**
         * Encodes the specified Msg_RecommendFriendRsp message. Does not implicitly {@link proto.Msg_RecommendFriendRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_RecommendFriendRsp
         * @static
         * @param {proto.IMsg_RecommendFriendRsp} m Msg_RecommendFriendRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_RecommendFriendRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.error != null && Object.hasOwnProperty.call(m, "error"))
                $root.proto.CommonError.encode(m.error, w.uint32(10).fork()).ldelim();
            if (m.list != null && m.list.length) {
                for (var i = 0; i < m.list.length; ++i)
                    $root.proto.SimpleRole.encode(m.list[i], w.uint32(18).fork()).ldelim();
            }
            return w;
        };

        /**
         * Decodes a Msg_RecommendFriendRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_RecommendFriendRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_RecommendFriendRsp} Msg_RecommendFriendRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_RecommendFriendRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_RecommendFriendRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.error = $root.proto.CommonError.decode(r, r.uint32());
                    break;
                case 2:
                    if (!(m.list && m.list.length))
                        m.list = [];
                    m.list.push($root.proto.SimpleRole.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_RecommendFriendRsp;
    })();

    proto.Msg_FindFriendReq = (function() {

        /**
         * Properties of a Msg_FindFriendReq.
         * @memberof proto
         * @interface IMsg_FindFriendReq
         * @property {string|null} [name] Msg_FindFriendReq name
         */

        /**
         * Constructs a new Msg_FindFriendReq.
         * @memberof proto
         * @classdesc Represents a Msg_FindFriendReq.
         * @implements IMsg_FindFriendReq
         * @constructor
         * @param {proto.IMsg_FindFriendReq=} [p] Properties to set
         */
        function Msg_FindFriendReq(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_FindFriendReq name.
         * @member {string} name
         * @memberof proto.Msg_FindFriendReq
         * @instance
         */
        Msg_FindFriendReq.prototype.name = "";

        /**
         * Encodes the specified Msg_FindFriendReq message. Does not implicitly {@link proto.Msg_FindFriendReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_FindFriendReq
         * @static
         * @param {proto.IMsg_FindFriendReq} m Msg_FindFriendReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_FindFriendReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.name != null && Object.hasOwnProperty.call(m, "name"))
                w.uint32(10).string(m.name);
            return w;
        };

        /**
         * Decodes a Msg_FindFriendReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_FindFriendReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_FindFriendReq} Msg_FindFriendReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_FindFriendReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_FindFriendReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.name = r.string();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_FindFriendReq;
    })();

    proto.Msg_FindFriendRsp = (function() {

        /**
         * Properties of a Msg_FindFriendRsp.
         * @memberof proto
         * @interface IMsg_FindFriendRsp
         * @property {proto.ICommonError|null} [error] Msg_FindFriendRsp error
         * @property {proto.ISimpleRole|null} [role] Msg_FindFriendRsp role
         */

        /**
         * Constructs a new Msg_FindFriendRsp.
         * @memberof proto
         * @classdesc Represents a Msg_FindFriendRsp.
         * @implements IMsg_FindFriendRsp
         * @constructor
         * @param {proto.IMsg_FindFriendRsp=} [p] Properties to set
         */
        function Msg_FindFriendRsp(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_FindFriendRsp error.
         * @member {proto.ICommonError|null|undefined} error
         * @memberof proto.Msg_FindFriendRsp
         * @instance
         */
        Msg_FindFriendRsp.prototype.error = null;

        /**
         * Msg_FindFriendRsp role.
         * @member {proto.ISimpleRole|null|undefined} role
         * @memberof proto.Msg_FindFriendRsp
         * @instance
         */
        Msg_FindFriendRsp.prototype.role = null;

        /**
         * Encodes the specified Msg_FindFriendRsp message. Does not implicitly {@link proto.Msg_FindFriendRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_FindFriendRsp
         * @static
         * @param {proto.IMsg_FindFriendRsp} m Msg_FindFriendRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_FindFriendRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.error != null && Object.hasOwnProperty.call(m, "error"))
                $root.proto.CommonError.encode(m.error, w.uint32(10).fork()).ldelim();
            if (m.role != null && Object.hasOwnProperty.call(m, "role"))
                $root.proto.SimpleRole.encode(m.role, w.uint32(18).fork()).ldelim();
            return w;
        };

        /**
         * Decodes a Msg_FindFriendRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_FindFriendRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_FindFriendRsp} Msg_FindFriendRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_FindFriendRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_FindFriendRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.error = $root.proto.CommonError.decode(r, r.uint32());
                    break;
                case 2:
                    m.role = $root.proto.SimpleRole.decode(r, r.uint32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_FindFriendRsp;
    })();

    proto.Msg_GivingGiftReq = (function() {

        /**
         * Properties of a Msg_GivingGiftReq.
         * @memberof proto
         * @interface IMsg_GivingGiftReq
         * @property {Array.<string>|null} [roleId] Msg_GivingGiftReq roleId
         */

        /**
         * Constructs a new Msg_GivingGiftReq.
         * @memberof proto
         * @classdesc Represents a Msg_GivingGiftReq.
         * @implements IMsg_GivingGiftReq
         * @constructor
         * @param {proto.IMsg_GivingGiftReq=} [p] Properties to set
         */
        function Msg_GivingGiftReq(p) {
            this.roleId = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_GivingGiftReq roleId.
         * @member {Array.<string>} roleId
         * @memberof proto.Msg_GivingGiftReq
         * @instance
         */
        Msg_GivingGiftReq.prototype.roleId = $util.emptyArray;

        /**
         * Encodes the specified Msg_GivingGiftReq message. Does not implicitly {@link proto.Msg_GivingGiftReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_GivingGiftReq
         * @static
         * @param {proto.IMsg_GivingGiftReq} m Msg_GivingGiftReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_GivingGiftReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.roleId != null && m.roleId.length) {
                for (var i = 0; i < m.roleId.length; ++i)
                    w.uint32(10).string(m.roleId[i]);
            }
            return w;
        };

        /**
         * Decodes a Msg_GivingGiftReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_GivingGiftReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_GivingGiftReq} Msg_GivingGiftReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_GivingGiftReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_GivingGiftReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.roleId && m.roleId.length))
                        m.roleId = [];
                    m.roleId.push(r.string());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_GivingGiftReq;
    })();

    proto.Msg_GivingGiftRsp = (function() {

        /**
         * Properties of a Msg_GivingGiftRsp.
         * @memberof proto
         * @interface IMsg_GivingGiftRsp
         * @property {proto.ICommonError|null} [error] Msg_GivingGiftRsp error
         * @property {Array.<string>|null} [roleId] Msg_GivingGiftRsp roleId
         */

        /**
         * Constructs a new Msg_GivingGiftRsp.
         * @memberof proto
         * @classdesc Represents a Msg_GivingGiftRsp.
         * @implements IMsg_GivingGiftRsp
         * @constructor
         * @param {proto.IMsg_GivingGiftRsp=} [p] Properties to set
         */
        function Msg_GivingGiftRsp(p) {
            this.roleId = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_GivingGiftRsp error.
         * @member {proto.ICommonError|null|undefined} error
         * @memberof proto.Msg_GivingGiftRsp
         * @instance
         */
        Msg_GivingGiftRsp.prototype.error = null;

        /**
         * Msg_GivingGiftRsp roleId.
         * @member {Array.<string>} roleId
         * @memberof proto.Msg_GivingGiftRsp
         * @instance
         */
        Msg_GivingGiftRsp.prototype.roleId = $util.emptyArray;

        /**
         * Encodes the specified Msg_GivingGiftRsp message. Does not implicitly {@link proto.Msg_GivingGiftRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_GivingGiftRsp
         * @static
         * @param {proto.IMsg_GivingGiftRsp} m Msg_GivingGiftRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_GivingGiftRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.error != null && Object.hasOwnProperty.call(m, "error"))
                $root.proto.CommonError.encode(m.error, w.uint32(10).fork()).ldelim();
            if (m.roleId != null && m.roleId.length) {
                for (var i = 0; i < m.roleId.length; ++i)
                    w.uint32(18).string(m.roleId[i]);
            }
            return w;
        };

        /**
         * Decodes a Msg_GivingGiftRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_GivingGiftRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_GivingGiftRsp} Msg_GivingGiftRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_GivingGiftRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_GivingGiftRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.error = $root.proto.CommonError.decode(r, r.uint32());
                    break;
                case 2:
                    if (!(m.roleId && m.roleId.length))
                        m.roleId = [];
                    m.roleId.push(r.string());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_GivingGiftRsp;
    })();

    proto.Msg_RecvGiftReq = (function() {

        /**
         * Properties of a Msg_RecvGiftReq.
         * @memberof proto
         * @interface IMsg_RecvGiftReq
         * @property {Array.<string>|null} [roleId] Msg_RecvGiftReq roleId
         */

        /**
         * Constructs a new Msg_RecvGiftReq.
         * @memberof proto
         * @classdesc Represents a Msg_RecvGiftReq.
         * @implements IMsg_RecvGiftReq
         * @constructor
         * @param {proto.IMsg_RecvGiftReq=} [p] Properties to set
         */
        function Msg_RecvGiftReq(p) {
            this.roleId = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_RecvGiftReq roleId.
         * @member {Array.<string>} roleId
         * @memberof proto.Msg_RecvGiftReq
         * @instance
         */
        Msg_RecvGiftReq.prototype.roleId = $util.emptyArray;

        /**
         * Encodes the specified Msg_RecvGiftReq message. Does not implicitly {@link proto.Msg_RecvGiftReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_RecvGiftReq
         * @static
         * @param {proto.IMsg_RecvGiftReq} m Msg_RecvGiftReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_RecvGiftReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.roleId != null && m.roleId.length) {
                for (var i = 0; i < m.roleId.length; ++i)
                    w.uint32(10).string(m.roleId[i]);
            }
            return w;
        };

        /**
         * Decodes a Msg_RecvGiftReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_RecvGiftReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_RecvGiftReq} Msg_RecvGiftReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_RecvGiftReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_RecvGiftReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.roleId && m.roleId.length))
                        m.roleId = [];
                    m.roleId.push(r.string());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_RecvGiftReq;
    })();

    proto.RecvGiftResult = (function() {

        /**
         * Properties of a RecvGiftResult.
         * @memberof proto
         * @interface IRecvGiftResult
         * @property {proto.ICommonError|null} [error] RecvGiftResult error
         * @property {string|null} [roleId] RecvGiftResult roleId
         */

        /**
         * Constructs a new RecvGiftResult.
         * @memberof proto
         * @classdesc Represents a RecvGiftResult.
         * @implements IRecvGiftResult
         * @constructor
         * @param {proto.IRecvGiftResult=} [p] Properties to set
         */
        function RecvGiftResult(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * RecvGiftResult error.
         * @member {proto.ICommonError|null|undefined} error
         * @memberof proto.RecvGiftResult
         * @instance
         */
        RecvGiftResult.prototype.error = null;

        /**
         * RecvGiftResult roleId.
         * @member {string} roleId
         * @memberof proto.RecvGiftResult
         * @instance
         */
        RecvGiftResult.prototype.roleId = "";

        /**
         * Encodes the specified RecvGiftResult message. Does not implicitly {@link proto.RecvGiftResult.verify|verify} messages.
         * @function encode
         * @memberof proto.RecvGiftResult
         * @static
         * @param {proto.IRecvGiftResult} m RecvGiftResult message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        RecvGiftResult.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.error != null && Object.hasOwnProperty.call(m, "error"))
                $root.proto.CommonError.encode(m.error, w.uint32(10).fork()).ldelim();
            if (m.roleId != null && Object.hasOwnProperty.call(m, "roleId"))
                w.uint32(18).string(m.roleId);
            return w;
        };

        /**
         * Decodes a RecvGiftResult message from the specified reader or buffer.
         * @function decode
         * @memberof proto.RecvGiftResult
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.RecvGiftResult} RecvGiftResult
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        RecvGiftResult.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.RecvGiftResult();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.error = $root.proto.CommonError.decode(r, r.uint32());
                    break;
                case 2:
                    m.roleId = r.string();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return RecvGiftResult;
    })();

    proto.Msg_RecvGiftRsp = (function() {

        /**
         * Properties of a Msg_RecvGiftRsp.
         * @memberof proto
         * @interface IMsg_RecvGiftRsp
         * @property {proto.ICommonError|null} [error] Msg_RecvGiftRsp error
         * @property {Array.<proto.IRecvGiftResult>|null} [result] Msg_RecvGiftRsp result
         */

        /**
         * Constructs a new Msg_RecvGiftRsp.
         * @memberof proto
         * @classdesc Represents a Msg_RecvGiftRsp.
         * @implements IMsg_RecvGiftRsp
         * @constructor
         * @param {proto.IMsg_RecvGiftRsp=} [p] Properties to set
         */
        function Msg_RecvGiftRsp(p) {
            this.result = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_RecvGiftRsp error.
         * @member {proto.ICommonError|null|undefined} error
         * @memberof proto.Msg_RecvGiftRsp
         * @instance
         */
        Msg_RecvGiftRsp.prototype.error = null;

        /**
         * Msg_RecvGiftRsp result.
         * @member {Array.<proto.IRecvGiftResult>} result
         * @memberof proto.Msg_RecvGiftRsp
         * @instance
         */
        Msg_RecvGiftRsp.prototype.result = $util.emptyArray;

        /**
         * Encodes the specified Msg_RecvGiftRsp message. Does not implicitly {@link proto.Msg_RecvGiftRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_RecvGiftRsp
         * @static
         * @param {proto.IMsg_RecvGiftRsp} m Msg_RecvGiftRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_RecvGiftRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.error != null && Object.hasOwnProperty.call(m, "error"))
                $root.proto.CommonError.encode(m.error, w.uint32(10).fork()).ldelim();
            if (m.result != null && m.result.length) {
                for (var i = 0; i < m.result.length; ++i)
                    $root.proto.RecvGiftResult.encode(m.result[i], w.uint32(18).fork()).ldelim();
            }
            return w;
        };

        /**
         * Decodes a Msg_RecvGiftRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_RecvGiftRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_RecvGiftRsp} Msg_RecvGiftRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_RecvGiftRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_RecvGiftRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.error = $root.proto.CommonError.decode(r, r.uint32());
                    break;
                case 2:
                    if (!(m.result && m.result.length))
                        m.result = [];
                    m.result.push($root.proto.RecvGiftResult.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_RecvGiftRsp;
    })();

    proto.Msg_SyncGiftList = (function() {

        /**
         * Properties of a Msg_SyncGiftList.
         * @memberof proto
         * @interface IMsg_SyncGiftList
         * @property {Array.<string>|null} [givingList] Msg_SyncGiftList givingList
         * @property {Array.<string>|null} [recvList] Msg_SyncGiftList recvList
         * @property {Array.<string>|null} [giftList] Msg_SyncGiftList giftList
         */

        /**
         * Constructs a new Msg_SyncGiftList.
         * @memberof proto
         * @classdesc Represents a Msg_SyncGiftList.
         * @implements IMsg_SyncGiftList
         * @constructor
         * @param {proto.IMsg_SyncGiftList=} [p] Properties to set
         */
        function Msg_SyncGiftList(p) {
            this.givingList = [];
            this.recvList = [];
            this.giftList = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_SyncGiftList givingList.
         * @member {Array.<string>} givingList
         * @memberof proto.Msg_SyncGiftList
         * @instance
         */
        Msg_SyncGiftList.prototype.givingList = $util.emptyArray;

        /**
         * Msg_SyncGiftList recvList.
         * @member {Array.<string>} recvList
         * @memberof proto.Msg_SyncGiftList
         * @instance
         */
        Msg_SyncGiftList.prototype.recvList = $util.emptyArray;

        /**
         * Msg_SyncGiftList giftList.
         * @member {Array.<string>} giftList
         * @memberof proto.Msg_SyncGiftList
         * @instance
         */
        Msg_SyncGiftList.prototype.giftList = $util.emptyArray;

        /**
         * Encodes the specified Msg_SyncGiftList message. Does not implicitly {@link proto.Msg_SyncGiftList.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_SyncGiftList
         * @static
         * @param {proto.IMsg_SyncGiftList} m Msg_SyncGiftList message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_SyncGiftList.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.givingList != null && m.givingList.length) {
                for (var i = 0; i < m.givingList.length; ++i)
                    w.uint32(10).string(m.givingList[i]);
            }
            if (m.recvList != null && m.recvList.length) {
                for (var i = 0; i < m.recvList.length; ++i)
                    w.uint32(18).string(m.recvList[i]);
            }
            if (m.giftList != null && m.giftList.length) {
                for (var i = 0; i < m.giftList.length; ++i)
                    w.uint32(26).string(m.giftList[i]);
            }
            return w;
        };

        /**
         * Decodes a Msg_SyncGiftList message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_SyncGiftList
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_SyncGiftList} Msg_SyncGiftList
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_SyncGiftList.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_SyncGiftList();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.givingList && m.givingList.length))
                        m.givingList = [];
                    m.givingList.push(r.string());
                    break;
                case 2:
                    if (!(m.recvList && m.recvList.length))
                        m.recvList = [];
                    m.recvList.push(r.string());
                    break;
                case 3:
                    if (!(m.giftList && m.giftList.length))
                        m.giftList = [];
                    m.giftList.push(r.string());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_SyncGiftList;
    })();

    proto.Msg_GiftPush = (function() {

        /**
         * Properties of a Msg_GiftPush.
         * @memberof proto
         * @interface IMsg_GiftPush
         * @property {string|null} [roleId] Msg_GiftPush roleId
         */

        /**
         * Constructs a new Msg_GiftPush.
         * @memberof proto
         * @classdesc Represents a Msg_GiftPush.
         * @implements IMsg_GiftPush
         * @constructor
         * @param {proto.IMsg_GiftPush=} [p] Properties to set
         */
        function Msg_GiftPush(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_GiftPush roleId.
         * @member {string} roleId
         * @memberof proto.Msg_GiftPush
         * @instance
         */
        Msg_GiftPush.prototype.roleId = "";

        /**
         * Encodes the specified Msg_GiftPush message. Does not implicitly {@link proto.Msg_GiftPush.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_GiftPush
         * @static
         * @param {proto.IMsg_GiftPush} m Msg_GiftPush message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_GiftPush.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.roleId != null && Object.hasOwnProperty.call(m, "roleId"))
                w.uint32(10).string(m.roleId);
            return w;
        };

        /**
         * Decodes a Msg_GiftPush message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_GiftPush
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_GiftPush} Msg_GiftPush
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_GiftPush.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_GiftPush();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.roleId = r.string();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_GiftPush;
    })();

    proto.Msg_UseRedeemCodeReq = (function() {

        /**
         * Properties of a Msg_UseRedeemCodeReq.
         * @memberof proto
         * @interface IMsg_UseRedeemCodeReq
         * @property {string|null} [code] Msg_UseRedeemCodeReq code
         */

        /**
         * Constructs a new Msg_UseRedeemCodeReq.
         * @memberof proto
         * @classdesc Represents a Msg_UseRedeemCodeReq.
         * @implements IMsg_UseRedeemCodeReq
         * @constructor
         * @param {proto.IMsg_UseRedeemCodeReq=} [p] Properties to set
         */
        function Msg_UseRedeemCodeReq(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_UseRedeemCodeReq code.
         * @member {string} code
         * @memberof proto.Msg_UseRedeemCodeReq
         * @instance
         */
        Msg_UseRedeemCodeReq.prototype.code = "";

        /**
         * Encodes the specified Msg_UseRedeemCodeReq message. Does not implicitly {@link proto.Msg_UseRedeemCodeReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_UseRedeemCodeReq
         * @static
         * @param {proto.IMsg_UseRedeemCodeReq} m Msg_UseRedeemCodeReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_UseRedeemCodeReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.code != null && Object.hasOwnProperty.call(m, "code"))
                w.uint32(10).string(m.code);
            return w;
        };

        /**
         * Decodes a Msg_UseRedeemCodeReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_UseRedeemCodeReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_UseRedeemCodeReq} Msg_UseRedeemCodeReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_UseRedeemCodeReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_UseRedeemCodeReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.code = r.string();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_UseRedeemCodeReq;
    })();

    proto.Msg_UseRedeemCodeRsp = (function() {

        /**
         * Properties of a Msg_UseRedeemCodeRsp.
         * @memberof proto
         * @interface IMsg_UseRedeemCodeRsp
         * @property {proto.ICommonError|null} [error] Msg_UseRedeemCodeRsp error
         * @property {Array.<proto.IItem>|null} [rewards] Msg_UseRedeemCodeRsp rewards
         */

        /**
         * Constructs a new Msg_UseRedeemCodeRsp.
         * @memberof proto
         * @classdesc Represents a Msg_UseRedeemCodeRsp.
         * @implements IMsg_UseRedeemCodeRsp
         * @constructor
         * @param {proto.IMsg_UseRedeemCodeRsp=} [p] Properties to set
         */
        function Msg_UseRedeemCodeRsp(p) {
            this.rewards = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_UseRedeemCodeRsp error.
         * @member {proto.ICommonError|null|undefined} error
         * @memberof proto.Msg_UseRedeemCodeRsp
         * @instance
         */
        Msg_UseRedeemCodeRsp.prototype.error = null;

        /**
         * Msg_UseRedeemCodeRsp rewards.
         * @member {Array.<proto.IItem>} rewards
         * @memberof proto.Msg_UseRedeemCodeRsp
         * @instance
         */
        Msg_UseRedeemCodeRsp.prototype.rewards = $util.emptyArray;

        /**
         * Encodes the specified Msg_UseRedeemCodeRsp message. Does not implicitly {@link proto.Msg_UseRedeemCodeRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_UseRedeemCodeRsp
         * @static
         * @param {proto.IMsg_UseRedeemCodeRsp} m Msg_UseRedeemCodeRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_UseRedeemCodeRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.error != null && Object.hasOwnProperty.call(m, "error"))
                $root.proto.CommonError.encode(m.error, w.uint32(10).fork()).ldelim();
            if (m.rewards != null && m.rewards.length) {
                for (var i = 0; i < m.rewards.length; ++i)
                    $root.proto.Item.encode(m.rewards[i], w.uint32(18).fork()).ldelim();
            }
            return w;
        };

        /**
         * Decodes a Msg_UseRedeemCodeRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_UseRedeemCodeRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_UseRedeemCodeRsp} Msg_UseRedeemCodeRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_UseRedeemCodeRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_UseRedeemCodeRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.error = $root.proto.CommonError.decode(r, r.uint32());
                    break;
                case 2:
                    if (!(m.rewards && m.rewards.length))
                        m.rewards = [];
                    m.rewards.push($root.proto.Item.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_UseRedeemCodeRsp;
    })();

    proto.Msg_GetHeroRankReq = (function() {

        /**
         * Properties of a Msg_GetHeroRankReq.
         * @memberof proto
         * @interface IMsg_GetHeroRankReq
         * @property {number|null} [rankId] Msg_GetHeroRankReq rankId
         */

        /**
         * Constructs a new Msg_GetHeroRankReq.
         * @memberof proto
         * @classdesc Represents a Msg_GetHeroRankReq.
         * @implements IMsg_GetHeroRankReq
         * @constructor
         * @param {proto.IMsg_GetHeroRankReq=} [p] Properties to set
         */
        function Msg_GetHeroRankReq(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_GetHeroRankReq rankId.
         * @member {number} rankId
         * @memberof proto.Msg_GetHeroRankReq
         * @instance
         */
        Msg_GetHeroRankReq.prototype.rankId = 0;

        /**
         * Encodes the specified Msg_GetHeroRankReq message. Does not implicitly {@link proto.Msg_GetHeroRankReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_GetHeroRankReq
         * @static
         * @param {proto.IMsg_GetHeroRankReq} m Msg_GetHeroRankReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_GetHeroRankReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.rankId != null && Object.hasOwnProperty.call(m, "rankId"))
                w.uint32(8).int32(m.rankId);
            return w;
        };

        /**
         * Decodes a Msg_GetHeroRankReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_GetHeroRankReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_GetHeroRankReq} Msg_GetHeroRankReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_GetHeroRankReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_GetHeroRankReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.rankId = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_GetHeroRankReq;
    })();

    proto.Msg_GetHeroRankRsp = (function() {

        /**
         * Properties of a Msg_GetHeroRankRsp.
         * @memberof proto
         * @interface IMsg_GetHeroRankRsp
         * @property {proto.ICommonError|null} [error] Msg_GetHeroRankRsp error
         * @property {number|null} [rankId] Msg_GetHeroRankRsp rankId
         * @property {number|null} [ranking] Msg_GetHeroRankRsp ranking
         * @property {Array.<proto.ISimpleHero>|null} [rankList] Msg_GetHeroRankRsp rankList
         * @property {proto.ISimpleHero|null} [selfSimple] Msg_GetHeroRankRsp selfSimple
         * @property {number|Long|null} [settleTime] Msg_GetHeroRankRsp settleTime
         */

        /**
         * Constructs a new Msg_GetHeroRankRsp.
         * @memberof proto
         * @classdesc Represents a Msg_GetHeroRankRsp.
         * @implements IMsg_GetHeroRankRsp
         * @constructor
         * @param {proto.IMsg_GetHeroRankRsp=} [p] Properties to set
         */
        function Msg_GetHeroRankRsp(p) {
            this.rankList = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_GetHeroRankRsp error.
         * @member {proto.ICommonError|null|undefined} error
         * @memberof proto.Msg_GetHeroRankRsp
         * @instance
         */
        Msg_GetHeroRankRsp.prototype.error = null;

        /**
         * Msg_GetHeroRankRsp rankId.
         * @member {number} rankId
         * @memberof proto.Msg_GetHeroRankRsp
         * @instance
         */
        Msg_GetHeroRankRsp.prototype.rankId = 0;

        /**
         * Msg_GetHeroRankRsp ranking.
         * @member {number} ranking
         * @memberof proto.Msg_GetHeroRankRsp
         * @instance
         */
        Msg_GetHeroRankRsp.prototype.ranking = 0;

        /**
         * Msg_GetHeroRankRsp rankList.
         * @member {Array.<proto.ISimpleHero>} rankList
         * @memberof proto.Msg_GetHeroRankRsp
         * @instance
         */
        Msg_GetHeroRankRsp.prototype.rankList = $util.emptyArray;

        /**
         * Msg_GetHeroRankRsp selfSimple.
         * @member {proto.ISimpleHero|null|undefined} selfSimple
         * @memberof proto.Msg_GetHeroRankRsp
         * @instance
         */
        Msg_GetHeroRankRsp.prototype.selfSimple = null;

        /**
         * Msg_GetHeroRankRsp settleTime.
         * @member {number|Long} settleTime
         * @memberof proto.Msg_GetHeroRankRsp
         * @instance
         */
        Msg_GetHeroRankRsp.prototype.settleTime = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

        /**
         * Encodes the specified Msg_GetHeroRankRsp message. Does not implicitly {@link proto.Msg_GetHeroRankRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_GetHeroRankRsp
         * @static
         * @param {proto.IMsg_GetHeroRankRsp} m Msg_GetHeroRankRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_GetHeroRankRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.error != null && Object.hasOwnProperty.call(m, "error"))
                $root.proto.CommonError.encode(m.error, w.uint32(10).fork()).ldelim();
            if (m.rankId != null && Object.hasOwnProperty.call(m, "rankId"))
                w.uint32(16).int32(m.rankId);
            if (m.ranking != null && Object.hasOwnProperty.call(m, "ranking"))
                w.uint32(24).int32(m.ranking);
            if (m.rankList != null && m.rankList.length) {
                for (var i = 0; i < m.rankList.length; ++i)
                    $root.proto.SimpleHero.encode(m.rankList[i], w.uint32(34).fork()).ldelim();
            }
            if (m.selfSimple != null && Object.hasOwnProperty.call(m, "selfSimple"))
                $root.proto.SimpleHero.encode(m.selfSimple, w.uint32(42).fork()).ldelim();
            if (m.settleTime != null && Object.hasOwnProperty.call(m, "settleTime"))
                w.uint32(48).int64(m.settleTime);
            return w;
        };

        /**
         * Decodes a Msg_GetHeroRankRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_GetHeroRankRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_GetHeroRankRsp} Msg_GetHeroRankRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_GetHeroRankRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_GetHeroRankRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.error = $root.proto.CommonError.decode(r, r.uint32());
                    break;
                case 2:
                    m.rankId = r.int32();
                    break;
                case 3:
                    m.ranking = r.int32();
                    break;
                case 4:
                    if (!(m.rankList && m.rankList.length))
                        m.rankList = [];
                    m.rankList.push($root.proto.SimpleHero.decode(r, r.uint32()));
                    break;
                case 5:
                    m.selfSimple = $root.proto.SimpleHero.decode(r, r.uint32());
                    break;
                case 6:
                    m.settleTime = r.int64();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_GetHeroRankRsp;
    })();

    proto.SimpleRank = (function() {

        /**
         * Properties of a SimpleRank.
         * @memberof proto
         * @interface ISimpleRank
         * @property {proto.ISimpleRole|null} [simple] SimpleRank simple
         * @property {number|Long|null} [score] SimpleRank score
         */

        /**
         * Constructs a new SimpleRank.
         * @memberof proto
         * @classdesc Represents a SimpleRank.
         * @implements ISimpleRank
         * @constructor
         * @param {proto.ISimpleRank=} [p] Properties to set
         */
        function SimpleRank(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * SimpleRank simple.
         * @member {proto.ISimpleRole|null|undefined} simple
         * @memberof proto.SimpleRank
         * @instance
         */
        SimpleRank.prototype.simple = null;

        /**
         * SimpleRank score.
         * @member {number|Long} score
         * @memberof proto.SimpleRank
         * @instance
         */
        SimpleRank.prototype.score = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

        /**
         * Encodes the specified SimpleRank message. Does not implicitly {@link proto.SimpleRank.verify|verify} messages.
         * @function encode
         * @memberof proto.SimpleRank
         * @static
         * @param {proto.ISimpleRank} m SimpleRank message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        SimpleRank.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.simple != null && Object.hasOwnProperty.call(m, "simple"))
                $root.proto.SimpleRole.encode(m.simple, w.uint32(10).fork()).ldelim();
            if (m.score != null && Object.hasOwnProperty.call(m, "score"))
                w.uint32(16).int64(m.score);
            return w;
        };

        /**
         * Decodes a SimpleRank message from the specified reader or buffer.
         * @function decode
         * @memberof proto.SimpleRank
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.SimpleRank} SimpleRank
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        SimpleRank.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.SimpleRank();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.simple = $root.proto.SimpleRole.decode(r, r.uint32());
                    break;
                case 2:
                    m.score = r.int64();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return SimpleRank;
    })();

    proto.Msg_GetRankReq = (function() {

        /**
         * Properties of a Msg_GetRankReq.
         * @memberof proto
         * @interface IMsg_GetRankReq
         * @property {number|null} [rankId] Msg_GetRankReq rankId
         */

        /**
         * Constructs a new Msg_GetRankReq.
         * @memberof proto
         * @classdesc Represents a Msg_GetRankReq.
         * @implements IMsg_GetRankReq
         * @constructor
         * @param {proto.IMsg_GetRankReq=} [p] Properties to set
         */
        function Msg_GetRankReq(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_GetRankReq rankId.
         * @member {number} rankId
         * @memberof proto.Msg_GetRankReq
         * @instance
         */
        Msg_GetRankReq.prototype.rankId = 0;

        /**
         * Encodes the specified Msg_GetRankReq message. Does not implicitly {@link proto.Msg_GetRankReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_GetRankReq
         * @static
         * @param {proto.IMsg_GetRankReq} m Msg_GetRankReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_GetRankReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.rankId != null && Object.hasOwnProperty.call(m, "rankId"))
                w.uint32(8).int32(m.rankId);
            return w;
        };

        /**
         * Decodes a Msg_GetRankReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_GetRankReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_GetRankReq} Msg_GetRankReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_GetRankReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_GetRankReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.rankId = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_GetRankReq;
    })();

    proto.Msg_GetRankRsp = (function() {

        /**
         * Properties of a Msg_GetRankRsp.
         * @memberof proto
         * @interface IMsg_GetRankRsp
         * @property {proto.ICommonError|null} [error] Msg_GetRankRsp error
         * @property {number|null} [rankId] Msg_GetRankRsp rankId
         * @property {number|null} [ranking] Msg_GetRankRsp ranking
         * @property {Array.<proto.ISimpleRank>|null} [rankList] Msg_GetRankRsp rankList
         * @property {proto.ISimpleRank|null} [selfSimple] Msg_GetRankRsp selfSimple
         * @property {number|Long|null} [settleTime] Msg_GetRankRsp settleTime
         */

        /**
         * Constructs a new Msg_GetRankRsp.
         * @memberof proto
         * @classdesc Represents a Msg_GetRankRsp.
         * @implements IMsg_GetRankRsp
         * @constructor
         * @param {proto.IMsg_GetRankRsp=} [p] Properties to set
         */
        function Msg_GetRankRsp(p) {
            this.rankList = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_GetRankRsp error.
         * @member {proto.ICommonError|null|undefined} error
         * @memberof proto.Msg_GetRankRsp
         * @instance
         */
        Msg_GetRankRsp.prototype.error = null;

        /**
         * Msg_GetRankRsp rankId.
         * @member {number} rankId
         * @memberof proto.Msg_GetRankRsp
         * @instance
         */
        Msg_GetRankRsp.prototype.rankId = 0;

        /**
         * Msg_GetRankRsp ranking.
         * @member {number} ranking
         * @memberof proto.Msg_GetRankRsp
         * @instance
         */
        Msg_GetRankRsp.prototype.ranking = 0;

        /**
         * Msg_GetRankRsp rankList.
         * @member {Array.<proto.ISimpleRank>} rankList
         * @memberof proto.Msg_GetRankRsp
         * @instance
         */
        Msg_GetRankRsp.prototype.rankList = $util.emptyArray;

        /**
         * Msg_GetRankRsp selfSimple.
         * @member {proto.ISimpleRank|null|undefined} selfSimple
         * @memberof proto.Msg_GetRankRsp
         * @instance
         */
        Msg_GetRankRsp.prototype.selfSimple = null;

        /**
         * Msg_GetRankRsp settleTime.
         * @member {number|Long} settleTime
         * @memberof proto.Msg_GetRankRsp
         * @instance
         */
        Msg_GetRankRsp.prototype.settleTime = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

        /**
         * Encodes the specified Msg_GetRankRsp message. Does not implicitly {@link proto.Msg_GetRankRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_GetRankRsp
         * @static
         * @param {proto.IMsg_GetRankRsp} m Msg_GetRankRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_GetRankRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.error != null && Object.hasOwnProperty.call(m, "error"))
                $root.proto.CommonError.encode(m.error, w.uint32(10).fork()).ldelim();
            if (m.rankId != null && Object.hasOwnProperty.call(m, "rankId"))
                w.uint32(16).int32(m.rankId);
            if (m.ranking != null && Object.hasOwnProperty.call(m, "ranking"))
                w.uint32(24).int32(m.ranking);
            if (m.rankList != null && m.rankList.length) {
                for (var i = 0; i < m.rankList.length; ++i)
                    $root.proto.SimpleRank.encode(m.rankList[i], w.uint32(34).fork()).ldelim();
            }
            if (m.selfSimple != null && Object.hasOwnProperty.call(m, "selfSimple"))
                $root.proto.SimpleRank.encode(m.selfSimple, w.uint32(42).fork()).ldelim();
            if (m.settleTime != null && Object.hasOwnProperty.call(m, "settleTime"))
                w.uint32(48).int64(m.settleTime);
            return w;
        };

        /**
         * Decodes a Msg_GetRankRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_GetRankRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_GetRankRsp} Msg_GetRankRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_GetRankRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_GetRankRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.error = $root.proto.CommonError.decode(r, r.uint32());
                    break;
                case 2:
                    m.rankId = r.int32();
                    break;
                case 3:
                    m.ranking = r.int32();
                    break;
                case 4:
                    if (!(m.rankList && m.rankList.length))
                        m.rankList = [];
                    m.rankList.push($root.proto.SimpleRank.decode(r, r.uint32()));
                    break;
                case 5:
                    m.selfSimple = $root.proto.SimpleRank.decode(r, r.uint32());
                    break;
                case 6:
                    m.settleTime = r.int64();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_GetRankRsp;
    })();

    proto.Msg_GetStaminaInfoReq = (function() {

        /**
         * Properties of a Msg_GetStaminaInfoReq.
         * @memberof proto
         * @interface IMsg_GetStaminaInfoReq
         */

        /**
         * Constructs a new Msg_GetStaminaInfoReq.
         * @memberof proto
         * @classdesc Represents a Msg_GetStaminaInfoReq.
         * @implements IMsg_GetStaminaInfoReq
         * @constructor
         * @param {proto.IMsg_GetStaminaInfoReq=} [p] Properties to set
         */
        function Msg_GetStaminaInfoReq(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Encodes the specified Msg_GetStaminaInfoReq message. Does not implicitly {@link proto.Msg_GetStaminaInfoReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_GetStaminaInfoReq
         * @static
         * @param {proto.IMsg_GetStaminaInfoReq} m Msg_GetStaminaInfoReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_GetStaminaInfoReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };

        /**
         * Decodes a Msg_GetStaminaInfoReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_GetStaminaInfoReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_GetStaminaInfoReq} Msg_GetStaminaInfoReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_GetStaminaInfoReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_GetStaminaInfoReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_GetStaminaInfoReq;
    })();

    proto.Msg_GetStaminaInfoRsp = (function() {

        /**
         * Properties of a Msg_GetStaminaInfoRsp.
         * @memberof proto
         * @interface IMsg_GetStaminaInfoRsp
         * @property {number|null} [maxStamina] Msg_GetStaminaInfoRsp maxStamina
         * @property {number|Long|null} [lastRecoverTime] Msg_GetStaminaInfoRsp lastRecoverTime
         * @property {Object.<string,number>|null} [remainBuyTimesMap] Msg_GetStaminaInfoRsp remainBuyTimesMap
         */

        /**
         * Constructs a new Msg_GetStaminaInfoRsp.
         * @memberof proto
         * @classdesc Represents a Msg_GetStaminaInfoRsp.
         * @implements IMsg_GetStaminaInfoRsp
         * @constructor
         * @param {proto.IMsg_GetStaminaInfoRsp=} [p] Properties to set
         */
        function Msg_GetStaminaInfoRsp(p) {
            this.remainBuyTimesMap = {};
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_GetStaminaInfoRsp maxStamina.
         * @member {number} maxStamina
         * @memberof proto.Msg_GetStaminaInfoRsp
         * @instance
         */
        Msg_GetStaminaInfoRsp.prototype.maxStamina = 0;

        /**
         * Msg_GetStaminaInfoRsp lastRecoverTime.
         * @member {number|Long} lastRecoverTime
         * @memberof proto.Msg_GetStaminaInfoRsp
         * @instance
         */
        Msg_GetStaminaInfoRsp.prototype.lastRecoverTime = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

        /**
         * Msg_GetStaminaInfoRsp remainBuyTimesMap.
         * @member {Object.<string,number>} remainBuyTimesMap
         * @memberof proto.Msg_GetStaminaInfoRsp
         * @instance
         */
        Msg_GetStaminaInfoRsp.prototype.remainBuyTimesMap = $util.emptyObject;

        /**
         * Encodes the specified Msg_GetStaminaInfoRsp message. Does not implicitly {@link proto.Msg_GetStaminaInfoRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_GetStaminaInfoRsp
         * @static
         * @param {proto.IMsg_GetStaminaInfoRsp} m Msg_GetStaminaInfoRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_GetStaminaInfoRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.maxStamina != null && Object.hasOwnProperty.call(m, "maxStamina"))
                w.uint32(8).int32(m.maxStamina);
            if (m.lastRecoverTime != null && Object.hasOwnProperty.call(m, "lastRecoverTime"))
                w.uint32(16).int64(m.lastRecoverTime);
            if (m.remainBuyTimesMap != null && Object.hasOwnProperty.call(m, "remainBuyTimesMap")) {
                for (var ks = Object.keys(m.remainBuyTimesMap), i = 0; i < ks.length; ++i) {
                    w.uint32(26).fork().uint32(8).int32(ks[i]).uint32(16).int32(m.remainBuyTimesMap[ks[i]]).ldelim();
                }
            }
            return w;
        };

        /**
         * Decodes a Msg_GetStaminaInfoRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_GetStaminaInfoRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_GetStaminaInfoRsp} Msg_GetStaminaInfoRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_GetStaminaInfoRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_GetStaminaInfoRsp(), k, value;
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.maxStamina = r.int32();
                    break;
                case 2:
                    m.lastRecoverTime = r.int64();
                    break;
                case 3:
                    if (m.remainBuyTimesMap === $util.emptyObject)
                        m.remainBuyTimesMap = {};
                    var c2 = r.uint32() + r.pos;
                    k = 0;
                    value = 0;
                    while (r.pos < c2) {
                        var tag2 = r.uint32();
                        switch (tag2 >>> 3) {
                        case 1:
                            k = r.int32();
                            break;
                        case 2:
                            value = r.int32();
                            break;
                        default:
                            r.skipType(tag2 & 7);
                            break;
                        }
                    }
                    m.remainBuyTimesMap[k] = value;
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_GetStaminaInfoRsp;
    })();

    proto.Msg_BuyStaminaReq = (function() {

        /**
         * Properties of a Msg_BuyStaminaReq.
         * @memberof proto
         * @interface IMsg_BuyStaminaReq
         * @property {number|null} [type] Msg_BuyStaminaReq type
         * @property {number|null} [num] Msg_BuyStaminaReq num
         */

        /**
         * Constructs a new Msg_BuyStaminaReq.
         * @memberof proto
         * @classdesc Represents a Msg_BuyStaminaReq.
         * @implements IMsg_BuyStaminaReq
         * @constructor
         * @param {proto.IMsg_BuyStaminaReq=} [p] Properties to set
         */
        function Msg_BuyStaminaReq(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_BuyStaminaReq type.
         * @member {number} type
         * @memberof proto.Msg_BuyStaminaReq
         * @instance
         */
        Msg_BuyStaminaReq.prototype.type = 0;

        /**
         * Msg_BuyStaminaReq num.
         * @member {number} num
         * @memberof proto.Msg_BuyStaminaReq
         * @instance
         */
        Msg_BuyStaminaReq.prototype.num = 0;

        /**
         * Encodes the specified Msg_BuyStaminaReq message. Does not implicitly {@link proto.Msg_BuyStaminaReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_BuyStaminaReq
         * @static
         * @param {proto.IMsg_BuyStaminaReq} m Msg_BuyStaminaReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_BuyStaminaReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.type != null && Object.hasOwnProperty.call(m, "type"))
                w.uint32(8).int32(m.type);
            if (m.num != null && Object.hasOwnProperty.call(m, "num"))
                w.uint32(16).int32(m.num);
            return w;
        };

        /**
         * Decodes a Msg_BuyStaminaReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_BuyStaminaReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_BuyStaminaReq} Msg_BuyStaminaReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_BuyStaminaReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_BuyStaminaReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.type = r.int32();
                    break;
                case 2:
                    m.num = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_BuyStaminaReq;
    })();

    proto.Msg_BuyStaminaRsp = (function() {

        /**
         * Properties of a Msg_BuyStaminaRsp.
         * @memberof proto
         * @interface IMsg_BuyStaminaRsp
         * @property {proto.ICommonError|null} [error] Msg_BuyStaminaRsp error
         * @property {number|null} [type] Msg_BuyStaminaRsp type
         * @property {number|null} [remainBuyTimes] Msg_BuyStaminaRsp remainBuyTimes
         * @property {Array.<proto.IItem>|null} [rewards] Msg_BuyStaminaRsp rewards
         */

        /**
         * Constructs a new Msg_BuyStaminaRsp.
         * @memberof proto
         * @classdesc Represents a Msg_BuyStaminaRsp.
         * @implements IMsg_BuyStaminaRsp
         * @constructor
         * @param {proto.IMsg_BuyStaminaRsp=} [p] Properties to set
         */
        function Msg_BuyStaminaRsp(p) {
            this.rewards = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_BuyStaminaRsp error.
         * @member {proto.ICommonError|null|undefined} error
         * @memberof proto.Msg_BuyStaminaRsp
         * @instance
         */
        Msg_BuyStaminaRsp.prototype.error = null;

        /**
         * Msg_BuyStaminaRsp type.
         * @member {number} type
         * @memberof proto.Msg_BuyStaminaRsp
         * @instance
         */
        Msg_BuyStaminaRsp.prototype.type = 0;

        /**
         * Msg_BuyStaminaRsp remainBuyTimes.
         * @member {number} remainBuyTimes
         * @memberof proto.Msg_BuyStaminaRsp
         * @instance
         */
        Msg_BuyStaminaRsp.prototype.remainBuyTimes = 0;

        /**
         * Msg_BuyStaminaRsp rewards.
         * @member {Array.<proto.IItem>} rewards
         * @memberof proto.Msg_BuyStaminaRsp
         * @instance
         */
        Msg_BuyStaminaRsp.prototype.rewards = $util.emptyArray;

        /**
         * Encodes the specified Msg_BuyStaminaRsp message. Does not implicitly {@link proto.Msg_BuyStaminaRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_BuyStaminaRsp
         * @static
         * @param {proto.IMsg_BuyStaminaRsp} m Msg_BuyStaminaRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_BuyStaminaRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.error != null && Object.hasOwnProperty.call(m, "error"))
                $root.proto.CommonError.encode(m.error, w.uint32(10).fork()).ldelim();
            if (m.type != null && Object.hasOwnProperty.call(m, "type"))
                w.uint32(16).int32(m.type);
            if (m.remainBuyTimes != null && Object.hasOwnProperty.call(m, "remainBuyTimes"))
                w.uint32(24).int32(m.remainBuyTimes);
            if (m.rewards != null && m.rewards.length) {
                for (var i = 0; i < m.rewards.length; ++i)
                    $root.proto.Item.encode(m.rewards[i], w.uint32(34).fork()).ldelim();
            }
            return w;
        };

        /**
         * Decodes a Msg_BuyStaminaRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_BuyStaminaRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_BuyStaminaRsp} Msg_BuyStaminaRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_BuyStaminaRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_BuyStaminaRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.error = $root.proto.CommonError.decode(r, r.uint32());
                    break;
                case 2:
                    m.type = r.int32();
                    break;
                case 3:
                    m.remainBuyTimes = r.int32();
                    break;
                case 4:
                    if (!(m.rewards && m.rewards.length))
                        m.rewards = [];
                    m.rewards.push($root.proto.Item.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_BuyStaminaRsp;
    })();

    proto.Msg_SetAutoDisbandReq = (function() {

        /**
         * Properties of a Msg_SetAutoDisbandReq.
         * @memberof proto
         * @interface IMsg_SetAutoDisbandReq
         * @property {boolean|null} [autoDisband] Msg_SetAutoDisbandReq autoDisband
         */

        /**
         * Constructs a new Msg_SetAutoDisbandReq.
         * @memberof proto
         * @classdesc Represents a Msg_SetAutoDisbandReq.
         * @implements IMsg_SetAutoDisbandReq
         * @constructor
         * @param {proto.IMsg_SetAutoDisbandReq=} [p] Properties to set
         */
        function Msg_SetAutoDisbandReq(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_SetAutoDisbandReq autoDisband.
         * @member {boolean} autoDisband
         * @memberof proto.Msg_SetAutoDisbandReq
         * @instance
         */
        Msg_SetAutoDisbandReq.prototype.autoDisband = false;

        /**
         * Encodes the specified Msg_SetAutoDisbandReq message. Does not implicitly {@link proto.Msg_SetAutoDisbandReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_SetAutoDisbandReq
         * @static
         * @param {proto.IMsg_SetAutoDisbandReq} m Msg_SetAutoDisbandReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_SetAutoDisbandReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.autoDisband != null && Object.hasOwnProperty.call(m, "autoDisband"))
                w.uint32(8).bool(m.autoDisband);
            return w;
        };

        /**
         * Decodes a Msg_SetAutoDisbandReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_SetAutoDisbandReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_SetAutoDisbandReq} Msg_SetAutoDisbandReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_SetAutoDisbandReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_SetAutoDisbandReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.autoDisband = r.bool();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_SetAutoDisbandReq;
    })();

    proto.Msg_SetAutoDisbandRsp = (function() {

        /**
         * Properties of a Msg_SetAutoDisbandRsp.
         * @memberof proto
         * @interface IMsg_SetAutoDisbandRsp
         * @property {proto.ICommonError|null} [error] Msg_SetAutoDisbandRsp error
         * @property {boolean|null} [autoDisband] Msg_SetAutoDisbandRsp autoDisband
         */

        /**
         * Constructs a new Msg_SetAutoDisbandRsp.
         * @memberof proto
         * @classdesc Represents a Msg_SetAutoDisbandRsp.
         * @implements IMsg_SetAutoDisbandRsp
         * @constructor
         * @param {proto.IMsg_SetAutoDisbandRsp=} [p] Properties to set
         */
        function Msg_SetAutoDisbandRsp(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_SetAutoDisbandRsp error.
         * @member {proto.ICommonError|null|undefined} error
         * @memberof proto.Msg_SetAutoDisbandRsp
         * @instance
         */
        Msg_SetAutoDisbandRsp.prototype.error = null;

        /**
         * Msg_SetAutoDisbandRsp autoDisband.
         * @member {boolean} autoDisband
         * @memberof proto.Msg_SetAutoDisbandRsp
         * @instance
         */
        Msg_SetAutoDisbandRsp.prototype.autoDisband = false;

        /**
         * Encodes the specified Msg_SetAutoDisbandRsp message. Does not implicitly {@link proto.Msg_SetAutoDisbandRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_SetAutoDisbandRsp
         * @static
         * @param {proto.IMsg_SetAutoDisbandRsp} m Msg_SetAutoDisbandRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_SetAutoDisbandRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.error != null && Object.hasOwnProperty.call(m, "error"))
                $root.proto.CommonError.encode(m.error, w.uint32(10).fork()).ldelim();
            if (m.autoDisband != null && Object.hasOwnProperty.call(m, "autoDisband"))
                w.uint32(16).bool(m.autoDisband);
            return w;
        };

        /**
         * Decodes a Msg_SetAutoDisbandRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_SetAutoDisbandRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_SetAutoDisbandRsp} Msg_SetAutoDisbandRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_SetAutoDisbandRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_SetAutoDisbandRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.error = $root.proto.CommonError.decode(r, r.uint32());
                    break;
                case 2:
                    m.autoDisband = r.bool();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_SetAutoDisbandRsp;
    })();

    proto.Msg_GetPatrolInfoReq = (function() {

        /**
         * Properties of a Msg_GetPatrolInfoReq.
         * @memberof proto
         * @interface IMsg_GetPatrolInfoReq
         */

        /**
         * Constructs a new Msg_GetPatrolInfoReq.
         * @memberof proto
         * @classdesc Represents a Msg_GetPatrolInfoReq.
         * @implements IMsg_GetPatrolInfoReq
         * @constructor
         * @param {proto.IMsg_GetPatrolInfoReq=} [p] Properties to set
         */
        function Msg_GetPatrolInfoReq(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Encodes the specified Msg_GetPatrolInfoReq message. Does not implicitly {@link proto.Msg_GetPatrolInfoReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_GetPatrolInfoReq
         * @static
         * @param {proto.IMsg_GetPatrolInfoReq} m Msg_GetPatrolInfoReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_GetPatrolInfoReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };

        /**
         * Decodes a Msg_GetPatrolInfoReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_GetPatrolInfoReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_GetPatrolInfoReq} Msg_GetPatrolInfoReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_GetPatrolInfoReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_GetPatrolInfoReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_GetPatrolInfoReq;
    })();

    proto.Msg_GetPatrolInfoRsp = (function() {

        /**
         * Properties of a Msg_GetPatrolInfoRsp.
         * @memberof proto
         * @interface IMsg_GetPatrolInfoRsp
         * @property {number|Long|null} [startPatrolTime] Msg_GetPatrolInfoRsp startPatrolTime
         * @property {Object.<string,number|Long>|null} [lastReceiveBaseRewardsTimeMap] Msg_GetPatrolInfoRsp lastReceiveBaseRewardsTimeMap
         * @property {Object.<string,number|Long>|null} [lastReceiveExtraRewardsTimeMap] Msg_GetPatrolInfoRsp lastReceiveExtraRewardsTimeMap
         */

        /**
         * Constructs a new Msg_GetPatrolInfoRsp.
         * @memberof proto
         * @classdesc Represents a Msg_GetPatrolInfoRsp.
         * @implements IMsg_GetPatrolInfoRsp
         * @constructor
         * @param {proto.IMsg_GetPatrolInfoRsp=} [p] Properties to set
         */
        function Msg_GetPatrolInfoRsp(p) {
            this.lastReceiveBaseRewardsTimeMap = {};
            this.lastReceiveExtraRewardsTimeMap = {};
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_GetPatrolInfoRsp startPatrolTime.
         * @member {number|Long} startPatrolTime
         * @memberof proto.Msg_GetPatrolInfoRsp
         * @instance
         */
        Msg_GetPatrolInfoRsp.prototype.startPatrolTime = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

        /**
         * Msg_GetPatrolInfoRsp lastReceiveBaseRewardsTimeMap.
         * @member {Object.<string,number|Long>} lastReceiveBaseRewardsTimeMap
         * @memberof proto.Msg_GetPatrolInfoRsp
         * @instance
         */
        Msg_GetPatrolInfoRsp.prototype.lastReceiveBaseRewardsTimeMap = $util.emptyObject;

        /**
         * Msg_GetPatrolInfoRsp lastReceiveExtraRewardsTimeMap.
         * @member {Object.<string,number|Long>} lastReceiveExtraRewardsTimeMap
         * @memberof proto.Msg_GetPatrolInfoRsp
         * @instance
         */
        Msg_GetPatrolInfoRsp.prototype.lastReceiveExtraRewardsTimeMap = $util.emptyObject;

        /**
         * Encodes the specified Msg_GetPatrolInfoRsp message. Does not implicitly {@link proto.Msg_GetPatrolInfoRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_GetPatrolInfoRsp
         * @static
         * @param {proto.IMsg_GetPatrolInfoRsp} m Msg_GetPatrolInfoRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_GetPatrolInfoRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.startPatrolTime != null && Object.hasOwnProperty.call(m, "startPatrolTime"))
                w.uint32(8).int64(m.startPatrolTime);
            if (m.lastReceiveBaseRewardsTimeMap != null && Object.hasOwnProperty.call(m, "lastReceiveBaseRewardsTimeMap")) {
                for (var ks = Object.keys(m.lastReceiveBaseRewardsTimeMap), i = 0; i < ks.length; ++i) {
                    w.uint32(18).fork().uint32(8).int32(ks[i]).uint32(16).int64(m.lastReceiveBaseRewardsTimeMap[ks[i]]).ldelim();
                }
            }
            if (m.lastReceiveExtraRewardsTimeMap != null && Object.hasOwnProperty.call(m, "lastReceiveExtraRewardsTimeMap")) {
                for (var ks = Object.keys(m.lastReceiveExtraRewardsTimeMap), i = 0; i < ks.length; ++i) {
                    w.uint32(26).fork().uint32(8).int32(ks[i]).uint32(16).int64(m.lastReceiveExtraRewardsTimeMap[ks[i]]).ldelim();
                }
            }
            return w;
        };

        /**
         * Decodes a Msg_GetPatrolInfoRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_GetPatrolInfoRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_GetPatrolInfoRsp} Msg_GetPatrolInfoRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_GetPatrolInfoRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_GetPatrolInfoRsp(), k, value;
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.startPatrolTime = r.int64();
                    break;
                case 2:
                    if (m.lastReceiveBaseRewardsTimeMap === $util.emptyObject)
                        m.lastReceiveBaseRewardsTimeMap = {};
                    var c2 = r.uint32() + r.pos;
                    k = 0;
                    value = 0;
                    while (r.pos < c2) {
                        var tag2 = r.uint32();
                        switch (tag2 >>> 3) {
                        case 1:
                            k = r.int32();
                            break;
                        case 2:
                            value = r.int64();
                            break;
                        default:
                            r.skipType(tag2 & 7);
                            break;
                        }
                    }
                    m.lastReceiveBaseRewardsTimeMap[k] = value;
                    break;
                case 3:
                    if (m.lastReceiveExtraRewardsTimeMap === $util.emptyObject)
                        m.lastReceiveExtraRewardsTimeMap = {};
                    var c2 = r.uint32() + r.pos;
                    k = 0;
                    value = 0;
                    while (r.pos < c2) {
                        var tag2 = r.uint32();
                        switch (tag2 >>> 3) {
                        case 1:
                            k = r.int32();
                            break;
                        case 2:
                            value = r.int64();
                            break;
                        default:
                            r.skipType(tag2 & 7);
                            break;
                        }
                    }
                    m.lastReceiveExtraRewardsTimeMap[k] = value;
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_GetPatrolInfoRsp;
    })();

    proto.Msg_ReceivePatrolRewardReq = (function() {

        /**
         * Properties of a Msg_ReceivePatrolRewardReq.
         * @memberof proto
         * @interface IMsg_ReceivePatrolRewardReq
         */

        /**
         * Constructs a new Msg_ReceivePatrolRewardReq.
         * @memberof proto
         * @classdesc Represents a Msg_ReceivePatrolRewardReq.
         * @implements IMsg_ReceivePatrolRewardReq
         * @constructor
         * @param {proto.IMsg_ReceivePatrolRewardReq=} [p] Properties to set
         */
        function Msg_ReceivePatrolRewardReq(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Encodes the specified Msg_ReceivePatrolRewardReq message. Does not implicitly {@link proto.Msg_ReceivePatrolRewardReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_ReceivePatrolRewardReq
         * @static
         * @param {proto.IMsg_ReceivePatrolRewardReq} m Msg_ReceivePatrolRewardReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_ReceivePatrolRewardReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };

        /**
         * Decodes a Msg_ReceivePatrolRewardReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_ReceivePatrolRewardReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_ReceivePatrolRewardReq} Msg_ReceivePatrolRewardReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_ReceivePatrolRewardReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_ReceivePatrolRewardReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_ReceivePatrolRewardReq;
    })();

    proto.Msg_ReceivePatrolRewardRsp = (function() {

        /**
         * Properties of a Msg_ReceivePatrolRewardRsp.
         * @memberof proto
         * @interface IMsg_ReceivePatrolRewardRsp
         * @property {proto.ICommonError|null} [error] Msg_ReceivePatrolRewardRsp error
         * @property {Array.<proto.IItem>|null} [rewards] Msg_ReceivePatrolRewardRsp rewards
         * @property {Object.<string,number|Long>|null} [lastReceiveBaseRewardsTimeMap] Msg_ReceivePatrolRewardRsp lastReceiveBaseRewardsTimeMap
         * @property {Object.<string,number|Long>|null} [lastReceiveExtraRewardsTimeMap] Msg_ReceivePatrolRewardRsp lastReceiveExtraRewardsTimeMap
         */

        /**
         * Constructs a new Msg_ReceivePatrolRewardRsp.
         * @memberof proto
         * @classdesc Represents a Msg_ReceivePatrolRewardRsp.
         * @implements IMsg_ReceivePatrolRewardRsp
         * @constructor
         * @param {proto.IMsg_ReceivePatrolRewardRsp=} [p] Properties to set
         */
        function Msg_ReceivePatrolRewardRsp(p) {
            this.rewards = [];
            this.lastReceiveBaseRewardsTimeMap = {};
            this.lastReceiveExtraRewardsTimeMap = {};
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_ReceivePatrolRewardRsp error.
         * @member {proto.ICommonError|null|undefined} error
         * @memberof proto.Msg_ReceivePatrolRewardRsp
         * @instance
         */
        Msg_ReceivePatrolRewardRsp.prototype.error = null;

        /**
         * Msg_ReceivePatrolRewardRsp rewards.
         * @member {Array.<proto.IItem>} rewards
         * @memberof proto.Msg_ReceivePatrolRewardRsp
         * @instance
         */
        Msg_ReceivePatrolRewardRsp.prototype.rewards = $util.emptyArray;

        /**
         * Msg_ReceivePatrolRewardRsp lastReceiveBaseRewardsTimeMap.
         * @member {Object.<string,number|Long>} lastReceiveBaseRewardsTimeMap
         * @memberof proto.Msg_ReceivePatrolRewardRsp
         * @instance
         */
        Msg_ReceivePatrolRewardRsp.prototype.lastReceiveBaseRewardsTimeMap = $util.emptyObject;

        /**
         * Msg_ReceivePatrolRewardRsp lastReceiveExtraRewardsTimeMap.
         * @member {Object.<string,number|Long>} lastReceiveExtraRewardsTimeMap
         * @memberof proto.Msg_ReceivePatrolRewardRsp
         * @instance
         */
        Msg_ReceivePatrolRewardRsp.prototype.lastReceiveExtraRewardsTimeMap = $util.emptyObject;

        /**
         * Encodes the specified Msg_ReceivePatrolRewardRsp message. Does not implicitly {@link proto.Msg_ReceivePatrolRewardRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_ReceivePatrolRewardRsp
         * @static
         * @param {proto.IMsg_ReceivePatrolRewardRsp} m Msg_ReceivePatrolRewardRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_ReceivePatrolRewardRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.error != null && Object.hasOwnProperty.call(m, "error"))
                $root.proto.CommonError.encode(m.error, w.uint32(10).fork()).ldelim();
            if (m.rewards != null && m.rewards.length) {
                for (var i = 0; i < m.rewards.length; ++i)
                    $root.proto.Item.encode(m.rewards[i], w.uint32(18).fork()).ldelim();
            }
            if (m.lastReceiveBaseRewardsTimeMap != null && Object.hasOwnProperty.call(m, "lastReceiveBaseRewardsTimeMap")) {
                for (var ks = Object.keys(m.lastReceiveBaseRewardsTimeMap), i = 0; i < ks.length; ++i) {
                    w.uint32(26).fork().uint32(8).int32(ks[i]).uint32(16).int64(m.lastReceiveBaseRewardsTimeMap[ks[i]]).ldelim();
                }
            }
            if (m.lastReceiveExtraRewardsTimeMap != null && Object.hasOwnProperty.call(m, "lastReceiveExtraRewardsTimeMap")) {
                for (var ks = Object.keys(m.lastReceiveExtraRewardsTimeMap), i = 0; i < ks.length; ++i) {
                    w.uint32(34).fork().uint32(8).int32(ks[i]).uint32(16).int64(m.lastReceiveExtraRewardsTimeMap[ks[i]]).ldelim();
                }
            }
            return w;
        };

        /**
         * Decodes a Msg_ReceivePatrolRewardRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_ReceivePatrolRewardRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_ReceivePatrolRewardRsp} Msg_ReceivePatrolRewardRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_ReceivePatrolRewardRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_ReceivePatrolRewardRsp(), k, value;
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.error = $root.proto.CommonError.decode(r, r.uint32());
                    break;
                case 2:
                    if (!(m.rewards && m.rewards.length))
                        m.rewards = [];
                    m.rewards.push($root.proto.Item.decode(r, r.uint32()));
                    break;
                case 3:
                    if (m.lastReceiveBaseRewardsTimeMap === $util.emptyObject)
                        m.lastReceiveBaseRewardsTimeMap = {};
                    var c2 = r.uint32() + r.pos;
                    k = 0;
                    value = 0;
                    while (r.pos < c2) {
                        var tag2 = r.uint32();
                        switch (tag2 >>> 3) {
                        case 1:
                            k = r.int32();
                            break;
                        case 2:
                            value = r.int64();
                            break;
                        default:
                            r.skipType(tag2 & 7);
                            break;
                        }
                    }
                    m.lastReceiveBaseRewardsTimeMap[k] = value;
                    break;
                case 4:
                    if (m.lastReceiveExtraRewardsTimeMap === $util.emptyObject)
                        m.lastReceiveExtraRewardsTimeMap = {};
                    var c2 = r.uint32() + r.pos;
                    k = 0;
                    value = 0;
                    while (r.pos < c2) {
                        var tag2 = r.uint32();
                        switch (tag2 >>> 3) {
                        case 1:
                            k = r.int32();
                            break;
                        case 2:
                            value = r.int64();
                            break;
                        default:
                            r.skipType(tag2 & 7);
                            break;
                        }
                    }
                    m.lastReceiveExtraRewardsTimeMap[k] = value;
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_ReceivePatrolRewardRsp;
    })();

    proto.Msg_ReceiveQuickPatrolRewardReq = (function() {

        /**
         * Properties of a Msg_ReceiveQuickPatrolRewardReq.
         * @memberof proto
         * @interface IMsg_ReceiveQuickPatrolRewardReq
         * @property {number|null} [type] Msg_ReceiveQuickPatrolRewardReq type
         */

        /**
         * Constructs a new Msg_ReceiveQuickPatrolRewardReq.
         * @memberof proto
         * @classdesc Represents a Msg_ReceiveQuickPatrolRewardReq.
         * @implements IMsg_ReceiveQuickPatrolRewardReq
         * @constructor
         * @param {proto.IMsg_ReceiveQuickPatrolRewardReq=} [p] Properties to set
         */
        function Msg_ReceiveQuickPatrolRewardReq(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_ReceiveQuickPatrolRewardReq type.
         * @member {number} type
         * @memberof proto.Msg_ReceiveQuickPatrolRewardReq
         * @instance
         */
        Msg_ReceiveQuickPatrolRewardReq.prototype.type = 0;

        /**
         * Encodes the specified Msg_ReceiveQuickPatrolRewardReq message. Does not implicitly {@link proto.Msg_ReceiveQuickPatrolRewardReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_ReceiveQuickPatrolRewardReq
         * @static
         * @param {proto.IMsg_ReceiveQuickPatrolRewardReq} m Msg_ReceiveQuickPatrolRewardReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_ReceiveQuickPatrolRewardReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.type != null && Object.hasOwnProperty.call(m, "type"))
                w.uint32(8).int32(m.type);
            return w;
        };

        /**
         * Decodes a Msg_ReceiveQuickPatrolRewardReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_ReceiveQuickPatrolRewardReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_ReceiveQuickPatrolRewardReq} Msg_ReceiveQuickPatrolRewardReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_ReceiveQuickPatrolRewardReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_ReceiveQuickPatrolRewardReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.type = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_ReceiveQuickPatrolRewardReq;
    })();

    proto.Msg_ReceiveQuickPatrolRewardRsp = (function() {

        /**
         * Properties of a Msg_ReceiveQuickPatrolRewardRsp.
         * @memberof proto
         * @interface IMsg_ReceiveQuickPatrolRewardRsp
         * @property {proto.ICommonError|null} [error] Msg_ReceiveQuickPatrolRewardRsp error
         * @property {number|null} [type] Msg_ReceiveQuickPatrolRewardRsp type
         * @property {Array.<proto.IItem>|null} [rewards] Msg_ReceiveQuickPatrolRewardRsp rewards
         */

        /**
         * Constructs a new Msg_ReceiveQuickPatrolRewardRsp.
         * @memberof proto
         * @classdesc Represents a Msg_ReceiveQuickPatrolRewardRsp.
         * @implements IMsg_ReceiveQuickPatrolRewardRsp
         * @constructor
         * @param {proto.IMsg_ReceiveQuickPatrolRewardRsp=} [p] Properties to set
         */
        function Msg_ReceiveQuickPatrolRewardRsp(p) {
            this.rewards = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_ReceiveQuickPatrolRewardRsp error.
         * @member {proto.ICommonError|null|undefined} error
         * @memberof proto.Msg_ReceiveQuickPatrolRewardRsp
         * @instance
         */
        Msg_ReceiveQuickPatrolRewardRsp.prototype.error = null;

        /**
         * Msg_ReceiveQuickPatrolRewardRsp type.
         * @member {number} type
         * @memberof proto.Msg_ReceiveQuickPatrolRewardRsp
         * @instance
         */
        Msg_ReceiveQuickPatrolRewardRsp.prototype.type = 0;

        /**
         * Msg_ReceiveQuickPatrolRewardRsp rewards.
         * @member {Array.<proto.IItem>} rewards
         * @memberof proto.Msg_ReceiveQuickPatrolRewardRsp
         * @instance
         */
        Msg_ReceiveQuickPatrolRewardRsp.prototype.rewards = $util.emptyArray;

        /**
         * Encodes the specified Msg_ReceiveQuickPatrolRewardRsp message. Does not implicitly {@link proto.Msg_ReceiveQuickPatrolRewardRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_ReceiveQuickPatrolRewardRsp
         * @static
         * @param {proto.IMsg_ReceiveQuickPatrolRewardRsp} m Msg_ReceiveQuickPatrolRewardRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_ReceiveQuickPatrolRewardRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.error != null && Object.hasOwnProperty.call(m, "error"))
                $root.proto.CommonError.encode(m.error, w.uint32(10).fork()).ldelim();
            if (m.type != null && Object.hasOwnProperty.call(m, "type"))
                w.uint32(16).int32(m.type);
            if (m.rewards != null && m.rewards.length) {
                for (var i = 0; i < m.rewards.length; ++i)
                    $root.proto.Item.encode(m.rewards[i], w.uint32(26).fork()).ldelim();
            }
            return w;
        };

        /**
         * Decodes a Msg_ReceiveQuickPatrolRewardRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_ReceiveQuickPatrolRewardRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_ReceiveQuickPatrolRewardRsp} Msg_ReceiveQuickPatrolRewardRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_ReceiveQuickPatrolRewardRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_ReceiveQuickPatrolRewardRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.error = $root.proto.CommonError.decode(r, r.uint32());
                    break;
                case 2:
                    m.type = r.int32();
                    break;
                case 3:
                    if (!(m.rewards && m.rewards.length))
                        m.rewards = [];
                    m.rewards.push($root.proto.Item.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_ReceiveQuickPatrolRewardRsp;
    })();

    proto.Msg_LimitedRewardPush = (function() {

        /**
         * Properties of a Msg_LimitedRewardPush.
         * @memberof proto
         * @interface IMsg_LimitedRewardPush
         * @property {number|null} [id] Msg_LimitedRewardPush id
         * @property {proto.IItem|null} [reward] Msg_LimitedRewardPush reward
         */

        /**
         * Constructs a new Msg_LimitedRewardPush.
         * @memberof proto
         * @classdesc Represents a Msg_LimitedRewardPush.
         * @implements IMsg_LimitedRewardPush
         * @constructor
         * @param {proto.IMsg_LimitedRewardPush=} [p] Properties to set
         */
        function Msg_LimitedRewardPush(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_LimitedRewardPush id.
         * @member {number} id
         * @memberof proto.Msg_LimitedRewardPush
         * @instance
         */
        Msg_LimitedRewardPush.prototype.id = 0;

        /**
         * Msg_LimitedRewardPush reward.
         * @member {proto.IItem|null|undefined} reward
         * @memberof proto.Msg_LimitedRewardPush
         * @instance
         */
        Msg_LimitedRewardPush.prototype.reward = null;

        /**
         * Encodes the specified Msg_LimitedRewardPush message. Does not implicitly {@link proto.Msg_LimitedRewardPush.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_LimitedRewardPush
         * @static
         * @param {proto.IMsg_LimitedRewardPush} m Msg_LimitedRewardPush message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_LimitedRewardPush.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.id != null && Object.hasOwnProperty.call(m, "id"))
                w.uint32(8).int32(m.id);
            if (m.reward != null && Object.hasOwnProperty.call(m, "reward"))
                $root.proto.Item.encode(m.reward, w.uint32(18).fork()).ldelim();
            return w;
        };

        /**
         * Decodes a Msg_LimitedRewardPush message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_LimitedRewardPush
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_LimitedRewardPush} Msg_LimitedRewardPush
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_LimitedRewardPush.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_LimitedRewardPush();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.id = r.int32();
                    break;
                case 2:
                    m.reward = $root.proto.Item.decode(r, r.uint32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_LimitedRewardPush;
    })();

    proto.Msg_GetLimitedRewardReq = (function() {

        /**
         * Properties of a Msg_GetLimitedRewardReq.
         * @memberof proto
         * @interface IMsg_GetLimitedRewardReq
         * @property {number|null} [id] Msg_GetLimitedRewardReq id
         */

        /**
         * Constructs a new Msg_GetLimitedRewardReq.
         * @memberof proto
         * @classdesc Represents a Msg_GetLimitedRewardReq.
         * @implements IMsg_GetLimitedRewardReq
         * @constructor
         * @param {proto.IMsg_GetLimitedRewardReq=} [p] Properties to set
         */
        function Msg_GetLimitedRewardReq(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_GetLimitedRewardReq id.
         * @member {number} id
         * @memberof proto.Msg_GetLimitedRewardReq
         * @instance
         */
        Msg_GetLimitedRewardReq.prototype.id = 0;

        /**
         * Encodes the specified Msg_GetLimitedRewardReq message. Does not implicitly {@link proto.Msg_GetLimitedRewardReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_GetLimitedRewardReq
         * @static
         * @param {proto.IMsg_GetLimitedRewardReq} m Msg_GetLimitedRewardReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_GetLimitedRewardReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.id != null && Object.hasOwnProperty.call(m, "id"))
                w.uint32(8).int32(m.id);
            return w;
        };

        /**
         * Decodes a Msg_GetLimitedRewardReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_GetLimitedRewardReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_GetLimitedRewardReq} Msg_GetLimitedRewardReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_GetLimitedRewardReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_GetLimitedRewardReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.id = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_GetLimitedRewardReq;
    })();

    proto.Msg_GetLimitedRewardRsp = (function() {

        /**
         * Properties of a Msg_GetLimitedRewardRsp.
         * @memberof proto
         * @interface IMsg_GetLimitedRewardRsp
         * @property {proto.ICommonError|null} [error] Msg_GetLimitedRewardRsp error
         * @property {proto.IItem|null} [reward] Msg_GetLimitedRewardRsp reward
         */

        /**
         * Constructs a new Msg_GetLimitedRewardRsp.
         * @memberof proto
         * @classdesc Represents a Msg_GetLimitedRewardRsp.
         * @implements IMsg_GetLimitedRewardRsp
         * @constructor
         * @param {proto.IMsg_GetLimitedRewardRsp=} [p] Properties to set
         */
        function Msg_GetLimitedRewardRsp(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_GetLimitedRewardRsp error.
         * @member {proto.ICommonError|null|undefined} error
         * @memberof proto.Msg_GetLimitedRewardRsp
         * @instance
         */
        Msg_GetLimitedRewardRsp.prototype.error = null;

        /**
         * Msg_GetLimitedRewardRsp reward.
         * @member {proto.IItem|null|undefined} reward
         * @memberof proto.Msg_GetLimitedRewardRsp
         * @instance
         */
        Msg_GetLimitedRewardRsp.prototype.reward = null;

        /**
         * Encodes the specified Msg_GetLimitedRewardRsp message. Does not implicitly {@link proto.Msg_GetLimitedRewardRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_GetLimitedRewardRsp
         * @static
         * @param {proto.IMsg_GetLimitedRewardRsp} m Msg_GetLimitedRewardRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_GetLimitedRewardRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.error != null && Object.hasOwnProperty.call(m, "error"))
                $root.proto.CommonError.encode(m.error, w.uint32(10).fork()).ldelim();
            if (m.reward != null && Object.hasOwnProperty.call(m, "reward"))
                $root.proto.Item.encode(m.reward, w.uint32(18).fork()).ldelim();
            return w;
        };

        /**
         * Decodes a Msg_GetLimitedRewardRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_GetLimitedRewardRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_GetLimitedRewardRsp} Msg_GetLimitedRewardRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_GetLimitedRewardRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_GetLimitedRewardRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.error = $root.proto.CommonError.decode(r, r.uint32());
                    break;
                case 2:
                    m.reward = $root.proto.Item.decode(r, r.uint32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_GetLimitedRewardRsp;
    })();

    proto.ExportStageInfo = (function() {

        /**
         * Properties of an ExportStageInfo.
         * @memberof proto
         * @interface IExportStageInfo
         * @property {number|null} [fightingStageId] ExportStageInfo fightingStageId
         * @property {Array.<number>|null} [clearedStageIds] ExportStageInfo clearedStageIds
         * @property {Array.<number>|null} [receivedFirstRewardStageIds] ExportStageInfo receivedFirstRewardStageIds
         * @property {number|null} [freeSweepTimes] ExportStageInfo freeSweepTimes
         * @property {number|null} [notFreeSweepTimes] ExportStageInfo notFreeSweepTimes
         */

        /**
         * Constructs a new ExportStageInfo.
         * @memberof proto
         * @classdesc Represents an ExportStageInfo.
         * @implements IExportStageInfo
         * @constructor
         * @param {proto.IExportStageInfo=} [p] Properties to set
         */
        function ExportStageInfo(p) {
            this.clearedStageIds = [];
            this.receivedFirstRewardStageIds = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * ExportStageInfo fightingStageId.
         * @member {number} fightingStageId
         * @memberof proto.ExportStageInfo
         * @instance
         */
        ExportStageInfo.prototype.fightingStageId = 0;

        /**
         * ExportStageInfo clearedStageIds.
         * @member {Array.<number>} clearedStageIds
         * @memberof proto.ExportStageInfo
         * @instance
         */
        ExportStageInfo.prototype.clearedStageIds = $util.emptyArray;

        /**
         * ExportStageInfo receivedFirstRewardStageIds.
         * @member {Array.<number>} receivedFirstRewardStageIds
         * @memberof proto.ExportStageInfo
         * @instance
         */
        ExportStageInfo.prototype.receivedFirstRewardStageIds = $util.emptyArray;

        /**
         * ExportStageInfo freeSweepTimes.
         * @member {number} freeSweepTimes
         * @memberof proto.ExportStageInfo
         * @instance
         */
        ExportStageInfo.prototype.freeSweepTimes = 0;

        /**
         * ExportStageInfo notFreeSweepTimes.
         * @member {number} notFreeSweepTimes
         * @memberof proto.ExportStageInfo
         * @instance
         */
        ExportStageInfo.prototype.notFreeSweepTimes = 0;

        /**
         * Encodes the specified ExportStageInfo message. Does not implicitly {@link proto.ExportStageInfo.verify|verify} messages.
         * @function encode
         * @memberof proto.ExportStageInfo
         * @static
         * @param {proto.IExportStageInfo} m ExportStageInfo message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        ExportStageInfo.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.fightingStageId != null && Object.hasOwnProperty.call(m, "fightingStageId"))
                w.uint32(8).int32(m.fightingStageId);
            if (m.clearedStageIds != null && m.clearedStageIds.length) {
                w.uint32(18).fork();
                for (var i = 0; i < m.clearedStageIds.length; ++i)
                    w.int32(m.clearedStageIds[i]);
                w.ldelim();
            }
            if (m.receivedFirstRewardStageIds != null && m.receivedFirstRewardStageIds.length) {
                w.uint32(26).fork();
                for (var i = 0; i < m.receivedFirstRewardStageIds.length; ++i)
                    w.int32(m.receivedFirstRewardStageIds[i]);
                w.ldelim();
            }
            if (m.freeSweepTimes != null && Object.hasOwnProperty.call(m, "freeSweepTimes"))
                w.uint32(32).int32(m.freeSweepTimes);
            if (m.notFreeSweepTimes != null && Object.hasOwnProperty.call(m, "notFreeSweepTimes"))
                w.uint32(40).int32(m.notFreeSweepTimes);
            return w;
        };

        /**
         * Decodes an ExportStageInfo message from the specified reader or buffer.
         * @function decode
         * @memberof proto.ExportStageInfo
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.ExportStageInfo} ExportStageInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        ExportStageInfo.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.ExportStageInfo();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.fightingStageId = r.int32();
                    break;
                case 2:
                    if (!(m.clearedStageIds && m.clearedStageIds.length))
                        m.clearedStageIds = [];
                    if ((t & 7) === 2) {
                        var c2 = r.uint32() + r.pos;
                        while (r.pos < c2)
                            m.clearedStageIds.push(r.int32());
                    } else
                        m.clearedStageIds.push(r.int32());
                    break;
                case 3:
                    if (!(m.receivedFirstRewardStageIds && m.receivedFirstRewardStageIds.length))
                        m.receivedFirstRewardStageIds = [];
                    if ((t & 7) === 2) {
                        var c2 = r.uint32() + r.pos;
                        while (r.pos < c2)
                            m.receivedFirstRewardStageIds.push(r.int32());
                    } else
                        m.receivedFirstRewardStageIds.push(r.int32());
                    break;
                case 4:
                    m.freeSweepTimes = r.int32();
                    break;
                case 5:
                    m.notFreeSweepTimes = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return ExportStageInfo;
    })();

    proto.Msg_GetExploreStageInfoMapReq = (function() {

        /**
         * Properties of a Msg_GetExploreStageInfoMapReq.
         * @memberof proto
         * @interface IMsg_GetExploreStageInfoMapReq
         */

        /**
         * Constructs a new Msg_GetExploreStageInfoMapReq.
         * @memberof proto
         * @classdesc Represents a Msg_GetExploreStageInfoMapReq.
         * @implements IMsg_GetExploreStageInfoMapReq
         * @constructor
         * @param {proto.IMsg_GetExploreStageInfoMapReq=} [p] Properties to set
         */
        function Msg_GetExploreStageInfoMapReq(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Encodes the specified Msg_GetExploreStageInfoMapReq message. Does not implicitly {@link proto.Msg_GetExploreStageInfoMapReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_GetExploreStageInfoMapReq
         * @static
         * @param {proto.IMsg_GetExploreStageInfoMapReq} m Msg_GetExploreStageInfoMapReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_GetExploreStageInfoMapReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };

        /**
         * Decodes a Msg_GetExploreStageInfoMapReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_GetExploreStageInfoMapReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_GetExploreStageInfoMapReq} Msg_GetExploreStageInfoMapReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_GetExploreStageInfoMapReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_GetExploreStageInfoMapReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_GetExploreStageInfoMapReq;
    })();

    proto.Msg_GetExploreStageInfoMapRsp = (function() {

        /**
         * Properties of a Msg_GetExploreStageInfoMapRsp.
         * @memberof proto
         * @interface IMsg_GetExploreStageInfoMapRsp
         * @property {Object.<string,proto.IExportStageInfo>|null} [stageInfoMap] Msg_GetExploreStageInfoMapRsp stageInfoMap
         */

        /**
         * Constructs a new Msg_GetExploreStageInfoMapRsp.
         * @memberof proto
         * @classdesc Represents a Msg_GetExploreStageInfoMapRsp.
         * @implements IMsg_GetExploreStageInfoMapRsp
         * @constructor
         * @param {proto.IMsg_GetExploreStageInfoMapRsp=} [p] Properties to set
         */
        function Msg_GetExploreStageInfoMapRsp(p) {
            this.stageInfoMap = {};
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_GetExploreStageInfoMapRsp stageInfoMap.
         * @member {Object.<string,proto.IExportStageInfo>} stageInfoMap
         * @memberof proto.Msg_GetExploreStageInfoMapRsp
         * @instance
         */
        Msg_GetExploreStageInfoMapRsp.prototype.stageInfoMap = $util.emptyObject;

        /**
         * Encodes the specified Msg_GetExploreStageInfoMapRsp message. Does not implicitly {@link proto.Msg_GetExploreStageInfoMapRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_GetExploreStageInfoMapRsp
         * @static
         * @param {proto.IMsg_GetExploreStageInfoMapRsp} m Msg_GetExploreStageInfoMapRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_GetExploreStageInfoMapRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.stageInfoMap != null && Object.hasOwnProperty.call(m, "stageInfoMap")) {
                for (var ks = Object.keys(m.stageInfoMap), i = 0; i < ks.length; ++i) {
                    w.uint32(10).fork().uint32(8).int32(ks[i]);
                    $root.proto.ExportStageInfo.encode(m.stageInfoMap[ks[i]], w.uint32(18).fork()).ldelim().ldelim();
                }
            }
            return w;
        };

        /**
         * Decodes a Msg_GetExploreStageInfoMapRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_GetExploreStageInfoMapRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_GetExploreStageInfoMapRsp} Msg_GetExploreStageInfoMapRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_GetExploreStageInfoMapRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_GetExploreStageInfoMapRsp(), k, value;
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (m.stageInfoMap === $util.emptyObject)
                        m.stageInfoMap = {};
                    var c2 = r.uint32() + r.pos;
                    k = 0;
                    value = null;
                    while (r.pos < c2) {
                        var tag2 = r.uint32();
                        switch (tag2 >>> 3) {
                        case 1:
                            k = r.int32();
                            break;
                        case 2:
                            value = $root.proto.ExportStageInfo.decode(r, r.uint32());
                            break;
                        default:
                            r.skipType(tag2 & 7);
                            break;
                        }
                    }
                    m.stageInfoMap[k] = value;
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_GetExploreStageInfoMapRsp;
    })();

    proto.Msg_SweepExploreStageReq = (function() {

        /**
         * Properties of a Msg_SweepExploreStageReq.
         * @memberof proto
         * @interface IMsg_SweepExploreStageReq
         * @property {number|null} [stageId] Msg_SweepExploreStageReq stageId
         */

        /**
         * Constructs a new Msg_SweepExploreStageReq.
         * @memberof proto
         * @classdesc Represents a Msg_SweepExploreStageReq.
         * @implements IMsg_SweepExploreStageReq
         * @constructor
         * @param {proto.IMsg_SweepExploreStageReq=} [p] Properties to set
         */
        function Msg_SweepExploreStageReq(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_SweepExploreStageReq stageId.
         * @member {number} stageId
         * @memberof proto.Msg_SweepExploreStageReq
         * @instance
         */
        Msg_SweepExploreStageReq.prototype.stageId = 0;

        /**
         * Encodes the specified Msg_SweepExploreStageReq message. Does not implicitly {@link proto.Msg_SweepExploreStageReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_SweepExploreStageReq
         * @static
         * @param {proto.IMsg_SweepExploreStageReq} m Msg_SweepExploreStageReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_SweepExploreStageReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.stageId != null && Object.hasOwnProperty.call(m, "stageId"))
                w.uint32(8).int32(m.stageId);
            return w;
        };

        /**
         * Decodes a Msg_SweepExploreStageReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_SweepExploreStageReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_SweepExploreStageReq} Msg_SweepExploreStageReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_SweepExploreStageReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_SweepExploreStageReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.stageId = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_SweepExploreStageReq;
    })();

    proto.Msg_SweepExploreStageRsp = (function() {

        /**
         * Properties of a Msg_SweepExploreStageRsp.
         * @memberof proto
         * @interface IMsg_SweepExploreStageRsp
         * @property {proto.ICommonError|null} [error] Msg_SweepExploreStageRsp error
         * @property {number|null} [stageId] Msg_SweepExploreStageRsp stageId
         * @property {Array.<proto.IItem>|null} [rewards] Msg_SweepExploreStageRsp rewards
         * @property {number|null} [freeSweepTimes] Msg_SweepExploreStageRsp freeSweepTimes
         * @property {number|null} [notFreeSweepTimes] Msg_SweepExploreStageRsp notFreeSweepTimes
         */

        /**
         * Constructs a new Msg_SweepExploreStageRsp.
         * @memberof proto
         * @classdesc Represents a Msg_SweepExploreStageRsp.
         * @implements IMsg_SweepExploreStageRsp
         * @constructor
         * @param {proto.IMsg_SweepExploreStageRsp=} [p] Properties to set
         */
        function Msg_SweepExploreStageRsp(p) {
            this.rewards = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_SweepExploreStageRsp error.
         * @member {proto.ICommonError|null|undefined} error
         * @memberof proto.Msg_SweepExploreStageRsp
         * @instance
         */
        Msg_SweepExploreStageRsp.prototype.error = null;

        /**
         * Msg_SweepExploreStageRsp stageId.
         * @member {number} stageId
         * @memberof proto.Msg_SweepExploreStageRsp
         * @instance
         */
        Msg_SweepExploreStageRsp.prototype.stageId = 0;

        /**
         * Msg_SweepExploreStageRsp rewards.
         * @member {Array.<proto.IItem>} rewards
         * @memberof proto.Msg_SweepExploreStageRsp
         * @instance
         */
        Msg_SweepExploreStageRsp.prototype.rewards = $util.emptyArray;

        /**
         * Msg_SweepExploreStageRsp freeSweepTimes.
         * @member {number} freeSweepTimes
         * @memberof proto.Msg_SweepExploreStageRsp
         * @instance
         */
        Msg_SweepExploreStageRsp.prototype.freeSweepTimes = 0;

        /**
         * Msg_SweepExploreStageRsp notFreeSweepTimes.
         * @member {number} notFreeSweepTimes
         * @memberof proto.Msg_SweepExploreStageRsp
         * @instance
         */
        Msg_SweepExploreStageRsp.prototype.notFreeSweepTimes = 0;

        /**
         * Encodes the specified Msg_SweepExploreStageRsp message. Does not implicitly {@link proto.Msg_SweepExploreStageRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_SweepExploreStageRsp
         * @static
         * @param {proto.IMsg_SweepExploreStageRsp} m Msg_SweepExploreStageRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_SweepExploreStageRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.error != null && Object.hasOwnProperty.call(m, "error"))
                $root.proto.CommonError.encode(m.error, w.uint32(10).fork()).ldelim();
            if (m.stageId != null && Object.hasOwnProperty.call(m, "stageId"))
                w.uint32(16).int32(m.stageId);
            if (m.rewards != null && m.rewards.length) {
                for (var i = 0; i < m.rewards.length; ++i)
                    $root.proto.Item.encode(m.rewards[i], w.uint32(26).fork()).ldelim();
            }
            if (m.freeSweepTimes != null && Object.hasOwnProperty.call(m, "freeSweepTimes"))
                w.uint32(32).int32(m.freeSweepTimes);
            if (m.notFreeSweepTimes != null && Object.hasOwnProperty.call(m, "notFreeSweepTimes"))
                w.uint32(40).int32(m.notFreeSweepTimes);
            return w;
        };

        /**
         * Decodes a Msg_SweepExploreStageRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_SweepExploreStageRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_SweepExploreStageRsp} Msg_SweepExploreStageRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_SweepExploreStageRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_SweepExploreStageRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.error = $root.proto.CommonError.decode(r, r.uint32());
                    break;
                case 2:
                    m.stageId = r.int32();
                    break;
                case 3:
                    if (!(m.rewards && m.rewards.length))
                        m.rewards = [];
                    m.rewards.push($root.proto.Item.decode(r, r.uint32()));
                    break;
                case 4:
                    m.freeSweepTimes = r.int32();
                    break;
                case 5:
                    m.notFreeSweepTimes = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_SweepExploreStageRsp;
    })();

    proto.Msg_SweepExploreStageOneClickReq = (function() {

        /**
         * Properties of a Msg_SweepExploreStageOneClickReq.
         * @memberof proto
         * @interface IMsg_SweepExploreStageOneClickReq
         * @property {number|null} [stageId] Msg_SweepExploreStageOneClickReq stageId
         * @property {boolean|null} [buySweepTimes] Msg_SweepExploreStageOneClickReq buySweepTimes
         */

        /**
         * Constructs a new Msg_SweepExploreStageOneClickReq.
         * @memberof proto
         * @classdesc Represents a Msg_SweepExploreStageOneClickReq.
         * @implements IMsg_SweepExploreStageOneClickReq
         * @constructor
         * @param {proto.IMsg_SweepExploreStageOneClickReq=} [p] Properties to set
         */
        function Msg_SweepExploreStageOneClickReq(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_SweepExploreStageOneClickReq stageId.
         * @member {number} stageId
         * @memberof proto.Msg_SweepExploreStageOneClickReq
         * @instance
         */
        Msg_SweepExploreStageOneClickReq.prototype.stageId = 0;

        /**
         * Msg_SweepExploreStageOneClickReq buySweepTimes.
         * @member {boolean} buySweepTimes
         * @memberof proto.Msg_SweepExploreStageOneClickReq
         * @instance
         */
        Msg_SweepExploreStageOneClickReq.prototype.buySweepTimes = false;

        /**
         * Encodes the specified Msg_SweepExploreStageOneClickReq message. Does not implicitly {@link proto.Msg_SweepExploreStageOneClickReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_SweepExploreStageOneClickReq
         * @static
         * @param {proto.IMsg_SweepExploreStageOneClickReq} m Msg_SweepExploreStageOneClickReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_SweepExploreStageOneClickReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.stageId != null && Object.hasOwnProperty.call(m, "stageId"))
                w.uint32(8).int32(m.stageId);
            if (m.buySweepTimes != null && Object.hasOwnProperty.call(m, "buySweepTimes"))
                w.uint32(16).bool(m.buySweepTimes);
            return w;
        };

        /**
         * Decodes a Msg_SweepExploreStageOneClickReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_SweepExploreStageOneClickReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_SweepExploreStageOneClickReq} Msg_SweepExploreStageOneClickReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_SweepExploreStageOneClickReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_SweepExploreStageOneClickReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.stageId = r.int32();
                    break;
                case 2:
                    m.buySweepTimes = r.bool();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_SweepExploreStageOneClickReq;
    })();

    proto.Msg_SweepExploreStageOneClickRsp = (function() {

        /**
         * Properties of a Msg_SweepExploreStageOneClickRsp.
         * @memberof proto
         * @interface IMsg_SweepExploreStageOneClickRsp
         * @property {proto.ICommonError|null} [error] Msg_SweepExploreStageOneClickRsp error
         * @property {number|null} [stageId] Msg_SweepExploreStageOneClickRsp stageId
         * @property {Array.<proto.IItem>|null} [rewards] Msg_SweepExploreStageOneClickRsp rewards
         * @property {number|null} [freeSweepTimes] Msg_SweepExploreStageOneClickRsp freeSweepTimes
         * @property {number|null} [notFreeSweepTimes] Msg_SweepExploreStageOneClickRsp notFreeSweepTimes
         */

        /**
         * Constructs a new Msg_SweepExploreStageOneClickRsp.
         * @memberof proto
         * @classdesc Represents a Msg_SweepExploreStageOneClickRsp.
         * @implements IMsg_SweepExploreStageOneClickRsp
         * @constructor
         * @param {proto.IMsg_SweepExploreStageOneClickRsp=} [p] Properties to set
         */
        function Msg_SweepExploreStageOneClickRsp(p) {
            this.rewards = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_SweepExploreStageOneClickRsp error.
         * @member {proto.ICommonError|null|undefined} error
         * @memberof proto.Msg_SweepExploreStageOneClickRsp
         * @instance
         */
        Msg_SweepExploreStageOneClickRsp.prototype.error = null;

        /**
         * Msg_SweepExploreStageOneClickRsp stageId.
         * @member {number} stageId
         * @memberof proto.Msg_SweepExploreStageOneClickRsp
         * @instance
         */
        Msg_SweepExploreStageOneClickRsp.prototype.stageId = 0;

        /**
         * Msg_SweepExploreStageOneClickRsp rewards.
         * @member {Array.<proto.IItem>} rewards
         * @memberof proto.Msg_SweepExploreStageOneClickRsp
         * @instance
         */
        Msg_SweepExploreStageOneClickRsp.prototype.rewards = $util.emptyArray;

        /**
         * Msg_SweepExploreStageOneClickRsp freeSweepTimes.
         * @member {number} freeSweepTimes
         * @memberof proto.Msg_SweepExploreStageOneClickRsp
         * @instance
         */
        Msg_SweepExploreStageOneClickRsp.prototype.freeSweepTimes = 0;

        /**
         * Msg_SweepExploreStageOneClickRsp notFreeSweepTimes.
         * @member {number} notFreeSweepTimes
         * @memberof proto.Msg_SweepExploreStageOneClickRsp
         * @instance
         */
        Msg_SweepExploreStageOneClickRsp.prototype.notFreeSweepTimes = 0;

        /**
         * Encodes the specified Msg_SweepExploreStageOneClickRsp message. Does not implicitly {@link proto.Msg_SweepExploreStageOneClickRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_SweepExploreStageOneClickRsp
         * @static
         * @param {proto.IMsg_SweepExploreStageOneClickRsp} m Msg_SweepExploreStageOneClickRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_SweepExploreStageOneClickRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.error != null && Object.hasOwnProperty.call(m, "error"))
                $root.proto.CommonError.encode(m.error, w.uint32(10).fork()).ldelim();
            if (m.stageId != null && Object.hasOwnProperty.call(m, "stageId"))
                w.uint32(16).int32(m.stageId);
            if (m.rewards != null && m.rewards.length) {
                for (var i = 0; i < m.rewards.length; ++i)
                    $root.proto.Item.encode(m.rewards[i], w.uint32(26).fork()).ldelim();
            }
            if (m.freeSweepTimes != null && Object.hasOwnProperty.call(m, "freeSweepTimes"))
                w.uint32(32).int32(m.freeSweepTimes);
            if (m.notFreeSweepTimes != null && Object.hasOwnProperty.call(m, "notFreeSweepTimes"))
                w.uint32(40).int32(m.notFreeSweepTimes);
            return w;
        };

        /**
         * Decodes a Msg_SweepExploreStageOneClickRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_SweepExploreStageOneClickRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_SweepExploreStageOneClickRsp} Msg_SweepExploreStageOneClickRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_SweepExploreStageOneClickRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_SweepExploreStageOneClickRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.error = $root.proto.CommonError.decode(r, r.uint32());
                    break;
                case 2:
                    m.stageId = r.int32();
                    break;
                case 3:
                    if (!(m.rewards && m.rewards.length))
                        m.rewards = [];
                    m.rewards.push($root.proto.Item.decode(r, r.uint32()));
                    break;
                case 4:
                    m.freeSweepTimes = r.int32();
                    break;
                case 5:
                    m.notFreeSweepTimes = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_SweepExploreStageOneClickRsp;
    })();

    proto.Msg_ReceiveExploreStageFirstRewardReq = (function() {

        /**
         * Properties of a Msg_ReceiveExploreStageFirstRewardReq.
         * @memberof proto
         * @interface IMsg_ReceiveExploreStageFirstRewardReq
         * @property {number|null} [stageId] Msg_ReceiveExploreStageFirstRewardReq stageId
         */

        /**
         * Constructs a new Msg_ReceiveExploreStageFirstRewardReq.
         * @memberof proto
         * @classdesc Represents a Msg_ReceiveExploreStageFirstRewardReq.
         * @implements IMsg_ReceiveExploreStageFirstRewardReq
         * @constructor
         * @param {proto.IMsg_ReceiveExploreStageFirstRewardReq=} [p] Properties to set
         */
        function Msg_ReceiveExploreStageFirstRewardReq(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_ReceiveExploreStageFirstRewardReq stageId.
         * @member {number} stageId
         * @memberof proto.Msg_ReceiveExploreStageFirstRewardReq
         * @instance
         */
        Msg_ReceiveExploreStageFirstRewardReq.prototype.stageId = 0;

        /**
         * Encodes the specified Msg_ReceiveExploreStageFirstRewardReq message. Does not implicitly {@link proto.Msg_ReceiveExploreStageFirstRewardReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_ReceiveExploreStageFirstRewardReq
         * @static
         * @param {proto.IMsg_ReceiveExploreStageFirstRewardReq} m Msg_ReceiveExploreStageFirstRewardReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_ReceiveExploreStageFirstRewardReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.stageId != null && Object.hasOwnProperty.call(m, "stageId"))
                w.uint32(8).int32(m.stageId);
            return w;
        };

        /**
         * Decodes a Msg_ReceiveExploreStageFirstRewardReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_ReceiveExploreStageFirstRewardReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_ReceiveExploreStageFirstRewardReq} Msg_ReceiveExploreStageFirstRewardReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_ReceiveExploreStageFirstRewardReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_ReceiveExploreStageFirstRewardReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.stageId = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_ReceiveExploreStageFirstRewardReq;
    })();

    proto.Msg_ReceiveExploreStageFirstRewardRsp = (function() {

        /**
         * Properties of a Msg_ReceiveExploreStageFirstRewardRsp.
         * @memberof proto
         * @interface IMsg_ReceiveExploreStageFirstRewardRsp
         * @property {proto.ICommonError|null} [error] Msg_ReceiveExploreStageFirstRewardRsp error
         * @property {number|null} [stageId] Msg_ReceiveExploreStageFirstRewardRsp stageId
         * @property {Array.<proto.IItem>|null} [rewards] Msg_ReceiveExploreStageFirstRewardRsp rewards
         */

        /**
         * Constructs a new Msg_ReceiveExploreStageFirstRewardRsp.
         * @memberof proto
         * @classdesc Represents a Msg_ReceiveExploreStageFirstRewardRsp.
         * @implements IMsg_ReceiveExploreStageFirstRewardRsp
         * @constructor
         * @param {proto.IMsg_ReceiveExploreStageFirstRewardRsp=} [p] Properties to set
         */
        function Msg_ReceiveExploreStageFirstRewardRsp(p) {
            this.rewards = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_ReceiveExploreStageFirstRewardRsp error.
         * @member {proto.ICommonError|null|undefined} error
         * @memberof proto.Msg_ReceiveExploreStageFirstRewardRsp
         * @instance
         */
        Msg_ReceiveExploreStageFirstRewardRsp.prototype.error = null;

        /**
         * Msg_ReceiveExploreStageFirstRewardRsp stageId.
         * @member {number} stageId
         * @memberof proto.Msg_ReceiveExploreStageFirstRewardRsp
         * @instance
         */
        Msg_ReceiveExploreStageFirstRewardRsp.prototype.stageId = 0;

        /**
         * Msg_ReceiveExploreStageFirstRewardRsp rewards.
         * @member {Array.<proto.IItem>} rewards
         * @memberof proto.Msg_ReceiveExploreStageFirstRewardRsp
         * @instance
         */
        Msg_ReceiveExploreStageFirstRewardRsp.prototype.rewards = $util.emptyArray;

        /**
         * Encodes the specified Msg_ReceiveExploreStageFirstRewardRsp message. Does not implicitly {@link proto.Msg_ReceiveExploreStageFirstRewardRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_ReceiveExploreStageFirstRewardRsp
         * @static
         * @param {proto.IMsg_ReceiveExploreStageFirstRewardRsp} m Msg_ReceiveExploreStageFirstRewardRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_ReceiveExploreStageFirstRewardRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.error != null && Object.hasOwnProperty.call(m, "error"))
                $root.proto.CommonError.encode(m.error, w.uint32(10).fork()).ldelim();
            if (m.stageId != null && Object.hasOwnProperty.call(m, "stageId"))
                w.uint32(16).int32(m.stageId);
            if (m.rewards != null && m.rewards.length) {
                for (var i = 0; i < m.rewards.length; ++i)
                    $root.proto.Item.encode(m.rewards[i], w.uint32(26).fork()).ldelim();
            }
            return w;
        };

        /**
         * Decodes a Msg_ReceiveExploreStageFirstRewardRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_ReceiveExploreStageFirstRewardRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_ReceiveExploreStageFirstRewardRsp} Msg_ReceiveExploreStageFirstRewardRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_ReceiveExploreStageFirstRewardRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_ReceiveExploreStageFirstRewardRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.error = $root.proto.CommonError.decode(r, r.uint32());
                    break;
                case 2:
                    m.stageId = r.int32();
                    break;
                case 3:
                    if (!(m.rewards && m.rewards.length))
                        m.rewards = [];
                    m.rewards.push($root.proto.Item.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_ReceiveExploreStageFirstRewardRsp;
    })();

    proto.Msg_DailyRewardPush = (function() {

        /**
         * Properties of a Msg_DailyRewardPush.
         * @memberof proto
         * @interface IMsg_DailyRewardPush
         * @property {number|null} [id] Msg_DailyRewardPush id
         * @property {number|Long|null} [closeTime] Msg_DailyRewardPush closeTime
         * @property {Array.<number>|null} [activatedList] Msg_DailyRewardPush activatedList
         * @property {Array.<number>|null} [rewardList] Msg_DailyRewardPush rewardList
         */

        /**
         * Constructs a new Msg_DailyRewardPush.
         * @memberof proto
         * @classdesc Represents a Msg_DailyRewardPush.
         * @implements IMsg_DailyRewardPush
         * @constructor
         * @param {proto.IMsg_DailyRewardPush=} [p] Properties to set
         */
        function Msg_DailyRewardPush(p) {
            this.activatedList = [];
            this.rewardList = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_DailyRewardPush id.
         * @member {number} id
         * @memberof proto.Msg_DailyRewardPush
         * @instance
         */
        Msg_DailyRewardPush.prototype.id = 0;

        /**
         * Msg_DailyRewardPush closeTime.
         * @member {number|Long} closeTime
         * @memberof proto.Msg_DailyRewardPush
         * @instance
         */
        Msg_DailyRewardPush.prototype.closeTime = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

        /**
         * Msg_DailyRewardPush activatedList.
         * @member {Array.<number>} activatedList
         * @memberof proto.Msg_DailyRewardPush
         * @instance
         */
        Msg_DailyRewardPush.prototype.activatedList = $util.emptyArray;

        /**
         * Msg_DailyRewardPush rewardList.
         * @member {Array.<number>} rewardList
         * @memberof proto.Msg_DailyRewardPush
         * @instance
         */
        Msg_DailyRewardPush.prototype.rewardList = $util.emptyArray;

        /**
         * Encodes the specified Msg_DailyRewardPush message. Does not implicitly {@link proto.Msg_DailyRewardPush.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_DailyRewardPush
         * @static
         * @param {proto.IMsg_DailyRewardPush} m Msg_DailyRewardPush message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_DailyRewardPush.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.id != null && Object.hasOwnProperty.call(m, "id"))
                w.uint32(8).int32(m.id);
            if (m.closeTime != null && Object.hasOwnProperty.call(m, "closeTime"))
                w.uint32(16).int64(m.closeTime);
            if (m.activatedList != null && m.activatedList.length) {
                w.uint32(26).fork();
                for (var i = 0; i < m.activatedList.length; ++i)
                    w.int32(m.activatedList[i]);
                w.ldelim();
            }
            if (m.rewardList != null && m.rewardList.length) {
                w.uint32(34).fork();
                for (var i = 0; i < m.rewardList.length; ++i)
                    w.int32(m.rewardList[i]);
                w.ldelim();
            }
            return w;
        };

        /**
         * Decodes a Msg_DailyRewardPush message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_DailyRewardPush
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_DailyRewardPush} Msg_DailyRewardPush
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_DailyRewardPush.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_DailyRewardPush();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.id = r.int32();
                    break;
                case 2:
                    m.closeTime = r.int64();
                    break;
                case 3:
                    if (!(m.activatedList && m.activatedList.length))
                        m.activatedList = [];
                    if ((t & 7) === 2) {
                        var c2 = r.uint32() + r.pos;
                        while (r.pos < c2)
                            m.activatedList.push(r.int32());
                    } else
                        m.activatedList.push(r.int32());
                    break;
                case 4:
                    if (!(m.rewardList && m.rewardList.length))
                        m.rewardList = [];
                    if ((t & 7) === 2) {
                        var c2 = r.uint32() + r.pos;
                        while (r.pos < c2)
                            m.rewardList.push(r.int32());
                    } else
                        m.rewardList.push(r.int32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_DailyRewardPush;
    })();

    proto.Msg_GetDailyRewardReq = (function() {

        /**
         * Properties of a Msg_GetDailyRewardReq.
         * @memberof proto
         * @interface IMsg_GetDailyRewardReq
         * @property {number|null} [id] Msg_GetDailyRewardReq id
         * @property {number|null} [day] Msg_GetDailyRewardReq day
         */

        /**
         * Constructs a new Msg_GetDailyRewardReq.
         * @memberof proto
         * @classdesc Represents a Msg_GetDailyRewardReq.
         * @implements IMsg_GetDailyRewardReq
         * @constructor
         * @param {proto.IMsg_GetDailyRewardReq=} [p] Properties to set
         */
        function Msg_GetDailyRewardReq(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_GetDailyRewardReq id.
         * @member {number} id
         * @memberof proto.Msg_GetDailyRewardReq
         * @instance
         */
        Msg_GetDailyRewardReq.prototype.id = 0;

        /**
         * Msg_GetDailyRewardReq day.
         * @member {number} day
         * @memberof proto.Msg_GetDailyRewardReq
         * @instance
         */
        Msg_GetDailyRewardReq.prototype.day = 0;

        /**
         * Encodes the specified Msg_GetDailyRewardReq message. Does not implicitly {@link proto.Msg_GetDailyRewardReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_GetDailyRewardReq
         * @static
         * @param {proto.IMsg_GetDailyRewardReq} m Msg_GetDailyRewardReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_GetDailyRewardReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.id != null && Object.hasOwnProperty.call(m, "id"))
                w.uint32(8).int32(m.id);
            if (m.day != null && Object.hasOwnProperty.call(m, "day"))
                w.uint32(16).int32(m.day);
            return w;
        };

        /**
         * Decodes a Msg_GetDailyRewardReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_GetDailyRewardReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_GetDailyRewardReq} Msg_GetDailyRewardReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_GetDailyRewardReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_GetDailyRewardReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.id = r.int32();
                    break;
                case 2:
                    m.day = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_GetDailyRewardReq;
    })();

    proto.Msg_GetDailyRewardRsp = (function() {

        /**
         * Properties of a Msg_GetDailyRewardRsp.
         * @memberof proto
         * @interface IMsg_GetDailyRewardRsp
         * @property {proto.ICommonError|null} [error] Msg_GetDailyRewardRsp error
         * @property {number|null} [day] Msg_GetDailyRewardRsp day
         * @property {proto.IMsg_DailyRewardPush|null} [data] Msg_GetDailyRewardRsp data
         * @property {Array.<proto.IItem>|null} [rewards] Msg_GetDailyRewardRsp rewards
         */

        /**
         * Constructs a new Msg_GetDailyRewardRsp.
         * @memberof proto
         * @classdesc Represents a Msg_GetDailyRewardRsp.
         * @implements IMsg_GetDailyRewardRsp
         * @constructor
         * @param {proto.IMsg_GetDailyRewardRsp=} [p] Properties to set
         */
        function Msg_GetDailyRewardRsp(p) {
            this.rewards = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_GetDailyRewardRsp error.
         * @member {proto.ICommonError|null|undefined} error
         * @memberof proto.Msg_GetDailyRewardRsp
         * @instance
         */
        Msg_GetDailyRewardRsp.prototype.error = null;

        /**
         * Msg_GetDailyRewardRsp day.
         * @member {number} day
         * @memberof proto.Msg_GetDailyRewardRsp
         * @instance
         */
        Msg_GetDailyRewardRsp.prototype.day = 0;

        /**
         * Msg_GetDailyRewardRsp data.
         * @member {proto.IMsg_DailyRewardPush|null|undefined} data
         * @memberof proto.Msg_GetDailyRewardRsp
         * @instance
         */
        Msg_GetDailyRewardRsp.prototype.data = null;

        /**
         * Msg_GetDailyRewardRsp rewards.
         * @member {Array.<proto.IItem>} rewards
         * @memberof proto.Msg_GetDailyRewardRsp
         * @instance
         */
        Msg_GetDailyRewardRsp.prototype.rewards = $util.emptyArray;

        /**
         * Encodes the specified Msg_GetDailyRewardRsp message. Does not implicitly {@link proto.Msg_GetDailyRewardRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_GetDailyRewardRsp
         * @static
         * @param {proto.IMsg_GetDailyRewardRsp} m Msg_GetDailyRewardRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_GetDailyRewardRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.error != null && Object.hasOwnProperty.call(m, "error"))
                $root.proto.CommonError.encode(m.error, w.uint32(10).fork()).ldelim();
            if (m.day != null && Object.hasOwnProperty.call(m, "day"))
                w.uint32(16).int32(m.day);
            if (m.data != null && Object.hasOwnProperty.call(m, "data"))
                $root.proto.Msg_DailyRewardPush.encode(m.data, w.uint32(26).fork()).ldelim();
            if (m.rewards != null && m.rewards.length) {
                for (var i = 0; i < m.rewards.length; ++i)
                    $root.proto.Item.encode(m.rewards[i], w.uint32(34).fork()).ldelim();
            }
            return w;
        };

        /**
         * Decodes a Msg_GetDailyRewardRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_GetDailyRewardRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_GetDailyRewardRsp} Msg_GetDailyRewardRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_GetDailyRewardRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_GetDailyRewardRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.error = $root.proto.CommonError.decode(r, r.uint32());
                    break;
                case 2:
                    m.day = r.int32();
                    break;
                case 3:
                    m.data = $root.proto.Msg_DailyRewardPush.decode(r, r.uint32());
                    break;
                case 4:
                    if (!(m.rewards && m.rewards.length))
                        m.rewards = [];
                    m.rewards.push($root.proto.Item.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_GetDailyRewardRsp;
    })();

    proto.Msg_UseHeroPieceOneClickReq = (function() {

        /**
         * Properties of a Msg_UseHeroPieceOneClickReq.
         * @memberof proto
         * @interface IMsg_UseHeroPieceOneClickReq
         */

        /**
         * Constructs a new Msg_UseHeroPieceOneClickReq.
         * @memberof proto
         * @classdesc Represents a Msg_UseHeroPieceOneClickReq.
         * @implements IMsg_UseHeroPieceOneClickReq
         * @constructor
         * @param {proto.IMsg_UseHeroPieceOneClickReq=} [p] Properties to set
         */
        function Msg_UseHeroPieceOneClickReq(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Encodes the specified Msg_UseHeroPieceOneClickReq message. Does not implicitly {@link proto.Msg_UseHeroPieceOneClickReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_UseHeroPieceOneClickReq
         * @static
         * @param {proto.IMsg_UseHeroPieceOneClickReq} m Msg_UseHeroPieceOneClickReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_UseHeroPieceOneClickReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };

        /**
         * Decodes a Msg_UseHeroPieceOneClickReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_UseHeroPieceOneClickReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_UseHeroPieceOneClickReq} Msg_UseHeroPieceOneClickReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_UseHeroPieceOneClickReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_UseHeroPieceOneClickReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_UseHeroPieceOneClickReq;
    })();

    proto.Msg_UseHeroPieceOneClickRsp = (function() {

        /**
         * Properties of a Msg_UseHeroPieceOneClickRsp.
         * @memberof proto
         * @interface IMsg_UseHeroPieceOneClickRsp
         * @property {proto.ICommonError|null} [error] Msg_UseHeroPieceOneClickRsp error
         * @property {Array.<proto.IItem>|null} [rewards] Msg_UseHeroPieceOneClickRsp rewards
         */

        /**
         * Constructs a new Msg_UseHeroPieceOneClickRsp.
         * @memberof proto
         * @classdesc Represents a Msg_UseHeroPieceOneClickRsp.
         * @implements IMsg_UseHeroPieceOneClickRsp
         * @constructor
         * @param {proto.IMsg_UseHeroPieceOneClickRsp=} [p] Properties to set
         */
        function Msg_UseHeroPieceOneClickRsp(p) {
            this.rewards = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_UseHeroPieceOneClickRsp error.
         * @member {proto.ICommonError|null|undefined} error
         * @memberof proto.Msg_UseHeroPieceOneClickRsp
         * @instance
         */
        Msg_UseHeroPieceOneClickRsp.prototype.error = null;

        /**
         * Msg_UseHeroPieceOneClickRsp rewards.
         * @member {Array.<proto.IItem>} rewards
         * @memberof proto.Msg_UseHeroPieceOneClickRsp
         * @instance
         */
        Msg_UseHeroPieceOneClickRsp.prototype.rewards = $util.emptyArray;

        /**
         * Encodes the specified Msg_UseHeroPieceOneClickRsp message. Does not implicitly {@link proto.Msg_UseHeroPieceOneClickRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_UseHeroPieceOneClickRsp
         * @static
         * @param {proto.IMsg_UseHeroPieceOneClickRsp} m Msg_UseHeroPieceOneClickRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_UseHeroPieceOneClickRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.error != null && Object.hasOwnProperty.call(m, "error"))
                $root.proto.CommonError.encode(m.error, w.uint32(10).fork()).ldelim();
            if (m.rewards != null && m.rewards.length) {
                for (var i = 0; i < m.rewards.length; ++i)
                    $root.proto.Item.encode(m.rewards[i], w.uint32(18).fork()).ldelim();
            }
            return w;
        };

        /**
         * Decodes a Msg_UseHeroPieceOneClickRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_UseHeroPieceOneClickRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_UseHeroPieceOneClickRsp} Msg_UseHeroPieceOneClickRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_UseHeroPieceOneClickRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_UseHeroPieceOneClickRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.error = $root.proto.CommonError.decode(r, r.uint32());
                    break;
                case 2:
                    if (!(m.rewards && m.rewards.length))
                        m.rewards = [];
                    m.rewards.push($root.proto.Item.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_UseHeroPieceOneClickRsp;
    })();

    proto.FixedShopCommodity = (function() {

        /**
         * Properties of a FixedShopCommodity.
         * @memberof proto
         * @interface IFixedShopCommodity
         * @property {number|null} [id] FixedShopCommodity id
         * @property {number|null} [boughtCount] FixedShopCommodity boughtCount
         */

        /**
         * Constructs a new FixedShopCommodity.
         * @memberof proto
         * @classdesc Represents a FixedShopCommodity.
         * @implements IFixedShopCommodity
         * @constructor
         * @param {proto.IFixedShopCommodity=} [p] Properties to set
         */
        function FixedShopCommodity(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * FixedShopCommodity id.
         * @member {number} id
         * @memberof proto.FixedShopCommodity
         * @instance
         */
        FixedShopCommodity.prototype.id = 0;

        /**
         * FixedShopCommodity boughtCount.
         * @member {number} boughtCount
         * @memberof proto.FixedShopCommodity
         * @instance
         */
        FixedShopCommodity.prototype.boughtCount = 0;

        /**
         * Encodes the specified FixedShopCommodity message. Does not implicitly {@link proto.FixedShopCommodity.verify|verify} messages.
         * @function encode
         * @memberof proto.FixedShopCommodity
         * @static
         * @param {proto.IFixedShopCommodity} m FixedShopCommodity message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        FixedShopCommodity.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.id != null && Object.hasOwnProperty.call(m, "id"))
                w.uint32(8).int32(m.id);
            if (m.boughtCount != null && Object.hasOwnProperty.call(m, "boughtCount"))
                w.uint32(16).int32(m.boughtCount);
            return w;
        };

        /**
         * Decodes a FixedShopCommodity message from the specified reader or buffer.
         * @function decode
         * @memberof proto.FixedShopCommodity
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.FixedShopCommodity} FixedShopCommodity
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        FixedShopCommodity.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.FixedShopCommodity();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.id = r.int32();
                    break;
                case 2:
                    m.boughtCount = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return FixedShopCommodity;
    })();

    proto.FixedShopInfo = (function() {

        /**
         * Properties of a FixedShopInfo.
         * @memberof proto
         * @interface IFixedShopInfo
         * @property {number|null} [name] FixedShopInfo name
         * @property {Object.<string,proto.IFixedShopCommodity>|null} [commodityMap] FixedShopInfo commodityMap
         * @property {number|null} [version] FixedShopInfo version
         * @property {number|Long|null} [expireTime] FixedShopInfo expireTime
         */

        /**
         * Constructs a new FixedShopInfo.
         * @memberof proto
         * @classdesc Represents a FixedShopInfo.
         * @implements IFixedShopInfo
         * @constructor
         * @param {proto.IFixedShopInfo=} [p] Properties to set
         */
        function FixedShopInfo(p) {
            this.commodityMap = {};
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * FixedShopInfo name.
         * @member {number} name
         * @memberof proto.FixedShopInfo
         * @instance
         */
        FixedShopInfo.prototype.name = 0;

        /**
         * FixedShopInfo commodityMap.
         * @member {Object.<string,proto.IFixedShopCommodity>} commodityMap
         * @memberof proto.FixedShopInfo
         * @instance
         */
        FixedShopInfo.prototype.commodityMap = $util.emptyObject;

        /**
         * FixedShopInfo version.
         * @member {number} version
         * @memberof proto.FixedShopInfo
         * @instance
         */
        FixedShopInfo.prototype.version = 0;

        /**
         * FixedShopInfo expireTime.
         * @member {number|Long} expireTime
         * @memberof proto.FixedShopInfo
         * @instance
         */
        FixedShopInfo.prototype.expireTime = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

        /**
         * Encodes the specified FixedShopInfo message. Does not implicitly {@link proto.FixedShopInfo.verify|verify} messages.
         * @function encode
         * @memberof proto.FixedShopInfo
         * @static
         * @param {proto.IFixedShopInfo} m FixedShopInfo message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        FixedShopInfo.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.name != null && Object.hasOwnProperty.call(m, "name"))
                w.uint32(8).int32(m.name);
            if (m.commodityMap != null && Object.hasOwnProperty.call(m, "commodityMap")) {
                for (var ks = Object.keys(m.commodityMap), i = 0; i < ks.length; ++i) {
                    w.uint32(18).fork().uint32(8).int32(ks[i]);
                    $root.proto.FixedShopCommodity.encode(m.commodityMap[ks[i]], w.uint32(18).fork()).ldelim().ldelim();
                }
            }
            if (m.version != null && Object.hasOwnProperty.call(m, "version"))
                w.uint32(24).int32(m.version);
            if (m.expireTime != null && Object.hasOwnProperty.call(m, "expireTime"))
                w.uint32(32).int64(m.expireTime);
            return w;
        };

        /**
         * Decodes a FixedShopInfo message from the specified reader or buffer.
         * @function decode
         * @memberof proto.FixedShopInfo
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.FixedShopInfo} FixedShopInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        FixedShopInfo.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.FixedShopInfo(), k, value;
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.name = r.int32();
                    break;
                case 2:
                    if (m.commodityMap === $util.emptyObject)
                        m.commodityMap = {};
                    var c2 = r.uint32() + r.pos;
                    k = 0;
                    value = null;
                    while (r.pos < c2) {
                        var tag2 = r.uint32();
                        switch (tag2 >>> 3) {
                        case 1:
                            k = r.int32();
                            break;
                        case 2:
                            value = $root.proto.FixedShopCommodity.decode(r, r.uint32());
                            break;
                        default:
                            r.skipType(tag2 & 7);
                            break;
                        }
                    }
                    m.commodityMap[k] = value;
                    break;
                case 3:
                    m.version = r.int32();
                    break;
                case 4:
                    m.expireTime = r.int64();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return FixedShopInfo;
    })();

    proto.Msg_GetFixedShopInfoMapReq = (function() {

        /**
         * Properties of a Msg_GetFixedShopInfoMapReq.
         * @memberof proto
         * @interface IMsg_GetFixedShopInfoMapReq
         */

        /**
         * Constructs a new Msg_GetFixedShopInfoMapReq.
         * @memberof proto
         * @classdesc Represents a Msg_GetFixedShopInfoMapReq.
         * @implements IMsg_GetFixedShopInfoMapReq
         * @constructor
         * @param {proto.IMsg_GetFixedShopInfoMapReq=} [p] Properties to set
         */
        function Msg_GetFixedShopInfoMapReq(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Encodes the specified Msg_GetFixedShopInfoMapReq message. Does not implicitly {@link proto.Msg_GetFixedShopInfoMapReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_GetFixedShopInfoMapReq
         * @static
         * @param {proto.IMsg_GetFixedShopInfoMapReq} m Msg_GetFixedShopInfoMapReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_GetFixedShopInfoMapReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };

        /**
         * Decodes a Msg_GetFixedShopInfoMapReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_GetFixedShopInfoMapReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_GetFixedShopInfoMapReq} Msg_GetFixedShopInfoMapReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_GetFixedShopInfoMapReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_GetFixedShopInfoMapReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_GetFixedShopInfoMapReq;
    })();

    proto.Msg_GetFixedShopInfoMapRsp = (function() {

        /**
         * Properties of a Msg_GetFixedShopInfoMapRsp.
         * @memberof proto
         * @interface IMsg_GetFixedShopInfoMapRsp
         * @property {Object.<string,proto.IFixedShopInfo>|null} [shopInfoMap] Msg_GetFixedShopInfoMapRsp shopInfoMap
         */

        /**
         * Constructs a new Msg_GetFixedShopInfoMapRsp.
         * @memberof proto
         * @classdesc Represents a Msg_GetFixedShopInfoMapRsp.
         * @implements IMsg_GetFixedShopInfoMapRsp
         * @constructor
         * @param {proto.IMsg_GetFixedShopInfoMapRsp=} [p] Properties to set
         */
        function Msg_GetFixedShopInfoMapRsp(p) {
            this.shopInfoMap = {};
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_GetFixedShopInfoMapRsp shopInfoMap.
         * @member {Object.<string,proto.IFixedShopInfo>} shopInfoMap
         * @memberof proto.Msg_GetFixedShopInfoMapRsp
         * @instance
         */
        Msg_GetFixedShopInfoMapRsp.prototype.shopInfoMap = $util.emptyObject;

        /**
         * Encodes the specified Msg_GetFixedShopInfoMapRsp message. Does not implicitly {@link proto.Msg_GetFixedShopInfoMapRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_GetFixedShopInfoMapRsp
         * @static
         * @param {proto.IMsg_GetFixedShopInfoMapRsp} m Msg_GetFixedShopInfoMapRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_GetFixedShopInfoMapRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.shopInfoMap != null && Object.hasOwnProperty.call(m, "shopInfoMap")) {
                for (var ks = Object.keys(m.shopInfoMap), i = 0; i < ks.length; ++i) {
                    w.uint32(10).fork().uint32(8).int32(ks[i]);
                    $root.proto.FixedShopInfo.encode(m.shopInfoMap[ks[i]], w.uint32(18).fork()).ldelim().ldelim();
                }
            }
            return w;
        };

        /**
         * Decodes a Msg_GetFixedShopInfoMapRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_GetFixedShopInfoMapRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_GetFixedShopInfoMapRsp} Msg_GetFixedShopInfoMapRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_GetFixedShopInfoMapRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_GetFixedShopInfoMapRsp(), k, value;
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (m.shopInfoMap === $util.emptyObject)
                        m.shopInfoMap = {};
                    var c2 = r.uint32() + r.pos;
                    k = 0;
                    value = null;
                    while (r.pos < c2) {
                        var tag2 = r.uint32();
                        switch (tag2 >>> 3) {
                        case 1:
                            k = r.int32();
                            break;
                        case 2:
                            value = $root.proto.FixedShopInfo.decode(r, r.uint32());
                            break;
                        default:
                            r.skipType(tag2 & 7);
                            break;
                        }
                    }
                    m.shopInfoMap[k] = value;
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_GetFixedShopInfoMapRsp;
    })();

    proto.Msg_BuyFixedShopCommodityReq = (function() {

        /**
         * Properties of a Msg_BuyFixedShopCommodityReq.
         * @memberof proto
         * @interface IMsg_BuyFixedShopCommodityReq
         * @property {number|null} [commodityId] Msg_BuyFixedShopCommodityReq commodityId
         * @property {number|null} [num] Msg_BuyFixedShopCommodityReq num
         */

        /**
         * Constructs a new Msg_BuyFixedShopCommodityReq.
         * @memberof proto
         * @classdesc Represents a Msg_BuyFixedShopCommodityReq.
         * @implements IMsg_BuyFixedShopCommodityReq
         * @constructor
         * @param {proto.IMsg_BuyFixedShopCommodityReq=} [p] Properties to set
         */
        function Msg_BuyFixedShopCommodityReq(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_BuyFixedShopCommodityReq commodityId.
         * @member {number} commodityId
         * @memberof proto.Msg_BuyFixedShopCommodityReq
         * @instance
         */
        Msg_BuyFixedShopCommodityReq.prototype.commodityId = 0;

        /**
         * Msg_BuyFixedShopCommodityReq num.
         * @member {number} num
         * @memberof proto.Msg_BuyFixedShopCommodityReq
         * @instance
         */
        Msg_BuyFixedShopCommodityReq.prototype.num = 0;

        /**
         * Encodes the specified Msg_BuyFixedShopCommodityReq message. Does not implicitly {@link proto.Msg_BuyFixedShopCommodityReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_BuyFixedShopCommodityReq
         * @static
         * @param {proto.IMsg_BuyFixedShopCommodityReq} m Msg_BuyFixedShopCommodityReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_BuyFixedShopCommodityReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.commodityId != null && Object.hasOwnProperty.call(m, "commodityId"))
                w.uint32(8).int32(m.commodityId);
            if (m.num != null && Object.hasOwnProperty.call(m, "num"))
                w.uint32(16).int32(m.num);
            return w;
        };

        /**
         * Decodes a Msg_BuyFixedShopCommodityReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_BuyFixedShopCommodityReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_BuyFixedShopCommodityReq} Msg_BuyFixedShopCommodityReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_BuyFixedShopCommodityReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_BuyFixedShopCommodityReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.commodityId = r.int32();
                    break;
                case 2:
                    m.num = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_BuyFixedShopCommodityReq;
    })();

    proto.Msg_BuyFixedShopCommodityRsp = (function() {

        /**
         * Properties of a Msg_BuyFixedShopCommodityRsp.
         * @memberof proto
         * @interface IMsg_BuyFixedShopCommodityRsp
         * @property {proto.ICommonError|null} [error] Msg_BuyFixedShopCommodityRsp error
         * @property {number|null} [commodityId] Msg_BuyFixedShopCommodityRsp commodityId
         * @property {number|null} [num] Msg_BuyFixedShopCommodityRsp num
         * @property {number|null} [boughtCount] Msg_BuyFixedShopCommodityRsp boughtCount
         * @property {Array.<proto.IItem>|null} [rewards] Msg_BuyFixedShopCommodityRsp rewards
         */

        /**
         * Constructs a new Msg_BuyFixedShopCommodityRsp.
         * @memberof proto
         * @classdesc Represents a Msg_BuyFixedShopCommodityRsp.
         * @implements IMsg_BuyFixedShopCommodityRsp
         * @constructor
         * @param {proto.IMsg_BuyFixedShopCommodityRsp=} [p] Properties to set
         */
        function Msg_BuyFixedShopCommodityRsp(p) {
            this.rewards = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_BuyFixedShopCommodityRsp error.
         * @member {proto.ICommonError|null|undefined} error
         * @memberof proto.Msg_BuyFixedShopCommodityRsp
         * @instance
         */
        Msg_BuyFixedShopCommodityRsp.prototype.error = null;

        /**
         * Msg_BuyFixedShopCommodityRsp commodityId.
         * @member {number} commodityId
         * @memberof proto.Msg_BuyFixedShopCommodityRsp
         * @instance
         */
        Msg_BuyFixedShopCommodityRsp.prototype.commodityId = 0;

        /**
         * Msg_BuyFixedShopCommodityRsp num.
         * @member {number} num
         * @memberof proto.Msg_BuyFixedShopCommodityRsp
         * @instance
         */
        Msg_BuyFixedShopCommodityRsp.prototype.num = 0;

        /**
         * Msg_BuyFixedShopCommodityRsp boughtCount.
         * @member {number} boughtCount
         * @memberof proto.Msg_BuyFixedShopCommodityRsp
         * @instance
         */
        Msg_BuyFixedShopCommodityRsp.prototype.boughtCount = 0;

        /**
         * Msg_BuyFixedShopCommodityRsp rewards.
         * @member {Array.<proto.IItem>} rewards
         * @memberof proto.Msg_BuyFixedShopCommodityRsp
         * @instance
         */
        Msg_BuyFixedShopCommodityRsp.prototype.rewards = $util.emptyArray;

        /**
         * Encodes the specified Msg_BuyFixedShopCommodityRsp message. Does not implicitly {@link proto.Msg_BuyFixedShopCommodityRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_BuyFixedShopCommodityRsp
         * @static
         * @param {proto.IMsg_BuyFixedShopCommodityRsp} m Msg_BuyFixedShopCommodityRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_BuyFixedShopCommodityRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.error != null && Object.hasOwnProperty.call(m, "error"))
                $root.proto.CommonError.encode(m.error, w.uint32(10).fork()).ldelim();
            if (m.commodityId != null && Object.hasOwnProperty.call(m, "commodityId"))
                w.uint32(16).int32(m.commodityId);
            if (m.num != null && Object.hasOwnProperty.call(m, "num"))
                w.uint32(24).int32(m.num);
            if (m.boughtCount != null && Object.hasOwnProperty.call(m, "boughtCount"))
                w.uint32(32).int32(m.boughtCount);
            if (m.rewards != null && m.rewards.length) {
                for (var i = 0; i < m.rewards.length; ++i)
                    $root.proto.Item.encode(m.rewards[i], w.uint32(42).fork()).ldelim();
            }
            return w;
        };

        /**
         * Decodes a Msg_BuyFixedShopCommodityRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_BuyFixedShopCommodityRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_BuyFixedShopCommodityRsp} Msg_BuyFixedShopCommodityRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_BuyFixedShopCommodityRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_BuyFixedShopCommodityRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.error = $root.proto.CommonError.decode(r, r.uint32());
                    break;
                case 2:
                    m.commodityId = r.int32();
                    break;
                case 3:
                    m.num = r.int32();
                    break;
                case 4:
                    m.boughtCount = r.int32();
                    break;
                case 5:
                    if (!(m.rewards && m.rewards.length))
                        m.rewards = [];
                    m.rewards.push($root.proto.Item.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_BuyFixedShopCommodityRsp;
    })();

    proto.Msg_StartPayReq = (function() {

        /**
         * Properties of a Msg_StartPayReq.
         * @memberof proto
         * @interface IMsg_StartPayReq
         * @property {number|null} [rechargeId] Msg_StartPayReq rechargeId
         */

        /**
         * Constructs a new Msg_StartPayReq.
         * @memberof proto
         * @classdesc Represents a Msg_StartPayReq.
         * @implements IMsg_StartPayReq
         * @constructor
         * @param {proto.IMsg_StartPayReq=} [p] Properties to set
         */
        function Msg_StartPayReq(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_StartPayReq rechargeId.
         * @member {number} rechargeId
         * @memberof proto.Msg_StartPayReq
         * @instance
         */
        Msg_StartPayReq.prototype.rechargeId = 0;

        /**
         * Encodes the specified Msg_StartPayReq message. Does not implicitly {@link proto.Msg_StartPayReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_StartPayReq
         * @static
         * @param {proto.IMsg_StartPayReq} m Msg_StartPayReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_StartPayReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.rechargeId != null && Object.hasOwnProperty.call(m, "rechargeId"))
                w.uint32(8).int32(m.rechargeId);
            return w;
        };

        /**
         * Decodes a Msg_StartPayReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_StartPayReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_StartPayReq} Msg_StartPayReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_StartPayReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_StartPayReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.rechargeId = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_StartPayReq;
    })();

    proto.Msg_StartPayRsp = (function() {

        /**
         * Properties of a Msg_StartPayRsp.
         * @memberof proto
         * @interface IMsg_StartPayRsp
         * @property {proto.ICommonError|null} [error] Msg_StartPayRsp error
         * @property {number|null} [rechargeId] Msg_StartPayRsp rechargeId
         * @property {string|null} [orderId] Msg_StartPayRsp orderId
         * @property {string|null} [mobile37Sign] Msg_StartPayRsp mobile37Sign
         * @property {number|Long|null} [mobile37SignTime] Msg_StartPayRsp mobile37SignTime
         */

        /**
         * Constructs a new Msg_StartPayRsp.
         * @memberof proto
         * @classdesc Represents a Msg_StartPayRsp.
         * @implements IMsg_StartPayRsp
         * @constructor
         * @param {proto.IMsg_StartPayRsp=} [p] Properties to set
         */
        function Msg_StartPayRsp(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_StartPayRsp error.
         * @member {proto.ICommonError|null|undefined} error
         * @memberof proto.Msg_StartPayRsp
         * @instance
         */
        Msg_StartPayRsp.prototype.error = null;

        /**
         * Msg_StartPayRsp rechargeId.
         * @member {number} rechargeId
         * @memberof proto.Msg_StartPayRsp
         * @instance
         */
        Msg_StartPayRsp.prototype.rechargeId = 0;

        /**
         * Msg_StartPayRsp orderId.
         * @member {string} orderId
         * @memberof proto.Msg_StartPayRsp
         * @instance
         */
        Msg_StartPayRsp.prototype.orderId = "";

        /**
         * Msg_StartPayRsp mobile37Sign.
         * @member {string} mobile37Sign
         * @memberof proto.Msg_StartPayRsp
         * @instance
         */
        Msg_StartPayRsp.prototype.mobile37Sign = "";

        /**
         * Msg_StartPayRsp mobile37SignTime.
         * @member {number|Long} mobile37SignTime
         * @memberof proto.Msg_StartPayRsp
         * @instance
         */
        Msg_StartPayRsp.prototype.mobile37SignTime = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

        /**
         * Encodes the specified Msg_StartPayRsp message. Does not implicitly {@link proto.Msg_StartPayRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_StartPayRsp
         * @static
         * @param {proto.IMsg_StartPayRsp} m Msg_StartPayRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_StartPayRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.error != null && Object.hasOwnProperty.call(m, "error"))
                $root.proto.CommonError.encode(m.error, w.uint32(10).fork()).ldelim();
            if (m.rechargeId != null && Object.hasOwnProperty.call(m, "rechargeId"))
                w.uint32(16).int32(m.rechargeId);
            if (m.orderId != null && Object.hasOwnProperty.call(m, "orderId"))
                w.uint32(26).string(m.orderId);
            if (m.mobile37Sign != null && Object.hasOwnProperty.call(m, "mobile37Sign"))
                w.uint32(34).string(m.mobile37Sign);
            if (m.mobile37SignTime != null && Object.hasOwnProperty.call(m, "mobile37SignTime"))
                w.uint32(40).int64(m.mobile37SignTime);
            return w;
        };

        /**
         * Decodes a Msg_StartPayRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_StartPayRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_StartPayRsp} Msg_StartPayRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_StartPayRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_StartPayRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.error = $root.proto.CommonError.decode(r, r.uint32());
                    break;
                case 2:
                    m.rechargeId = r.int32();
                    break;
                case 3:
                    m.orderId = r.string();
                    break;
                case 4:
                    m.mobile37Sign = r.string();
                    break;
                case 5:
                    m.mobile37SignTime = r.int64();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_StartPayRsp;
    })();

    proto.Msg_EndPayReq = (function() {

        /**
         * Properties of a Msg_EndPayReq.
         * @memberof proto
         * @interface IMsg_EndPayReq
         * @property {string|null} [orderId] Msg_EndPayReq orderId
         */

        /**
         * Constructs a new Msg_EndPayReq.
         * @memberof proto
         * @classdesc Represents a Msg_EndPayReq.
         * @implements IMsg_EndPayReq
         * @constructor
         * @param {proto.IMsg_EndPayReq=} [p] Properties to set
         */
        function Msg_EndPayReq(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_EndPayReq orderId.
         * @member {string} orderId
         * @memberof proto.Msg_EndPayReq
         * @instance
         */
        Msg_EndPayReq.prototype.orderId = "";

        /**
         * Encodes the specified Msg_EndPayReq message. Does not implicitly {@link proto.Msg_EndPayReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_EndPayReq
         * @static
         * @param {proto.IMsg_EndPayReq} m Msg_EndPayReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_EndPayReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.orderId != null && Object.hasOwnProperty.call(m, "orderId"))
                w.uint32(10).string(m.orderId);
            return w;
        };

        /**
         * Decodes a Msg_EndPayReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_EndPayReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_EndPayReq} Msg_EndPayReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_EndPayReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_EndPayReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.orderId = r.string();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_EndPayReq;
    })();

    proto.Msg_EndPayRsp = (function() {

        /**
         * Properties of a Msg_EndPayRsp.
         * @memberof proto
         * @interface IMsg_EndPayRsp
         * @property {proto.ICommonError|null} [error] Msg_EndPayRsp error
         * @property {string|null} [orderId] Msg_EndPayRsp orderId
         */

        /**
         * Constructs a new Msg_EndPayRsp.
         * @memberof proto
         * @classdesc Represents a Msg_EndPayRsp.
         * @implements IMsg_EndPayRsp
         * @constructor
         * @param {proto.IMsg_EndPayRsp=} [p] Properties to set
         */
        function Msg_EndPayRsp(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_EndPayRsp error.
         * @member {proto.ICommonError|null|undefined} error
         * @memberof proto.Msg_EndPayRsp
         * @instance
         */
        Msg_EndPayRsp.prototype.error = null;

        /**
         * Msg_EndPayRsp orderId.
         * @member {string} orderId
         * @memberof proto.Msg_EndPayRsp
         * @instance
         */
        Msg_EndPayRsp.prototype.orderId = "";

        /**
         * Encodes the specified Msg_EndPayRsp message. Does not implicitly {@link proto.Msg_EndPayRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_EndPayRsp
         * @static
         * @param {proto.IMsg_EndPayRsp} m Msg_EndPayRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_EndPayRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.error != null && Object.hasOwnProperty.call(m, "error"))
                $root.proto.CommonError.encode(m.error, w.uint32(10).fork()).ldelim();
            if (m.orderId != null && Object.hasOwnProperty.call(m, "orderId"))
                w.uint32(18).string(m.orderId);
            return w;
        };

        /**
         * Decodes a Msg_EndPayRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_EndPayRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_EndPayRsp} Msg_EndPayRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_EndPayRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_EndPayRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.error = $root.proto.CommonError.decode(r, r.uint32());
                    break;
                case 2:
                    m.orderId = r.string();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_EndPayRsp;
    })();

    proto.Msg_PayByVoucherReq = (function() {

        /**
         * Properties of a Msg_PayByVoucherReq.
         * @memberof proto
         * @interface IMsg_PayByVoucherReq
         * @property {number|null} [rechargeId] Msg_PayByVoucherReq rechargeId
         */

        /**
         * Constructs a new Msg_PayByVoucherReq.
         * @memberof proto
         * @classdesc Represents a Msg_PayByVoucherReq.
         * @implements IMsg_PayByVoucherReq
         * @constructor
         * @param {proto.IMsg_PayByVoucherReq=} [p] Properties to set
         */
        function Msg_PayByVoucherReq(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_PayByVoucherReq rechargeId.
         * @member {number} rechargeId
         * @memberof proto.Msg_PayByVoucherReq
         * @instance
         */
        Msg_PayByVoucherReq.prototype.rechargeId = 0;

        /**
         * Encodes the specified Msg_PayByVoucherReq message. Does not implicitly {@link proto.Msg_PayByVoucherReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_PayByVoucherReq
         * @static
         * @param {proto.IMsg_PayByVoucherReq} m Msg_PayByVoucherReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_PayByVoucherReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.rechargeId != null && Object.hasOwnProperty.call(m, "rechargeId"))
                w.uint32(8).int32(m.rechargeId);
            return w;
        };

        /**
         * Decodes a Msg_PayByVoucherReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_PayByVoucherReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_PayByVoucherReq} Msg_PayByVoucherReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_PayByVoucherReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_PayByVoucherReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.rechargeId = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_PayByVoucherReq;
    })();

    proto.Msg_PayByVoucherRsp = (function() {

        /**
         * Properties of a Msg_PayByVoucherRsp.
         * @memberof proto
         * @interface IMsg_PayByVoucherRsp
         * @property {proto.ICommonError|null} [error] Msg_PayByVoucherRsp error
         * @property {number|null} [rechargeId] Msg_PayByVoucherRsp rechargeId
         * @property {string|null} [orderId] Msg_PayByVoucherRsp orderId
         */

        /**
         * Constructs a new Msg_PayByVoucherRsp.
         * @memberof proto
         * @classdesc Represents a Msg_PayByVoucherRsp.
         * @implements IMsg_PayByVoucherRsp
         * @constructor
         * @param {proto.IMsg_PayByVoucherRsp=} [p] Properties to set
         */
        function Msg_PayByVoucherRsp(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_PayByVoucherRsp error.
         * @member {proto.ICommonError|null|undefined} error
         * @memberof proto.Msg_PayByVoucherRsp
         * @instance
         */
        Msg_PayByVoucherRsp.prototype.error = null;

        /**
         * Msg_PayByVoucherRsp rechargeId.
         * @member {number} rechargeId
         * @memberof proto.Msg_PayByVoucherRsp
         * @instance
         */
        Msg_PayByVoucherRsp.prototype.rechargeId = 0;

        /**
         * Msg_PayByVoucherRsp orderId.
         * @member {string} orderId
         * @memberof proto.Msg_PayByVoucherRsp
         * @instance
         */
        Msg_PayByVoucherRsp.prototype.orderId = "";

        /**
         * Encodes the specified Msg_PayByVoucherRsp message. Does not implicitly {@link proto.Msg_PayByVoucherRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_PayByVoucherRsp
         * @static
         * @param {proto.IMsg_PayByVoucherRsp} m Msg_PayByVoucherRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_PayByVoucherRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.error != null && Object.hasOwnProperty.call(m, "error"))
                $root.proto.CommonError.encode(m.error, w.uint32(10).fork()).ldelim();
            if (m.rechargeId != null && Object.hasOwnProperty.call(m, "rechargeId"))
                w.uint32(16).int32(m.rechargeId);
            if (m.orderId != null && Object.hasOwnProperty.call(m, "orderId"))
                w.uint32(26).string(m.orderId);
            return w;
        };

        /**
         * Decodes a Msg_PayByVoucherRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_PayByVoucherRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_PayByVoucherRsp} Msg_PayByVoucherRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_PayByVoucherRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_PayByVoucherRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.error = $root.proto.CommonError.decode(r, r.uint32());
                    break;
                case 2:
                    m.rechargeId = r.int32();
                    break;
                case 3:
                    m.orderId = r.string();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_PayByVoucherRsp;
    })();

    proto.Msg_GetPendingPayOrderIdReq = (function() {

        /**
         * Properties of a Msg_GetPendingPayOrderIdReq.
         * @memberof proto
         * @interface IMsg_GetPendingPayOrderIdReq
         */

        /**
         * Constructs a new Msg_GetPendingPayOrderIdReq.
         * @memberof proto
         * @classdesc Represents a Msg_GetPendingPayOrderIdReq.
         * @implements IMsg_GetPendingPayOrderIdReq
         * @constructor
         * @param {proto.IMsg_GetPendingPayOrderIdReq=} [p] Properties to set
         */
        function Msg_GetPendingPayOrderIdReq(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Encodes the specified Msg_GetPendingPayOrderIdReq message. Does not implicitly {@link proto.Msg_GetPendingPayOrderIdReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_GetPendingPayOrderIdReq
         * @static
         * @param {proto.IMsg_GetPendingPayOrderIdReq} m Msg_GetPendingPayOrderIdReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_GetPendingPayOrderIdReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };

        /**
         * Decodes a Msg_GetPendingPayOrderIdReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_GetPendingPayOrderIdReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_GetPendingPayOrderIdReq} Msg_GetPendingPayOrderIdReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_GetPendingPayOrderIdReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_GetPendingPayOrderIdReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_GetPendingPayOrderIdReq;
    })();

    proto.Msg_GetPendingPayOrderIdRsp = (function() {

        /**
         * Properties of a Msg_GetPendingPayOrderIdRsp.
         * @memberof proto
         * @interface IMsg_GetPendingPayOrderIdRsp
         * @property {string|null} [orderId] Msg_GetPendingPayOrderIdRsp orderId
         */

        /**
         * Constructs a new Msg_GetPendingPayOrderIdRsp.
         * @memberof proto
         * @classdesc Represents a Msg_GetPendingPayOrderIdRsp.
         * @implements IMsg_GetPendingPayOrderIdRsp
         * @constructor
         * @param {proto.IMsg_GetPendingPayOrderIdRsp=} [p] Properties to set
         */
        function Msg_GetPendingPayOrderIdRsp(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_GetPendingPayOrderIdRsp orderId.
         * @member {string} orderId
         * @memberof proto.Msg_GetPendingPayOrderIdRsp
         * @instance
         */
        Msg_GetPendingPayOrderIdRsp.prototype.orderId = "";

        /**
         * Encodes the specified Msg_GetPendingPayOrderIdRsp message. Does not implicitly {@link proto.Msg_GetPendingPayOrderIdRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_GetPendingPayOrderIdRsp
         * @static
         * @param {proto.IMsg_GetPendingPayOrderIdRsp} m Msg_GetPendingPayOrderIdRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_GetPendingPayOrderIdRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.orderId != null && Object.hasOwnProperty.call(m, "orderId"))
                w.uint32(10).string(m.orderId);
            return w;
        };

        /**
         * Decodes a Msg_GetPendingPayOrderIdRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_GetPendingPayOrderIdRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_GetPendingPayOrderIdRsp} Msg_GetPendingPayOrderIdRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_GetPendingPayOrderIdRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_GetPendingPayOrderIdRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.orderId = r.string();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_GetPendingPayOrderIdRsp;
    })();

    proto.Msg_ClearPendingPayOrderIdReq = (function() {

        /**
         * Properties of a Msg_ClearPendingPayOrderIdReq.
         * @memberof proto
         * @interface IMsg_ClearPendingPayOrderIdReq
         */

        /**
         * Constructs a new Msg_ClearPendingPayOrderIdReq.
         * @memberof proto
         * @classdesc Represents a Msg_ClearPendingPayOrderIdReq.
         * @implements IMsg_ClearPendingPayOrderIdReq
         * @constructor
         * @param {proto.IMsg_ClearPendingPayOrderIdReq=} [p] Properties to set
         */
        function Msg_ClearPendingPayOrderIdReq(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Encodes the specified Msg_ClearPendingPayOrderIdReq message. Does not implicitly {@link proto.Msg_ClearPendingPayOrderIdReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_ClearPendingPayOrderIdReq
         * @static
         * @param {proto.IMsg_ClearPendingPayOrderIdReq} m Msg_ClearPendingPayOrderIdReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_ClearPendingPayOrderIdReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };

        /**
         * Decodes a Msg_ClearPendingPayOrderIdReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_ClearPendingPayOrderIdReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_ClearPendingPayOrderIdReq} Msg_ClearPendingPayOrderIdReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_ClearPendingPayOrderIdReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_ClearPendingPayOrderIdReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_ClearPendingPayOrderIdReq;
    })();

    proto.Msg_ClearPendingPayOrderIdRsp = (function() {

        /**
         * Properties of a Msg_ClearPendingPayOrderIdRsp.
         * @memberof proto
         * @interface IMsg_ClearPendingPayOrderIdRsp
         * @property {proto.ICommonError|null} [error] Msg_ClearPendingPayOrderIdRsp error
         */

        /**
         * Constructs a new Msg_ClearPendingPayOrderIdRsp.
         * @memberof proto
         * @classdesc Represents a Msg_ClearPendingPayOrderIdRsp.
         * @implements IMsg_ClearPendingPayOrderIdRsp
         * @constructor
         * @param {proto.IMsg_ClearPendingPayOrderIdRsp=} [p] Properties to set
         */
        function Msg_ClearPendingPayOrderIdRsp(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_ClearPendingPayOrderIdRsp error.
         * @member {proto.ICommonError|null|undefined} error
         * @memberof proto.Msg_ClearPendingPayOrderIdRsp
         * @instance
         */
        Msg_ClearPendingPayOrderIdRsp.prototype.error = null;

        /**
         * Encodes the specified Msg_ClearPendingPayOrderIdRsp message. Does not implicitly {@link proto.Msg_ClearPendingPayOrderIdRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_ClearPendingPayOrderIdRsp
         * @static
         * @param {proto.IMsg_ClearPendingPayOrderIdRsp} m Msg_ClearPendingPayOrderIdRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_ClearPendingPayOrderIdRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.error != null && Object.hasOwnProperty.call(m, "error"))
                $root.proto.CommonError.encode(m.error, w.uint32(10).fork()).ldelim();
            return w;
        };

        /**
         * Decodes a Msg_ClearPendingPayOrderIdRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_ClearPendingPayOrderIdRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_ClearPendingPayOrderIdRsp} Msg_ClearPendingPayOrderIdRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_ClearPendingPayOrderIdRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_ClearPendingPayOrderIdRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.error = $root.proto.CommonError.decode(r, r.uint32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_ClearPendingPayOrderIdRsp;
    })();

    proto.Msg_DeliverGoodsPush = (function() {

        /**
         * Properties of a Msg_DeliverGoodsPush.
         * @memberof proto
         * @interface IMsg_DeliverGoodsPush
         * @property {string|null} [orderId] Msg_DeliverGoodsPush orderId
         * @property {number|null} [rechargeId] Msg_DeliverGoodsPush rechargeId
         * @property {Array.<proto.IItem>|null} [rewards] Msg_DeliverGoodsPush rewards
         */

        /**
         * Constructs a new Msg_DeliverGoodsPush.
         * @memberof proto
         * @classdesc Represents a Msg_DeliverGoodsPush.
         * @implements IMsg_DeliverGoodsPush
         * @constructor
         * @param {proto.IMsg_DeliverGoodsPush=} [p] Properties to set
         */
        function Msg_DeliverGoodsPush(p) {
            this.rewards = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_DeliverGoodsPush orderId.
         * @member {string} orderId
         * @memberof proto.Msg_DeliverGoodsPush
         * @instance
         */
        Msg_DeliverGoodsPush.prototype.orderId = "";

        /**
         * Msg_DeliverGoodsPush rechargeId.
         * @member {number} rechargeId
         * @memberof proto.Msg_DeliverGoodsPush
         * @instance
         */
        Msg_DeliverGoodsPush.prototype.rechargeId = 0;

        /**
         * Msg_DeliverGoodsPush rewards.
         * @member {Array.<proto.IItem>} rewards
         * @memberof proto.Msg_DeliverGoodsPush
         * @instance
         */
        Msg_DeliverGoodsPush.prototype.rewards = $util.emptyArray;

        /**
         * Encodes the specified Msg_DeliverGoodsPush message. Does not implicitly {@link proto.Msg_DeliverGoodsPush.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_DeliverGoodsPush
         * @static
         * @param {proto.IMsg_DeliverGoodsPush} m Msg_DeliverGoodsPush message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_DeliverGoodsPush.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.orderId != null && Object.hasOwnProperty.call(m, "orderId"))
                w.uint32(10).string(m.orderId);
            if (m.rechargeId != null && Object.hasOwnProperty.call(m, "rechargeId"))
                w.uint32(16).int32(m.rechargeId);
            if (m.rewards != null && m.rewards.length) {
                for (var i = 0; i < m.rewards.length; ++i)
                    $root.proto.Item.encode(m.rewards[i], w.uint32(26).fork()).ldelim();
            }
            return w;
        };

        /**
         * Decodes a Msg_DeliverGoodsPush message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_DeliverGoodsPush
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_DeliverGoodsPush} Msg_DeliverGoodsPush
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_DeliverGoodsPush.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_DeliverGoodsPush();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.orderId = r.string();
                    break;
                case 2:
                    m.rechargeId = r.int32();
                    break;
                case 3:
                    if (!(m.rewards && m.rewards.length))
                        m.rewards = [];
                    m.rewards.push($root.proto.Item.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_DeliverGoodsPush;
    })();

    proto.Msg_GetPayInfoReq = (function() {

        /**
         * Properties of a Msg_GetPayInfoReq.
         * @memberof proto
         * @interface IMsg_GetPayInfoReq
         */

        /**
         * Constructs a new Msg_GetPayInfoReq.
         * @memberof proto
         * @classdesc Represents a Msg_GetPayInfoReq.
         * @implements IMsg_GetPayInfoReq
         * @constructor
         * @param {proto.IMsg_GetPayInfoReq=} [p] Properties to set
         */
        function Msg_GetPayInfoReq(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Encodes the specified Msg_GetPayInfoReq message. Does not implicitly {@link proto.Msg_GetPayInfoReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_GetPayInfoReq
         * @static
         * @param {proto.IMsg_GetPayInfoReq} m Msg_GetPayInfoReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_GetPayInfoReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };

        /**
         * Decodes a Msg_GetPayInfoReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_GetPayInfoReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_GetPayInfoReq} Msg_GetPayInfoReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_GetPayInfoReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_GetPayInfoReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_GetPayInfoReq;
    })();

    proto.Msg_GetPayInfoRsp = (function() {

        /**
         * Properties of a Msg_GetPayInfoRsp.
         * @memberof proto
         * @interface IMsg_GetPayInfoRsp
         * @property {string|null} [pendingOrderId] Msg_GetPayInfoRsp pendingOrderId
         * @property {proto.Msg_GetPayInfoRsp.IBuyDiamondsInfo|null} [buyDiamondsInfo] Msg_GetPayInfoRsp buyDiamondsInfo
         * @property {proto.Msg_GetPayInfoRsp.IFirstRechargeInfo|null} [firstRechargeInfo] Msg_GetPayInfoRsp firstRechargeInfo
         * @property {proto.Msg_GetPayInfoRsp.INewPlayerDailyGiftInfo|null} [newPlayerDailyGiftInfo] Msg_GetPayInfoRsp newPlayerDailyGiftInfo
         */

        /**
         * Constructs a new Msg_GetPayInfoRsp.
         * @memberof proto
         * @classdesc Represents a Msg_GetPayInfoRsp.
         * @implements IMsg_GetPayInfoRsp
         * @constructor
         * @param {proto.IMsg_GetPayInfoRsp=} [p] Properties to set
         */
        function Msg_GetPayInfoRsp(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_GetPayInfoRsp pendingOrderId.
         * @member {string} pendingOrderId
         * @memberof proto.Msg_GetPayInfoRsp
         * @instance
         */
        Msg_GetPayInfoRsp.prototype.pendingOrderId = "";

        /**
         * Msg_GetPayInfoRsp buyDiamondsInfo.
         * @member {proto.Msg_GetPayInfoRsp.IBuyDiamondsInfo|null|undefined} buyDiamondsInfo
         * @memberof proto.Msg_GetPayInfoRsp
         * @instance
         */
        Msg_GetPayInfoRsp.prototype.buyDiamondsInfo = null;

        /**
         * Msg_GetPayInfoRsp firstRechargeInfo.
         * @member {proto.Msg_GetPayInfoRsp.IFirstRechargeInfo|null|undefined} firstRechargeInfo
         * @memberof proto.Msg_GetPayInfoRsp
         * @instance
         */
        Msg_GetPayInfoRsp.prototype.firstRechargeInfo = null;

        /**
         * Msg_GetPayInfoRsp newPlayerDailyGiftInfo.
         * @member {proto.Msg_GetPayInfoRsp.INewPlayerDailyGiftInfo|null|undefined} newPlayerDailyGiftInfo
         * @memberof proto.Msg_GetPayInfoRsp
         * @instance
         */
        Msg_GetPayInfoRsp.prototype.newPlayerDailyGiftInfo = null;

        /**
         * Encodes the specified Msg_GetPayInfoRsp message. Does not implicitly {@link proto.Msg_GetPayInfoRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_GetPayInfoRsp
         * @static
         * @param {proto.IMsg_GetPayInfoRsp} m Msg_GetPayInfoRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_GetPayInfoRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.pendingOrderId != null && Object.hasOwnProperty.call(m, "pendingOrderId"))
                w.uint32(10).string(m.pendingOrderId);
            if (m.buyDiamondsInfo != null && Object.hasOwnProperty.call(m, "buyDiamondsInfo"))
                $root.proto.Msg_GetPayInfoRsp.BuyDiamondsInfo.encode(m.buyDiamondsInfo, w.uint32(18).fork()).ldelim();
            if (m.firstRechargeInfo != null && Object.hasOwnProperty.call(m, "firstRechargeInfo"))
                $root.proto.Msg_GetPayInfoRsp.FirstRechargeInfo.encode(m.firstRechargeInfo, w.uint32(26).fork()).ldelim();
            if (m.newPlayerDailyGiftInfo != null && Object.hasOwnProperty.call(m, "newPlayerDailyGiftInfo"))
                $root.proto.Msg_GetPayInfoRsp.NewPlayerDailyGiftInfo.encode(m.newPlayerDailyGiftInfo, w.uint32(34).fork()).ldelim();
            return w;
        };

        /**
         * Decodes a Msg_GetPayInfoRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_GetPayInfoRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_GetPayInfoRsp} Msg_GetPayInfoRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_GetPayInfoRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_GetPayInfoRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.pendingOrderId = r.string();
                    break;
                case 2:
                    m.buyDiamondsInfo = $root.proto.Msg_GetPayInfoRsp.BuyDiamondsInfo.decode(r, r.uint32());
                    break;
                case 3:
                    m.firstRechargeInfo = $root.proto.Msg_GetPayInfoRsp.FirstRechargeInfo.decode(r, r.uint32());
                    break;
                case 4:
                    m.newPlayerDailyGiftInfo = $root.proto.Msg_GetPayInfoRsp.NewPlayerDailyGiftInfo.decode(r, r.uint32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        Msg_GetPayInfoRsp.BuyDiamondsInfo = (function() {

            /**
             * Properties of a BuyDiamondsInfo.
             * @memberof proto.Msg_GetPayInfoRsp
             * @interface IBuyDiamondsInfo
             * @property {Array.<number>|null} [boughtGoodsIds] BuyDiamondsInfo boughtGoodsIds
             */

            /**
             * Constructs a new BuyDiamondsInfo.
             * @memberof proto.Msg_GetPayInfoRsp
             * @classdesc Represents a BuyDiamondsInfo.
             * @implements IBuyDiamondsInfo
             * @constructor
             * @param {proto.Msg_GetPayInfoRsp.IBuyDiamondsInfo=} [p] Properties to set
             */
            function BuyDiamondsInfo(p) {
                this.boughtGoodsIds = [];
                if (p)
                    for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                        if (p[ks[i]] != null)
                            this[ks[i]] = p[ks[i]];
            }

            /**
             * BuyDiamondsInfo boughtGoodsIds.
             * @member {Array.<number>} boughtGoodsIds
             * @memberof proto.Msg_GetPayInfoRsp.BuyDiamondsInfo
             * @instance
             */
            BuyDiamondsInfo.prototype.boughtGoodsIds = $util.emptyArray;

            /**
             * Encodes the specified BuyDiamondsInfo message. Does not implicitly {@link proto.Msg_GetPayInfoRsp.BuyDiamondsInfo.verify|verify} messages.
             * @function encode
             * @memberof proto.Msg_GetPayInfoRsp.BuyDiamondsInfo
             * @static
             * @param {proto.Msg_GetPayInfoRsp.IBuyDiamondsInfo} m BuyDiamondsInfo message or plain object to encode
             * @param {$protobuf.Writer} [w] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            BuyDiamondsInfo.encode = function encode(m, w) {
                if (!w)
                    w = $Writer.create();
                if (m.boughtGoodsIds != null && m.boughtGoodsIds.length) {
                    w.uint32(10).fork();
                    for (var i = 0; i < m.boughtGoodsIds.length; ++i)
                        w.int32(m.boughtGoodsIds[i]);
                    w.ldelim();
                }
                return w;
            };

            /**
             * Decodes a BuyDiamondsInfo message from the specified reader or buffer.
             * @function decode
             * @memberof proto.Msg_GetPayInfoRsp.BuyDiamondsInfo
             * @static
             * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
             * @param {number} [l] Message length if known beforehand
             * @returns {proto.Msg_GetPayInfoRsp.BuyDiamondsInfo} BuyDiamondsInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            BuyDiamondsInfo.decode = function decode(r, l) {
                if (!(r instanceof $Reader))
                    r = $Reader.create(r);
                var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_GetPayInfoRsp.BuyDiamondsInfo();
                while (r.pos < c) {
                    var t = r.uint32();
                    switch (t >>> 3) {
                    case 1:
                        if (!(m.boughtGoodsIds && m.boughtGoodsIds.length))
                            m.boughtGoodsIds = [];
                        if ((t & 7) === 2) {
                            var c2 = r.uint32() + r.pos;
                            while (r.pos < c2)
                                m.boughtGoodsIds.push(r.int32());
                        } else
                            m.boughtGoodsIds.push(r.int32());
                        break;
                    default:
                        r.skipType(t & 7);
                        break;
                    }
                }
                return m;
            };

            return BuyDiamondsInfo;
        })();

        Msg_GetPayInfoRsp.FirstRechargeInfo = (function() {

            /**
             * Properties of a FirstRechargeInfo.
             * @memberof proto.Msg_GetPayInfoRsp
             * @interface IFirstRechargeInfo
             * @property {Array.<number>|null} [boughtGoodsIds] FirstRechargeInfo boughtGoodsIds
             */

            /**
             * Constructs a new FirstRechargeInfo.
             * @memberof proto.Msg_GetPayInfoRsp
             * @classdesc Represents a FirstRechargeInfo.
             * @implements IFirstRechargeInfo
             * @constructor
             * @param {proto.Msg_GetPayInfoRsp.IFirstRechargeInfo=} [p] Properties to set
             */
            function FirstRechargeInfo(p) {
                this.boughtGoodsIds = [];
                if (p)
                    for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                        if (p[ks[i]] != null)
                            this[ks[i]] = p[ks[i]];
            }

            /**
             * FirstRechargeInfo boughtGoodsIds.
             * @member {Array.<number>} boughtGoodsIds
             * @memberof proto.Msg_GetPayInfoRsp.FirstRechargeInfo
             * @instance
             */
            FirstRechargeInfo.prototype.boughtGoodsIds = $util.emptyArray;

            /**
             * Encodes the specified FirstRechargeInfo message. Does not implicitly {@link proto.Msg_GetPayInfoRsp.FirstRechargeInfo.verify|verify} messages.
             * @function encode
             * @memberof proto.Msg_GetPayInfoRsp.FirstRechargeInfo
             * @static
             * @param {proto.Msg_GetPayInfoRsp.IFirstRechargeInfo} m FirstRechargeInfo message or plain object to encode
             * @param {$protobuf.Writer} [w] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            FirstRechargeInfo.encode = function encode(m, w) {
                if (!w)
                    w = $Writer.create();
                if (m.boughtGoodsIds != null && m.boughtGoodsIds.length) {
                    w.uint32(10).fork();
                    for (var i = 0; i < m.boughtGoodsIds.length; ++i)
                        w.int32(m.boughtGoodsIds[i]);
                    w.ldelim();
                }
                return w;
            };

            /**
             * Decodes a FirstRechargeInfo message from the specified reader or buffer.
             * @function decode
             * @memberof proto.Msg_GetPayInfoRsp.FirstRechargeInfo
             * @static
             * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
             * @param {number} [l] Message length if known beforehand
             * @returns {proto.Msg_GetPayInfoRsp.FirstRechargeInfo} FirstRechargeInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            FirstRechargeInfo.decode = function decode(r, l) {
                if (!(r instanceof $Reader))
                    r = $Reader.create(r);
                var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_GetPayInfoRsp.FirstRechargeInfo();
                while (r.pos < c) {
                    var t = r.uint32();
                    switch (t >>> 3) {
                    case 1:
                        if (!(m.boughtGoodsIds && m.boughtGoodsIds.length))
                            m.boughtGoodsIds = [];
                        if ((t & 7) === 2) {
                            var c2 = r.uint32() + r.pos;
                            while (r.pos < c2)
                                m.boughtGoodsIds.push(r.int32());
                        } else
                            m.boughtGoodsIds.push(r.int32());
                        break;
                    default:
                        r.skipType(t & 7);
                        break;
                    }
                }
                return m;
            };

            return FirstRechargeInfo;
        })();

        Msg_GetPayInfoRsp.NewPlayerDailyGiftInfo = (function() {

            /**
             * Properties of a NewPlayerDailyGiftInfo.
             * @memberof proto.Msg_GetPayInfoRsp
             * @interface INewPlayerDailyGiftInfo
             * @property {Array.<number>|null} [boughtGoodsIds] NewPlayerDailyGiftInfo boughtGoodsIds
             */

            /**
             * Constructs a new NewPlayerDailyGiftInfo.
             * @memberof proto.Msg_GetPayInfoRsp
             * @classdesc Represents a NewPlayerDailyGiftInfo.
             * @implements INewPlayerDailyGiftInfo
             * @constructor
             * @param {proto.Msg_GetPayInfoRsp.INewPlayerDailyGiftInfo=} [p] Properties to set
             */
            function NewPlayerDailyGiftInfo(p) {
                this.boughtGoodsIds = [];
                if (p)
                    for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                        if (p[ks[i]] != null)
                            this[ks[i]] = p[ks[i]];
            }

            /**
             * NewPlayerDailyGiftInfo boughtGoodsIds.
             * @member {Array.<number>} boughtGoodsIds
             * @memberof proto.Msg_GetPayInfoRsp.NewPlayerDailyGiftInfo
             * @instance
             */
            NewPlayerDailyGiftInfo.prototype.boughtGoodsIds = $util.emptyArray;

            /**
             * Encodes the specified NewPlayerDailyGiftInfo message. Does not implicitly {@link proto.Msg_GetPayInfoRsp.NewPlayerDailyGiftInfo.verify|verify} messages.
             * @function encode
             * @memberof proto.Msg_GetPayInfoRsp.NewPlayerDailyGiftInfo
             * @static
             * @param {proto.Msg_GetPayInfoRsp.INewPlayerDailyGiftInfo} m NewPlayerDailyGiftInfo message or plain object to encode
             * @param {$protobuf.Writer} [w] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            NewPlayerDailyGiftInfo.encode = function encode(m, w) {
                if (!w)
                    w = $Writer.create();
                if (m.boughtGoodsIds != null && m.boughtGoodsIds.length) {
                    w.uint32(10).fork();
                    for (var i = 0; i < m.boughtGoodsIds.length; ++i)
                        w.int32(m.boughtGoodsIds[i]);
                    w.ldelim();
                }
                return w;
            };

            /**
             * Decodes a NewPlayerDailyGiftInfo message from the specified reader or buffer.
             * @function decode
             * @memberof proto.Msg_GetPayInfoRsp.NewPlayerDailyGiftInfo
             * @static
             * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
             * @param {number} [l] Message length if known beforehand
             * @returns {proto.Msg_GetPayInfoRsp.NewPlayerDailyGiftInfo} NewPlayerDailyGiftInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            NewPlayerDailyGiftInfo.decode = function decode(r, l) {
                if (!(r instanceof $Reader))
                    r = $Reader.create(r);
                var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_GetPayInfoRsp.NewPlayerDailyGiftInfo();
                while (r.pos < c) {
                    var t = r.uint32();
                    switch (t >>> 3) {
                    case 1:
                        if (!(m.boughtGoodsIds && m.boughtGoodsIds.length))
                            m.boughtGoodsIds = [];
                        if ((t & 7) === 2) {
                            var c2 = r.uint32() + r.pos;
                            while (r.pos < c2)
                                m.boughtGoodsIds.push(r.int32());
                        } else
                            m.boughtGoodsIds.push(r.int32());
                        break;
                    default:
                        r.skipType(t & 7);
                        break;
                    }
                }
                return m;
            };

            return NewPlayerDailyGiftInfo;
        })();

        return Msg_GetPayInfoRsp;
    })();

    proto.Msg_HeroCollectionPush = (function() {

        /**
         * Properties of a Msg_HeroCollectionPush.
         * @memberof proto
         * @interface IMsg_HeroCollectionPush
         * @property {number|Long|null} [closeTime] Msg_HeroCollectionPush closeTime
         * @property {Array.<number>|null} [activatedList] Msg_HeroCollectionPush activatedList
         * @property {Array.<number>|null} [rewardList] Msg_HeroCollectionPush rewardList
         * @property {Array.<proto.Msg_HeroCollectionPush.ICollectionData>|null} [collectionData] Msg_HeroCollectionPush collectionData
         */

        /**
         * Constructs a new Msg_HeroCollectionPush.
         * @memberof proto
         * @classdesc Represents a Msg_HeroCollectionPush.
         * @implements IMsg_HeroCollectionPush
         * @constructor
         * @param {proto.IMsg_HeroCollectionPush=} [p] Properties to set
         */
        function Msg_HeroCollectionPush(p) {
            this.activatedList = [];
            this.rewardList = [];
            this.collectionData = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_HeroCollectionPush closeTime.
         * @member {number|Long} closeTime
         * @memberof proto.Msg_HeroCollectionPush
         * @instance
         */
        Msg_HeroCollectionPush.prototype.closeTime = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

        /**
         * Msg_HeroCollectionPush activatedList.
         * @member {Array.<number>} activatedList
         * @memberof proto.Msg_HeroCollectionPush
         * @instance
         */
        Msg_HeroCollectionPush.prototype.activatedList = $util.emptyArray;

        /**
         * Msg_HeroCollectionPush rewardList.
         * @member {Array.<number>} rewardList
         * @memberof proto.Msg_HeroCollectionPush
         * @instance
         */
        Msg_HeroCollectionPush.prototype.rewardList = $util.emptyArray;

        /**
         * Msg_HeroCollectionPush collectionData.
         * @member {Array.<proto.Msg_HeroCollectionPush.ICollectionData>} collectionData
         * @memberof proto.Msg_HeroCollectionPush
         * @instance
         */
        Msg_HeroCollectionPush.prototype.collectionData = $util.emptyArray;

        /**
         * Encodes the specified Msg_HeroCollectionPush message. Does not implicitly {@link proto.Msg_HeroCollectionPush.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_HeroCollectionPush
         * @static
         * @param {proto.IMsg_HeroCollectionPush} m Msg_HeroCollectionPush message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_HeroCollectionPush.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.closeTime != null && Object.hasOwnProperty.call(m, "closeTime"))
                w.uint32(8).int64(m.closeTime);
            if (m.activatedList != null && m.activatedList.length) {
                w.uint32(18).fork();
                for (var i = 0; i < m.activatedList.length; ++i)
                    w.int32(m.activatedList[i]);
                w.ldelim();
            }
            if (m.rewardList != null && m.rewardList.length) {
                w.uint32(26).fork();
                for (var i = 0; i < m.rewardList.length; ++i)
                    w.int32(m.rewardList[i]);
                w.ldelim();
            }
            if (m.collectionData != null && m.collectionData.length) {
                for (var i = 0; i < m.collectionData.length; ++i)
                    $root.proto.Msg_HeroCollectionPush.CollectionData.encode(m.collectionData[i], w.uint32(34).fork()).ldelim();
            }
            return w;
        };

        /**
         * Decodes a Msg_HeroCollectionPush message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_HeroCollectionPush
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_HeroCollectionPush} Msg_HeroCollectionPush
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_HeroCollectionPush.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_HeroCollectionPush();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.closeTime = r.int64();
                    break;
                case 2:
                    if (!(m.activatedList && m.activatedList.length))
                        m.activatedList = [];
                    if ((t & 7) === 2) {
                        var c2 = r.uint32() + r.pos;
                        while (r.pos < c2)
                            m.activatedList.push(r.int32());
                    } else
                        m.activatedList.push(r.int32());
                    break;
                case 3:
                    if (!(m.rewardList && m.rewardList.length))
                        m.rewardList = [];
                    if ((t & 7) === 2) {
                        var c2 = r.uint32() + r.pos;
                        while (r.pos < c2)
                            m.rewardList.push(r.int32());
                    } else
                        m.rewardList.push(r.int32());
                    break;
                case 4:
                    if (!(m.collectionData && m.collectionData.length))
                        m.collectionData = [];
                    m.collectionData.push($root.proto.Msg_HeroCollectionPush.CollectionData.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        Msg_HeroCollectionPush.CollectionData = (function() {

            /**
             * Properties of a CollectionData.
             * @memberof proto.Msg_HeroCollectionPush
             * @interface ICollectionData
             * @property {number|null} [type] CollectionData type
             * @property {number|Long|null} [sum] CollectionData sum
             */

            /**
             * Constructs a new CollectionData.
             * @memberof proto.Msg_HeroCollectionPush
             * @classdesc Represents a CollectionData.
             * @implements ICollectionData
             * @constructor
             * @param {proto.Msg_HeroCollectionPush.ICollectionData=} [p] Properties to set
             */
            function CollectionData(p) {
                if (p)
                    for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                        if (p[ks[i]] != null)
                            this[ks[i]] = p[ks[i]];
            }

            /**
             * CollectionData type.
             * @member {number} type
             * @memberof proto.Msg_HeroCollectionPush.CollectionData
             * @instance
             */
            CollectionData.prototype.type = 0;

            /**
             * CollectionData sum.
             * @member {number|Long} sum
             * @memberof proto.Msg_HeroCollectionPush.CollectionData
             * @instance
             */
            CollectionData.prototype.sum = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

            /**
             * Encodes the specified CollectionData message. Does not implicitly {@link proto.Msg_HeroCollectionPush.CollectionData.verify|verify} messages.
             * @function encode
             * @memberof proto.Msg_HeroCollectionPush.CollectionData
             * @static
             * @param {proto.Msg_HeroCollectionPush.ICollectionData} m CollectionData message or plain object to encode
             * @param {$protobuf.Writer} [w] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            CollectionData.encode = function encode(m, w) {
                if (!w)
                    w = $Writer.create();
                if (m.type != null && Object.hasOwnProperty.call(m, "type"))
                    w.uint32(8).int32(m.type);
                if (m.sum != null && Object.hasOwnProperty.call(m, "sum"))
                    w.uint32(16).int64(m.sum);
                return w;
            };

            /**
             * Decodes a CollectionData message from the specified reader or buffer.
             * @function decode
             * @memberof proto.Msg_HeroCollectionPush.CollectionData
             * @static
             * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
             * @param {number} [l] Message length if known beforehand
             * @returns {proto.Msg_HeroCollectionPush.CollectionData} CollectionData
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            CollectionData.decode = function decode(r, l) {
                if (!(r instanceof $Reader))
                    r = $Reader.create(r);
                var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_HeroCollectionPush.CollectionData();
                while (r.pos < c) {
                    var t = r.uint32();
                    switch (t >>> 3) {
                    case 1:
                        m.type = r.int32();
                        break;
                    case 2:
                        m.sum = r.int64();
                        break;
                    default:
                        r.skipType(t & 7);
                        break;
                    }
                }
                return m;
            };

            return CollectionData;
        })();

        return Msg_HeroCollectionPush;
    })();

    proto.Msg_GetHeroCollectionRewardReq = (function() {

        /**
         * Properties of a Msg_GetHeroCollectionRewardReq.
         * @memberof proto
         * @interface IMsg_GetHeroCollectionRewardReq
         * @property {number|null} [id] Msg_GetHeroCollectionRewardReq id
         */

        /**
         * Constructs a new Msg_GetHeroCollectionRewardReq.
         * @memberof proto
         * @classdesc Represents a Msg_GetHeroCollectionRewardReq.
         * @implements IMsg_GetHeroCollectionRewardReq
         * @constructor
         * @param {proto.IMsg_GetHeroCollectionRewardReq=} [p] Properties to set
         */
        function Msg_GetHeroCollectionRewardReq(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_GetHeroCollectionRewardReq id.
         * @member {number} id
         * @memberof proto.Msg_GetHeroCollectionRewardReq
         * @instance
         */
        Msg_GetHeroCollectionRewardReq.prototype.id = 0;

        /**
         * Encodes the specified Msg_GetHeroCollectionRewardReq message. Does not implicitly {@link proto.Msg_GetHeroCollectionRewardReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_GetHeroCollectionRewardReq
         * @static
         * @param {proto.IMsg_GetHeroCollectionRewardReq} m Msg_GetHeroCollectionRewardReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_GetHeroCollectionRewardReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.id != null && Object.hasOwnProperty.call(m, "id"))
                w.uint32(8).int32(m.id);
            return w;
        };

        /**
         * Decodes a Msg_GetHeroCollectionRewardReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_GetHeroCollectionRewardReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_GetHeroCollectionRewardReq} Msg_GetHeroCollectionRewardReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_GetHeroCollectionRewardReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_GetHeroCollectionRewardReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.id = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_GetHeroCollectionRewardReq;
    })();

    proto.Msg_GetHeroCollectionRewardRsp = (function() {

        /**
         * Properties of a Msg_GetHeroCollectionRewardRsp.
         * @memberof proto
         * @interface IMsg_GetHeroCollectionRewardRsp
         * @property {proto.ICommonError|null} [error] Msg_GetHeroCollectionRewardRsp error
         * @property {number|null} [id] Msg_GetHeroCollectionRewardRsp id
         * @property {Array.<proto.IItem>|null} [rewards] Msg_GetHeroCollectionRewardRsp rewards
         */

        /**
         * Constructs a new Msg_GetHeroCollectionRewardRsp.
         * @memberof proto
         * @classdesc Represents a Msg_GetHeroCollectionRewardRsp.
         * @implements IMsg_GetHeroCollectionRewardRsp
         * @constructor
         * @param {proto.IMsg_GetHeroCollectionRewardRsp=} [p] Properties to set
         */
        function Msg_GetHeroCollectionRewardRsp(p) {
            this.rewards = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_GetHeroCollectionRewardRsp error.
         * @member {proto.ICommonError|null|undefined} error
         * @memberof proto.Msg_GetHeroCollectionRewardRsp
         * @instance
         */
        Msg_GetHeroCollectionRewardRsp.prototype.error = null;

        /**
         * Msg_GetHeroCollectionRewardRsp id.
         * @member {number} id
         * @memberof proto.Msg_GetHeroCollectionRewardRsp
         * @instance
         */
        Msg_GetHeroCollectionRewardRsp.prototype.id = 0;

        /**
         * Msg_GetHeroCollectionRewardRsp rewards.
         * @member {Array.<proto.IItem>} rewards
         * @memberof proto.Msg_GetHeroCollectionRewardRsp
         * @instance
         */
        Msg_GetHeroCollectionRewardRsp.prototype.rewards = $util.emptyArray;

        /**
         * Encodes the specified Msg_GetHeroCollectionRewardRsp message. Does not implicitly {@link proto.Msg_GetHeroCollectionRewardRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_GetHeroCollectionRewardRsp
         * @static
         * @param {proto.IMsg_GetHeroCollectionRewardRsp} m Msg_GetHeroCollectionRewardRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_GetHeroCollectionRewardRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.error != null && Object.hasOwnProperty.call(m, "error"))
                $root.proto.CommonError.encode(m.error, w.uint32(10).fork()).ldelim();
            if (m.id != null && Object.hasOwnProperty.call(m, "id"))
                w.uint32(16).int32(m.id);
            if (m.rewards != null && m.rewards.length) {
                for (var i = 0; i < m.rewards.length; ++i)
                    $root.proto.Item.encode(m.rewards[i], w.uint32(42).fork()).ldelim();
            }
            return w;
        };

        /**
         * Decodes a Msg_GetHeroCollectionRewardRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_GetHeroCollectionRewardRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_GetHeroCollectionRewardRsp} Msg_GetHeroCollectionRewardRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_GetHeroCollectionRewardRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_GetHeroCollectionRewardRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.error = $root.proto.CommonError.decode(r, r.uint32());
                    break;
                case 2:
                    m.id = r.int32();
                    break;
                case 5:
                    if (!(m.rewards && m.rewards.length))
                        m.rewards = [];
                    m.rewards.push($root.proto.Item.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_GetHeroCollectionRewardRsp;
    })();

    proto.DailyShopSlot = (function() {

        /**
         * Properties of a DailyShopSlot.
         * @memberof proto
         * @interface IDailyShopSlot
         * @property {number|null} [index] DailyShopSlot index
         * @property {number|null} [commodityId] DailyShopSlot commodityId
         * @property {boolean|null} [isBought] DailyShopSlot isBought
         */

        /**
         * Constructs a new DailyShopSlot.
         * @memberof proto
         * @classdesc Represents a DailyShopSlot.
         * @implements IDailyShopSlot
         * @constructor
         * @param {proto.IDailyShopSlot=} [p] Properties to set
         */
        function DailyShopSlot(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * DailyShopSlot index.
         * @member {number} index
         * @memberof proto.DailyShopSlot
         * @instance
         */
        DailyShopSlot.prototype.index = 0;

        /**
         * DailyShopSlot commodityId.
         * @member {number} commodityId
         * @memberof proto.DailyShopSlot
         * @instance
         */
        DailyShopSlot.prototype.commodityId = 0;

        /**
         * DailyShopSlot isBought.
         * @member {boolean} isBought
         * @memberof proto.DailyShopSlot
         * @instance
         */
        DailyShopSlot.prototype.isBought = false;

        /**
         * Encodes the specified DailyShopSlot message. Does not implicitly {@link proto.DailyShopSlot.verify|verify} messages.
         * @function encode
         * @memberof proto.DailyShopSlot
         * @static
         * @param {proto.IDailyShopSlot} m DailyShopSlot message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        DailyShopSlot.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.index != null && Object.hasOwnProperty.call(m, "index"))
                w.uint32(8).int32(m.index);
            if (m.commodityId != null && Object.hasOwnProperty.call(m, "commodityId"))
                w.uint32(16).int32(m.commodityId);
            if (m.isBought != null && Object.hasOwnProperty.call(m, "isBought"))
                w.uint32(24).bool(m.isBought);
            return w;
        };

        /**
         * Decodes a DailyShopSlot message from the specified reader or buffer.
         * @function decode
         * @memberof proto.DailyShopSlot
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.DailyShopSlot} DailyShopSlot
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        DailyShopSlot.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.DailyShopSlot();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.index = r.int32();
                    break;
                case 2:
                    m.commodityId = r.int32();
                    break;
                case 3:
                    m.isBought = r.bool();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return DailyShopSlot;
    })();

    proto.Msg_GetDailyShopInfoReq = (function() {

        /**
         * Properties of a Msg_GetDailyShopInfoReq.
         * @memberof proto
         * @interface IMsg_GetDailyShopInfoReq
         */

        /**
         * Constructs a new Msg_GetDailyShopInfoReq.
         * @memberof proto
         * @classdesc Represents a Msg_GetDailyShopInfoReq.
         * @implements IMsg_GetDailyShopInfoReq
         * @constructor
         * @param {proto.IMsg_GetDailyShopInfoReq=} [p] Properties to set
         */
        function Msg_GetDailyShopInfoReq(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Encodes the specified Msg_GetDailyShopInfoReq message. Does not implicitly {@link proto.Msg_GetDailyShopInfoReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_GetDailyShopInfoReq
         * @static
         * @param {proto.IMsg_GetDailyShopInfoReq} m Msg_GetDailyShopInfoReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_GetDailyShopInfoReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };

        /**
         * Decodes a Msg_GetDailyShopInfoReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_GetDailyShopInfoReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_GetDailyShopInfoReq} Msg_GetDailyShopInfoReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_GetDailyShopInfoReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_GetDailyShopInfoReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_GetDailyShopInfoReq;
    })();

    proto.Msg_GetDailyShopInfoRsp = (function() {

        /**
         * Properties of a Msg_GetDailyShopInfoRsp.
         * @memberof proto
         * @interface IMsg_GetDailyShopInfoRsp
         * @property {Array.<proto.IDailyShopSlot>|null} [slots] Msg_GetDailyShopInfoRsp slots
         * @property {number|Long|null} [lastFreeRefreshTime] Msg_GetDailyShopInfoRsp lastFreeRefreshTime
         * @property {number|null} [freeRefreshTimes] Msg_GetDailyShopInfoRsp freeRefreshTimes
         * @property {number|null} [notFreeRefreshTimes] Msg_GetDailyShopInfoRsp notFreeRefreshTimes
         */

        /**
         * Constructs a new Msg_GetDailyShopInfoRsp.
         * @memberof proto
         * @classdesc Represents a Msg_GetDailyShopInfoRsp.
         * @implements IMsg_GetDailyShopInfoRsp
         * @constructor
         * @param {proto.IMsg_GetDailyShopInfoRsp=} [p] Properties to set
         */
        function Msg_GetDailyShopInfoRsp(p) {
            this.slots = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_GetDailyShopInfoRsp slots.
         * @member {Array.<proto.IDailyShopSlot>} slots
         * @memberof proto.Msg_GetDailyShopInfoRsp
         * @instance
         */
        Msg_GetDailyShopInfoRsp.prototype.slots = $util.emptyArray;

        /**
         * Msg_GetDailyShopInfoRsp lastFreeRefreshTime.
         * @member {number|Long} lastFreeRefreshTime
         * @memberof proto.Msg_GetDailyShopInfoRsp
         * @instance
         */
        Msg_GetDailyShopInfoRsp.prototype.lastFreeRefreshTime = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

        /**
         * Msg_GetDailyShopInfoRsp freeRefreshTimes.
         * @member {number} freeRefreshTimes
         * @memberof proto.Msg_GetDailyShopInfoRsp
         * @instance
         */
        Msg_GetDailyShopInfoRsp.prototype.freeRefreshTimes = 0;

        /**
         * Msg_GetDailyShopInfoRsp notFreeRefreshTimes.
         * @member {number} notFreeRefreshTimes
         * @memberof proto.Msg_GetDailyShopInfoRsp
         * @instance
         */
        Msg_GetDailyShopInfoRsp.prototype.notFreeRefreshTimes = 0;

        /**
         * Encodes the specified Msg_GetDailyShopInfoRsp message. Does not implicitly {@link proto.Msg_GetDailyShopInfoRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_GetDailyShopInfoRsp
         * @static
         * @param {proto.IMsg_GetDailyShopInfoRsp} m Msg_GetDailyShopInfoRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_GetDailyShopInfoRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.slots != null && m.slots.length) {
                for (var i = 0; i < m.slots.length; ++i)
                    $root.proto.DailyShopSlot.encode(m.slots[i], w.uint32(10).fork()).ldelim();
            }
            if (m.lastFreeRefreshTime != null && Object.hasOwnProperty.call(m, "lastFreeRefreshTime"))
                w.uint32(16).int64(m.lastFreeRefreshTime);
            if (m.freeRefreshTimes != null && Object.hasOwnProperty.call(m, "freeRefreshTimes"))
                w.uint32(24).int32(m.freeRefreshTimes);
            if (m.notFreeRefreshTimes != null && Object.hasOwnProperty.call(m, "notFreeRefreshTimes"))
                w.uint32(32).int32(m.notFreeRefreshTimes);
            return w;
        };

        /**
         * Decodes a Msg_GetDailyShopInfoRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_GetDailyShopInfoRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_GetDailyShopInfoRsp} Msg_GetDailyShopInfoRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_GetDailyShopInfoRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_GetDailyShopInfoRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.slots && m.slots.length))
                        m.slots = [];
                    m.slots.push($root.proto.DailyShopSlot.decode(r, r.uint32()));
                    break;
                case 2:
                    m.lastFreeRefreshTime = r.int64();
                    break;
                case 3:
                    m.freeRefreshTimes = r.int32();
                    break;
                case 4:
                    m.notFreeRefreshTimes = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_GetDailyShopInfoRsp;
    })();

    proto.Msg_RefreshDailyShopReq = (function() {

        /**
         * Properties of a Msg_RefreshDailyShopReq.
         * @memberof proto
         * @interface IMsg_RefreshDailyShopReq
         * @property {number|null} [type] Msg_RefreshDailyShopReq type
         */

        /**
         * Constructs a new Msg_RefreshDailyShopReq.
         * @memberof proto
         * @classdesc Represents a Msg_RefreshDailyShopReq.
         * @implements IMsg_RefreshDailyShopReq
         * @constructor
         * @param {proto.IMsg_RefreshDailyShopReq=} [p] Properties to set
         */
        function Msg_RefreshDailyShopReq(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_RefreshDailyShopReq type.
         * @member {number} type
         * @memberof proto.Msg_RefreshDailyShopReq
         * @instance
         */
        Msg_RefreshDailyShopReq.prototype.type = 0;

        /**
         * Encodes the specified Msg_RefreshDailyShopReq message. Does not implicitly {@link proto.Msg_RefreshDailyShopReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_RefreshDailyShopReq
         * @static
         * @param {proto.IMsg_RefreshDailyShopReq} m Msg_RefreshDailyShopReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_RefreshDailyShopReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.type != null && Object.hasOwnProperty.call(m, "type"))
                w.uint32(8).int32(m.type);
            return w;
        };

        /**
         * Decodes a Msg_RefreshDailyShopReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_RefreshDailyShopReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_RefreshDailyShopReq} Msg_RefreshDailyShopReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_RefreshDailyShopReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_RefreshDailyShopReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.type = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_RefreshDailyShopReq;
    })();

    proto.Msg_RefreshDailyShopRsp = (function() {

        /**
         * Properties of a Msg_RefreshDailyShopRsp.
         * @memberof proto
         * @interface IMsg_RefreshDailyShopRsp
         * @property {proto.ICommonError|null} [error] Msg_RefreshDailyShopRsp error
         * @property {number|null} [type] Msg_RefreshDailyShopRsp type
         * @property {Array.<proto.IDailyShopSlot>|null} [slots] Msg_RefreshDailyShopRsp slots
         * @property {number|Long|null} [lastFreeRefreshTime] Msg_RefreshDailyShopRsp lastFreeRefreshTime
         * @property {number|null} [freeRefreshTimes] Msg_RefreshDailyShopRsp freeRefreshTimes
         * @property {number|null} [notFreeRefreshTimes] Msg_RefreshDailyShopRsp notFreeRefreshTimes
         */

        /**
         * Constructs a new Msg_RefreshDailyShopRsp.
         * @memberof proto
         * @classdesc Represents a Msg_RefreshDailyShopRsp.
         * @implements IMsg_RefreshDailyShopRsp
         * @constructor
         * @param {proto.IMsg_RefreshDailyShopRsp=} [p] Properties to set
         */
        function Msg_RefreshDailyShopRsp(p) {
            this.slots = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_RefreshDailyShopRsp error.
         * @member {proto.ICommonError|null|undefined} error
         * @memberof proto.Msg_RefreshDailyShopRsp
         * @instance
         */
        Msg_RefreshDailyShopRsp.prototype.error = null;

        /**
         * Msg_RefreshDailyShopRsp type.
         * @member {number} type
         * @memberof proto.Msg_RefreshDailyShopRsp
         * @instance
         */
        Msg_RefreshDailyShopRsp.prototype.type = 0;

        /**
         * Msg_RefreshDailyShopRsp slots.
         * @member {Array.<proto.IDailyShopSlot>} slots
         * @memberof proto.Msg_RefreshDailyShopRsp
         * @instance
         */
        Msg_RefreshDailyShopRsp.prototype.slots = $util.emptyArray;

        /**
         * Msg_RefreshDailyShopRsp lastFreeRefreshTime.
         * @member {number|Long} lastFreeRefreshTime
         * @memberof proto.Msg_RefreshDailyShopRsp
         * @instance
         */
        Msg_RefreshDailyShopRsp.prototype.lastFreeRefreshTime = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

        /**
         * Msg_RefreshDailyShopRsp freeRefreshTimes.
         * @member {number} freeRefreshTimes
         * @memberof proto.Msg_RefreshDailyShopRsp
         * @instance
         */
        Msg_RefreshDailyShopRsp.prototype.freeRefreshTimes = 0;

        /**
         * Msg_RefreshDailyShopRsp notFreeRefreshTimes.
         * @member {number} notFreeRefreshTimes
         * @memberof proto.Msg_RefreshDailyShopRsp
         * @instance
         */
        Msg_RefreshDailyShopRsp.prototype.notFreeRefreshTimes = 0;

        /**
         * Encodes the specified Msg_RefreshDailyShopRsp message. Does not implicitly {@link proto.Msg_RefreshDailyShopRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_RefreshDailyShopRsp
         * @static
         * @param {proto.IMsg_RefreshDailyShopRsp} m Msg_RefreshDailyShopRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_RefreshDailyShopRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.error != null && Object.hasOwnProperty.call(m, "error"))
                $root.proto.CommonError.encode(m.error, w.uint32(10).fork()).ldelim();
            if (m.type != null && Object.hasOwnProperty.call(m, "type"))
                w.uint32(16).int32(m.type);
            if (m.slots != null && m.slots.length) {
                for (var i = 0; i < m.slots.length; ++i)
                    $root.proto.DailyShopSlot.encode(m.slots[i], w.uint32(26).fork()).ldelim();
            }
            if (m.lastFreeRefreshTime != null && Object.hasOwnProperty.call(m, "lastFreeRefreshTime"))
                w.uint32(32).int64(m.lastFreeRefreshTime);
            if (m.freeRefreshTimes != null && Object.hasOwnProperty.call(m, "freeRefreshTimes"))
                w.uint32(40).int32(m.freeRefreshTimes);
            if (m.notFreeRefreshTimes != null && Object.hasOwnProperty.call(m, "notFreeRefreshTimes"))
                w.uint32(48).int32(m.notFreeRefreshTimes);
            return w;
        };

        /**
         * Decodes a Msg_RefreshDailyShopRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_RefreshDailyShopRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_RefreshDailyShopRsp} Msg_RefreshDailyShopRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_RefreshDailyShopRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_RefreshDailyShopRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.error = $root.proto.CommonError.decode(r, r.uint32());
                    break;
                case 2:
                    m.type = r.int32();
                    break;
                case 3:
                    if (!(m.slots && m.slots.length))
                        m.slots = [];
                    m.slots.push($root.proto.DailyShopSlot.decode(r, r.uint32()));
                    break;
                case 4:
                    m.lastFreeRefreshTime = r.int64();
                    break;
                case 5:
                    m.freeRefreshTimes = r.int32();
                    break;
                case 6:
                    m.notFreeRefreshTimes = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_RefreshDailyShopRsp;
    })();

    proto.Msg_BuyDailyShopCommodityReq = (function() {

        /**
         * Properties of a Msg_BuyDailyShopCommodityReq.
         * @memberof proto
         * @interface IMsg_BuyDailyShopCommodityReq
         * @property {number|null} [index] Msg_BuyDailyShopCommodityReq index
         */

        /**
         * Constructs a new Msg_BuyDailyShopCommodityReq.
         * @memberof proto
         * @classdesc Represents a Msg_BuyDailyShopCommodityReq.
         * @implements IMsg_BuyDailyShopCommodityReq
         * @constructor
         * @param {proto.IMsg_BuyDailyShopCommodityReq=} [p] Properties to set
         */
        function Msg_BuyDailyShopCommodityReq(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_BuyDailyShopCommodityReq index.
         * @member {number} index
         * @memberof proto.Msg_BuyDailyShopCommodityReq
         * @instance
         */
        Msg_BuyDailyShopCommodityReq.prototype.index = 0;

        /**
         * Encodes the specified Msg_BuyDailyShopCommodityReq message. Does not implicitly {@link proto.Msg_BuyDailyShopCommodityReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_BuyDailyShopCommodityReq
         * @static
         * @param {proto.IMsg_BuyDailyShopCommodityReq} m Msg_BuyDailyShopCommodityReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_BuyDailyShopCommodityReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.index != null && Object.hasOwnProperty.call(m, "index"))
                w.uint32(8).int32(m.index);
            return w;
        };

        /**
         * Decodes a Msg_BuyDailyShopCommodityReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_BuyDailyShopCommodityReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_BuyDailyShopCommodityReq} Msg_BuyDailyShopCommodityReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_BuyDailyShopCommodityReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_BuyDailyShopCommodityReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.index = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_BuyDailyShopCommodityReq;
    })();

    proto.Msg_BuyDailyShopCommodityRsp = (function() {

        /**
         * Properties of a Msg_BuyDailyShopCommodityRsp.
         * @memberof proto
         * @interface IMsg_BuyDailyShopCommodityRsp
         * @property {proto.ICommonError|null} [error] Msg_BuyDailyShopCommodityRsp error
         * @property {number|null} [index] Msg_BuyDailyShopCommodityRsp index
         * @property {Array.<proto.IItem>|null} [rewards] Msg_BuyDailyShopCommodityRsp rewards
         */

        /**
         * Constructs a new Msg_BuyDailyShopCommodityRsp.
         * @memberof proto
         * @classdesc Represents a Msg_BuyDailyShopCommodityRsp.
         * @implements IMsg_BuyDailyShopCommodityRsp
         * @constructor
         * @param {proto.IMsg_BuyDailyShopCommodityRsp=} [p] Properties to set
         */
        function Msg_BuyDailyShopCommodityRsp(p) {
            this.rewards = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_BuyDailyShopCommodityRsp error.
         * @member {proto.ICommonError|null|undefined} error
         * @memberof proto.Msg_BuyDailyShopCommodityRsp
         * @instance
         */
        Msg_BuyDailyShopCommodityRsp.prototype.error = null;

        /**
         * Msg_BuyDailyShopCommodityRsp index.
         * @member {number} index
         * @memberof proto.Msg_BuyDailyShopCommodityRsp
         * @instance
         */
        Msg_BuyDailyShopCommodityRsp.prototype.index = 0;

        /**
         * Msg_BuyDailyShopCommodityRsp rewards.
         * @member {Array.<proto.IItem>} rewards
         * @memberof proto.Msg_BuyDailyShopCommodityRsp
         * @instance
         */
        Msg_BuyDailyShopCommodityRsp.prototype.rewards = $util.emptyArray;

        /**
         * Encodes the specified Msg_BuyDailyShopCommodityRsp message. Does not implicitly {@link proto.Msg_BuyDailyShopCommodityRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_BuyDailyShopCommodityRsp
         * @static
         * @param {proto.IMsg_BuyDailyShopCommodityRsp} m Msg_BuyDailyShopCommodityRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_BuyDailyShopCommodityRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.error != null && Object.hasOwnProperty.call(m, "error"))
                $root.proto.CommonError.encode(m.error, w.uint32(10).fork()).ldelim();
            if (m.index != null && Object.hasOwnProperty.call(m, "index"))
                w.uint32(16).int32(m.index);
            if (m.rewards != null && m.rewards.length) {
                for (var i = 0; i < m.rewards.length; ++i)
                    $root.proto.Item.encode(m.rewards[i], w.uint32(26).fork()).ldelim();
            }
            return w;
        };

        /**
         * Decodes a Msg_BuyDailyShopCommodityRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_BuyDailyShopCommodityRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_BuyDailyShopCommodityRsp} Msg_BuyDailyShopCommodityRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_BuyDailyShopCommodityRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_BuyDailyShopCommodityRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.error = $root.proto.CommonError.decode(r, r.uint32());
                    break;
                case 2:
                    m.index = r.int32();
                    break;
                case 3:
                    if (!(m.rewards && m.rewards.length))
                        m.rewards = [];
                    m.rewards.push($root.proto.Item.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_BuyDailyShopCommodityRsp;
    })();

    proto.Msg_BuyDailyShopCommodityOneClickReq = (function() {

        /**
         * Properties of a Msg_BuyDailyShopCommodityOneClickReq.
         * @memberof proto
         * @interface IMsg_BuyDailyShopCommodityOneClickReq
         */

        /**
         * Constructs a new Msg_BuyDailyShopCommodityOneClickReq.
         * @memberof proto
         * @classdesc Represents a Msg_BuyDailyShopCommodityOneClickReq.
         * @implements IMsg_BuyDailyShopCommodityOneClickReq
         * @constructor
         * @param {proto.IMsg_BuyDailyShopCommodityOneClickReq=} [p] Properties to set
         */
        function Msg_BuyDailyShopCommodityOneClickReq(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Encodes the specified Msg_BuyDailyShopCommodityOneClickReq message. Does not implicitly {@link proto.Msg_BuyDailyShopCommodityOneClickReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_BuyDailyShopCommodityOneClickReq
         * @static
         * @param {proto.IMsg_BuyDailyShopCommodityOneClickReq} m Msg_BuyDailyShopCommodityOneClickReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_BuyDailyShopCommodityOneClickReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };

        /**
         * Decodes a Msg_BuyDailyShopCommodityOneClickReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_BuyDailyShopCommodityOneClickReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_BuyDailyShopCommodityOneClickReq} Msg_BuyDailyShopCommodityOneClickReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_BuyDailyShopCommodityOneClickReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_BuyDailyShopCommodityOneClickReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_BuyDailyShopCommodityOneClickReq;
    })();

    proto.Msg_BuyDailyShopCommodityOneClickRsp = (function() {

        /**
         * Properties of a Msg_BuyDailyShopCommodityOneClickRsp.
         * @memberof proto
         * @interface IMsg_BuyDailyShopCommodityOneClickRsp
         * @property {proto.ICommonError|null} [error] Msg_BuyDailyShopCommodityOneClickRsp error
         * @property {Array.<proto.IItem>|null} [rewards] Msg_BuyDailyShopCommodityOneClickRsp rewards
         */

        /**
         * Constructs a new Msg_BuyDailyShopCommodityOneClickRsp.
         * @memberof proto
         * @classdesc Represents a Msg_BuyDailyShopCommodityOneClickRsp.
         * @implements IMsg_BuyDailyShopCommodityOneClickRsp
         * @constructor
         * @param {proto.IMsg_BuyDailyShopCommodityOneClickRsp=} [p] Properties to set
         */
        function Msg_BuyDailyShopCommodityOneClickRsp(p) {
            this.rewards = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_BuyDailyShopCommodityOneClickRsp error.
         * @member {proto.ICommonError|null|undefined} error
         * @memberof proto.Msg_BuyDailyShopCommodityOneClickRsp
         * @instance
         */
        Msg_BuyDailyShopCommodityOneClickRsp.prototype.error = null;

        /**
         * Msg_BuyDailyShopCommodityOneClickRsp rewards.
         * @member {Array.<proto.IItem>} rewards
         * @memberof proto.Msg_BuyDailyShopCommodityOneClickRsp
         * @instance
         */
        Msg_BuyDailyShopCommodityOneClickRsp.prototype.rewards = $util.emptyArray;

        /**
         * Encodes the specified Msg_BuyDailyShopCommodityOneClickRsp message. Does not implicitly {@link proto.Msg_BuyDailyShopCommodityOneClickRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_BuyDailyShopCommodityOneClickRsp
         * @static
         * @param {proto.IMsg_BuyDailyShopCommodityOneClickRsp} m Msg_BuyDailyShopCommodityOneClickRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_BuyDailyShopCommodityOneClickRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.error != null && Object.hasOwnProperty.call(m, "error"))
                $root.proto.CommonError.encode(m.error, w.uint32(10).fork()).ldelim();
            if (m.rewards != null && m.rewards.length) {
                for (var i = 0; i < m.rewards.length; ++i)
                    $root.proto.Item.encode(m.rewards[i], w.uint32(18).fork()).ldelim();
            }
            return w;
        };

        /**
         * Decodes a Msg_BuyDailyShopCommodityOneClickRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_BuyDailyShopCommodityOneClickRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_BuyDailyShopCommodityOneClickRsp} Msg_BuyDailyShopCommodityOneClickRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_BuyDailyShopCommodityOneClickRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_BuyDailyShopCommodityOneClickRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.error = $root.proto.CommonError.decode(r, r.uint32());
                    break;
                case 2:
                    if (!(m.rewards && m.rewards.length))
                        m.rewards = [];
                    m.rewards.push($root.proto.Item.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_BuyDailyShopCommodityOneClickRsp;
    })();

    proto.Msg_BreakEggPush = (function() {

        /**
         * Properties of a Msg_BreakEggPush.
         * @memberof proto
         * @interface IMsg_BreakEggPush
         * @property {number|null} [id] Msg_BreakEggPush id
         * @property {number|null} [score] Msg_BreakEggPush score
         */

        /**
         * Constructs a new Msg_BreakEggPush.
         * @memberof proto
         * @classdesc Represents a Msg_BreakEggPush.
         * @implements IMsg_BreakEggPush
         * @constructor
         * @param {proto.IMsg_BreakEggPush=} [p] Properties to set
         */
        function Msg_BreakEggPush(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_BreakEggPush id.
         * @member {number} id
         * @memberof proto.Msg_BreakEggPush
         * @instance
         */
        Msg_BreakEggPush.prototype.id = 0;

        /**
         * Msg_BreakEggPush score.
         * @member {number} score
         * @memberof proto.Msg_BreakEggPush
         * @instance
         */
        Msg_BreakEggPush.prototype.score = 0;

        /**
         * Encodes the specified Msg_BreakEggPush message. Does not implicitly {@link proto.Msg_BreakEggPush.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_BreakEggPush
         * @static
         * @param {proto.IMsg_BreakEggPush} m Msg_BreakEggPush message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_BreakEggPush.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.id != null && Object.hasOwnProperty.call(m, "id"))
                w.uint32(8).int32(m.id);
            if (m.score != null && Object.hasOwnProperty.call(m, "score"))
                w.uint32(16).int32(m.score);
            return w;
        };

        /**
         * Decodes a Msg_BreakEggPush message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_BreakEggPush
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_BreakEggPush} Msg_BreakEggPush
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_BreakEggPush.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_BreakEggPush();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.id = r.int32();
                    break;
                case 2:
                    m.score = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_BreakEggPush;
    })();

    proto.Msg_GetVipInfoReq = (function() {

        /**
         * Properties of a Msg_GetVipInfoReq.
         * @memberof proto
         * @interface IMsg_GetVipInfoReq
         */

        /**
         * Constructs a new Msg_GetVipInfoReq.
         * @memberof proto
         * @classdesc Represents a Msg_GetVipInfoReq.
         * @implements IMsg_GetVipInfoReq
         * @constructor
         * @param {proto.IMsg_GetVipInfoReq=} [p] Properties to set
         */
        function Msg_GetVipInfoReq(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Encodes the specified Msg_GetVipInfoReq message. Does not implicitly {@link proto.Msg_GetVipInfoReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_GetVipInfoReq
         * @static
         * @param {proto.IMsg_GetVipInfoReq} m Msg_GetVipInfoReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_GetVipInfoReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };

        /**
         * Decodes a Msg_GetVipInfoReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_GetVipInfoReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_GetVipInfoReq} Msg_GetVipInfoReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_GetVipInfoReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_GetVipInfoReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_GetVipInfoReq;
    })();

    proto.Msg_GetVipInfoRsp = (function() {

        /**
         * Properties of a Msg_GetVipInfoRsp.
         * @memberof proto
         * @interface IMsg_GetVipInfoRsp
         * @property {number|null} [vipLevel] Msg_GetVipInfoRsp vipLevel
         * @property {boolean|null} [isDailyGiftReceived] Msg_GetVipInfoRsp isDailyGiftReceived
         * @property {Array.<number>|null} [boughtVipGifts] Msg_GetVipInfoRsp boughtVipGifts
         */

        /**
         * Constructs a new Msg_GetVipInfoRsp.
         * @memberof proto
         * @classdesc Represents a Msg_GetVipInfoRsp.
         * @implements IMsg_GetVipInfoRsp
         * @constructor
         * @param {proto.IMsg_GetVipInfoRsp=} [p] Properties to set
         */
        function Msg_GetVipInfoRsp(p) {
            this.boughtVipGifts = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_GetVipInfoRsp vipLevel.
         * @member {number} vipLevel
         * @memberof proto.Msg_GetVipInfoRsp
         * @instance
         */
        Msg_GetVipInfoRsp.prototype.vipLevel = 0;

        /**
         * Msg_GetVipInfoRsp isDailyGiftReceived.
         * @member {boolean} isDailyGiftReceived
         * @memberof proto.Msg_GetVipInfoRsp
         * @instance
         */
        Msg_GetVipInfoRsp.prototype.isDailyGiftReceived = false;

        /**
         * Msg_GetVipInfoRsp boughtVipGifts.
         * @member {Array.<number>} boughtVipGifts
         * @memberof proto.Msg_GetVipInfoRsp
         * @instance
         */
        Msg_GetVipInfoRsp.prototype.boughtVipGifts = $util.emptyArray;

        /**
         * Encodes the specified Msg_GetVipInfoRsp message. Does not implicitly {@link proto.Msg_GetVipInfoRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_GetVipInfoRsp
         * @static
         * @param {proto.IMsg_GetVipInfoRsp} m Msg_GetVipInfoRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_GetVipInfoRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.vipLevel != null && Object.hasOwnProperty.call(m, "vipLevel"))
                w.uint32(8).int32(m.vipLevel);
            if (m.isDailyGiftReceived != null && Object.hasOwnProperty.call(m, "isDailyGiftReceived"))
                w.uint32(16).bool(m.isDailyGiftReceived);
            if (m.boughtVipGifts != null && m.boughtVipGifts.length) {
                w.uint32(26).fork();
                for (var i = 0; i < m.boughtVipGifts.length; ++i)
                    w.int32(m.boughtVipGifts[i]);
                w.ldelim();
            }
            return w;
        };

        /**
         * Decodes a Msg_GetVipInfoRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_GetVipInfoRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_GetVipInfoRsp} Msg_GetVipInfoRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_GetVipInfoRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_GetVipInfoRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.vipLevel = r.int32();
                    break;
                case 2:
                    m.isDailyGiftReceived = r.bool();
                    break;
                case 3:
                    if (!(m.boughtVipGifts && m.boughtVipGifts.length))
                        m.boughtVipGifts = [];
                    if ((t & 7) === 2) {
                        var c2 = r.uint32() + r.pos;
                        while (r.pos < c2)
                            m.boughtVipGifts.push(r.int32());
                    } else
                        m.boughtVipGifts.push(r.int32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_GetVipInfoRsp;
    })();

    proto.Msg_ReceiveVipDailyGiftReq = (function() {

        /**
         * Properties of a Msg_ReceiveVipDailyGiftReq.
         * @memberof proto
         * @interface IMsg_ReceiveVipDailyGiftReq
         */

        /**
         * Constructs a new Msg_ReceiveVipDailyGiftReq.
         * @memberof proto
         * @classdesc Represents a Msg_ReceiveVipDailyGiftReq.
         * @implements IMsg_ReceiveVipDailyGiftReq
         * @constructor
         * @param {proto.IMsg_ReceiveVipDailyGiftReq=} [p] Properties to set
         */
        function Msg_ReceiveVipDailyGiftReq(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Encodes the specified Msg_ReceiveVipDailyGiftReq message. Does not implicitly {@link proto.Msg_ReceiveVipDailyGiftReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_ReceiveVipDailyGiftReq
         * @static
         * @param {proto.IMsg_ReceiveVipDailyGiftReq} m Msg_ReceiveVipDailyGiftReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_ReceiveVipDailyGiftReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };

        /**
         * Decodes a Msg_ReceiveVipDailyGiftReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_ReceiveVipDailyGiftReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_ReceiveVipDailyGiftReq} Msg_ReceiveVipDailyGiftReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_ReceiveVipDailyGiftReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_ReceiveVipDailyGiftReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_ReceiveVipDailyGiftReq;
    })();

    proto.Msg_ReceiveVipDailyGiftRsp = (function() {

        /**
         * Properties of a Msg_ReceiveVipDailyGiftRsp.
         * @memberof proto
         * @interface IMsg_ReceiveVipDailyGiftRsp
         * @property {proto.ICommonError|null} [error] Msg_ReceiveVipDailyGiftRsp error
         * @property {Array.<proto.IItem>|null} [rewards] Msg_ReceiveVipDailyGiftRsp rewards
         */

        /**
         * Constructs a new Msg_ReceiveVipDailyGiftRsp.
         * @memberof proto
         * @classdesc Represents a Msg_ReceiveVipDailyGiftRsp.
         * @implements IMsg_ReceiveVipDailyGiftRsp
         * @constructor
         * @param {proto.IMsg_ReceiveVipDailyGiftRsp=} [p] Properties to set
         */
        function Msg_ReceiveVipDailyGiftRsp(p) {
            this.rewards = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_ReceiveVipDailyGiftRsp error.
         * @member {proto.ICommonError|null|undefined} error
         * @memberof proto.Msg_ReceiveVipDailyGiftRsp
         * @instance
         */
        Msg_ReceiveVipDailyGiftRsp.prototype.error = null;

        /**
         * Msg_ReceiveVipDailyGiftRsp rewards.
         * @member {Array.<proto.IItem>} rewards
         * @memberof proto.Msg_ReceiveVipDailyGiftRsp
         * @instance
         */
        Msg_ReceiveVipDailyGiftRsp.prototype.rewards = $util.emptyArray;

        /**
         * Encodes the specified Msg_ReceiveVipDailyGiftRsp message. Does not implicitly {@link proto.Msg_ReceiveVipDailyGiftRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_ReceiveVipDailyGiftRsp
         * @static
         * @param {proto.IMsg_ReceiveVipDailyGiftRsp} m Msg_ReceiveVipDailyGiftRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_ReceiveVipDailyGiftRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.error != null && Object.hasOwnProperty.call(m, "error"))
                $root.proto.CommonError.encode(m.error, w.uint32(10).fork()).ldelim();
            if (m.rewards != null && m.rewards.length) {
                for (var i = 0; i < m.rewards.length; ++i)
                    $root.proto.Item.encode(m.rewards[i], w.uint32(18).fork()).ldelim();
            }
            return w;
        };

        /**
         * Decodes a Msg_ReceiveVipDailyGiftRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_ReceiveVipDailyGiftRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_ReceiveVipDailyGiftRsp} Msg_ReceiveVipDailyGiftRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_ReceiveVipDailyGiftRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_ReceiveVipDailyGiftRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.error = $root.proto.CommonError.decode(r, r.uint32());
                    break;
                case 2:
                    if (!(m.rewards && m.rewards.length))
                        m.rewards = [];
                    m.rewards.push($root.proto.Item.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_ReceiveVipDailyGiftRsp;
    })();

    proto.Msg_BuyVipGiftReq = (function() {

        /**
         * Properties of a Msg_BuyVipGiftReq.
         * @memberof proto
         * @interface IMsg_BuyVipGiftReq
         * @property {number|null} [vipLevel] Msg_BuyVipGiftReq vipLevel
         */

        /**
         * Constructs a new Msg_BuyVipGiftReq.
         * @memberof proto
         * @classdesc Represents a Msg_BuyVipGiftReq.
         * @implements IMsg_BuyVipGiftReq
         * @constructor
         * @param {proto.IMsg_BuyVipGiftReq=} [p] Properties to set
         */
        function Msg_BuyVipGiftReq(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_BuyVipGiftReq vipLevel.
         * @member {number} vipLevel
         * @memberof proto.Msg_BuyVipGiftReq
         * @instance
         */
        Msg_BuyVipGiftReq.prototype.vipLevel = 0;

        /**
         * Encodes the specified Msg_BuyVipGiftReq message. Does not implicitly {@link proto.Msg_BuyVipGiftReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_BuyVipGiftReq
         * @static
         * @param {proto.IMsg_BuyVipGiftReq} m Msg_BuyVipGiftReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_BuyVipGiftReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.vipLevel != null && Object.hasOwnProperty.call(m, "vipLevel"))
                w.uint32(8).int32(m.vipLevel);
            return w;
        };

        /**
         * Decodes a Msg_BuyVipGiftReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_BuyVipGiftReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_BuyVipGiftReq} Msg_BuyVipGiftReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_BuyVipGiftReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_BuyVipGiftReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.vipLevel = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_BuyVipGiftReq;
    })();

    proto.Msg_BuyVipGiftRsp = (function() {

        /**
         * Properties of a Msg_BuyVipGiftRsp.
         * @memberof proto
         * @interface IMsg_BuyVipGiftRsp
         * @property {proto.ICommonError|null} [error] Msg_BuyVipGiftRsp error
         * @property {number|null} [vipLevel] Msg_BuyVipGiftRsp vipLevel
         * @property {Array.<proto.IItem>|null} [rewards] Msg_BuyVipGiftRsp rewards
         */

        /**
         * Constructs a new Msg_BuyVipGiftRsp.
         * @memberof proto
         * @classdesc Represents a Msg_BuyVipGiftRsp.
         * @implements IMsg_BuyVipGiftRsp
         * @constructor
         * @param {proto.IMsg_BuyVipGiftRsp=} [p] Properties to set
         */
        function Msg_BuyVipGiftRsp(p) {
            this.rewards = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_BuyVipGiftRsp error.
         * @member {proto.ICommonError|null|undefined} error
         * @memberof proto.Msg_BuyVipGiftRsp
         * @instance
         */
        Msg_BuyVipGiftRsp.prototype.error = null;

        /**
         * Msg_BuyVipGiftRsp vipLevel.
         * @member {number} vipLevel
         * @memberof proto.Msg_BuyVipGiftRsp
         * @instance
         */
        Msg_BuyVipGiftRsp.prototype.vipLevel = 0;

        /**
         * Msg_BuyVipGiftRsp rewards.
         * @member {Array.<proto.IItem>} rewards
         * @memberof proto.Msg_BuyVipGiftRsp
         * @instance
         */
        Msg_BuyVipGiftRsp.prototype.rewards = $util.emptyArray;

        /**
         * Encodes the specified Msg_BuyVipGiftRsp message. Does not implicitly {@link proto.Msg_BuyVipGiftRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_BuyVipGiftRsp
         * @static
         * @param {proto.IMsg_BuyVipGiftRsp} m Msg_BuyVipGiftRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_BuyVipGiftRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.error != null && Object.hasOwnProperty.call(m, "error"))
                $root.proto.CommonError.encode(m.error, w.uint32(10).fork()).ldelim();
            if (m.vipLevel != null && Object.hasOwnProperty.call(m, "vipLevel"))
                w.uint32(16).int32(m.vipLevel);
            if (m.rewards != null && m.rewards.length) {
                for (var i = 0; i < m.rewards.length; ++i)
                    $root.proto.Item.encode(m.rewards[i], w.uint32(26).fork()).ldelim();
            }
            return w;
        };

        /**
         * Decodes a Msg_BuyVipGiftRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_BuyVipGiftRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_BuyVipGiftRsp} Msg_BuyVipGiftRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_BuyVipGiftRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_BuyVipGiftRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.error = $root.proto.CommonError.decode(r, r.uint32());
                    break;
                case 2:
                    m.vipLevel = r.int32();
                    break;
                case 3:
                    if (!(m.rewards && m.rewards.length))
                        m.rewards = [];
                    m.rewards.push($root.proto.Item.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_BuyVipGiftRsp;
    })();

    proto.Msg_ReviveOnStageReq = (function() {

        /**
         * Properties of a Msg_ReviveOnStageReq.
         * @memberof proto
         * @interface IMsg_ReviveOnStageReq
         */

        /**
         * Constructs a new Msg_ReviveOnStageReq.
         * @memberof proto
         * @classdesc Represents a Msg_ReviveOnStageReq.
         * @implements IMsg_ReviveOnStageReq
         * @constructor
         * @param {proto.IMsg_ReviveOnStageReq=} [p] Properties to set
         */
        function Msg_ReviveOnStageReq(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Encodes the specified Msg_ReviveOnStageReq message. Does not implicitly {@link proto.Msg_ReviveOnStageReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_ReviveOnStageReq
         * @static
         * @param {proto.IMsg_ReviveOnStageReq} m Msg_ReviveOnStageReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_ReviveOnStageReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };

        /**
         * Decodes a Msg_ReviveOnStageReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_ReviveOnStageReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_ReviveOnStageReq} Msg_ReviveOnStageReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_ReviveOnStageReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_ReviveOnStageReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_ReviveOnStageReq;
    })();

    proto.Msg_ReviveOnStageRsp = (function() {

        /**
         * Properties of a Msg_ReviveOnStageRsp.
         * @memberof proto
         * @interface IMsg_ReviveOnStageRsp
         * @property {proto.ICommonError|null} [error] Msg_ReviveOnStageRsp error
         */

        /**
         * Constructs a new Msg_ReviveOnStageRsp.
         * @memberof proto
         * @classdesc Represents a Msg_ReviveOnStageRsp.
         * @implements IMsg_ReviveOnStageRsp
         * @constructor
         * @param {proto.IMsg_ReviveOnStageRsp=} [p] Properties to set
         */
        function Msg_ReviveOnStageRsp(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_ReviveOnStageRsp error.
         * @member {proto.ICommonError|null|undefined} error
         * @memberof proto.Msg_ReviveOnStageRsp
         * @instance
         */
        Msg_ReviveOnStageRsp.prototype.error = null;

        /**
         * Encodes the specified Msg_ReviveOnStageRsp message. Does not implicitly {@link proto.Msg_ReviveOnStageRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_ReviveOnStageRsp
         * @static
         * @param {proto.IMsg_ReviveOnStageRsp} m Msg_ReviveOnStageRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_ReviveOnStageRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.error != null && Object.hasOwnProperty.call(m, "error"))
                $root.proto.CommonError.encode(m.error, w.uint32(10).fork()).ldelim();
            return w;
        };

        /**
         * Decodes a Msg_ReviveOnStageRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_ReviveOnStageRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_ReviveOnStageRsp} Msg_ReviveOnStageRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_ReviveOnStageRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_ReviveOnStageRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.error = $root.proto.CommonError.decode(r, r.uint32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_ReviveOnStageRsp;
    })();

    proto.Msg_WatchAdReq = (function() {

        /**
         * Properties of a Msg_WatchAdReq.
         * @memberof proto
         * @interface IMsg_WatchAdReq
         * @property {number|null} [type] Msg_WatchAdReq type
         */

        /**
         * Constructs a new Msg_WatchAdReq.
         * @memberof proto
         * @classdesc Represents a Msg_WatchAdReq.
         * @implements IMsg_WatchAdReq
         * @constructor
         * @param {proto.IMsg_WatchAdReq=} [p] Properties to set
         */
        function Msg_WatchAdReq(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_WatchAdReq type.
         * @member {number} type
         * @memberof proto.Msg_WatchAdReq
         * @instance
         */
        Msg_WatchAdReq.prototype.type = 0;

        /**
         * Encodes the specified Msg_WatchAdReq message. Does not implicitly {@link proto.Msg_WatchAdReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_WatchAdReq
         * @static
         * @param {proto.IMsg_WatchAdReq} m Msg_WatchAdReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_WatchAdReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.type != null && Object.hasOwnProperty.call(m, "type"))
                w.uint32(8).int32(m.type);
            return w;
        };

        /**
         * Decodes a Msg_WatchAdReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_WatchAdReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_WatchAdReq} Msg_WatchAdReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_WatchAdReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_WatchAdReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.type = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_WatchAdReq;
    })();

    proto.Msg_WatchAdRsp = (function() {

        /**
         * Properties of a Msg_WatchAdRsp.
         * @memberof proto
         * @interface IMsg_WatchAdRsp
         * @property {proto.ICommonError|null} [error] Msg_WatchAdRsp error
         * @property {number|null} [type] Msg_WatchAdRsp type
         */

        /**
         * Constructs a new Msg_WatchAdRsp.
         * @memberof proto
         * @classdesc Represents a Msg_WatchAdRsp.
         * @implements IMsg_WatchAdRsp
         * @constructor
         * @param {proto.IMsg_WatchAdRsp=} [p] Properties to set
         */
        function Msg_WatchAdRsp(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_WatchAdRsp error.
         * @member {proto.ICommonError|null|undefined} error
         * @memberof proto.Msg_WatchAdRsp
         * @instance
         */
        Msg_WatchAdRsp.prototype.error = null;

        /**
         * Msg_WatchAdRsp type.
         * @member {number} type
         * @memberof proto.Msg_WatchAdRsp
         * @instance
         */
        Msg_WatchAdRsp.prototype.type = 0;

        /**
         * Encodes the specified Msg_WatchAdRsp message. Does not implicitly {@link proto.Msg_WatchAdRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_WatchAdRsp
         * @static
         * @param {proto.IMsg_WatchAdRsp} m Msg_WatchAdRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_WatchAdRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.error != null && Object.hasOwnProperty.call(m, "error"))
                $root.proto.CommonError.encode(m.error, w.uint32(10).fork()).ldelim();
            if (m.type != null && Object.hasOwnProperty.call(m, "type"))
                w.uint32(16).int32(m.type);
            return w;
        };

        /**
         * Decodes a Msg_WatchAdRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_WatchAdRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_WatchAdRsp} Msg_WatchAdRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_WatchAdRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_WatchAdRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.error = $root.proto.CommonError.decode(r, r.uint32());
                    break;
                case 2:
                    m.type = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_WatchAdRsp;
    })();

    proto.Privilege = (function() {

        /**
         * Properties of a Privilege.
         * @memberof proto
         * @interface IPrivilege
         * @property {number|null} [type] Privilege type
         * @property {number|Long|null} [expireTime] Privilege expireTime
         * @property {boolean|null} [isDailyReceived] Privilege isDailyReceived
         */

        /**
         * Constructs a new Privilege.
         * @memberof proto
         * @classdesc Represents a Privilege.
         * @implements IPrivilege
         * @constructor
         * @param {proto.IPrivilege=} [p] Properties to set
         */
        function Privilege(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Privilege type.
         * @member {number} type
         * @memberof proto.Privilege
         * @instance
         */
        Privilege.prototype.type = 0;

        /**
         * Privilege expireTime.
         * @member {number|Long} expireTime
         * @memberof proto.Privilege
         * @instance
         */
        Privilege.prototype.expireTime = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

        /**
         * Privilege isDailyReceived.
         * @member {boolean} isDailyReceived
         * @memberof proto.Privilege
         * @instance
         */
        Privilege.prototype.isDailyReceived = false;

        /**
         * Encodes the specified Privilege message. Does not implicitly {@link proto.Privilege.verify|verify} messages.
         * @function encode
         * @memberof proto.Privilege
         * @static
         * @param {proto.IPrivilege} m Privilege message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Privilege.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.type != null && Object.hasOwnProperty.call(m, "type"))
                w.uint32(8).int32(m.type);
            if (m.expireTime != null && Object.hasOwnProperty.call(m, "expireTime"))
                w.uint32(16).int64(m.expireTime);
            if (m.isDailyReceived != null && Object.hasOwnProperty.call(m, "isDailyReceived"))
                w.uint32(24).bool(m.isDailyReceived);
            return w;
        };

        /**
         * Decodes a Privilege message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Privilege
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Privilege} Privilege
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Privilege.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Privilege();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.type = r.int32();
                    break;
                case 2:
                    m.expireTime = r.int64();
                    break;
                case 3:
                    m.isDailyReceived = r.bool();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Privilege;
    })();

    proto.Msg_GetPrivilegeInfoReq = (function() {

        /**
         * Properties of a Msg_GetPrivilegeInfoReq.
         * @memberof proto
         * @interface IMsg_GetPrivilegeInfoReq
         */

        /**
         * Constructs a new Msg_GetPrivilegeInfoReq.
         * @memberof proto
         * @classdesc Represents a Msg_GetPrivilegeInfoReq.
         * @implements IMsg_GetPrivilegeInfoReq
         * @constructor
         * @param {proto.IMsg_GetPrivilegeInfoReq=} [p] Properties to set
         */
        function Msg_GetPrivilegeInfoReq(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Encodes the specified Msg_GetPrivilegeInfoReq message. Does not implicitly {@link proto.Msg_GetPrivilegeInfoReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_GetPrivilegeInfoReq
         * @static
         * @param {proto.IMsg_GetPrivilegeInfoReq} m Msg_GetPrivilegeInfoReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_GetPrivilegeInfoReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };

        /**
         * Decodes a Msg_GetPrivilegeInfoReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_GetPrivilegeInfoReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_GetPrivilegeInfoReq} Msg_GetPrivilegeInfoReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_GetPrivilegeInfoReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_GetPrivilegeInfoReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_GetPrivilegeInfoReq;
    })();

    proto.Msg_GetPrivilegeInfoRsp = (function() {

        /**
         * Properties of a Msg_GetPrivilegeInfoRsp.
         * @memberof proto
         * @interface IMsg_GetPrivilegeInfoRsp
         * @property {Object.<string,proto.IPrivilege>|null} [PrivilegeMap] Msg_GetPrivilegeInfoRsp PrivilegeMap
         * @property {number|Long|null} [montylyPassAddtionalExpireTime] Msg_GetPrivilegeInfoRsp montylyPassAddtionalExpireTime
         * @property {boolean|null} [isReceivedMonthlyPassAddtional] Msg_GetPrivilegeInfoRsp isReceivedMonthlyPassAddtional
         */

        /**
         * Constructs a new Msg_GetPrivilegeInfoRsp.
         * @memberof proto
         * @classdesc Represents a Msg_GetPrivilegeInfoRsp.
         * @implements IMsg_GetPrivilegeInfoRsp
         * @constructor
         * @param {proto.IMsg_GetPrivilegeInfoRsp=} [p] Properties to set
         */
        function Msg_GetPrivilegeInfoRsp(p) {
            this.PrivilegeMap = {};
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_GetPrivilegeInfoRsp PrivilegeMap.
         * @member {Object.<string,proto.IPrivilege>} PrivilegeMap
         * @memberof proto.Msg_GetPrivilegeInfoRsp
         * @instance
         */
        Msg_GetPrivilegeInfoRsp.prototype.PrivilegeMap = $util.emptyObject;

        /**
         * Msg_GetPrivilegeInfoRsp montylyPassAddtionalExpireTime.
         * @member {number|Long} montylyPassAddtionalExpireTime
         * @memberof proto.Msg_GetPrivilegeInfoRsp
         * @instance
         */
        Msg_GetPrivilegeInfoRsp.prototype.montylyPassAddtionalExpireTime = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

        /**
         * Msg_GetPrivilegeInfoRsp isReceivedMonthlyPassAddtional.
         * @member {boolean} isReceivedMonthlyPassAddtional
         * @memberof proto.Msg_GetPrivilegeInfoRsp
         * @instance
         */
        Msg_GetPrivilegeInfoRsp.prototype.isReceivedMonthlyPassAddtional = false;

        /**
         * Encodes the specified Msg_GetPrivilegeInfoRsp message. Does not implicitly {@link proto.Msg_GetPrivilegeInfoRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_GetPrivilegeInfoRsp
         * @static
         * @param {proto.IMsg_GetPrivilegeInfoRsp} m Msg_GetPrivilegeInfoRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_GetPrivilegeInfoRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.PrivilegeMap != null && Object.hasOwnProperty.call(m, "PrivilegeMap")) {
                for (var ks = Object.keys(m.PrivilegeMap), i = 0; i < ks.length; ++i) {
                    w.uint32(10).fork().uint32(8).int32(ks[i]);
                    $root.proto.Privilege.encode(m.PrivilegeMap[ks[i]], w.uint32(18).fork()).ldelim().ldelim();
                }
            }
            if (m.montylyPassAddtionalExpireTime != null && Object.hasOwnProperty.call(m, "montylyPassAddtionalExpireTime"))
                w.uint32(16).int64(m.montylyPassAddtionalExpireTime);
            if (m.isReceivedMonthlyPassAddtional != null && Object.hasOwnProperty.call(m, "isReceivedMonthlyPassAddtional"))
                w.uint32(24).bool(m.isReceivedMonthlyPassAddtional);
            return w;
        };

        /**
         * Decodes a Msg_GetPrivilegeInfoRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_GetPrivilegeInfoRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_GetPrivilegeInfoRsp} Msg_GetPrivilegeInfoRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_GetPrivilegeInfoRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_GetPrivilegeInfoRsp(), k, value;
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (m.PrivilegeMap === $util.emptyObject)
                        m.PrivilegeMap = {};
                    var c2 = r.uint32() + r.pos;
                    k = 0;
                    value = null;
                    while (r.pos < c2) {
                        var tag2 = r.uint32();
                        switch (tag2 >>> 3) {
                        case 1:
                            k = r.int32();
                            break;
                        case 2:
                            value = $root.proto.Privilege.decode(r, r.uint32());
                            break;
                        default:
                            r.skipType(tag2 & 7);
                            break;
                        }
                    }
                    m.PrivilegeMap[k] = value;
                    break;
                case 2:
                    m.montylyPassAddtionalExpireTime = r.int64();
                    break;
                case 3:
                    m.isReceivedMonthlyPassAddtional = r.bool();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_GetPrivilegeInfoRsp;
    })();

    proto.Msg_ReceivePrivilegeDailyRewardsReq = (function() {

        /**
         * Properties of a Msg_ReceivePrivilegeDailyRewardsReq.
         * @memberof proto
         * @interface IMsg_ReceivePrivilegeDailyRewardsReq
         * @property {number|null} [type] Msg_ReceivePrivilegeDailyRewardsReq type
         */

        /**
         * Constructs a new Msg_ReceivePrivilegeDailyRewardsReq.
         * @memberof proto
         * @classdesc Represents a Msg_ReceivePrivilegeDailyRewardsReq.
         * @implements IMsg_ReceivePrivilegeDailyRewardsReq
         * @constructor
         * @param {proto.IMsg_ReceivePrivilegeDailyRewardsReq=} [p] Properties to set
         */
        function Msg_ReceivePrivilegeDailyRewardsReq(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_ReceivePrivilegeDailyRewardsReq type.
         * @member {number} type
         * @memberof proto.Msg_ReceivePrivilegeDailyRewardsReq
         * @instance
         */
        Msg_ReceivePrivilegeDailyRewardsReq.prototype.type = 0;

        /**
         * Encodes the specified Msg_ReceivePrivilegeDailyRewardsReq message. Does not implicitly {@link proto.Msg_ReceivePrivilegeDailyRewardsReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_ReceivePrivilegeDailyRewardsReq
         * @static
         * @param {proto.IMsg_ReceivePrivilegeDailyRewardsReq} m Msg_ReceivePrivilegeDailyRewardsReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_ReceivePrivilegeDailyRewardsReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.type != null && Object.hasOwnProperty.call(m, "type"))
                w.uint32(8).int32(m.type);
            return w;
        };

        /**
         * Decodes a Msg_ReceivePrivilegeDailyRewardsReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_ReceivePrivilegeDailyRewardsReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_ReceivePrivilegeDailyRewardsReq} Msg_ReceivePrivilegeDailyRewardsReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_ReceivePrivilegeDailyRewardsReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_ReceivePrivilegeDailyRewardsReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.type = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_ReceivePrivilegeDailyRewardsReq;
    })();

    proto.Msg_ReceivePrivilegeDailyRewardsRsp = (function() {

        /**
         * Properties of a Msg_ReceivePrivilegeDailyRewardsRsp.
         * @memberof proto
         * @interface IMsg_ReceivePrivilegeDailyRewardsRsp
         * @property {proto.ICommonError|null} [error] Msg_ReceivePrivilegeDailyRewardsRsp error
         * @property {number|null} [type] Msg_ReceivePrivilegeDailyRewardsRsp type
         * @property {Array.<proto.IItem>|null} [rewards] Msg_ReceivePrivilegeDailyRewardsRsp rewards
         */

        /**
         * Constructs a new Msg_ReceivePrivilegeDailyRewardsRsp.
         * @memberof proto
         * @classdesc Represents a Msg_ReceivePrivilegeDailyRewardsRsp.
         * @implements IMsg_ReceivePrivilegeDailyRewardsRsp
         * @constructor
         * @param {proto.IMsg_ReceivePrivilegeDailyRewardsRsp=} [p] Properties to set
         */
        function Msg_ReceivePrivilegeDailyRewardsRsp(p) {
            this.rewards = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_ReceivePrivilegeDailyRewardsRsp error.
         * @member {proto.ICommonError|null|undefined} error
         * @memberof proto.Msg_ReceivePrivilegeDailyRewardsRsp
         * @instance
         */
        Msg_ReceivePrivilegeDailyRewardsRsp.prototype.error = null;

        /**
         * Msg_ReceivePrivilegeDailyRewardsRsp type.
         * @member {number} type
         * @memberof proto.Msg_ReceivePrivilegeDailyRewardsRsp
         * @instance
         */
        Msg_ReceivePrivilegeDailyRewardsRsp.prototype.type = 0;

        /**
         * Msg_ReceivePrivilegeDailyRewardsRsp rewards.
         * @member {Array.<proto.IItem>} rewards
         * @memberof proto.Msg_ReceivePrivilegeDailyRewardsRsp
         * @instance
         */
        Msg_ReceivePrivilegeDailyRewardsRsp.prototype.rewards = $util.emptyArray;

        /**
         * Encodes the specified Msg_ReceivePrivilegeDailyRewardsRsp message. Does not implicitly {@link proto.Msg_ReceivePrivilegeDailyRewardsRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_ReceivePrivilegeDailyRewardsRsp
         * @static
         * @param {proto.IMsg_ReceivePrivilegeDailyRewardsRsp} m Msg_ReceivePrivilegeDailyRewardsRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_ReceivePrivilegeDailyRewardsRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.error != null && Object.hasOwnProperty.call(m, "error"))
                $root.proto.CommonError.encode(m.error, w.uint32(10).fork()).ldelim();
            if (m.type != null && Object.hasOwnProperty.call(m, "type"))
                w.uint32(16).int32(m.type);
            if (m.rewards != null && m.rewards.length) {
                for (var i = 0; i < m.rewards.length; ++i)
                    $root.proto.Item.encode(m.rewards[i], w.uint32(26).fork()).ldelim();
            }
            return w;
        };

        /**
         * Decodes a Msg_ReceivePrivilegeDailyRewardsRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_ReceivePrivilegeDailyRewardsRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_ReceivePrivilegeDailyRewardsRsp} Msg_ReceivePrivilegeDailyRewardsRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_ReceivePrivilegeDailyRewardsRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_ReceivePrivilegeDailyRewardsRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.error = $root.proto.CommonError.decode(r, r.uint32());
                    break;
                case 2:
                    m.type = r.int32();
                    break;
                case 3:
                    if (!(m.rewards && m.rewards.length))
                        m.rewards = [];
                    m.rewards.push($root.proto.Item.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_ReceivePrivilegeDailyRewardsRsp;
    })();

    proto.Msg_ReceiveMonthlyPassAdditionalRewardsReq = (function() {

        /**
         * Properties of a Msg_ReceiveMonthlyPassAdditionalRewardsReq.
         * @memberof proto
         * @interface IMsg_ReceiveMonthlyPassAdditionalRewardsReq
         */

        /**
         * Constructs a new Msg_ReceiveMonthlyPassAdditionalRewardsReq.
         * @memberof proto
         * @classdesc Represents a Msg_ReceiveMonthlyPassAdditionalRewardsReq.
         * @implements IMsg_ReceiveMonthlyPassAdditionalRewardsReq
         * @constructor
         * @param {proto.IMsg_ReceiveMonthlyPassAdditionalRewardsReq=} [p] Properties to set
         */
        function Msg_ReceiveMonthlyPassAdditionalRewardsReq(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Encodes the specified Msg_ReceiveMonthlyPassAdditionalRewardsReq message. Does not implicitly {@link proto.Msg_ReceiveMonthlyPassAdditionalRewardsReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_ReceiveMonthlyPassAdditionalRewardsReq
         * @static
         * @param {proto.IMsg_ReceiveMonthlyPassAdditionalRewardsReq} m Msg_ReceiveMonthlyPassAdditionalRewardsReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_ReceiveMonthlyPassAdditionalRewardsReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };

        /**
         * Decodes a Msg_ReceiveMonthlyPassAdditionalRewardsReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_ReceiveMonthlyPassAdditionalRewardsReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_ReceiveMonthlyPassAdditionalRewardsReq} Msg_ReceiveMonthlyPassAdditionalRewardsReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_ReceiveMonthlyPassAdditionalRewardsReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_ReceiveMonthlyPassAdditionalRewardsReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_ReceiveMonthlyPassAdditionalRewardsReq;
    })();

    proto.Msg_ReceiveMonthlyPassAdditionalRewardsRsp = (function() {

        /**
         * Properties of a Msg_ReceiveMonthlyPassAdditionalRewardsRsp.
         * @memberof proto
         * @interface IMsg_ReceiveMonthlyPassAdditionalRewardsRsp
         * @property {proto.ICommonError|null} [error] Msg_ReceiveMonthlyPassAdditionalRewardsRsp error
         * @property {Array.<proto.IItem>|null} [rewards] Msg_ReceiveMonthlyPassAdditionalRewardsRsp rewards
         */

        /**
         * Constructs a new Msg_ReceiveMonthlyPassAdditionalRewardsRsp.
         * @memberof proto
         * @classdesc Represents a Msg_ReceiveMonthlyPassAdditionalRewardsRsp.
         * @implements IMsg_ReceiveMonthlyPassAdditionalRewardsRsp
         * @constructor
         * @param {proto.IMsg_ReceiveMonthlyPassAdditionalRewardsRsp=} [p] Properties to set
         */
        function Msg_ReceiveMonthlyPassAdditionalRewardsRsp(p) {
            this.rewards = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_ReceiveMonthlyPassAdditionalRewardsRsp error.
         * @member {proto.ICommonError|null|undefined} error
         * @memberof proto.Msg_ReceiveMonthlyPassAdditionalRewardsRsp
         * @instance
         */
        Msg_ReceiveMonthlyPassAdditionalRewardsRsp.prototype.error = null;

        /**
         * Msg_ReceiveMonthlyPassAdditionalRewardsRsp rewards.
         * @member {Array.<proto.IItem>} rewards
         * @memberof proto.Msg_ReceiveMonthlyPassAdditionalRewardsRsp
         * @instance
         */
        Msg_ReceiveMonthlyPassAdditionalRewardsRsp.prototype.rewards = $util.emptyArray;

        /**
         * Encodes the specified Msg_ReceiveMonthlyPassAdditionalRewardsRsp message. Does not implicitly {@link proto.Msg_ReceiveMonthlyPassAdditionalRewardsRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_ReceiveMonthlyPassAdditionalRewardsRsp
         * @static
         * @param {proto.IMsg_ReceiveMonthlyPassAdditionalRewardsRsp} m Msg_ReceiveMonthlyPassAdditionalRewardsRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_ReceiveMonthlyPassAdditionalRewardsRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.error != null && Object.hasOwnProperty.call(m, "error"))
                $root.proto.CommonError.encode(m.error, w.uint32(10).fork()).ldelim();
            if (m.rewards != null && m.rewards.length) {
                for (var i = 0; i < m.rewards.length; ++i)
                    $root.proto.Item.encode(m.rewards[i], w.uint32(18).fork()).ldelim();
            }
            return w;
        };

        /**
         * Decodes a Msg_ReceiveMonthlyPassAdditionalRewardsRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_ReceiveMonthlyPassAdditionalRewardsRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_ReceiveMonthlyPassAdditionalRewardsRsp} Msg_ReceiveMonthlyPassAdditionalRewardsRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_ReceiveMonthlyPassAdditionalRewardsRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_ReceiveMonthlyPassAdditionalRewardsRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.error = $root.proto.CommonError.decode(r, r.uint32());
                    break;
                case 2:
                    if (!(m.rewards && m.rewards.length))
                        m.rewards = [];
                    m.rewards.push($root.proto.Item.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_ReceiveMonthlyPassAdditionalRewardsRsp;
    })();

    proto.BattlePass = (function() {

        /**
         * Properties of a BattlePass.
         * @memberof proto
         * @interface IBattlePass
         * @property {number|null} [id] BattlePass id
         * @property {boolean|null} [isBoughtAdvance] BattlePass isBoughtAdvance
         * @property {number|Long|null} [lastResetTime] BattlePass lastResetTime
         * @property {Array.<proto.ITask>|null} [tasks] BattlePass tasks
         * @property {number|Long|null} [activityEndTime] BattlePass activityEndTime
         */

        /**
         * Constructs a new BattlePass.
         * @memberof proto
         * @classdesc Represents a BattlePass.
         * @implements IBattlePass
         * @constructor
         * @param {proto.IBattlePass=} [p] Properties to set
         */
        function BattlePass(p) {
            this.tasks = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * BattlePass id.
         * @member {number} id
         * @memberof proto.BattlePass
         * @instance
         */
        BattlePass.prototype.id = 0;

        /**
         * BattlePass isBoughtAdvance.
         * @member {boolean} isBoughtAdvance
         * @memberof proto.BattlePass
         * @instance
         */
        BattlePass.prototype.isBoughtAdvance = false;

        /**
         * BattlePass lastResetTime.
         * @member {number|Long} lastResetTime
         * @memberof proto.BattlePass
         * @instance
         */
        BattlePass.prototype.lastResetTime = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

        /**
         * BattlePass tasks.
         * @member {Array.<proto.ITask>} tasks
         * @memberof proto.BattlePass
         * @instance
         */
        BattlePass.prototype.tasks = $util.emptyArray;

        /**
         * BattlePass activityEndTime.
         * @member {number|Long} activityEndTime
         * @memberof proto.BattlePass
         * @instance
         */
        BattlePass.prototype.activityEndTime = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

        /**
         * Encodes the specified BattlePass message. Does not implicitly {@link proto.BattlePass.verify|verify} messages.
         * @function encode
         * @memberof proto.BattlePass
         * @static
         * @param {proto.IBattlePass} m BattlePass message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        BattlePass.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.id != null && Object.hasOwnProperty.call(m, "id"))
                w.uint32(8).int32(m.id);
            if (m.isBoughtAdvance != null && Object.hasOwnProperty.call(m, "isBoughtAdvance"))
                w.uint32(16).bool(m.isBoughtAdvance);
            if (m.lastResetTime != null && Object.hasOwnProperty.call(m, "lastResetTime"))
                w.uint32(24).int64(m.lastResetTime);
            if (m.tasks != null && m.tasks.length) {
                for (var i = 0; i < m.tasks.length; ++i)
                    $root.proto.Task.encode(m.tasks[i], w.uint32(34).fork()).ldelim();
            }
            if (m.activityEndTime != null && Object.hasOwnProperty.call(m, "activityEndTime"))
                w.uint32(40).int64(m.activityEndTime);
            return w;
        };

        /**
         * Decodes a BattlePass message from the specified reader or buffer.
         * @function decode
         * @memberof proto.BattlePass
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.BattlePass} BattlePass
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        BattlePass.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.BattlePass();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.id = r.int32();
                    break;
                case 2:
                    m.isBoughtAdvance = r.bool();
                    break;
                case 3:
                    m.lastResetTime = r.int64();
                    break;
                case 4:
                    if (!(m.tasks && m.tasks.length))
                        m.tasks = [];
                    m.tasks.push($root.proto.Task.decode(r, r.uint32()));
                    break;
                case 5:
                    m.activityEndTime = r.int64();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return BattlePass;
    })();

    proto.Msg_GetBattlePassInfoMapReq = (function() {

        /**
         * Properties of a Msg_GetBattlePassInfoMapReq.
         * @memberof proto
         * @interface IMsg_GetBattlePassInfoMapReq
         */

        /**
         * Constructs a new Msg_GetBattlePassInfoMapReq.
         * @memberof proto
         * @classdesc Represents a Msg_GetBattlePassInfoMapReq.
         * @implements IMsg_GetBattlePassInfoMapReq
         * @constructor
         * @param {proto.IMsg_GetBattlePassInfoMapReq=} [p] Properties to set
         */
        function Msg_GetBattlePassInfoMapReq(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Encodes the specified Msg_GetBattlePassInfoMapReq message. Does not implicitly {@link proto.Msg_GetBattlePassInfoMapReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_GetBattlePassInfoMapReq
         * @static
         * @param {proto.IMsg_GetBattlePassInfoMapReq} m Msg_GetBattlePassInfoMapReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_GetBattlePassInfoMapReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };

        /**
         * Decodes a Msg_GetBattlePassInfoMapReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_GetBattlePassInfoMapReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_GetBattlePassInfoMapReq} Msg_GetBattlePassInfoMapReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_GetBattlePassInfoMapReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_GetBattlePassInfoMapReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_GetBattlePassInfoMapReq;
    })();

    proto.Msg_GetBattlePassInfoMapRsp = (function() {

        /**
         * Properties of a Msg_GetBattlePassInfoMapRsp.
         * @memberof proto
         * @interface IMsg_GetBattlePassInfoMapRsp
         * @property {Object.<string,proto.IBattlePass>|null} [battlePassMap] Msg_GetBattlePassInfoMapRsp battlePassMap
         */

        /**
         * Constructs a new Msg_GetBattlePassInfoMapRsp.
         * @memberof proto
         * @classdesc Represents a Msg_GetBattlePassInfoMapRsp.
         * @implements IMsg_GetBattlePassInfoMapRsp
         * @constructor
         * @param {proto.IMsg_GetBattlePassInfoMapRsp=} [p] Properties to set
         */
        function Msg_GetBattlePassInfoMapRsp(p) {
            this.battlePassMap = {};
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_GetBattlePassInfoMapRsp battlePassMap.
         * @member {Object.<string,proto.IBattlePass>} battlePassMap
         * @memberof proto.Msg_GetBattlePassInfoMapRsp
         * @instance
         */
        Msg_GetBattlePassInfoMapRsp.prototype.battlePassMap = $util.emptyObject;

        /**
         * Encodes the specified Msg_GetBattlePassInfoMapRsp message. Does not implicitly {@link proto.Msg_GetBattlePassInfoMapRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_GetBattlePassInfoMapRsp
         * @static
         * @param {proto.IMsg_GetBattlePassInfoMapRsp} m Msg_GetBattlePassInfoMapRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_GetBattlePassInfoMapRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.battlePassMap != null && Object.hasOwnProperty.call(m, "battlePassMap")) {
                for (var ks = Object.keys(m.battlePassMap), i = 0; i < ks.length; ++i) {
                    w.uint32(10).fork().uint32(8).int32(ks[i]);
                    $root.proto.BattlePass.encode(m.battlePassMap[ks[i]], w.uint32(18).fork()).ldelim().ldelim();
                }
            }
            return w;
        };

        /**
         * Decodes a Msg_GetBattlePassInfoMapRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_GetBattlePassInfoMapRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_GetBattlePassInfoMapRsp} Msg_GetBattlePassInfoMapRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_GetBattlePassInfoMapRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_GetBattlePassInfoMapRsp(), k, value;
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (m.battlePassMap === $util.emptyObject)
                        m.battlePassMap = {};
                    var c2 = r.uint32() + r.pos;
                    k = 0;
                    value = null;
                    while (r.pos < c2) {
                        var tag2 = r.uint32();
                        switch (tag2 >>> 3) {
                        case 1:
                            k = r.int32();
                            break;
                        case 2:
                            value = $root.proto.BattlePass.decode(r, r.uint32());
                            break;
                        default:
                            r.skipType(tag2 & 7);
                            break;
                        }
                    }
                    m.battlePassMap[k] = value;
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_GetBattlePassInfoMapRsp;
    })();

    proto.Msg_ReceiveBattlePassTaskRewardsReq = (function() {

        /**
         * Properties of a Msg_ReceiveBattlePassTaskRewardsReq.
         * @memberof proto
         * @interface IMsg_ReceiveBattlePassTaskRewardsReq
         * @property {number|null} [id] Msg_ReceiveBattlePassTaskRewardsReq id
         * @property {Array.<number>|null} [taskIds] Msg_ReceiveBattlePassTaskRewardsReq taskIds
         */

        /**
         * Constructs a new Msg_ReceiveBattlePassTaskRewardsReq.
         * @memberof proto
         * @classdesc Represents a Msg_ReceiveBattlePassTaskRewardsReq.
         * @implements IMsg_ReceiveBattlePassTaskRewardsReq
         * @constructor
         * @param {proto.IMsg_ReceiveBattlePassTaskRewardsReq=} [p] Properties to set
         */
        function Msg_ReceiveBattlePassTaskRewardsReq(p) {
            this.taskIds = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_ReceiveBattlePassTaskRewardsReq id.
         * @member {number} id
         * @memberof proto.Msg_ReceiveBattlePassTaskRewardsReq
         * @instance
         */
        Msg_ReceiveBattlePassTaskRewardsReq.prototype.id = 0;

        /**
         * Msg_ReceiveBattlePassTaskRewardsReq taskIds.
         * @member {Array.<number>} taskIds
         * @memberof proto.Msg_ReceiveBattlePassTaskRewardsReq
         * @instance
         */
        Msg_ReceiveBattlePassTaskRewardsReq.prototype.taskIds = $util.emptyArray;

        /**
         * Encodes the specified Msg_ReceiveBattlePassTaskRewardsReq message. Does not implicitly {@link proto.Msg_ReceiveBattlePassTaskRewardsReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_ReceiveBattlePassTaskRewardsReq
         * @static
         * @param {proto.IMsg_ReceiveBattlePassTaskRewardsReq} m Msg_ReceiveBattlePassTaskRewardsReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_ReceiveBattlePassTaskRewardsReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.id != null && Object.hasOwnProperty.call(m, "id"))
                w.uint32(8).int32(m.id);
            if (m.taskIds != null && m.taskIds.length) {
                w.uint32(18).fork();
                for (var i = 0; i < m.taskIds.length; ++i)
                    w.int32(m.taskIds[i]);
                w.ldelim();
            }
            return w;
        };

        /**
         * Decodes a Msg_ReceiveBattlePassTaskRewardsReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_ReceiveBattlePassTaskRewardsReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_ReceiveBattlePassTaskRewardsReq} Msg_ReceiveBattlePassTaskRewardsReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_ReceiveBattlePassTaskRewardsReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_ReceiveBattlePassTaskRewardsReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.id = r.int32();
                    break;
                case 2:
                    if (!(m.taskIds && m.taskIds.length))
                        m.taskIds = [];
                    if ((t & 7) === 2) {
                        var c2 = r.uint32() + r.pos;
                        while (r.pos < c2)
                            m.taskIds.push(r.int32());
                    } else
                        m.taskIds.push(r.int32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_ReceiveBattlePassTaskRewardsReq;
    })();

    proto.Msg_ReceiveBattlePassTaskRewardsRsp = (function() {

        /**
         * Properties of a Msg_ReceiveBattlePassTaskRewardsRsp.
         * @memberof proto
         * @interface IMsg_ReceiveBattlePassTaskRewardsRsp
         * @property {proto.ICommonError|null} [error] Msg_ReceiveBattlePassTaskRewardsRsp error
         * @property {number|null} [id] Msg_ReceiveBattlePassTaskRewardsRsp id
         * @property {Array.<proto.ITask>|null} [tasks] Msg_ReceiveBattlePassTaskRewardsRsp tasks
         * @property {Array.<proto.IItem>|null} [rewards] Msg_ReceiveBattlePassTaskRewardsRsp rewards
         */

        /**
         * Constructs a new Msg_ReceiveBattlePassTaskRewardsRsp.
         * @memberof proto
         * @classdesc Represents a Msg_ReceiveBattlePassTaskRewardsRsp.
         * @implements IMsg_ReceiveBattlePassTaskRewardsRsp
         * @constructor
         * @param {proto.IMsg_ReceiveBattlePassTaskRewardsRsp=} [p] Properties to set
         */
        function Msg_ReceiveBattlePassTaskRewardsRsp(p) {
            this.tasks = [];
            this.rewards = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_ReceiveBattlePassTaskRewardsRsp error.
         * @member {proto.ICommonError|null|undefined} error
         * @memberof proto.Msg_ReceiveBattlePassTaskRewardsRsp
         * @instance
         */
        Msg_ReceiveBattlePassTaskRewardsRsp.prototype.error = null;

        /**
         * Msg_ReceiveBattlePassTaskRewardsRsp id.
         * @member {number} id
         * @memberof proto.Msg_ReceiveBattlePassTaskRewardsRsp
         * @instance
         */
        Msg_ReceiveBattlePassTaskRewardsRsp.prototype.id = 0;

        /**
         * Msg_ReceiveBattlePassTaskRewardsRsp tasks.
         * @member {Array.<proto.ITask>} tasks
         * @memberof proto.Msg_ReceiveBattlePassTaskRewardsRsp
         * @instance
         */
        Msg_ReceiveBattlePassTaskRewardsRsp.prototype.tasks = $util.emptyArray;

        /**
         * Msg_ReceiveBattlePassTaskRewardsRsp rewards.
         * @member {Array.<proto.IItem>} rewards
         * @memberof proto.Msg_ReceiveBattlePassTaskRewardsRsp
         * @instance
         */
        Msg_ReceiveBattlePassTaskRewardsRsp.prototype.rewards = $util.emptyArray;

        /**
         * Encodes the specified Msg_ReceiveBattlePassTaskRewardsRsp message. Does not implicitly {@link proto.Msg_ReceiveBattlePassTaskRewardsRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_ReceiveBattlePassTaskRewardsRsp
         * @static
         * @param {proto.IMsg_ReceiveBattlePassTaskRewardsRsp} m Msg_ReceiveBattlePassTaskRewardsRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_ReceiveBattlePassTaskRewardsRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.error != null && Object.hasOwnProperty.call(m, "error"))
                $root.proto.CommonError.encode(m.error, w.uint32(10).fork()).ldelim();
            if (m.id != null && Object.hasOwnProperty.call(m, "id"))
                w.uint32(16).int32(m.id);
            if (m.tasks != null && m.tasks.length) {
                for (var i = 0; i < m.tasks.length; ++i)
                    $root.proto.Task.encode(m.tasks[i], w.uint32(26).fork()).ldelim();
            }
            if (m.rewards != null && m.rewards.length) {
                for (var i = 0; i < m.rewards.length; ++i)
                    $root.proto.Item.encode(m.rewards[i], w.uint32(34).fork()).ldelim();
            }
            return w;
        };

        /**
         * Decodes a Msg_ReceiveBattlePassTaskRewardsRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_ReceiveBattlePassTaskRewardsRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_ReceiveBattlePassTaskRewardsRsp} Msg_ReceiveBattlePassTaskRewardsRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_ReceiveBattlePassTaskRewardsRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_ReceiveBattlePassTaskRewardsRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.error = $root.proto.CommonError.decode(r, r.uint32());
                    break;
                case 2:
                    m.id = r.int32();
                    break;
                case 3:
                    if (!(m.tasks && m.tasks.length))
                        m.tasks = [];
                    m.tasks.push($root.proto.Task.decode(r, r.uint32()));
                    break;
                case 4:
                    if (!(m.rewards && m.rewards.length))
                        m.rewards = [];
                    m.rewards.push($root.proto.Item.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_ReceiveBattlePassTaskRewardsRsp;
    })();

    proto.Msg_BuyBattlePassLevelReq = (function() {

        /**
         * Properties of a Msg_BuyBattlePassLevelReq.
         * @memberof proto
         * @interface IMsg_BuyBattlePassLevelReq
         * @property {number|null} [id] Msg_BuyBattlePassLevelReq id
         */

        /**
         * Constructs a new Msg_BuyBattlePassLevelReq.
         * @memberof proto
         * @classdesc Represents a Msg_BuyBattlePassLevelReq.
         * @implements IMsg_BuyBattlePassLevelReq
         * @constructor
         * @param {proto.IMsg_BuyBattlePassLevelReq=} [p] Properties to set
         */
        function Msg_BuyBattlePassLevelReq(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_BuyBattlePassLevelReq id.
         * @member {number} id
         * @memberof proto.Msg_BuyBattlePassLevelReq
         * @instance
         */
        Msg_BuyBattlePassLevelReq.prototype.id = 0;

        /**
         * Encodes the specified Msg_BuyBattlePassLevelReq message. Does not implicitly {@link proto.Msg_BuyBattlePassLevelReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_BuyBattlePassLevelReq
         * @static
         * @param {proto.IMsg_BuyBattlePassLevelReq} m Msg_BuyBattlePassLevelReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_BuyBattlePassLevelReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.id != null && Object.hasOwnProperty.call(m, "id"))
                w.uint32(8).int32(m.id);
            return w;
        };

        /**
         * Decodes a Msg_BuyBattlePassLevelReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_BuyBattlePassLevelReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_BuyBattlePassLevelReq} Msg_BuyBattlePassLevelReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_BuyBattlePassLevelReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_BuyBattlePassLevelReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.id = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_BuyBattlePassLevelReq;
    })();

    proto.Msg_BuyBattlePassLevelRsp = (function() {

        /**
         * Properties of a Msg_BuyBattlePassLevelRsp.
         * @memberof proto
         * @interface IMsg_BuyBattlePassLevelRsp
         * @property {proto.ICommonError|null} [error] Msg_BuyBattlePassLevelRsp error
         * @property {number|null} [id] Msg_BuyBattlePassLevelRsp id
         * @property {number|null} [progress] Msg_BuyBattlePassLevelRsp progress
         */

        /**
         * Constructs a new Msg_BuyBattlePassLevelRsp.
         * @memberof proto
         * @classdesc Represents a Msg_BuyBattlePassLevelRsp.
         * @implements IMsg_BuyBattlePassLevelRsp
         * @constructor
         * @param {proto.IMsg_BuyBattlePassLevelRsp=} [p] Properties to set
         */
        function Msg_BuyBattlePassLevelRsp(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_BuyBattlePassLevelRsp error.
         * @member {proto.ICommonError|null|undefined} error
         * @memberof proto.Msg_BuyBattlePassLevelRsp
         * @instance
         */
        Msg_BuyBattlePassLevelRsp.prototype.error = null;

        /**
         * Msg_BuyBattlePassLevelRsp id.
         * @member {number} id
         * @memberof proto.Msg_BuyBattlePassLevelRsp
         * @instance
         */
        Msg_BuyBattlePassLevelRsp.prototype.id = 0;

        /**
         * Msg_BuyBattlePassLevelRsp progress.
         * @member {number} progress
         * @memberof proto.Msg_BuyBattlePassLevelRsp
         * @instance
         */
        Msg_BuyBattlePassLevelRsp.prototype.progress = 0;

        /**
         * Encodes the specified Msg_BuyBattlePassLevelRsp message. Does not implicitly {@link proto.Msg_BuyBattlePassLevelRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_BuyBattlePassLevelRsp
         * @static
         * @param {proto.IMsg_BuyBattlePassLevelRsp} m Msg_BuyBattlePassLevelRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_BuyBattlePassLevelRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.error != null && Object.hasOwnProperty.call(m, "error"))
                $root.proto.CommonError.encode(m.error, w.uint32(10).fork()).ldelim();
            if (m.id != null && Object.hasOwnProperty.call(m, "id"))
                w.uint32(16).int32(m.id);
            if (m.progress != null && Object.hasOwnProperty.call(m, "progress"))
                w.uint32(24).int32(m.progress);
            return w;
        };

        /**
         * Decodes a Msg_BuyBattlePassLevelRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_BuyBattlePassLevelRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_BuyBattlePassLevelRsp} Msg_BuyBattlePassLevelRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_BuyBattlePassLevelRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_BuyBattlePassLevelRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.error = $root.proto.CommonError.decode(r, r.uint32());
                    break;
                case 2:
                    m.id = r.int32();
                    break;
                case 3:
                    m.progress = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_BuyBattlePassLevelRsp;
    })();

    proto.BuyGoldHistory = (function() {

        /**
         * Properties of a BuyGoldHistory.
         * @memberof proto
         * @interface IBuyGoldHistory
         * @property {number|null} [type] BuyGoldHistory type
         * @property {number|null} [count] BuyGoldHistory count
         */

        /**
         * Constructs a new BuyGoldHistory.
         * @memberof proto
         * @classdesc Represents a BuyGoldHistory.
         * @implements IBuyGoldHistory
         * @constructor
         * @param {proto.IBuyGoldHistory=} [p] Properties to set
         */
        function BuyGoldHistory(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * BuyGoldHistory type.
         * @member {number} type
         * @memberof proto.BuyGoldHistory
         * @instance
         */
        BuyGoldHistory.prototype.type = 0;

        /**
         * BuyGoldHistory count.
         * @member {number} count
         * @memberof proto.BuyGoldHistory
         * @instance
         */
        BuyGoldHistory.prototype.count = 0;

        /**
         * Encodes the specified BuyGoldHistory message. Does not implicitly {@link proto.BuyGoldHistory.verify|verify} messages.
         * @function encode
         * @memberof proto.BuyGoldHistory
         * @static
         * @param {proto.IBuyGoldHistory} m BuyGoldHistory message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        BuyGoldHistory.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.type != null && Object.hasOwnProperty.call(m, "type"))
                w.uint32(8).int32(m.type);
            if (m.count != null && Object.hasOwnProperty.call(m, "count"))
                w.uint32(16).int32(m.count);
            return w;
        };

        /**
         * Decodes a BuyGoldHistory message from the specified reader or buffer.
         * @function decode
         * @memberof proto.BuyGoldHistory
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.BuyGoldHistory} BuyGoldHistory
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        BuyGoldHistory.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.BuyGoldHistory();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.type = r.int32();
                    break;
                case 2:
                    m.count = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return BuyGoldHistory;
    })();

    proto.Msg_BuyGoldReq = (function() {

        /**
         * Properties of a Msg_BuyGoldReq.
         * @memberof proto
         * @interface IMsg_BuyGoldReq
         * @property {number|null} [type] Msg_BuyGoldReq type
         */

        /**
         * Constructs a new Msg_BuyGoldReq.
         * @memberof proto
         * @classdesc Represents a Msg_BuyGoldReq.
         * @implements IMsg_BuyGoldReq
         * @constructor
         * @param {proto.IMsg_BuyGoldReq=} [p] Properties to set
         */
        function Msg_BuyGoldReq(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_BuyGoldReq type.
         * @member {number} type
         * @memberof proto.Msg_BuyGoldReq
         * @instance
         */
        Msg_BuyGoldReq.prototype.type = 0;

        /**
         * Encodes the specified Msg_BuyGoldReq message. Does not implicitly {@link proto.Msg_BuyGoldReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_BuyGoldReq
         * @static
         * @param {proto.IMsg_BuyGoldReq} m Msg_BuyGoldReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_BuyGoldReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.type != null && Object.hasOwnProperty.call(m, "type"))
                w.uint32(8).int32(m.type);
            return w;
        };

        /**
         * Decodes a Msg_BuyGoldReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_BuyGoldReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_BuyGoldReq} Msg_BuyGoldReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_BuyGoldReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_BuyGoldReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.type = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_BuyGoldReq;
    })();

    proto.Msg_BuyGoldRsp = (function() {

        /**
         * Properties of a Msg_BuyGoldRsp.
         * @memberof proto
         * @interface IMsg_BuyGoldRsp
         * @property {proto.ICommonError|null} [error] Msg_BuyGoldRsp error
         * @property {proto.IBuyGoldHistory|null} [history] Msg_BuyGoldRsp history
         * @property {Array.<proto.IItem>|null} [items] Msg_BuyGoldRsp items
         */

        /**
         * Constructs a new Msg_BuyGoldRsp.
         * @memberof proto
         * @classdesc Represents a Msg_BuyGoldRsp.
         * @implements IMsg_BuyGoldRsp
         * @constructor
         * @param {proto.IMsg_BuyGoldRsp=} [p] Properties to set
         */
        function Msg_BuyGoldRsp(p) {
            this.items = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_BuyGoldRsp error.
         * @member {proto.ICommonError|null|undefined} error
         * @memberof proto.Msg_BuyGoldRsp
         * @instance
         */
        Msg_BuyGoldRsp.prototype.error = null;

        /**
         * Msg_BuyGoldRsp history.
         * @member {proto.IBuyGoldHistory|null|undefined} history
         * @memberof proto.Msg_BuyGoldRsp
         * @instance
         */
        Msg_BuyGoldRsp.prototype.history = null;

        /**
         * Msg_BuyGoldRsp items.
         * @member {Array.<proto.IItem>} items
         * @memberof proto.Msg_BuyGoldRsp
         * @instance
         */
        Msg_BuyGoldRsp.prototype.items = $util.emptyArray;

        /**
         * Encodes the specified Msg_BuyGoldRsp message. Does not implicitly {@link proto.Msg_BuyGoldRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_BuyGoldRsp
         * @static
         * @param {proto.IMsg_BuyGoldRsp} m Msg_BuyGoldRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_BuyGoldRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.error != null && Object.hasOwnProperty.call(m, "error"))
                $root.proto.CommonError.encode(m.error, w.uint32(10).fork()).ldelim();
            if (m.history != null && Object.hasOwnProperty.call(m, "history"))
                $root.proto.BuyGoldHistory.encode(m.history, w.uint32(18).fork()).ldelim();
            if (m.items != null && m.items.length) {
                for (var i = 0; i < m.items.length; ++i)
                    $root.proto.Item.encode(m.items[i], w.uint32(26).fork()).ldelim();
            }
            return w;
        };

        /**
         * Decodes a Msg_BuyGoldRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_BuyGoldRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_BuyGoldRsp} Msg_BuyGoldRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_BuyGoldRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_BuyGoldRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.error = $root.proto.CommonError.decode(r, r.uint32());
                    break;
                case 2:
                    m.history = $root.proto.BuyGoldHistory.decode(r, r.uint32());
                    break;
                case 3:
                    if (!(m.items && m.items.length))
                        m.items = [];
                    m.items.push($root.proto.Item.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_BuyGoldRsp;
    })();

    proto.Msg_ClientDebugPush = (function() {

        /**
         * Properties of a Msg_ClientDebugPush.
         * @memberof proto
         * @interface IMsg_ClientDebugPush
         * @property {string|null} [log] Msg_ClientDebugPush log
         */

        /**
         * Constructs a new Msg_ClientDebugPush.
         * @memberof proto
         * @classdesc Represents a Msg_ClientDebugPush.
         * @implements IMsg_ClientDebugPush
         * @constructor
         * @param {proto.IMsg_ClientDebugPush=} [p] Properties to set
         */
        function Msg_ClientDebugPush(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_ClientDebugPush log.
         * @member {string} log
         * @memberof proto.Msg_ClientDebugPush
         * @instance
         */
        Msg_ClientDebugPush.prototype.log = "";

        /**
         * Encodes the specified Msg_ClientDebugPush message. Does not implicitly {@link proto.Msg_ClientDebugPush.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_ClientDebugPush
         * @static
         * @param {proto.IMsg_ClientDebugPush} m Msg_ClientDebugPush message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_ClientDebugPush.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.log != null && Object.hasOwnProperty.call(m, "log"))
                w.uint32(10).string(m.log);
            return w;
        };

        /**
         * Decodes a Msg_ClientDebugPush message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_ClientDebugPush
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_ClientDebugPush} Msg_ClientDebugPush
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_ClientDebugPush.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_ClientDebugPush();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.log = r.string();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_ClientDebugPush;
    })();

    proto.Msg_VipBonusPush = (function() {

        /**
         * Properties of a Msg_VipBonusPush.
         * @memberof proto
         * @interface IMsg_VipBonusPush
         * @property {Object.<string,number>|null} [vipBonusMap] Msg_VipBonusPush vipBonusMap
         */

        /**
         * Constructs a new Msg_VipBonusPush.
         * @memberof proto
         * @classdesc Represents a Msg_VipBonusPush.
         * @implements IMsg_VipBonusPush
         * @constructor
         * @param {proto.IMsg_VipBonusPush=} [p] Properties to set
         */
        function Msg_VipBonusPush(p) {
            this.vipBonusMap = {};
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_VipBonusPush vipBonusMap.
         * @member {Object.<string,number>} vipBonusMap
         * @memberof proto.Msg_VipBonusPush
         * @instance
         */
        Msg_VipBonusPush.prototype.vipBonusMap = $util.emptyObject;

        /**
         * Encodes the specified Msg_VipBonusPush message. Does not implicitly {@link proto.Msg_VipBonusPush.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_VipBonusPush
         * @static
         * @param {proto.IMsg_VipBonusPush} m Msg_VipBonusPush message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_VipBonusPush.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.vipBonusMap != null && Object.hasOwnProperty.call(m, "vipBonusMap")) {
                for (var ks = Object.keys(m.vipBonusMap), i = 0; i < ks.length; ++i) {
                    w.uint32(10).fork().uint32(8).int32(ks[i]).uint32(16).int32(m.vipBonusMap[ks[i]]).ldelim();
                }
            }
            return w;
        };

        /**
         * Decodes a Msg_VipBonusPush message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_VipBonusPush
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_VipBonusPush} Msg_VipBonusPush
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_VipBonusPush.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_VipBonusPush(), k, value;
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (m.vipBonusMap === $util.emptyObject)
                        m.vipBonusMap = {};
                    var c2 = r.uint32() + r.pos;
                    k = 0;
                    value = 0;
                    while (r.pos < c2) {
                        var tag2 = r.uint32();
                        switch (tag2 >>> 3) {
                        case 1:
                            k = r.int32();
                            break;
                        case 2:
                            value = r.int32();
                            break;
                        default:
                            r.skipType(tag2 & 7);
                            break;
                        }
                    }
                    m.vipBonusMap[k] = value;
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_VipBonusPush;
    })();

    proto.Msg_VipLevelUpPush = (function() {

        /**
         * Properties of a Msg_VipLevelUpPush.
         * @memberof proto
         * @interface IMsg_VipLevelUpPush
         * @property {number|null} [vipLevel] Msg_VipLevelUpPush vipLevel
         */

        /**
         * Constructs a new Msg_VipLevelUpPush.
         * @memberof proto
         * @classdesc Represents a Msg_VipLevelUpPush.
         * @implements IMsg_VipLevelUpPush
         * @constructor
         * @param {proto.IMsg_VipLevelUpPush=} [p] Properties to set
         */
        function Msg_VipLevelUpPush(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_VipLevelUpPush vipLevel.
         * @member {number} vipLevel
         * @memberof proto.Msg_VipLevelUpPush
         * @instance
         */
        Msg_VipLevelUpPush.prototype.vipLevel = 0;

        /**
         * Encodes the specified Msg_VipLevelUpPush message. Does not implicitly {@link proto.Msg_VipLevelUpPush.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_VipLevelUpPush
         * @static
         * @param {proto.IMsg_VipLevelUpPush} m Msg_VipLevelUpPush message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_VipLevelUpPush.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.vipLevel != null && Object.hasOwnProperty.call(m, "vipLevel"))
                w.uint32(8).int32(m.vipLevel);
            return w;
        };

        /**
         * Decodes a Msg_VipLevelUpPush message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_VipLevelUpPush
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_VipLevelUpPush} Msg_VipLevelUpPush
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_VipLevelUpPush.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_VipLevelUpPush();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.vipLevel = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_VipLevelUpPush;
    })();

    proto.Msg_WorldBossDataPush = (function() {

        /**
         * Properties of a Msg_WorldBossDataPush.
         * @memberof proto
         * @interface IMsg_WorldBossDataPush
         * @property {number|Long|null} [maxScore] Msg_WorldBossDataPush maxScore
         * @property {number|Long|null} [totalScore] Msg_WorldBossDataPush totalScore
         * @property {number|null} [ranking] Msg_WorldBossDataPush ranking
         * @property {number|null} [challengeCount] Msg_WorldBossDataPush challengeCount
         */

        /**
         * Constructs a new Msg_WorldBossDataPush.
         * @memberof proto
         * @classdesc Represents a Msg_WorldBossDataPush.
         * @implements IMsg_WorldBossDataPush
         * @constructor
         * @param {proto.IMsg_WorldBossDataPush=} [p] Properties to set
         */
        function Msg_WorldBossDataPush(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_WorldBossDataPush maxScore.
         * @member {number|Long} maxScore
         * @memberof proto.Msg_WorldBossDataPush
         * @instance
         */
        Msg_WorldBossDataPush.prototype.maxScore = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

        /**
         * Msg_WorldBossDataPush totalScore.
         * @member {number|Long} totalScore
         * @memberof proto.Msg_WorldBossDataPush
         * @instance
         */
        Msg_WorldBossDataPush.prototype.totalScore = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

        /**
         * Msg_WorldBossDataPush ranking.
         * @member {number} ranking
         * @memberof proto.Msg_WorldBossDataPush
         * @instance
         */
        Msg_WorldBossDataPush.prototype.ranking = 0;

        /**
         * Msg_WorldBossDataPush challengeCount.
         * @member {number} challengeCount
         * @memberof proto.Msg_WorldBossDataPush
         * @instance
         */
        Msg_WorldBossDataPush.prototype.challengeCount = 0;

        /**
         * Encodes the specified Msg_WorldBossDataPush message. Does not implicitly {@link proto.Msg_WorldBossDataPush.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_WorldBossDataPush
         * @static
         * @param {proto.IMsg_WorldBossDataPush} m Msg_WorldBossDataPush message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_WorldBossDataPush.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.maxScore != null && Object.hasOwnProperty.call(m, "maxScore"))
                w.uint32(8).int64(m.maxScore);
            if (m.totalScore != null && Object.hasOwnProperty.call(m, "totalScore"))
                w.uint32(16).int64(m.totalScore);
            if (m.ranking != null && Object.hasOwnProperty.call(m, "ranking"))
                w.uint32(24).int32(m.ranking);
            if (m.challengeCount != null && Object.hasOwnProperty.call(m, "challengeCount"))
                w.uint32(32).int32(m.challengeCount);
            return w;
        };

        /**
         * Decodes a Msg_WorldBossDataPush message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_WorldBossDataPush
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_WorldBossDataPush} Msg_WorldBossDataPush
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_WorldBossDataPush.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_WorldBossDataPush();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.maxScore = r.int64();
                    break;
                case 2:
                    m.totalScore = r.int64();
                    break;
                case 3:
                    m.ranking = r.int32();
                    break;
                case 4:
                    m.challengeCount = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_WorldBossDataPush;
    })();

    proto.Msg_WorldBossSweepReq = (function() {

        /**
         * Properties of a Msg_WorldBossSweepReq.
         * @memberof proto
         * @interface IMsg_WorldBossSweepReq
         */

        /**
         * Constructs a new Msg_WorldBossSweepReq.
         * @memberof proto
         * @classdesc Represents a Msg_WorldBossSweepReq.
         * @implements IMsg_WorldBossSweepReq
         * @constructor
         * @param {proto.IMsg_WorldBossSweepReq=} [p] Properties to set
         */
        function Msg_WorldBossSweepReq(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Encodes the specified Msg_WorldBossSweepReq message. Does not implicitly {@link proto.Msg_WorldBossSweepReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_WorldBossSweepReq
         * @static
         * @param {proto.IMsg_WorldBossSweepReq} m Msg_WorldBossSweepReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_WorldBossSweepReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };

        /**
         * Decodes a Msg_WorldBossSweepReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_WorldBossSweepReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_WorldBossSweepReq} Msg_WorldBossSweepReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_WorldBossSweepReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_WorldBossSweepReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_WorldBossSweepReq;
    })();

    proto.Msg_WorldBossSweepRsp = (function() {

        /**
         * Properties of a Msg_WorldBossSweepRsp.
         * @memberof proto
         * @interface IMsg_WorldBossSweepRsp
         * @property {proto.ICommonError|null} [error] Msg_WorldBossSweepRsp error
         * @property {proto.IMsg_WorldBossDataPush|null} [data] Msg_WorldBossSweepRsp data
         */

        /**
         * Constructs a new Msg_WorldBossSweepRsp.
         * @memberof proto
         * @classdesc Represents a Msg_WorldBossSweepRsp.
         * @implements IMsg_WorldBossSweepRsp
         * @constructor
         * @param {proto.IMsg_WorldBossSweepRsp=} [p] Properties to set
         */
        function Msg_WorldBossSweepRsp(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_WorldBossSweepRsp error.
         * @member {proto.ICommonError|null|undefined} error
         * @memberof proto.Msg_WorldBossSweepRsp
         * @instance
         */
        Msg_WorldBossSweepRsp.prototype.error = null;

        /**
         * Msg_WorldBossSweepRsp data.
         * @member {proto.IMsg_WorldBossDataPush|null|undefined} data
         * @memberof proto.Msg_WorldBossSweepRsp
         * @instance
         */
        Msg_WorldBossSweepRsp.prototype.data = null;

        /**
         * Encodes the specified Msg_WorldBossSweepRsp message. Does not implicitly {@link proto.Msg_WorldBossSweepRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_WorldBossSweepRsp
         * @static
         * @param {proto.IMsg_WorldBossSweepRsp} m Msg_WorldBossSweepRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_WorldBossSweepRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.error != null && Object.hasOwnProperty.call(m, "error"))
                $root.proto.CommonError.encode(m.error, w.uint32(10).fork()).ldelim();
            if (m.data != null && Object.hasOwnProperty.call(m, "data"))
                $root.proto.Msg_WorldBossDataPush.encode(m.data, w.uint32(18).fork()).ldelim();
            return w;
        };

        /**
         * Decodes a Msg_WorldBossSweepRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_WorldBossSweepRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_WorldBossSweepRsp} Msg_WorldBossSweepRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_WorldBossSweepRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_WorldBossSweepRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.error = $root.proto.CommonError.decode(r, r.uint32());
                    break;
                case 2:
                    m.data = $root.proto.Msg_WorldBossDataPush.decode(r, r.uint32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_WorldBossSweepRsp;
    })();

    proto.DailyChallengeData = (function() {

        /**
         * Properties of a DailyChallengeData.
         * @memberof proto
         * @interface IDailyChallengeData
         * @property {number|null} [level] DailyChallengeData level
         * @property {number|Long|null} [cd] DailyChallengeData cd
         * @property {number|null} [score] DailyChallengeData score
         * @property {number|null} [receivedScore] DailyChallengeData receivedScore
         * @property {number|null} [maxScore] DailyChallengeData maxScore
         * @property {number|null} [challengeCount] DailyChallengeData challengeCount
         * @property {number|null} [challengeTotalCount] DailyChallengeData challengeTotalCount
         */

        /**
         * Constructs a new DailyChallengeData.
         * @memberof proto
         * @classdesc Represents a DailyChallengeData.
         * @implements IDailyChallengeData
         * @constructor
         * @param {proto.IDailyChallengeData=} [p] Properties to set
         */
        function DailyChallengeData(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * DailyChallengeData level.
         * @member {number} level
         * @memberof proto.DailyChallengeData
         * @instance
         */
        DailyChallengeData.prototype.level = 0;

        /**
         * DailyChallengeData cd.
         * @member {number|Long} cd
         * @memberof proto.DailyChallengeData
         * @instance
         */
        DailyChallengeData.prototype.cd = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

        /**
         * DailyChallengeData score.
         * @member {number} score
         * @memberof proto.DailyChallengeData
         * @instance
         */
        DailyChallengeData.prototype.score = 0;

        /**
         * DailyChallengeData receivedScore.
         * @member {number} receivedScore
         * @memberof proto.DailyChallengeData
         * @instance
         */
        DailyChallengeData.prototype.receivedScore = 0;

        /**
         * DailyChallengeData maxScore.
         * @member {number} maxScore
         * @memberof proto.DailyChallengeData
         * @instance
         */
        DailyChallengeData.prototype.maxScore = 0;

        /**
         * DailyChallengeData challengeCount.
         * @member {number} challengeCount
         * @memberof proto.DailyChallengeData
         * @instance
         */
        DailyChallengeData.prototype.challengeCount = 0;

        /**
         * DailyChallengeData challengeTotalCount.
         * @member {number} challengeTotalCount
         * @memberof proto.DailyChallengeData
         * @instance
         */
        DailyChallengeData.prototype.challengeTotalCount = 0;

        /**
         * Encodes the specified DailyChallengeData message. Does not implicitly {@link proto.DailyChallengeData.verify|verify} messages.
         * @function encode
         * @memberof proto.DailyChallengeData
         * @static
         * @param {proto.IDailyChallengeData} m DailyChallengeData message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        DailyChallengeData.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.level != null && Object.hasOwnProperty.call(m, "level"))
                w.uint32(8).int32(m.level);
            if (m.cd != null && Object.hasOwnProperty.call(m, "cd"))
                w.uint32(16).int64(m.cd);
            if (m.score != null && Object.hasOwnProperty.call(m, "score"))
                w.uint32(24).int32(m.score);
            if (m.receivedScore != null && Object.hasOwnProperty.call(m, "receivedScore"))
                w.uint32(32).int32(m.receivedScore);
            if (m.maxScore != null && Object.hasOwnProperty.call(m, "maxScore"))
                w.uint32(40).int32(m.maxScore);
            if (m.challengeCount != null && Object.hasOwnProperty.call(m, "challengeCount"))
                w.uint32(48).int32(m.challengeCount);
            if (m.challengeTotalCount != null && Object.hasOwnProperty.call(m, "challengeTotalCount"))
                w.uint32(56).int32(m.challengeTotalCount);
            return w;
        };

        /**
         * Decodes a DailyChallengeData message from the specified reader or buffer.
         * @function decode
         * @memberof proto.DailyChallengeData
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.DailyChallengeData} DailyChallengeData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        DailyChallengeData.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.DailyChallengeData();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.level = r.int32();
                    break;
                case 2:
                    m.cd = r.int64();
                    break;
                case 3:
                    m.score = r.int32();
                    break;
                case 4:
                    m.receivedScore = r.int32();
                    break;
                case 5:
                    m.maxScore = r.int32();
                    break;
                case 6:
                    m.challengeCount = r.int32();
                    break;
                case 7:
                    m.challengeTotalCount = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return DailyChallengeData;
    })();

    proto.Msg_DailyChallengeLevelReq = (function() {

        /**
         * Properties of a Msg_DailyChallengeLevelReq.
         * @memberof proto
         * @interface IMsg_DailyChallengeLevelReq
         * @property {number|null} [newLevel] Msg_DailyChallengeLevelReq newLevel
         */

        /**
         * Constructs a new Msg_DailyChallengeLevelReq.
         * @memberof proto
         * @classdesc Represents a Msg_DailyChallengeLevelReq.
         * @implements IMsg_DailyChallengeLevelReq
         * @constructor
         * @param {proto.IMsg_DailyChallengeLevelReq=} [p] Properties to set
         */
        function Msg_DailyChallengeLevelReq(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_DailyChallengeLevelReq newLevel.
         * @member {number} newLevel
         * @memberof proto.Msg_DailyChallengeLevelReq
         * @instance
         */
        Msg_DailyChallengeLevelReq.prototype.newLevel = 0;

        /**
         * Encodes the specified Msg_DailyChallengeLevelReq message. Does not implicitly {@link proto.Msg_DailyChallengeLevelReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_DailyChallengeLevelReq
         * @static
         * @param {proto.IMsg_DailyChallengeLevelReq} m Msg_DailyChallengeLevelReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_DailyChallengeLevelReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.newLevel != null && Object.hasOwnProperty.call(m, "newLevel"))
                w.uint32(8).int32(m.newLevel);
            return w;
        };

        /**
         * Decodes a Msg_DailyChallengeLevelReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_DailyChallengeLevelReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_DailyChallengeLevelReq} Msg_DailyChallengeLevelReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_DailyChallengeLevelReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_DailyChallengeLevelReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.newLevel = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_DailyChallengeLevelReq;
    })();

    proto.Msg_DailyChallengeLevelRsp = (function() {

        /**
         * Properties of a Msg_DailyChallengeLevelRsp.
         * @memberof proto
         * @interface IMsg_DailyChallengeLevelRsp
         * @property {proto.ICommonError|null} [error] Msg_DailyChallengeLevelRsp error
         * @property {proto.IDailyChallengeData|null} [data] Msg_DailyChallengeLevelRsp data
         */

        /**
         * Constructs a new Msg_DailyChallengeLevelRsp.
         * @memberof proto
         * @classdesc Represents a Msg_DailyChallengeLevelRsp.
         * @implements IMsg_DailyChallengeLevelRsp
         * @constructor
         * @param {proto.IMsg_DailyChallengeLevelRsp=} [p] Properties to set
         */
        function Msg_DailyChallengeLevelRsp(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_DailyChallengeLevelRsp error.
         * @member {proto.ICommonError|null|undefined} error
         * @memberof proto.Msg_DailyChallengeLevelRsp
         * @instance
         */
        Msg_DailyChallengeLevelRsp.prototype.error = null;

        /**
         * Msg_DailyChallengeLevelRsp data.
         * @member {proto.IDailyChallengeData|null|undefined} data
         * @memberof proto.Msg_DailyChallengeLevelRsp
         * @instance
         */
        Msg_DailyChallengeLevelRsp.prototype.data = null;

        /**
         * Encodes the specified Msg_DailyChallengeLevelRsp message. Does not implicitly {@link proto.Msg_DailyChallengeLevelRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_DailyChallengeLevelRsp
         * @static
         * @param {proto.IMsg_DailyChallengeLevelRsp} m Msg_DailyChallengeLevelRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_DailyChallengeLevelRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.error != null && Object.hasOwnProperty.call(m, "error"))
                $root.proto.CommonError.encode(m.error, w.uint32(10).fork()).ldelim();
            if (m.data != null && Object.hasOwnProperty.call(m, "data"))
                $root.proto.DailyChallengeData.encode(m.data, w.uint32(18).fork()).ldelim();
            return w;
        };

        /**
         * Decodes a Msg_DailyChallengeLevelRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_DailyChallengeLevelRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_DailyChallengeLevelRsp} Msg_DailyChallengeLevelRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_DailyChallengeLevelRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_DailyChallengeLevelRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.error = $root.proto.CommonError.decode(r, r.uint32());
                    break;
                case 2:
                    m.data = $root.proto.DailyChallengeData.decode(r, r.uint32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_DailyChallengeLevelRsp;
    })();

    proto.Msg_DailyChallengeRewardReq = (function() {

        /**
         * Properties of a Msg_DailyChallengeRewardReq.
         * @memberof proto
         * @interface IMsg_DailyChallengeRewardReq
         */

        /**
         * Constructs a new Msg_DailyChallengeRewardReq.
         * @memberof proto
         * @classdesc Represents a Msg_DailyChallengeRewardReq.
         * @implements IMsg_DailyChallengeRewardReq
         * @constructor
         * @param {proto.IMsg_DailyChallengeRewardReq=} [p] Properties to set
         */
        function Msg_DailyChallengeRewardReq(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Encodes the specified Msg_DailyChallengeRewardReq message. Does not implicitly {@link proto.Msg_DailyChallengeRewardReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_DailyChallengeRewardReq
         * @static
         * @param {proto.IMsg_DailyChallengeRewardReq} m Msg_DailyChallengeRewardReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_DailyChallengeRewardReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };

        /**
         * Decodes a Msg_DailyChallengeRewardReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_DailyChallengeRewardReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_DailyChallengeRewardReq} Msg_DailyChallengeRewardReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_DailyChallengeRewardReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_DailyChallengeRewardReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_DailyChallengeRewardReq;
    })();

    proto.Msg_DailyChallengeRewardRsp = (function() {

        /**
         * Properties of a Msg_DailyChallengeRewardRsp.
         * @memberof proto
         * @interface IMsg_DailyChallengeRewardRsp
         * @property {proto.ICommonError|null} [error] Msg_DailyChallengeRewardRsp error
         * @property {Array.<proto.IItem>|null} [rewards] Msg_DailyChallengeRewardRsp rewards
         * @property {proto.IDailyChallengeData|null} [data] Msg_DailyChallengeRewardRsp data
         */

        /**
         * Constructs a new Msg_DailyChallengeRewardRsp.
         * @memberof proto
         * @classdesc Represents a Msg_DailyChallengeRewardRsp.
         * @implements IMsg_DailyChallengeRewardRsp
         * @constructor
         * @param {proto.IMsg_DailyChallengeRewardRsp=} [p] Properties to set
         */
        function Msg_DailyChallengeRewardRsp(p) {
            this.rewards = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_DailyChallengeRewardRsp error.
         * @member {proto.ICommonError|null|undefined} error
         * @memberof proto.Msg_DailyChallengeRewardRsp
         * @instance
         */
        Msg_DailyChallengeRewardRsp.prototype.error = null;

        /**
         * Msg_DailyChallengeRewardRsp rewards.
         * @member {Array.<proto.IItem>} rewards
         * @memberof proto.Msg_DailyChallengeRewardRsp
         * @instance
         */
        Msg_DailyChallengeRewardRsp.prototype.rewards = $util.emptyArray;

        /**
         * Msg_DailyChallengeRewardRsp data.
         * @member {proto.IDailyChallengeData|null|undefined} data
         * @memberof proto.Msg_DailyChallengeRewardRsp
         * @instance
         */
        Msg_DailyChallengeRewardRsp.prototype.data = null;

        /**
         * Encodes the specified Msg_DailyChallengeRewardRsp message. Does not implicitly {@link proto.Msg_DailyChallengeRewardRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_DailyChallengeRewardRsp
         * @static
         * @param {proto.IMsg_DailyChallengeRewardRsp} m Msg_DailyChallengeRewardRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_DailyChallengeRewardRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.error != null && Object.hasOwnProperty.call(m, "error"))
                $root.proto.CommonError.encode(m.error, w.uint32(10).fork()).ldelim();
            if (m.rewards != null && m.rewards.length) {
                for (var i = 0; i < m.rewards.length; ++i)
                    $root.proto.Item.encode(m.rewards[i], w.uint32(18).fork()).ldelim();
            }
            if (m.data != null && Object.hasOwnProperty.call(m, "data"))
                $root.proto.DailyChallengeData.encode(m.data, w.uint32(26).fork()).ldelim();
            return w;
        };

        /**
         * Decodes a Msg_DailyChallengeRewardRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_DailyChallengeRewardRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_DailyChallengeRewardRsp} Msg_DailyChallengeRewardRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_DailyChallengeRewardRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_DailyChallengeRewardRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.error = $root.proto.CommonError.decode(r, r.uint32());
                    break;
                case 2:
                    if (!(m.rewards && m.rewards.length))
                        m.rewards = [];
                    m.rewards.push($root.proto.Item.decode(r, r.uint32()));
                    break;
                case 3:
                    m.data = $root.proto.DailyChallengeData.decode(r, r.uint32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_DailyChallengeRewardRsp;
    })();

    proto.Msg_DailyChallengeSweepReq = (function() {

        /**
         * Properties of a Msg_DailyChallengeSweepReq.
         * @memberof proto
         * @interface IMsg_DailyChallengeSweepReq
         */

        /**
         * Constructs a new Msg_DailyChallengeSweepReq.
         * @memberof proto
         * @classdesc Represents a Msg_DailyChallengeSweepReq.
         * @implements IMsg_DailyChallengeSweepReq
         * @constructor
         * @param {proto.IMsg_DailyChallengeSweepReq=} [p] Properties to set
         */
        function Msg_DailyChallengeSweepReq(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Encodes the specified Msg_DailyChallengeSweepReq message. Does not implicitly {@link proto.Msg_DailyChallengeSweepReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_DailyChallengeSweepReq
         * @static
         * @param {proto.IMsg_DailyChallengeSweepReq} m Msg_DailyChallengeSweepReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_DailyChallengeSweepReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };

        /**
         * Decodes a Msg_DailyChallengeSweepReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_DailyChallengeSweepReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_DailyChallengeSweepReq} Msg_DailyChallengeSweepReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_DailyChallengeSweepReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_DailyChallengeSweepReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_DailyChallengeSweepReq;
    })();

    proto.Msg_DailyChallengeSweepRsp = (function() {

        /**
         * Properties of a Msg_DailyChallengeSweepRsp.
         * @memberof proto
         * @interface IMsg_DailyChallengeSweepRsp
         * @property {proto.ICommonError|null} [error] Msg_DailyChallengeSweepRsp error
         * @property {proto.IDailyChallengeData|null} [data] Msg_DailyChallengeSweepRsp data
         */

        /**
         * Constructs a new Msg_DailyChallengeSweepRsp.
         * @memberof proto
         * @classdesc Represents a Msg_DailyChallengeSweepRsp.
         * @implements IMsg_DailyChallengeSweepRsp
         * @constructor
         * @param {proto.IMsg_DailyChallengeSweepRsp=} [p] Properties to set
         */
        function Msg_DailyChallengeSweepRsp(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_DailyChallengeSweepRsp error.
         * @member {proto.ICommonError|null|undefined} error
         * @memberof proto.Msg_DailyChallengeSweepRsp
         * @instance
         */
        Msg_DailyChallengeSweepRsp.prototype.error = null;

        /**
         * Msg_DailyChallengeSweepRsp data.
         * @member {proto.IDailyChallengeData|null|undefined} data
         * @memberof proto.Msg_DailyChallengeSweepRsp
         * @instance
         */
        Msg_DailyChallengeSweepRsp.prototype.data = null;

        /**
         * Encodes the specified Msg_DailyChallengeSweepRsp message. Does not implicitly {@link proto.Msg_DailyChallengeSweepRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_DailyChallengeSweepRsp
         * @static
         * @param {proto.IMsg_DailyChallengeSweepRsp} m Msg_DailyChallengeSweepRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_DailyChallengeSweepRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.error != null && Object.hasOwnProperty.call(m, "error"))
                $root.proto.CommonError.encode(m.error, w.uint32(10).fork()).ldelim();
            if (m.data != null && Object.hasOwnProperty.call(m, "data"))
                $root.proto.DailyChallengeData.encode(m.data, w.uint32(18).fork()).ldelim();
            return w;
        };

        /**
         * Decodes a Msg_DailyChallengeSweepRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_DailyChallengeSweepRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_DailyChallengeSweepRsp} Msg_DailyChallengeSweepRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_DailyChallengeSweepRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_DailyChallengeSweepRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.error = $root.proto.CommonError.decode(r, r.uint32());
                    break;
                case 2:
                    m.data = $root.proto.DailyChallengeData.decode(r, r.uint32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_DailyChallengeSweepRsp;
    })();

    proto.Msg_DailyChallengeWatchAdvReq = (function() {

        /**
         * Properties of a Msg_DailyChallengeWatchAdvReq.
         * @memberof proto
         * @interface IMsg_DailyChallengeWatchAdvReq
         */

        /**
         * Constructs a new Msg_DailyChallengeWatchAdvReq.
         * @memberof proto
         * @classdesc Represents a Msg_DailyChallengeWatchAdvReq.
         * @implements IMsg_DailyChallengeWatchAdvReq
         * @constructor
         * @param {proto.IMsg_DailyChallengeWatchAdvReq=} [p] Properties to set
         */
        function Msg_DailyChallengeWatchAdvReq(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Encodes the specified Msg_DailyChallengeWatchAdvReq message. Does not implicitly {@link proto.Msg_DailyChallengeWatchAdvReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_DailyChallengeWatchAdvReq
         * @static
         * @param {proto.IMsg_DailyChallengeWatchAdvReq} m Msg_DailyChallengeWatchAdvReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_DailyChallengeWatchAdvReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };

        /**
         * Decodes a Msg_DailyChallengeWatchAdvReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_DailyChallengeWatchAdvReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_DailyChallengeWatchAdvReq} Msg_DailyChallengeWatchAdvReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_DailyChallengeWatchAdvReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_DailyChallengeWatchAdvReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_DailyChallengeWatchAdvReq;
    })();

    proto.Msg_DailyChallengeWatchAdvRsp = (function() {

        /**
         * Properties of a Msg_DailyChallengeWatchAdvRsp.
         * @memberof proto
         * @interface IMsg_DailyChallengeWatchAdvRsp
         * @property {proto.ICommonError|null} [error] Msg_DailyChallengeWatchAdvRsp error
         * @property {proto.IDailyChallengeData|null} [data] Msg_DailyChallengeWatchAdvRsp data
         */

        /**
         * Constructs a new Msg_DailyChallengeWatchAdvRsp.
         * @memberof proto
         * @classdesc Represents a Msg_DailyChallengeWatchAdvRsp.
         * @implements IMsg_DailyChallengeWatchAdvRsp
         * @constructor
         * @param {proto.IMsg_DailyChallengeWatchAdvRsp=} [p] Properties to set
         */
        function Msg_DailyChallengeWatchAdvRsp(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_DailyChallengeWatchAdvRsp error.
         * @member {proto.ICommonError|null|undefined} error
         * @memberof proto.Msg_DailyChallengeWatchAdvRsp
         * @instance
         */
        Msg_DailyChallengeWatchAdvRsp.prototype.error = null;

        /**
         * Msg_DailyChallengeWatchAdvRsp data.
         * @member {proto.IDailyChallengeData|null|undefined} data
         * @memberof proto.Msg_DailyChallengeWatchAdvRsp
         * @instance
         */
        Msg_DailyChallengeWatchAdvRsp.prototype.data = null;

        /**
         * Encodes the specified Msg_DailyChallengeWatchAdvRsp message. Does not implicitly {@link proto.Msg_DailyChallengeWatchAdvRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_DailyChallengeWatchAdvRsp
         * @static
         * @param {proto.IMsg_DailyChallengeWatchAdvRsp} m Msg_DailyChallengeWatchAdvRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_DailyChallengeWatchAdvRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.error != null && Object.hasOwnProperty.call(m, "error"))
                $root.proto.CommonError.encode(m.error, w.uint32(10).fork()).ldelim();
            if (m.data != null && Object.hasOwnProperty.call(m, "data"))
                $root.proto.DailyChallengeData.encode(m.data, w.uint32(18).fork()).ldelim();
            return w;
        };

        /**
         * Decodes a Msg_DailyChallengeWatchAdvRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_DailyChallengeWatchAdvRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_DailyChallengeWatchAdvRsp} Msg_DailyChallengeWatchAdvRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_DailyChallengeWatchAdvRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_DailyChallengeWatchAdvRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.error = $root.proto.CommonError.decode(r, r.uint32());
                    break;
                case 2:
                    m.data = $root.proto.DailyChallengeData.decode(r, r.uint32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_DailyChallengeWatchAdvRsp;
    })();

    proto.Msg_DailyChallengeDataPush = (function() {

        /**
         * Properties of a Msg_DailyChallengeDataPush.
         * @memberof proto
         * @interface IMsg_DailyChallengeDataPush
         * @property {proto.IDailyChallengeData|null} [data] Msg_DailyChallengeDataPush data
         * @property {Array.<number>|null} [bufferList] Msg_DailyChallengeDataPush bufferList
         */

        /**
         * Constructs a new Msg_DailyChallengeDataPush.
         * @memberof proto
         * @classdesc Represents a Msg_DailyChallengeDataPush.
         * @implements IMsg_DailyChallengeDataPush
         * @constructor
         * @param {proto.IMsg_DailyChallengeDataPush=} [p] Properties to set
         */
        function Msg_DailyChallengeDataPush(p) {
            this.bufferList = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_DailyChallengeDataPush data.
         * @member {proto.IDailyChallengeData|null|undefined} data
         * @memberof proto.Msg_DailyChallengeDataPush
         * @instance
         */
        Msg_DailyChallengeDataPush.prototype.data = null;

        /**
         * Msg_DailyChallengeDataPush bufferList.
         * @member {Array.<number>} bufferList
         * @memberof proto.Msg_DailyChallengeDataPush
         * @instance
         */
        Msg_DailyChallengeDataPush.prototype.bufferList = $util.emptyArray;

        /**
         * Encodes the specified Msg_DailyChallengeDataPush message. Does not implicitly {@link proto.Msg_DailyChallengeDataPush.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_DailyChallengeDataPush
         * @static
         * @param {proto.IMsg_DailyChallengeDataPush} m Msg_DailyChallengeDataPush message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_DailyChallengeDataPush.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.data != null && Object.hasOwnProperty.call(m, "data"))
                $root.proto.DailyChallengeData.encode(m.data, w.uint32(10).fork()).ldelim();
            if (m.bufferList != null && m.bufferList.length) {
                w.uint32(18).fork();
                for (var i = 0; i < m.bufferList.length; ++i)
                    w.int32(m.bufferList[i]);
                w.ldelim();
            }
            return w;
        };

        /**
         * Decodes a Msg_DailyChallengeDataPush message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_DailyChallengeDataPush
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_DailyChallengeDataPush} Msg_DailyChallengeDataPush
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_DailyChallengeDataPush.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_DailyChallengeDataPush();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.data = $root.proto.DailyChallengeData.decode(r, r.uint32());
                    break;
                case 2:
                    if (!(m.bufferList && m.bufferList.length))
                        m.bufferList = [];
                    if ((t & 7) === 2) {
                        var c2 = r.uint32() + r.pos;
                        while (r.pos < c2)
                            m.bufferList.push(r.int32());
                    } else
                        m.bufferList.push(r.int32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_DailyChallengeDataPush;
    })();

    proto.NewPlayerTrial = (function() {

        /**
         * Properties of a NewPlayerTrial.
         * @memberof proto
         * @interface INewPlayerTrial
         * @property {number|null} [id] NewPlayerTrial id
         * @property {number|null} [unlockedDays] NewPlayerTrial unlockedDays
         * @property {number|null} [score] NewPlayerTrial score
         * @property {Array.<proto.ITask>|null} [tasks] NewPlayerTrial tasks
         * @property {Array.<number>|null} [receivedScoreIds] NewPlayerTrial receivedScoreIds
         * @property {number|Long|null} [expireTime] NewPlayerTrial expireTime
         */

        /**
         * Constructs a new NewPlayerTrial.
         * @memberof proto
         * @classdesc Represents a NewPlayerTrial.
         * @implements INewPlayerTrial
         * @constructor
         * @param {proto.INewPlayerTrial=} [p] Properties to set
         */
        function NewPlayerTrial(p) {
            this.tasks = [];
            this.receivedScoreIds = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * NewPlayerTrial id.
         * @member {number} id
         * @memberof proto.NewPlayerTrial
         * @instance
         */
        NewPlayerTrial.prototype.id = 0;

        /**
         * NewPlayerTrial unlockedDays.
         * @member {number} unlockedDays
         * @memberof proto.NewPlayerTrial
         * @instance
         */
        NewPlayerTrial.prototype.unlockedDays = 0;

        /**
         * NewPlayerTrial score.
         * @member {number} score
         * @memberof proto.NewPlayerTrial
         * @instance
         */
        NewPlayerTrial.prototype.score = 0;

        /**
         * NewPlayerTrial tasks.
         * @member {Array.<proto.ITask>} tasks
         * @memberof proto.NewPlayerTrial
         * @instance
         */
        NewPlayerTrial.prototype.tasks = $util.emptyArray;

        /**
         * NewPlayerTrial receivedScoreIds.
         * @member {Array.<number>} receivedScoreIds
         * @memberof proto.NewPlayerTrial
         * @instance
         */
        NewPlayerTrial.prototype.receivedScoreIds = $util.emptyArray;

        /**
         * NewPlayerTrial expireTime.
         * @member {number|Long} expireTime
         * @memberof proto.NewPlayerTrial
         * @instance
         */
        NewPlayerTrial.prototype.expireTime = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

        /**
         * Encodes the specified NewPlayerTrial message. Does not implicitly {@link proto.NewPlayerTrial.verify|verify} messages.
         * @function encode
         * @memberof proto.NewPlayerTrial
         * @static
         * @param {proto.INewPlayerTrial} m NewPlayerTrial message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        NewPlayerTrial.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.id != null && Object.hasOwnProperty.call(m, "id"))
                w.uint32(8).int32(m.id);
            if (m.unlockedDays != null && Object.hasOwnProperty.call(m, "unlockedDays"))
                w.uint32(16).int32(m.unlockedDays);
            if (m.score != null && Object.hasOwnProperty.call(m, "score"))
                w.uint32(24).int32(m.score);
            if (m.tasks != null && m.tasks.length) {
                for (var i = 0; i < m.tasks.length; ++i)
                    $root.proto.Task.encode(m.tasks[i], w.uint32(34).fork()).ldelim();
            }
            if (m.receivedScoreIds != null && m.receivedScoreIds.length) {
                w.uint32(42).fork();
                for (var i = 0; i < m.receivedScoreIds.length; ++i)
                    w.int32(m.receivedScoreIds[i]);
                w.ldelim();
            }
            if (m.expireTime != null && Object.hasOwnProperty.call(m, "expireTime"))
                w.uint32(48).int64(m.expireTime);
            return w;
        };

        /**
         * Decodes a NewPlayerTrial message from the specified reader or buffer.
         * @function decode
         * @memberof proto.NewPlayerTrial
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.NewPlayerTrial} NewPlayerTrial
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        NewPlayerTrial.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.NewPlayerTrial();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.id = r.int32();
                    break;
                case 2:
                    m.unlockedDays = r.int32();
                    break;
                case 3:
                    m.score = r.int32();
                    break;
                case 4:
                    if (!(m.tasks && m.tasks.length))
                        m.tasks = [];
                    m.tasks.push($root.proto.Task.decode(r, r.uint32()));
                    break;
                case 5:
                    if (!(m.receivedScoreIds && m.receivedScoreIds.length))
                        m.receivedScoreIds = [];
                    if ((t & 7) === 2) {
                        var c2 = r.uint32() + r.pos;
                        while (r.pos < c2)
                            m.receivedScoreIds.push(r.int32());
                    } else
                        m.receivedScoreIds.push(r.int32());
                    break;
                case 6:
                    m.expireTime = r.int64();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return NewPlayerTrial;
    })();

    proto.Msg_GetNewPlayerTrialMapReq = (function() {

        /**
         * Properties of a Msg_GetNewPlayerTrialMapReq.
         * @memberof proto
         * @interface IMsg_GetNewPlayerTrialMapReq
         */

        /**
         * Constructs a new Msg_GetNewPlayerTrialMapReq.
         * @memberof proto
         * @classdesc Represents a Msg_GetNewPlayerTrialMapReq.
         * @implements IMsg_GetNewPlayerTrialMapReq
         * @constructor
         * @param {proto.IMsg_GetNewPlayerTrialMapReq=} [p] Properties to set
         */
        function Msg_GetNewPlayerTrialMapReq(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Encodes the specified Msg_GetNewPlayerTrialMapReq message. Does not implicitly {@link proto.Msg_GetNewPlayerTrialMapReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_GetNewPlayerTrialMapReq
         * @static
         * @param {proto.IMsg_GetNewPlayerTrialMapReq} m Msg_GetNewPlayerTrialMapReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_GetNewPlayerTrialMapReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };

        /**
         * Decodes a Msg_GetNewPlayerTrialMapReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_GetNewPlayerTrialMapReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_GetNewPlayerTrialMapReq} Msg_GetNewPlayerTrialMapReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_GetNewPlayerTrialMapReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_GetNewPlayerTrialMapReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_GetNewPlayerTrialMapReq;
    })();

    proto.Msg_GetNewPlayerTrialMapRsp = (function() {

        /**
         * Properties of a Msg_GetNewPlayerTrialMapRsp.
         * @memberof proto
         * @interface IMsg_GetNewPlayerTrialMapRsp
         * @property {Object.<string,proto.INewPlayerTrial>|null} [newPlayerTrialMap] Msg_GetNewPlayerTrialMapRsp newPlayerTrialMap
         */

        /**
         * Constructs a new Msg_GetNewPlayerTrialMapRsp.
         * @memberof proto
         * @classdesc Represents a Msg_GetNewPlayerTrialMapRsp.
         * @implements IMsg_GetNewPlayerTrialMapRsp
         * @constructor
         * @param {proto.IMsg_GetNewPlayerTrialMapRsp=} [p] Properties to set
         */
        function Msg_GetNewPlayerTrialMapRsp(p) {
            this.newPlayerTrialMap = {};
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_GetNewPlayerTrialMapRsp newPlayerTrialMap.
         * @member {Object.<string,proto.INewPlayerTrial>} newPlayerTrialMap
         * @memberof proto.Msg_GetNewPlayerTrialMapRsp
         * @instance
         */
        Msg_GetNewPlayerTrialMapRsp.prototype.newPlayerTrialMap = $util.emptyObject;

        /**
         * Encodes the specified Msg_GetNewPlayerTrialMapRsp message. Does not implicitly {@link proto.Msg_GetNewPlayerTrialMapRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_GetNewPlayerTrialMapRsp
         * @static
         * @param {proto.IMsg_GetNewPlayerTrialMapRsp} m Msg_GetNewPlayerTrialMapRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_GetNewPlayerTrialMapRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.newPlayerTrialMap != null && Object.hasOwnProperty.call(m, "newPlayerTrialMap")) {
                for (var ks = Object.keys(m.newPlayerTrialMap), i = 0; i < ks.length; ++i) {
                    w.uint32(10).fork().uint32(8).int32(ks[i]);
                    $root.proto.NewPlayerTrial.encode(m.newPlayerTrialMap[ks[i]], w.uint32(18).fork()).ldelim().ldelim();
                }
            }
            return w;
        };

        /**
         * Decodes a Msg_GetNewPlayerTrialMapRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_GetNewPlayerTrialMapRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_GetNewPlayerTrialMapRsp} Msg_GetNewPlayerTrialMapRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_GetNewPlayerTrialMapRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_GetNewPlayerTrialMapRsp(), k, value;
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (m.newPlayerTrialMap === $util.emptyObject)
                        m.newPlayerTrialMap = {};
                    var c2 = r.uint32() + r.pos;
                    k = 0;
                    value = null;
                    while (r.pos < c2) {
                        var tag2 = r.uint32();
                        switch (tag2 >>> 3) {
                        case 1:
                            k = r.int32();
                            break;
                        case 2:
                            value = $root.proto.NewPlayerTrial.decode(r, r.uint32());
                            break;
                        default:
                            r.skipType(tag2 & 7);
                            break;
                        }
                    }
                    m.newPlayerTrialMap[k] = value;
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_GetNewPlayerTrialMapRsp;
    })();

    proto.Msg_ReceiveNewPlayerTrialTaskRewardsReq = (function() {

        /**
         * Properties of a Msg_ReceiveNewPlayerTrialTaskRewardsReq.
         * @memberof proto
         * @interface IMsg_ReceiveNewPlayerTrialTaskRewardsReq
         * @property {number|null} [trialId] Msg_ReceiveNewPlayerTrialTaskRewardsReq trialId
         * @property {number|null} [taskId] Msg_ReceiveNewPlayerTrialTaskRewardsReq taskId
         */

        /**
         * Constructs a new Msg_ReceiveNewPlayerTrialTaskRewardsReq.
         * @memberof proto
         * @classdesc Represents a Msg_ReceiveNewPlayerTrialTaskRewardsReq.
         * @implements IMsg_ReceiveNewPlayerTrialTaskRewardsReq
         * @constructor
         * @param {proto.IMsg_ReceiveNewPlayerTrialTaskRewardsReq=} [p] Properties to set
         */
        function Msg_ReceiveNewPlayerTrialTaskRewardsReq(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_ReceiveNewPlayerTrialTaskRewardsReq trialId.
         * @member {number} trialId
         * @memberof proto.Msg_ReceiveNewPlayerTrialTaskRewardsReq
         * @instance
         */
        Msg_ReceiveNewPlayerTrialTaskRewardsReq.prototype.trialId = 0;

        /**
         * Msg_ReceiveNewPlayerTrialTaskRewardsReq taskId.
         * @member {number} taskId
         * @memberof proto.Msg_ReceiveNewPlayerTrialTaskRewardsReq
         * @instance
         */
        Msg_ReceiveNewPlayerTrialTaskRewardsReq.prototype.taskId = 0;

        /**
         * Encodes the specified Msg_ReceiveNewPlayerTrialTaskRewardsReq message. Does not implicitly {@link proto.Msg_ReceiveNewPlayerTrialTaskRewardsReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_ReceiveNewPlayerTrialTaskRewardsReq
         * @static
         * @param {proto.IMsg_ReceiveNewPlayerTrialTaskRewardsReq} m Msg_ReceiveNewPlayerTrialTaskRewardsReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_ReceiveNewPlayerTrialTaskRewardsReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.trialId != null && Object.hasOwnProperty.call(m, "trialId"))
                w.uint32(8).int32(m.trialId);
            if (m.taskId != null && Object.hasOwnProperty.call(m, "taskId"))
                w.uint32(16).int32(m.taskId);
            return w;
        };

        /**
         * Decodes a Msg_ReceiveNewPlayerTrialTaskRewardsReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_ReceiveNewPlayerTrialTaskRewardsReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_ReceiveNewPlayerTrialTaskRewardsReq} Msg_ReceiveNewPlayerTrialTaskRewardsReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_ReceiveNewPlayerTrialTaskRewardsReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_ReceiveNewPlayerTrialTaskRewardsReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.trialId = r.int32();
                    break;
                case 2:
                    m.taskId = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_ReceiveNewPlayerTrialTaskRewardsReq;
    })();

    proto.Msg_ReceiveNewPlayerTrialTaskRewardsRsp = (function() {

        /**
         * Properties of a Msg_ReceiveNewPlayerTrialTaskRewardsRsp.
         * @memberof proto
         * @interface IMsg_ReceiveNewPlayerTrialTaskRewardsRsp
         * @property {proto.ICommonError|null} [error] Msg_ReceiveNewPlayerTrialTaskRewardsRsp error
         * @property {number|null} [trialId] Msg_ReceiveNewPlayerTrialTaskRewardsRsp trialId
         * @property {number|null} [taskId] Msg_ReceiveNewPlayerTrialTaskRewardsRsp taskId
         * @property {Array.<proto.IItem>|null} [rewards] Msg_ReceiveNewPlayerTrialTaskRewardsRsp rewards
         */

        /**
         * Constructs a new Msg_ReceiveNewPlayerTrialTaskRewardsRsp.
         * @memberof proto
         * @classdesc Represents a Msg_ReceiveNewPlayerTrialTaskRewardsRsp.
         * @implements IMsg_ReceiveNewPlayerTrialTaskRewardsRsp
         * @constructor
         * @param {proto.IMsg_ReceiveNewPlayerTrialTaskRewardsRsp=} [p] Properties to set
         */
        function Msg_ReceiveNewPlayerTrialTaskRewardsRsp(p) {
            this.rewards = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_ReceiveNewPlayerTrialTaskRewardsRsp error.
         * @member {proto.ICommonError|null|undefined} error
         * @memberof proto.Msg_ReceiveNewPlayerTrialTaskRewardsRsp
         * @instance
         */
        Msg_ReceiveNewPlayerTrialTaskRewardsRsp.prototype.error = null;

        /**
         * Msg_ReceiveNewPlayerTrialTaskRewardsRsp trialId.
         * @member {number} trialId
         * @memberof proto.Msg_ReceiveNewPlayerTrialTaskRewardsRsp
         * @instance
         */
        Msg_ReceiveNewPlayerTrialTaskRewardsRsp.prototype.trialId = 0;

        /**
         * Msg_ReceiveNewPlayerTrialTaskRewardsRsp taskId.
         * @member {number} taskId
         * @memberof proto.Msg_ReceiveNewPlayerTrialTaskRewardsRsp
         * @instance
         */
        Msg_ReceiveNewPlayerTrialTaskRewardsRsp.prototype.taskId = 0;

        /**
         * Msg_ReceiveNewPlayerTrialTaskRewardsRsp rewards.
         * @member {Array.<proto.IItem>} rewards
         * @memberof proto.Msg_ReceiveNewPlayerTrialTaskRewardsRsp
         * @instance
         */
        Msg_ReceiveNewPlayerTrialTaskRewardsRsp.prototype.rewards = $util.emptyArray;

        /**
         * Encodes the specified Msg_ReceiveNewPlayerTrialTaskRewardsRsp message. Does not implicitly {@link proto.Msg_ReceiveNewPlayerTrialTaskRewardsRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_ReceiveNewPlayerTrialTaskRewardsRsp
         * @static
         * @param {proto.IMsg_ReceiveNewPlayerTrialTaskRewardsRsp} m Msg_ReceiveNewPlayerTrialTaskRewardsRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_ReceiveNewPlayerTrialTaskRewardsRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.error != null && Object.hasOwnProperty.call(m, "error"))
                $root.proto.CommonError.encode(m.error, w.uint32(10).fork()).ldelim();
            if (m.trialId != null && Object.hasOwnProperty.call(m, "trialId"))
                w.uint32(16).int32(m.trialId);
            if (m.taskId != null && Object.hasOwnProperty.call(m, "taskId"))
                w.uint32(24).int32(m.taskId);
            if (m.rewards != null && m.rewards.length) {
                for (var i = 0; i < m.rewards.length; ++i)
                    $root.proto.Item.encode(m.rewards[i], w.uint32(34).fork()).ldelim();
            }
            return w;
        };

        /**
         * Decodes a Msg_ReceiveNewPlayerTrialTaskRewardsRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_ReceiveNewPlayerTrialTaskRewardsRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_ReceiveNewPlayerTrialTaskRewardsRsp} Msg_ReceiveNewPlayerTrialTaskRewardsRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_ReceiveNewPlayerTrialTaskRewardsRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_ReceiveNewPlayerTrialTaskRewardsRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.error = $root.proto.CommonError.decode(r, r.uint32());
                    break;
                case 2:
                    m.trialId = r.int32();
                    break;
                case 3:
                    m.taskId = r.int32();
                    break;
                case 4:
                    if (!(m.rewards && m.rewards.length))
                        m.rewards = [];
                    m.rewards.push($root.proto.Item.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_ReceiveNewPlayerTrialTaskRewardsRsp;
    })();

    proto.Msg_ReceiveNewPlayerTrialScoreRewardsReq = (function() {

        /**
         * Properties of a Msg_ReceiveNewPlayerTrialScoreRewardsReq.
         * @memberof proto
         * @interface IMsg_ReceiveNewPlayerTrialScoreRewardsReq
         * @property {number|null} [scoreId] Msg_ReceiveNewPlayerTrialScoreRewardsReq scoreId
         */

        /**
         * Constructs a new Msg_ReceiveNewPlayerTrialScoreRewardsReq.
         * @memberof proto
         * @classdesc Represents a Msg_ReceiveNewPlayerTrialScoreRewardsReq.
         * @implements IMsg_ReceiveNewPlayerTrialScoreRewardsReq
         * @constructor
         * @param {proto.IMsg_ReceiveNewPlayerTrialScoreRewardsReq=} [p] Properties to set
         */
        function Msg_ReceiveNewPlayerTrialScoreRewardsReq(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_ReceiveNewPlayerTrialScoreRewardsReq scoreId.
         * @member {number} scoreId
         * @memberof proto.Msg_ReceiveNewPlayerTrialScoreRewardsReq
         * @instance
         */
        Msg_ReceiveNewPlayerTrialScoreRewardsReq.prototype.scoreId = 0;

        /**
         * Encodes the specified Msg_ReceiveNewPlayerTrialScoreRewardsReq message. Does not implicitly {@link proto.Msg_ReceiveNewPlayerTrialScoreRewardsReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_ReceiveNewPlayerTrialScoreRewardsReq
         * @static
         * @param {proto.IMsg_ReceiveNewPlayerTrialScoreRewardsReq} m Msg_ReceiveNewPlayerTrialScoreRewardsReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_ReceiveNewPlayerTrialScoreRewardsReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.scoreId != null && Object.hasOwnProperty.call(m, "scoreId"))
                w.uint32(8).int32(m.scoreId);
            return w;
        };

        /**
         * Decodes a Msg_ReceiveNewPlayerTrialScoreRewardsReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_ReceiveNewPlayerTrialScoreRewardsReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_ReceiveNewPlayerTrialScoreRewardsReq} Msg_ReceiveNewPlayerTrialScoreRewardsReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_ReceiveNewPlayerTrialScoreRewardsReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_ReceiveNewPlayerTrialScoreRewardsReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.scoreId = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_ReceiveNewPlayerTrialScoreRewardsReq;
    })();

    proto.Msg_ReceiveNewPlayerTrialScoreRewardsRsp = (function() {

        /**
         * Properties of a Msg_ReceiveNewPlayerTrialScoreRewardsRsp.
         * @memberof proto
         * @interface IMsg_ReceiveNewPlayerTrialScoreRewardsRsp
         * @property {proto.ICommonError|null} [error] Msg_ReceiveNewPlayerTrialScoreRewardsRsp error
         * @property {number|null} [scoreId] Msg_ReceiveNewPlayerTrialScoreRewardsRsp scoreId
         * @property {Array.<proto.IItem>|null} [rewards] Msg_ReceiveNewPlayerTrialScoreRewardsRsp rewards
         */

        /**
         * Constructs a new Msg_ReceiveNewPlayerTrialScoreRewardsRsp.
         * @memberof proto
         * @classdesc Represents a Msg_ReceiveNewPlayerTrialScoreRewardsRsp.
         * @implements IMsg_ReceiveNewPlayerTrialScoreRewardsRsp
         * @constructor
         * @param {proto.IMsg_ReceiveNewPlayerTrialScoreRewardsRsp=} [p] Properties to set
         */
        function Msg_ReceiveNewPlayerTrialScoreRewardsRsp(p) {
            this.rewards = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_ReceiveNewPlayerTrialScoreRewardsRsp error.
         * @member {proto.ICommonError|null|undefined} error
         * @memberof proto.Msg_ReceiveNewPlayerTrialScoreRewardsRsp
         * @instance
         */
        Msg_ReceiveNewPlayerTrialScoreRewardsRsp.prototype.error = null;

        /**
         * Msg_ReceiveNewPlayerTrialScoreRewardsRsp scoreId.
         * @member {number} scoreId
         * @memberof proto.Msg_ReceiveNewPlayerTrialScoreRewardsRsp
         * @instance
         */
        Msg_ReceiveNewPlayerTrialScoreRewardsRsp.prototype.scoreId = 0;

        /**
         * Msg_ReceiveNewPlayerTrialScoreRewardsRsp rewards.
         * @member {Array.<proto.IItem>} rewards
         * @memberof proto.Msg_ReceiveNewPlayerTrialScoreRewardsRsp
         * @instance
         */
        Msg_ReceiveNewPlayerTrialScoreRewardsRsp.prototype.rewards = $util.emptyArray;

        /**
         * Encodes the specified Msg_ReceiveNewPlayerTrialScoreRewardsRsp message. Does not implicitly {@link proto.Msg_ReceiveNewPlayerTrialScoreRewardsRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_ReceiveNewPlayerTrialScoreRewardsRsp
         * @static
         * @param {proto.IMsg_ReceiveNewPlayerTrialScoreRewardsRsp} m Msg_ReceiveNewPlayerTrialScoreRewardsRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_ReceiveNewPlayerTrialScoreRewardsRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.error != null && Object.hasOwnProperty.call(m, "error"))
                $root.proto.CommonError.encode(m.error, w.uint32(10).fork()).ldelim();
            if (m.scoreId != null && Object.hasOwnProperty.call(m, "scoreId"))
                w.uint32(16).int32(m.scoreId);
            if (m.rewards != null && m.rewards.length) {
                for (var i = 0; i < m.rewards.length; ++i)
                    $root.proto.Item.encode(m.rewards[i], w.uint32(26).fork()).ldelim();
            }
            return w;
        };

        /**
         * Decodes a Msg_ReceiveNewPlayerTrialScoreRewardsRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_ReceiveNewPlayerTrialScoreRewardsRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_ReceiveNewPlayerTrialScoreRewardsRsp} Msg_ReceiveNewPlayerTrialScoreRewardsRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_ReceiveNewPlayerTrialScoreRewardsRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_ReceiveNewPlayerTrialScoreRewardsRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.error = $root.proto.CommonError.decode(r, r.uint32());
                    break;
                case 2:
                    m.scoreId = r.int32();
                    break;
                case 3:
                    if (!(m.rewards && m.rewards.length))
                        m.rewards = [];
                    m.rewards.push($root.proto.Item.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_ReceiveNewPlayerTrialScoreRewardsRsp;
    })();

    proto.Msg_GetClimbTowerInfoReq = (function() {

        /**
         * Properties of a Msg_GetClimbTowerInfoReq.
         * @memberof proto
         * @interface IMsg_GetClimbTowerInfoReq
         */

        /**
         * Constructs a new Msg_GetClimbTowerInfoReq.
         * @memberof proto
         * @classdesc Represents a Msg_GetClimbTowerInfoReq.
         * @implements IMsg_GetClimbTowerInfoReq
         * @constructor
         * @param {proto.IMsg_GetClimbTowerInfoReq=} [p] Properties to set
         */
        function Msg_GetClimbTowerInfoReq(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Encodes the specified Msg_GetClimbTowerInfoReq message. Does not implicitly {@link proto.Msg_GetClimbTowerInfoReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_GetClimbTowerInfoReq
         * @static
         * @param {proto.IMsg_GetClimbTowerInfoReq} m Msg_GetClimbTowerInfoReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_GetClimbTowerInfoReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };

        /**
         * Decodes a Msg_GetClimbTowerInfoReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_GetClimbTowerInfoReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_GetClimbTowerInfoReq} Msg_GetClimbTowerInfoReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_GetClimbTowerInfoReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_GetClimbTowerInfoReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_GetClimbTowerInfoReq;
    })();

    proto.Msg_GetClimbTowerInfoRsp = (function() {

        /**
         * Properties of a Msg_GetClimbTowerInfoRsp.
         * @memberof proto
         * @interface IMsg_GetClimbTowerInfoRsp
         * @property {Array.<number>|null} [clearedStageIds] Msg_GetClimbTowerInfoRsp clearedStageIds
         * @property {number|null} [defeatTimes] Msg_GetClimbTowerInfoRsp defeatTimes
         * @property {boolean|null} [isReceivedDailyRewards] Msg_GetClimbTowerInfoRsp isReceivedDailyRewards
         * @property {Array.<number>|null} [receivedFirstRewardStageIds] Msg_GetClimbTowerInfoRsp receivedFirstRewardStageIds
         */

        /**
         * Constructs a new Msg_GetClimbTowerInfoRsp.
         * @memberof proto
         * @classdesc Represents a Msg_GetClimbTowerInfoRsp.
         * @implements IMsg_GetClimbTowerInfoRsp
         * @constructor
         * @param {proto.IMsg_GetClimbTowerInfoRsp=} [p] Properties to set
         */
        function Msg_GetClimbTowerInfoRsp(p) {
            this.clearedStageIds = [];
            this.receivedFirstRewardStageIds = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_GetClimbTowerInfoRsp clearedStageIds.
         * @member {Array.<number>} clearedStageIds
         * @memberof proto.Msg_GetClimbTowerInfoRsp
         * @instance
         */
        Msg_GetClimbTowerInfoRsp.prototype.clearedStageIds = $util.emptyArray;

        /**
         * Msg_GetClimbTowerInfoRsp defeatTimes.
         * @member {number} defeatTimes
         * @memberof proto.Msg_GetClimbTowerInfoRsp
         * @instance
         */
        Msg_GetClimbTowerInfoRsp.prototype.defeatTimes = 0;

        /**
         * Msg_GetClimbTowerInfoRsp isReceivedDailyRewards.
         * @member {boolean} isReceivedDailyRewards
         * @memberof proto.Msg_GetClimbTowerInfoRsp
         * @instance
         */
        Msg_GetClimbTowerInfoRsp.prototype.isReceivedDailyRewards = false;

        /**
         * Msg_GetClimbTowerInfoRsp receivedFirstRewardStageIds.
         * @member {Array.<number>} receivedFirstRewardStageIds
         * @memberof proto.Msg_GetClimbTowerInfoRsp
         * @instance
         */
        Msg_GetClimbTowerInfoRsp.prototype.receivedFirstRewardStageIds = $util.emptyArray;

        /**
         * Encodes the specified Msg_GetClimbTowerInfoRsp message. Does not implicitly {@link proto.Msg_GetClimbTowerInfoRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_GetClimbTowerInfoRsp
         * @static
         * @param {proto.IMsg_GetClimbTowerInfoRsp} m Msg_GetClimbTowerInfoRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_GetClimbTowerInfoRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.clearedStageIds != null && m.clearedStageIds.length) {
                w.uint32(10).fork();
                for (var i = 0; i < m.clearedStageIds.length; ++i)
                    w.int32(m.clearedStageIds[i]);
                w.ldelim();
            }
            if (m.defeatTimes != null && Object.hasOwnProperty.call(m, "defeatTimes"))
                w.uint32(24).int32(m.defeatTimes);
            if (m.isReceivedDailyRewards != null && Object.hasOwnProperty.call(m, "isReceivedDailyRewards"))
                w.uint32(32).bool(m.isReceivedDailyRewards);
            if (m.receivedFirstRewardStageIds != null && m.receivedFirstRewardStageIds.length) {
                w.uint32(42).fork();
                for (var i = 0; i < m.receivedFirstRewardStageIds.length; ++i)
                    w.int32(m.receivedFirstRewardStageIds[i]);
                w.ldelim();
            }
            return w;
        };

        /**
         * Decodes a Msg_GetClimbTowerInfoRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_GetClimbTowerInfoRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_GetClimbTowerInfoRsp} Msg_GetClimbTowerInfoRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_GetClimbTowerInfoRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_GetClimbTowerInfoRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.clearedStageIds && m.clearedStageIds.length))
                        m.clearedStageIds = [];
                    if ((t & 7) === 2) {
                        var c2 = r.uint32() + r.pos;
                        while (r.pos < c2)
                            m.clearedStageIds.push(r.int32());
                    } else
                        m.clearedStageIds.push(r.int32());
                    break;
                case 3:
                    m.defeatTimes = r.int32();
                    break;
                case 4:
                    m.isReceivedDailyRewards = r.bool();
                    break;
                case 5:
                    if (!(m.receivedFirstRewardStageIds && m.receivedFirstRewardStageIds.length))
                        m.receivedFirstRewardStageIds = [];
                    if ((t & 7) === 2) {
                        var c2 = r.uint32() + r.pos;
                        while (r.pos < c2)
                            m.receivedFirstRewardStageIds.push(r.int32());
                    } else
                        m.receivedFirstRewardStageIds.push(r.int32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_GetClimbTowerInfoRsp;
    })();

    proto.Msg_ReceiveClimbTowerDailyRewardsReq = (function() {

        /**
         * Properties of a Msg_ReceiveClimbTowerDailyRewardsReq.
         * @memberof proto
         * @interface IMsg_ReceiveClimbTowerDailyRewardsReq
         */

        /**
         * Constructs a new Msg_ReceiveClimbTowerDailyRewardsReq.
         * @memberof proto
         * @classdesc Represents a Msg_ReceiveClimbTowerDailyRewardsReq.
         * @implements IMsg_ReceiveClimbTowerDailyRewardsReq
         * @constructor
         * @param {proto.IMsg_ReceiveClimbTowerDailyRewardsReq=} [p] Properties to set
         */
        function Msg_ReceiveClimbTowerDailyRewardsReq(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Encodes the specified Msg_ReceiveClimbTowerDailyRewardsReq message. Does not implicitly {@link proto.Msg_ReceiveClimbTowerDailyRewardsReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_ReceiveClimbTowerDailyRewardsReq
         * @static
         * @param {proto.IMsg_ReceiveClimbTowerDailyRewardsReq} m Msg_ReceiveClimbTowerDailyRewardsReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_ReceiveClimbTowerDailyRewardsReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };

        /**
         * Decodes a Msg_ReceiveClimbTowerDailyRewardsReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_ReceiveClimbTowerDailyRewardsReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_ReceiveClimbTowerDailyRewardsReq} Msg_ReceiveClimbTowerDailyRewardsReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_ReceiveClimbTowerDailyRewardsReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_ReceiveClimbTowerDailyRewardsReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_ReceiveClimbTowerDailyRewardsReq;
    })();

    proto.Msg_ReceiveClimbTowerDailyRewardsRsp = (function() {

        /**
         * Properties of a Msg_ReceiveClimbTowerDailyRewardsRsp.
         * @memberof proto
         * @interface IMsg_ReceiveClimbTowerDailyRewardsRsp
         * @property {proto.ICommonError|null} [error] Msg_ReceiveClimbTowerDailyRewardsRsp error
         * @property {Array.<proto.IItem>|null} [rewards] Msg_ReceiveClimbTowerDailyRewardsRsp rewards
         */

        /**
         * Constructs a new Msg_ReceiveClimbTowerDailyRewardsRsp.
         * @memberof proto
         * @classdesc Represents a Msg_ReceiveClimbTowerDailyRewardsRsp.
         * @implements IMsg_ReceiveClimbTowerDailyRewardsRsp
         * @constructor
         * @param {proto.IMsg_ReceiveClimbTowerDailyRewardsRsp=} [p] Properties to set
         */
        function Msg_ReceiveClimbTowerDailyRewardsRsp(p) {
            this.rewards = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_ReceiveClimbTowerDailyRewardsRsp error.
         * @member {proto.ICommonError|null|undefined} error
         * @memberof proto.Msg_ReceiveClimbTowerDailyRewardsRsp
         * @instance
         */
        Msg_ReceiveClimbTowerDailyRewardsRsp.prototype.error = null;

        /**
         * Msg_ReceiveClimbTowerDailyRewardsRsp rewards.
         * @member {Array.<proto.IItem>} rewards
         * @memberof proto.Msg_ReceiveClimbTowerDailyRewardsRsp
         * @instance
         */
        Msg_ReceiveClimbTowerDailyRewardsRsp.prototype.rewards = $util.emptyArray;

        /**
         * Encodes the specified Msg_ReceiveClimbTowerDailyRewardsRsp message. Does not implicitly {@link proto.Msg_ReceiveClimbTowerDailyRewardsRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_ReceiveClimbTowerDailyRewardsRsp
         * @static
         * @param {proto.IMsg_ReceiveClimbTowerDailyRewardsRsp} m Msg_ReceiveClimbTowerDailyRewardsRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_ReceiveClimbTowerDailyRewardsRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.error != null && Object.hasOwnProperty.call(m, "error"))
                $root.proto.CommonError.encode(m.error, w.uint32(10).fork()).ldelim();
            if (m.rewards != null && m.rewards.length) {
                for (var i = 0; i < m.rewards.length; ++i)
                    $root.proto.Item.encode(m.rewards[i], w.uint32(18).fork()).ldelim();
            }
            return w;
        };

        /**
         * Decodes a Msg_ReceiveClimbTowerDailyRewardsRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_ReceiveClimbTowerDailyRewardsRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_ReceiveClimbTowerDailyRewardsRsp} Msg_ReceiveClimbTowerDailyRewardsRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_ReceiveClimbTowerDailyRewardsRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_ReceiveClimbTowerDailyRewardsRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.error = $root.proto.CommonError.decode(r, r.uint32());
                    break;
                case 2:
                    if (!(m.rewards && m.rewards.length))
                        m.rewards = [];
                    m.rewards.push($root.proto.Item.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_ReceiveClimbTowerDailyRewardsRsp;
    })();

    proto.Msg_ReceiveClimbTowerClearStageRewardsReq = (function() {

        /**
         * Properties of a Msg_ReceiveClimbTowerClearStageRewardsReq.
         * @memberof proto
         * @interface IMsg_ReceiveClimbTowerClearStageRewardsReq
         * @property {number|null} [stageId] Msg_ReceiveClimbTowerClearStageRewardsReq stageId
         */

        /**
         * Constructs a new Msg_ReceiveClimbTowerClearStageRewardsReq.
         * @memberof proto
         * @classdesc Represents a Msg_ReceiveClimbTowerClearStageRewardsReq.
         * @implements IMsg_ReceiveClimbTowerClearStageRewardsReq
         * @constructor
         * @param {proto.IMsg_ReceiveClimbTowerClearStageRewardsReq=} [p] Properties to set
         */
        function Msg_ReceiveClimbTowerClearStageRewardsReq(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_ReceiveClimbTowerClearStageRewardsReq stageId.
         * @member {number} stageId
         * @memberof proto.Msg_ReceiveClimbTowerClearStageRewardsReq
         * @instance
         */
        Msg_ReceiveClimbTowerClearStageRewardsReq.prototype.stageId = 0;

        /**
         * Encodes the specified Msg_ReceiveClimbTowerClearStageRewardsReq message. Does not implicitly {@link proto.Msg_ReceiveClimbTowerClearStageRewardsReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_ReceiveClimbTowerClearStageRewardsReq
         * @static
         * @param {proto.IMsg_ReceiveClimbTowerClearStageRewardsReq} m Msg_ReceiveClimbTowerClearStageRewardsReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_ReceiveClimbTowerClearStageRewardsReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.stageId != null && Object.hasOwnProperty.call(m, "stageId"))
                w.uint32(8).int32(m.stageId);
            return w;
        };

        /**
         * Decodes a Msg_ReceiveClimbTowerClearStageRewardsReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_ReceiveClimbTowerClearStageRewardsReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_ReceiveClimbTowerClearStageRewardsReq} Msg_ReceiveClimbTowerClearStageRewardsReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_ReceiveClimbTowerClearStageRewardsReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_ReceiveClimbTowerClearStageRewardsReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.stageId = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_ReceiveClimbTowerClearStageRewardsReq;
    })();

    proto.Msg_ReceiveClimbTowerClearStageRewardsRsp = (function() {

        /**
         * Properties of a Msg_ReceiveClimbTowerClearStageRewardsRsp.
         * @memberof proto
         * @interface IMsg_ReceiveClimbTowerClearStageRewardsRsp
         * @property {proto.ICommonError|null} [error] Msg_ReceiveClimbTowerClearStageRewardsRsp error
         * @property {number|null} [stageId] Msg_ReceiveClimbTowerClearStageRewardsRsp stageId
         * @property {Array.<proto.IItem>|null} [rewards] Msg_ReceiveClimbTowerClearStageRewardsRsp rewards
         */

        /**
         * Constructs a new Msg_ReceiveClimbTowerClearStageRewardsRsp.
         * @memberof proto
         * @classdesc Represents a Msg_ReceiveClimbTowerClearStageRewardsRsp.
         * @implements IMsg_ReceiveClimbTowerClearStageRewardsRsp
         * @constructor
         * @param {proto.IMsg_ReceiveClimbTowerClearStageRewardsRsp=} [p] Properties to set
         */
        function Msg_ReceiveClimbTowerClearStageRewardsRsp(p) {
            this.rewards = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_ReceiveClimbTowerClearStageRewardsRsp error.
         * @member {proto.ICommonError|null|undefined} error
         * @memberof proto.Msg_ReceiveClimbTowerClearStageRewardsRsp
         * @instance
         */
        Msg_ReceiveClimbTowerClearStageRewardsRsp.prototype.error = null;

        /**
         * Msg_ReceiveClimbTowerClearStageRewardsRsp stageId.
         * @member {number} stageId
         * @memberof proto.Msg_ReceiveClimbTowerClearStageRewardsRsp
         * @instance
         */
        Msg_ReceiveClimbTowerClearStageRewardsRsp.prototype.stageId = 0;

        /**
         * Msg_ReceiveClimbTowerClearStageRewardsRsp rewards.
         * @member {Array.<proto.IItem>} rewards
         * @memberof proto.Msg_ReceiveClimbTowerClearStageRewardsRsp
         * @instance
         */
        Msg_ReceiveClimbTowerClearStageRewardsRsp.prototype.rewards = $util.emptyArray;

        /**
         * Encodes the specified Msg_ReceiveClimbTowerClearStageRewardsRsp message. Does not implicitly {@link proto.Msg_ReceiveClimbTowerClearStageRewardsRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_ReceiveClimbTowerClearStageRewardsRsp
         * @static
         * @param {proto.IMsg_ReceiveClimbTowerClearStageRewardsRsp} m Msg_ReceiveClimbTowerClearStageRewardsRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_ReceiveClimbTowerClearStageRewardsRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.error != null && Object.hasOwnProperty.call(m, "error"))
                $root.proto.CommonError.encode(m.error, w.uint32(10).fork()).ldelim();
            if (m.stageId != null && Object.hasOwnProperty.call(m, "stageId"))
                w.uint32(16).int32(m.stageId);
            if (m.rewards != null && m.rewards.length) {
                for (var i = 0; i < m.rewards.length; ++i)
                    $root.proto.Item.encode(m.rewards[i], w.uint32(26).fork()).ldelim();
            }
            return w;
        };

        /**
         * Decodes a Msg_ReceiveClimbTowerClearStageRewardsRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_ReceiveClimbTowerClearStageRewardsRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_ReceiveClimbTowerClearStageRewardsRsp} Msg_ReceiveClimbTowerClearStageRewardsRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_ReceiveClimbTowerClearStageRewardsRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_ReceiveClimbTowerClearStageRewardsRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.error = $root.proto.CommonError.decode(r, r.uint32());
                    break;
                case 2:
                    m.stageId = r.int32();
                    break;
                case 3:
                    if (!(m.rewards && m.rewards.length))
                        m.rewards = [];
                    m.rewards.push($root.proto.Item.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_ReceiveClimbTowerClearStageRewardsRsp;
    })();

    proto.Msg_QuickFinishClimbTowerStageReq = (function() {

        /**
         * Properties of a Msg_QuickFinishClimbTowerStageReq.
         * @memberof proto
         * @interface IMsg_QuickFinishClimbTowerStageReq
         * @property {number|null} [stageId] Msg_QuickFinishClimbTowerStageReq stageId
         */

        /**
         * Constructs a new Msg_QuickFinishClimbTowerStageReq.
         * @memberof proto
         * @classdesc Represents a Msg_QuickFinishClimbTowerStageReq.
         * @implements IMsg_QuickFinishClimbTowerStageReq
         * @constructor
         * @param {proto.IMsg_QuickFinishClimbTowerStageReq=} [p] Properties to set
         */
        function Msg_QuickFinishClimbTowerStageReq(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_QuickFinishClimbTowerStageReq stageId.
         * @member {number} stageId
         * @memberof proto.Msg_QuickFinishClimbTowerStageReq
         * @instance
         */
        Msg_QuickFinishClimbTowerStageReq.prototype.stageId = 0;

        /**
         * Encodes the specified Msg_QuickFinishClimbTowerStageReq message. Does not implicitly {@link proto.Msg_QuickFinishClimbTowerStageReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_QuickFinishClimbTowerStageReq
         * @static
         * @param {proto.IMsg_QuickFinishClimbTowerStageReq} m Msg_QuickFinishClimbTowerStageReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_QuickFinishClimbTowerStageReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.stageId != null && Object.hasOwnProperty.call(m, "stageId"))
                w.uint32(8).int32(m.stageId);
            return w;
        };

        /**
         * Decodes a Msg_QuickFinishClimbTowerStageReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_QuickFinishClimbTowerStageReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_QuickFinishClimbTowerStageReq} Msg_QuickFinishClimbTowerStageReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_QuickFinishClimbTowerStageReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_QuickFinishClimbTowerStageReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.stageId = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_QuickFinishClimbTowerStageReq;
    })();

    proto.Msg_QuickFinishClimbTowerStageRsp = (function() {

        /**
         * Properties of a Msg_QuickFinishClimbTowerStageRsp.
         * @memberof proto
         * @interface IMsg_QuickFinishClimbTowerStageRsp
         * @property {proto.ICommonError|null} [error] Msg_QuickFinishClimbTowerStageRsp error
         * @property {number|null} [stageId] Msg_QuickFinishClimbTowerStageRsp stageId
         * @property {Array.<proto.IItem>|null} [rewards] Msg_QuickFinishClimbTowerStageRsp rewards
         */

        /**
         * Constructs a new Msg_QuickFinishClimbTowerStageRsp.
         * @memberof proto
         * @classdesc Represents a Msg_QuickFinishClimbTowerStageRsp.
         * @implements IMsg_QuickFinishClimbTowerStageRsp
         * @constructor
         * @param {proto.IMsg_QuickFinishClimbTowerStageRsp=} [p] Properties to set
         */
        function Msg_QuickFinishClimbTowerStageRsp(p) {
            this.rewards = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_QuickFinishClimbTowerStageRsp error.
         * @member {proto.ICommonError|null|undefined} error
         * @memberof proto.Msg_QuickFinishClimbTowerStageRsp
         * @instance
         */
        Msg_QuickFinishClimbTowerStageRsp.prototype.error = null;

        /**
         * Msg_QuickFinishClimbTowerStageRsp stageId.
         * @member {number} stageId
         * @memberof proto.Msg_QuickFinishClimbTowerStageRsp
         * @instance
         */
        Msg_QuickFinishClimbTowerStageRsp.prototype.stageId = 0;

        /**
         * Msg_QuickFinishClimbTowerStageRsp rewards.
         * @member {Array.<proto.IItem>} rewards
         * @memberof proto.Msg_QuickFinishClimbTowerStageRsp
         * @instance
         */
        Msg_QuickFinishClimbTowerStageRsp.prototype.rewards = $util.emptyArray;

        /**
         * Encodes the specified Msg_QuickFinishClimbTowerStageRsp message. Does not implicitly {@link proto.Msg_QuickFinishClimbTowerStageRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_QuickFinishClimbTowerStageRsp
         * @static
         * @param {proto.IMsg_QuickFinishClimbTowerStageRsp} m Msg_QuickFinishClimbTowerStageRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_QuickFinishClimbTowerStageRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.error != null && Object.hasOwnProperty.call(m, "error"))
                $root.proto.CommonError.encode(m.error, w.uint32(10).fork()).ldelim();
            if (m.stageId != null && Object.hasOwnProperty.call(m, "stageId"))
                w.uint32(16).int32(m.stageId);
            if (m.rewards != null && m.rewards.length) {
                for (var i = 0; i < m.rewards.length; ++i)
                    $root.proto.Item.encode(m.rewards[i], w.uint32(26).fork()).ldelim();
            }
            return w;
        };

        /**
         * Decodes a Msg_QuickFinishClimbTowerStageRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_QuickFinishClimbTowerStageRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_QuickFinishClimbTowerStageRsp} Msg_QuickFinishClimbTowerStageRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_QuickFinishClimbTowerStageRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_QuickFinishClimbTowerStageRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.error = $root.proto.CommonError.decode(r, r.uint32());
                    break;
                case 2:
                    m.stageId = r.int32();
                    break;
                case 3:
                    if (!(m.rewards && m.rewards.length))
                        m.rewards = [];
                    m.rewards.push($root.proto.Item.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_QuickFinishClimbTowerStageRsp;
    })();

    proto.Msg_UnlockedHeroAlbumPush = (function() {

        /**
         * Properties of a Msg_UnlockedHeroAlbumPush.
         * @memberof proto
         * @interface IMsg_UnlockedHeroAlbumPush
         * @property {number|null} [heroItemId] Msg_UnlockedHeroAlbumPush heroItemId
         */

        /**
         * Constructs a new Msg_UnlockedHeroAlbumPush.
         * @memberof proto
         * @classdesc Represents a Msg_UnlockedHeroAlbumPush.
         * @implements IMsg_UnlockedHeroAlbumPush
         * @constructor
         * @param {proto.IMsg_UnlockedHeroAlbumPush=} [p] Properties to set
         */
        function Msg_UnlockedHeroAlbumPush(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_UnlockedHeroAlbumPush heroItemId.
         * @member {number} heroItemId
         * @memberof proto.Msg_UnlockedHeroAlbumPush
         * @instance
         */
        Msg_UnlockedHeroAlbumPush.prototype.heroItemId = 0;

        /**
         * Encodes the specified Msg_UnlockedHeroAlbumPush message. Does not implicitly {@link proto.Msg_UnlockedHeroAlbumPush.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_UnlockedHeroAlbumPush
         * @static
         * @param {proto.IMsg_UnlockedHeroAlbumPush} m Msg_UnlockedHeroAlbumPush message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_UnlockedHeroAlbumPush.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.heroItemId != null && Object.hasOwnProperty.call(m, "heroItemId"))
                w.uint32(8).int32(m.heroItemId);
            return w;
        };

        /**
         * Decodes a Msg_UnlockedHeroAlbumPush message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_UnlockedHeroAlbumPush
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_UnlockedHeroAlbumPush} Msg_UnlockedHeroAlbumPush
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_UnlockedHeroAlbumPush.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_UnlockedHeroAlbumPush();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.heroItemId = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_UnlockedHeroAlbumPush;
    })();

    proto.Msg_ChangedNewPlayerTrialScorePush = (function() {

        /**
         * Properties of a Msg_ChangedNewPlayerTrialScorePush.
         * @memberof proto
         * @interface IMsg_ChangedNewPlayerTrialScorePush
         * @property {number|null} [newPlayerTrialId] Msg_ChangedNewPlayerTrialScorePush newPlayerTrialId
         * @property {number|null} [score] Msg_ChangedNewPlayerTrialScorePush score
         */

        /**
         * Constructs a new Msg_ChangedNewPlayerTrialScorePush.
         * @memberof proto
         * @classdesc Represents a Msg_ChangedNewPlayerTrialScorePush.
         * @implements IMsg_ChangedNewPlayerTrialScorePush
         * @constructor
         * @param {proto.IMsg_ChangedNewPlayerTrialScorePush=} [p] Properties to set
         */
        function Msg_ChangedNewPlayerTrialScorePush(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_ChangedNewPlayerTrialScorePush newPlayerTrialId.
         * @member {number} newPlayerTrialId
         * @memberof proto.Msg_ChangedNewPlayerTrialScorePush
         * @instance
         */
        Msg_ChangedNewPlayerTrialScorePush.prototype.newPlayerTrialId = 0;

        /**
         * Msg_ChangedNewPlayerTrialScorePush score.
         * @member {number} score
         * @memberof proto.Msg_ChangedNewPlayerTrialScorePush
         * @instance
         */
        Msg_ChangedNewPlayerTrialScorePush.prototype.score = 0;

        /**
         * Encodes the specified Msg_ChangedNewPlayerTrialScorePush message. Does not implicitly {@link proto.Msg_ChangedNewPlayerTrialScorePush.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_ChangedNewPlayerTrialScorePush
         * @static
         * @param {proto.IMsg_ChangedNewPlayerTrialScorePush} m Msg_ChangedNewPlayerTrialScorePush message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_ChangedNewPlayerTrialScorePush.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.newPlayerTrialId != null && Object.hasOwnProperty.call(m, "newPlayerTrialId"))
                w.uint32(8).int32(m.newPlayerTrialId);
            if (m.score != null && Object.hasOwnProperty.call(m, "score"))
                w.uint32(16).int32(m.score);
            return w;
        };

        /**
         * Decodes a Msg_ChangedNewPlayerTrialScorePush message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_ChangedNewPlayerTrialScorePush
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_ChangedNewPlayerTrialScorePush} Msg_ChangedNewPlayerTrialScorePush
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_ChangedNewPlayerTrialScorePush.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_ChangedNewPlayerTrialScorePush();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.newPlayerTrialId = r.int32();
                    break;
                case 2:
                    m.score = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_ChangedNewPlayerTrialScorePush;
    })();

    proto.HonorRoll = (function() {

        /**
         * Properties of an HonorRoll.
         * @memberof proto
         * @interface IHonorRoll
         * @property {number|null} [activityId] HonorRoll activityId
         * @property {number|Long|null} [activityEndTime] HonorRoll activityEndTime
         * @property {Array.<proto.ITask>|null} [tasks] HonorRoll tasks
         */

        /**
         * Constructs a new HonorRoll.
         * @memberof proto
         * @classdesc Represents an HonorRoll.
         * @implements IHonorRoll
         * @constructor
         * @param {proto.IHonorRoll=} [p] Properties to set
         */
        function HonorRoll(p) {
            this.tasks = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * HonorRoll activityId.
         * @member {number} activityId
         * @memberof proto.HonorRoll
         * @instance
         */
        HonorRoll.prototype.activityId = 0;

        /**
         * HonorRoll activityEndTime.
         * @member {number|Long} activityEndTime
         * @memberof proto.HonorRoll
         * @instance
         */
        HonorRoll.prototype.activityEndTime = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

        /**
         * HonorRoll tasks.
         * @member {Array.<proto.ITask>} tasks
         * @memberof proto.HonorRoll
         * @instance
         */
        HonorRoll.prototype.tasks = $util.emptyArray;

        /**
         * Encodes the specified HonorRoll message. Does not implicitly {@link proto.HonorRoll.verify|verify} messages.
         * @function encode
         * @memberof proto.HonorRoll
         * @static
         * @param {proto.IHonorRoll} m HonorRoll message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        HonorRoll.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.activityId != null && Object.hasOwnProperty.call(m, "activityId"))
                w.uint32(8).int32(m.activityId);
            if (m.activityEndTime != null && Object.hasOwnProperty.call(m, "activityEndTime"))
                w.uint32(16).int64(m.activityEndTime);
            if (m.tasks != null && m.tasks.length) {
                for (var i = 0; i < m.tasks.length; ++i)
                    $root.proto.Task.encode(m.tasks[i], w.uint32(26).fork()).ldelim();
            }
            return w;
        };

        /**
         * Decodes an HonorRoll message from the specified reader or buffer.
         * @function decode
         * @memberof proto.HonorRoll
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.HonorRoll} HonorRoll
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        HonorRoll.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.HonorRoll();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.activityId = r.int32();
                    break;
                case 2:
                    m.activityEndTime = r.int64();
                    break;
                case 3:
                    if (!(m.tasks && m.tasks.length))
                        m.tasks = [];
                    m.tasks.push($root.proto.Task.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return HonorRoll;
    })();

    proto.Msg_GetHonorRollMapReq = (function() {

        /**
         * Properties of a Msg_GetHonorRollMapReq.
         * @memberof proto
         * @interface IMsg_GetHonorRollMapReq
         */

        /**
         * Constructs a new Msg_GetHonorRollMapReq.
         * @memberof proto
         * @classdesc Represents a Msg_GetHonorRollMapReq.
         * @implements IMsg_GetHonorRollMapReq
         * @constructor
         * @param {proto.IMsg_GetHonorRollMapReq=} [p] Properties to set
         */
        function Msg_GetHonorRollMapReq(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Encodes the specified Msg_GetHonorRollMapReq message. Does not implicitly {@link proto.Msg_GetHonorRollMapReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_GetHonorRollMapReq
         * @static
         * @param {proto.IMsg_GetHonorRollMapReq} m Msg_GetHonorRollMapReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_GetHonorRollMapReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };

        /**
         * Decodes a Msg_GetHonorRollMapReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_GetHonorRollMapReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_GetHonorRollMapReq} Msg_GetHonorRollMapReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_GetHonorRollMapReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_GetHonorRollMapReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_GetHonorRollMapReq;
    })();

    proto.Msg_GetHonorRollMapRsp = (function() {

        /**
         * Properties of a Msg_GetHonorRollMapRsp.
         * @memberof proto
         * @interface IMsg_GetHonorRollMapRsp
         * @property {Object.<string,proto.IHonorRoll>|null} [honorRollMap] Msg_GetHonorRollMapRsp honorRollMap
         */

        /**
         * Constructs a new Msg_GetHonorRollMapRsp.
         * @memberof proto
         * @classdesc Represents a Msg_GetHonorRollMapRsp.
         * @implements IMsg_GetHonorRollMapRsp
         * @constructor
         * @param {proto.IMsg_GetHonorRollMapRsp=} [p] Properties to set
         */
        function Msg_GetHonorRollMapRsp(p) {
            this.honorRollMap = {};
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_GetHonorRollMapRsp honorRollMap.
         * @member {Object.<string,proto.IHonorRoll>} honorRollMap
         * @memberof proto.Msg_GetHonorRollMapRsp
         * @instance
         */
        Msg_GetHonorRollMapRsp.prototype.honorRollMap = $util.emptyObject;

        /**
         * Encodes the specified Msg_GetHonorRollMapRsp message. Does not implicitly {@link proto.Msg_GetHonorRollMapRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_GetHonorRollMapRsp
         * @static
         * @param {proto.IMsg_GetHonorRollMapRsp} m Msg_GetHonorRollMapRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_GetHonorRollMapRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.honorRollMap != null && Object.hasOwnProperty.call(m, "honorRollMap")) {
                for (var ks = Object.keys(m.honorRollMap), i = 0; i < ks.length; ++i) {
                    w.uint32(10).fork().uint32(8).int32(ks[i]);
                    $root.proto.HonorRoll.encode(m.honorRollMap[ks[i]], w.uint32(18).fork()).ldelim().ldelim();
                }
            }
            return w;
        };

        /**
         * Decodes a Msg_GetHonorRollMapRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_GetHonorRollMapRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_GetHonorRollMapRsp} Msg_GetHonorRollMapRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_GetHonorRollMapRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_GetHonorRollMapRsp(), k, value;
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (m.honorRollMap === $util.emptyObject)
                        m.honorRollMap = {};
                    var c2 = r.uint32() + r.pos;
                    k = 0;
                    value = null;
                    while (r.pos < c2) {
                        var tag2 = r.uint32();
                        switch (tag2 >>> 3) {
                        case 1:
                            k = r.int32();
                            break;
                        case 2:
                            value = $root.proto.HonorRoll.decode(r, r.uint32());
                            break;
                        default:
                            r.skipType(tag2 & 7);
                            break;
                        }
                    }
                    m.honorRollMap[k] = value;
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_GetHonorRollMapRsp;
    })();

    proto.Msg_ReceiveHonorRollTasksRewardsReq = (function() {

        /**
         * Properties of a Msg_ReceiveHonorRollTasksRewardsReq.
         * @memberof proto
         * @interface IMsg_ReceiveHonorRollTasksRewardsReq
         * @property {number|null} [activityId] Msg_ReceiveHonorRollTasksRewardsReq activityId
         * @property {Array.<number>|null} [taskIds] Msg_ReceiveHonorRollTasksRewardsReq taskIds
         */

        /**
         * Constructs a new Msg_ReceiveHonorRollTasksRewardsReq.
         * @memberof proto
         * @classdesc Represents a Msg_ReceiveHonorRollTasksRewardsReq.
         * @implements IMsg_ReceiveHonorRollTasksRewardsReq
         * @constructor
         * @param {proto.IMsg_ReceiveHonorRollTasksRewardsReq=} [p] Properties to set
         */
        function Msg_ReceiveHonorRollTasksRewardsReq(p) {
            this.taskIds = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_ReceiveHonorRollTasksRewardsReq activityId.
         * @member {number} activityId
         * @memberof proto.Msg_ReceiveHonorRollTasksRewardsReq
         * @instance
         */
        Msg_ReceiveHonorRollTasksRewardsReq.prototype.activityId = 0;

        /**
         * Msg_ReceiveHonorRollTasksRewardsReq taskIds.
         * @member {Array.<number>} taskIds
         * @memberof proto.Msg_ReceiveHonorRollTasksRewardsReq
         * @instance
         */
        Msg_ReceiveHonorRollTasksRewardsReq.prototype.taskIds = $util.emptyArray;

        /**
         * Encodes the specified Msg_ReceiveHonorRollTasksRewardsReq message. Does not implicitly {@link proto.Msg_ReceiveHonorRollTasksRewardsReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_ReceiveHonorRollTasksRewardsReq
         * @static
         * @param {proto.IMsg_ReceiveHonorRollTasksRewardsReq} m Msg_ReceiveHonorRollTasksRewardsReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_ReceiveHonorRollTasksRewardsReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.activityId != null && Object.hasOwnProperty.call(m, "activityId"))
                w.uint32(8).int32(m.activityId);
            if (m.taskIds != null && m.taskIds.length) {
                w.uint32(18).fork();
                for (var i = 0; i < m.taskIds.length; ++i)
                    w.int32(m.taskIds[i]);
                w.ldelim();
            }
            return w;
        };

        /**
         * Decodes a Msg_ReceiveHonorRollTasksRewardsReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_ReceiveHonorRollTasksRewardsReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_ReceiveHonorRollTasksRewardsReq} Msg_ReceiveHonorRollTasksRewardsReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_ReceiveHonorRollTasksRewardsReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_ReceiveHonorRollTasksRewardsReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.activityId = r.int32();
                    break;
                case 2:
                    if (!(m.taskIds && m.taskIds.length))
                        m.taskIds = [];
                    if ((t & 7) === 2) {
                        var c2 = r.uint32() + r.pos;
                        while (r.pos < c2)
                            m.taskIds.push(r.int32());
                    } else
                        m.taskIds.push(r.int32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_ReceiveHonorRollTasksRewardsReq;
    })();

    proto.Msg_ReceiveHonorRollTasksRewardsRsp = (function() {

        /**
         * Properties of a Msg_ReceiveHonorRollTasksRewardsRsp.
         * @memberof proto
         * @interface IMsg_ReceiveHonorRollTasksRewardsRsp
         * @property {proto.ICommonError|null} [error] Msg_ReceiveHonorRollTasksRewardsRsp error
         * @property {number|null} [activityId] Msg_ReceiveHonorRollTasksRewardsRsp activityId
         * @property {Array.<number>|null} [taskIds] Msg_ReceiveHonorRollTasksRewardsRsp taskIds
         * @property {Array.<proto.IItem>|null} [rewards] Msg_ReceiveHonorRollTasksRewardsRsp rewards
         */

        /**
         * Constructs a new Msg_ReceiveHonorRollTasksRewardsRsp.
         * @memberof proto
         * @classdesc Represents a Msg_ReceiveHonorRollTasksRewardsRsp.
         * @implements IMsg_ReceiveHonorRollTasksRewardsRsp
         * @constructor
         * @param {proto.IMsg_ReceiveHonorRollTasksRewardsRsp=} [p] Properties to set
         */
        function Msg_ReceiveHonorRollTasksRewardsRsp(p) {
            this.taskIds = [];
            this.rewards = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_ReceiveHonorRollTasksRewardsRsp error.
         * @member {proto.ICommonError|null|undefined} error
         * @memberof proto.Msg_ReceiveHonorRollTasksRewardsRsp
         * @instance
         */
        Msg_ReceiveHonorRollTasksRewardsRsp.prototype.error = null;

        /**
         * Msg_ReceiveHonorRollTasksRewardsRsp activityId.
         * @member {number} activityId
         * @memberof proto.Msg_ReceiveHonorRollTasksRewardsRsp
         * @instance
         */
        Msg_ReceiveHonorRollTasksRewardsRsp.prototype.activityId = 0;

        /**
         * Msg_ReceiveHonorRollTasksRewardsRsp taskIds.
         * @member {Array.<number>} taskIds
         * @memberof proto.Msg_ReceiveHonorRollTasksRewardsRsp
         * @instance
         */
        Msg_ReceiveHonorRollTasksRewardsRsp.prototype.taskIds = $util.emptyArray;

        /**
         * Msg_ReceiveHonorRollTasksRewardsRsp rewards.
         * @member {Array.<proto.IItem>} rewards
         * @memberof proto.Msg_ReceiveHonorRollTasksRewardsRsp
         * @instance
         */
        Msg_ReceiveHonorRollTasksRewardsRsp.prototype.rewards = $util.emptyArray;

        /**
         * Encodes the specified Msg_ReceiveHonorRollTasksRewardsRsp message. Does not implicitly {@link proto.Msg_ReceiveHonorRollTasksRewardsRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_ReceiveHonorRollTasksRewardsRsp
         * @static
         * @param {proto.IMsg_ReceiveHonorRollTasksRewardsRsp} m Msg_ReceiveHonorRollTasksRewardsRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_ReceiveHonorRollTasksRewardsRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.error != null && Object.hasOwnProperty.call(m, "error"))
                $root.proto.CommonError.encode(m.error, w.uint32(10).fork()).ldelim();
            if (m.activityId != null && Object.hasOwnProperty.call(m, "activityId"))
                w.uint32(16).int32(m.activityId);
            if (m.taskIds != null && m.taskIds.length) {
                w.uint32(26).fork();
                for (var i = 0; i < m.taskIds.length; ++i)
                    w.int32(m.taskIds[i]);
                w.ldelim();
            }
            if (m.rewards != null && m.rewards.length) {
                for (var i = 0; i < m.rewards.length; ++i)
                    $root.proto.Item.encode(m.rewards[i], w.uint32(34).fork()).ldelim();
            }
            return w;
        };

        /**
         * Decodes a Msg_ReceiveHonorRollTasksRewardsRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_ReceiveHonorRollTasksRewardsRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_ReceiveHonorRollTasksRewardsRsp} Msg_ReceiveHonorRollTasksRewardsRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_ReceiveHonorRollTasksRewardsRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_ReceiveHonorRollTasksRewardsRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.error = $root.proto.CommonError.decode(r, r.uint32());
                    break;
                case 2:
                    m.activityId = r.int32();
                    break;
                case 3:
                    if (!(m.taskIds && m.taskIds.length))
                        m.taskIds = [];
                    if ((t & 7) === 2) {
                        var c2 = r.uint32() + r.pos;
                        while (r.pos < c2)
                            m.taskIds.push(r.int32());
                    } else
                        m.taskIds.push(r.int32());
                    break;
                case 4:
                    if (!(m.rewards && m.rewards.length))
                        m.rewards = [];
                    m.rewards.push($root.proto.Item.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_ReceiveHonorRollTasksRewardsRsp;
    })();

    proto.Activity = (function() {

        /**
         * Properties of an Activity.
         * @memberof proto
         * @interface IActivity
         * @property {number|null} [TabId] Activity TabId
         * @property {number|Long|null} [startTime] Activity startTime
         * @property {number|Long|null} [endTime] Activity endTime
         */

        /**
         * Constructs a new Activity.
         * @memberof proto
         * @classdesc Represents an Activity.
         * @implements IActivity
         * @constructor
         * @param {proto.IActivity=} [p] Properties to set
         */
        function Activity(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Activity TabId.
         * @member {number} TabId
         * @memberof proto.Activity
         * @instance
         */
        Activity.prototype.TabId = 0;

        /**
         * Activity startTime.
         * @member {number|Long} startTime
         * @memberof proto.Activity
         * @instance
         */
        Activity.prototype.startTime = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

        /**
         * Activity endTime.
         * @member {number|Long} endTime
         * @memberof proto.Activity
         * @instance
         */
        Activity.prototype.endTime = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

        /**
         * Encodes the specified Activity message. Does not implicitly {@link proto.Activity.verify|verify} messages.
         * @function encode
         * @memberof proto.Activity
         * @static
         * @param {proto.IActivity} m Activity message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Activity.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.TabId != null && Object.hasOwnProperty.call(m, "TabId"))
                w.uint32(8).int32(m.TabId);
            if (m.startTime != null && Object.hasOwnProperty.call(m, "startTime"))
                w.uint32(16).int64(m.startTime);
            if (m.endTime != null && Object.hasOwnProperty.call(m, "endTime"))
                w.uint32(24).int64(m.endTime);
            return w;
        };

        /**
         * Decodes an Activity message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Activity
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Activity} Activity
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Activity.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Activity();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.TabId = r.int32();
                    break;
                case 2:
                    m.startTime = r.int64();
                    break;
                case 3:
                    m.endTime = r.int64();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Activity;
    })();

    proto.Msg_ActivitiesPush = (function() {

        /**
         * Properties of a Msg_ActivitiesPush.
         * @memberof proto
         * @interface IMsg_ActivitiesPush
         * @property {Array.<proto.IActivity>|null} [activities] Msg_ActivitiesPush activities
         */

        /**
         * Constructs a new Msg_ActivitiesPush.
         * @memberof proto
         * @classdesc Represents a Msg_ActivitiesPush.
         * @implements IMsg_ActivitiesPush
         * @constructor
         * @param {proto.IMsg_ActivitiesPush=} [p] Properties to set
         */
        function Msg_ActivitiesPush(p) {
            this.activities = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_ActivitiesPush activities.
         * @member {Array.<proto.IActivity>} activities
         * @memberof proto.Msg_ActivitiesPush
         * @instance
         */
        Msg_ActivitiesPush.prototype.activities = $util.emptyArray;

        /**
         * Encodes the specified Msg_ActivitiesPush message. Does not implicitly {@link proto.Msg_ActivitiesPush.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_ActivitiesPush
         * @static
         * @param {proto.IMsg_ActivitiesPush} m Msg_ActivitiesPush message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_ActivitiesPush.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.activities != null && m.activities.length) {
                for (var i = 0; i < m.activities.length; ++i)
                    $root.proto.Activity.encode(m.activities[i], w.uint32(10).fork()).ldelim();
            }
            return w;
        };

        /**
         * Decodes a Msg_ActivitiesPush message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_ActivitiesPush
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_ActivitiesPush} Msg_ActivitiesPush
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_ActivitiesPush.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_ActivitiesPush();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.activities && m.activities.length))
                        m.activities = [];
                    m.activities.push($root.proto.Activity.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_ActivitiesPush;
    })();

    proto.Msg_SetClientDataReq = (function() {

        /**
         * Properties of a Msg_SetClientDataReq.
         * @memberof proto
         * @interface IMsg_SetClientDataReq
         * @property {string|null} [key] Msg_SetClientDataReq key
         * @property {string|null} [data] Msg_SetClientDataReq data
         */

        /**
         * Constructs a new Msg_SetClientDataReq.
         * @memberof proto
         * @classdesc Represents a Msg_SetClientDataReq.
         * @implements IMsg_SetClientDataReq
         * @constructor
         * @param {proto.IMsg_SetClientDataReq=} [p] Properties to set
         */
        function Msg_SetClientDataReq(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_SetClientDataReq key.
         * @member {string} key
         * @memberof proto.Msg_SetClientDataReq
         * @instance
         */
        Msg_SetClientDataReq.prototype.key = "";

        /**
         * Msg_SetClientDataReq data.
         * @member {string} data
         * @memberof proto.Msg_SetClientDataReq
         * @instance
         */
        Msg_SetClientDataReq.prototype.data = "";

        /**
         * Encodes the specified Msg_SetClientDataReq message. Does not implicitly {@link proto.Msg_SetClientDataReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_SetClientDataReq
         * @static
         * @param {proto.IMsg_SetClientDataReq} m Msg_SetClientDataReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_SetClientDataReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.key != null && Object.hasOwnProperty.call(m, "key"))
                w.uint32(10).string(m.key);
            if (m.data != null && Object.hasOwnProperty.call(m, "data"))
                w.uint32(18).string(m.data);
            return w;
        };

        /**
         * Decodes a Msg_SetClientDataReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_SetClientDataReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_SetClientDataReq} Msg_SetClientDataReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_SetClientDataReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_SetClientDataReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.key = r.string();
                    break;
                case 2:
                    m.data = r.string();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_SetClientDataReq;
    })();

    proto.Msg_SetClientDataRsp = (function() {

        /**
         * Properties of a Msg_SetClientDataRsp.
         * @memberof proto
         * @interface IMsg_SetClientDataRsp
         * @property {proto.ICommonError|null} [error] Msg_SetClientDataRsp error
         */

        /**
         * Constructs a new Msg_SetClientDataRsp.
         * @memberof proto
         * @classdesc Represents a Msg_SetClientDataRsp.
         * @implements IMsg_SetClientDataRsp
         * @constructor
         * @param {proto.IMsg_SetClientDataRsp=} [p] Properties to set
         */
        function Msg_SetClientDataRsp(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_SetClientDataRsp error.
         * @member {proto.ICommonError|null|undefined} error
         * @memberof proto.Msg_SetClientDataRsp
         * @instance
         */
        Msg_SetClientDataRsp.prototype.error = null;

        /**
         * Encodes the specified Msg_SetClientDataRsp message. Does not implicitly {@link proto.Msg_SetClientDataRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_SetClientDataRsp
         * @static
         * @param {proto.IMsg_SetClientDataRsp} m Msg_SetClientDataRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_SetClientDataRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.error != null && Object.hasOwnProperty.call(m, "error"))
                $root.proto.CommonError.encode(m.error, w.uint32(10).fork()).ldelim();
            return w;
        };

        /**
         * Decodes a Msg_SetClientDataRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_SetClientDataRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_SetClientDataRsp} Msg_SetClientDataRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_SetClientDataRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_SetClientDataRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.error = $root.proto.CommonError.decode(r, r.uint32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_SetClientDataRsp;
    })();

    proto.Msg_ChangedScrollPaintingPush = (function() {

        /**
         * Properties of a Msg_ChangedScrollPaintingPush.
         * @memberof proto
         * @interface IMsg_ChangedScrollPaintingPush
         * @property {proto.IScrollPainting|null} [painting] Msg_ChangedScrollPaintingPush painting
         */

        /**
         * Constructs a new Msg_ChangedScrollPaintingPush.
         * @memberof proto
         * @classdesc Represents a Msg_ChangedScrollPaintingPush.
         * @implements IMsg_ChangedScrollPaintingPush
         * @constructor
         * @param {proto.IMsg_ChangedScrollPaintingPush=} [p] Properties to set
         */
        function Msg_ChangedScrollPaintingPush(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_ChangedScrollPaintingPush painting.
         * @member {proto.IScrollPainting|null|undefined} painting
         * @memberof proto.Msg_ChangedScrollPaintingPush
         * @instance
         */
        Msg_ChangedScrollPaintingPush.prototype.painting = null;

        /**
         * Encodes the specified Msg_ChangedScrollPaintingPush message. Does not implicitly {@link proto.Msg_ChangedScrollPaintingPush.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_ChangedScrollPaintingPush
         * @static
         * @param {proto.IMsg_ChangedScrollPaintingPush} m Msg_ChangedScrollPaintingPush message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_ChangedScrollPaintingPush.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.painting != null && Object.hasOwnProperty.call(m, "painting"))
                $root.proto.ScrollPainting.encode(m.painting, w.uint32(10).fork()).ldelim();
            return w;
        };

        /**
         * Decodes a Msg_ChangedScrollPaintingPush message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_ChangedScrollPaintingPush
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_ChangedScrollPaintingPush} Msg_ChangedScrollPaintingPush
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_ChangedScrollPaintingPush.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_ChangedScrollPaintingPush();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.painting = $root.proto.ScrollPainting.decode(r, r.uint32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_ChangedScrollPaintingPush;
    })();

    proto.Msg_GetServerTimeReq = (function() {

        /**
         * Properties of a Msg_GetServerTimeReq.
         * @memberof proto
         * @interface IMsg_GetServerTimeReq
         * @property {number|Long|null} [clientTime] Msg_GetServerTimeReq clientTime
         */

        /**
         * Constructs a new Msg_GetServerTimeReq.
         * @memberof proto
         * @classdesc Represents a Msg_GetServerTimeReq.
         * @implements IMsg_GetServerTimeReq
         * @constructor
         * @param {proto.IMsg_GetServerTimeReq=} [p] Properties to set
         */
        function Msg_GetServerTimeReq(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_GetServerTimeReq clientTime.
         * @member {number|Long} clientTime
         * @memberof proto.Msg_GetServerTimeReq
         * @instance
         */
        Msg_GetServerTimeReq.prototype.clientTime = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

        /**
         * Encodes the specified Msg_GetServerTimeReq message. Does not implicitly {@link proto.Msg_GetServerTimeReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_GetServerTimeReq
         * @static
         * @param {proto.IMsg_GetServerTimeReq} m Msg_GetServerTimeReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_GetServerTimeReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.clientTime != null && Object.hasOwnProperty.call(m, "clientTime"))
                w.uint32(8).int64(m.clientTime);
            return w;
        };

        /**
         * Decodes a Msg_GetServerTimeReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_GetServerTimeReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_GetServerTimeReq} Msg_GetServerTimeReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_GetServerTimeReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_GetServerTimeReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.clientTime = r.int64();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_GetServerTimeReq;
    })();

    proto.Msg_GetServerTimeRsp = (function() {

        /**
         * Properties of a Msg_GetServerTimeRsp.
         * @memberof proto
         * @interface IMsg_GetServerTimeRsp
         * @property {number|Long|null} [serverTime] Msg_GetServerTimeRsp serverTime
         * @property {number|Long|null} [clientTime] Msg_GetServerTimeRsp clientTime
         */

        /**
         * Constructs a new Msg_GetServerTimeRsp.
         * @memberof proto
         * @classdesc Represents a Msg_GetServerTimeRsp.
         * @implements IMsg_GetServerTimeRsp
         * @constructor
         * @param {proto.IMsg_GetServerTimeRsp=} [p] Properties to set
         */
        function Msg_GetServerTimeRsp(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_GetServerTimeRsp serverTime.
         * @member {number|Long} serverTime
         * @memberof proto.Msg_GetServerTimeRsp
         * @instance
         */
        Msg_GetServerTimeRsp.prototype.serverTime = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

        /**
         * Msg_GetServerTimeRsp clientTime.
         * @member {number|Long} clientTime
         * @memberof proto.Msg_GetServerTimeRsp
         * @instance
         */
        Msg_GetServerTimeRsp.prototype.clientTime = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

        /**
         * Encodes the specified Msg_GetServerTimeRsp message. Does not implicitly {@link proto.Msg_GetServerTimeRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_GetServerTimeRsp
         * @static
         * @param {proto.IMsg_GetServerTimeRsp} m Msg_GetServerTimeRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_GetServerTimeRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.serverTime != null && Object.hasOwnProperty.call(m, "serverTime"))
                w.uint32(8).int64(m.serverTime);
            if (m.clientTime != null && Object.hasOwnProperty.call(m, "clientTime"))
                w.uint32(16).int64(m.clientTime);
            return w;
        };

        /**
         * Decodes a Msg_GetServerTimeRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_GetServerTimeRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_GetServerTimeRsp} Msg_GetServerTimeRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_GetServerTimeRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_GetServerTimeRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.serverTime = r.int64();
                    break;
                case 2:
                    m.clientTime = r.int64();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_GetServerTimeRsp;
    })();

    proto.Msg_PingDelay = (function() {

        /**
         * Properties of a Msg_PingDelay.
         * @memberof proto
         * @interface IMsg_PingDelay
         * @property {number|null} [delay] Msg_PingDelay delay
         */

        /**
         * Constructs a new Msg_PingDelay.
         * @memberof proto
         * @classdesc Represents a Msg_PingDelay.
         * @implements IMsg_PingDelay
         * @constructor
         * @param {proto.IMsg_PingDelay=} [p] Properties to set
         */
        function Msg_PingDelay(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_PingDelay delay.
         * @member {number} delay
         * @memberof proto.Msg_PingDelay
         * @instance
         */
        Msg_PingDelay.prototype.delay = 0;

        /**
         * Encodes the specified Msg_PingDelay message. Does not implicitly {@link proto.Msg_PingDelay.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_PingDelay
         * @static
         * @param {proto.IMsg_PingDelay} m Msg_PingDelay message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_PingDelay.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.delay != null && Object.hasOwnProperty.call(m, "delay"))
                w.uint32(8).int32(m.delay);
            return w;
        };

        /**
         * Decodes a Msg_PingDelay message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_PingDelay
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_PingDelay} Msg_PingDelay
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_PingDelay.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_PingDelay();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.delay = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_PingDelay;
    })();

    proto.SimpleGuild = (function() {

        /**
         * Properties of a SimpleGuild.
         * @memberof proto
         * @interface ISimpleGuild
         * @property {string|null} [id] SimpleGuild id
         * @property {number|null} [areaId] SimpleGuild areaId
         * @property {string|null} [name] SimpleGuild name
         * @property {string|null} [leaderId] SimpleGuild leaderId
         * @property {string|null} [leaderName] SimpleGuild leaderName
         * @property {number|null} [flagId] SimpleGuild flagId
         * @property {number|null} [level] SimpleGuild level
         * @property {number|null} [exp] SimpleGuild exp
         * @property {string|null} [notice] SimpleGuild notice
         * @property {number|Long|null} [createTime] SimpleGuild createTime
         * @property {number|null} [memberCount] SimpleGuild memberCount
         * @property {number|null} [powerScore] SimpleGuild powerScore
         * @property {boolean|null} [needCheck] SimpleGuild needCheck
         */

        /**
         * Constructs a new SimpleGuild.
         * @memberof proto
         * @classdesc Represents a SimpleGuild.
         * @implements ISimpleGuild
         * @constructor
         * @param {proto.ISimpleGuild=} [p] Properties to set
         */
        function SimpleGuild(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * SimpleGuild id.
         * @member {string} id
         * @memberof proto.SimpleGuild
         * @instance
         */
        SimpleGuild.prototype.id = "";

        /**
         * SimpleGuild areaId.
         * @member {number} areaId
         * @memberof proto.SimpleGuild
         * @instance
         */
        SimpleGuild.prototype.areaId = 0;

        /**
         * SimpleGuild name.
         * @member {string} name
         * @memberof proto.SimpleGuild
         * @instance
         */
        SimpleGuild.prototype.name = "";

        /**
         * SimpleGuild leaderId.
         * @member {string} leaderId
         * @memberof proto.SimpleGuild
         * @instance
         */
        SimpleGuild.prototype.leaderId = "";

        /**
         * SimpleGuild leaderName.
         * @member {string} leaderName
         * @memberof proto.SimpleGuild
         * @instance
         */
        SimpleGuild.prototype.leaderName = "";

        /**
         * SimpleGuild flagId.
         * @member {number} flagId
         * @memberof proto.SimpleGuild
         * @instance
         */
        SimpleGuild.prototype.flagId = 0;

        /**
         * SimpleGuild level.
         * @member {number} level
         * @memberof proto.SimpleGuild
         * @instance
         */
        SimpleGuild.prototype.level = 0;

        /**
         * SimpleGuild exp.
         * @member {number} exp
         * @memberof proto.SimpleGuild
         * @instance
         */
        SimpleGuild.prototype.exp = 0;

        /**
         * SimpleGuild notice.
         * @member {string} notice
         * @memberof proto.SimpleGuild
         * @instance
         */
        SimpleGuild.prototype.notice = "";

        /**
         * SimpleGuild createTime.
         * @member {number|Long} createTime
         * @memberof proto.SimpleGuild
         * @instance
         */
        SimpleGuild.prototype.createTime = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

        /**
         * SimpleGuild memberCount.
         * @member {number} memberCount
         * @memberof proto.SimpleGuild
         * @instance
         */
        SimpleGuild.prototype.memberCount = 0;

        /**
         * SimpleGuild powerScore.
         * @member {number} powerScore
         * @memberof proto.SimpleGuild
         * @instance
         */
        SimpleGuild.prototype.powerScore = 0;

        /**
         * SimpleGuild needCheck.
         * @member {boolean} needCheck
         * @memberof proto.SimpleGuild
         * @instance
         */
        SimpleGuild.prototype.needCheck = false;

        /**
         * Encodes the specified SimpleGuild message. Does not implicitly {@link proto.SimpleGuild.verify|verify} messages.
         * @function encode
         * @memberof proto.SimpleGuild
         * @static
         * @param {proto.ISimpleGuild} m SimpleGuild message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        SimpleGuild.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.id != null && Object.hasOwnProperty.call(m, "id"))
                w.uint32(10).string(m.id);
            if (m.areaId != null && Object.hasOwnProperty.call(m, "areaId"))
                w.uint32(16).int32(m.areaId);
            if (m.name != null && Object.hasOwnProperty.call(m, "name"))
                w.uint32(26).string(m.name);
            if (m.leaderId != null && Object.hasOwnProperty.call(m, "leaderId"))
                w.uint32(34).string(m.leaderId);
            if (m.leaderName != null && Object.hasOwnProperty.call(m, "leaderName"))
                w.uint32(42).string(m.leaderName);
            if (m.flagId != null && Object.hasOwnProperty.call(m, "flagId"))
                w.uint32(48).int32(m.flagId);
            if (m.level != null && Object.hasOwnProperty.call(m, "level"))
                w.uint32(56).int32(m.level);
            if (m.exp != null && Object.hasOwnProperty.call(m, "exp"))
                w.uint32(64).int32(m.exp);
            if (m.notice != null && Object.hasOwnProperty.call(m, "notice"))
                w.uint32(74).string(m.notice);
            if (m.createTime != null && Object.hasOwnProperty.call(m, "createTime"))
                w.uint32(80).int64(m.createTime);
            if (m.memberCount != null && Object.hasOwnProperty.call(m, "memberCount"))
                w.uint32(88).int32(m.memberCount);
            if (m.powerScore != null && Object.hasOwnProperty.call(m, "powerScore"))
                w.uint32(96).int32(m.powerScore);
            if (m.needCheck != null && Object.hasOwnProperty.call(m, "needCheck"))
                w.uint32(104).bool(m.needCheck);
            return w;
        };

        /**
         * Decodes a SimpleGuild message from the specified reader or buffer.
         * @function decode
         * @memberof proto.SimpleGuild
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.SimpleGuild} SimpleGuild
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        SimpleGuild.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.SimpleGuild();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.id = r.string();
                    break;
                case 2:
                    m.areaId = r.int32();
                    break;
                case 3:
                    m.name = r.string();
                    break;
                case 4:
                    m.leaderId = r.string();
                    break;
                case 5:
                    m.leaderName = r.string();
                    break;
                case 6:
                    m.flagId = r.int32();
                    break;
                case 7:
                    m.level = r.int32();
                    break;
                case 8:
                    m.exp = r.int32();
                    break;
                case 9:
                    m.notice = r.string();
                    break;
                case 10:
                    m.createTime = r.int64();
                    break;
                case 11:
                    m.memberCount = r.int32();
                    break;
                case 12:
                    m.powerScore = r.int32();
                    break;
                case 13:
                    m.needCheck = r.bool();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return SimpleGuild;
    })();

    proto.GuildMember = (function() {

        /**
         * Properties of a GuildMember.
         * @memberof proto
         * @interface IGuildMember
         * @property {string|null} [roleId] GuildMember roleId
         * @property {number|null} [job] GuildMember job
         * @property {number|Long|null} [joinTime] GuildMember joinTime
         * @property {string|null} [name] GuildMember name
         * @property {number|null} [powerScore] GuildMember powerScore
         * @property {number|null} [headIcon] GuildMember headIcon
         * @property {number|null} [headFrame] GuildMember headFrame
         * @property {number|Long|null} [lastLoginTime] GuildMember lastLoginTime
         * @property {number|Long|null} [lastLogoutTime] GuildMember lastLogoutTime
         * @property {number|null} [level] GuildMember level
         * @property {number|null} [contribution] GuildMember contribution
         * @property {number|null} [highestHeroItemId] GuildMember highestHeroItemId
         * @property {number|null} [kickOutMemberCount] GuildMember kickOutMemberCount
         */

        /**
         * Constructs a new GuildMember.
         * @memberof proto
         * @classdesc Represents a GuildMember.
         * @implements IGuildMember
         * @constructor
         * @param {proto.IGuildMember=} [p] Properties to set
         */
        function GuildMember(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * GuildMember roleId.
         * @member {string} roleId
         * @memberof proto.GuildMember
         * @instance
         */
        GuildMember.prototype.roleId = "";

        /**
         * GuildMember job.
         * @member {number} job
         * @memberof proto.GuildMember
         * @instance
         */
        GuildMember.prototype.job = 0;

        /**
         * GuildMember joinTime.
         * @member {number|Long} joinTime
         * @memberof proto.GuildMember
         * @instance
         */
        GuildMember.prototype.joinTime = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

        /**
         * GuildMember name.
         * @member {string} name
         * @memberof proto.GuildMember
         * @instance
         */
        GuildMember.prototype.name = "";

        /**
         * GuildMember powerScore.
         * @member {number} powerScore
         * @memberof proto.GuildMember
         * @instance
         */
        GuildMember.prototype.powerScore = 0;

        /**
         * GuildMember headIcon.
         * @member {number} headIcon
         * @memberof proto.GuildMember
         * @instance
         */
        GuildMember.prototype.headIcon = 0;

        /**
         * GuildMember headFrame.
         * @member {number} headFrame
         * @memberof proto.GuildMember
         * @instance
         */
        GuildMember.prototype.headFrame = 0;

        /**
         * GuildMember lastLoginTime.
         * @member {number|Long} lastLoginTime
         * @memberof proto.GuildMember
         * @instance
         */
        GuildMember.prototype.lastLoginTime = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

        /**
         * GuildMember lastLogoutTime.
         * @member {number|Long} lastLogoutTime
         * @memberof proto.GuildMember
         * @instance
         */
        GuildMember.prototype.lastLogoutTime = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

        /**
         * GuildMember level.
         * @member {number} level
         * @memberof proto.GuildMember
         * @instance
         */
        GuildMember.prototype.level = 0;

        /**
         * GuildMember contribution.
         * @member {number} contribution
         * @memberof proto.GuildMember
         * @instance
         */
        GuildMember.prototype.contribution = 0;

        /**
         * GuildMember highestHeroItemId.
         * @member {number} highestHeroItemId
         * @memberof proto.GuildMember
         * @instance
         */
        GuildMember.prototype.highestHeroItemId = 0;

        /**
         * GuildMember kickOutMemberCount.
         * @member {number} kickOutMemberCount
         * @memberof proto.GuildMember
         * @instance
         */
        GuildMember.prototype.kickOutMemberCount = 0;

        /**
         * Encodes the specified GuildMember message. Does not implicitly {@link proto.GuildMember.verify|verify} messages.
         * @function encode
         * @memberof proto.GuildMember
         * @static
         * @param {proto.IGuildMember} m GuildMember message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        GuildMember.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.roleId != null && Object.hasOwnProperty.call(m, "roleId"))
                w.uint32(10).string(m.roleId);
            if (m.job != null && Object.hasOwnProperty.call(m, "job"))
                w.uint32(16).int32(m.job);
            if (m.joinTime != null && Object.hasOwnProperty.call(m, "joinTime"))
                w.uint32(24).int64(m.joinTime);
            if (m.name != null && Object.hasOwnProperty.call(m, "name"))
                w.uint32(34).string(m.name);
            if (m.powerScore != null && Object.hasOwnProperty.call(m, "powerScore"))
                w.uint32(40).int32(m.powerScore);
            if (m.headIcon != null && Object.hasOwnProperty.call(m, "headIcon"))
                w.uint32(48).int32(m.headIcon);
            if (m.headFrame != null && Object.hasOwnProperty.call(m, "headFrame"))
                w.uint32(56).int32(m.headFrame);
            if (m.lastLoginTime != null && Object.hasOwnProperty.call(m, "lastLoginTime"))
                w.uint32(64).int64(m.lastLoginTime);
            if (m.lastLogoutTime != null && Object.hasOwnProperty.call(m, "lastLogoutTime"))
                w.uint32(72).int64(m.lastLogoutTime);
            if (m.level != null && Object.hasOwnProperty.call(m, "level"))
                w.uint32(80).int32(m.level);
            if (m.contribution != null && Object.hasOwnProperty.call(m, "contribution"))
                w.uint32(88).int32(m.contribution);
            if (m.highestHeroItemId != null && Object.hasOwnProperty.call(m, "highestHeroItemId"))
                w.uint32(96).int32(m.highestHeroItemId);
            if (m.kickOutMemberCount != null && Object.hasOwnProperty.call(m, "kickOutMemberCount"))
                w.uint32(104).int32(m.kickOutMemberCount);
            return w;
        };

        /**
         * Decodes a GuildMember message from the specified reader or buffer.
         * @function decode
         * @memberof proto.GuildMember
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.GuildMember} GuildMember
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        GuildMember.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.GuildMember();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.roleId = r.string();
                    break;
                case 2:
                    m.job = r.int32();
                    break;
                case 3:
                    m.joinTime = r.int64();
                    break;
                case 4:
                    m.name = r.string();
                    break;
                case 5:
                    m.powerScore = r.int32();
                    break;
                case 6:
                    m.headIcon = r.int32();
                    break;
                case 7:
                    m.headFrame = r.int32();
                    break;
                case 8:
                    m.lastLoginTime = r.int64();
                    break;
                case 9:
                    m.lastLogoutTime = r.int64();
                    break;
                case 10:
                    m.level = r.int32();
                    break;
                case 11:
                    m.contribution = r.int32();
                    break;
                case 12:
                    m.highestHeroItemId = r.int32();
                    break;
                case 13:
                    m.kickOutMemberCount = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return GuildMember;
    })();

    proto.BargainRecord = (function() {

        /**
         * Properties of a BargainRecord.
         * @memberof proto
         * @interface IBargainRecord
         * @property {string|null} [roleId] BargainRecord roleId
         * @property {string|null} [roleName] BargainRecord roleName
         * @property {number|null} [bargainNum] BargainRecord bargainNum
         */

        /**
         * Constructs a new BargainRecord.
         * @memberof proto
         * @classdesc Represents a BargainRecord.
         * @implements IBargainRecord
         * @constructor
         * @param {proto.IBargainRecord=} [p] Properties to set
         */
        function BargainRecord(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * BargainRecord roleId.
         * @member {string} roleId
         * @memberof proto.BargainRecord
         * @instance
         */
        BargainRecord.prototype.roleId = "";

        /**
         * BargainRecord roleName.
         * @member {string} roleName
         * @memberof proto.BargainRecord
         * @instance
         */
        BargainRecord.prototype.roleName = "";

        /**
         * BargainRecord bargainNum.
         * @member {number} bargainNum
         * @memberof proto.BargainRecord
         * @instance
         */
        BargainRecord.prototype.bargainNum = 0;

        /**
         * Encodes the specified BargainRecord message. Does not implicitly {@link proto.BargainRecord.verify|verify} messages.
         * @function encode
         * @memberof proto.BargainRecord
         * @static
         * @param {proto.IBargainRecord} m BargainRecord message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        BargainRecord.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.roleId != null && Object.hasOwnProperty.call(m, "roleId"))
                w.uint32(10).string(m.roleId);
            if (m.roleName != null && Object.hasOwnProperty.call(m, "roleName"))
                w.uint32(18).string(m.roleName);
            if (m.bargainNum != null && Object.hasOwnProperty.call(m, "bargainNum"))
                w.uint32(24).int32(m.bargainNum);
            return w;
        };

        /**
         * Decodes a BargainRecord message from the specified reader or buffer.
         * @function decode
         * @memberof proto.BargainRecord
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.BargainRecord} BargainRecord
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        BargainRecord.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.BargainRecord();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.roleId = r.string();
                    break;
                case 2:
                    m.roleName = r.string();
                    break;
                case 3:
                    m.bargainNum = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return BargainRecord;
    })();

    proto.GuildGift = (function() {

        /**
         * Properties of a GuildGift.
         * @memberof proto
         * @interface IGuildGift
         * @property {number|Long|null} [id] GuildGift id
         * @property {number|null} [tabId] GuildGift tabId
         * @property {Array.<proto.IBargainRecord>|null} [bargainRecords] GuildGift bargainRecords
         * @property {number|Long|null} [expireTime] GuildGift expireTime
         */

        /**
         * Constructs a new GuildGift.
         * @memberof proto
         * @classdesc Represents a GuildGift.
         * @implements IGuildGift
         * @constructor
         * @param {proto.IGuildGift=} [p] Properties to set
         */
        function GuildGift(p) {
            this.bargainRecords = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * GuildGift id.
         * @member {number|Long} id
         * @memberof proto.GuildGift
         * @instance
         */
        GuildGift.prototype.id = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

        /**
         * GuildGift tabId.
         * @member {number} tabId
         * @memberof proto.GuildGift
         * @instance
         */
        GuildGift.prototype.tabId = 0;

        /**
         * GuildGift bargainRecords.
         * @member {Array.<proto.IBargainRecord>} bargainRecords
         * @memberof proto.GuildGift
         * @instance
         */
        GuildGift.prototype.bargainRecords = $util.emptyArray;

        /**
         * GuildGift expireTime.
         * @member {number|Long} expireTime
         * @memberof proto.GuildGift
         * @instance
         */
        GuildGift.prototype.expireTime = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

        /**
         * Encodes the specified GuildGift message. Does not implicitly {@link proto.GuildGift.verify|verify} messages.
         * @function encode
         * @memberof proto.GuildGift
         * @static
         * @param {proto.IGuildGift} m GuildGift message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        GuildGift.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.id != null && Object.hasOwnProperty.call(m, "id"))
                w.uint32(8).int64(m.id);
            if (m.tabId != null && Object.hasOwnProperty.call(m, "tabId"))
                w.uint32(16).int32(m.tabId);
            if (m.bargainRecords != null && m.bargainRecords.length) {
                for (var i = 0; i < m.bargainRecords.length; ++i)
                    $root.proto.BargainRecord.encode(m.bargainRecords[i], w.uint32(26).fork()).ldelim();
            }
            if (m.expireTime != null && Object.hasOwnProperty.call(m, "expireTime"))
                w.uint32(32).int64(m.expireTime);
            return w;
        };

        /**
         * Decodes a GuildGift message from the specified reader or buffer.
         * @function decode
         * @memberof proto.GuildGift
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.GuildGift} GuildGift
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        GuildGift.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.GuildGift();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.id = r.int64();
                    break;
                case 2:
                    m.tabId = r.int32();
                    break;
                case 3:
                    if (!(m.bargainRecords && m.bargainRecords.length))
                        m.bargainRecords = [];
                    m.bargainRecords.push($root.proto.BargainRecord.decode(r, r.uint32()));
                    break;
                case 4:
                    m.expireTime = r.int64();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return GuildGift;
    })();

    proto.GuildLog = (function() {

        /**
         * Properties of a GuildLog.
         * @memberof proto
         * @interface IGuildLog
         * @property {string|null} [roleName] GuildLog roleName
         * @property {number|null} [event] GuildLog event
         * @property {number|Long|null} [time] GuildLog time
         */

        /**
         * Constructs a new GuildLog.
         * @memberof proto
         * @classdesc Represents a GuildLog.
         * @implements IGuildLog
         * @constructor
         * @param {proto.IGuildLog=} [p] Properties to set
         */
        function GuildLog(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * GuildLog roleName.
         * @member {string} roleName
         * @memberof proto.GuildLog
         * @instance
         */
        GuildLog.prototype.roleName = "";

        /**
         * GuildLog event.
         * @member {number} event
         * @memberof proto.GuildLog
         * @instance
         */
        GuildLog.prototype.event = 0;

        /**
         * GuildLog time.
         * @member {number|Long} time
         * @memberof proto.GuildLog
         * @instance
         */
        GuildLog.prototype.time = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

        /**
         * Encodes the specified GuildLog message. Does not implicitly {@link proto.GuildLog.verify|verify} messages.
         * @function encode
         * @memberof proto.GuildLog
         * @static
         * @param {proto.IGuildLog} m GuildLog message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        GuildLog.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.roleName != null && Object.hasOwnProperty.call(m, "roleName"))
                w.uint32(10).string(m.roleName);
            if (m.event != null && Object.hasOwnProperty.call(m, "event"))
                w.uint32(16).int32(m.event);
            if (m.time != null && Object.hasOwnProperty.call(m, "time"))
                w.uint32(24).int64(m.time);
            return w;
        };

        /**
         * Decodes a GuildLog message from the specified reader or buffer.
         * @function decode
         * @memberof proto.GuildLog
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.GuildLog} GuildLog
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        GuildLog.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.GuildLog();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.roleName = r.string();
                    break;
                case 2:
                    m.event = r.int32();
                    break;
                case 3:
                    m.time = r.int64();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return GuildLog;
    })();

    proto.GuildInfo = (function() {

        /**
         * Properties of a GuildInfo.
         * @memberof proto
         * @interface IGuildInfo
         * @property {proto.ISimpleGuild|null} [simple] GuildInfo simple
         * @property {Array.<proto.IGuildMember>|null} [members] GuildInfo members
         * @property {Array.<proto.IGuildGift>|null} [gifts] GuildInfo gifts
         * @property {number|null} [dailyFinishedTaskNumber] GuildInfo dailyFinishedTaskNumber
         * @property {number|null} [signTimes] GuildInfo signTimes
         * @property {Array.<number>|null} [receivedActivityIndexes] GuildInfo receivedActivityIndexes
         * @property {Object.<string,number>|null} [skillLevelMap] GuildInfo skillLevelMap
         * @property {number|Long|null} [notAllowJoinTime] GuildInfo notAllowJoinTime
         * @property {number|Long|null} [lastGetRecommendGuildsTime] GuildInfo lastGetRecommendGuildsTime
         * @property {Array.<proto.IGuildLog>|null} [logs] GuildInfo logs
         * @property {Array.<proto.ITask>|null} [tasks] GuildInfo tasks
         * @property {Array.<number>|null} [boughtUpLevelGiftTabIds] GuildInfo boughtUpLevelGiftTabIds
         * @property {boolean|null} [isBoughtCycleGift] GuildInfo isBoughtCycleGift
         * @property {number|null} [taskChestLevel] GuildInfo taskChestLevel
         * @property {boolean|null} [isBanNotice] GuildInfo isBanNotice
         */

        /**
         * Constructs a new GuildInfo.
         * @memberof proto
         * @classdesc Represents a GuildInfo.
         * @implements IGuildInfo
         * @constructor
         * @param {proto.IGuildInfo=} [p] Properties to set
         */
        function GuildInfo(p) {
            this.members = [];
            this.gifts = [];
            this.receivedActivityIndexes = [];
            this.skillLevelMap = {};
            this.logs = [];
            this.tasks = [];
            this.boughtUpLevelGiftTabIds = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * GuildInfo simple.
         * @member {proto.ISimpleGuild|null|undefined} simple
         * @memberof proto.GuildInfo
         * @instance
         */
        GuildInfo.prototype.simple = null;

        /**
         * GuildInfo members.
         * @member {Array.<proto.IGuildMember>} members
         * @memberof proto.GuildInfo
         * @instance
         */
        GuildInfo.prototype.members = $util.emptyArray;

        /**
         * GuildInfo gifts.
         * @member {Array.<proto.IGuildGift>} gifts
         * @memberof proto.GuildInfo
         * @instance
         */
        GuildInfo.prototype.gifts = $util.emptyArray;

        /**
         * GuildInfo dailyFinishedTaskNumber.
         * @member {number} dailyFinishedTaskNumber
         * @memberof proto.GuildInfo
         * @instance
         */
        GuildInfo.prototype.dailyFinishedTaskNumber = 0;

        /**
         * GuildInfo signTimes.
         * @member {number} signTimes
         * @memberof proto.GuildInfo
         * @instance
         */
        GuildInfo.prototype.signTimes = 0;

        /**
         * GuildInfo receivedActivityIndexes.
         * @member {Array.<number>} receivedActivityIndexes
         * @memberof proto.GuildInfo
         * @instance
         */
        GuildInfo.prototype.receivedActivityIndexes = $util.emptyArray;

        /**
         * GuildInfo skillLevelMap.
         * @member {Object.<string,number>} skillLevelMap
         * @memberof proto.GuildInfo
         * @instance
         */
        GuildInfo.prototype.skillLevelMap = $util.emptyObject;

        /**
         * GuildInfo notAllowJoinTime.
         * @member {number|Long} notAllowJoinTime
         * @memberof proto.GuildInfo
         * @instance
         */
        GuildInfo.prototype.notAllowJoinTime = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

        /**
         * GuildInfo lastGetRecommendGuildsTime.
         * @member {number|Long} lastGetRecommendGuildsTime
         * @memberof proto.GuildInfo
         * @instance
         */
        GuildInfo.prototype.lastGetRecommendGuildsTime = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

        /**
         * GuildInfo logs.
         * @member {Array.<proto.IGuildLog>} logs
         * @memberof proto.GuildInfo
         * @instance
         */
        GuildInfo.prototype.logs = $util.emptyArray;

        /**
         * GuildInfo tasks.
         * @member {Array.<proto.ITask>} tasks
         * @memberof proto.GuildInfo
         * @instance
         */
        GuildInfo.prototype.tasks = $util.emptyArray;

        /**
         * GuildInfo boughtUpLevelGiftTabIds.
         * @member {Array.<number>} boughtUpLevelGiftTabIds
         * @memberof proto.GuildInfo
         * @instance
         */
        GuildInfo.prototype.boughtUpLevelGiftTabIds = $util.emptyArray;

        /**
         * GuildInfo isBoughtCycleGift.
         * @member {boolean} isBoughtCycleGift
         * @memberof proto.GuildInfo
         * @instance
         */
        GuildInfo.prototype.isBoughtCycleGift = false;

        /**
         * GuildInfo taskChestLevel.
         * @member {number} taskChestLevel
         * @memberof proto.GuildInfo
         * @instance
         */
        GuildInfo.prototype.taskChestLevel = 0;

        /**
         * GuildInfo isBanNotice.
         * @member {boolean} isBanNotice
         * @memberof proto.GuildInfo
         * @instance
         */
        GuildInfo.prototype.isBanNotice = false;

        /**
         * Encodes the specified GuildInfo message. Does not implicitly {@link proto.GuildInfo.verify|verify} messages.
         * @function encode
         * @memberof proto.GuildInfo
         * @static
         * @param {proto.IGuildInfo} m GuildInfo message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        GuildInfo.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.simple != null && Object.hasOwnProperty.call(m, "simple"))
                $root.proto.SimpleGuild.encode(m.simple, w.uint32(10).fork()).ldelim();
            if (m.members != null && m.members.length) {
                for (var i = 0; i < m.members.length; ++i)
                    $root.proto.GuildMember.encode(m.members[i], w.uint32(18).fork()).ldelim();
            }
            if (m.gifts != null && m.gifts.length) {
                for (var i = 0; i < m.gifts.length; ++i)
                    $root.proto.GuildGift.encode(m.gifts[i], w.uint32(26).fork()).ldelim();
            }
            if (m.dailyFinishedTaskNumber != null && Object.hasOwnProperty.call(m, "dailyFinishedTaskNumber"))
                w.uint32(32).int32(m.dailyFinishedTaskNumber);
            if (m.signTimes != null && Object.hasOwnProperty.call(m, "signTimes"))
                w.uint32(40).int32(m.signTimes);
            if (m.receivedActivityIndexes != null && m.receivedActivityIndexes.length) {
                w.uint32(74).fork();
                for (var i = 0; i < m.receivedActivityIndexes.length; ++i)
                    w.int32(m.receivedActivityIndexes[i]);
                w.ldelim();
            }
            if (m.skillLevelMap != null && Object.hasOwnProperty.call(m, "skillLevelMap")) {
                for (var ks = Object.keys(m.skillLevelMap), i = 0; i < ks.length; ++i) {
                    w.uint32(82).fork().uint32(8).int32(ks[i]).uint32(16).int32(m.skillLevelMap[ks[i]]).ldelim();
                }
            }
            if (m.notAllowJoinTime != null && Object.hasOwnProperty.call(m, "notAllowJoinTime"))
                w.uint32(88).int64(m.notAllowJoinTime);
            if (m.lastGetRecommendGuildsTime != null && Object.hasOwnProperty.call(m, "lastGetRecommendGuildsTime"))
                w.uint32(96).int64(m.lastGetRecommendGuildsTime);
            if (m.logs != null && m.logs.length) {
                for (var i = 0; i < m.logs.length; ++i)
                    $root.proto.GuildLog.encode(m.logs[i], w.uint32(106).fork()).ldelim();
            }
            if (m.tasks != null && m.tasks.length) {
                for (var i = 0; i < m.tasks.length; ++i)
                    $root.proto.Task.encode(m.tasks[i], w.uint32(114).fork()).ldelim();
            }
            if (m.boughtUpLevelGiftTabIds != null && m.boughtUpLevelGiftTabIds.length) {
                w.uint32(122).fork();
                for (var i = 0; i < m.boughtUpLevelGiftTabIds.length; ++i)
                    w.int32(m.boughtUpLevelGiftTabIds[i]);
                w.ldelim();
            }
            if (m.isBoughtCycleGift != null && Object.hasOwnProperty.call(m, "isBoughtCycleGift"))
                w.uint32(128).bool(m.isBoughtCycleGift);
            if (m.taskChestLevel != null && Object.hasOwnProperty.call(m, "taskChestLevel"))
                w.uint32(136).int32(m.taskChestLevel);
            if (m.isBanNotice != null && Object.hasOwnProperty.call(m, "isBanNotice"))
                w.uint32(144).bool(m.isBanNotice);
            return w;
        };

        /**
         * Decodes a GuildInfo message from the specified reader or buffer.
         * @function decode
         * @memberof proto.GuildInfo
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.GuildInfo} GuildInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        GuildInfo.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.GuildInfo(), k, value;
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.simple = $root.proto.SimpleGuild.decode(r, r.uint32());
                    break;
                case 2:
                    if (!(m.members && m.members.length))
                        m.members = [];
                    m.members.push($root.proto.GuildMember.decode(r, r.uint32()));
                    break;
                case 3:
                    if (!(m.gifts && m.gifts.length))
                        m.gifts = [];
                    m.gifts.push($root.proto.GuildGift.decode(r, r.uint32()));
                    break;
                case 4:
                    m.dailyFinishedTaskNumber = r.int32();
                    break;
                case 5:
                    m.signTimes = r.int32();
                    break;
                case 9:
                    if (!(m.receivedActivityIndexes && m.receivedActivityIndexes.length))
                        m.receivedActivityIndexes = [];
                    if ((t & 7) === 2) {
                        var c2 = r.uint32() + r.pos;
                        while (r.pos < c2)
                            m.receivedActivityIndexes.push(r.int32());
                    } else
                        m.receivedActivityIndexes.push(r.int32());
                    break;
                case 10:
                    if (m.skillLevelMap === $util.emptyObject)
                        m.skillLevelMap = {};
                    var c2 = r.uint32() + r.pos;
                    k = 0;
                    value = 0;
                    while (r.pos < c2) {
                        var tag2 = r.uint32();
                        switch (tag2 >>> 3) {
                        case 1:
                            k = r.int32();
                            break;
                        case 2:
                            value = r.int32();
                            break;
                        default:
                            r.skipType(tag2 & 7);
                            break;
                        }
                    }
                    m.skillLevelMap[k] = value;
                    break;
                case 11:
                    m.notAllowJoinTime = r.int64();
                    break;
                case 12:
                    m.lastGetRecommendGuildsTime = r.int64();
                    break;
                case 13:
                    if (!(m.logs && m.logs.length))
                        m.logs = [];
                    m.logs.push($root.proto.GuildLog.decode(r, r.uint32()));
                    break;
                case 14:
                    if (!(m.tasks && m.tasks.length))
                        m.tasks = [];
                    m.tasks.push($root.proto.Task.decode(r, r.uint32()));
                    break;
                case 15:
                    if (!(m.boughtUpLevelGiftTabIds && m.boughtUpLevelGiftTabIds.length))
                        m.boughtUpLevelGiftTabIds = [];
                    if ((t & 7) === 2) {
                        var c2 = r.uint32() + r.pos;
                        while (r.pos < c2)
                            m.boughtUpLevelGiftTabIds.push(r.int32());
                    } else
                        m.boughtUpLevelGiftTabIds.push(r.int32());
                    break;
                case 16:
                    m.isBoughtCycleGift = r.bool();
                    break;
                case 17:
                    m.taskChestLevel = r.int32();
                    break;
                case 18:
                    m.isBanNotice = r.bool();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return GuildInfo;
    })();

    proto.Msg_GetRecommendGuildsReq = (function() {

        /**
         * Properties of a Msg_GetRecommendGuildsReq.
         * @memberof proto
         * @interface IMsg_GetRecommendGuildsReq
         */

        /**
         * Constructs a new Msg_GetRecommendGuildsReq.
         * @memberof proto
         * @classdesc Represents a Msg_GetRecommendGuildsReq.
         * @implements IMsg_GetRecommendGuildsReq
         * @constructor
         * @param {proto.IMsg_GetRecommendGuildsReq=} [p] Properties to set
         */
        function Msg_GetRecommendGuildsReq(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Encodes the specified Msg_GetRecommendGuildsReq message. Does not implicitly {@link proto.Msg_GetRecommendGuildsReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_GetRecommendGuildsReq
         * @static
         * @param {proto.IMsg_GetRecommendGuildsReq} m Msg_GetRecommendGuildsReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_GetRecommendGuildsReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };

        /**
         * Decodes a Msg_GetRecommendGuildsReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_GetRecommendGuildsReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_GetRecommendGuildsReq} Msg_GetRecommendGuildsReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_GetRecommendGuildsReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_GetRecommendGuildsReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_GetRecommendGuildsReq;
    })();

    proto.Msg_GetRecommendGuildsRsp = (function() {

        /**
         * Properties of a Msg_GetRecommendGuildsRsp.
         * @memberof proto
         * @interface IMsg_GetRecommendGuildsRsp
         * @property {proto.ICommonError|null} [error] Msg_GetRecommendGuildsRsp error
         * @property {Array.<proto.ISimpleGuild>|null} [guilds] Msg_GetRecommendGuildsRsp guilds
         */

        /**
         * Constructs a new Msg_GetRecommendGuildsRsp.
         * @memberof proto
         * @classdesc Represents a Msg_GetRecommendGuildsRsp.
         * @implements IMsg_GetRecommendGuildsRsp
         * @constructor
         * @param {proto.IMsg_GetRecommendGuildsRsp=} [p] Properties to set
         */
        function Msg_GetRecommendGuildsRsp(p) {
            this.guilds = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_GetRecommendGuildsRsp error.
         * @member {proto.ICommonError|null|undefined} error
         * @memberof proto.Msg_GetRecommendGuildsRsp
         * @instance
         */
        Msg_GetRecommendGuildsRsp.prototype.error = null;

        /**
         * Msg_GetRecommendGuildsRsp guilds.
         * @member {Array.<proto.ISimpleGuild>} guilds
         * @memberof proto.Msg_GetRecommendGuildsRsp
         * @instance
         */
        Msg_GetRecommendGuildsRsp.prototype.guilds = $util.emptyArray;

        /**
         * Encodes the specified Msg_GetRecommendGuildsRsp message. Does not implicitly {@link proto.Msg_GetRecommendGuildsRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_GetRecommendGuildsRsp
         * @static
         * @param {proto.IMsg_GetRecommendGuildsRsp} m Msg_GetRecommendGuildsRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_GetRecommendGuildsRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.error != null && Object.hasOwnProperty.call(m, "error"))
                $root.proto.CommonError.encode(m.error, w.uint32(10).fork()).ldelim();
            if (m.guilds != null && m.guilds.length) {
                for (var i = 0; i < m.guilds.length; ++i)
                    $root.proto.SimpleGuild.encode(m.guilds[i], w.uint32(18).fork()).ldelim();
            }
            return w;
        };

        /**
         * Decodes a Msg_GetRecommendGuildsRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_GetRecommendGuildsRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_GetRecommendGuildsRsp} Msg_GetRecommendGuildsRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_GetRecommendGuildsRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_GetRecommendGuildsRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.error = $root.proto.CommonError.decode(r, r.uint32());
                    break;
                case 2:
                    if (!(m.guilds && m.guilds.length))
                        m.guilds = [];
                    m.guilds.push($root.proto.SimpleGuild.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_GetRecommendGuildsRsp;
    })();

    proto.Msg_GetGuildInfoReq = (function() {

        /**
         * Properties of a Msg_GetGuildInfoReq.
         * @memberof proto
         * @interface IMsg_GetGuildInfoReq
         */

        /**
         * Constructs a new Msg_GetGuildInfoReq.
         * @memberof proto
         * @classdesc Represents a Msg_GetGuildInfoReq.
         * @implements IMsg_GetGuildInfoReq
         * @constructor
         * @param {proto.IMsg_GetGuildInfoReq=} [p] Properties to set
         */
        function Msg_GetGuildInfoReq(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Encodes the specified Msg_GetGuildInfoReq message. Does not implicitly {@link proto.Msg_GetGuildInfoReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_GetGuildInfoReq
         * @static
         * @param {proto.IMsg_GetGuildInfoReq} m Msg_GetGuildInfoReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_GetGuildInfoReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };

        /**
         * Decodes a Msg_GetGuildInfoReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_GetGuildInfoReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_GetGuildInfoReq} Msg_GetGuildInfoReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_GetGuildInfoReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_GetGuildInfoReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_GetGuildInfoReq;
    })();

    proto.Msg_GetGuildInfoRsp = (function() {

        /**
         * Properties of a Msg_GetGuildInfoRsp.
         * @memberof proto
         * @interface IMsg_GetGuildInfoRsp
         * @property {proto.ICommonError|null} [error] Msg_GetGuildInfoRsp error
         * @property {proto.IGuildInfo|null} [guild] Msg_GetGuildInfoRsp guild
         */

        /**
         * Constructs a new Msg_GetGuildInfoRsp.
         * @memberof proto
         * @classdesc Represents a Msg_GetGuildInfoRsp.
         * @implements IMsg_GetGuildInfoRsp
         * @constructor
         * @param {proto.IMsg_GetGuildInfoRsp=} [p] Properties to set
         */
        function Msg_GetGuildInfoRsp(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_GetGuildInfoRsp error.
         * @member {proto.ICommonError|null|undefined} error
         * @memberof proto.Msg_GetGuildInfoRsp
         * @instance
         */
        Msg_GetGuildInfoRsp.prototype.error = null;

        /**
         * Msg_GetGuildInfoRsp guild.
         * @member {proto.IGuildInfo|null|undefined} guild
         * @memberof proto.Msg_GetGuildInfoRsp
         * @instance
         */
        Msg_GetGuildInfoRsp.prototype.guild = null;

        /**
         * Encodes the specified Msg_GetGuildInfoRsp message. Does not implicitly {@link proto.Msg_GetGuildInfoRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_GetGuildInfoRsp
         * @static
         * @param {proto.IMsg_GetGuildInfoRsp} m Msg_GetGuildInfoRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_GetGuildInfoRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.error != null && Object.hasOwnProperty.call(m, "error"))
                $root.proto.CommonError.encode(m.error, w.uint32(10).fork()).ldelim();
            if (m.guild != null && Object.hasOwnProperty.call(m, "guild"))
                $root.proto.GuildInfo.encode(m.guild, w.uint32(18).fork()).ldelim();
            return w;
        };

        /**
         * Decodes a Msg_GetGuildInfoRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_GetGuildInfoRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_GetGuildInfoRsp} Msg_GetGuildInfoRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_GetGuildInfoRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_GetGuildInfoRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.error = $root.proto.CommonError.decode(r, r.uint32());
                    break;
                case 2:
                    m.guild = $root.proto.GuildInfo.decode(r, r.uint32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_GetGuildInfoRsp;
    })();

    proto.Msg_CreateGuildReq = (function() {

        /**
         * Properties of a Msg_CreateGuildReq.
         * @memberof proto
         * @interface IMsg_CreateGuildReq
         * @property {string|null} [name] Msg_CreateGuildReq name
         * @property {number|null} [flagId] Msg_CreateGuildReq flagId
         * @property {string|null} [notice] Msg_CreateGuildReq notice
         * @property {boolean|null} [needCheck] Msg_CreateGuildReq needCheck
         */

        /**
         * Constructs a new Msg_CreateGuildReq.
         * @memberof proto
         * @classdesc Represents a Msg_CreateGuildReq.
         * @implements IMsg_CreateGuildReq
         * @constructor
         * @param {proto.IMsg_CreateGuildReq=} [p] Properties to set
         */
        function Msg_CreateGuildReq(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_CreateGuildReq name.
         * @member {string} name
         * @memberof proto.Msg_CreateGuildReq
         * @instance
         */
        Msg_CreateGuildReq.prototype.name = "";

        /**
         * Msg_CreateGuildReq flagId.
         * @member {number} flagId
         * @memberof proto.Msg_CreateGuildReq
         * @instance
         */
        Msg_CreateGuildReq.prototype.flagId = 0;

        /**
         * Msg_CreateGuildReq notice.
         * @member {string} notice
         * @memberof proto.Msg_CreateGuildReq
         * @instance
         */
        Msg_CreateGuildReq.prototype.notice = "";

        /**
         * Msg_CreateGuildReq needCheck.
         * @member {boolean} needCheck
         * @memberof proto.Msg_CreateGuildReq
         * @instance
         */
        Msg_CreateGuildReq.prototype.needCheck = false;

        /**
         * Encodes the specified Msg_CreateGuildReq message. Does not implicitly {@link proto.Msg_CreateGuildReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_CreateGuildReq
         * @static
         * @param {proto.IMsg_CreateGuildReq} m Msg_CreateGuildReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_CreateGuildReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.name != null && Object.hasOwnProperty.call(m, "name"))
                w.uint32(10).string(m.name);
            if (m.flagId != null && Object.hasOwnProperty.call(m, "flagId"))
                w.uint32(16).int32(m.flagId);
            if (m.notice != null && Object.hasOwnProperty.call(m, "notice"))
                w.uint32(26).string(m.notice);
            if (m.needCheck != null && Object.hasOwnProperty.call(m, "needCheck"))
                w.uint32(32).bool(m.needCheck);
            return w;
        };

        /**
         * Decodes a Msg_CreateGuildReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_CreateGuildReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_CreateGuildReq} Msg_CreateGuildReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_CreateGuildReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_CreateGuildReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.name = r.string();
                    break;
                case 2:
                    m.flagId = r.int32();
                    break;
                case 3:
                    m.notice = r.string();
                    break;
                case 4:
                    m.needCheck = r.bool();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_CreateGuildReq;
    })();

    proto.Msg_CreateGuildRsp = (function() {

        /**
         * Properties of a Msg_CreateGuildRsp.
         * @memberof proto
         * @interface IMsg_CreateGuildRsp
         * @property {proto.ICommonError|null} [error] Msg_CreateGuildRsp error
         * @property {proto.IGuildInfo|null} [guild] Msg_CreateGuildRsp guild
         */

        /**
         * Constructs a new Msg_CreateGuildRsp.
         * @memberof proto
         * @classdesc Represents a Msg_CreateGuildRsp.
         * @implements IMsg_CreateGuildRsp
         * @constructor
         * @param {proto.IMsg_CreateGuildRsp=} [p] Properties to set
         */
        function Msg_CreateGuildRsp(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_CreateGuildRsp error.
         * @member {proto.ICommonError|null|undefined} error
         * @memberof proto.Msg_CreateGuildRsp
         * @instance
         */
        Msg_CreateGuildRsp.prototype.error = null;

        /**
         * Msg_CreateGuildRsp guild.
         * @member {proto.IGuildInfo|null|undefined} guild
         * @memberof proto.Msg_CreateGuildRsp
         * @instance
         */
        Msg_CreateGuildRsp.prototype.guild = null;

        /**
         * Encodes the specified Msg_CreateGuildRsp message. Does not implicitly {@link proto.Msg_CreateGuildRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_CreateGuildRsp
         * @static
         * @param {proto.IMsg_CreateGuildRsp} m Msg_CreateGuildRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_CreateGuildRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.error != null && Object.hasOwnProperty.call(m, "error"))
                $root.proto.CommonError.encode(m.error, w.uint32(10).fork()).ldelim();
            if (m.guild != null && Object.hasOwnProperty.call(m, "guild"))
                $root.proto.GuildInfo.encode(m.guild, w.uint32(18).fork()).ldelim();
            return w;
        };

        /**
         * Decodes a Msg_CreateGuildRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_CreateGuildRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_CreateGuildRsp} Msg_CreateGuildRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_CreateGuildRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_CreateGuildRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.error = $root.proto.CommonError.decode(r, r.uint32());
                    break;
                case 2:
                    m.guild = $root.proto.GuildInfo.decode(r, r.uint32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_CreateGuildRsp;
    })();

    proto.Msg_ApplyJoinGuildReq = (function() {

        /**
         * Properties of a Msg_ApplyJoinGuildReq.
         * @memberof proto
         * @interface IMsg_ApplyJoinGuildReq
         * @property {string|null} [guildId] Msg_ApplyJoinGuildReq guildId
         */

        /**
         * Constructs a new Msg_ApplyJoinGuildReq.
         * @memberof proto
         * @classdesc Represents a Msg_ApplyJoinGuildReq.
         * @implements IMsg_ApplyJoinGuildReq
         * @constructor
         * @param {proto.IMsg_ApplyJoinGuildReq=} [p] Properties to set
         */
        function Msg_ApplyJoinGuildReq(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_ApplyJoinGuildReq guildId.
         * @member {string} guildId
         * @memberof proto.Msg_ApplyJoinGuildReq
         * @instance
         */
        Msg_ApplyJoinGuildReq.prototype.guildId = "";

        /**
         * Encodes the specified Msg_ApplyJoinGuildReq message. Does not implicitly {@link proto.Msg_ApplyJoinGuildReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_ApplyJoinGuildReq
         * @static
         * @param {proto.IMsg_ApplyJoinGuildReq} m Msg_ApplyJoinGuildReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_ApplyJoinGuildReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.guildId != null && Object.hasOwnProperty.call(m, "guildId"))
                w.uint32(10).string(m.guildId);
            return w;
        };

        /**
         * Decodes a Msg_ApplyJoinGuildReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_ApplyJoinGuildReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_ApplyJoinGuildReq} Msg_ApplyJoinGuildReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_ApplyJoinGuildReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_ApplyJoinGuildReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.guildId = r.string();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_ApplyJoinGuildReq;
    })();

    proto.Msg_ApplyJoinGuildRsp = (function() {

        /**
         * Properties of a Msg_ApplyJoinGuildRsp.
         * @memberof proto
         * @interface IMsg_ApplyJoinGuildRsp
         * @property {proto.ICommonError|null} [error] Msg_ApplyJoinGuildRsp error
         * @property {string|null} [guildId] Msg_ApplyJoinGuildRsp guildId
         */

        /**
         * Constructs a new Msg_ApplyJoinGuildRsp.
         * @memberof proto
         * @classdesc Represents a Msg_ApplyJoinGuildRsp.
         * @implements IMsg_ApplyJoinGuildRsp
         * @constructor
         * @param {proto.IMsg_ApplyJoinGuildRsp=} [p] Properties to set
         */
        function Msg_ApplyJoinGuildRsp(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_ApplyJoinGuildRsp error.
         * @member {proto.ICommonError|null|undefined} error
         * @memberof proto.Msg_ApplyJoinGuildRsp
         * @instance
         */
        Msg_ApplyJoinGuildRsp.prototype.error = null;

        /**
         * Msg_ApplyJoinGuildRsp guildId.
         * @member {string} guildId
         * @memberof proto.Msg_ApplyJoinGuildRsp
         * @instance
         */
        Msg_ApplyJoinGuildRsp.prototype.guildId = "";

        /**
         * Encodes the specified Msg_ApplyJoinGuildRsp message. Does not implicitly {@link proto.Msg_ApplyJoinGuildRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_ApplyJoinGuildRsp
         * @static
         * @param {proto.IMsg_ApplyJoinGuildRsp} m Msg_ApplyJoinGuildRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_ApplyJoinGuildRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.error != null && Object.hasOwnProperty.call(m, "error"))
                $root.proto.CommonError.encode(m.error, w.uint32(10).fork()).ldelim();
            if (m.guildId != null && Object.hasOwnProperty.call(m, "guildId"))
                w.uint32(18).string(m.guildId);
            return w;
        };

        /**
         * Decodes a Msg_ApplyJoinGuildRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_ApplyJoinGuildRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_ApplyJoinGuildRsp} Msg_ApplyJoinGuildRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_ApplyJoinGuildRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_ApplyJoinGuildRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.error = $root.proto.CommonError.decode(r, r.uint32());
                    break;
                case 2:
                    m.guildId = r.string();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_ApplyJoinGuildRsp;
    })();

    proto.Msg_ApplyJoinGuildOneClickReq = (function() {

        /**
         * Properties of a Msg_ApplyJoinGuildOneClickReq.
         * @memberof proto
         * @interface IMsg_ApplyJoinGuildOneClickReq
         * @property {Array.<string>|null} [guildIds] Msg_ApplyJoinGuildOneClickReq guildIds
         */

        /**
         * Constructs a new Msg_ApplyJoinGuildOneClickReq.
         * @memberof proto
         * @classdesc Represents a Msg_ApplyJoinGuildOneClickReq.
         * @implements IMsg_ApplyJoinGuildOneClickReq
         * @constructor
         * @param {proto.IMsg_ApplyJoinGuildOneClickReq=} [p] Properties to set
         */
        function Msg_ApplyJoinGuildOneClickReq(p) {
            this.guildIds = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_ApplyJoinGuildOneClickReq guildIds.
         * @member {Array.<string>} guildIds
         * @memberof proto.Msg_ApplyJoinGuildOneClickReq
         * @instance
         */
        Msg_ApplyJoinGuildOneClickReq.prototype.guildIds = $util.emptyArray;

        /**
         * Encodes the specified Msg_ApplyJoinGuildOneClickReq message. Does not implicitly {@link proto.Msg_ApplyJoinGuildOneClickReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_ApplyJoinGuildOneClickReq
         * @static
         * @param {proto.IMsg_ApplyJoinGuildOneClickReq} m Msg_ApplyJoinGuildOneClickReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_ApplyJoinGuildOneClickReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.guildIds != null && m.guildIds.length) {
                for (var i = 0; i < m.guildIds.length; ++i)
                    w.uint32(10).string(m.guildIds[i]);
            }
            return w;
        };

        /**
         * Decodes a Msg_ApplyJoinGuildOneClickReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_ApplyJoinGuildOneClickReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_ApplyJoinGuildOneClickReq} Msg_ApplyJoinGuildOneClickReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_ApplyJoinGuildOneClickReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_ApplyJoinGuildOneClickReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.guildIds && m.guildIds.length))
                        m.guildIds = [];
                    m.guildIds.push(r.string());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_ApplyJoinGuildOneClickReq;
    })();

    proto.Msg_ApplyJoinGuildOneClickRsp = (function() {

        /**
         * Properties of a Msg_ApplyJoinGuildOneClickRsp.
         * @memberof proto
         * @interface IMsg_ApplyJoinGuildOneClickRsp
         * @property {proto.ICommonError|null} [error] Msg_ApplyJoinGuildOneClickRsp error
         * @property {Array.<string>|null} [guildIds] Msg_ApplyJoinGuildOneClickRsp guildIds
         */

        /**
         * Constructs a new Msg_ApplyJoinGuildOneClickRsp.
         * @memberof proto
         * @classdesc Represents a Msg_ApplyJoinGuildOneClickRsp.
         * @implements IMsg_ApplyJoinGuildOneClickRsp
         * @constructor
         * @param {proto.IMsg_ApplyJoinGuildOneClickRsp=} [p] Properties to set
         */
        function Msg_ApplyJoinGuildOneClickRsp(p) {
            this.guildIds = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_ApplyJoinGuildOneClickRsp error.
         * @member {proto.ICommonError|null|undefined} error
         * @memberof proto.Msg_ApplyJoinGuildOneClickRsp
         * @instance
         */
        Msg_ApplyJoinGuildOneClickRsp.prototype.error = null;

        /**
         * Msg_ApplyJoinGuildOneClickRsp guildIds.
         * @member {Array.<string>} guildIds
         * @memberof proto.Msg_ApplyJoinGuildOneClickRsp
         * @instance
         */
        Msg_ApplyJoinGuildOneClickRsp.prototype.guildIds = $util.emptyArray;

        /**
         * Encodes the specified Msg_ApplyJoinGuildOneClickRsp message. Does not implicitly {@link proto.Msg_ApplyJoinGuildOneClickRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_ApplyJoinGuildOneClickRsp
         * @static
         * @param {proto.IMsg_ApplyJoinGuildOneClickRsp} m Msg_ApplyJoinGuildOneClickRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_ApplyJoinGuildOneClickRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.error != null && Object.hasOwnProperty.call(m, "error"))
                $root.proto.CommonError.encode(m.error, w.uint32(10).fork()).ldelim();
            if (m.guildIds != null && m.guildIds.length) {
                for (var i = 0; i < m.guildIds.length; ++i)
                    w.uint32(18).string(m.guildIds[i]);
            }
            return w;
        };

        /**
         * Decodes a Msg_ApplyJoinGuildOneClickRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_ApplyJoinGuildOneClickRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_ApplyJoinGuildOneClickRsp} Msg_ApplyJoinGuildOneClickRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_ApplyJoinGuildOneClickRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_ApplyJoinGuildOneClickRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.error = $root.proto.CommonError.decode(r, r.uint32());
                    break;
                case 2:
                    if (!(m.guildIds && m.guildIds.length))
                        m.guildIds = [];
                    m.guildIds.push(r.string());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_ApplyJoinGuildOneClickRsp;
    })();

    proto.Msg_ProcessGuildApplyReq = (function() {

        /**
         * Properties of a Msg_ProcessGuildApplyReq.
         * @memberof proto
         * @interface IMsg_ProcessGuildApplyReq
         * @property {string|null} [applyReqId] Msg_ProcessGuildApplyReq applyReqId
         * @property {boolean|null} [agree] Msg_ProcessGuildApplyReq agree
         */

        /**
         * Constructs a new Msg_ProcessGuildApplyReq.
         * @memberof proto
         * @classdesc Represents a Msg_ProcessGuildApplyReq.
         * @implements IMsg_ProcessGuildApplyReq
         * @constructor
         * @param {proto.IMsg_ProcessGuildApplyReq=} [p] Properties to set
         */
        function Msg_ProcessGuildApplyReq(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_ProcessGuildApplyReq applyReqId.
         * @member {string} applyReqId
         * @memberof proto.Msg_ProcessGuildApplyReq
         * @instance
         */
        Msg_ProcessGuildApplyReq.prototype.applyReqId = "";

        /**
         * Msg_ProcessGuildApplyReq agree.
         * @member {boolean} agree
         * @memberof proto.Msg_ProcessGuildApplyReq
         * @instance
         */
        Msg_ProcessGuildApplyReq.prototype.agree = false;

        /**
         * Encodes the specified Msg_ProcessGuildApplyReq message. Does not implicitly {@link proto.Msg_ProcessGuildApplyReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_ProcessGuildApplyReq
         * @static
         * @param {proto.IMsg_ProcessGuildApplyReq} m Msg_ProcessGuildApplyReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_ProcessGuildApplyReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.applyReqId != null && Object.hasOwnProperty.call(m, "applyReqId"))
                w.uint32(10).string(m.applyReqId);
            if (m.agree != null && Object.hasOwnProperty.call(m, "agree"))
                w.uint32(16).bool(m.agree);
            return w;
        };

        /**
         * Decodes a Msg_ProcessGuildApplyReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_ProcessGuildApplyReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_ProcessGuildApplyReq} Msg_ProcessGuildApplyReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_ProcessGuildApplyReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_ProcessGuildApplyReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.applyReqId = r.string();
                    break;
                case 2:
                    m.agree = r.bool();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_ProcessGuildApplyReq;
    })();

    proto.Msg_ProcessGuildApplyRsp = (function() {

        /**
         * Properties of a Msg_ProcessGuildApplyRsp.
         * @memberof proto
         * @interface IMsg_ProcessGuildApplyRsp
         * @property {proto.ICommonError|null} [error] Msg_ProcessGuildApplyRsp error
         * @property {string|null} [applyReqId] Msg_ProcessGuildApplyRsp applyReqId
         * @property {boolean|null} [agree] Msg_ProcessGuildApplyRsp agree
         * @property {proto.IGuildMember|null} [member] Msg_ProcessGuildApplyRsp member
         */

        /**
         * Constructs a new Msg_ProcessGuildApplyRsp.
         * @memberof proto
         * @classdesc Represents a Msg_ProcessGuildApplyRsp.
         * @implements IMsg_ProcessGuildApplyRsp
         * @constructor
         * @param {proto.IMsg_ProcessGuildApplyRsp=} [p] Properties to set
         */
        function Msg_ProcessGuildApplyRsp(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_ProcessGuildApplyRsp error.
         * @member {proto.ICommonError|null|undefined} error
         * @memberof proto.Msg_ProcessGuildApplyRsp
         * @instance
         */
        Msg_ProcessGuildApplyRsp.prototype.error = null;

        /**
         * Msg_ProcessGuildApplyRsp applyReqId.
         * @member {string} applyReqId
         * @memberof proto.Msg_ProcessGuildApplyRsp
         * @instance
         */
        Msg_ProcessGuildApplyRsp.prototype.applyReqId = "";

        /**
         * Msg_ProcessGuildApplyRsp agree.
         * @member {boolean} agree
         * @memberof proto.Msg_ProcessGuildApplyRsp
         * @instance
         */
        Msg_ProcessGuildApplyRsp.prototype.agree = false;

        /**
         * Msg_ProcessGuildApplyRsp member.
         * @member {proto.IGuildMember|null|undefined} member
         * @memberof proto.Msg_ProcessGuildApplyRsp
         * @instance
         */
        Msg_ProcessGuildApplyRsp.prototype.member = null;

        /**
         * Encodes the specified Msg_ProcessGuildApplyRsp message. Does not implicitly {@link proto.Msg_ProcessGuildApplyRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_ProcessGuildApplyRsp
         * @static
         * @param {proto.IMsg_ProcessGuildApplyRsp} m Msg_ProcessGuildApplyRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_ProcessGuildApplyRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.error != null && Object.hasOwnProperty.call(m, "error"))
                $root.proto.CommonError.encode(m.error, w.uint32(10).fork()).ldelim();
            if (m.applyReqId != null && Object.hasOwnProperty.call(m, "applyReqId"))
                w.uint32(18).string(m.applyReqId);
            if (m.agree != null && Object.hasOwnProperty.call(m, "agree"))
                w.uint32(24).bool(m.agree);
            if (m.member != null && Object.hasOwnProperty.call(m, "member"))
                $root.proto.GuildMember.encode(m.member, w.uint32(34).fork()).ldelim();
            return w;
        };

        /**
         * Decodes a Msg_ProcessGuildApplyRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_ProcessGuildApplyRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_ProcessGuildApplyRsp} Msg_ProcessGuildApplyRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_ProcessGuildApplyRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_ProcessGuildApplyRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.error = $root.proto.CommonError.decode(r, r.uint32());
                    break;
                case 2:
                    m.applyReqId = r.string();
                    break;
                case 3:
                    m.agree = r.bool();
                    break;
                case 4:
                    m.member = $root.proto.GuildMember.decode(r, r.uint32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_ProcessGuildApplyRsp;
    })();

    proto.Msg_RejectAllGuildApplyReq = (function() {

        /**
         * Properties of a Msg_RejectAllGuildApplyReq.
         * @memberof proto
         * @interface IMsg_RejectAllGuildApplyReq
         */

        /**
         * Constructs a new Msg_RejectAllGuildApplyReq.
         * @memberof proto
         * @classdesc Represents a Msg_RejectAllGuildApplyReq.
         * @implements IMsg_RejectAllGuildApplyReq
         * @constructor
         * @param {proto.IMsg_RejectAllGuildApplyReq=} [p] Properties to set
         */
        function Msg_RejectAllGuildApplyReq(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Encodes the specified Msg_RejectAllGuildApplyReq message. Does not implicitly {@link proto.Msg_RejectAllGuildApplyReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_RejectAllGuildApplyReq
         * @static
         * @param {proto.IMsg_RejectAllGuildApplyReq} m Msg_RejectAllGuildApplyReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_RejectAllGuildApplyReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };

        /**
         * Decodes a Msg_RejectAllGuildApplyReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_RejectAllGuildApplyReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_RejectAllGuildApplyReq} Msg_RejectAllGuildApplyReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_RejectAllGuildApplyReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_RejectAllGuildApplyReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_RejectAllGuildApplyReq;
    })();

    proto.Msg_RejectAllGuildApplyRsp = (function() {

        /**
         * Properties of a Msg_RejectAllGuildApplyRsp.
         * @memberof proto
         * @interface IMsg_RejectAllGuildApplyRsp
         * @property {proto.ICommonError|null} [error] Msg_RejectAllGuildApplyRsp error
         */

        /**
         * Constructs a new Msg_RejectAllGuildApplyRsp.
         * @memberof proto
         * @classdesc Represents a Msg_RejectAllGuildApplyRsp.
         * @implements IMsg_RejectAllGuildApplyRsp
         * @constructor
         * @param {proto.IMsg_RejectAllGuildApplyRsp=} [p] Properties to set
         */
        function Msg_RejectAllGuildApplyRsp(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_RejectAllGuildApplyRsp error.
         * @member {proto.ICommonError|null|undefined} error
         * @memberof proto.Msg_RejectAllGuildApplyRsp
         * @instance
         */
        Msg_RejectAllGuildApplyRsp.prototype.error = null;

        /**
         * Encodes the specified Msg_RejectAllGuildApplyRsp message. Does not implicitly {@link proto.Msg_RejectAllGuildApplyRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_RejectAllGuildApplyRsp
         * @static
         * @param {proto.IMsg_RejectAllGuildApplyRsp} m Msg_RejectAllGuildApplyRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_RejectAllGuildApplyRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.error != null && Object.hasOwnProperty.call(m, "error"))
                $root.proto.CommonError.encode(m.error, w.uint32(10).fork()).ldelim();
            return w;
        };

        /**
         * Decodes a Msg_RejectAllGuildApplyRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_RejectAllGuildApplyRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_RejectAllGuildApplyRsp} Msg_RejectAllGuildApplyRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_RejectAllGuildApplyRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_RejectAllGuildApplyRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.error = $root.proto.CommonError.decode(r, r.uint32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_RejectAllGuildApplyRsp;
    })();

    proto.Msg_QuitGuildReq = (function() {

        /**
         * Properties of a Msg_QuitGuildReq.
         * @memberof proto
         * @interface IMsg_QuitGuildReq
         */

        /**
         * Constructs a new Msg_QuitGuildReq.
         * @memberof proto
         * @classdesc Represents a Msg_QuitGuildReq.
         * @implements IMsg_QuitGuildReq
         * @constructor
         * @param {proto.IMsg_QuitGuildReq=} [p] Properties to set
         */
        function Msg_QuitGuildReq(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Encodes the specified Msg_QuitGuildReq message. Does not implicitly {@link proto.Msg_QuitGuildReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_QuitGuildReq
         * @static
         * @param {proto.IMsg_QuitGuildReq} m Msg_QuitGuildReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_QuitGuildReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };

        /**
         * Decodes a Msg_QuitGuildReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_QuitGuildReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_QuitGuildReq} Msg_QuitGuildReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_QuitGuildReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_QuitGuildReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_QuitGuildReq;
    })();

    proto.Msg_QuitGuildRsp = (function() {

        /**
         * Properties of a Msg_QuitGuildRsp.
         * @memberof proto
         * @interface IMsg_QuitGuildRsp
         * @property {proto.ICommonError|null} [error] Msg_QuitGuildRsp error
         */

        /**
         * Constructs a new Msg_QuitGuildRsp.
         * @memberof proto
         * @classdesc Represents a Msg_QuitGuildRsp.
         * @implements IMsg_QuitGuildRsp
         * @constructor
         * @param {proto.IMsg_QuitGuildRsp=} [p] Properties to set
         */
        function Msg_QuitGuildRsp(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_QuitGuildRsp error.
         * @member {proto.ICommonError|null|undefined} error
         * @memberof proto.Msg_QuitGuildRsp
         * @instance
         */
        Msg_QuitGuildRsp.prototype.error = null;

        /**
         * Encodes the specified Msg_QuitGuildRsp message. Does not implicitly {@link proto.Msg_QuitGuildRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_QuitGuildRsp
         * @static
         * @param {proto.IMsg_QuitGuildRsp} m Msg_QuitGuildRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_QuitGuildRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.error != null && Object.hasOwnProperty.call(m, "error"))
                $root.proto.CommonError.encode(m.error, w.uint32(10).fork()).ldelim();
            return w;
        };

        /**
         * Decodes a Msg_QuitGuildRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_QuitGuildRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_QuitGuildRsp} Msg_QuitGuildRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_QuitGuildRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_QuitGuildRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.error = $root.proto.CommonError.decode(r, r.uint32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_QuitGuildRsp;
    })();

    proto.Msg_KickGuildMemberReq = (function() {

        /**
         * Properties of a Msg_KickGuildMemberReq.
         * @memberof proto
         * @interface IMsg_KickGuildMemberReq
         * @property {string|null} [roleId] Msg_KickGuildMemberReq roleId
         */

        /**
         * Constructs a new Msg_KickGuildMemberReq.
         * @memberof proto
         * @classdesc Represents a Msg_KickGuildMemberReq.
         * @implements IMsg_KickGuildMemberReq
         * @constructor
         * @param {proto.IMsg_KickGuildMemberReq=} [p] Properties to set
         */
        function Msg_KickGuildMemberReq(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_KickGuildMemberReq roleId.
         * @member {string} roleId
         * @memberof proto.Msg_KickGuildMemberReq
         * @instance
         */
        Msg_KickGuildMemberReq.prototype.roleId = "";

        /**
         * Encodes the specified Msg_KickGuildMemberReq message. Does not implicitly {@link proto.Msg_KickGuildMemberReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_KickGuildMemberReq
         * @static
         * @param {proto.IMsg_KickGuildMemberReq} m Msg_KickGuildMemberReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_KickGuildMemberReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.roleId != null && Object.hasOwnProperty.call(m, "roleId"))
                w.uint32(10).string(m.roleId);
            return w;
        };

        /**
         * Decodes a Msg_KickGuildMemberReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_KickGuildMemberReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_KickGuildMemberReq} Msg_KickGuildMemberReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_KickGuildMemberReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_KickGuildMemberReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.roleId = r.string();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_KickGuildMemberReq;
    })();

    proto.Msg_KickGuildMemberRsp = (function() {

        /**
         * Properties of a Msg_KickGuildMemberRsp.
         * @memberof proto
         * @interface IMsg_KickGuildMemberRsp
         * @property {proto.ICommonError|null} [error] Msg_KickGuildMemberRsp error
         * @property {string|null} [roleId] Msg_KickGuildMemberRsp roleId
         */

        /**
         * Constructs a new Msg_KickGuildMemberRsp.
         * @memberof proto
         * @classdesc Represents a Msg_KickGuildMemberRsp.
         * @implements IMsg_KickGuildMemberRsp
         * @constructor
         * @param {proto.IMsg_KickGuildMemberRsp=} [p] Properties to set
         */
        function Msg_KickGuildMemberRsp(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_KickGuildMemberRsp error.
         * @member {proto.ICommonError|null|undefined} error
         * @memberof proto.Msg_KickGuildMemberRsp
         * @instance
         */
        Msg_KickGuildMemberRsp.prototype.error = null;

        /**
         * Msg_KickGuildMemberRsp roleId.
         * @member {string} roleId
         * @memberof proto.Msg_KickGuildMemberRsp
         * @instance
         */
        Msg_KickGuildMemberRsp.prototype.roleId = "";

        /**
         * Encodes the specified Msg_KickGuildMemberRsp message. Does not implicitly {@link proto.Msg_KickGuildMemberRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_KickGuildMemberRsp
         * @static
         * @param {proto.IMsg_KickGuildMemberRsp} m Msg_KickGuildMemberRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_KickGuildMemberRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.error != null && Object.hasOwnProperty.call(m, "error"))
                $root.proto.CommonError.encode(m.error, w.uint32(10).fork()).ldelim();
            if (m.roleId != null && Object.hasOwnProperty.call(m, "roleId"))
                w.uint32(18).string(m.roleId);
            return w;
        };

        /**
         * Decodes a Msg_KickGuildMemberRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_KickGuildMemberRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_KickGuildMemberRsp} Msg_KickGuildMemberRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_KickGuildMemberRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_KickGuildMemberRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.error = $root.proto.CommonError.decode(r, r.uint32());
                    break;
                case 2:
                    m.roleId = r.string();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_KickGuildMemberRsp;
    })();

    proto.Msg_SetGuildNameAndFlagReq = (function() {

        /**
         * Properties of a Msg_SetGuildNameAndFlagReq.
         * @memberof proto
         * @interface IMsg_SetGuildNameAndFlagReq
         * @property {string|null} [name] Msg_SetGuildNameAndFlagReq name
         * @property {number|null} [flagId] Msg_SetGuildNameAndFlagReq flagId
         */

        /**
         * Constructs a new Msg_SetGuildNameAndFlagReq.
         * @memberof proto
         * @classdesc Represents a Msg_SetGuildNameAndFlagReq.
         * @implements IMsg_SetGuildNameAndFlagReq
         * @constructor
         * @param {proto.IMsg_SetGuildNameAndFlagReq=} [p] Properties to set
         */
        function Msg_SetGuildNameAndFlagReq(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_SetGuildNameAndFlagReq name.
         * @member {string} name
         * @memberof proto.Msg_SetGuildNameAndFlagReq
         * @instance
         */
        Msg_SetGuildNameAndFlagReq.prototype.name = "";

        /**
         * Msg_SetGuildNameAndFlagReq flagId.
         * @member {number} flagId
         * @memberof proto.Msg_SetGuildNameAndFlagReq
         * @instance
         */
        Msg_SetGuildNameAndFlagReq.prototype.flagId = 0;

        /**
         * Encodes the specified Msg_SetGuildNameAndFlagReq message. Does not implicitly {@link proto.Msg_SetGuildNameAndFlagReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_SetGuildNameAndFlagReq
         * @static
         * @param {proto.IMsg_SetGuildNameAndFlagReq} m Msg_SetGuildNameAndFlagReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_SetGuildNameAndFlagReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.name != null && Object.hasOwnProperty.call(m, "name"))
                w.uint32(10).string(m.name);
            if (m.flagId != null && Object.hasOwnProperty.call(m, "flagId"))
                w.uint32(16).int32(m.flagId);
            return w;
        };

        /**
         * Decodes a Msg_SetGuildNameAndFlagReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_SetGuildNameAndFlagReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_SetGuildNameAndFlagReq} Msg_SetGuildNameAndFlagReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_SetGuildNameAndFlagReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_SetGuildNameAndFlagReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.name = r.string();
                    break;
                case 2:
                    m.flagId = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_SetGuildNameAndFlagReq;
    })();

    proto.Msg_SetGuildNameAndFlagRsp = (function() {

        /**
         * Properties of a Msg_SetGuildNameAndFlagRsp.
         * @memberof proto
         * @interface IMsg_SetGuildNameAndFlagRsp
         * @property {proto.ICommonError|null} [error] Msg_SetGuildNameAndFlagRsp error
         * @property {string|null} [name] Msg_SetGuildNameAndFlagRsp name
         * @property {number|null} [flagId] Msg_SetGuildNameAndFlagRsp flagId
         */

        /**
         * Constructs a new Msg_SetGuildNameAndFlagRsp.
         * @memberof proto
         * @classdesc Represents a Msg_SetGuildNameAndFlagRsp.
         * @implements IMsg_SetGuildNameAndFlagRsp
         * @constructor
         * @param {proto.IMsg_SetGuildNameAndFlagRsp=} [p] Properties to set
         */
        function Msg_SetGuildNameAndFlagRsp(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_SetGuildNameAndFlagRsp error.
         * @member {proto.ICommonError|null|undefined} error
         * @memberof proto.Msg_SetGuildNameAndFlagRsp
         * @instance
         */
        Msg_SetGuildNameAndFlagRsp.prototype.error = null;

        /**
         * Msg_SetGuildNameAndFlagRsp name.
         * @member {string} name
         * @memberof proto.Msg_SetGuildNameAndFlagRsp
         * @instance
         */
        Msg_SetGuildNameAndFlagRsp.prototype.name = "";

        /**
         * Msg_SetGuildNameAndFlagRsp flagId.
         * @member {number} flagId
         * @memberof proto.Msg_SetGuildNameAndFlagRsp
         * @instance
         */
        Msg_SetGuildNameAndFlagRsp.prototype.flagId = 0;

        /**
         * Encodes the specified Msg_SetGuildNameAndFlagRsp message. Does not implicitly {@link proto.Msg_SetGuildNameAndFlagRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_SetGuildNameAndFlagRsp
         * @static
         * @param {proto.IMsg_SetGuildNameAndFlagRsp} m Msg_SetGuildNameAndFlagRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_SetGuildNameAndFlagRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.error != null && Object.hasOwnProperty.call(m, "error"))
                $root.proto.CommonError.encode(m.error, w.uint32(10).fork()).ldelim();
            if (m.name != null && Object.hasOwnProperty.call(m, "name"))
                w.uint32(18).string(m.name);
            if (m.flagId != null && Object.hasOwnProperty.call(m, "flagId"))
                w.uint32(24).int32(m.flagId);
            return w;
        };

        /**
         * Decodes a Msg_SetGuildNameAndFlagRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_SetGuildNameAndFlagRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_SetGuildNameAndFlagRsp} Msg_SetGuildNameAndFlagRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_SetGuildNameAndFlagRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_SetGuildNameAndFlagRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.error = $root.proto.CommonError.decode(r, r.uint32());
                    break;
                case 2:
                    m.name = r.string();
                    break;
                case 3:
                    m.flagId = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_SetGuildNameAndFlagRsp;
    })();

    proto.Msg_SetGuildNoticeReq = (function() {

        /**
         * Properties of a Msg_SetGuildNoticeReq.
         * @memberof proto
         * @interface IMsg_SetGuildNoticeReq
         * @property {string|null} [notice] Msg_SetGuildNoticeReq notice
         */

        /**
         * Constructs a new Msg_SetGuildNoticeReq.
         * @memberof proto
         * @classdesc Represents a Msg_SetGuildNoticeReq.
         * @implements IMsg_SetGuildNoticeReq
         * @constructor
         * @param {proto.IMsg_SetGuildNoticeReq=} [p] Properties to set
         */
        function Msg_SetGuildNoticeReq(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_SetGuildNoticeReq notice.
         * @member {string} notice
         * @memberof proto.Msg_SetGuildNoticeReq
         * @instance
         */
        Msg_SetGuildNoticeReq.prototype.notice = "";

        /**
         * Encodes the specified Msg_SetGuildNoticeReq message. Does not implicitly {@link proto.Msg_SetGuildNoticeReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_SetGuildNoticeReq
         * @static
         * @param {proto.IMsg_SetGuildNoticeReq} m Msg_SetGuildNoticeReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_SetGuildNoticeReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.notice != null && Object.hasOwnProperty.call(m, "notice"))
                w.uint32(10).string(m.notice);
            return w;
        };

        /**
         * Decodes a Msg_SetGuildNoticeReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_SetGuildNoticeReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_SetGuildNoticeReq} Msg_SetGuildNoticeReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_SetGuildNoticeReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_SetGuildNoticeReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.notice = r.string();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_SetGuildNoticeReq;
    })();

    proto.Msg_SetGuildNoticeRsp = (function() {

        /**
         * Properties of a Msg_SetGuildNoticeRsp.
         * @memberof proto
         * @interface IMsg_SetGuildNoticeRsp
         * @property {proto.ICommonError|null} [error] Msg_SetGuildNoticeRsp error
         * @property {string|null} [notice] Msg_SetGuildNoticeRsp notice
         */

        /**
         * Constructs a new Msg_SetGuildNoticeRsp.
         * @memberof proto
         * @classdesc Represents a Msg_SetGuildNoticeRsp.
         * @implements IMsg_SetGuildNoticeRsp
         * @constructor
         * @param {proto.IMsg_SetGuildNoticeRsp=} [p] Properties to set
         */
        function Msg_SetGuildNoticeRsp(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_SetGuildNoticeRsp error.
         * @member {proto.ICommonError|null|undefined} error
         * @memberof proto.Msg_SetGuildNoticeRsp
         * @instance
         */
        Msg_SetGuildNoticeRsp.prototype.error = null;

        /**
         * Msg_SetGuildNoticeRsp notice.
         * @member {string} notice
         * @memberof proto.Msg_SetGuildNoticeRsp
         * @instance
         */
        Msg_SetGuildNoticeRsp.prototype.notice = "";

        /**
         * Encodes the specified Msg_SetGuildNoticeRsp message. Does not implicitly {@link proto.Msg_SetGuildNoticeRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_SetGuildNoticeRsp
         * @static
         * @param {proto.IMsg_SetGuildNoticeRsp} m Msg_SetGuildNoticeRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_SetGuildNoticeRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.error != null && Object.hasOwnProperty.call(m, "error"))
                $root.proto.CommonError.encode(m.error, w.uint32(10).fork()).ldelim();
            if (m.notice != null && Object.hasOwnProperty.call(m, "notice"))
                w.uint32(18).string(m.notice);
            return w;
        };

        /**
         * Decodes a Msg_SetGuildNoticeRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_SetGuildNoticeRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_SetGuildNoticeRsp} Msg_SetGuildNoticeRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_SetGuildNoticeRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_SetGuildNoticeRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.error = $root.proto.CommonError.decode(r, r.uint32());
                    break;
                case 2:
                    m.notice = r.string();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_SetGuildNoticeRsp;
    })();

    proto.Msg_SetGuildMemberJobReq = (function() {

        /**
         * Properties of a Msg_SetGuildMemberJobReq.
         * @memberof proto
         * @interface IMsg_SetGuildMemberJobReq
         * @property {string|null} [roleId] Msg_SetGuildMemberJobReq roleId
         * @property {number|null} [job] Msg_SetGuildMemberJobReq job
         */

        /**
         * Constructs a new Msg_SetGuildMemberJobReq.
         * @memberof proto
         * @classdesc Represents a Msg_SetGuildMemberJobReq.
         * @implements IMsg_SetGuildMemberJobReq
         * @constructor
         * @param {proto.IMsg_SetGuildMemberJobReq=} [p] Properties to set
         */
        function Msg_SetGuildMemberJobReq(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_SetGuildMemberJobReq roleId.
         * @member {string} roleId
         * @memberof proto.Msg_SetGuildMemberJobReq
         * @instance
         */
        Msg_SetGuildMemberJobReq.prototype.roleId = "";

        /**
         * Msg_SetGuildMemberJobReq job.
         * @member {number} job
         * @memberof proto.Msg_SetGuildMemberJobReq
         * @instance
         */
        Msg_SetGuildMemberJobReq.prototype.job = 0;

        /**
         * Encodes the specified Msg_SetGuildMemberJobReq message. Does not implicitly {@link proto.Msg_SetGuildMemberJobReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_SetGuildMemberJobReq
         * @static
         * @param {proto.IMsg_SetGuildMemberJobReq} m Msg_SetGuildMemberJobReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_SetGuildMemberJobReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.roleId != null && Object.hasOwnProperty.call(m, "roleId"))
                w.uint32(10).string(m.roleId);
            if (m.job != null && Object.hasOwnProperty.call(m, "job"))
                w.uint32(16).int32(m.job);
            return w;
        };

        /**
         * Decodes a Msg_SetGuildMemberJobReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_SetGuildMemberJobReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_SetGuildMemberJobReq} Msg_SetGuildMemberJobReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_SetGuildMemberJobReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_SetGuildMemberJobReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.roleId = r.string();
                    break;
                case 2:
                    m.job = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_SetGuildMemberJobReq;
    })();

    proto.Msg_SetGuildMemberJobRsp = (function() {

        /**
         * Properties of a Msg_SetGuildMemberJobRsp.
         * @memberof proto
         * @interface IMsg_SetGuildMemberJobRsp
         * @property {proto.ICommonError|null} [error] Msg_SetGuildMemberJobRsp error
         * @property {string|null} [roleId] Msg_SetGuildMemberJobRsp roleId
         * @property {number|null} [job] Msg_SetGuildMemberJobRsp job
         */

        /**
         * Constructs a new Msg_SetGuildMemberJobRsp.
         * @memberof proto
         * @classdesc Represents a Msg_SetGuildMemberJobRsp.
         * @implements IMsg_SetGuildMemberJobRsp
         * @constructor
         * @param {proto.IMsg_SetGuildMemberJobRsp=} [p] Properties to set
         */
        function Msg_SetGuildMemberJobRsp(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_SetGuildMemberJobRsp error.
         * @member {proto.ICommonError|null|undefined} error
         * @memberof proto.Msg_SetGuildMemberJobRsp
         * @instance
         */
        Msg_SetGuildMemberJobRsp.prototype.error = null;

        /**
         * Msg_SetGuildMemberJobRsp roleId.
         * @member {string} roleId
         * @memberof proto.Msg_SetGuildMemberJobRsp
         * @instance
         */
        Msg_SetGuildMemberJobRsp.prototype.roleId = "";

        /**
         * Msg_SetGuildMemberJobRsp job.
         * @member {number} job
         * @memberof proto.Msg_SetGuildMemberJobRsp
         * @instance
         */
        Msg_SetGuildMemberJobRsp.prototype.job = 0;

        /**
         * Encodes the specified Msg_SetGuildMemberJobRsp message. Does not implicitly {@link proto.Msg_SetGuildMemberJobRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_SetGuildMemberJobRsp
         * @static
         * @param {proto.IMsg_SetGuildMemberJobRsp} m Msg_SetGuildMemberJobRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_SetGuildMemberJobRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.error != null && Object.hasOwnProperty.call(m, "error"))
                $root.proto.CommonError.encode(m.error, w.uint32(10).fork()).ldelim();
            if (m.roleId != null && Object.hasOwnProperty.call(m, "roleId"))
                w.uint32(18).string(m.roleId);
            if (m.job != null && Object.hasOwnProperty.call(m, "job"))
                w.uint32(24).int32(m.job);
            return w;
        };

        /**
         * Decodes a Msg_SetGuildMemberJobRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_SetGuildMemberJobRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_SetGuildMemberJobRsp} Msg_SetGuildMemberJobRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_SetGuildMemberJobRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_SetGuildMemberJobRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.error = $root.proto.CommonError.decode(r, r.uint32());
                    break;
                case 2:
                    m.roleId = r.string();
                    break;
                case 3:
                    m.job = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_SetGuildMemberJobRsp;
    })();

    proto.Msg_SignGuildReq = (function() {

        /**
         * Properties of a Msg_SignGuildReq.
         * @memberof proto
         * @interface IMsg_SignGuildReq
         * @property {number|null} [signTimes] Msg_SignGuildReq signTimes
         */

        /**
         * Constructs a new Msg_SignGuildReq.
         * @memberof proto
         * @classdesc Represents a Msg_SignGuildReq.
         * @implements IMsg_SignGuildReq
         * @constructor
         * @param {proto.IMsg_SignGuildReq=} [p] Properties to set
         */
        function Msg_SignGuildReq(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_SignGuildReq signTimes.
         * @member {number} signTimes
         * @memberof proto.Msg_SignGuildReq
         * @instance
         */
        Msg_SignGuildReq.prototype.signTimes = 0;

        /**
         * Encodes the specified Msg_SignGuildReq message. Does not implicitly {@link proto.Msg_SignGuildReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_SignGuildReq
         * @static
         * @param {proto.IMsg_SignGuildReq} m Msg_SignGuildReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_SignGuildReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.signTimes != null && Object.hasOwnProperty.call(m, "signTimes"))
                w.uint32(8).int32(m.signTimes);
            return w;
        };

        /**
         * Decodes a Msg_SignGuildReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_SignGuildReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_SignGuildReq} Msg_SignGuildReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_SignGuildReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_SignGuildReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.signTimes = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_SignGuildReq;
    })();

    proto.Msg_SignGuildRsp = (function() {

        /**
         * Properties of a Msg_SignGuildRsp.
         * @memberof proto
         * @interface IMsg_SignGuildRsp
         * @property {proto.ICommonError|null} [error] Msg_SignGuildRsp error
         * @property {number|null} [signTimes] Msg_SignGuildRsp signTimes
         * @property {Array.<proto.IItem>|null} [rewards] Msg_SignGuildRsp rewards
         */

        /**
         * Constructs a new Msg_SignGuildRsp.
         * @memberof proto
         * @classdesc Represents a Msg_SignGuildRsp.
         * @implements IMsg_SignGuildRsp
         * @constructor
         * @param {proto.IMsg_SignGuildRsp=} [p] Properties to set
         */
        function Msg_SignGuildRsp(p) {
            this.rewards = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_SignGuildRsp error.
         * @member {proto.ICommonError|null|undefined} error
         * @memberof proto.Msg_SignGuildRsp
         * @instance
         */
        Msg_SignGuildRsp.prototype.error = null;

        /**
         * Msg_SignGuildRsp signTimes.
         * @member {number} signTimes
         * @memberof proto.Msg_SignGuildRsp
         * @instance
         */
        Msg_SignGuildRsp.prototype.signTimes = 0;

        /**
         * Msg_SignGuildRsp rewards.
         * @member {Array.<proto.IItem>} rewards
         * @memberof proto.Msg_SignGuildRsp
         * @instance
         */
        Msg_SignGuildRsp.prototype.rewards = $util.emptyArray;

        /**
         * Encodes the specified Msg_SignGuildRsp message. Does not implicitly {@link proto.Msg_SignGuildRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_SignGuildRsp
         * @static
         * @param {proto.IMsg_SignGuildRsp} m Msg_SignGuildRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_SignGuildRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.error != null && Object.hasOwnProperty.call(m, "error"))
                $root.proto.CommonError.encode(m.error, w.uint32(10).fork()).ldelim();
            if (m.signTimes != null && Object.hasOwnProperty.call(m, "signTimes"))
                w.uint32(16).int32(m.signTimes);
            if (m.rewards != null && m.rewards.length) {
                for (var i = 0; i < m.rewards.length; ++i)
                    $root.proto.Item.encode(m.rewards[i], w.uint32(26).fork()).ldelim();
            }
            return w;
        };

        /**
         * Decodes a Msg_SignGuildRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_SignGuildRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_SignGuildRsp} Msg_SignGuildRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_SignGuildRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_SignGuildRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.error = $root.proto.CommonError.decode(r, r.uint32());
                    break;
                case 2:
                    m.signTimes = r.int32();
                    break;
                case 3:
                    if (!(m.rewards && m.rewards.length))
                        m.rewards = [];
                    m.rewards.push($root.proto.Item.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_SignGuildRsp;
    })();

    proto.Msg_BargainGuildReq = (function() {

        /**
         * Properties of a Msg_BargainGuildReq.
         * @memberof proto
         * @interface IMsg_BargainGuildReq
         * @property {number|Long|null} [giftId] Msg_BargainGuildReq giftId
         */

        /**
         * Constructs a new Msg_BargainGuildReq.
         * @memberof proto
         * @classdesc Represents a Msg_BargainGuildReq.
         * @implements IMsg_BargainGuildReq
         * @constructor
         * @param {proto.IMsg_BargainGuildReq=} [p] Properties to set
         */
        function Msg_BargainGuildReq(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_BargainGuildReq giftId.
         * @member {number|Long} giftId
         * @memberof proto.Msg_BargainGuildReq
         * @instance
         */
        Msg_BargainGuildReq.prototype.giftId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

        /**
         * Encodes the specified Msg_BargainGuildReq message. Does not implicitly {@link proto.Msg_BargainGuildReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_BargainGuildReq
         * @static
         * @param {proto.IMsg_BargainGuildReq} m Msg_BargainGuildReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_BargainGuildReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.giftId != null && Object.hasOwnProperty.call(m, "giftId"))
                w.uint32(8).int64(m.giftId);
            return w;
        };

        /**
         * Decodes a Msg_BargainGuildReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_BargainGuildReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_BargainGuildReq} Msg_BargainGuildReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_BargainGuildReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_BargainGuildReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.giftId = r.int64();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_BargainGuildReq;
    })();

    proto.Msg_BargainGuildRsp = (function() {

        /**
         * Properties of a Msg_BargainGuildRsp.
         * @memberof proto
         * @interface IMsg_BargainGuildRsp
         * @property {proto.ICommonError|null} [error] Msg_BargainGuildRsp error
         * @property {number|Long|null} [giftId] Msg_BargainGuildRsp giftId
         * @property {proto.IGuildGift|null} [gift] Msg_BargainGuildRsp gift
         */

        /**
         * Constructs a new Msg_BargainGuildRsp.
         * @memberof proto
         * @classdesc Represents a Msg_BargainGuildRsp.
         * @implements IMsg_BargainGuildRsp
         * @constructor
         * @param {proto.IMsg_BargainGuildRsp=} [p] Properties to set
         */
        function Msg_BargainGuildRsp(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_BargainGuildRsp error.
         * @member {proto.ICommonError|null|undefined} error
         * @memberof proto.Msg_BargainGuildRsp
         * @instance
         */
        Msg_BargainGuildRsp.prototype.error = null;

        /**
         * Msg_BargainGuildRsp giftId.
         * @member {number|Long} giftId
         * @memberof proto.Msg_BargainGuildRsp
         * @instance
         */
        Msg_BargainGuildRsp.prototype.giftId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

        /**
         * Msg_BargainGuildRsp gift.
         * @member {proto.IGuildGift|null|undefined} gift
         * @memberof proto.Msg_BargainGuildRsp
         * @instance
         */
        Msg_BargainGuildRsp.prototype.gift = null;

        /**
         * Encodes the specified Msg_BargainGuildRsp message. Does not implicitly {@link proto.Msg_BargainGuildRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_BargainGuildRsp
         * @static
         * @param {proto.IMsg_BargainGuildRsp} m Msg_BargainGuildRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_BargainGuildRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.error != null && Object.hasOwnProperty.call(m, "error"))
                $root.proto.CommonError.encode(m.error, w.uint32(10).fork()).ldelim();
            if (m.giftId != null && Object.hasOwnProperty.call(m, "giftId"))
                w.uint32(16).int64(m.giftId);
            if (m.gift != null && Object.hasOwnProperty.call(m, "gift"))
                $root.proto.GuildGift.encode(m.gift, w.uint32(26).fork()).ldelim();
            return w;
        };

        /**
         * Decodes a Msg_BargainGuildRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_BargainGuildRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_BargainGuildRsp} Msg_BargainGuildRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_BargainGuildRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_BargainGuildRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.error = $root.proto.CommonError.decode(r, r.uint32());
                    break;
                case 2:
                    m.giftId = r.int64();
                    break;
                case 3:
                    m.gift = $root.proto.GuildGift.decode(r, r.uint32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_BargainGuildRsp;
    })();

    proto.Msg_BuyGuildGiftReq = (function() {

        /**
         * Properties of a Msg_BuyGuildGiftReq.
         * @memberof proto
         * @interface IMsg_BuyGuildGiftReq
         * @property {number|Long|null} [giftId] Msg_BuyGuildGiftReq giftId
         */

        /**
         * Constructs a new Msg_BuyGuildGiftReq.
         * @memberof proto
         * @classdesc Represents a Msg_BuyGuildGiftReq.
         * @implements IMsg_BuyGuildGiftReq
         * @constructor
         * @param {proto.IMsg_BuyGuildGiftReq=} [p] Properties to set
         */
        function Msg_BuyGuildGiftReq(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_BuyGuildGiftReq giftId.
         * @member {number|Long} giftId
         * @memberof proto.Msg_BuyGuildGiftReq
         * @instance
         */
        Msg_BuyGuildGiftReq.prototype.giftId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

        /**
         * Encodes the specified Msg_BuyGuildGiftReq message. Does not implicitly {@link proto.Msg_BuyGuildGiftReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_BuyGuildGiftReq
         * @static
         * @param {proto.IMsg_BuyGuildGiftReq} m Msg_BuyGuildGiftReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_BuyGuildGiftReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.giftId != null && Object.hasOwnProperty.call(m, "giftId"))
                w.uint32(8).int64(m.giftId);
            return w;
        };

        /**
         * Decodes a Msg_BuyGuildGiftReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_BuyGuildGiftReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_BuyGuildGiftReq} Msg_BuyGuildGiftReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_BuyGuildGiftReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_BuyGuildGiftReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.giftId = r.int64();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_BuyGuildGiftReq;
    })();

    proto.Msg_BuyGuildGiftRsp = (function() {

        /**
         * Properties of a Msg_BuyGuildGiftRsp.
         * @memberof proto
         * @interface IMsg_BuyGuildGiftRsp
         * @property {proto.ICommonError|null} [error] Msg_BuyGuildGiftRsp error
         * @property {number|Long|null} [giftId] Msg_BuyGuildGiftRsp giftId
         * @property {Array.<proto.IItem>|null} [rewards] Msg_BuyGuildGiftRsp rewards
         */

        /**
         * Constructs a new Msg_BuyGuildGiftRsp.
         * @memberof proto
         * @classdesc Represents a Msg_BuyGuildGiftRsp.
         * @implements IMsg_BuyGuildGiftRsp
         * @constructor
         * @param {proto.IMsg_BuyGuildGiftRsp=} [p] Properties to set
         */
        function Msg_BuyGuildGiftRsp(p) {
            this.rewards = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_BuyGuildGiftRsp error.
         * @member {proto.ICommonError|null|undefined} error
         * @memberof proto.Msg_BuyGuildGiftRsp
         * @instance
         */
        Msg_BuyGuildGiftRsp.prototype.error = null;

        /**
         * Msg_BuyGuildGiftRsp giftId.
         * @member {number|Long} giftId
         * @memberof proto.Msg_BuyGuildGiftRsp
         * @instance
         */
        Msg_BuyGuildGiftRsp.prototype.giftId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

        /**
         * Msg_BuyGuildGiftRsp rewards.
         * @member {Array.<proto.IItem>} rewards
         * @memberof proto.Msg_BuyGuildGiftRsp
         * @instance
         */
        Msg_BuyGuildGiftRsp.prototype.rewards = $util.emptyArray;

        /**
         * Encodes the specified Msg_BuyGuildGiftRsp message. Does not implicitly {@link proto.Msg_BuyGuildGiftRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_BuyGuildGiftRsp
         * @static
         * @param {proto.IMsg_BuyGuildGiftRsp} m Msg_BuyGuildGiftRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_BuyGuildGiftRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.error != null && Object.hasOwnProperty.call(m, "error"))
                $root.proto.CommonError.encode(m.error, w.uint32(10).fork()).ldelim();
            if (m.giftId != null && Object.hasOwnProperty.call(m, "giftId"))
                w.uint32(16).int64(m.giftId);
            if (m.rewards != null && m.rewards.length) {
                for (var i = 0; i < m.rewards.length; ++i)
                    $root.proto.Item.encode(m.rewards[i], w.uint32(26).fork()).ldelim();
            }
            return w;
        };

        /**
         * Decodes a Msg_BuyGuildGiftRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_BuyGuildGiftRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_BuyGuildGiftRsp} Msg_BuyGuildGiftRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_BuyGuildGiftRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_BuyGuildGiftRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.error = $root.proto.CommonError.decode(r, r.uint32());
                    break;
                case 2:
                    m.giftId = r.int64();
                    break;
                case 3:
                    if (!(m.rewards && m.rewards.length))
                        m.rewards = [];
                    m.rewards.push($root.proto.Item.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_BuyGuildGiftRsp;
    })();

    proto.Msg_UpgradeGuildSkillReq = (function() {

        /**
         * Properties of a Msg_UpgradeGuildSkillReq.
         * @memberof proto
         * @interface IMsg_UpgradeGuildSkillReq
         * @property {number|null} [heroClass] Msg_UpgradeGuildSkillReq heroClass
         */

        /**
         * Constructs a new Msg_UpgradeGuildSkillReq.
         * @memberof proto
         * @classdesc Represents a Msg_UpgradeGuildSkillReq.
         * @implements IMsg_UpgradeGuildSkillReq
         * @constructor
         * @param {proto.IMsg_UpgradeGuildSkillReq=} [p] Properties to set
         */
        function Msg_UpgradeGuildSkillReq(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_UpgradeGuildSkillReq heroClass.
         * @member {number} heroClass
         * @memberof proto.Msg_UpgradeGuildSkillReq
         * @instance
         */
        Msg_UpgradeGuildSkillReq.prototype.heroClass = 0;

        /**
         * Encodes the specified Msg_UpgradeGuildSkillReq message. Does not implicitly {@link proto.Msg_UpgradeGuildSkillReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_UpgradeGuildSkillReq
         * @static
         * @param {proto.IMsg_UpgradeGuildSkillReq} m Msg_UpgradeGuildSkillReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_UpgradeGuildSkillReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.heroClass != null && Object.hasOwnProperty.call(m, "heroClass"))
                w.uint32(8).int32(m.heroClass);
            return w;
        };

        /**
         * Decodes a Msg_UpgradeGuildSkillReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_UpgradeGuildSkillReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_UpgradeGuildSkillReq} Msg_UpgradeGuildSkillReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_UpgradeGuildSkillReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_UpgradeGuildSkillReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.heroClass = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_UpgradeGuildSkillReq;
    })();

    proto.Msg_UpgradeGuildSkillRsp = (function() {

        /**
         * Properties of a Msg_UpgradeGuildSkillRsp.
         * @memberof proto
         * @interface IMsg_UpgradeGuildSkillRsp
         * @property {proto.ICommonError|null} [error] Msg_UpgradeGuildSkillRsp error
         * @property {number|null} [heroClass] Msg_UpgradeGuildSkillRsp heroClass
         */

        /**
         * Constructs a new Msg_UpgradeGuildSkillRsp.
         * @memberof proto
         * @classdesc Represents a Msg_UpgradeGuildSkillRsp.
         * @implements IMsg_UpgradeGuildSkillRsp
         * @constructor
         * @param {proto.IMsg_UpgradeGuildSkillRsp=} [p] Properties to set
         */
        function Msg_UpgradeGuildSkillRsp(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_UpgradeGuildSkillRsp error.
         * @member {proto.ICommonError|null|undefined} error
         * @memberof proto.Msg_UpgradeGuildSkillRsp
         * @instance
         */
        Msg_UpgradeGuildSkillRsp.prototype.error = null;

        /**
         * Msg_UpgradeGuildSkillRsp heroClass.
         * @member {number} heroClass
         * @memberof proto.Msg_UpgradeGuildSkillRsp
         * @instance
         */
        Msg_UpgradeGuildSkillRsp.prototype.heroClass = 0;

        /**
         * Encodes the specified Msg_UpgradeGuildSkillRsp message. Does not implicitly {@link proto.Msg_UpgradeGuildSkillRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_UpgradeGuildSkillRsp
         * @static
         * @param {proto.IMsg_UpgradeGuildSkillRsp} m Msg_UpgradeGuildSkillRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_UpgradeGuildSkillRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.error != null && Object.hasOwnProperty.call(m, "error"))
                $root.proto.CommonError.encode(m.error, w.uint32(10).fork()).ldelim();
            if (m.heroClass != null && Object.hasOwnProperty.call(m, "heroClass"))
                w.uint32(16).int32(m.heroClass);
            return w;
        };

        /**
         * Decodes a Msg_UpgradeGuildSkillRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_UpgradeGuildSkillRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_UpgradeGuildSkillRsp} Msg_UpgradeGuildSkillRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_UpgradeGuildSkillRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_UpgradeGuildSkillRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.error = $root.proto.CommonError.decode(r, r.uint32());
                    break;
                case 2:
                    m.heroClass = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_UpgradeGuildSkillRsp;
    })();

    proto.Msg_ResetGuildSkillReq = (function() {

        /**
         * Properties of a Msg_ResetGuildSkillReq.
         * @memberof proto
         * @interface IMsg_ResetGuildSkillReq
         * @property {number|null} [heroClass] Msg_ResetGuildSkillReq heroClass
         */

        /**
         * Constructs a new Msg_ResetGuildSkillReq.
         * @memberof proto
         * @classdesc Represents a Msg_ResetGuildSkillReq.
         * @implements IMsg_ResetGuildSkillReq
         * @constructor
         * @param {proto.IMsg_ResetGuildSkillReq=} [p] Properties to set
         */
        function Msg_ResetGuildSkillReq(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_ResetGuildSkillReq heroClass.
         * @member {number} heroClass
         * @memberof proto.Msg_ResetGuildSkillReq
         * @instance
         */
        Msg_ResetGuildSkillReq.prototype.heroClass = 0;

        /**
         * Encodes the specified Msg_ResetGuildSkillReq message. Does not implicitly {@link proto.Msg_ResetGuildSkillReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_ResetGuildSkillReq
         * @static
         * @param {proto.IMsg_ResetGuildSkillReq} m Msg_ResetGuildSkillReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_ResetGuildSkillReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.heroClass != null && Object.hasOwnProperty.call(m, "heroClass"))
                w.uint32(8).int32(m.heroClass);
            return w;
        };

        /**
         * Decodes a Msg_ResetGuildSkillReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_ResetGuildSkillReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_ResetGuildSkillReq} Msg_ResetGuildSkillReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_ResetGuildSkillReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_ResetGuildSkillReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.heroClass = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_ResetGuildSkillReq;
    })();

    proto.Msg_ResetGuildSkillRsp = (function() {

        /**
         * Properties of a Msg_ResetGuildSkillRsp.
         * @memberof proto
         * @interface IMsg_ResetGuildSkillRsp
         * @property {proto.ICommonError|null} [error] Msg_ResetGuildSkillRsp error
         * @property {number|null} [heroClass] Msg_ResetGuildSkillRsp heroClass
         * @property {Array.<proto.IItem>|null} [rewards] Msg_ResetGuildSkillRsp rewards
         */

        /**
         * Constructs a new Msg_ResetGuildSkillRsp.
         * @memberof proto
         * @classdesc Represents a Msg_ResetGuildSkillRsp.
         * @implements IMsg_ResetGuildSkillRsp
         * @constructor
         * @param {proto.IMsg_ResetGuildSkillRsp=} [p] Properties to set
         */
        function Msg_ResetGuildSkillRsp(p) {
            this.rewards = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_ResetGuildSkillRsp error.
         * @member {proto.ICommonError|null|undefined} error
         * @memberof proto.Msg_ResetGuildSkillRsp
         * @instance
         */
        Msg_ResetGuildSkillRsp.prototype.error = null;

        /**
         * Msg_ResetGuildSkillRsp heroClass.
         * @member {number} heroClass
         * @memberof proto.Msg_ResetGuildSkillRsp
         * @instance
         */
        Msg_ResetGuildSkillRsp.prototype.heroClass = 0;

        /**
         * Msg_ResetGuildSkillRsp rewards.
         * @member {Array.<proto.IItem>} rewards
         * @memberof proto.Msg_ResetGuildSkillRsp
         * @instance
         */
        Msg_ResetGuildSkillRsp.prototype.rewards = $util.emptyArray;

        /**
         * Encodes the specified Msg_ResetGuildSkillRsp message. Does not implicitly {@link proto.Msg_ResetGuildSkillRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_ResetGuildSkillRsp
         * @static
         * @param {proto.IMsg_ResetGuildSkillRsp} m Msg_ResetGuildSkillRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_ResetGuildSkillRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.error != null && Object.hasOwnProperty.call(m, "error"))
                $root.proto.CommonError.encode(m.error, w.uint32(10).fork()).ldelim();
            if (m.heroClass != null && Object.hasOwnProperty.call(m, "heroClass"))
                w.uint32(16).int32(m.heroClass);
            if (m.rewards != null && m.rewards.length) {
                for (var i = 0; i < m.rewards.length; ++i)
                    $root.proto.Item.encode(m.rewards[i], w.uint32(26).fork()).ldelim();
            }
            return w;
        };

        /**
         * Decodes a Msg_ResetGuildSkillRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_ResetGuildSkillRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_ResetGuildSkillRsp} Msg_ResetGuildSkillRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_ResetGuildSkillRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_ResetGuildSkillRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.error = $root.proto.CommonError.decode(r, r.uint32());
                    break;
                case 2:
                    m.heroClass = r.int32();
                    break;
                case 3:
                    if (!(m.rewards && m.rewards.length))
                        m.rewards = [];
                    m.rewards.push($root.proto.Item.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_ResetGuildSkillRsp;
    })();

    proto.Msg_ReceiveGuildDailyTasksRewardsReq = (function() {

        /**
         * Properties of a Msg_ReceiveGuildDailyTasksRewardsReq.
         * @memberof proto
         * @interface IMsg_ReceiveGuildDailyTasksRewardsReq
         * @property {Array.<number>|null} [taskIds] Msg_ReceiveGuildDailyTasksRewardsReq taskIds
         */

        /**
         * Constructs a new Msg_ReceiveGuildDailyTasksRewardsReq.
         * @memberof proto
         * @classdesc Represents a Msg_ReceiveGuildDailyTasksRewardsReq.
         * @implements IMsg_ReceiveGuildDailyTasksRewardsReq
         * @constructor
         * @param {proto.IMsg_ReceiveGuildDailyTasksRewardsReq=} [p] Properties to set
         */
        function Msg_ReceiveGuildDailyTasksRewardsReq(p) {
            this.taskIds = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_ReceiveGuildDailyTasksRewardsReq taskIds.
         * @member {Array.<number>} taskIds
         * @memberof proto.Msg_ReceiveGuildDailyTasksRewardsReq
         * @instance
         */
        Msg_ReceiveGuildDailyTasksRewardsReq.prototype.taskIds = $util.emptyArray;

        /**
         * Encodes the specified Msg_ReceiveGuildDailyTasksRewardsReq message. Does not implicitly {@link proto.Msg_ReceiveGuildDailyTasksRewardsReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_ReceiveGuildDailyTasksRewardsReq
         * @static
         * @param {proto.IMsg_ReceiveGuildDailyTasksRewardsReq} m Msg_ReceiveGuildDailyTasksRewardsReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_ReceiveGuildDailyTasksRewardsReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.taskIds != null && m.taskIds.length) {
                w.uint32(10).fork();
                for (var i = 0; i < m.taskIds.length; ++i)
                    w.int32(m.taskIds[i]);
                w.ldelim();
            }
            return w;
        };

        /**
         * Decodes a Msg_ReceiveGuildDailyTasksRewardsReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_ReceiveGuildDailyTasksRewardsReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_ReceiveGuildDailyTasksRewardsReq} Msg_ReceiveGuildDailyTasksRewardsReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_ReceiveGuildDailyTasksRewardsReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_ReceiveGuildDailyTasksRewardsReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.taskIds && m.taskIds.length))
                        m.taskIds = [];
                    if ((t & 7) === 2) {
                        var c2 = r.uint32() + r.pos;
                        while (r.pos < c2)
                            m.taskIds.push(r.int32());
                    } else
                        m.taskIds.push(r.int32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_ReceiveGuildDailyTasksRewardsReq;
    })();

    proto.Msg_ReceiveGuildDailyTasksRewardsRsp = (function() {

        /**
         * Properties of a Msg_ReceiveGuildDailyTasksRewardsRsp.
         * @memberof proto
         * @interface IMsg_ReceiveGuildDailyTasksRewardsRsp
         * @property {proto.ICommonError|null} [error] Msg_ReceiveGuildDailyTasksRewardsRsp error
         * @property {Array.<number>|null} [taskIds] Msg_ReceiveGuildDailyTasksRewardsRsp taskIds
         * @property {Array.<proto.IItem>|null} [rewards] Msg_ReceiveGuildDailyTasksRewardsRsp rewards
         */

        /**
         * Constructs a new Msg_ReceiveGuildDailyTasksRewardsRsp.
         * @memberof proto
         * @classdesc Represents a Msg_ReceiveGuildDailyTasksRewardsRsp.
         * @implements IMsg_ReceiveGuildDailyTasksRewardsRsp
         * @constructor
         * @param {proto.IMsg_ReceiveGuildDailyTasksRewardsRsp=} [p] Properties to set
         */
        function Msg_ReceiveGuildDailyTasksRewardsRsp(p) {
            this.taskIds = [];
            this.rewards = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_ReceiveGuildDailyTasksRewardsRsp error.
         * @member {proto.ICommonError|null|undefined} error
         * @memberof proto.Msg_ReceiveGuildDailyTasksRewardsRsp
         * @instance
         */
        Msg_ReceiveGuildDailyTasksRewardsRsp.prototype.error = null;

        /**
         * Msg_ReceiveGuildDailyTasksRewardsRsp taskIds.
         * @member {Array.<number>} taskIds
         * @memberof proto.Msg_ReceiveGuildDailyTasksRewardsRsp
         * @instance
         */
        Msg_ReceiveGuildDailyTasksRewardsRsp.prototype.taskIds = $util.emptyArray;

        /**
         * Msg_ReceiveGuildDailyTasksRewardsRsp rewards.
         * @member {Array.<proto.IItem>} rewards
         * @memberof proto.Msg_ReceiveGuildDailyTasksRewardsRsp
         * @instance
         */
        Msg_ReceiveGuildDailyTasksRewardsRsp.prototype.rewards = $util.emptyArray;

        /**
         * Encodes the specified Msg_ReceiveGuildDailyTasksRewardsRsp message. Does not implicitly {@link proto.Msg_ReceiveGuildDailyTasksRewardsRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_ReceiveGuildDailyTasksRewardsRsp
         * @static
         * @param {proto.IMsg_ReceiveGuildDailyTasksRewardsRsp} m Msg_ReceiveGuildDailyTasksRewardsRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_ReceiveGuildDailyTasksRewardsRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.error != null && Object.hasOwnProperty.call(m, "error"))
                $root.proto.CommonError.encode(m.error, w.uint32(10).fork()).ldelim();
            if (m.taskIds != null && m.taskIds.length) {
                w.uint32(18).fork();
                for (var i = 0; i < m.taskIds.length; ++i)
                    w.int32(m.taskIds[i]);
                w.ldelim();
            }
            if (m.rewards != null && m.rewards.length) {
                for (var i = 0; i < m.rewards.length; ++i)
                    $root.proto.Item.encode(m.rewards[i], w.uint32(26).fork()).ldelim();
            }
            return w;
        };

        /**
         * Decodes a Msg_ReceiveGuildDailyTasksRewardsRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_ReceiveGuildDailyTasksRewardsRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_ReceiveGuildDailyTasksRewardsRsp} Msg_ReceiveGuildDailyTasksRewardsRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_ReceiveGuildDailyTasksRewardsRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_ReceiveGuildDailyTasksRewardsRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.error = $root.proto.CommonError.decode(r, r.uint32());
                    break;
                case 2:
                    if (!(m.taskIds && m.taskIds.length))
                        m.taskIds = [];
                    if ((t & 7) === 2) {
                        var c2 = r.uint32() + r.pos;
                        while (r.pos < c2)
                            m.taskIds.push(r.int32());
                    } else
                        m.taskIds.push(r.int32());
                    break;
                case 3:
                    if (!(m.rewards && m.rewards.length))
                        m.rewards = [];
                    m.rewards.push($root.proto.Item.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_ReceiveGuildDailyTasksRewardsRsp;
    })();

    proto.Msg_ReceiveGuildTaskChestRewardsReq = (function() {

        /**
         * Properties of a Msg_ReceiveGuildTaskChestRewardsReq.
         * @memberof proto
         * @interface IMsg_ReceiveGuildTaskChestRewardsReq
         * @property {Array.<number>|null} [indexes] Msg_ReceiveGuildTaskChestRewardsReq indexes
         */

        /**
         * Constructs a new Msg_ReceiveGuildTaskChestRewardsReq.
         * @memberof proto
         * @classdesc Represents a Msg_ReceiveGuildTaskChestRewardsReq.
         * @implements IMsg_ReceiveGuildTaskChestRewardsReq
         * @constructor
         * @param {proto.IMsg_ReceiveGuildTaskChestRewardsReq=} [p] Properties to set
         */
        function Msg_ReceiveGuildTaskChestRewardsReq(p) {
            this.indexes = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_ReceiveGuildTaskChestRewardsReq indexes.
         * @member {Array.<number>} indexes
         * @memberof proto.Msg_ReceiveGuildTaskChestRewardsReq
         * @instance
         */
        Msg_ReceiveGuildTaskChestRewardsReq.prototype.indexes = $util.emptyArray;

        /**
         * Encodes the specified Msg_ReceiveGuildTaskChestRewardsReq message. Does not implicitly {@link proto.Msg_ReceiveGuildTaskChestRewardsReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_ReceiveGuildTaskChestRewardsReq
         * @static
         * @param {proto.IMsg_ReceiveGuildTaskChestRewardsReq} m Msg_ReceiveGuildTaskChestRewardsReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_ReceiveGuildTaskChestRewardsReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.indexes != null && m.indexes.length) {
                w.uint32(10).fork();
                for (var i = 0; i < m.indexes.length; ++i)
                    w.int32(m.indexes[i]);
                w.ldelim();
            }
            return w;
        };

        /**
         * Decodes a Msg_ReceiveGuildTaskChestRewardsReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_ReceiveGuildTaskChestRewardsReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_ReceiveGuildTaskChestRewardsReq} Msg_ReceiveGuildTaskChestRewardsReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_ReceiveGuildTaskChestRewardsReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_ReceiveGuildTaskChestRewardsReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.indexes && m.indexes.length))
                        m.indexes = [];
                    if ((t & 7) === 2) {
                        var c2 = r.uint32() + r.pos;
                        while (r.pos < c2)
                            m.indexes.push(r.int32());
                    } else
                        m.indexes.push(r.int32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_ReceiveGuildTaskChestRewardsReq;
    })();

    proto.Msg_ReceiveGuildTaskChestRewardsRsp = (function() {

        /**
         * Properties of a Msg_ReceiveGuildTaskChestRewardsRsp.
         * @memberof proto
         * @interface IMsg_ReceiveGuildTaskChestRewardsRsp
         * @property {proto.ICommonError|null} [error] Msg_ReceiveGuildTaskChestRewardsRsp error
         * @property {Array.<number>|null} [indexes] Msg_ReceiveGuildTaskChestRewardsRsp indexes
         * @property {Array.<proto.IItem>|null} [rewards] Msg_ReceiveGuildTaskChestRewardsRsp rewards
         */

        /**
         * Constructs a new Msg_ReceiveGuildTaskChestRewardsRsp.
         * @memberof proto
         * @classdesc Represents a Msg_ReceiveGuildTaskChestRewardsRsp.
         * @implements IMsg_ReceiveGuildTaskChestRewardsRsp
         * @constructor
         * @param {proto.IMsg_ReceiveGuildTaskChestRewardsRsp=} [p] Properties to set
         */
        function Msg_ReceiveGuildTaskChestRewardsRsp(p) {
            this.indexes = [];
            this.rewards = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_ReceiveGuildTaskChestRewardsRsp error.
         * @member {proto.ICommonError|null|undefined} error
         * @memberof proto.Msg_ReceiveGuildTaskChestRewardsRsp
         * @instance
         */
        Msg_ReceiveGuildTaskChestRewardsRsp.prototype.error = null;

        /**
         * Msg_ReceiveGuildTaskChestRewardsRsp indexes.
         * @member {Array.<number>} indexes
         * @memberof proto.Msg_ReceiveGuildTaskChestRewardsRsp
         * @instance
         */
        Msg_ReceiveGuildTaskChestRewardsRsp.prototype.indexes = $util.emptyArray;

        /**
         * Msg_ReceiveGuildTaskChestRewardsRsp rewards.
         * @member {Array.<proto.IItem>} rewards
         * @memberof proto.Msg_ReceiveGuildTaskChestRewardsRsp
         * @instance
         */
        Msg_ReceiveGuildTaskChestRewardsRsp.prototype.rewards = $util.emptyArray;

        /**
         * Encodes the specified Msg_ReceiveGuildTaskChestRewardsRsp message. Does not implicitly {@link proto.Msg_ReceiveGuildTaskChestRewardsRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_ReceiveGuildTaskChestRewardsRsp
         * @static
         * @param {proto.IMsg_ReceiveGuildTaskChestRewardsRsp} m Msg_ReceiveGuildTaskChestRewardsRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_ReceiveGuildTaskChestRewardsRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.error != null && Object.hasOwnProperty.call(m, "error"))
                $root.proto.CommonError.encode(m.error, w.uint32(10).fork()).ldelim();
            if (m.indexes != null && m.indexes.length) {
                w.uint32(18).fork();
                for (var i = 0; i < m.indexes.length; ++i)
                    w.int32(m.indexes[i]);
                w.ldelim();
            }
            if (m.rewards != null && m.rewards.length) {
                for (var i = 0; i < m.rewards.length; ++i)
                    $root.proto.Item.encode(m.rewards[i], w.uint32(26).fork()).ldelim();
            }
            return w;
        };

        /**
         * Decodes a Msg_ReceiveGuildTaskChestRewardsRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_ReceiveGuildTaskChestRewardsRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_ReceiveGuildTaskChestRewardsRsp} Msg_ReceiveGuildTaskChestRewardsRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_ReceiveGuildTaskChestRewardsRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_ReceiveGuildTaskChestRewardsRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.error = $root.proto.CommonError.decode(r, r.uint32());
                    break;
                case 2:
                    if (!(m.indexes && m.indexes.length))
                        m.indexes = [];
                    if ((t & 7) === 2) {
                        var c2 = r.uint32() + r.pos;
                        while (r.pos < c2)
                            m.indexes.push(r.int32());
                    } else
                        m.indexes.push(r.int32());
                    break;
                case 3:
                    if (!(m.rewards && m.rewards.length))
                        m.rewards = [];
                    m.rewards.push($root.proto.Item.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_ReceiveGuildTaskChestRewardsRsp;
    })();

    proto.JoinGuildRequest = (function() {

        /**
         * Properties of a JoinGuildRequest.
         * @memberof proto
         * @interface IJoinGuildRequest
         * @property {string|null} [id] JoinGuildRequest id
         * @property {string|null} [roleId] JoinGuildRequest roleId
         * @property {string|null} [guildId] JoinGuildRequest guildId
         * @property {number|Long|null} [createTime] JoinGuildRequest createTime
         * @property {string|null} [name] JoinGuildRequest name
         * @property {number|null} [powerScore] JoinGuildRequest powerScore
         * @property {number|null} [headIcon] JoinGuildRequest headIcon
         * @property {number|null} [headFrame] JoinGuildRequest headFrame
         * @property {number|Long|null} [lastLoginTime] JoinGuildRequest lastLoginTime
         * @property {number|Long|null} [lastLogoutTime] JoinGuildRequest lastLogoutTime
         * @property {number|null} [highestHeroItemId] JoinGuildRequest highestHeroItemId
         * @property {number|null} [level] JoinGuildRequest level
         */

        /**
         * Constructs a new JoinGuildRequest.
         * @memberof proto
         * @classdesc Represents a JoinGuildRequest.
         * @implements IJoinGuildRequest
         * @constructor
         * @param {proto.IJoinGuildRequest=} [p] Properties to set
         */
        function JoinGuildRequest(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * JoinGuildRequest id.
         * @member {string} id
         * @memberof proto.JoinGuildRequest
         * @instance
         */
        JoinGuildRequest.prototype.id = "";

        /**
         * JoinGuildRequest roleId.
         * @member {string} roleId
         * @memberof proto.JoinGuildRequest
         * @instance
         */
        JoinGuildRequest.prototype.roleId = "";

        /**
         * JoinGuildRequest guildId.
         * @member {string} guildId
         * @memberof proto.JoinGuildRequest
         * @instance
         */
        JoinGuildRequest.prototype.guildId = "";

        /**
         * JoinGuildRequest createTime.
         * @member {number|Long} createTime
         * @memberof proto.JoinGuildRequest
         * @instance
         */
        JoinGuildRequest.prototype.createTime = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

        /**
         * JoinGuildRequest name.
         * @member {string} name
         * @memberof proto.JoinGuildRequest
         * @instance
         */
        JoinGuildRequest.prototype.name = "";

        /**
         * JoinGuildRequest powerScore.
         * @member {number} powerScore
         * @memberof proto.JoinGuildRequest
         * @instance
         */
        JoinGuildRequest.prototype.powerScore = 0;

        /**
         * JoinGuildRequest headIcon.
         * @member {number} headIcon
         * @memberof proto.JoinGuildRequest
         * @instance
         */
        JoinGuildRequest.prototype.headIcon = 0;

        /**
         * JoinGuildRequest headFrame.
         * @member {number} headFrame
         * @memberof proto.JoinGuildRequest
         * @instance
         */
        JoinGuildRequest.prototype.headFrame = 0;

        /**
         * JoinGuildRequest lastLoginTime.
         * @member {number|Long} lastLoginTime
         * @memberof proto.JoinGuildRequest
         * @instance
         */
        JoinGuildRequest.prototype.lastLoginTime = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

        /**
         * JoinGuildRequest lastLogoutTime.
         * @member {number|Long} lastLogoutTime
         * @memberof proto.JoinGuildRequest
         * @instance
         */
        JoinGuildRequest.prototype.lastLogoutTime = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

        /**
         * JoinGuildRequest highestHeroItemId.
         * @member {number} highestHeroItemId
         * @memberof proto.JoinGuildRequest
         * @instance
         */
        JoinGuildRequest.prototype.highestHeroItemId = 0;

        /**
         * JoinGuildRequest level.
         * @member {number} level
         * @memberof proto.JoinGuildRequest
         * @instance
         */
        JoinGuildRequest.prototype.level = 0;

        /**
         * Encodes the specified JoinGuildRequest message. Does not implicitly {@link proto.JoinGuildRequest.verify|verify} messages.
         * @function encode
         * @memberof proto.JoinGuildRequest
         * @static
         * @param {proto.IJoinGuildRequest} m JoinGuildRequest message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        JoinGuildRequest.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.id != null && Object.hasOwnProperty.call(m, "id"))
                w.uint32(10).string(m.id);
            if (m.roleId != null && Object.hasOwnProperty.call(m, "roleId"))
                w.uint32(18).string(m.roleId);
            if (m.guildId != null && Object.hasOwnProperty.call(m, "guildId"))
                w.uint32(26).string(m.guildId);
            if (m.createTime != null && Object.hasOwnProperty.call(m, "createTime"))
                w.uint32(32).int64(m.createTime);
            if (m.name != null && Object.hasOwnProperty.call(m, "name"))
                w.uint32(42).string(m.name);
            if (m.powerScore != null && Object.hasOwnProperty.call(m, "powerScore"))
                w.uint32(48).int32(m.powerScore);
            if (m.headIcon != null && Object.hasOwnProperty.call(m, "headIcon"))
                w.uint32(56).int32(m.headIcon);
            if (m.headFrame != null && Object.hasOwnProperty.call(m, "headFrame"))
                w.uint32(64).int32(m.headFrame);
            if (m.lastLoginTime != null && Object.hasOwnProperty.call(m, "lastLoginTime"))
                w.uint32(72).int64(m.lastLoginTime);
            if (m.lastLogoutTime != null && Object.hasOwnProperty.call(m, "lastLogoutTime"))
                w.uint32(80).int64(m.lastLogoutTime);
            if (m.highestHeroItemId != null && Object.hasOwnProperty.call(m, "highestHeroItemId"))
                w.uint32(88).int32(m.highestHeroItemId);
            if (m.level != null && Object.hasOwnProperty.call(m, "level"))
                w.uint32(96).int32(m.level);
            return w;
        };

        /**
         * Decodes a JoinGuildRequest message from the specified reader or buffer.
         * @function decode
         * @memberof proto.JoinGuildRequest
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.JoinGuildRequest} JoinGuildRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        JoinGuildRequest.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.JoinGuildRequest();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.id = r.string();
                    break;
                case 2:
                    m.roleId = r.string();
                    break;
                case 3:
                    m.guildId = r.string();
                    break;
                case 4:
                    m.createTime = r.int64();
                    break;
                case 5:
                    m.name = r.string();
                    break;
                case 6:
                    m.powerScore = r.int32();
                    break;
                case 7:
                    m.headIcon = r.int32();
                    break;
                case 8:
                    m.headFrame = r.int32();
                    break;
                case 9:
                    m.lastLoginTime = r.int64();
                    break;
                case 10:
                    m.lastLogoutTime = r.int64();
                    break;
                case 11:
                    m.highestHeroItemId = r.int32();
                    break;
                case 12:
                    m.level = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return JoinGuildRequest;
    })();

    proto.Msg_GetJoinGuildRequestsReq = (function() {

        /**
         * Properties of a Msg_GetJoinGuildRequestsReq.
         * @memberof proto
         * @interface IMsg_GetJoinGuildRequestsReq
         * @property {number|null} [condition] Msg_GetJoinGuildRequestsReq condition
         */

        /**
         * Constructs a new Msg_GetJoinGuildRequestsReq.
         * @memberof proto
         * @classdesc Represents a Msg_GetJoinGuildRequestsReq.
         * @implements IMsg_GetJoinGuildRequestsReq
         * @constructor
         * @param {proto.IMsg_GetJoinGuildRequestsReq=} [p] Properties to set
         */
        function Msg_GetJoinGuildRequestsReq(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_GetJoinGuildRequestsReq condition.
         * @member {number} condition
         * @memberof proto.Msg_GetJoinGuildRequestsReq
         * @instance
         */
        Msg_GetJoinGuildRequestsReq.prototype.condition = 0;

        /**
         * Encodes the specified Msg_GetJoinGuildRequestsReq message. Does not implicitly {@link proto.Msg_GetJoinGuildRequestsReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_GetJoinGuildRequestsReq
         * @static
         * @param {proto.IMsg_GetJoinGuildRequestsReq} m Msg_GetJoinGuildRequestsReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_GetJoinGuildRequestsReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.condition != null && Object.hasOwnProperty.call(m, "condition"))
                w.uint32(8).int32(m.condition);
            return w;
        };

        /**
         * Decodes a Msg_GetJoinGuildRequestsReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_GetJoinGuildRequestsReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_GetJoinGuildRequestsReq} Msg_GetJoinGuildRequestsReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_GetJoinGuildRequestsReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_GetJoinGuildRequestsReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.condition = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_GetJoinGuildRequestsReq;
    })();

    proto.Msg_GetJoinGuildRequestsRsp = (function() {

        /**
         * Properties of a Msg_GetJoinGuildRequestsRsp.
         * @memberof proto
         * @interface IMsg_GetJoinGuildRequestsRsp
         * @property {proto.ICommonError|null} [error] Msg_GetJoinGuildRequestsRsp error
         * @property {number|null} [condition] Msg_GetJoinGuildRequestsRsp condition
         * @property {Array.<proto.IJoinGuildRequest>|null} [requests] Msg_GetJoinGuildRequestsRsp requests
         */

        /**
         * Constructs a new Msg_GetJoinGuildRequestsRsp.
         * @memberof proto
         * @classdesc Represents a Msg_GetJoinGuildRequestsRsp.
         * @implements IMsg_GetJoinGuildRequestsRsp
         * @constructor
         * @param {proto.IMsg_GetJoinGuildRequestsRsp=} [p] Properties to set
         */
        function Msg_GetJoinGuildRequestsRsp(p) {
            this.requests = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_GetJoinGuildRequestsRsp error.
         * @member {proto.ICommonError|null|undefined} error
         * @memberof proto.Msg_GetJoinGuildRequestsRsp
         * @instance
         */
        Msg_GetJoinGuildRequestsRsp.prototype.error = null;

        /**
         * Msg_GetJoinGuildRequestsRsp condition.
         * @member {number} condition
         * @memberof proto.Msg_GetJoinGuildRequestsRsp
         * @instance
         */
        Msg_GetJoinGuildRequestsRsp.prototype.condition = 0;

        /**
         * Msg_GetJoinGuildRequestsRsp requests.
         * @member {Array.<proto.IJoinGuildRequest>} requests
         * @memberof proto.Msg_GetJoinGuildRequestsRsp
         * @instance
         */
        Msg_GetJoinGuildRequestsRsp.prototype.requests = $util.emptyArray;

        /**
         * Encodes the specified Msg_GetJoinGuildRequestsRsp message. Does not implicitly {@link proto.Msg_GetJoinGuildRequestsRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_GetJoinGuildRequestsRsp
         * @static
         * @param {proto.IMsg_GetJoinGuildRequestsRsp} m Msg_GetJoinGuildRequestsRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_GetJoinGuildRequestsRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.error != null && Object.hasOwnProperty.call(m, "error"))
                $root.proto.CommonError.encode(m.error, w.uint32(10).fork()).ldelim();
            if (m.condition != null && Object.hasOwnProperty.call(m, "condition"))
                w.uint32(16).int32(m.condition);
            if (m.requests != null && m.requests.length) {
                for (var i = 0; i < m.requests.length; ++i)
                    $root.proto.JoinGuildRequest.encode(m.requests[i], w.uint32(26).fork()).ldelim();
            }
            return w;
        };

        /**
         * Decodes a Msg_GetJoinGuildRequestsRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_GetJoinGuildRequestsRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_GetJoinGuildRequestsRsp} Msg_GetJoinGuildRequestsRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_GetJoinGuildRequestsRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_GetJoinGuildRequestsRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.error = $root.proto.CommonError.decode(r, r.uint32());
                    break;
                case 2:
                    m.condition = r.int32();
                    break;
                case 3:
                    if (!(m.requests && m.requests.length))
                        m.requests = [];
                    m.requests.push($root.proto.JoinGuildRequest.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_GetJoinGuildRequestsRsp;
    })();

    proto.Msg_ImpeachGuildLeaderReq = (function() {

        /**
         * Properties of a Msg_ImpeachGuildLeaderReq.
         * @memberof proto
         * @interface IMsg_ImpeachGuildLeaderReq
         */

        /**
         * Constructs a new Msg_ImpeachGuildLeaderReq.
         * @memberof proto
         * @classdesc Represents a Msg_ImpeachGuildLeaderReq.
         * @implements IMsg_ImpeachGuildLeaderReq
         * @constructor
         * @param {proto.IMsg_ImpeachGuildLeaderReq=} [p] Properties to set
         */
        function Msg_ImpeachGuildLeaderReq(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Encodes the specified Msg_ImpeachGuildLeaderReq message. Does not implicitly {@link proto.Msg_ImpeachGuildLeaderReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_ImpeachGuildLeaderReq
         * @static
         * @param {proto.IMsg_ImpeachGuildLeaderReq} m Msg_ImpeachGuildLeaderReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_ImpeachGuildLeaderReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };

        /**
         * Decodes a Msg_ImpeachGuildLeaderReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_ImpeachGuildLeaderReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_ImpeachGuildLeaderReq} Msg_ImpeachGuildLeaderReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_ImpeachGuildLeaderReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_ImpeachGuildLeaderReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_ImpeachGuildLeaderReq;
    })();

    proto.Msg_ImpeachGuildLeaderRsp = (function() {

        /**
         * Properties of a Msg_ImpeachGuildLeaderRsp.
         * @memberof proto
         * @interface IMsg_ImpeachGuildLeaderRsp
         * @property {proto.ICommonError|null} [error] Msg_ImpeachGuildLeaderRsp error
         */

        /**
         * Constructs a new Msg_ImpeachGuildLeaderRsp.
         * @memberof proto
         * @classdesc Represents a Msg_ImpeachGuildLeaderRsp.
         * @implements IMsg_ImpeachGuildLeaderRsp
         * @constructor
         * @param {proto.IMsg_ImpeachGuildLeaderRsp=} [p] Properties to set
         */
        function Msg_ImpeachGuildLeaderRsp(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_ImpeachGuildLeaderRsp error.
         * @member {proto.ICommonError|null|undefined} error
         * @memberof proto.Msg_ImpeachGuildLeaderRsp
         * @instance
         */
        Msg_ImpeachGuildLeaderRsp.prototype.error = null;

        /**
         * Encodes the specified Msg_ImpeachGuildLeaderRsp message. Does not implicitly {@link proto.Msg_ImpeachGuildLeaderRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_ImpeachGuildLeaderRsp
         * @static
         * @param {proto.IMsg_ImpeachGuildLeaderRsp} m Msg_ImpeachGuildLeaderRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_ImpeachGuildLeaderRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.error != null && Object.hasOwnProperty.call(m, "error"))
                $root.proto.CommonError.encode(m.error, w.uint32(10).fork()).ldelim();
            return w;
        };

        /**
         * Decodes a Msg_ImpeachGuildLeaderRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_ImpeachGuildLeaderRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_ImpeachGuildLeaderRsp} Msg_ImpeachGuildLeaderRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_ImpeachGuildLeaderRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_ImpeachGuildLeaderRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.error = $root.proto.CommonError.decode(r, r.uint32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_ImpeachGuildLeaderRsp;
    })();

    proto.Msg_SetGuildNeedCheckReq = (function() {

        /**
         * Properties of a Msg_SetGuildNeedCheckReq.
         * @memberof proto
         * @interface IMsg_SetGuildNeedCheckReq
         * @property {boolean|null} [needCheck] Msg_SetGuildNeedCheckReq needCheck
         */

        /**
         * Constructs a new Msg_SetGuildNeedCheckReq.
         * @memberof proto
         * @classdesc Represents a Msg_SetGuildNeedCheckReq.
         * @implements IMsg_SetGuildNeedCheckReq
         * @constructor
         * @param {proto.IMsg_SetGuildNeedCheckReq=} [p] Properties to set
         */
        function Msg_SetGuildNeedCheckReq(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_SetGuildNeedCheckReq needCheck.
         * @member {boolean} needCheck
         * @memberof proto.Msg_SetGuildNeedCheckReq
         * @instance
         */
        Msg_SetGuildNeedCheckReq.prototype.needCheck = false;

        /**
         * Encodes the specified Msg_SetGuildNeedCheckReq message. Does not implicitly {@link proto.Msg_SetGuildNeedCheckReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_SetGuildNeedCheckReq
         * @static
         * @param {proto.IMsg_SetGuildNeedCheckReq} m Msg_SetGuildNeedCheckReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_SetGuildNeedCheckReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.needCheck != null && Object.hasOwnProperty.call(m, "needCheck"))
                w.uint32(8).bool(m.needCheck);
            return w;
        };

        /**
         * Decodes a Msg_SetGuildNeedCheckReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_SetGuildNeedCheckReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_SetGuildNeedCheckReq} Msg_SetGuildNeedCheckReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_SetGuildNeedCheckReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_SetGuildNeedCheckReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.needCheck = r.bool();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_SetGuildNeedCheckReq;
    })();

    proto.Msg_SetGuildNeedCheckRsp = (function() {

        /**
         * Properties of a Msg_SetGuildNeedCheckRsp.
         * @memberof proto
         * @interface IMsg_SetGuildNeedCheckRsp
         * @property {proto.ICommonError|null} [error] Msg_SetGuildNeedCheckRsp error
         * @property {boolean|null} [needCheck] Msg_SetGuildNeedCheckRsp needCheck
         */

        /**
         * Constructs a new Msg_SetGuildNeedCheckRsp.
         * @memberof proto
         * @classdesc Represents a Msg_SetGuildNeedCheckRsp.
         * @implements IMsg_SetGuildNeedCheckRsp
         * @constructor
         * @param {proto.IMsg_SetGuildNeedCheckRsp=} [p] Properties to set
         */
        function Msg_SetGuildNeedCheckRsp(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_SetGuildNeedCheckRsp error.
         * @member {proto.ICommonError|null|undefined} error
         * @memberof proto.Msg_SetGuildNeedCheckRsp
         * @instance
         */
        Msg_SetGuildNeedCheckRsp.prototype.error = null;

        /**
         * Msg_SetGuildNeedCheckRsp needCheck.
         * @member {boolean} needCheck
         * @memberof proto.Msg_SetGuildNeedCheckRsp
         * @instance
         */
        Msg_SetGuildNeedCheckRsp.prototype.needCheck = false;

        /**
         * Encodes the specified Msg_SetGuildNeedCheckRsp message. Does not implicitly {@link proto.Msg_SetGuildNeedCheckRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_SetGuildNeedCheckRsp
         * @static
         * @param {proto.IMsg_SetGuildNeedCheckRsp} m Msg_SetGuildNeedCheckRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_SetGuildNeedCheckRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.error != null && Object.hasOwnProperty.call(m, "error"))
                $root.proto.CommonError.encode(m.error, w.uint32(10).fork()).ldelim();
            if (m.needCheck != null && Object.hasOwnProperty.call(m, "needCheck"))
                w.uint32(16).bool(m.needCheck);
            return w;
        };

        /**
         * Decodes a Msg_SetGuildNeedCheckRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_SetGuildNeedCheckRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_SetGuildNeedCheckRsp} Msg_SetGuildNeedCheckRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_SetGuildNeedCheckRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_SetGuildNeedCheckRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.error = $root.proto.CommonError.decode(r, r.uint32());
                    break;
                case 2:
                    m.needCheck = r.bool();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_SetGuildNeedCheckRsp;
    })();

    proto.Msg_GuildChatChannelPush = (function() {

        /**
         * Properties of a Msg_GuildChatChannelPush.
         * @memberof proto
         * @interface IMsg_GuildChatChannelPush
         * @property {proto.IChatChannel|null} [channel] Msg_GuildChatChannelPush channel
         */

        /**
         * Constructs a new Msg_GuildChatChannelPush.
         * @memberof proto
         * @classdesc Represents a Msg_GuildChatChannelPush.
         * @implements IMsg_GuildChatChannelPush
         * @constructor
         * @param {proto.IMsg_GuildChatChannelPush=} [p] Properties to set
         */
        function Msg_GuildChatChannelPush(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_GuildChatChannelPush channel.
         * @member {proto.IChatChannel|null|undefined} channel
         * @memberof proto.Msg_GuildChatChannelPush
         * @instance
         */
        Msg_GuildChatChannelPush.prototype.channel = null;

        /**
         * Encodes the specified Msg_GuildChatChannelPush message. Does not implicitly {@link proto.Msg_GuildChatChannelPush.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_GuildChatChannelPush
         * @static
         * @param {proto.IMsg_GuildChatChannelPush} m Msg_GuildChatChannelPush message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_GuildChatChannelPush.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.channel != null && Object.hasOwnProperty.call(m, "channel"))
                $root.proto.ChatChannel.encode(m.channel, w.uint32(10).fork()).ldelim();
            return w;
        };

        /**
         * Decodes a Msg_GuildChatChannelPush message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_GuildChatChannelPush
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_GuildChatChannelPush} Msg_GuildChatChannelPush
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_GuildChatChannelPush.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_GuildChatChannelPush();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.channel = $root.proto.ChatChannel.decode(r, r.uint32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_GuildChatChannelPush;
    })();

    proto.Msg_GetGuildRankReq = (function() {

        /**
         * Properties of a Msg_GetGuildRankReq.
         * @memberof proto
         * @interface IMsg_GetGuildRankReq
         * @property {number|null} [rankId] Msg_GetGuildRankReq rankId
         */

        /**
         * Constructs a new Msg_GetGuildRankReq.
         * @memberof proto
         * @classdesc Represents a Msg_GetGuildRankReq.
         * @implements IMsg_GetGuildRankReq
         * @constructor
         * @param {proto.IMsg_GetGuildRankReq=} [p] Properties to set
         */
        function Msg_GetGuildRankReq(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_GetGuildRankReq rankId.
         * @member {number} rankId
         * @memberof proto.Msg_GetGuildRankReq
         * @instance
         */
        Msg_GetGuildRankReq.prototype.rankId = 0;

        /**
         * Encodes the specified Msg_GetGuildRankReq message. Does not implicitly {@link proto.Msg_GetGuildRankReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_GetGuildRankReq
         * @static
         * @param {proto.IMsg_GetGuildRankReq} m Msg_GetGuildRankReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_GetGuildRankReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.rankId != null && Object.hasOwnProperty.call(m, "rankId"))
                w.uint32(8).int32(m.rankId);
            return w;
        };

        /**
         * Decodes a Msg_GetGuildRankReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_GetGuildRankReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_GetGuildRankReq} Msg_GetGuildRankReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_GetGuildRankReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_GetGuildRankReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.rankId = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_GetGuildRankReq;
    })();

    proto.Msg_GetGuildRankRsp = (function() {

        /**
         * Properties of a Msg_GetGuildRankRsp.
         * @memberof proto
         * @interface IMsg_GetGuildRankRsp
         * @property {proto.ICommonError|null} [error] Msg_GetGuildRankRsp error
         * @property {number|null} [rankId] Msg_GetGuildRankRsp rankId
         * @property {number|null} [ranking] Msg_GetGuildRankRsp ranking
         * @property {Array.<proto.ISimpleGuild>|null} [rankList] Msg_GetGuildRankRsp rankList
         */

        /**
         * Constructs a new Msg_GetGuildRankRsp.
         * @memberof proto
         * @classdesc Represents a Msg_GetGuildRankRsp.
         * @implements IMsg_GetGuildRankRsp
         * @constructor
         * @param {proto.IMsg_GetGuildRankRsp=} [p] Properties to set
         */
        function Msg_GetGuildRankRsp(p) {
            this.rankList = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_GetGuildRankRsp error.
         * @member {proto.ICommonError|null|undefined} error
         * @memberof proto.Msg_GetGuildRankRsp
         * @instance
         */
        Msg_GetGuildRankRsp.prototype.error = null;

        /**
         * Msg_GetGuildRankRsp rankId.
         * @member {number} rankId
         * @memberof proto.Msg_GetGuildRankRsp
         * @instance
         */
        Msg_GetGuildRankRsp.prototype.rankId = 0;

        /**
         * Msg_GetGuildRankRsp ranking.
         * @member {number} ranking
         * @memberof proto.Msg_GetGuildRankRsp
         * @instance
         */
        Msg_GetGuildRankRsp.prototype.ranking = 0;

        /**
         * Msg_GetGuildRankRsp rankList.
         * @member {Array.<proto.ISimpleGuild>} rankList
         * @memberof proto.Msg_GetGuildRankRsp
         * @instance
         */
        Msg_GetGuildRankRsp.prototype.rankList = $util.emptyArray;

        /**
         * Encodes the specified Msg_GetGuildRankRsp message. Does not implicitly {@link proto.Msg_GetGuildRankRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_GetGuildRankRsp
         * @static
         * @param {proto.IMsg_GetGuildRankRsp} m Msg_GetGuildRankRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_GetGuildRankRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.error != null && Object.hasOwnProperty.call(m, "error"))
                $root.proto.CommonError.encode(m.error, w.uint32(10).fork()).ldelim();
            if (m.rankId != null && Object.hasOwnProperty.call(m, "rankId"))
                w.uint32(16).int32(m.rankId);
            if (m.ranking != null && Object.hasOwnProperty.call(m, "ranking"))
                w.uint32(24).int32(m.ranking);
            if (m.rankList != null && m.rankList.length) {
                for (var i = 0; i < m.rankList.length; ++i)
                    $root.proto.SimpleGuild.encode(m.rankList[i], w.uint32(34).fork()).ldelim();
            }
            return w;
        };

        /**
         * Decodes a Msg_GetGuildRankRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_GetGuildRankRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_GetGuildRankRsp} Msg_GetGuildRankRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_GetGuildRankRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_GetGuildRankRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.error = $root.proto.CommonError.decode(r, r.uint32());
                    break;
                case 2:
                    m.rankId = r.int32();
                    break;
                case 3:
                    m.ranking = r.int32();
                    break;
                case 4:
                    if (!(m.rankList && m.rankList.length))
                        m.rankList = [];
                    m.rankList.push($root.proto.SimpleGuild.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_GetGuildRankRsp;
    })();

    proto.Msg_GetGuildRankInfoReq = (function() {

        /**
         * Properties of a Msg_GetGuildRankInfoReq.
         * @memberof proto
         * @interface IMsg_GetGuildRankInfoReq
         * @property {number|null} [rankId] Msg_GetGuildRankInfoReq rankId
         * @property {string|null} [guildId] Msg_GetGuildRankInfoReq guildId
         */

        /**
         * Constructs a new Msg_GetGuildRankInfoReq.
         * @memberof proto
         * @classdesc Represents a Msg_GetGuildRankInfoReq.
         * @implements IMsg_GetGuildRankInfoReq
         * @constructor
         * @param {proto.IMsg_GetGuildRankInfoReq=} [p] Properties to set
         */
        function Msg_GetGuildRankInfoReq(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_GetGuildRankInfoReq rankId.
         * @member {number} rankId
         * @memberof proto.Msg_GetGuildRankInfoReq
         * @instance
         */
        Msg_GetGuildRankInfoReq.prototype.rankId = 0;

        /**
         * Msg_GetGuildRankInfoReq guildId.
         * @member {string} guildId
         * @memberof proto.Msg_GetGuildRankInfoReq
         * @instance
         */
        Msg_GetGuildRankInfoReq.prototype.guildId = "";

        /**
         * Encodes the specified Msg_GetGuildRankInfoReq message. Does not implicitly {@link proto.Msg_GetGuildRankInfoReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_GetGuildRankInfoReq
         * @static
         * @param {proto.IMsg_GetGuildRankInfoReq} m Msg_GetGuildRankInfoReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_GetGuildRankInfoReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.rankId != null && Object.hasOwnProperty.call(m, "rankId"))
                w.uint32(8).int32(m.rankId);
            if (m.guildId != null && Object.hasOwnProperty.call(m, "guildId"))
                w.uint32(18).string(m.guildId);
            return w;
        };

        /**
         * Decodes a Msg_GetGuildRankInfoReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_GetGuildRankInfoReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_GetGuildRankInfoReq} Msg_GetGuildRankInfoReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_GetGuildRankInfoReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_GetGuildRankInfoReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.rankId = r.int32();
                    break;
                case 2:
                    m.guildId = r.string();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_GetGuildRankInfoReq;
    })();

    proto.Msg_GetGuildRankInfoRsp = (function() {

        /**
         * Properties of a Msg_GetGuildRankInfoRsp.
         * @memberof proto
         * @interface IMsg_GetGuildRankInfoRsp
         * @property {proto.ICommonError|null} [error] Msg_GetGuildRankInfoRsp error
         * @property {proto.IGuildInfo|null} [guild] Msg_GetGuildRankInfoRsp guild
         */

        /**
         * Constructs a new Msg_GetGuildRankInfoRsp.
         * @memberof proto
         * @classdesc Represents a Msg_GetGuildRankInfoRsp.
         * @implements IMsg_GetGuildRankInfoRsp
         * @constructor
         * @param {proto.IMsg_GetGuildRankInfoRsp=} [p] Properties to set
         */
        function Msg_GetGuildRankInfoRsp(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_GetGuildRankInfoRsp error.
         * @member {proto.ICommonError|null|undefined} error
         * @memberof proto.Msg_GetGuildRankInfoRsp
         * @instance
         */
        Msg_GetGuildRankInfoRsp.prototype.error = null;

        /**
         * Msg_GetGuildRankInfoRsp guild.
         * @member {proto.IGuildInfo|null|undefined} guild
         * @memberof proto.Msg_GetGuildRankInfoRsp
         * @instance
         */
        Msg_GetGuildRankInfoRsp.prototype.guild = null;

        /**
         * Encodes the specified Msg_GetGuildRankInfoRsp message. Does not implicitly {@link proto.Msg_GetGuildRankInfoRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_GetGuildRankInfoRsp
         * @static
         * @param {proto.IMsg_GetGuildRankInfoRsp} m Msg_GetGuildRankInfoRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_GetGuildRankInfoRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.error != null && Object.hasOwnProperty.call(m, "error"))
                $root.proto.CommonError.encode(m.error, w.uint32(10).fork()).ldelim();
            if (m.guild != null && Object.hasOwnProperty.call(m, "guild"))
                $root.proto.GuildInfo.encode(m.guild, w.uint32(18).fork()).ldelim();
            return w;
        };

        /**
         * Decodes a Msg_GetGuildRankInfoRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_GetGuildRankInfoRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_GetGuildRankInfoRsp} Msg_GetGuildRankInfoRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_GetGuildRankInfoRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_GetGuildRankInfoRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.error = $root.proto.CommonError.decode(r, r.uint32());
                    break;
                case 2:
                    m.guild = $root.proto.GuildInfo.decode(r, r.uint32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_GetGuildRankInfoRsp;
    })();

    proto.Msg_GuildBossDataPush = (function() {

        /**
         * Properties of a Msg_GuildBossDataPush.
         * @memberof proto
         * @interface IMsg_GuildBossDataPush
         * @property {number|null} [stageId] Msg_GuildBossDataPush stageId
         * @property {number|null} [challengeCount] Msg_GuildBossDataPush challengeCount
         * @property {number|Long|null} [maxScore] Msg_GuildBossDataPush maxScore
         */

        /**
         * Constructs a new Msg_GuildBossDataPush.
         * @memberof proto
         * @classdesc Represents a Msg_GuildBossDataPush.
         * @implements IMsg_GuildBossDataPush
         * @constructor
         * @param {proto.IMsg_GuildBossDataPush=} [p] Properties to set
         */
        function Msg_GuildBossDataPush(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_GuildBossDataPush stageId.
         * @member {number} stageId
         * @memberof proto.Msg_GuildBossDataPush
         * @instance
         */
        Msg_GuildBossDataPush.prototype.stageId = 0;

        /**
         * Msg_GuildBossDataPush challengeCount.
         * @member {number} challengeCount
         * @memberof proto.Msg_GuildBossDataPush
         * @instance
         */
        Msg_GuildBossDataPush.prototype.challengeCount = 0;

        /**
         * Msg_GuildBossDataPush maxScore.
         * @member {number|Long} maxScore
         * @memberof proto.Msg_GuildBossDataPush
         * @instance
         */
        Msg_GuildBossDataPush.prototype.maxScore = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

        /**
         * Encodes the specified Msg_GuildBossDataPush message. Does not implicitly {@link proto.Msg_GuildBossDataPush.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_GuildBossDataPush
         * @static
         * @param {proto.IMsg_GuildBossDataPush} m Msg_GuildBossDataPush message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_GuildBossDataPush.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.stageId != null && Object.hasOwnProperty.call(m, "stageId"))
                w.uint32(8).int32(m.stageId);
            if (m.challengeCount != null && Object.hasOwnProperty.call(m, "challengeCount"))
                w.uint32(16).int32(m.challengeCount);
            if (m.maxScore != null && Object.hasOwnProperty.call(m, "maxScore"))
                w.uint32(24).int64(m.maxScore);
            return w;
        };

        /**
         * Decodes a Msg_GuildBossDataPush message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_GuildBossDataPush
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_GuildBossDataPush} Msg_GuildBossDataPush
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_GuildBossDataPush.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_GuildBossDataPush();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.stageId = r.int32();
                    break;
                case 2:
                    m.challengeCount = r.int32();
                    break;
                case 3:
                    m.maxScore = r.int64();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_GuildBossDataPush;
    })();

    proto.GuildBossRank = (function() {

        /**
         * Properties of a GuildBossRank.
         * @memberof proto
         * @interface IGuildBossRank
         * @property {proto.IGuildInfo|null} [guild] GuildBossRank guild
         * @property {number|Long|null} [score] GuildBossRank score
         * @property {number|null} [members] GuildBossRank members
         */

        /**
         * Constructs a new GuildBossRank.
         * @memberof proto
         * @classdesc Represents a GuildBossRank.
         * @implements IGuildBossRank
         * @constructor
         * @param {proto.IGuildBossRank=} [p] Properties to set
         */
        function GuildBossRank(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * GuildBossRank guild.
         * @member {proto.IGuildInfo|null|undefined} guild
         * @memberof proto.GuildBossRank
         * @instance
         */
        GuildBossRank.prototype.guild = null;

        /**
         * GuildBossRank score.
         * @member {number|Long} score
         * @memberof proto.GuildBossRank
         * @instance
         */
        GuildBossRank.prototype.score = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

        /**
         * GuildBossRank members.
         * @member {number} members
         * @memberof proto.GuildBossRank
         * @instance
         */
        GuildBossRank.prototype.members = 0;

        /**
         * Encodes the specified GuildBossRank message. Does not implicitly {@link proto.GuildBossRank.verify|verify} messages.
         * @function encode
         * @memberof proto.GuildBossRank
         * @static
         * @param {proto.IGuildBossRank} m GuildBossRank message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        GuildBossRank.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.guild != null && Object.hasOwnProperty.call(m, "guild"))
                $root.proto.GuildInfo.encode(m.guild, w.uint32(10).fork()).ldelim();
            if (m.score != null && Object.hasOwnProperty.call(m, "score"))
                w.uint32(16).int64(m.score);
            if (m.members != null && Object.hasOwnProperty.call(m, "members"))
                w.uint32(24).int32(m.members);
            return w;
        };

        /**
         * Decodes a GuildBossRank message from the specified reader or buffer.
         * @function decode
         * @memberof proto.GuildBossRank
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.GuildBossRank} GuildBossRank
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        GuildBossRank.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.GuildBossRank();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.guild = $root.proto.GuildInfo.decode(r, r.uint32());
                    break;
                case 2:
                    m.score = r.int64();
                    break;
                case 3:
                    m.members = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return GuildBossRank;
    })();

    proto.Msg_GetGuildBossRankReq = (function() {

        /**
         * Properties of a Msg_GetGuildBossRankReq.
         * @memberof proto
         * @interface IMsg_GetGuildBossRankReq
         * @property {number|null} [roleRankId] Msg_GetGuildBossRankReq roleRankId
         * @property {number|null} [guildRankId] Msg_GetGuildBossRankReq guildRankId
         */

        /**
         * Constructs a new Msg_GetGuildBossRankReq.
         * @memberof proto
         * @classdesc Represents a Msg_GetGuildBossRankReq.
         * @implements IMsg_GetGuildBossRankReq
         * @constructor
         * @param {proto.IMsg_GetGuildBossRankReq=} [p] Properties to set
         */
        function Msg_GetGuildBossRankReq(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_GetGuildBossRankReq roleRankId.
         * @member {number} roleRankId
         * @memberof proto.Msg_GetGuildBossRankReq
         * @instance
         */
        Msg_GetGuildBossRankReq.prototype.roleRankId = 0;

        /**
         * Msg_GetGuildBossRankReq guildRankId.
         * @member {number} guildRankId
         * @memberof proto.Msg_GetGuildBossRankReq
         * @instance
         */
        Msg_GetGuildBossRankReq.prototype.guildRankId = 0;

        /**
         * Encodes the specified Msg_GetGuildBossRankReq message. Does not implicitly {@link proto.Msg_GetGuildBossRankReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_GetGuildBossRankReq
         * @static
         * @param {proto.IMsg_GetGuildBossRankReq} m Msg_GetGuildBossRankReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_GetGuildBossRankReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.roleRankId != null && Object.hasOwnProperty.call(m, "roleRankId"))
                w.uint32(8).int32(m.roleRankId);
            if (m.guildRankId != null && Object.hasOwnProperty.call(m, "guildRankId"))
                w.uint32(16).int32(m.guildRankId);
            return w;
        };

        /**
         * Decodes a Msg_GetGuildBossRankReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_GetGuildBossRankReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_GetGuildBossRankReq} Msg_GetGuildBossRankReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_GetGuildBossRankReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_GetGuildBossRankReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.roleRankId = r.int32();
                    break;
                case 2:
                    m.guildRankId = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_GetGuildBossRankReq;
    })();

    proto.Msg_GetGuildBossRankRsp = (function() {

        /**
         * Properties of a Msg_GetGuildBossRankRsp.
         * @memberof proto
         * @interface IMsg_GetGuildBossRankRsp
         * @property {Array.<proto.ISimpleRank>|null} [roleRank] Msg_GetGuildBossRankRsp roleRank
         * @property {Array.<proto.IGuildBossRank>|null} [guildRank] Msg_GetGuildBossRankRsp guildRank
         * @property {number|null} [roleRankSelfRanking] Msg_GetGuildBossRankRsp roleRankSelfRanking
         * @property {number|null} [guildRankSelfRanking] Msg_GetGuildBossRankRsp guildRankSelfRanking
         */

        /**
         * Constructs a new Msg_GetGuildBossRankRsp.
         * @memberof proto
         * @classdesc Represents a Msg_GetGuildBossRankRsp.
         * @implements IMsg_GetGuildBossRankRsp
         * @constructor
         * @param {proto.IMsg_GetGuildBossRankRsp=} [p] Properties to set
         */
        function Msg_GetGuildBossRankRsp(p) {
            this.roleRank = [];
            this.guildRank = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_GetGuildBossRankRsp roleRank.
         * @member {Array.<proto.ISimpleRank>} roleRank
         * @memberof proto.Msg_GetGuildBossRankRsp
         * @instance
         */
        Msg_GetGuildBossRankRsp.prototype.roleRank = $util.emptyArray;

        /**
         * Msg_GetGuildBossRankRsp guildRank.
         * @member {Array.<proto.IGuildBossRank>} guildRank
         * @memberof proto.Msg_GetGuildBossRankRsp
         * @instance
         */
        Msg_GetGuildBossRankRsp.prototype.guildRank = $util.emptyArray;

        /**
         * Msg_GetGuildBossRankRsp roleRankSelfRanking.
         * @member {number} roleRankSelfRanking
         * @memberof proto.Msg_GetGuildBossRankRsp
         * @instance
         */
        Msg_GetGuildBossRankRsp.prototype.roleRankSelfRanking = 0;

        /**
         * Msg_GetGuildBossRankRsp guildRankSelfRanking.
         * @member {number} guildRankSelfRanking
         * @memberof proto.Msg_GetGuildBossRankRsp
         * @instance
         */
        Msg_GetGuildBossRankRsp.prototype.guildRankSelfRanking = 0;

        /**
         * Encodes the specified Msg_GetGuildBossRankRsp message. Does not implicitly {@link proto.Msg_GetGuildBossRankRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_GetGuildBossRankRsp
         * @static
         * @param {proto.IMsg_GetGuildBossRankRsp} m Msg_GetGuildBossRankRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_GetGuildBossRankRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.roleRank != null && m.roleRank.length) {
                for (var i = 0; i < m.roleRank.length; ++i)
                    $root.proto.SimpleRank.encode(m.roleRank[i], w.uint32(10).fork()).ldelim();
            }
            if (m.guildRank != null && m.guildRank.length) {
                for (var i = 0; i < m.guildRank.length; ++i)
                    $root.proto.GuildBossRank.encode(m.guildRank[i], w.uint32(18).fork()).ldelim();
            }
            if (m.roleRankSelfRanking != null && Object.hasOwnProperty.call(m, "roleRankSelfRanking"))
                w.uint32(24).int32(m.roleRankSelfRanking);
            if (m.guildRankSelfRanking != null && Object.hasOwnProperty.call(m, "guildRankSelfRanking"))
                w.uint32(32).int32(m.guildRankSelfRanking);
            return w;
        };

        /**
         * Decodes a Msg_GetGuildBossRankRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_GetGuildBossRankRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_GetGuildBossRankRsp} Msg_GetGuildBossRankRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_GetGuildBossRankRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_GetGuildBossRankRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.roleRank && m.roleRank.length))
                        m.roleRank = [];
                    m.roleRank.push($root.proto.SimpleRank.decode(r, r.uint32()));
                    break;
                case 2:
                    if (!(m.guildRank && m.guildRank.length))
                        m.guildRank = [];
                    m.guildRank.push($root.proto.GuildBossRank.decode(r, r.uint32()));
                    break;
                case 3:
                    m.roleRankSelfRanking = r.int32();
                    break;
                case 4:
                    m.guildRankSelfRanking = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_GetGuildBossRankRsp;
    })();

    proto.Msg_JoinedGuildPush = (function() {

        /**
         * Properties of a Msg_JoinedGuildPush.
         * @memberof proto
         * @interface IMsg_JoinedGuildPush
         * @property {string|null} [guildId] Msg_JoinedGuildPush guildId
         */

        /**
         * Constructs a new Msg_JoinedGuildPush.
         * @memberof proto
         * @classdesc Represents a Msg_JoinedGuildPush.
         * @implements IMsg_JoinedGuildPush
         * @constructor
         * @param {proto.IMsg_JoinedGuildPush=} [p] Properties to set
         */
        function Msg_JoinedGuildPush(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_JoinedGuildPush guildId.
         * @member {string} guildId
         * @memberof proto.Msg_JoinedGuildPush
         * @instance
         */
        Msg_JoinedGuildPush.prototype.guildId = "";

        /**
         * Encodes the specified Msg_JoinedGuildPush message. Does not implicitly {@link proto.Msg_JoinedGuildPush.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_JoinedGuildPush
         * @static
         * @param {proto.IMsg_JoinedGuildPush} m Msg_JoinedGuildPush message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_JoinedGuildPush.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.guildId != null && Object.hasOwnProperty.call(m, "guildId"))
                w.uint32(10).string(m.guildId);
            return w;
        };

        /**
         * Decodes a Msg_JoinedGuildPush message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_JoinedGuildPush
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_JoinedGuildPush} Msg_JoinedGuildPush
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_JoinedGuildPush.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_JoinedGuildPush();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.guildId = r.string();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_JoinedGuildPush;
    })();

    proto.Msg_KickedOutGuildPush = (function() {

        /**
         * Properties of a Msg_KickedOutGuildPush.
         * @memberof proto
         * @interface IMsg_KickedOutGuildPush
         * @property {string|null} [guildId] Msg_KickedOutGuildPush guildId
         */

        /**
         * Constructs a new Msg_KickedOutGuildPush.
         * @memberof proto
         * @classdesc Represents a Msg_KickedOutGuildPush.
         * @implements IMsg_KickedOutGuildPush
         * @constructor
         * @param {proto.IMsg_KickedOutGuildPush=} [p] Properties to set
         */
        function Msg_KickedOutGuildPush(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_KickedOutGuildPush guildId.
         * @member {string} guildId
         * @memberof proto.Msg_KickedOutGuildPush
         * @instance
         */
        Msg_KickedOutGuildPush.prototype.guildId = "";

        /**
         * Encodes the specified Msg_KickedOutGuildPush message. Does not implicitly {@link proto.Msg_KickedOutGuildPush.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_KickedOutGuildPush
         * @static
         * @param {proto.IMsg_KickedOutGuildPush} m Msg_KickedOutGuildPush message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_KickedOutGuildPush.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.guildId != null && Object.hasOwnProperty.call(m, "guildId"))
                w.uint32(10).string(m.guildId);
            return w;
        };

        /**
         * Decodes a Msg_KickedOutGuildPush message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_KickedOutGuildPush
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_KickedOutGuildPush} Msg_KickedOutGuildPush
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_KickedOutGuildPush.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_KickedOutGuildPush();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.guildId = r.string();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_KickedOutGuildPush;
    })();

    proto.Msg_JoinGuildRequestReplyPush = (function() {

        /**
         * Properties of a Msg_JoinGuildRequestReplyPush.
         * @memberof proto
         * @interface IMsg_JoinGuildRequestReplyPush
         * @property {string|null} [guildId] Msg_JoinGuildRequestReplyPush guildId
         * @property {boolean|null} [agree] Msg_JoinGuildRequestReplyPush agree
         */

        /**
         * Constructs a new Msg_JoinGuildRequestReplyPush.
         * @memberof proto
         * @classdesc Represents a Msg_JoinGuildRequestReplyPush.
         * @implements IMsg_JoinGuildRequestReplyPush
         * @constructor
         * @param {proto.IMsg_JoinGuildRequestReplyPush=} [p] Properties to set
         */
        function Msg_JoinGuildRequestReplyPush(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_JoinGuildRequestReplyPush guildId.
         * @member {string} guildId
         * @memberof proto.Msg_JoinGuildRequestReplyPush
         * @instance
         */
        Msg_JoinGuildRequestReplyPush.prototype.guildId = "";

        /**
         * Msg_JoinGuildRequestReplyPush agree.
         * @member {boolean} agree
         * @memberof proto.Msg_JoinGuildRequestReplyPush
         * @instance
         */
        Msg_JoinGuildRequestReplyPush.prototype.agree = false;

        /**
         * Encodes the specified Msg_JoinGuildRequestReplyPush message. Does not implicitly {@link proto.Msg_JoinGuildRequestReplyPush.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_JoinGuildRequestReplyPush
         * @static
         * @param {proto.IMsg_JoinGuildRequestReplyPush} m Msg_JoinGuildRequestReplyPush message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_JoinGuildRequestReplyPush.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.guildId != null && Object.hasOwnProperty.call(m, "guildId"))
                w.uint32(10).string(m.guildId);
            if (m.agree != null && Object.hasOwnProperty.call(m, "agree"))
                w.uint32(16).bool(m.agree);
            return w;
        };

        /**
         * Decodes a Msg_JoinGuildRequestReplyPush message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_JoinGuildRequestReplyPush
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_JoinGuildRequestReplyPush} Msg_JoinGuildRequestReplyPush
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_JoinGuildRequestReplyPush.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_JoinGuildRequestReplyPush();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.guildId = r.string();
                    break;
                case 2:
                    m.agree = r.bool();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_JoinGuildRequestReplyPush;
    })();

    proto.Msg_GuileLevelUpPush = (function() {

        /**
         * Properties of a Msg_GuileLevelUpPush.
         * @memberof proto
         * @interface IMsg_GuileLevelUpPush
         * @property {number|null} [level] Msg_GuileLevelUpPush level
         * @property {number|null} [exp] Msg_GuileLevelUpPush exp
         */

        /**
         * Constructs a new Msg_GuileLevelUpPush.
         * @memberof proto
         * @classdesc Represents a Msg_GuileLevelUpPush.
         * @implements IMsg_GuileLevelUpPush
         * @constructor
         * @param {proto.IMsg_GuileLevelUpPush=} [p] Properties to set
         */
        function Msg_GuileLevelUpPush(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_GuileLevelUpPush level.
         * @member {number} level
         * @memberof proto.Msg_GuileLevelUpPush
         * @instance
         */
        Msg_GuileLevelUpPush.prototype.level = 0;

        /**
         * Msg_GuileLevelUpPush exp.
         * @member {number} exp
         * @memberof proto.Msg_GuileLevelUpPush
         * @instance
         */
        Msg_GuileLevelUpPush.prototype.exp = 0;

        /**
         * Encodes the specified Msg_GuileLevelUpPush message. Does not implicitly {@link proto.Msg_GuileLevelUpPush.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_GuileLevelUpPush
         * @static
         * @param {proto.IMsg_GuileLevelUpPush} m Msg_GuileLevelUpPush message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_GuileLevelUpPush.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.level != null && Object.hasOwnProperty.call(m, "level"))
                w.uint32(8).int32(m.level);
            if (m.exp != null && Object.hasOwnProperty.call(m, "exp"))
                w.uint32(16).int32(m.exp);
            return w;
        };

        /**
         * Decodes a Msg_GuileLevelUpPush message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_GuileLevelUpPush
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_GuileLevelUpPush} Msg_GuileLevelUpPush
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_GuileLevelUpPush.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_GuileLevelUpPush();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.level = r.int32();
                    break;
                case 2:
                    m.exp = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_GuileLevelUpPush;
    })();

    proto.Msg_GuildMemberChangedPush = (function() {

        /**
         * Properties of a Msg_GuildMemberChangedPush.
         * @memberof proto
         * @interface IMsg_GuildMemberChangedPush
         * @property {Array.<proto.IGuildMember>|null} [updatedMembers] Msg_GuildMemberChangedPush updatedMembers
         * @property {Array.<string>|null} [quitedMemberIds] Msg_GuildMemberChangedPush quitedMemberIds
         */

        /**
         * Constructs a new Msg_GuildMemberChangedPush.
         * @memberof proto
         * @classdesc Represents a Msg_GuildMemberChangedPush.
         * @implements IMsg_GuildMemberChangedPush
         * @constructor
         * @param {proto.IMsg_GuildMemberChangedPush=} [p] Properties to set
         */
        function Msg_GuildMemberChangedPush(p) {
            this.updatedMembers = [];
            this.quitedMemberIds = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_GuildMemberChangedPush updatedMembers.
         * @member {Array.<proto.IGuildMember>} updatedMembers
         * @memberof proto.Msg_GuildMemberChangedPush
         * @instance
         */
        Msg_GuildMemberChangedPush.prototype.updatedMembers = $util.emptyArray;

        /**
         * Msg_GuildMemberChangedPush quitedMemberIds.
         * @member {Array.<string>} quitedMemberIds
         * @memberof proto.Msg_GuildMemberChangedPush
         * @instance
         */
        Msg_GuildMemberChangedPush.prototype.quitedMemberIds = $util.emptyArray;

        /**
         * Encodes the specified Msg_GuildMemberChangedPush message. Does not implicitly {@link proto.Msg_GuildMemberChangedPush.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_GuildMemberChangedPush
         * @static
         * @param {proto.IMsg_GuildMemberChangedPush} m Msg_GuildMemberChangedPush message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_GuildMemberChangedPush.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.updatedMembers != null && m.updatedMembers.length) {
                for (var i = 0; i < m.updatedMembers.length; ++i)
                    $root.proto.GuildMember.encode(m.updatedMembers[i], w.uint32(10).fork()).ldelim();
            }
            if (m.quitedMemberIds != null && m.quitedMemberIds.length) {
                for (var i = 0; i < m.quitedMemberIds.length; ++i)
                    w.uint32(18).string(m.quitedMemberIds[i]);
            }
            return w;
        };

        /**
         * Decodes a Msg_GuildMemberChangedPush message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_GuildMemberChangedPush
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_GuildMemberChangedPush} Msg_GuildMemberChangedPush
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_GuildMemberChangedPush.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_GuildMemberChangedPush();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.updatedMembers && m.updatedMembers.length))
                        m.updatedMembers = [];
                    m.updatedMembers.push($root.proto.GuildMember.decode(r, r.uint32()));
                    break;
                case 2:
                    if (!(m.quitedMemberIds && m.quitedMemberIds.length))
                        m.quitedMemberIds = [];
                    m.quitedMemberIds.push(r.string());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_GuildMemberChangedPush;
    })();

    proto.Msg_QueryGuildInfoReq = (function() {

        /**
         * Properties of a Msg_QueryGuildInfoReq.
         * @memberof proto
         * @interface IMsg_QueryGuildInfoReq
         * @property {string|null} [guildId] Msg_QueryGuildInfoReq guildId
         */

        /**
         * Constructs a new Msg_QueryGuildInfoReq.
         * @memberof proto
         * @classdesc Represents a Msg_QueryGuildInfoReq.
         * @implements IMsg_QueryGuildInfoReq
         * @constructor
         * @param {proto.IMsg_QueryGuildInfoReq=} [p] Properties to set
         */
        function Msg_QueryGuildInfoReq(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_QueryGuildInfoReq guildId.
         * @member {string} guildId
         * @memberof proto.Msg_QueryGuildInfoReq
         * @instance
         */
        Msg_QueryGuildInfoReq.prototype.guildId = "";

        /**
         * Encodes the specified Msg_QueryGuildInfoReq message. Does not implicitly {@link proto.Msg_QueryGuildInfoReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_QueryGuildInfoReq
         * @static
         * @param {proto.IMsg_QueryGuildInfoReq} m Msg_QueryGuildInfoReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_QueryGuildInfoReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.guildId != null && Object.hasOwnProperty.call(m, "guildId"))
                w.uint32(10).string(m.guildId);
            return w;
        };

        /**
         * Decodes a Msg_QueryGuildInfoReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_QueryGuildInfoReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_QueryGuildInfoReq} Msg_QueryGuildInfoReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_QueryGuildInfoReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_QueryGuildInfoReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.guildId = r.string();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_QueryGuildInfoReq;
    })();

    proto.Msg_QueryGuildInfoRsp = (function() {

        /**
         * Properties of a Msg_QueryGuildInfoRsp.
         * @memberof proto
         * @interface IMsg_QueryGuildInfoRsp
         * @property {proto.IGuildInfo|null} [guild] Msg_QueryGuildInfoRsp guild
         */

        /**
         * Constructs a new Msg_QueryGuildInfoRsp.
         * @memberof proto
         * @classdesc Represents a Msg_QueryGuildInfoRsp.
         * @implements IMsg_QueryGuildInfoRsp
         * @constructor
         * @param {proto.IMsg_QueryGuildInfoRsp=} [p] Properties to set
         */
        function Msg_QueryGuildInfoRsp(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_QueryGuildInfoRsp guild.
         * @member {proto.IGuildInfo|null|undefined} guild
         * @memberof proto.Msg_QueryGuildInfoRsp
         * @instance
         */
        Msg_QueryGuildInfoRsp.prototype.guild = null;

        /**
         * Encodes the specified Msg_QueryGuildInfoRsp message. Does not implicitly {@link proto.Msg_QueryGuildInfoRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_QueryGuildInfoRsp
         * @static
         * @param {proto.IMsg_QueryGuildInfoRsp} m Msg_QueryGuildInfoRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_QueryGuildInfoRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.guild != null && Object.hasOwnProperty.call(m, "guild"))
                $root.proto.GuildInfo.encode(m.guild, w.uint32(18).fork()).ldelim();
            return w;
        };

        /**
         * Decodes a Msg_QueryGuildInfoRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_QueryGuildInfoRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_QueryGuildInfoRsp} Msg_QueryGuildInfoRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_QueryGuildInfoRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_QueryGuildInfoRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 2:
                    m.guild = $root.proto.GuildInfo.decode(r, r.uint32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_QueryGuildInfoRsp;
    })();

    proto.Msg_QuickFinGuildBossReq = (function() {

        /**
         * Properties of a Msg_QuickFinGuildBossReq.
         * @memberof proto
         * @interface IMsg_QuickFinGuildBossReq
         */

        /**
         * Constructs a new Msg_QuickFinGuildBossReq.
         * @memberof proto
         * @classdesc Represents a Msg_QuickFinGuildBossReq.
         * @implements IMsg_QuickFinGuildBossReq
         * @constructor
         * @param {proto.IMsg_QuickFinGuildBossReq=} [p] Properties to set
         */
        function Msg_QuickFinGuildBossReq(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Encodes the specified Msg_QuickFinGuildBossReq message. Does not implicitly {@link proto.Msg_QuickFinGuildBossReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_QuickFinGuildBossReq
         * @static
         * @param {proto.IMsg_QuickFinGuildBossReq} m Msg_QuickFinGuildBossReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_QuickFinGuildBossReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };

        /**
         * Decodes a Msg_QuickFinGuildBossReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_QuickFinGuildBossReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_QuickFinGuildBossReq} Msg_QuickFinGuildBossReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_QuickFinGuildBossReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_QuickFinGuildBossReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_QuickFinGuildBossReq;
    })();

    proto.Msg_QuickFinGuildBossRsp = (function() {

        /**
         * Properties of a Msg_QuickFinGuildBossRsp.
         * @memberof proto
         * @interface IMsg_QuickFinGuildBossRsp
         * @property {proto.ICommonError|null} [error] Msg_QuickFinGuildBossRsp error
         * @property {Array.<proto.IItem>|null} [rewards] Msg_QuickFinGuildBossRsp rewards
         */

        /**
         * Constructs a new Msg_QuickFinGuildBossRsp.
         * @memberof proto
         * @classdesc Represents a Msg_QuickFinGuildBossRsp.
         * @implements IMsg_QuickFinGuildBossRsp
         * @constructor
         * @param {proto.IMsg_QuickFinGuildBossRsp=} [p] Properties to set
         */
        function Msg_QuickFinGuildBossRsp(p) {
            this.rewards = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_QuickFinGuildBossRsp error.
         * @member {proto.ICommonError|null|undefined} error
         * @memberof proto.Msg_QuickFinGuildBossRsp
         * @instance
         */
        Msg_QuickFinGuildBossRsp.prototype.error = null;

        /**
         * Msg_QuickFinGuildBossRsp rewards.
         * @member {Array.<proto.IItem>} rewards
         * @memberof proto.Msg_QuickFinGuildBossRsp
         * @instance
         */
        Msg_QuickFinGuildBossRsp.prototype.rewards = $util.emptyArray;

        /**
         * Encodes the specified Msg_QuickFinGuildBossRsp message. Does not implicitly {@link proto.Msg_QuickFinGuildBossRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_QuickFinGuildBossRsp
         * @static
         * @param {proto.IMsg_QuickFinGuildBossRsp} m Msg_QuickFinGuildBossRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_QuickFinGuildBossRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.error != null && Object.hasOwnProperty.call(m, "error"))
                $root.proto.CommonError.encode(m.error, w.uint32(10).fork()).ldelim();
            if (m.rewards != null && m.rewards.length) {
                for (var i = 0; i < m.rewards.length; ++i)
                    $root.proto.Item.encode(m.rewards[i], w.uint32(18).fork()).ldelim();
            }
            return w;
        };

        /**
         * Decodes a Msg_QuickFinGuildBossRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_QuickFinGuildBossRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_QuickFinGuildBossRsp} Msg_QuickFinGuildBossRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_QuickFinGuildBossRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_QuickFinGuildBossRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.error = $root.proto.CommonError.decode(r, r.uint32());
                    break;
                case 2:
                    if (!(m.rewards && m.rewards.length))
                        m.rewards = [];
                    m.rewards.push($root.proto.Item.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_QuickFinGuildBossRsp;
    })();

    proto.Msg_GuildBossRankNotify = (function() {

        /**
         * Properties of a Msg_GuildBossRankNotify.
         * @memberof proto
         * @interface IMsg_GuildBossRankNotify
         */

        /**
         * Constructs a new Msg_GuildBossRankNotify.
         * @memberof proto
         * @classdesc Represents a Msg_GuildBossRankNotify.
         * @implements IMsg_GuildBossRankNotify
         * @constructor
         * @param {proto.IMsg_GuildBossRankNotify=} [p] Properties to set
         */
        function Msg_GuildBossRankNotify(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Encodes the specified Msg_GuildBossRankNotify message. Does not implicitly {@link proto.Msg_GuildBossRankNotify.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_GuildBossRankNotify
         * @static
         * @param {proto.IMsg_GuildBossRankNotify} m Msg_GuildBossRankNotify message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_GuildBossRankNotify.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };

        /**
         * Decodes a Msg_GuildBossRankNotify message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_GuildBossRankNotify
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_GuildBossRankNotify} Msg_GuildBossRankNotify
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_GuildBossRankNotify.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_GuildBossRankNotify();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_GuildBossRankNotify;
    })();

    proto.Mobile37PopupInfo = (function() {

        /**
         * Properties of a Mobile37PopupInfo.
         * @memberof proto
         * @interface IMobile37PopupInfo
         * @property {number|null} [type] Mobile37PopupInfo type
         * @property {string|null} [buttonId] Mobile37PopupInfo buttonId
         * @property {string|null} [url] Mobile37PopupInfo url
         * @property {boolean|null} [red] Mobile37PopupInfo red
         * @property {string|null} [endTime] Mobile37PopupInfo endTime
         */

        /**
         * Constructs a new Mobile37PopupInfo.
         * @memberof proto
         * @classdesc Represents a Mobile37PopupInfo.
         * @implements IMobile37PopupInfo
         * @constructor
         * @param {proto.IMobile37PopupInfo=} [p] Properties to set
         */
        function Mobile37PopupInfo(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Mobile37PopupInfo type.
         * @member {number} type
         * @memberof proto.Mobile37PopupInfo
         * @instance
         */
        Mobile37PopupInfo.prototype.type = 0;

        /**
         * Mobile37PopupInfo buttonId.
         * @member {string} buttonId
         * @memberof proto.Mobile37PopupInfo
         * @instance
         */
        Mobile37PopupInfo.prototype.buttonId = "";

        /**
         * Mobile37PopupInfo url.
         * @member {string} url
         * @memberof proto.Mobile37PopupInfo
         * @instance
         */
        Mobile37PopupInfo.prototype.url = "";

        /**
         * Mobile37PopupInfo red.
         * @member {boolean} red
         * @memberof proto.Mobile37PopupInfo
         * @instance
         */
        Mobile37PopupInfo.prototype.red = false;

        /**
         * Mobile37PopupInfo endTime.
         * @member {string} endTime
         * @memberof proto.Mobile37PopupInfo
         * @instance
         */
        Mobile37PopupInfo.prototype.endTime = "";

        /**
         * Encodes the specified Mobile37PopupInfo message. Does not implicitly {@link proto.Mobile37PopupInfo.verify|verify} messages.
         * @function encode
         * @memberof proto.Mobile37PopupInfo
         * @static
         * @param {proto.IMobile37PopupInfo} m Mobile37PopupInfo message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Mobile37PopupInfo.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.type != null && Object.hasOwnProperty.call(m, "type"))
                w.uint32(8).int32(m.type);
            if (m.buttonId != null && Object.hasOwnProperty.call(m, "buttonId"))
                w.uint32(18).string(m.buttonId);
            if (m.url != null && Object.hasOwnProperty.call(m, "url"))
                w.uint32(26).string(m.url);
            if (m.red != null && Object.hasOwnProperty.call(m, "red"))
                w.uint32(32).bool(m.red);
            if (m.endTime != null && Object.hasOwnProperty.call(m, "endTime"))
                w.uint32(42).string(m.endTime);
            return w;
        };

        /**
         * Decodes a Mobile37PopupInfo message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Mobile37PopupInfo
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Mobile37PopupInfo} Mobile37PopupInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Mobile37PopupInfo.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Mobile37PopupInfo();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.type = r.int32();
                    break;
                case 2:
                    m.buttonId = r.string();
                    break;
                case 3:
                    m.url = r.string();
                    break;
                case 4:
                    m.red = r.bool();
                    break;
                case 5:
                    m.endTime = r.string();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Mobile37PopupInfo;
    })();

    proto.Msg_Mobile37PopupsPush = (function() {

        /**
         * Properties of a Msg_Mobile37PopupsPush.
         * @memberof proto
         * @interface IMsg_Mobile37PopupsPush
         * @property {Array.<proto.IMobile37PopupInfo>|null} [popups] Msg_Mobile37PopupsPush popups
         */

        /**
         * Constructs a new Msg_Mobile37PopupsPush.
         * @memberof proto
         * @classdesc Represents a Msg_Mobile37PopupsPush.
         * @implements IMsg_Mobile37PopupsPush
         * @constructor
         * @param {proto.IMsg_Mobile37PopupsPush=} [p] Properties to set
         */
        function Msg_Mobile37PopupsPush(p) {
            this.popups = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_Mobile37PopupsPush popups.
         * @member {Array.<proto.IMobile37PopupInfo>} popups
         * @memberof proto.Msg_Mobile37PopupsPush
         * @instance
         */
        Msg_Mobile37PopupsPush.prototype.popups = $util.emptyArray;

        /**
         * Encodes the specified Msg_Mobile37PopupsPush message. Does not implicitly {@link proto.Msg_Mobile37PopupsPush.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_Mobile37PopupsPush
         * @static
         * @param {proto.IMsg_Mobile37PopupsPush} m Msg_Mobile37PopupsPush message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_Mobile37PopupsPush.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.popups != null && m.popups.length) {
                for (var i = 0; i < m.popups.length; ++i)
                    $root.proto.Mobile37PopupInfo.encode(m.popups[i], w.uint32(10).fork()).ldelim();
            }
            return w;
        };

        /**
         * Decodes a Msg_Mobile37PopupsPush message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_Mobile37PopupsPush
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_Mobile37PopupsPush} Msg_Mobile37PopupsPush
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_Mobile37PopupsPush.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_Mobile37PopupsPush();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.popups && m.popups.length))
                        m.popups = [];
                    m.popups.push($root.proto.Mobile37PopupInfo.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_Mobile37PopupsPush;
    })();

    proto.Msg_NewDayPush = (function() {

        /**
         * Properties of a Msg_NewDayPush.
         * @memberof proto
         * @interface IMsg_NewDayPush
         * @property {number|Long|null} [time] Msg_NewDayPush time
         */

        /**
         * Constructs a new Msg_NewDayPush.
         * @memberof proto
         * @classdesc Represents a Msg_NewDayPush.
         * @implements IMsg_NewDayPush
         * @constructor
         * @param {proto.IMsg_NewDayPush=} [p] Properties to set
         */
        function Msg_NewDayPush(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_NewDayPush time.
         * @member {number|Long} time
         * @memberof proto.Msg_NewDayPush
         * @instance
         */
        Msg_NewDayPush.prototype.time = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

        /**
         * Encodes the specified Msg_NewDayPush message. Does not implicitly {@link proto.Msg_NewDayPush.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_NewDayPush
         * @static
         * @param {proto.IMsg_NewDayPush} m Msg_NewDayPush message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_NewDayPush.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.time != null && Object.hasOwnProperty.call(m, "time"))
                w.uint32(8).int64(m.time);
            return w;
        };

        /**
         * Decodes a Msg_NewDayPush message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_NewDayPush
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_NewDayPush} Msg_NewDayPush
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_NewDayPush.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_NewDayPush();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.time = r.int64();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_NewDayPush;
    })();

    proto.Msg_GetSignInGiftInfoReq = (function() {

        /**
         * Properties of a Msg_GetSignInGiftInfoReq.
         * @memberof proto
         * @interface IMsg_GetSignInGiftInfoReq
         */

        /**
         * Constructs a new Msg_GetSignInGiftInfoReq.
         * @memberof proto
         * @classdesc Represents a Msg_GetSignInGiftInfoReq.
         * @implements IMsg_GetSignInGiftInfoReq
         * @constructor
         * @param {proto.IMsg_GetSignInGiftInfoReq=} [p] Properties to set
         */
        function Msg_GetSignInGiftInfoReq(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Encodes the specified Msg_GetSignInGiftInfoReq message. Does not implicitly {@link proto.Msg_GetSignInGiftInfoReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_GetSignInGiftInfoReq
         * @static
         * @param {proto.IMsg_GetSignInGiftInfoReq} m Msg_GetSignInGiftInfoReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_GetSignInGiftInfoReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };

        /**
         * Decodes a Msg_GetSignInGiftInfoReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_GetSignInGiftInfoReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_GetSignInGiftInfoReq} Msg_GetSignInGiftInfoReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_GetSignInGiftInfoReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_GetSignInGiftInfoReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_GetSignInGiftInfoReq;
    })();

    proto.Msg_GetSignInGiftInfoRsp = (function() {

        /**
         * Properties of a Msg_GetSignInGiftInfoRsp.
         * @memberof proto
         * @interface IMsg_GetSignInGiftInfoRsp
         * @property {proto.ICommonError|null} [error] Msg_GetSignInGiftInfoRsp error
         * @property {number|null} [signInDays] Msg_GetSignInGiftInfoRsp signInDays
         * @property {Array.<number>|null} [receivedDays] Msg_GetSignInGiftInfoRsp receivedDays
         */

        /**
         * Constructs a new Msg_GetSignInGiftInfoRsp.
         * @memberof proto
         * @classdesc Represents a Msg_GetSignInGiftInfoRsp.
         * @implements IMsg_GetSignInGiftInfoRsp
         * @constructor
         * @param {proto.IMsg_GetSignInGiftInfoRsp=} [p] Properties to set
         */
        function Msg_GetSignInGiftInfoRsp(p) {
            this.receivedDays = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_GetSignInGiftInfoRsp error.
         * @member {proto.ICommonError|null|undefined} error
         * @memberof proto.Msg_GetSignInGiftInfoRsp
         * @instance
         */
        Msg_GetSignInGiftInfoRsp.prototype.error = null;

        /**
         * Msg_GetSignInGiftInfoRsp signInDays.
         * @member {number} signInDays
         * @memberof proto.Msg_GetSignInGiftInfoRsp
         * @instance
         */
        Msg_GetSignInGiftInfoRsp.prototype.signInDays = 0;

        /**
         * Msg_GetSignInGiftInfoRsp receivedDays.
         * @member {Array.<number>} receivedDays
         * @memberof proto.Msg_GetSignInGiftInfoRsp
         * @instance
         */
        Msg_GetSignInGiftInfoRsp.prototype.receivedDays = $util.emptyArray;

        /**
         * Encodes the specified Msg_GetSignInGiftInfoRsp message. Does not implicitly {@link proto.Msg_GetSignInGiftInfoRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_GetSignInGiftInfoRsp
         * @static
         * @param {proto.IMsg_GetSignInGiftInfoRsp} m Msg_GetSignInGiftInfoRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_GetSignInGiftInfoRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.error != null && Object.hasOwnProperty.call(m, "error"))
                $root.proto.CommonError.encode(m.error, w.uint32(10).fork()).ldelim();
            if (m.signInDays != null && Object.hasOwnProperty.call(m, "signInDays"))
                w.uint32(16).int32(m.signInDays);
            if (m.receivedDays != null && m.receivedDays.length) {
                w.uint32(26).fork();
                for (var i = 0; i < m.receivedDays.length; ++i)
                    w.int32(m.receivedDays[i]);
                w.ldelim();
            }
            return w;
        };

        /**
         * Decodes a Msg_GetSignInGiftInfoRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_GetSignInGiftInfoRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_GetSignInGiftInfoRsp} Msg_GetSignInGiftInfoRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_GetSignInGiftInfoRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_GetSignInGiftInfoRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.error = $root.proto.CommonError.decode(r, r.uint32());
                    break;
                case 2:
                    m.signInDays = r.int32();
                    break;
                case 3:
                    if (!(m.receivedDays && m.receivedDays.length))
                        m.receivedDays = [];
                    if ((t & 7) === 2) {
                        var c2 = r.uint32() + r.pos;
                        while (r.pos < c2)
                            m.receivedDays.push(r.int32());
                    } else
                        m.receivedDays.push(r.int32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_GetSignInGiftInfoRsp;
    })();

    proto.Msg_ReceiveSignInGiftReq = (function() {

        /**
         * Properties of a Msg_ReceiveSignInGiftReq.
         * @memberof proto
         * @interface IMsg_ReceiveSignInGiftReq
         * @property {Array.<number>|null} [days] Msg_ReceiveSignInGiftReq days
         */

        /**
         * Constructs a new Msg_ReceiveSignInGiftReq.
         * @memberof proto
         * @classdesc Represents a Msg_ReceiveSignInGiftReq.
         * @implements IMsg_ReceiveSignInGiftReq
         * @constructor
         * @param {proto.IMsg_ReceiveSignInGiftReq=} [p] Properties to set
         */
        function Msg_ReceiveSignInGiftReq(p) {
            this.days = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_ReceiveSignInGiftReq days.
         * @member {Array.<number>} days
         * @memberof proto.Msg_ReceiveSignInGiftReq
         * @instance
         */
        Msg_ReceiveSignInGiftReq.prototype.days = $util.emptyArray;

        /**
         * Encodes the specified Msg_ReceiveSignInGiftReq message. Does not implicitly {@link proto.Msg_ReceiveSignInGiftReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_ReceiveSignInGiftReq
         * @static
         * @param {proto.IMsg_ReceiveSignInGiftReq} m Msg_ReceiveSignInGiftReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_ReceiveSignInGiftReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.days != null && m.days.length) {
                w.uint32(10).fork();
                for (var i = 0; i < m.days.length; ++i)
                    w.int32(m.days[i]);
                w.ldelim();
            }
            return w;
        };

        /**
         * Decodes a Msg_ReceiveSignInGiftReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_ReceiveSignInGiftReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_ReceiveSignInGiftReq} Msg_ReceiveSignInGiftReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_ReceiveSignInGiftReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_ReceiveSignInGiftReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.days && m.days.length))
                        m.days = [];
                    if ((t & 7) === 2) {
                        var c2 = r.uint32() + r.pos;
                        while (r.pos < c2)
                            m.days.push(r.int32());
                    } else
                        m.days.push(r.int32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_ReceiveSignInGiftReq;
    })();

    proto.Msg_ReceiveSignInGiftRsp = (function() {

        /**
         * Properties of a Msg_ReceiveSignInGiftRsp.
         * @memberof proto
         * @interface IMsg_ReceiveSignInGiftRsp
         * @property {proto.ICommonError|null} [error] Msg_ReceiveSignInGiftRsp error
         * @property {Array.<number>|null} [days] Msg_ReceiveSignInGiftRsp days
         * @property {Array.<proto.IItem>|null} [rewards] Msg_ReceiveSignInGiftRsp rewards
         */

        /**
         * Constructs a new Msg_ReceiveSignInGiftRsp.
         * @memberof proto
         * @classdesc Represents a Msg_ReceiveSignInGiftRsp.
         * @implements IMsg_ReceiveSignInGiftRsp
         * @constructor
         * @param {proto.IMsg_ReceiveSignInGiftRsp=} [p] Properties to set
         */
        function Msg_ReceiveSignInGiftRsp(p) {
            this.days = [];
            this.rewards = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_ReceiveSignInGiftRsp error.
         * @member {proto.ICommonError|null|undefined} error
         * @memberof proto.Msg_ReceiveSignInGiftRsp
         * @instance
         */
        Msg_ReceiveSignInGiftRsp.prototype.error = null;

        /**
         * Msg_ReceiveSignInGiftRsp days.
         * @member {Array.<number>} days
         * @memberof proto.Msg_ReceiveSignInGiftRsp
         * @instance
         */
        Msg_ReceiveSignInGiftRsp.prototype.days = $util.emptyArray;

        /**
         * Msg_ReceiveSignInGiftRsp rewards.
         * @member {Array.<proto.IItem>} rewards
         * @memberof proto.Msg_ReceiveSignInGiftRsp
         * @instance
         */
        Msg_ReceiveSignInGiftRsp.prototype.rewards = $util.emptyArray;

        /**
         * Encodes the specified Msg_ReceiveSignInGiftRsp message. Does not implicitly {@link proto.Msg_ReceiveSignInGiftRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_ReceiveSignInGiftRsp
         * @static
         * @param {proto.IMsg_ReceiveSignInGiftRsp} m Msg_ReceiveSignInGiftRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_ReceiveSignInGiftRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.error != null && Object.hasOwnProperty.call(m, "error"))
                $root.proto.CommonError.encode(m.error, w.uint32(10).fork()).ldelim();
            if (m.days != null && m.days.length) {
                w.uint32(18).fork();
                for (var i = 0; i < m.days.length; ++i)
                    w.int32(m.days[i]);
                w.ldelim();
            }
            if (m.rewards != null && m.rewards.length) {
                for (var i = 0; i < m.rewards.length; ++i)
                    $root.proto.Item.encode(m.rewards[i], w.uint32(26).fork()).ldelim();
            }
            return w;
        };

        /**
         * Decodes a Msg_ReceiveSignInGiftRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_ReceiveSignInGiftRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_ReceiveSignInGiftRsp} Msg_ReceiveSignInGiftRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_ReceiveSignInGiftRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_ReceiveSignInGiftRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.error = $root.proto.CommonError.decode(r, r.uint32());
                    break;
                case 2:
                    if (!(m.days && m.days.length))
                        m.days = [];
                    if ((t & 7) === 2) {
                        var c2 = r.uint32() + r.pos;
                        while (r.pos < c2)
                            m.days.push(r.int32());
                    } else
                        m.days.push(r.int32());
                    break;
                case 3:
                    if (!(m.rewards && m.rewards.length))
                        m.rewards = [];
                    m.rewards.push($root.proto.Item.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_ReceiveSignInGiftRsp;
    })();

    proto.HeroGrow = (function() {

        /**
         * Properties of a HeroGrow.
         * @memberof proto
         * @interface IHeroGrow
         * @property {number|null} [activityId] HeroGrow activityId
         * @property {number|Long|null} [activityEndTime] HeroGrow activityEndTime
         * @property {number|null} [heroItemId] HeroGrow heroItemId
         * @property {Array.<number>|null} [receivedFreeRewardStars] HeroGrow receivedFreeRewardStars
         * @property {Object.<string,number>|null} [boughtNotFreeRewardTimesMap] HeroGrow boughtNotFreeRewardTimesMap
         */

        /**
         * Constructs a new HeroGrow.
         * @memberof proto
         * @classdesc Represents a HeroGrow.
         * @implements IHeroGrow
         * @constructor
         * @param {proto.IHeroGrow=} [p] Properties to set
         */
        function HeroGrow(p) {
            this.receivedFreeRewardStars = [];
            this.boughtNotFreeRewardTimesMap = {};
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * HeroGrow activityId.
         * @member {number} activityId
         * @memberof proto.HeroGrow
         * @instance
         */
        HeroGrow.prototype.activityId = 0;

        /**
         * HeroGrow activityEndTime.
         * @member {number|Long} activityEndTime
         * @memberof proto.HeroGrow
         * @instance
         */
        HeroGrow.prototype.activityEndTime = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

        /**
         * HeroGrow heroItemId.
         * @member {number} heroItemId
         * @memberof proto.HeroGrow
         * @instance
         */
        HeroGrow.prototype.heroItemId = 0;

        /**
         * HeroGrow receivedFreeRewardStars.
         * @member {Array.<number>} receivedFreeRewardStars
         * @memberof proto.HeroGrow
         * @instance
         */
        HeroGrow.prototype.receivedFreeRewardStars = $util.emptyArray;

        /**
         * HeroGrow boughtNotFreeRewardTimesMap.
         * @member {Object.<string,number>} boughtNotFreeRewardTimesMap
         * @memberof proto.HeroGrow
         * @instance
         */
        HeroGrow.prototype.boughtNotFreeRewardTimesMap = $util.emptyObject;

        /**
         * Encodes the specified HeroGrow message. Does not implicitly {@link proto.HeroGrow.verify|verify} messages.
         * @function encode
         * @memberof proto.HeroGrow
         * @static
         * @param {proto.IHeroGrow} m HeroGrow message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        HeroGrow.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.activityId != null && Object.hasOwnProperty.call(m, "activityId"))
                w.uint32(8).int32(m.activityId);
            if (m.activityEndTime != null && Object.hasOwnProperty.call(m, "activityEndTime"))
                w.uint32(16).int64(m.activityEndTime);
            if (m.heroItemId != null && Object.hasOwnProperty.call(m, "heroItemId"))
                w.uint32(24).int32(m.heroItemId);
            if (m.receivedFreeRewardStars != null && m.receivedFreeRewardStars.length) {
                w.uint32(34).fork();
                for (var i = 0; i < m.receivedFreeRewardStars.length; ++i)
                    w.int32(m.receivedFreeRewardStars[i]);
                w.ldelim();
            }
            if (m.boughtNotFreeRewardTimesMap != null && Object.hasOwnProperty.call(m, "boughtNotFreeRewardTimesMap")) {
                for (var ks = Object.keys(m.boughtNotFreeRewardTimesMap), i = 0; i < ks.length; ++i) {
                    w.uint32(42).fork().uint32(8).int32(ks[i]).uint32(16).int32(m.boughtNotFreeRewardTimesMap[ks[i]]).ldelim();
                }
            }
            return w;
        };

        /**
         * Decodes a HeroGrow message from the specified reader or buffer.
         * @function decode
         * @memberof proto.HeroGrow
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.HeroGrow} HeroGrow
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        HeroGrow.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.HeroGrow(), k, value;
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.activityId = r.int32();
                    break;
                case 2:
                    m.activityEndTime = r.int64();
                    break;
                case 3:
                    m.heroItemId = r.int32();
                    break;
                case 4:
                    if (!(m.receivedFreeRewardStars && m.receivedFreeRewardStars.length))
                        m.receivedFreeRewardStars = [];
                    if ((t & 7) === 2) {
                        var c2 = r.uint32() + r.pos;
                        while (r.pos < c2)
                            m.receivedFreeRewardStars.push(r.int32());
                    } else
                        m.receivedFreeRewardStars.push(r.int32());
                    break;
                case 5:
                    if (m.boughtNotFreeRewardTimesMap === $util.emptyObject)
                        m.boughtNotFreeRewardTimesMap = {};
                    var c2 = r.uint32() + r.pos;
                    k = 0;
                    value = 0;
                    while (r.pos < c2) {
                        var tag2 = r.uint32();
                        switch (tag2 >>> 3) {
                        case 1:
                            k = r.int32();
                            break;
                        case 2:
                            value = r.int32();
                            break;
                        default:
                            r.skipType(tag2 & 7);
                            break;
                        }
                    }
                    m.boughtNotFreeRewardTimesMap[k] = value;
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return HeroGrow;
    })();

    proto.Msg_GetActivityHeroGrowMapReq = (function() {

        /**
         * Properties of a Msg_GetActivityHeroGrowMapReq.
         * @memberof proto
         * @interface IMsg_GetActivityHeroGrowMapReq
         */

        /**
         * Constructs a new Msg_GetActivityHeroGrowMapReq.
         * @memberof proto
         * @classdesc Represents a Msg_GetActivityHeroGrowMapReq.
         * @implements IMsg_GetActivityHeroGrowMapReq
         * @constructor
         * @param {proto.IMsg_GetActivityHeroGrowMapReq=} [p] Properties to set
         */
        function Msg_GetActivityHeroGrowMapReq(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Encodes the specified Msg_GetActivityHeroGrowMapReq message. Does not implicitly {@link proto.Msg_GetActivityHeroGrowMapReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_GetActivityHeroGrowMapReq
         * @static
         * @param {proto.IMsg_GetActivityHeroGrowMapReq} m Msg_GetActivityHeroGrowMapReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_GetActivityHeroGrowMapReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };

        /**
         * Decodes a Msg_GetActivityHeroGrowMapReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_GetActivityHeroGrowMapReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_GetActivityHeroGrowMapReq} Msg_GetActivityHeroGrowMapReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_GetActivityHeroGrowMapReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_GetActivityHeroGrowMapReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_GetActivityHeroGrowMapReq;
    })();

    proto.Msg_GetActivityHeroGrowMapRsp = (function() {

        /**
         * Properties of a Msg_GetActivityHeroGrowMapRsp.
         * @memberof proto
         * @interface IMsg_GetActivityHeroGrowMapRsp
         * @property {Object.<string,proto.IHeroGrow>|null} [activityHeroGrowMap] Msg_GetActivityHeroGrowMapRsp activityHeroGrowMap
         */

        /**
         * Constructs a new Msg_GetActivityHeroGrowMapRsp.
         * @memberof proto
         * @classdesc Represents a Msg_GetActivityHeroGrowMapRsp.
         * @implements IMsg_GetActivityHeroGrowMapRsp
         * @constructor
         * @param {proto.IMsg_GetActivityHeroGrowMapRsp=} [p] Properties to set
         */
        function Msg_GetActivityHeroGrowMapRsp(p) {
            this.activityHeroGrowMap = {};
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_GetActivityHeroGrowMapRsp activityHeroGrowMap.
         * @member {Object.<string,proto.IHeroGrow>} activityHeroGrowMap
         * @memberof proto.Msg_GetActivityHeroGrowMapRsp
         * @instance
         */
        Msg_GetActivityHeroGrowMapRsp.prototype.activityHeroGrowMap = $util.emptyObject;

        /**
         * Encodes the specified Msg_GetActivityHeroGrowMapRsp message. Does not implicitly {@link proto.Msg_GetActivityHeroGrowMapRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_GetActivityHeroGrowMapRsp
         * @static
         * @param {proto.IMsg_GetActivityHeroGrowMapRsp} m Msg_GetActivityHeroGrowMapRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_GetActivityHeroGrowMapRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.activityHeroGrowMap != null && Object.hasOwnProperty.call(m, "activityHeroGrowMap")) {
                for (var ks = Object.keys(m.activityHeroGrowMap), i = 0; i < ks.length; ++i) {
                    w.uint32(10).fork().uint32(8).int32(ks[i]);
                    $root.proto.HeroGrow.encode(m.activityHeroGrowMap[ks[i]], w.uint32(18).fork()).ldelim().ldelim();
                }
            }
            return w;
        };

        /**
         * Decodes a Msg_GetActivityHeroGrowMapRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_GetActivityHeroGrowMapRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_GetActivityHeroGrowMapRsp} Msg_GetActivityHeroGrowMapRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_GetActivityHeroGrowMapRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_GetActivityHeroGrowMapRsp(), k, value;
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (m.activityHeroGrowMap === $util.emptyObject)
                        m.activityHeroGrowMap = {};
                    var c2 = r.uint32() + r.pos;
                    k = 0;
                    value = null;
                    while (r.pos < c2) {
                        var tag2 = r.uint32();
                        switch (tag2 >>> 3) {
                        case 1:
                            k = r.int32();
                            break;
                        case 2:
                            value = $root.proto.HeroGrow.decode(r, r.uint32());
                            break;
                        default:
                            r.skipType(tag2 & 7);
                            break;
                        }
                    }
                    m.activityHeroGrowMap[k] = value;
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_GetActivityHeroGrowMapRsp;
    })();

    proto.Msg_ReceiveActivityHeroGrowRewardReq = (function() {

        /**
         * Properties of a Msg_ReceiveActivityHeroGrowRewardReq.
         * @memberof proto
         * @interface IMsg_ReceiveActivityHeroGrowRewardReq
         * @property {number|null} [activityId] Msg_ReceiveActivityHeroGrowRewardReq activityId
         * @property {number|null} [star] Msg_ReceiveActivityHeroGrowRewardReq star
         */

        /**
         * Constructs a new Msg_ReceiveActivityHeroGrowRewardReq.
         * @memberof proto
         * @classdesc Represents a Msg_ReceiveActivityHeroGrowRewardReq.
         * @implements IMsg_ReceiveActivityHeroGrowRewardReq
         * @constructor
         * @param {proto.IMsg_ReceiveActivityHeroGrowRewardReq=} [p] Properties to set
         */
        function Msg_ReceiveActivityHeroGrowRewardReq(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_ReceiveActivityHeroGrowRewardReq activityId.
         * @member {number} activityId
         * @memberof proto.Msg_ReceiveActivityHeroGrowRewardReq
         * @instance
         */
        Msg_ReceiveActivityHeroGrowRewardReq.prototype.activityId = 0;

        /**
         * Msg_ReceiveActivityHeroGrowRewardReq star.
         * @member {number} star
         * @memberof proto.Msg_ReceiveActivityHeroGrowRewardReq
         * @instance
         */
        Msg_ReceiveActivityHeroGrowRewardReq.prototype.star = 0;

        /**
         * Encodes the specified Msg_ReceiveActivityHeroGrowRewardReq message. Does not implicitly {@link proto.Msg_ReceiveActivityHeroGrowRewardReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_ReceiveActivityHeroGrowRewardReq
         * @static
         * @param {proto.IMsg_ReceiveActivityHeroGrowRewardReq} m Msg_ReceiveActivityHeroGrowRewardReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_ReceiveActivityHeroGrowRewardReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.activityId != null && Object.hasOwnProperty.call(m, "activityId"))
                w.uint32(8).int32(m.activityId);
            if (m.star != null && Object.hasOwnProperty.call(m, "star"))
                w.uint32(16).int32(m.star);
            return w;
        };

        /**
         * Decodes a Msg_ReceiveActivityHeroGrowRewardReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_ReceiveActivityHeroGrowRewardReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_ReceiveActivityHeroGrowRewardReq} Msg_ReceiveActivityHeroGrowRewardReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_ReceiveActivityHeroGrowRewardReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_ReceiveActivityHeroGrowRewardReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.activityId = r.int32();
                    break;
                case 2:
                    m.star = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_ReceiveActivityHeroGrowRewardReq;
    })();

    proto.Msg_ReceiveActivityHeroGrowRewardRsp = (function() {

        /**
         * Properties of a Msg_ReceiveActivityHeroGrowRewardRsp.
         * @memberof proto
         * @interface IMsg_ReceiveActivityHeroGrowRewardRsp
         * @property {proto.ICommonError|null} [error] Msg_ReceiveActivityHeroGrowRewardRsp error
         * @property {number|null} [activityId] Msg_ReceiveActivityHeroGrowRewardRsp activityId
         * @property {number|null} [star] Msg_ReceiveActivityHeroGrowRewardRsp star
         * @property {Array.<proto.IItem>|null} [rewards] Msg_ReceiveActivityHeroGrowRewardRsp rewards
         */

        /**
         * Constructs a new Msg_ReceiveActivityHeroGrowRewardRsp.
         * @memberof proto
         * @classdesc Represents a Msg_ReceiveActivityHeroGrowRewardRsp.
         * @implements IMsg_ReceiveActivityHeroGrowRewardRsp
         * @constructor
         * @param {proto.IMsg_ReceiveActivityHeroGrowRewardRsp=} [p] Properties to set
         */
        function Msg_ReceiveActivityHeroGrowRewardRsp(p) {
            this.rewards = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_ReceiveActivityHeroGrowRewardRsp error.
         * @member {proto.ICommonError|null|undefined} error
         * @memberof proto.Msg_ReceiveActivityHeroGrowRewardRsp
         * @instance
         */
        Msg_ReceiveActivityHeroGrowRewardRsp.prototype.error = null;

        /**
         * Msg_ReceiveActivityHeroGrowRewardRsp activityId.
         * @member {number} activityId
         * @memberof proto.Msg_ReceiveActivityHeroGrowRewardRsp
         * @instance
         */
        Msg_ReceiveActivityHeroGrowRewardRsp.prototype.activityId = 0;

        /**
         * Msg_ReceiveActivityHeroGrowRewardRsp star.
         * @member {number} star
         * @memberof proto.Msg_ReceiveActivityHeroGrowRewardRsp
         * @instance
         */
        Msg_ReceiveActivityHeroGrowRewardRsp.prototype.star = 0;

        /**
         * Msg_ReceiveActivityHeroGrowRewardRsp rewards.
         * @member {Array.<proto.IItem>} rewards
         * @memberof proto.Msg_ReceiveActivityHeroGrowRewardRsp
         * @instance
         */
        Msg_ReceiveActivityHeroGrowRewardRsp.prototype.rewards = $util.emptyArray;

        /**
         * Encodes the specified Msg_ReceiveActivityHeroGrowRewardRsp message. Does not implicitly {@link proto.Msg_ReceiveActivityHeroGrowRewardRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_ReceiveActivityHeroGrowRewardRsp
         * @static
         * @param {proto.IMsg_ReceiveActivityHeroGrowRewardRsp} m Msg_ReceiveActivityHeroGrowRewardRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_ReceiveActivityHeroGrowRewardRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.error != null && Object.hasOwnProperty.call(m, "error"))
                $root.proto.CommonError.encode(m.error, w.uint32(10).fork()).ldelim();
            if (m.activityId != null && Object.hasOwnProperty.call(m, "activityId"))
                w.uint32(16).int32(m.activityId);
            if (m.star != null && Object.hasOwnProperty.call(m, "star"))
                w.uint32(24).int32(m.star);
            if (m.rewards != null && m.rewards.length) {
                for (var i = 0; i < m.rewards.length; ++i)
                    $root.proto.Item.encode(m.rewards[i], w.uint32(34).fork()).ldelim();
            }
            return w;
        };

        /**
         * Decodes a Msg_ReceiveActivityHeroGrowRewardRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_ReceiveActivityHeroGrowRewardRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_ReceiveActivityHeroGrowRewardRsp} Msg_ReceiveActivityHeroGrowRewardRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_ReceiveActivityHeroGrowRewardRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_ReceiveActivityHeroGrowRewardRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.error = $root.proto.CommonError.decode(r, r.uint32());
                    break;
                case 2:
                    m.activityId = r.int32();
                    break;
                case 3:
                    m.star = r.int32();
                    break;
                case 4:
                    if (!(m.rewards && m.rewards.length))
                        m.rewards = [];
                    m.rewards.push($root.proto.Item.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_ReceiveActivityHeroGrowRewardRsp;
    })();

    proto.GachaUp = (function() {

        /**
         * Properties of a GachaUp.
         * @memberof proto
         * @interface IGachaUp
         * @property {number|null} [activityId] GachaUp activityId
         * @property {number|Long|null} [activityEndTime] GachaUp activityEndTime
         * @property {Array.<proto.ITask>|null} [tasks] GachaUp tasks
         */

        /**
         * Constructs a new GachaUp.
         * @memberof proto
         * @classdesc Represents a GachaUp.
         * @implements IGachaUp
         * @constructor
         * @param {proto.IGachaUp=} [p] Properties to set
         */
        function GachaUp(p) {
            this.tasks = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * GachaUp activityId.
         * @member {number} activityId
         * @memberof proto.GachaUp
         * @instance
         */
        GachaUp.prototype.activityId = 0;

        /**
         * GachaUp activityEndTime.
         * @member {number|Long} activityEndTime
         * @memberof proto.GachaUp
         * @instance
         */
        GachaUp.prototype.activityEndTime = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

        /**
         * GachaUp tasks.
         * @member {Array.<proto.ITask>} tasks
         * @memberof proto.GachaUp
         * @instance
         */
        GachaUp.prototype.tasks = $util.emptyArray;

        /**
         * Encodes the specified GachaUp message. Does not implicitly {@link proto.GachaUp.verify|verify} messages.
         * @function encode
         * @memberof proto.GachaUp
         * @static
         * @param {proto.IGachaUp} m GachaUp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        GachaUp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.activityId != null && Object.hasOwnProperty.call(m, "activityId"))
                w.uint32(8).int32(m.activityId);
            if (m.activityEndTime != null && Object.hasOwnProperty.call(m, "activityEndTime"))
                w.uint32(16).int64(m.activityEndTime);
            if (m.tasks != null && m.tasks.length) {
                for (var i = 0; i < m.tasks.length; ++i)
                    $root.proto.Task.encode(m.tasks[i], w.uint32(26).fork()).ldelim();
            }
            return w;
        };

        /**
         * Decodes a GachaUp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.GachaUp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.GachaUp} GachaUp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        GachaUp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.GachaUp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.activityId = r.int32();
                    break;
                case 2:
                    m.activityEndTime = r.int64();
                    break;
                case 3:
                    if (!(m.tasks && m.tasks.length))
                        m.tasks = [];
                    m.tasks.push($root.proto.Task.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return GachaUp;
    })();

    proto.Msg_GetActivityGachaUpMapReq = (function() {

        /**
         * Properties of a Msg_GetActivityGachaUpMapReq.
         * @memberof proto
         * @interface IMsg_GetActivityGachaUpMapReq
         */

        /**
         * Constructs a new Msg_GetActivityGachaUpMapReq.
         * @memberof proto
         * @classdesc Represents a Msg_GetActivityGachaUpMapReq.
         * @implements IMsg_GetActivityGachaUpMapReq
         * @constructor
         * @param {proto.IMsg_GetActivityGachaUpMapReq=} [p] Properties to set
         */
        function Msg_GetActivityGachaUpMapReq(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Encodes the specified Msg_GetActivityGachaUpMapReq message. Does not implicitly {@link proto.Msg_GetActivityGachaUpMapReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_GetActivityGachaUpMapReq
         * @static
         * @param {proto.IMsg_GetActivityGachaUpMapReq} m Msg_GetActivityGachaUpMapReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_GetActivityGachaUpMapReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };

        /**
         * Decodes a Msg_GetActivityGachaUpMapReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_GetActivityGachaUpMapReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_GetActivityGachaUpMapReq} Msg_GetActivityGachaUpMapReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_GetActivityGachaUpMapReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_GetActivityGachaUpMapReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_GetActivityGachaUpMapReq;
    })();

    proto.Msg_GetActivityGachaUpMapRsp = (function() {

        /**
         * Properties of a Msg_GetActivityGachaUpMapRsp.
         * @memberof proto
         * @interface IMsg_GetActivityGachaUpMapRsp
         * @property {Object.<string,proto.IGachaUp>|null} [activityGachaUpMap] Msg_GetActivityGachaUpMapRsp activityGachaUpMap
         */

        /**
         * Constructs a new Msg_GetActivityGachaUpMapRsp.
         * @memberof proto
         * @classdesc Represents a Msg_GetActivityGachaUpMapRsp.
         * @implements IMsg_GetActivityGachaUpMapRsp
         * @constructor
         * @param {proto.IMsg_GetActivityGachaUpMapRsp=} [p] Properties to set
         */
        function Msg_GetActivityGachaUpMapRsp(p) {
            this.activityGachaUpMap = {};
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_GetActivityGachaUpMapRsp activityGachaUpMap.
         * @member {Object.<string,proto.IGachaUp>} activityGachaUpMap
         * @memberof proto.Msg_GetActivityGachaUpMapRsp
         * @instance
         */
        Msg_GetActivityGachaUpMapRsp.prototype.activityGachaUpMap = $util.emptyObject;

        /**
         * Encodes the specified Msg_GetActivityGachaUpMapRsp message. Does not implicitly {@link proto.Msg_GetActivityGachaUpMapRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_GetActivityGachaUpMapRsp
         * @static
         * @param {proto.IMsg_GetActivityGachaUpMapRsp} m Msg_GetActivityGachaUpMapRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_GetActivityGachaUpMapRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.activityGachaUpMap != null && Object.hasOwnProperty.call(m, "activityGachaUpMap")) {
                for (var ks = Object.keys(m.activityGachaUpMap), i = 0; i < ks.length; ++i) {
                    w.uint32(10).fork().uint32(8).int32(ks[i]);
                    $root.proto.GachaUp.encode(m.activityGachaUpMap[ks[i]], w.uint32(18).fork()).ldelim().ldelim();
                }
            }
            return w;
        };

        /**
         * Decodes a Msg_GetActivityGachaUpMapRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_GetActivityGachaUpMapRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_GetActivityGachaUpMapRsp} Msg_GetActivityGachaUpMapRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_GetActivityGachaUpMapRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_GetActivityGachaUpMapRsp(), k, value;
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (m.activityGachaUpMap === $util.emptyObject)
                        m.activityGachaUpMap = {};
                    var c2 = r.uint32() + r.pos;
                    k = 0;
                    value = null;
                    while (r.pos < c2) {
                        var tag2 = r.uint32();
                        switch (tag2 >>> 3) {
                        case 1:
                            k = r.int32();
                            break;
                        case 2:
                            value = $root.proto.GachaUp.decode(r, r.uint32());
                            break;
                        default:
                            r.skipType(tag2 & 7);
                            break;
                        }
                    }
                    m.activityGachaUpMap[k] = value;
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_GetActivityGachaUpMapRsp;
    })();

    proto.Msg_ReceiveActivityGachaUpTasksRewardsReq = (function() {

        /**
         * Properties of a Msg_ReceiveActivityGachaUpTasksRewardsReq.
         * @memberof proto
         * @interface IMsg_ReceiveActivityGachaUpTasksRewardsReq
         * @property {number|null} [activityId] Msg_ReceiveActivityGachaUpTasksRewardsReq activityId
         * @property {Array.<number>|null} [taskIds] Msg_ReceiveActivityGachaUpTasksRewardsReq taskIds
         */

        /**
         * Constructs a new Msg_ReceiveActivityGachaUpTasksRewardsReq.
         * @memberof proto
         * @classdesc Represents a Msg_ReceiveActivityGachaUpTasksRewardsReq.
         * @implements IMsg_ReceiveActivityGachaUpTasksRewardsReq
         * @constructor
         * @param {proto.IMsg_ReceiveActivityGachaUpTasksRewardsReq=} [p] Properties to set
         */
        function Msg_ReceiveActivityGachaUpTasksRewardsReq(p) {
            this.taskIds = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_ReceiveActivityGachaUpTasksRewardsReq activityId.
         * @member {number} activityId
         * @memberof proto.Msg_ReceiveActivityGachaUpTasksRewardsReq
         * @instance
         */
        Msg_ReceiveActivityGachaUpTasksRewardsReq.prototype.activityId = 0;

        /**
         * Msg_ReceiveActivityGachaUpTasksRewardsReq taskIds.
         * @member {Array.<number>} taskIds
         * @memberof proto.Msg_ReceiveActivityGachaUpTasksRewardsReq
         * @instance
         */
        Msg_ReceiveActivityGachaUpTasksRewardsReq.prototype.taskIds = $util.emptyArray;

        /**
         * Encodes the specified Msg_ReceiveActivityGachaUpTasksRewardsReq message. Does not implicitly {@link proto.Msg_ReceiveActivityGachaUpTasksRewardsReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_ReceiveActivityGachaUpTasksRewardsReq
         * @static
         * @param {proto.IMsg_ReceiveActivityGachaUpTasksRewardsReq} m Msg_ReceiveActivityGachaUpTasksRewardsReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_ReceiveActivityGachaUpTasksRewardsReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.activityId != null && Object.hasOwnProperty.call(m, "activityId"))
                w.uint32(8).int32(m.activityId);
            if (m.taskIds != null && m.taskIds.length) {
                w.uint32(18).fork();
                for (var i = 0; i < m.taskIds.length; ++i)
                    w.int32(m.taskIds[i]);
                w.ldelim();
            }
            return w;
        };

        /**
         * Decodes a Msg_ReceiveActivityGachaUpTasksRewardsReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_ReceiveActivityGachaUpTasksRewardsReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_ReceiveActivityGachaUpTasksRewardsReq} Msg_ReceiveActivityGachaUpTasksRewardsReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_ReceiveActivityGachaUpTasksRewardsReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_ReceiveActivityGachaUpTasksRewardsReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.activityId = r.int32();
                    break;
                case 2:
                    if (!(m.taskIds && m.taskIds.length))
                        m.taskIds = [];
                    if ((t & 7) === 2) {
                        var c2 = r.uint32() + r.pos;
                        while (r.pos < c2)
                            m.taskIds.push(r.int32());
                    } else
                        m.taskIds.push(r.int32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_ReceiveActivityGachaUpTasksRewardsReq;
    })();

    proto.Msg_ReceiveActivityGachaUpTasksRewardsRsp = (function() {

        /**
         * Properties of a Msg_ReceiveActivityGachaUpTasksRewardsRsp.
         * @memberof proto
         * @interface IMsg_ReceiveActivityGachaUpTasksRewardsRsp
         * @property {proto.ICommonError|null} [error] Msg_ReceiveActivityGachaUpTasksRewardsRsp error
         * @property {number|null} [activityId] Msg_ReceiveActivityGachaUpTasksRewardsRsp activityId
         * @property {Array.<number>|null} [taskIds] Msg_ReceiveActivityGachaUpTasksRewardsRsp taskIds
         * @property {Array.<proto.IItem>|null} [rewards] Msg_ReceiveActivityGachaUpTasksRewardsRsp rewards
         */

        /**
         * Constructs a new Msg_ReceiveActivityGachaUpTasksRewardsRsp.
         * @memberof proto
         * @classdesc Represents a Msg_ReceiveActivityGachaUpTasksRewardsRsp.
         * @implements IMsg_ReceiveActivityGachaUpTasksRewardsRsp
         * @constructor
         * @param {proto.IMsg_ReceiveActivityGachaUpTasksRewardsRsp=} [p] Properties to set
         */
        function Msg_ReceiveActivityGachaUpTasksRewardsRsp(p) {
            this.taskIds = [];
            this.rewards = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_ReceiveActivityGachaUpTasksRewardsRsp error.
         * @member {proto.ICommonError|null|undefined} error
         * @memberof proto.Msg_ReceiveActivityGachaUpTasksRewardsRsp
         * @instance
         */
        Msg_ReceiveActivityGachaUpTasksRewardsRsp.prototype.error = null;

        /**
         * Msg_ReceiveActivityGachaUpTasksRewardsRsp activityId.
         * @member {number} activityId
         * @memberof proto.Msg_ReceiveActivityGachaUpTasksRewardsRsp
         * @instance
         */
        Msg_ReceiveActivityGachaUpTasksRewardsRsp.prototype.activityId = 0;

        /**
         * Msg_ReceiveActivityGachaUpTasksRewardsRsp taskIds.
         * @member {Array.<number>} taskIds
         * @memberof proto.Msg_ReceiveActivityGachaUpTasksRewardsRsp
         * @instance
         */
        Msg_ReceiveActivityGachaUpTasksRewardsRsp.prototype.taskIds = $util.emptyArray;

        /**
         * Msg_ReceiveActivityGachaUpTasksRewardsRsp rewards.
         * @member {Array.<proto.IItem>} rewards
         * @memberof proto.Msg_ReceiveActivityGachaUpTasksRewardsRsp
         * @instance
         */
        Msg_ReceiveActivityGachaUpTasksRewardsRsp.prototype.rewards = $util.emptyArray;

        /**
         * Encodes the specified Msg_ReceiveActivityGachaUpTasksRewardsRsp message. Does not implicitly {@link proto.Msg_ReceiveActivityGachaUpTasksRewardsRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_ReceiveActivityGachaUpTasksRewardsRsp
         * @static
         * @param {proto.IMsg_ReceiveActivityGachaUpTasksRewardsRsp} m Msg_ReceiveActivityGachaUpTasksRewardsRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_ReceiveActivityGachaUpTasksRewardsRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.error != null && Object.hasOwnProperty.call(m, "error"))
                $root.proto.CommonError.encode(m.error, w.uint32(10).fork()).ldelim();
            if (m.activityId != null && Object.hasOwnProperty.call(m, "activityId"))
                w.uint32(16).int32(m.activityId);
            if (m.taskIds != null && m.taskIds.length) {
                w.uint32(26).fork();
                for (var i = 0; i < m.taskIds.length; ++i)
                    w.int32(m.taskIds[i]);
                w.ldelim();
            }
            if (m.rewards != null && m.rewards.length) {
                for (var i = 0; i < m.rewards.length; ++i)
                    $root.proto.Item.encode(m.rewards[i], w.uint32(34).fork()).ldelim();
            }
            return w;
        };

        /**
         * Decodes a Msg_ReceiveActivityGachaUpTasksRewardsRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_ReceiveActivityGachaUpTasksRewardsRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_ReceiveActivityGachaUpTasksRewardsRsp} Msg_ReceiveActivityGachaUpTasksRewardsRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_ReceiveActivityGachaUpTasksRewardsRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_ReceiveActivityGachaUpTasksRewardsRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.error = $root.proto.CommonError.decode(r, r.uint32());
                    break;
                case 2:
                    m.activityId = r.int32();
                    break;
                case 3:
                    if (!(m.taskIds && m.taskIds.length))
                        m.taskIds = [];
                    if ((t & 7) === 2) {
                        var c2 = r.uint32() + r.pos;
                        while (r.pos < c2)
                            m.taskIds.push(r.int32());
                    } else
                        m.taskIds.push(r.int32());
                    break;
                case 4:
                    if (!(m.rewards && m.rewards.length))
                        m.rewards = [];
                    m.rewards.push($root.proto.Item.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_ReceiveActivityGachaUpTasksRewardsRsp;
    })();

    /**
     * FightEvent enum.
     * @name proto.FightEvent
     * @enum {number}
     * @property {number} FEUnknown=0 FEUnknown value
     * @property {number} FEUpdateHP=1 FEUpdateHP value
     * @property {number} FECreateHero=2 FECreateHero value
     * @property {number} FECreateBullet=3 FECreateBullet value
     * @property {number} FERemoveObject=4 FERemoveObject value
     * @property {number} FEAddBuffer=5 FEAddBuffer value
     * @property {number} FEUpdateBuffer=6 FEUpdateBuffer value
     * @property {number} FEUseSkill=7 FEUseSkill value
     * @property {number} FEObjectDead=8 FEObjectDead value
     * @property {number} FEObjectRevive=9 FEObjectRevive value
     * @property {number} FEDamage=10 FEDamage value
     * @property {number} FEStartRest=11 FEStartRest value
     * @property {number} FEEndRest=12 FEEndRest value
     * @property {number} FEMoveTo=13 FEMoveTo value
     * @property {number} FEEndFight=14 FEEndFight value
     * @property {number} FEDrawLine=15 FEDrawLine value
     * @property {number} FEBufferHeal=16 FEBufferHeal value
     * @property {number} FEUpdateHoldTime=17 FEUpdateHoldTime value
     * @property {number} FEMoveLineCircle=18 FEMoveLineCircle value
     */
    proto.FightEvent = (function() {
        var valuesById = {}, values = Object.create(valuesById);
        values[valuesById[0] = "FEUnknown"] = 0;
        values[valuesById[1] = "FEUpdateHP"] = 1;
        values[valuesById[2] = "FECreateHero"] = 2;
        values[valuesById[3] = "FECreateBullet"] = 3;
        values[valuesById[4] = "FERemoveObject"] = 4;
        values[valuesById[5] = "FEAddBuffer"] = 5;
        values[valuesById[6] = "FEUpdateBuffer"] = 6;
        values[valuesById[7] = "FEUseSkill"] = 7;
        values[valuesById[8] = "FEObjectDead"] = 8;
        values[valuesById[9] = "FEObjectRevive"] = 9;
        values[valuesById[10] = "FEDamage"] = 10;
        values[valuesById[11] = "FEStartRest"] = 11;
        values[valuesById[12] = "FEEndRest"] = 12;
        values[valuesById[13] = "FEMoveTo"] = 13;
        values[valuesById[14] = "FEEndFight"] = 14;
        values[valuesById[15] = "FEDrawLine"] = 15;
        values[valuesById[16] = "FEBufferHeal"] = 16;
        values[valuesById[17] = "FEUpdateHoldTime"] = 17;
        values[valuesById[18] = "FEMoveLineCircle"] = 18;
        return values;
    })();

    proto.FightFlow = (function() {

        /**
         * Properties of a FightFlow.
         * @memberof proto
         * @interface IFightFlow
         * @property {number|null} [timestamp] FightFlow timestamp
         * @property {proto.FightEvent|null} [ev] FightFlow ev
         * @property {proto.IFightFlowUpdateHP|null} [updateHP] FightFlow updateHP
         * @property {proto.IFightFlowCreateHero|null} [createHero] FightFlow createHero
         * @property {proto.IFightFlowCreateBullet|null} [createBullet] FightFlow createBullet
         * @property {proto.IFightFlowRemoveObject|null} [removeObject] FightFlow removeObject
         * @property {proto.IFightFlowAddBuffer|null} [addBuffer] FightFlow addBuffer
         * @property {proto.IFightFlowUpdateBuffer|null} [updateBuffer] FightFlow updateBuffer
         * @property {proto.IFightFlowUseSkill|null} [useSkill] FightFlow useSkill
         * @property {proto.IFightFlowObjectDead|null} [objectDead] FightFlow objectDead
         * @property {proto.IFightFlowObjectRevive|null} [objectRevive] FightFlow objectRevive
         * @property {proto.IFightFlowDamage|null} [damage] FightFlow damage
         * @property {proto.IFightFlowStartRest|null} [startRest] FightFlow startRest
         * @property {proto.IFightFlowEndRest|null} [endRest] FightFlow endRest
         * @property {proto.IFightFlowMoveTo|null} [moveTo] FightFlow moveTo
         * @property {proto.IFightFlowEndFight|null} [endFight] FightFlow endFight
         * @property {proto.IFightFlowDrawLine|null} [drawLine] FightFlow drawLine
         * @property {proto.IFightFlowBufferHeal|null} [bufferHeal] FightFlow bufferHeal
         * @property {proto.IFightFlowUpdateHoldTime|null} [updateHoldTime] FightFlow updateHoldTime
         * @property {proto.IFightFlowMoveLineCircle|null} [moveLineCircle] FightFlow moveLineCircle
         */

        /**
         * Constructs a new FightFlow.
         * @memberof proto
         * @classdesc Represents a FightFlow.
         * @implements IFightFlow
         * @constructor
         * @param {proto.IFightFlow=} [p] Properties to set
         */
        function FightFlow(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * FightFlow timestamp.
         * @member {number} timestamp
         * @memberof proto.FightFlow
         * @instance
         */
        FightFlow.prototype.timestamp = 0;

        /**
         * FightFlow ev.
         * @member {proto.FightEvent} ev
         * @memberof proto.FightFlow
         * @instance
         */
        FightFlow.prototype.ev = 0;

        /**
         * FightFlow updateHP.
         * @member {proto.IFightFlowUpdateHP|null|undefined} updateHP
         * @memberof proto.FightFlow
         * @instance
         */
        FightFlow.prototype.updateHP = null;

        /**
         * FightFlow createHero.
         * @member {proto.IFightFlowCreateHero|null|undefined} createHero
         * @memberof proto.FightFlow
         * @instance
         */
        FightFlow.prototype.createHero = null;

        /**
         * FightFlow createBullet.
         * @member {proto.IFightFlowCreateBullet|null|undefined} createBullet
         * @memberof proto.FightFlow
         * @instance
         */
        FightFlow.prototype.createBullet = null;

        /**
         * FightFlow removeObject.
         * @member {proto.IFightFlowRemoveObject|null|undefined} removeObject
         * @memberof proto.FightFlow
         * @instance
         */
        FightFlow.prototype.removeObject = null;

        /**
         * FightFlow addBuffer.
         * @member {proto.IFightFlowAddBuffer|null|undefined} addBuffer
         * @memberof proto.FightFlow
         * @instance
         */
        FightFlow.prototype.addBuffer = null;

        /**
         * FightFlow updateBuffer.
         * @member {proto.IFightFlowUpdateBuffer|null|undefined} updateBuffer
         * @memberof proto.FightFlow
         * @instance
         */
        FightFlow.prototype.updateBuffer = null;

        /**
         * FightFlow useSkill.
         * @member {proto.IFightFlowUseSkill|null|undefined} useSkill
         * @memberof proto.FightFlow
         * @instance
         */
        FightFlow.prototype.useSkill = null;

        /**
         * FightFlow objectDead.
         * @member {proto.IFightFlowObjectDead|null|undefined} objectDead
         * @memberof proto.FightFlow
         * @instance
         */
        FightFlow.prototype.objectDead = null;

        /**
         * FightFlow objectRevive.
         * @member {proto.IFightFlowObjectRevive|null|undefined} objectRevive
         * @memberof proto.FightFlow
         * @instance
         */
        FightFlow.prototype.objectRevive = null;

        /**
         * FightFlow damage.
         * @member {proto.IFightFlowDamage|null|undefined} damage
         * @memberof proto.FightFlow
         * @instance
         */
        FightFlow.prototype.damage = null;

        /**
         * FightFlow startRest.
         * @member {proto.IFightFlowStartRest|null|undefined} startRest
         * @memberof proto.FightFlow
         * @instance
         */
        FightFlow.prototype.startRest = null;

        /**
         * FightFlow endRest.
         * @member {proto.IFightFlowEndRest|null|undefined} endRest
         * @memberof proto.FightFlow
         * @instance
         */
        FightFlow.prototype.endRest = null;

        /**
         * FightFlow moveTo.
         * @member {proto.IFightFlowMoveTo|null|undefined} moveTo
         * @memberof proto.FightFlow
         * @instance
         */
        FightFlow.prototype.moveTo = null;

        /**
         * FightFlow endFight.
         * @member {proto.IFightFlowEndFight|null|undefined} endFight
         * @memberof proto.FightFlow
         * @instance
         */
        FightFlow.prototype.endFight = null;

        /**
         * FightFlow drawLine.
         * @member {proto.IFightFlowDrawLine|null|undefined} drawLine
         * @memberof proto.FightFlow
         * @instance
         */
        FightFlow.prototype.drawLine = null;

        /**
         * FightFlow bufferHeal.
         * @member {proto.IFightFlowBufferHeal|null|undefined} bufferHeal
         * @memberof proto.FightFlow
         * @instance
         */
        FightFlow.prototype.bufferHeal = null;

        /**
         * FightFlow updateHoldTime.
         * @member {proto.IFightFlowUpdateHoldTime|null|undefined} updateHoldTime
         * @memberof proto.FightFlow
         * @instance
         */
        FightFlow.prototype.updateHoldTime = null;

        /**
         * FightFlow moveLineCircle.
         * @member {proto.IFightFlowMoveLineCircle|null|undefined} moveLineCircle
         * @memberof proto.FightFlow
         * @instance
         */
        FightFlow.prototype.moveLineCircle = null;

        // OneOf field names bound to virtual getters and setters
        var $oneOfFields;

        /**
         * FightFlow Event.
         * @member {"updateHP"|"createHero"|"createBullet"|"removeObject"|"addBuffer"|"updateBuffer"|"useSkill"|"objectDead"|"objectRevive"|"damage"|"startRest"|"endRest"|"moveTo"|"endFight"|"drawLine"|"bufferHeal"|"updateHoldTime"|"moveLineCircle"|undefined} Event
         * @memberof proto.FightFlow
         * @instance
         */
        Object.defineProperty(FightFlow.prototype, "Event", {
            get: $util.oneOfGetter($oneOfFields = ["updateHP", "createHero", "createBullet", "removeObject", "addBuffer", "updateBuffer", "useSkill", "objectDead", "objectRevive", "damage", "startRest", "endRest", "moveTo", "endFight", "drawLine", "bufferHeal", "updateHoldTime", "moveLineCircle"]),
            set: $util.oneOfSetter($oneOfFields)
        });

        /**
         * Encodes the specified FightFlow message. Does not implicitly {@link proto.FightFlow.verify|verify} messages.
         * @function encode
         * @memberof proto.FightFlow
         * @static
         * @param {proto.IFightFlow} m FightFlow message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        FightFlow.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.timestamp != null && Object.hasOwnProperty.call(m, "timestamp"))
                w.uint32(8).int32(m.timestamp);
            if (m.ev != null && Object.hasOwnProperty.call(m, "ev"))
                w.uint32(16).int32(m.ev);
            if (m.updateHP != null && Object.hasOwnProperty.call(m, "updateHP"))
                $root.proto.FightFlowUpdateHP.encode(m.updateHP, w.uint32(26).fork()).ldelim();
            if (m.createHero != null && Object.hasOwnProperty.call(m, "createHero"))
                $root.proto.FightFlowCreateHero.encode(m.createHero, w.uint32(34).fork()).ldelim();
            if (m.createBullet != null && Object.hasOwnProperty.call(m, "createBullet"))
                $root.proto.FightFlowCreateBullet.encode(m.createBullet, w.uint32(42).fork()).ldelim();
            if (m.removeObject != null && Object.hasOwnProperty.call(m, "removeObject"))
                $root.proto.FightFlowRemoveObject.encode(m.removeObject, w.uint32(50).fork()).ldelim();
            if (m.addBuffer != null && Object.hasOwnProperty.call(m, "addBuffer"))
                $root.proto.FightFlowAddBuffer.encode(m.addBuffer, w.uint32(58).fork()).ldelim();
            if (m.updateBuffer != null && Object.hasOwnProperty.call(m, "updateBuffer"))
                $root.proto.FightFlowUpdateBuffer.encode(m.updateBuffer, w.uint32(66).fork()).ldelim();
            if (m.useSkill != null && Object.hasOwnProperty.call(m, "useSkill"))
                $root.proto.FightFlowUseSkill.encode(m.useSkill, w.uint32(74).fork()).ldelim();
            if (m.objectDead != null && Object.hasOwnProperty.call(m, "objectDead"))
                $root.proto.FightFlowObjectDead.encode(m.objectDead, w.uint32(82).fork()).ldelim();
            if (m.objectRevive != null && Object.hasOwnProperty.call(m, "objectRevive"))
                $root.proto.FightFlowObjectRevive.encode(m.objectRevive, w.uint32(90).fork()).ldelim();
            if (m.damage != null && Object.hasOwnProperty.call(m, "damage"))
                $root.proto.FightFlowDamage.encode(m.damage, w.uint32(98).fork()).ldelim();
            if (m.startRest != null && Object.hasOwnProperty.call(m, "startRest"))
                $root.proto.FightFlowStartRest.encode(m.startRest, w.uint32(106).fork()).ldelim();
            if (m.endRest != null && Object.hasOwnProperty.call(m, "endRest"))
                $root.proto.FightFlowEndRest.encode(m.endRest, w.uint32(114).fork()).ldelim();
            if (m.moveTo != null && Object.hasOwnProperty.call(m, "moveTo"))
                $root.proto.FightFlowMoveTo.encode(m.moveTo, w.uint32(122).fork()).ldelim();
            if (m.endFight != null && Object.hasOwnProperty.call(m, "endFight"))
                $root.proto.FightFlowEndFight.encode(m.endFight, w.uint32(130).fork()).ldelim();
            if (m.drawLine != null && Object.hasOwnProperty.call(m, "drawLine"))
                $root.proto.FightFlowDrawLine.encode(m.drawLine, w.uint32(138).fork()).ldelim();
            if (m.bufferHeal != null && Object.hasOwnProperty.call(m, "bufferHeal"))
                $root.proto.FightFlowBufferHeal.encode(m.bufferHeal, w.uint32(146).fork()).ldelim();
            if (m.updateHoldTime != null && Object.hasOwnProperty.call(m, "updateHoldTime"))
                $root.proto.FightFlowUpdateHoldTime.encode(m.updateHoldTime, w.uint32(154).fork()).ldelim();
            if (m.moveLineCircle != null && Object.hasOwnProperty.call(m, "moveLineCircle"))
                $root.proto.FightFlowMoveLineCircle.encode(m.moveLineCircle, w.uint32(162).fork()).ldelim();
            return w;
        };

        /**
         * Decodes a FightFlow message from the specified reader or buffer.
         * @function decode
         * @memberof proto.FightFlow
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.FightFlow} FightFlow
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        FightFlow.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.FightFlow();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.timestamp = r.int32();
                    break;
                case 2:
                    m.ev = r.int32();
                    break;
                case 3:
                    m.updateHP = $root.proto.FightFlowUpdateHP.decode(r, r.uint32());
                    break;
                case 4:
                    m.createHero = $root.proto.FightFlowCreateHero.decode(r, r.uint32());
                    break;
                case 5:
                    m.createBullet = $root.proto.FightFlowCreateBullet.decode(r, r.uint32());
                    break;
                case 6:
                    m.removeObject = $root.proto.FightFlowRemoveObject.decode(r, r.uint32());
                    break;
                case 7:
                    m.addBuffer = $root.proto.FightFlowAddBuffer.decode(r, r.uint32());
                    break;
                case 8:
                    m.updateBuffer = $root.proto.FightFlowUpdateBuffer.decode(r, r.uint32());
                    break;
                case 9:
                    m.useSkill = $root.proto.FightFlowUseSkill.decode(r, r.uint32());
                    break;
                case 10:
                    m.objectDead = $root.proto.FightFlowObjectDead.decode(r, r.uint32());
                    break;
                case 11:
                    m.objectRevive = $root.proto.FightFlowObjectRevive.decode(r, r.uint32());
                    break;
                case 12:
                    m.damage = $root.proto.FightFlowDamage.decode(r, r.uint32());
                    break;
                case 13:
                    m.startRest = $root.proto.FightFlowStartRest.decode(r, r.uint32());
                    break;
                case 14:
                    m.endRest = $root.proto.FightFlowEndRest.decode(r, r.uint32());
                    break;
                case 15:
                    m.moveTo = $root.proto.FightFlowMoveTo.decode(r, r.uint32());
                    break;
                case 16:
                    m.endFight = $root.proto.FightFlowEndFight.decode(r, r.uint32());
                    break;
                case 17:
                    m.drawLine = $root.proto.FightFlowDrawLine.decode(r, r.uint32());
                    break;
                case 18:
                    m.bufferHeal = $root.proto.FightFlowBufferHeal.decode(r, r.uint32());
                    break;
                case 19:
                    m.updateHoldTime = $root.proto.FightFlowUpdateHoldTime.decode(r, r.uint32());
                    break;
                case 20:
                    m.moveLineCircle = $root.proto.FightFlowMoveLineCircle.decode(r, r.uint32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return FightFlow;
    })();

    proto.FightFlowUpdateHP = (function() {

        /**
         * Properties of a FightFlowUpdateHP.
         * @memberof proto
         * @interface IFightFlowUpdateHP
         * @property {number|null} [serial] FightFlowUpdateHP serial
         * @property {number|Long|null} [hp] FightFlowUpdateHP hp
         * @property {number|Long|null} [maxHp] FightFlowUpdateHP maxHp
         * @property {number|Long|null} [sheild] FightFlowUpdateHP sheild
         * @property {number|Long|null} [maxShield] FightFlowUpdateHP maxShield
         */

        /**
         * Constructs a new FightFlowUpdateHP.
         * @memberof proto
         * @classdesc Represents a FightFlowUpdateHP.
         * @implements IFightFlowUpdateHP
         * @constructor
         * @param {proto.IFightFlowUpdateHP=} [p] Properties to set
         */
        function FightFlowUpdateHP(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * FightFlowUpdateHP serial.
         * @member {number} serial
         * @memberof proto.FightFlowUpdateHP
         * @instance
         */
        FightFlowUpdateHP.prototype.serial = 0;

        /**
         * FightFlowUpdateHP hp.
         * @member {number|Long} hp
         * @memberof proto.FightFlowUpdateHP
         * @instance
         */
        FightFlowUpdateHP.prototype.hp = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

        /**
         * FightFlowUpdateHP maxHp.
         * @member {number|Long} maxHp
         * @memberof proto.FightFlowUpdateHP
         * @instance
         */
        FightFlowUpdateHP.prototype.maxHp = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

        /**
         * FightFlowUpdateHP sheild.
         * @member {number|Long} sheild
         * @memberof proto.FightFlowUpdateHP
         * @instance
         */
        FightFlowUpdateHP.prototype.sheild = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

        /**
         * FightFlowUpdateHP maxShield.
         * @member {number|Long} maxShield
         * @memberof proto.FightFlowUpdateHP
         * @instance
         */
        FightFlowUpdateHP.prototype.maxShield = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

        /**
         * Encodes the specified FightFlowUpdateHP message. Does not implicitly {@link proto.FightFlowUpdateHP.verify|verify} messages.
         * @function encode
         * @memberof proto.FightFlowUpdateHP
         * @static
         * @param {proto.IFightFlowUpdateHP} m FightFlowUpdateHP message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        FightFlowUpdateHP.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.serial != null && Object.hasOwnProperty.call(m, "serial"))
                w.uint32(8).int32(m.serial);
            if (m.hp != null && Object.hasOwnProperty.call(m, "hp"))
                w.uint32(16).int64(m.hp);
            if (m.maxHp != null && Object.hasOwnProperty.call(m, "maxHp"))
                w.uint32(24).int64(m.maxHp);
            if (m.sheild != null && Object.hasOwnProperty.call(m, "sheild"))
                w.uint32(32).int64(m.sheild);
            if (m.maxShield != null && Object.hasOwnProperty.call(m, "maxShield"))
                w.uint32(40).int64(m.maxShield);
            return w;
        };

        /**
         * Decodes a FightFlowUpdateHP message from the specified reader or buffer.
         * @function decode
         * @memberof proto.FightFlowUpdateHP
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.FightFlowUpdateHP} FightFlowUpdateHP
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        FightFlowUpdateHP.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.FightFlowUpdateHP();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.serial = r.int32();
                    break;
                case 2:
                    m.hp = r.int64();
                    break;
                case 3:
                    m.maxHp = r.int64();
                    break;
                case 4:
                    m.sheild = r.int64();
                    break;
                case 5:
                    m.maxShield = r.int64();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return FightFlowUpdateHP;
    })();

    proto.FightFlowCreateHero = (function() {

        /**
         * Properties of a FightFlowCreateHero.
         * @memberof proto
         * @interface IFightFlowCreateHero
         * @property {number|null} [serial] FightFlowCreateHero serial
         * @property {number|null} [group] FightFlowCreateHero group
         * @property {number|null} [x] FightFlowCreateHero x
         * @property {number|null} [y] FightFlowCreateHero y
         */

        /**
         * Constructs a new FightFlowCreateHero.
         * @memberof proto
         * @classdesc Represents a FightFlowCreateHero.
         * @implements IFightFlowCreateHero
         * @constructor
         * @param {proto.IFightFlowCreateHero=} [p] Properties to set
         */
        function FightFlowCreateHero(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * FightFlowCreateHero serial.
         * @member {number} serial
         * @memberof proto.FightFlowCreateHero
         * @instance
         */
        FightFlowCreateHero.prototype.serial = 0;

        /**
         * FightFlowCreateHero group.
         * @member {number} group
         * @memberof proto.FightFlowCreateHero
         * @instance
         */
        FightFlowCreateHero.prototype.group = 0;

        /**
         * FightFlowCreateHero x.
         * @member {number} x
         * @memberof proto.FightFlowCreateHero
         * @instance
         */
        FightFlowCreateHero.prototype.x = 0;

        /**
         * FightFlowCreateHero y.
         * @member {number} y
         * @memberof proto.FightFlowCreateHero
         * @instance
         */
        FightFlowCreateHero.prototype.y = 0;

        /**
         * Encodes the specified FightFlowCreateHero message. Does not implicitly {@link proto.FightFlowCreateHero.verify|verify} messages.
         * @function encode
         * @memberof proto.FightFlowCreateHero
         * @static
         * @param {proto.IFightFlowCreateHero} m FightFlowCreateHero message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        FightFlowCreateHero.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.serial != null && Object.hasOwnProperty.call(m, "serial"))
                w.uint32(8).int32(m.serial);
            if (m.group != null && Object.hasOwnProperty.call(m, "group"))
                w.uint32(16).int32(m.group);
            if (m.x != null && Object.hasOwnProperty.call(m, "x"))
                w.uint32(29).float(m.x);
            if (m.y != null && Object.hasOwnProperty.call(m, "y"))
                w.uint32(37).float(m.y);
            return w;
        };

        /**
         * Decodes a FightFlowCreateHero message from the specified reader or buffer.
         * @function decode
         * @memberof proto.FightFlowCreateHero
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.FightFlowCreateHero} FightFlowCreateHero
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        FightFlowCreateHero.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.FightFlowCreateHero();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.serial = r.int32();
                    break;
                case 2:
                    m.group = r.int32();
                    break;
                case 3:
                    m.x = r.float();
                    break;
                case 4:
                    m.y = r.float();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return FightFlowCreateHero;
    })();

    proto.FightFlowCreateBullet = (function() {

        /**
         * Properties of a FightFlowCreateBullet.
         * @memberof proto
         * @interface IFightFlowCreateBullet
         * @property {number|null} [serial] FightFlowCreateBullet serial
         * @property {number|null} [bulletId] FightFlowCreateBullet bulletId
         * @property {number|null} [group] FightFlowCreateBullet group
         * @property {number|null} [walkAnimId] FightFlowCreateBullet walkAnimId
         * @property {number|null} [x] FightFlowCreateBullet x
         * @property {number|null} [y] FightFlowCreateBullet y
         * @property {Array.<number>|null} [hitEffect] FightFlowCreateBullet hitEffect
         */

        /**
         * Constructs a new FightFlowCreateBullet.
         * @memberof proto
         * @classdesc Represents a FightFlowCreateBullet.
         * @implements IFightFlowCreateBullet
         * @constructor
         * @param {proto.IFightFlowCreateBullet=} [p] Properties to set
         */
        function FightFlowCreateBullet(p) {
            this.hitEffect = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * FightFlowCreateBullet serial.
         * @member {number} serial
         * @memberof proto.FightFlowCreateBullet
         * @instance
         */
        FightFlowCreateBullet.prototype.serial = 0;

        /**
         * FightFlowCreateBullet bulletId.
         * @member {number} bulletId
         * @memberof proto.FightFlowCreateBullet
         * @instance
         */
        FightFlowCreateBullet.prototype.bulletId = 0;

        /**
         * FightFlowCreateBullet group.
         * @member {number} group
         * @memberof proto.FightFlowCreateBullet
         * @instance
         */
        FightFlowCreateBullet.prototype.group = 0;

        /**
         * FightFlowCreateBullet walkAnimId.
         * @member {number} walkAnimId
         * @memberof proto.FightFlowCreateBullet
         * @instance
         */
        FightFlowCreateBullet.prototype.walkAnimId = 0;

        /**
         * FightFlowCreateBullet x.
         * @member {number} x
         * @memberof proto.FightFlowCreateBullet
         * @instance
         */
        FightFlowCreateBullet.prototype.x = 0;

        /**
         * FightFlowCreateBullet y.
         * @member {number} y
         * @memberof proto.FightFlowCreateBullet
         * @instance
         */
        FightFlowCreateBullet.prototype.y = 0;

        /**
         * FightFlowCreateBullet hitEffect.
         * @member {Array.<number>} hitEffect
         * @memberof proto.FightFlowCreateBullet
         * @instance
         */
        FightFlowCreateBullet.prototype.hitEffect = $util.emptyArray;

        /**
         * Encodes the specified FightFlowCreateBullet message. Does not implicitly {@link proto.FightFlowCreateBullet.verify|verify} messages.
         * @function encode
         * @memberof proto.FightFlowCreateBullet
         * @static
         * @param {proto.IFightFlowCreateBullet} m FightFlowCreateBullet message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        FightFlowCreateBullet.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.serial != null && Object.hasOwnProperty.call(m, "serial"))
                w.uint32(8).int32(m.serial);
            if (m.bulletId != null && Object.hasOwnProperty.call(m, "bulletId"))
                w.uint32(16).int32(m.bulletId);
            if (m.group != null && Object.hasOwnProperty.call(m, "group"))
                w.uint32(24).int32(m.group);
            if (m.walkAnimId != null && Object.hasOwnProperty.call(m, "walkAnimId"))
                w.uint32(32).int32(m.walkAnimId);
            if (m.x != null && Object.hasOwnProperty.call(m, "x"))
                w.uint32(45).float(m.x);
            if (m.y != null && Object.hasOwnProperty.call(m, "y"))
                w.uint32(53).float(m.y);
            if (m.hitEffect != null && m.hitEffect.length) {
                w.uint32(58).fork();
                for (var i = 0; i < m.hitEffect.length; ++i)
                    w.int32(m.hitEffect[i]);
                w.ldelim();
            }
            return w;
        };

        /**
         * Decodes a FightFlowCreateBullet message from the specified reader or buffer.
         * @function decode
         * @memberof proto.FightFlowCreateBullet
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.FightFlowCreateBullet} FightFlowCreateBullet
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        FightFlowCreateBullet.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.FightFlowCreateBullet();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.serial = r.int32();
                    break;
                case 2:
                    m.bulletId = r.int32();
                    break;
                case 3:
                    m.group = r.int32();
                    break;
                case 4:
                    m.walkAnimId = r.int32();
                    break;
                case 5:
                    m.x = r.float();
                    break;
                case 6:
                    m.y = r.float();
                    break;
                case 7:
                    if (!(m.hitEffect && m.hitEffect.length))
                        m.hitEffect = [];
                    if ((t & 7) === 2) {
                        var c2 = r.uint32() + r.pos;
                        while (r.pos < c2)
                            m.hitEffect.push(r.int32());
                    } else
                        m.hitEffect.push(r.int32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return FightFlowCreateBullet;
    })();

    proto.FightFlowRemoveObject = (function() {

        /**
         * Properties of a FightFlowRemoveObject.
         * @memberof proto
         * @interface IFightFlowRemoveObject
         * @property {number|null} [serial] FightFlowRemoveObject serial
         */

        /**
         * Constructs a new FightFlowRemoveObject.
         * @memberof proto
         * @classdesc Represents a FightFlowRemoveObject.
         * @implements IFightFlowRemoveObject
         * @constructor
         * @param {proto.IFightFlowRemoveObject=} [p] Properties to set
         */
        function FightFlowRemoveObject(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * FightFlowRemoveObject serial.
         * @member {number} serial
         * @memberof proto.FightFlowRemoveObject
         * @instance
         */
        FightFlowRemoveObject.prototype.serial = 0;

        /**
         * Encodes the specified FightFlowRemoveObject message. Does not implicitly {@link proto.FightFlowRemoveObject.verify|verify} messages.
         * @function encode
         * @memberof proto.FightFlowRemoveObject
         * @static
         * @param {proto.IFightFlowRemoveObject} m FightFlowRemoveObject message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        FightFlowRemoveObject.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.serial != null && Object.hasOwnProperty.call(m, "serial"))
                w.uint32(8).int32(m.serial);
            return w;
        };

        /**
         * Decodes a FightFlowRemoveObject message from the specified reader or buffer.
         * @function decode
         * @memberof proto.FightFlowRemoveObject
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.FightFlowRemoveObject} FightFlowRemoveObject
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        FightFlowRemoveObject.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.FightFlowRemoveObject();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.serial = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return FightFlowRemoveObject;
    })();

    proto.FightFlowAddBuffer = (function() {

        /**
         * Properties of a FightFlowAddBuffer.
         * @memberof proto
         * @interface IFightFlowAddBuffer
         * @property {number|null} [adder] FightFlowAddBuffer adder
         * @property {number|null} [owner] FightFlowAddBuffer owner
         * @property {number|null} [bufferId] FightFlowAddBuffer bufferId
         * @property {number|null} [index] FightFlowAddBuffer index
         * @property {number|null} [layer] FightFlowAddBuffer layer
         */

        /**
         * Constructs a new FightFlowAddBuffer.
         * @memberof proto
         * @classdesc Represents a FightFlowAddBuffer.
         * @implements IFightFlowAddBuffer
         * @constructor
         * @param {proto.IFightFlowAddBuffer=} [p] Properties to set
         */
        function FightFlowAddBuffer(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * FightFlowAddBuffer adder.
         * @member {number} adder
         * @memberof proto.FightFlowAddBuffer
         * @instance
         */
        FightFlowAddBuffer.prototype.adder = 0;

        /**
         * FightFlowAddBuffer owner.
         * @member {number} owner
         * @memberof proto.FightFlowAddBuffer
         * @instance
         */
        FightFlowAddBuffer.prototype.owner = 0;

        /**
         * FightFlowAddBuffer bufferId.
         * @member {number} bufferId
         * @memberof proto.FightFlowAddBuffer
         * @instance
         */
        FightFlowAddBuffer.prototype.bufferId = 0;

        /**
         * FightFlowAddBuffer index.
         * @member {number} index
         * @memberof proto.FightFlowAddBuffer
         * @instance
         */
        FightFlowAddBuffer.prototype.index = 0;

        /**
         * FightFlowAddBuffer layer.
         * @member {number} layer
         * @memberof proto.FightFlowAddBuffer
         * @instance
         */
        FightFlowAddBuffer.prototype.layer = 0;

        /**
         * Encodes the specified FightFlowAddBuffer message. Does not implicitly {@link proto.FightFlowAddBuffer.verify|verify} messages.
         * @function encode
         * @memberof proto.FightFlowAddBuffer
         * @static
         * @param {proto.IFightFlowAddBuffer} m FightFlowAddBuffer message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        FightFlowAddBuffer.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.adder != null && Object.hasOwnProperty.call(m, "adder"))
                w.uint32(8).int32(m.adder);
            if (m.owner != null && Object.hasOwnProperty.call(m, "owner"))
                w.uint32(16).int32(m.owner);
            if (m.bufferId != null && Object.hasOwnProperty.call(m, "bufferId"))
                w.uint32(24).int32(m.bufferId);
            if (m.index != null && Object.hasOwnProperty.call(m, "index"))
                w.uint32(32).int32(m.index);
            if (m.layer != null && Object.hasOwnProperty.call(m, "layer"))
                w.uint32(40).int32(m.layer);
            return w;
        };

        /**
         * Decodes a FightFlowAddBuffer message from the specified reader or buffer.
         * @function decode
         * @memberof proto.FightFlowAddBuffer
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.FightFlowAddBuffer} FightFlowAddBuffer
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        FightFlowAddBuffer.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.FightFlowAddBuffer();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.adder = r.int32();
                    break;
                case 2:
                    m.owner = r.int32();
                    break;
                case 3:
                    m.bufferId = r.int32();
                    break;
                case 4:
                    m.index = r.int32();
                    break;
                case 5:
                    m.layer = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return FightFlowAddBuffer;
    })();

    proto.FightFlowUpdateBuffer = (function() {

        /**
         * Properties of a FightFlowUpdateBuffer.
         * @memberof proto
         * @interface IFightFlowUpdateBuffer
         * @property {number|null} [owner] FightFlowUpdateBuffer owner
         * @property {number|null} [index] FightFlowUpdateBuffer index
         * @property {number|null} [layer] FightFlowUpdateBuffer layer
         */

        /**
         * Constructs a new FightFlowUpdateBuffer.
         * @memberof proto
         * @classdesc Represents a FightFlowUpdateBuffer.
         * @implements IFightFlowUpdateBuffer
         * @constructor
         * @param {proto.IFightFlowUpdateBuffer=} [p] Properties to set
         */
        function FightFlowUpdateBuffer(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * FightFlowUpdateBuffer owner.
         * @member {number} owner
         * @memberof proto.FightFlowUpdateBuffer
         * @instance
         */
        FightFlowUpdateBuffer.prototype.owner = 0;

        /**
         * FightFlowUpdateBuffer index.
         * @member {number} index
         * @memberof proto.FightFlowUpdateBuffer
         * @instance
         */
        FightFlowUpdateBuffer.prototype.index = 0;

        /**
         * FightFlowUpdateBuffer layer.
         * @member {number} layer
         * @memberof proto.FightFlowUpdateBuffer
         * @instance
         */
        FightFlowUpdateBuffer.prototype.layer = 0;

        /**
         * Encodes the specified FightFlowUpdateBuffer message. Does not implicitly {@link proto.FightFlowUpdateBuffer.verify|verify} messages.
         * @function encode
         * @memberof proto.FightFlowUpdateBuffer
         * @static
         * @param {proto.IFightFlowUpdateBuffer} m FightFlowUpdateBuffer message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        FightFlowUpdateBuffer.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.owner != null && Object.hasOwnProperty.call(m, "owner"))
                w.uint32(8).int32(m.owner);
            if (m.index != null && Object.hasOwnProperty.call(m, "index"))
                w.uint32(16).int32(m.index);
            if (m.layer != null && Object.hasOwnProperty.call(m, "layer"))
                w.uint32(24).int32(m.layer);
            return w;
        };

        /**
         * Decodes a FightFlowUpdateBuffer message from the specified reader or buffer.
         * @function decode
         * @memberof proto.FightFlowUpdateBuffer
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.FightFlowUpdateBuffer} FightFlowUpdateBuffer
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        FightFlowUpdateBuffer.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.FightFlowUpdateBuffer();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.owner = r.int32();
                    break;
                case 2:
                    m.index = r.int32();
                    break;
                case 3:
                    m.layer = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return FightFlowUpdateBuffer;
    })();

    proto.FightFlowUseSkill = (function() {

        /**
         * Properties of a FightFlowUseSkill.
         * @memberof proto
         * @interface IFightFlowUseSkill
         * @property {number|null} [skillId] FightFlowUseSkill skillId
         * @property {number|null} [attacker] FightFlowUseSkill attacker
         * @property {number|null} [actionId] FightFlowUseSkill actionId
         * @property {number|null} [attackSpeed] FightFlowUseSkill attackSpeed
         * @property {number|null} [attackCount] FightFlowUseSkill attackCount
         */

        /**
         * Constructs a new FightFlowUseSkill.
         * @memberof proto
         * @classdesc Represents a FightFlowUseSkill.
         * @implements IFightFlowUseSkill
         * @constructor
         * @param {proto.IFightFlowUseSkill=} [p] Properties to set
         */
        function FightFlowUseSkill(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * FightFlowUseSkill skillId.
         * @member {number} skillId
         * @memberof proto.FightFlowUseSkill
         * @instance
         */
        FightFlowUseSkill.prototype.skillId = 0;

        /**
         * FightFlowUseSkill attacker.
         * @member {number} attacker
         * @memberof proto.FightFlowUseSkill
         * @instance
         */
        FightFlowUseSkill.prototype.attacker = 0;

        /**
         * FightFlowUseSkill actionId.
         * @member {number} actionId
         * @memberof proto.FightFlowUseSkill
         * @instance
         */
        FightFlowUseSkill.prototype.actionId = 0;

        /**
         * FightFlowUseSkill attackSpeed.
         * @member {number} attackSpeed
         * @memberof proto.FightFlowUseSkill
         * @instance
         */
        FightFlowUseSkill.prototype.attackSpeed = 0;

        /**
         * FightFlowUseSkill attackCount.
         * @member {number} attackCount
         * @memberof proto.FightFlowUseSkill
         * @instance
         */
        FightFlowUseSkill.prototype.attackCount = 0;

        /**
         * Encodes the specified FightFlowUseSkill message. Does not implicitly {@link proto.FightFlowUseSkill.verify|verify} messages.
         * @function encode
         * @memberof proto.FightFlowUseSkill
         * @static
         * @param {proto.IFightFlowUseSkill} m FightFlowUseSkill message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        FightFlowUseSkill.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.skillId != null && Object.hasOwnProperty.call(m, "skillId"))
                w.uint32(8).int32(m.skillId);
            if (m.attacker != null && Object.hasOwnProperty.call(m, "attacker"))
                w.uint32(16).int32(m.attacker);
            if (m.actionId != null && Object.hasOwnProperty.call(m, "actionId"))
                w.uint32(24).int32(m.actionId);
            if (m.attackSpeed != null && Object.hasOwnProperty.call(m, "attackSpeed"))
                w.uint32(32).int32(m.attackSpeed);
            if (m.attackCount != null && Object.hasOwnProperty.call(m, "attackCount"))
                w.uint32(40).int32(m.attackCount);
            return w;
        };

        /**
         * Decodes a FightFlowUseSkill message from the specified reader or buffer.
         * @function decode
         * @memberof proto.FightFlowUseSkill
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.FightFlowUseSkill} FightFlowUseSkill
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        FightFlowUseSkill.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.FightFlowUseSkill();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.skillId = r.int32();
                    break;
                case 2:
                    m.attacker = r.int32();
                    break;
                case 3:
                    m.actionId = r.int32();
                    break;
                case 4:
                    m.attackSpeed = r.int32();
                    break;
                case 5:
                    m.attackCount = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return FightFlowUseSkill;
    })();

    proto.FightFlowObjectDead = (function() {

        /**
         * Properties of a FightFlowObjectDead.
         * @memberof proto
         * @interface IFightFlowObjectDead
         * @property {proto.IFightFlowUpdateHP|null} [hp] FightFlowObjectDead hp
         */

        /**
         * Constructs a new FightFlowObjectDead.
         * @memberof proto
         * @classdesc Represents a FightFlowObjectDead.
         * @implements IFightFlowObjectDead
         * @constructor
         * @param {proto.IFightFlowObjectDead=} [p] Properties to set
         */
        function FightFlowObjectDead(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * FightFlowObjectDead hp.
         * @member {proto.IFightFlowUpdateHP|null|undefined} hp
         * @memberof proto.FightFlowObjectDead
         * @instance
         */
        FightFlowObjectDead.prototype.hp = null;

        /**
         * Encodes the specified FightFlowObjectDead message. Does not implicitly {@link proto.FightFlowObjectDead.verify|verify} messages.
         * @function encode
         * @memberof proto.FightFlowObjectDead
         * @static
         * @param {proto.IFightFlowObjectDead} m FightFlowObjectDead message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        FightFlowObjectDead.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.hp != null && Object.hasOwnProperty.call(m, "hp"))
                $root.proto.FightFlowUpdateHP.encode(m.hp, w.uint32(10).fork()).ldelim();
            return w;
        };

        /**
         * Decodes a FightFlowObjectDead message from the specified reader or buffer.
         * @function decode
         * @memberof proto.FightFlowObjectDead
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.FightFlowObjectDead} FightFlowObjectDead
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        FightFlowObjectDead.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.FightFlowObjectDead();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.hp = $root.proto.FightFlowUpdateHP.decode(r, r.uint32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return FightFlowObjectDead;
    })();

    proto.FightFlowObjectRevive = (function() {

        /**
         * Properties of a FightFlowObjectRevive.
         * @memberof proto
         * @interface IFightFlowObjectRevive
         * @property {proto.IFightFlowUpdateHP|null} [hp] FightFlowObjectRevive hp
         */

        /**
         * Constructs a new FightFlowObjectRevive.
         * @memberof proto
         * @classdesc Represents a FightFlowObjectRevive.
         * @implements IFightFlowObjectRevive
         * @constructor
         * @param {proto.IFightFlowObjectRevive=} [p] Properties to set
         */
        function FightFlowObjectRevive(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * FightFlowObjectRevive hp.
         * @member {proto.IFightFlowUpdateHP|null|undefined} hp
         * @memberof proto.FightFlowObjectRevive
         * @instance
         */
        FightFlowObjectRevive.prototype.hp = null;

        /**
         * Encodes the specified FightFlowObjectRevive message. Does not implicitly {@link proto.FightFlowObjectRevive.verify|verify} messages.
         * @function encode
         * @memberof proto.FightFlowObjectRevive
         * @static
         * @param {proto.IFightFlowObjectRevive} m FightFlowObjectRevive message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        FightFlowObjectRevive.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.hp != null && Object.hasOwnProperty.call(m, "hp"))
                $root.proto.FightFlowUpdateHP.encode(m.hp, w.uint32(10).fork()).ldelim();
            return w;
        };

        /**
         * Decodes a FightFlowObjectRevive message from the specified reader or buffer.
         * @function decode
         * @memberof proto.FightFlowObjectRevive
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.FightFlowObjectRevive} FightFlowObjectRevive
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        FightFlowObjectRevive.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.FightFlowObjectRevive();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.hp = $root.proto.FightFlowUpdateHP.decode(r, r.uint32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return FightFlowObjectRevive;
    })();

    proto.FightFlowDamage = (function() {

        /**
         * Properties of a FightFlowDamage.
         * @memberof proto
         * @interface IFightFlowDamage
         * @property {number|null} [attacker] FightFlowDamage attacker
         * @property {number|null} [target] FightFlowDamage target
         * @property {number|null} [bulletSerial] FightFlowDamage bulletSerial
         * @property {number|Long|null} [damage] FightFlowDamage damage
         * @property {number|Long|null} [shieldDamage] FightFlowDamage shieldDamage
         * @property {boolean|null} [isCritical] FightFlowDamage isCritical
         * @property {boolean|null} [isFatalAtk] FightFlowDamage isFatalAtk
         * @property {boolean|null} [isDivulse] FightFlowDamage isDivulse
         */

        /**
         * Constructs a new FightFlowDamage.
         * @memberof proto
         * @classdesc Represents a FightFlowDamage.
         * @implements IFightFlowDamage
         * @constructor
         * @param {proto.IFightFlowDamage=} [p] Properties to set
         */
        function FightFlowDamage(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * FightFlowDamage attacker.
         * @member {number} attacker
         * @memberof proto.FightFlowDamage
         * @instance
         */
        FightFlowDamage.prototype.attacker = 0;

        /**
         * FightFlowDamage target.
         * @member {number} target
         * @memberof proto.FightFlowDamage
         * @instance
         */
        FightFlowDamage.prototype.target = 0;

        /**
         * FightFlowDamage bulletSerial.
         * @member {number} bulletSerial
         * @memberof proto.FightFlowDamage
         * @instance
         */
        FightFlowDamage.prototype.bulletSerial = 0;

        /**
         * FightFlowDamage damage.
         * @member {number|Long} damage
         * @memberof proto.FightFlowDamage
         * @instance
         */
        FightFlowDamage.prototype.damage = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

        /**
         * FightFlowDamage shieldDamage.
         * @member {number|Long} shieldDamage
         * @memberof proto.FightFlowDamage
         * @instance
         */
        FightFlowDamage.prototype.shieldDamage = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

        /**
         * FightFlowDamage isCritical.
         * @member {boolean} isCritical
         * @memberof proto.FightFlowDamage
         * @instance
         */
        FightFlowDamage.prototype.isCritical = false;

        /**
         * FightFlowDamage isFatalAtk.
         * @member {boolean} isFatalAtk
         * @memberof proto.FightFlowDamage
         * @instance
         */
        FightFlowDamage.prototype.isFatalAtk = false;

        /**
         * FightFlowDamage isDivulse.
         * @member {boolean} isDivulse
         * @memberof proto.FightFlowDamage
         * @instance
         */
        FightFlowDamage.prototype.isDivulse = false;

        /**
         * Encodes the specified FightFlowDamage message. Does not implicitly {@link proto.FightFlowDamage.verify|verify} messages.
         * @function encode
         * @memberof proto.FightFlowDamage
         * @static
         * @param {proto.IFightFlowDamage} m FightFlowDamage message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        FightFlowDamage.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.attacker != null && Object.hasOwnProperty.call(m, "attacker"))
                w.uint32(8).int32(m.attacker);
            if (m.target != null && Object.hasOwnProperty.call(m, "target"))
                w.uint32(16).int32(m.target);
            if (m.bulletSerial != null && Object.hasOwnProperty.call(m, "bulletSerial"))
                w.uint32(24).int32(m.bulletSerial);
            if (m.damage != null && Object.hasOwnProperty.call(m, "damage"))
                w.uint32(32).int64(m.damage);
            if (m.shieldDamage != null && Object.hasOwnProperty.call(m, "shieldDamage"))
                w.uint32(40).int64(m.shieldDamage);
            if (m.isCritical != null && Object.hasOwnProperty.call(m, "isCritical"))
                w.uint32(48).bool(m.isCritical);
            if (m.isFatalAtk != null && Object.hasOwnProperty.call(m, "isFatalAtk"))
                w.uint32(56).bool(m.isFatalAtk);
            if (m.isDivulse != null && Object.hasOwnProperty.call(m, "isDivulse"))
                w.uint32(64).bool(m.isDivulse);
            return w;
        };

        /**
         * Decodes a FightFlowDamage message from the specified reader or buffer.
         * @function decode
         * @memberof proto.FightFlowDamage
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.FightFlowDamage} FightFlowDamage
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        FightFlowDamage.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.FightFlowDamage();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.attacker = r.int32();
                    break;
                case 2:
                    m.target = r.int32();
                    break;
                case 3:
                    m.bulletSerial = r.int32();
                    break;
                case 4:
                    m.damage = r.int64();
                    break;
                case 5:
                    m.shieldDamage = r.int64();
                    break;
                case 6:
                    m.isCritical = r.bool();
                    break;
                case 7:
                    m.isFatalAtk = r.bool();
                    break;
                case 8:
                    m.isDivulse = r.bool();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return FightFlowDamage;
    })();

    proto.FightFlowStartRest = (function() {

        /**
         * Properties of a FightFlowStartRest.
         * @memberof proto
         * @interface IFightFlowStartRest
         * @property {number|null} [serial] FightFlowStartRest serial
         * @property {number|null} [restTime] FightFlowStartRest restTime
         */

        /**
         * Constructs a new FightFlowStartRest.
         * @memberof proto
         * @classdesc Represents a FightFlowStartRest.
         * @implements IFightFlowStartRest
         * @constructor
         * @param {proto.IFightFlowStartRest=} [p] Properties to set
         */
        function FightFlowStartRest(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * FightFlowStartRest serial.
         * @member {number} serial
         * @memberof proto.FightFlowStartRest
         * @instance
         */
        FightFlowStartRest.prototype.serial = 0;

        /**
         * FightFlowStartRest restTime.
         * @member {number} restTime
         * @memberof proto.FightFlowStartRest
         * @instance
         */
        FightFlowStartRest.prototype.restTime = 0;

        /**
         * Encodes the specified FightFlowStartRest message. Does not implicitly {@link proto.FightFlowStartRest.verify|verify} messages.
         * @function encode
         * @memberof proto.FightFlowStartRest
         * @static
         * @param {proto.IFightFlowStartRest} m FightFlowStartRest message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        FightFlowStartRest.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.serial != null && Object.hasOwnProperty.call(m, "serial"))
                w.uint32(8).int32(m.serial);
            if (m.restTime != null && Object.hasOwnProperty.call(m, "restTime"))
                w.uint32(16).int32(m.restTime);
            return w;
        };

        /**
         * Decodes a FightFlowStartRest message from the specified reader or buffer.
         * @function decode
         * @memberof proto.FightFlowStartRest
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.FightFlowStartRest} FightFlowStartRest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        FightFlowStartRest.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.FightFlowStartRest();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.serial = r.int32();
                    break;
                case 2:
                    m.restTime = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return FightFlowStartRest;
    })();

    proto.FightFlowEndRest = (function() {

        /**
         * Properties of a FightFlowEndRest.
         * @memberof proto
         * @interface IFightFlowEndRest
         * @property {number|null} [serial] FightFlowEndRest serial
         * @property {number|null} [attackCount] FightFlowEndRest attackCount
         */

        /**
         * Constructs a new FightFlowEndRest.
         * @memberof proto
         * @classdesc Represents a FightFlowEndRest.
         * @implements IFightFlowEndRest
         * @constructor
         * @param {proto.IFightFlowEndRest=} [p] Properties to set
         */
        function FightFlowEndRest(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * FightFlowEndRest serial.
         * @member {number} serial
         * @memberof proto.FightFlowEndRest
         * @instance
         */
        FightFlowEndRest.prototype.serial = 0;

        /**
         * FightFlowEndRest attackCount.
         * @member {number} attackCount
         * @memberof proto.FightFlowEndRest
         * @instance
         */
        FightFlowEndRest.prototype.attackCount = 0;

        /**
         * Encodes the specified FightFlowEndRest message. Does not implicitly {@link proto.FightFlowEndRest.verify|verify} messages.
         * @function encode
         * @memberof proto.FightFlowEndRest
         * @static
         * @param {proto.IFightFlowEndRest} m FightFlowEndRest message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        FightFlowEndRest.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.serial != null && Object.hasOwnProperty.call(m, "serial"))
                w.uint32(8).int32(m.serial);
            if (m.attackCount != null && Object.hasOwnProperty.call(m, "attackCount"))
                w.uint32(16).int32(m.attackCount);
            return w;
        };

        /**
         * Decodes a FightFlowEndRest message from the specified reader or buffer.
         * @function decode
         * @memberof proto.FightFlowEndRest
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.FightFlowEndRest} FightFlowEndRest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        FightFlowEndRest.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.FightFlowEndRest();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.serial = r.int32();
                    break;
                case 2:
                    m.attackCount = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return FightFlowEndRest;
    })();

    proto.FightFlowMoveTo = (function() {

        /**
         * Properties of a FightFlowMoveTo.
         * @memberof proto
         * @interface IFightFlowMoveTo
         * @property {number|null} [serial] FightFlowMoveTo serial
         * @property {number|null} [x] FightFlowMoveTo x
         * @property {number|null} [y] FightFlowMoveTo y
         * @property {number|null} [dx] FightFlowMoveTo dx
         * @property {number|null} [dy] FightFlowMoveTo dy
         * @property {number|null} [speed] FightFlowMoveTo speed
         */

        /**
         * Constructs a new FightFlowMoveTo.
         * @memberof proto
         * @classdesc Represents a FightFlowMoveTo.
         * @implements IFightFlowMoveTo
         * @constructor
         * @param {proto.IFightFlowMoveTo=} [p] Properties to set
         */
        function FightFlowMoveTo(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * FightFlowMoveTo serial.
         * @member {number} serial
         * @memberof proto.FightFlowMoveTo
         * @instance
         */
        FightFlowMoveTo.prototype.serial = 0;

        /**
         * FightFlowMoveTo x.
         * @member {number} x
         * @memberof proto.FightFlowMoveTo
         * @instance
         */
        FightFlowMoveTo.prototype.x = 0;

        /**
         * FightFlowMoveTo y.
         * @member {number} y
         * @memberof proto.FightFlowMoveTo
         * @instance
         */
        FightFlowMoveTo.prototype.y = 0;

        /**
         * FightFlowMoveTo dx.
         * @member {number} dx
         * @memberof proto.FightFlowMoveTo
         * @instance
         */
        FightFlowMoveTo.prototype.dx = 0;

        /**
         * FightFlowMoveTo dy.
         * @member {number} dy
         * @memberof proto.FightFlowMoveTo
         * @instance
         */
        FightFlowMoveTo.prototype.dy = 0;

        /**
         * FightFlowMoveTo speed.
         * @member {number} speed
         * @memberof proto.FightFlowMoveTo
         * @instance
         */
        FightFlowMoveTo.prototype.speed = 0;

        /**
         * Encodes the specified FightFlowMoveTo message. Does not implicitly {@link proto.FightFlowMoveTo.verify|verify} messages.
         * @function encode
         * @memberof proto.FightFlowMoveTo
         * @static
         * @param {proto.IFightFlowMoveTo} m FightFlowMoveTo message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        FightFlowMoveTo.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.serial != null && Object.hasOwnProperty.call(m, "serial"))
                w.uint32(8).int32(m.serial);
            if (m.x != null && Object.hasOwnProperty.call(m, "x"))
                w.uint32(21).float(m.x);
            if (m.y != null && Object.hasOwnProperty.call(m, "y"))
                w.uint32(29).float(m.y);
            if (m.dx != null && Object.hasOwnProperty.call(m, "dx"))
                w.uint32(37).float(m.dx);
            if (m.dy != null && Object.hasOwnProperty.call(m, "dy"))
                w.uint32(45).float(m.dy);
            if (m.speed != null && Object.hasOwnProperty.call(m, "speed"))
                w.uint32(53).float(m.speed);
            return w;
        };

        /**
         * Decodes a FightFlowMoveTo message from the specified reader or buffer.
         * @function decode
         * @memberof proto.FightFlowMoveTo
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.FightFlowMoveTo} FightFlowMoveTo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        FightFlowMoveTo.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.FightFlowMoveTo();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.serial = r.int32();
                    break;
                case 2:
                    m.x = r.float();
                    break;
                case 3:
                    m.y = r.float();
                    break;
                case 4:
                    m.dx = r.float();
                    break;
                case 5:
                    m.dy = r.float();
                    break;
                case 6:
                    m.speed = r.float();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return FightFlowMoveTo;
    })();

    proto.FightFlowEndFight = (function() {

        /**
         * Properties of a FightFlowEndFight.
         * @memberof proto
         * @interface IFightFlowEndFight
         * @property {number|null} [result] FightFlowEndFight result
         */

        /**
         * Constructs a new FightFlowEndFight.
         * @memberof proto
         * @classdesc Represents a FightFlowEndFight.
         * @implements IFightFlowEndFight
         * @constructor
         * @param {proto.IFightFlowEndFight=} [p] Properties to set
         */
        function FightFlowEndFight(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * FightFlowEndFight result.
         * @member {number} result
         * @memberof proto.FightFlowEndFight
         * @instance
         */
        FightFlowEndFight.prototype.result = 0;

        /**
         * Encodes the specified FightFlowEndFight message. Does not implicitly {@link proto.FightFlowEndFight.verify|verify} messages.
         * @function encode
         * @memberof proto.FightFlowEndFight
         * @static
         * @param {proto.IFightFlowEndFight} m FightFlowEndFight message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        FightFlowEndFight.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.result != null && Object.hasOwnProperty.call(m, "result"))
                w.uint32(8).int32(m.result);
            return w;
        };

        /**
         * Decodes a FightFlowEndFight message from the specified reader or buffer.
         * @function decode
         * @memberof proto.FightFlowEndFight
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.FightFlowEndFight} FightFlowEndFight
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        FightFlowEndFight.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.FightFlowEndFight();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.result = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return FightFlowEndFight;
    })();

    proto.FightFlowDrawLine = (function() {

        /**
         * Properties of a FightFlowDrawLine.
         * @memberof proto
         * @interface IFightFlowDrawLine
         * @property {number|null} [serial] FightFlowDrawLine serial
         * @property {Array.<number>|null} [points] FightFlowDrawLine points
         */

        /**
         * Constructs a new FightFlowDrawLine.
         * @memberof proto
         * @classdesc Represents a FightFlowDrawLine.
         * @implements IFightFlowDrawLine
         * @constructor
         * @param {proto.IFightFlowDrawLine=} [p] Properties to set
         */
        function FightFlowDrawLine(p) {
            this.points = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * FightFlowDrawLine serial.
         * @member {number} serial
         * @memberof proto.FightFlowDrawLine
         * @instance
         */
        FightFlowDrawLine.prototype.serial = 0;

        /**
         * FightFlowDrawLine points.
         * @member {Array.<number>} points
         * @memberof proto.FightFlowDrawLine
         * @instance
         */
        FightFlowDrawLine.prototype.points = $util.emptyArray;

        /**
         * Encodes the specified FightFlowDrawLine message. Does not implicitly {@link proto.FightFlowDrawLine.verify|verify} messages.
         * @function encode
         * @memberof proto.FightFlowDrawLine
         * @static
         * @param {proto.IFightFlowDrawLine} m FightFlowDrawLine message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        FightFlowDrawLine.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.serial != null && Object.hasOwnProperty.call(m, "serial"))
                w.uint32(8).int32(m.serial);
            if (m.points != null && m.points.length) {
                w.uint32(18).fork();
                for (var i = 0; i < m.points.length; ++i)
                    w.float(m.points[i]);
                w.ldelim();
            }
            return w;
        };

        /**
         * Decodes a FightFlowDrawLine message from the specified reader or buffer.
         * @function decode
         * @memberof proto.FightFlowDrawLine
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.FightFlowDrawLine} FightFlowDrawLine
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        FightFlowDrawLine.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.FightFlowDrawLine();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.serial = r.int32();
                    break;
                case 2:
                    if (!(m.points && m.points.length))
                        m.points = [];
                    if ((t & 7) === 2) {
                        var c2 = r.uint32() + r.pos;
                        while (r.pos < c2)
                            m.points.push(r.float());
                    } else
                        m.points.push(r.float());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return FightFlowDrawLine;
    })();

    proto.FightFlowBufferHeal = (function() {

        /**
         * Properties of a FightFlowBufferHeal.
         * @memberof proto
         * @interface IFightFlowBufferHeal
         * @property {number|null} [serial] FightFlowBufferHeal serial
         * @property {number|Long|null} [healHp] FightFlowBufferHeal healHp
         * @property {number|null} [bufferIndex] FightFlowBufferHeal bufferIndex
         */

        /**
         * Constructs a new FightFlowBufferHeal.
         * @memberof proto
         * @classdesc Represents a FightFlowBufferHeal.
         * @implements IFightFlowBufferHeal
         * @constructor
         * @param {proto.IFightFlowBufferHeal=} [p] Properties to set
         */
        function FightFlowBufferHeal(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * FightFlowBufferHeal serial.
         * @member {number} serial
         * @memberof proto.FightFlowBufferHeal
         * @instance
         */
        FightFlowBufferHeal.prototype.serial = 0;

        /**
         * FightFlowBufferHeal healHp.
         * @member {number|Long} healHp
         * @memberof proto.FightFlowBufferHeal
         * @instance
         */
        FightFlowBufferHeal.prototype.healHp = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

        /**
         * FightFlowBufferHeal bufferIndex.
         * @member {number} bufferIndex
         * @memberof proto.FightFlowBufferHeal
         * @instance
         */
        FightFlowBufferHeal.prototype.bufferIndex = 0;

        /**
         * Encodes the specified FightFlowBufferHeal message. Does not implicitly {@link proto.FightFlowBufferHeal.verify|verify} messages.
         * @function encode
         * @memberof proto.FightFlowBufferHeal
         * @static
         * @param {proto.IFightFlowBufferHeal} m FightFlowBufferHeal message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        FightFlowBufferHeal.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.serial != null && Object.hasOwnProperty.call(m, "serial"))
                w.uint32(8).int32(m.serial);
            if (m.healHp != null && Object.hasOwnProperty.call(m, "healHp"))
                w.uint32(16).int64(m.healHp);
            if (m.bufferIndex != null && Object.hasOwnProperty.call(m, "bufferIndex"))
                w.uint32(24).int32(m.bufferIndex);
            return w;
        };

        /**
         * Decodes a FightFlowBufferHeal message from the specified reader or buffer.
         * @function decode
         * @memberof proto.FightFlowBufferHeal
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.FightFlowBufferHeal} FightFlowBufferHeal
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        FightFlowBufferHeal.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.FightFlowBufferHeal();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.serial = r.int32();
                    break;
                case 2:
                    m.healHp = r.int64();
                    break;
                case 3:
                    m.bufferIndex = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return FightFlowBufferHeal;
    })();

    proto.FightFlowUpdateHoldTime = (function() {

        /**
         * Properties of a FightFlowUpdateHoldTime.
         * @memberof proto
         * @interface IFightFlowUpdateHoldTime
         * @property {number|null} [serial] FightFlowUpdateHoldTime serial
         * @property {number|null} [holdTime] FightFlowUpdateHoldTime holdTime
         */

        /**
         * Constructs a new FightFlowUpdateHoldTime.
         * @memberof proto
         * @classdesc Represents a FightFlowUpdateHoldTime.
         * @implements IFightFlowUpdateHoldTime
         * @constructor
         * @param {proto.IFightFlowUpdateHoldTime=} [p] Properties to set
         */
        function FightFlowUpdateHoldTime(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * FightFlowUpdateHoldTime serial.
         * @member {number} serial
         * @memberof proto.FightFlowUpdateHoldTime
         * @instance
         */
        FightFlowUpdateHoldTime.prototype.serial = 0;

        /**
         * FightFlowUpdateHoldTime holdTime.
         * @member {number} holdTime
         * @memberof proto.FightFlowUpdateHoldTime
         * @instance
         */
        FightFlowUpdateHoldTime.prototype.holdTime = 0;

        /**
         * Encodes the specified FightFlowUpdateHoldTime message. Does not implicitly {@link proto.FightFlowUpdateHoldTime.verify|verify} messages.
         * @function encode
         * @memberof proto.FightFlowUpdateHoldTime
         * @static
         * @param {proto.IFightFlowUpdateHoldTime} m FightFlowUpdateHoldTime message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        FightFlowUpdateHoldTime.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.serial != null && Object.hasOwnProperty.call(m, "serial"))
                w.uint32(8).int32(m.serial);
            if (m.holdTime != null && Object.hasOwnProperty.call(m, "holdTime"))
                w.uint32(16).int32(m.holdTime);
            return w;
        };

        /**
         * Decodes a FightFlowUpdateHoldTime message from the specified reader or buffer.
         * @function decode
         * @memberof proto.FightFlowUpdateHoldTime
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.FightFlowUpdateHoldTime} FightFlowUpdateHoldTime
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        FightFlowUpdateHoldTime.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.FightFlowUpdateHoldTime();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.serial = r.int32();
                    break;
                case 2:
                    m.holdTime = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return FightFlowUpdateHoldTime;
    })();

    proto.FightFlowMoveLineCircle = (function() {

        /**
         * Properties of a FightFlowMoveLineCircle.
         * @memberof proto
         * @interface IFightFlowMoveLineCircle
         * @property {number|null} [serial] FightFlowMoveLineCircle serial
         * @property {number|null} [x] FightFlowMoveLineCircle x
         * @property {number|null} [y] FightFlowMoveLineCircle y
         * @property {number|null} [dx] FightFlowMoveLineCircle dx
         * @property {number|null} [dy] FightFlowMoveLineCircle dy
         * @property {number|null} [speed] FightFlowMoveLineCircle speed
         * @property {number|null} [angle] FightFlowMoveLineCircle angle
         */

        /**
         * Constructs a new FightFlowMoveLineCircle.
         * @memberof proto
         * @classdesc Represents a FightFlowMoveLineCircle.
         * @implements IFightFlowMoveLineCircle
         * @constructor
         * @param {proto.IFightFlowMoveLineCircle=} [p] Properties to set
         */
        function FightFlowMoveLineCircle(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * FightFlowMoveLineCircle serial.
         * @member {number} serial
         * @memberof proto.FightFlowMoveLineCircle
         * @instance
         */
        FightFlowMoveLineCircle.prototype.serial = 0;

        /**
         * FightFlowMoveLineCircle x.
         * @member {number} x
         * @memberof proto.FightFlowMoveLineCircle
         * @instance
         */
        FightFlowMoveLineCircle.prototype.x = 0;

        /**
         * FightFlowMoveLineCircle y.
         * @member {number} y
         * @memberof proto.FightFlowMoveLineCircle
         * @instance
         */
        FightFlowMoveLineCircle.prototype.y = 0;

        /**
         * FightFlowMoveLineCircle dx.
         * @member {number} dx
         * @memberof proto.FightFlowMoveLineCircle
         * @instance
         */
        FightFlowMoveLineCircle.prototype.dx = 0;

        /**
         * FightFlowMoveLineCircle dy.
         * @member {number} dy
         * @memberof proto.FightFlowMoveLineCircle
         * @instance
         */
        FightFlowMoveLineCircle.prototype.dy = 0;

        /**
         * FightFlowMoveLineCircle speed.
         * @member {number} speed
         * @memberof proto.FightFlowMoveLineCircle
         * @instance
         */
        FightFlowMoveLineCircle.prototype.speed = 0;

        /**
         * FightFlowMoveLineCircle angle.
         * @member {number} angle
         * @memberof proto.FightFlowMoveLineCircle
         * @instance
         */
        FightFlowMoveLineCircle.prototype.angle = 0;

        /**
         * Encodes the specified FightFlowMoveLineCircle message. Does not implicitly {@link proto.FightFlowMoveLineCircle.verify|verify} messages.
         * @function encode
         * @memberof proto.FightFlowMoveLineCircle
         * @static
         * @param {proto.IFightFlowMoveLineCircle} m FightFlowMoveLineCircle message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        FightFlowMoveLineCircle.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.serial != null && Object.hasOwnProperty.call(m, "serial"))
                w.uint32(8).int32(m.serial);
            if (m.x != null && Object.hasOwnProperty.call(m, "x"))
                w.uint32(21).float(m.x);
            if (m.y != null && Object.hasOwnProperty.call(m, "y"))
                w.uint32(29).float(m.y);
            if (m.dx != null && Object.hasOwnProperty.call(m, "dx"))
                w.uint32(37).float(m.dx);
            if (m.dy != null && Object.hasOwnProperty.call(m, "dy"))
                w.uint32(45).float(m.dy);
            if (m.speed != null && Object.hasOwnProperty.call(m, "speed"))
                w.uint32(53).float(m.speed);
            if (m.angle != null && Object.hasOwnProperty.call(m, "angle"))
                w.uint32(61).float(m.angle);
            return w;
        };

        /**
         * Decodes a FightFlowMoveLineCircle message from the specified reader or buffer.
         * @function decode
         * @memberof proto.FightFlowMoveLineCircle
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.FightFlowMoveLineCircle} FightFlowMoveLineCircle
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        FightFlowMoveLineCircle.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.FightFlowMoveLineCircle();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.serial = r.int32();
                    break;
                case 2:
                    m.x = r.float();
                    break;
                case 3:
                    m.y = r.float();
                    break;
                case 4:
                    m.dx = r.float();
                    break;
                case 5:
                    m.dy = r.float();
                    break;
                case 6:
                    m.speed = r.float();
                    break;
                case 7:
                    m.angle = r.float();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return FightFlowMoveLineCircle;
    })();

    proto.FightPvP = (function() {

        /**
         * Properties of a FightPvP.
         * @memberof proto
         * @interface IFightPvP
         * @property {Array.<proto.IMsg_PvPFightInfo>|null} [fightInfo] FightPvP fightInfo
         * @property {Array.<proto.IFightFlow>|null} [fightFlow] FightPvP fightFlow
         */

        /**
         * Constructs a new FightPvP.
         * @memberof proto
         * @classdesc Represents a FightPvP.
         * @implements IFightPvP
         * @constructor
         * @param {proto.IFightPvP=} [p] Properties to set
         */
        function FightPvP(p) {
            this.fightInfo = [];
            this.fightFlow = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * FightPvP fightInfo.
         * @member {Array.<proto.IMsg_PvPFightInfo>} fightInfo
         * @memberof proto.FightPvP
         * @instance
         */
        FightPvP.prototype.fightInfo = $util.emptyArray;

        /**
         * FightPvP fightFlow.
         * @member {Array.<proto.IFightFlow>} fightFlow
         * @memberof proto.FightPvP
         * @instance
         */
        FightPvP.prototype.fightFlow = $util.emptyArray;

        /**
         * Encodes the specified FightPvP message. Does not implicitly {@link proto.FightPvP.verify|verify} messages.
         * @function encode
         * @memberof proto.FightPvP
         * @static
         * @param {proto.IFightPvP} m FightPvP message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        FightPvP.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.fightInfo != null && m.fightInfo.length) {
                for (var i = 0; i < m.fightInfo.length; ++i)
                    $root.proto.Msg_PvPFightInfo.encode(m.fightInfo[i], w.uint32(10).fork()).ldelim();
            }
            if (m.fightFlow != null && m.fightFlow.length) {
                for (var i = 0; i < m.fightFlow.length; ++i)
                    $root.proto.FightFlow.encode(m.fightFlow[i], w.uint32(18).fork()).ldelim();
            }
            return w;
        };

        /**
         * Decodes a FightPvP message from the specified reader or buffer.
         * @function decode
         * @memberof proto.FightPvP
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.FightPvP} FightPvP
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        FightPvP.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.FightPvP();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.fightInfo && m.fightInfo.length))
                        m.fightInfo = [];
                    m.fightInfo.push($root.proto.Msg_PvPFightInfo.decode(r, r.uint32()));
                    break;
                case 2:
                    if (!(m.fightFlow && m.fightFlow.length))
                        m.fightFlow = [];
                    m.fightFlow.push($root.proto.FightFlow.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return FightPvP;
    })();

    proto.Msg_PvPFightInfo = (function() {

        /**
         * Properties of a Msg_PvPFightInfo.
         * @memberof proto
         * @interface IMsg_PvPFightInfo
         * @property {proto.IFightInfo|null} [fightInfo] Msg_PvPFightInfo fightInfo
         * @property {string|null} [roleId] Msg_PvPFightInfo roleId
         * @property {Array.<number>|null} [books] Msg_PvPFightInfo books
         * @property {number|null} [questLevel] Msg_PvPFightInfo questLevel
         */

        /**
         * Constructs a new Msg_PvPFightInfo.
         * @memberof proto
         * @classdesc Represents a Msg_PvPFightInfo.
         * @implements IMsg_PvPFightInfo
         * @constructor
         * @param {proto.IMsg_PvPFightInfo=} [p] Properties to set
         */
        function Msg_PvPFightInfo(p) {
            this.books = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_PvPFightInfo fightInfo.
         * @member {proto.IFightInfo|null|undefined} fightInfo
         * @memberof proto.Msg_PvPFightInfo
         * @instance
         */
        Msg_PvPFightInfo.prototype.fightInfo = null;

        /**
         * Msg_PvPFightInfo roleId.
         * @member {string} roleId
         * @memberof proto.Msg_PvPFightInfo
         * @instance
         */
        Msg_PvPFightInfo.prototype.roleId = "";

        /**
         * Msg_PvPFightInfo books.
         * @member {Array.<number>} books
         * @memberof proto.Msg_PvPFightInfo
         * @instance
         */
        Msg_PvPFightInfo.prototype.books = $util.emptyArray;

        /**
         * Msg_PvPFightInfo questLevel.
         * @member {number} questLevel
         * @memberof proto.Msg_PvPFightInfo
         * @instance
         */
        Msg_PvPFightInfo.prototype.questLevel = 0;

        /**
         * Encodes the specified Msg_PvPFightInfo message. Does not implicitly {@link proto.Msg_PvPFightInfo.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_PvPFightInfo
         * @static
         * @param {proto.IMsg_PvPFightInfo} m Msg_PvPFightInfo message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_PvPFightInfo.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.fightInfo != null && Object.hasOwnProperty.call(m, "fightInfo"))
                $root.proto.FightInfo.encode(m.fightInfo, w.uint32(10).fork()).ldelim();
            if (m.roleId != null && Object.hasOwnProperty.call(m, "roleId"))
                w.uint32(18).string(m.roleId);
            if (m.books != null && m.books.length) {
                w.uint32(26).fork();
                for (var i = 0; i < m.books.length; ++i)
                    w.int32(m.books[i]);
                w.ldelim();
            }
            if (m.questLevel != null && Object.hasOwnProperty.call(m, "questLevel"))
                w.uint32(32).int32(m.questLevel);
            return w;
        };

        /**
         * Decodes a Msg_PvPFightInfo message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_PvPFightInfo
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_PvPFightInfo} Msg_PvPFightInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_PvPFightInfo.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_PvPFightInfo();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.fightInfo = $root.proto.FightInfo.decode(r, r.uint32());
                    break;
                case 2:
                    m.roleId = r.string();
                    break;
                case 3:
                    if (!(m.books && m.books.length))
                        m.books = [];
                    if ((t & 7) === 2) {
                        var c2 = r.uint32() + r.pos;
                        while (r.pos < c2)
                            m.books.push(r.int32());
                    } else
                        m.books.push(r.int32());
                    break;
                case 4:
                    m.questLevel = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_PvPFightInfo;
    })();

    proto.Msg_GetFincaBattleInfoReq = (function() {

        /**
         * Properties of a Msg_GetFincaBattleInfoReq.
         * @memberof proto
         * @interface IMsg_GetFincaBattleInfoReq
         */

        /**
         * Constructs a new Msg_GetFincaBattleInfoReq.
         * @memberof proto
         * @classdesc Represents a Msg_GetFincaBattleInfoReq.
         * @implements IMsg_GetFincaBattleInfoReq
         * @constructor
         * @param {proto.IMsg_GetFincaBattleInfoReq=} [p] Properties to set
         */
        function Msg_GetFincaBattleInfoReq(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Encodes the specified Msg_GetFincaBattleInfoReq message. Does not implicitly {@link proto.Msg_GetFincaBattleInfoReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_GetFincaBattleInfoReq
         * @static
         * @param {proto.IMsg_GetFincaBattleInfoReq} m Msg_GetFincaBattleInfoReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_GetFincaBattleInfoReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };

        /**
         * Decodes a Msg_GetFincaBattleInfoReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_GetFincaBattleInfoReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_GetFincaBattleInfoReq} Msg_GetFincaBattleInfoReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_GetFincaBattleInfoReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_GetFincaBattleInfoReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_GetFincaBattleInfoReq;
    })();

    proto.Msg_GetFincaBattleInfoRsp = (function() {

        /**
         * Properties of a Msg_GetFincaBattleInfoRsp.
         * @memberof proto
         * @interface IMsg_GetFincaBattleInfoRsp
         * @property {Array.<number|Long>|null} [heroIds] Msg_GetFincaBattleInfoRsp heroIds
         * @property {Array.<number>|null} [bookItemIds] Msg_GetFincaBattleInfoRsp bookItemIds
         * @property {number|null} [freeFightTimes] Msg_GetFincaBattleInfoRsp freeFightTimes
         * @property {number|null} [score] Msg_GetFincaBattleInfoRsp score
         */

        /**
         * Constructs a new Msg_GetFincaBattleInfoRsp.
         * @memberof proto
         * @classdesc Represents a Msg_GetFincaBattleInfoRsp.
         * @implements IMsg_GetFincaBattleInfoRsp
         * @constructor
         * @param {proto.IMsg_GetFincaBattleInfoRsp=} [p] Properties to set
         */
        function Msg_GetFincaBattleInfoRsp(p) {
            this.heroIds = [];
            this.bookItemIds = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_GetFincaBattleInfoRsp heroIds.
         * @member {Array.<number|Long>} heroIds
         * @memberof proto.Msg_GetFincaBattleInfoRsp
         * @instance
         */
        Msg_GetFincaBattleInfoRsp.prototype.heroIds = $util.emptyArray;

        /**
         * Msg_GetFincaBattleInfoRsp bookItemIds.
         * @member {Array.<number>} bookItemIds
         * @memberof proto.Msg_GetFincaBattleInfoRsp
         * @instance
         */
        Msg_GetFincaBattleInfoRsp.prototype.bookItemIds = $util.emptyArray;

        /**
         * Msg_GetFincaBattleInfoRsp freeFightTimes.
         * @member {number} freeFightTimes
         * @memberof proto.Msg_GetFincaBattleInfoRsp
         * @instance
         */
        Msg_GetFincaBattleInfoRsp.prototype.freeFightTimes = 0;

        /**
         * Msg_GetFincaBattleInfoRsp score.
         * @member {number} score
         * @memberof proto.Msg_GetFincaBattleInfoRsp
         * @instance
         */
        Msg_GetFincaBattleInfoRsp.prototype.score = 0;

        /**
         * Encodes the specified Msg_GetFincaBattleInfoRsp message. Does not implicitly {@link proto.Msg_GetFincaBattleInfoRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_GetFincaBattleInfoRsp
         * @static
         * @param {proto.IMsg_GetFincaBattleInfoRsp} m Msg_GetFincaBattleInfoRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_GetFincaBattleInfoRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.heroIds != null && m.heroIds.length) {
                w.uint32(10).fork();
                for (var i = 0; i < m.heroIds.length; ++i)
                    w.int64(m.heroIds[i]);
                w.ldelim();
            }
            if (m.bookItemIds != null && m.bookItemIds.length) {
                w.uint32(18).fork();
                for (var i = 0; i < m.bookItemIds.length; ++i)
                    w.int32(m.bookItemIds[i]);
                w.ldelim();
            }
            if (m.freeFightTimes != null && Object.hasOwnProperty.call(m, "freeFightTimes"))
                w.uint32(24).int32(m.freeFightTimes);
            if (m.score != null && Object.hasOwnProperty.call(m, "score"))
                w.uint32(32).int32(m.score);
            return w;
        };

        /**
         * Decodes a Msg_GetFincaBattleInfoRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_GetFincaBattleInfoRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_GetFincaBattleInfoRsp} Msg_GetFincaBattleInfoRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_GetFincaBattleInfoRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_GetFincaBattleInfoRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.heroIds && m.heroIds.length))
                        m.heroIds = [];
                    if ((t & 7) === 2) {
                        var c2 = r.uint32() + r.pos;
                        while (r.pos < c2)
                            m.heroIds.push(r.int64());
                    } else
                        m.heroIds.push(r.int64());
                    break;
                case 2:
                    if (!(m.bookItemIds && m.bookItemIds.length))
                        m.bookItemIds = [];
                    if ((t & 7) === 2) {
                        var c2 = r.uint32() + r.pos;
                        while (r.pos < c2)
                            m.bookItemIds.push(r.int32());
                    } else
                        m.bookItemIds.push(r.int32());
                    break;
                case 3:
                    m.freeFightTimes = r.int32();
                    break;
                case 4:
                    m.score = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_GetFincaBattleInfoRsp;
    })();

    proto.Msg_FincaBattleFightReq = (function() {

        /**
         * Properties of a Msg_FincaBattleFightReq.
         * @memberof proto
         * @interface IMsg_FincaBattleFightReq
         * @property {string|null} [opponentRoleId] Msg_FincaBattleFightReq opponentRoleId
         * @property {boolean|null} [isSweep] Msg_FincaBattleFightReq isSweep
         */

        /**
         * Constructs a new Msg_FincaBattleFightReq.
         * @memberof proto
         * @classdesc Represents a Msg_FincaBattleFightReq.
         * @implements IMsg_FincaBattleFightReq
         * @constructor
         * @param {proto.IMsg_FincaBattleFightReq=} [p] Properties to set
         */
        function Msg_FincaBattleFightReq(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_FincaBattleFightReq opponentRoleId.
         * @member {string} opponentRoleId
         * @memberof proto.Msg_FincaBattleFightReq
         * @instance
         */
        Msg_FincaBattleFightReq.prototype.opponentRoleId = "";

        /**
         * Msg_FincaBattleFightReq isSweep.
         * @member {boolean} isSweep
         * @memberof proto.Msg_FincaBattleFightReq
         * @instance
         */
        Msg_FincaBattleFightReq.prototype.isSweep = false;

        /**
         * Encodes the specified Msg_FincaBattleFightReq message. Does not implicitly {@link proto.Msg_FincaBattleFightReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_FincaBattleFightReq
         * @static
         * @param {proto.IMsg_FincaBattleFightReq} m Msg_FincaBattleFightReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_FincaBattleFightReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.opponentRoleId != null && Object.hasOwnProperty.call(m, "opponentRoleId"))
                w.uint32(10).string(m.opponentRoleId);
            if (m.isSweep != null && Object.hasOwnProperty.call(m, "isSweep"))
                w.uint32(16).bool(m.isSweep);
            return w;
        };

        /**
         * Decodes a Msg_FincaBattleFightReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_FincaBattleFightReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_FincaBattleFightReq} Msg_FincaBattleFightReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_FincaBattleFightReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_FincaBattleFightReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.opponentRoleId = r.string();
                    break;
                case 2:
                    m.isSweep = r.bool();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_FincaBattleFightReq;
    })();

    proto.Msg_FincaBattleFightRsp = (function() {

        /**
         * Properties of a Msg_FincaBattleFightRsp.
         * @memberof proto
         * @interface IMsg_FincaBattleFightRsp
         * @property {proto.ICommonError|null} [error] Msg_FincaBattleFightRsp error
         * @property {string|null} [opponentRoleId] Msg_FincaBattleFightRsp opponentRoleId
         * @property {boolean|null} [isSweep] Msg_FincaBattleFightRsp isSweep
         * @property {number|null} [freeFightTimes] Msg_FincaBattleFightRsp freeFightTimes
         * @property {number|Long|null} [changeScore] Msg_FincaBattleFightRsp changeScore
         * @property {Uint8Array|null} [recording] Msg_FincaBattleFightRsp recording
         * @property {Array.<proto.IItem>|null} [rewards] Msg_FincaBattleFightRsp rewards
         * @property {number|Long|null} [newScore] Msg_FincaBattleFightRsp newScore
         */

        /**
         * Constructs a new Msg_FincaBattleFightRsp.
         * @memberof proto
         * @classdesc Represents a Msg_FincaBattleFightRsp.
         * @implements IMsg_FincaBattleFightRsp
         * @constructor
         * @param {proto.IMsg_FincaBattleFightRsp=} [p] Properties to set
         */
        function Msg_FincaBattleFightRsp(p) {
            this.rewards = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_FincaBattleFightRsp error.
         * @member {proto.ICommonError|null|undefined} error
         * @memberof proto.Msg_FincaBattleFightRsp
         * @instance
         */
        Msg_FincaBattleFightRsp.prototype.error = null;

        /**
         * Msg_FincaBattleFightRsp opponentRoleId.
         * @member {string} opponentRoleId
         * @memberof proto.Msg_FincaBattleFightRsp
         * @instance
         */
        Msg_FincaBattleFightRsp.prototype.opponentRoleId = "";

        /**
         * Msg_FincaBattleFightRsp isSweep.
         * @member {boolean} isSweep
         * @memberof proto.Msg_FincaBattleFightRsp
         * @instance
         */
        Msg_FincaBattleFightRsp.prototype.isSweep = false;

        /**
         * Msg_FincaBattleFightRsp freeFightTimes.
         * @member {number} freeFightTimes
         * @memberof proto.Msg_FincaBattleFightRsp
         * @instance
         */
        Msg_FincaBattleFightRsp.prototype.freeFightTimes = 0;

        /**
         * Msg_FincaBattleFightRsp changeScore.
         * @member {number|Long} changeScore
         * @memberof proto.Msg_FincaBattleFightRsp
         * @instance
         */
        Msg_FincaBattleFightRsp.prototype.changeScore = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

        /**
         * Msg_FincaBattleFightRsp recording.
         * @member {Uint8Array} recording
         * @memberof proto.Msg_FincaBattleFightRsp
         * @instance
         */
        Msg_FincaBattleFightRsp.prototype.recording = $util.newBuffer([]);

        /**
         * Msg_FincaBattleFightRsp rewards.
         * @member {Array.<proto.IItem>} rewards
         * @memberof proto.Msg_FincaBattleFightRsp
         * @instance
         */
        Msg_FincaBattleFightRsp.prototype.rewards = $util.emptyArray;

        /**
         * Msg_FincaBattleFightRsp newScore.
         * @member {number|Long} newScore
         * @memberof proto.Msg_FincaBattleFightRsp
         * @instance
         */
        Msg_FincaBattleFightRsp.prototype.newScore = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

        /**
         * Encodes the specified Msg_FincaBattleFightRsp message. Does not implicitly {@link proto.Msg_FincaBattleFightRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_FincaBattleFightRsp
         * @static
         * @param {proto.IMsg_FincaBattleFightRsp} m Msg_FincaBattleFightRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_FincaBattleFightRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.error != null && Object.hasOwnProperty.call(m, "error"))
                $root.proto.CommonError.encode(m.error, w.uint32(10).fork()).ldelim();
            if (m.opponentRoleId != null && Object.hasOwnProperty.call(m, "opponentRoleId"))
                w.uint32(18).string(m.opponentRoleId);
            if (m.isSweep != null && Object.hasOwnProperty.call(m, "isSweep"))
                w.uint32(24).bool(m.isSweep);
            if (m.freeFightTimes != null && Object.hasOwnProperty.call(m, "freeFightTimes"))
                w.uint32(32).int32(m.freeFightTimes);
            if (m.changeScore != null && Object.hasOwnProperty.call(m, "changeScore"))
                w.uint32(40).int64(m.changeScore);
            if (m.recording != null && Object.hasOwnProperty.call(m, "recording"))
                w.uint32(50).bytes(m.recording);
            if (m.rewards != null && m.rewards.length) {
                for (var i = 0; i < m.rewards.length; ++i)
                    $root.proto.Item.encode(m.rewards[i], w.uint32(58).fork()).ldelim();
            }
            if (m.newScore != null && Object.hasOwnProperty.call(m, "newScore"))
                w.uint32(64).int64(m.newScore);
            return w;
        };

        /**
         * Decodes a Msg_FincaBattleFightRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_FincaBattleFightRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_FincaBattleFightRsp} Msg_FincaBattleFightRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_FincaBattleFightRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_FincaBattleFightRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.error = $root.proto.CommonError.decode(r, r.uint32());
                    break;
                case 2:
                    m.opponentRoleId = r.string();
                    break;
                case 3:
                    m.isSweep = r.bool();
                    break;
                case 4:
                    m.freeFightTimes = r.int32();
                    break;
                case 5:
                    m.changeScore = r.int64();
                    break;
                case 6:
                    m.recording = r.bytes();
                    break;
                case 7:
                    if (!(m.rewards && m.rewards.length))
                        m.rewards = [];
                    m.rewards.push($root.proto.Item.decode(r, r.uint32()));
                    break;
                case 8:
                    m.newScore = r.int64();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_FincaBattleFightRsp;
    })();

    proto.Msg_SetFincaBattleHeroIdsReq = (function() {

        /**
         * Properties of a Msg_SetFincaBattleHeroIdsReq.
         * @memberof proto
         * @interface IMsg_SetFincaBattleHeroIdsReq
         * @property {Array.<number|Long>|null} [heroIds] Msg_SetFincaBattleHeroIdsReq heroIds
         */

        /**
         * Constructs a new Msg_SetFincaBattleHeroIdsReq.
         * @memberof proto
         * @classdesc Represents a Msg_SetFincaBattleHeroIdsReq.
         * @implements IMsg_SetFincaBattleHeroIdsReq
         * @constructor
         * @param {proto.IMsg_SetFincaBattleHeroIdsReq=} [p] Properties to set
         */
        function Msg_SetFincaBattleHeroIdsReq(p) {
            this.heroIds = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_SetFincaBattleHeroIdsReq heroIds.
         * @member {Array.<number|Long>} heroIds
         * @memberof proto.Msg_SetFincaBattleHeroIdsReq
         * @instance
         */
        Msg_SetFincaBattleHeroIdsReq.prototype.heroIds = $util.emptyArray;

        /**
         * Encodes the specified Msg_SetFincaBattleHeroIdsReq message. Does not implicitly {@link proto.Msg_SetFincaBattleHeroIdsReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_SetFincaBattleHeroIdsReq
         * @static
         * @param {proto.IMsg_SetFincaBattleHeroIdsReq} m Msg_SetFincaBattleHeroIdsReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_SetFincaBattleHeroIdsReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.heroIds != null && m.heroIds.length) {
                w.uint32(10).fork();
                for (var i = 0; i < m.heroIds.length; ++i)
                    w.int64(m.heroIds[i]);
                w.ldelim();
            }
            return w;
        };

        /**
         * Decodes a Msg_SetFincaBattleHeroIdsReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_SetFincaBattleHeroIdsReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_SetFincaBattleHeroIdsReq} Msg_SetFincaBattleHeroIdsReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_SetFincaBattleHeroIdsReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_SetFincaBattleHeroIdsReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.heroIds && m.heroIds.length))
                        m.heroIds = [];
                    if ((t & 7) === 2) {
                        var c2 = r.uint32() + r.pos;
                        while (r.pos < c2)
                            m.heroIds.push(r.int64());
                    } else
                        m.heroIds.push(r.int64());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_SetFincaBattleHeroIdsReq;
    })();

    proto.Msg_SetFincaBattleHeroIdsRsp = (function() {

        /**
         * Properties of a Msg_SetFincaBattleHeroIdsRsp.
         * @memberof proto
         * @interface IMsg_SetFincaBattleHeroIdsRsp
         * @property {proto.ICommonError|null} [error] Msg_SetFincaBattleHeroIdsRsp error
         * @property {Array.<number|Long>|null} [heroIds] Msg_SetFincaBattleHeroIdsRsp heroIds
         */

        /**
         * Constructs a new Msg_SetFincaBattleHeroIdsRsp.
         * @memberof proto
         * @classdesc Represents a Msg_SetFincaBattleHeroIdsRsp.
         * @implements IMsg_SetFincaBattleHeroIdsRsp
         * @constructor
         * @param {proto.IMsg_SetFincaBattleHeroIdsRsp=} [p] Properties to set
         */
        function Msg_SetFincaBattleHeroIdsRsp(p) {
            this.heroIds = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_SetFincaBattleHeroIdsRsp error.
         * @member {proto.ICommonError|null|undefined} error
         * @memberof proto.Msg_SetFincaBattleHeroIdsRsp
         * @instance
         */
        Msg_SetFincaBattleHeroIdsRsp.prototype.error = null;

        /**
         * Msg_SetFincaBattleHeroIdsRsp heroIds.
         * @member {Array.<number|Long>} heroIds
         * @memberof proto.Msg_SetFincaBattleHeroIdsRsp
         * @instance
         */
        Msg_SetFincaBattleHeroIdsRsp.prototype.heroIds = $util.emptyArray;

        /**
         * Encodes the specified Msg_SetFincaBattleHeroIdsRsp message. Does not implicitly {@link proto.Msg_SetFincaBattleHeroIdsRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_SetFincaBattleHeroIdsRsp
         * @static
         * @param {proto.IMsg_SetFincaBattleHeroIdsRsp} m Msg_SetFincaBattleHeroIdsRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_SetFincaBattleHeroIdsRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.error != null && Object.hasOwnProperty.call(m, "error"))
                $root.proto.CommonError.encode(m.error, w.uint32(10).fork()).ldelim();
            if (m.heroIds != null && m.heroIds.length) {
                w.uint32(18).fork();
                for (var i = 0; i < m.heroIds.length; ++i)
                    w.int64(m.heroIds[i]);
                w.ldelim();
            }
            return w;
        };

        /**
         * Decodes a Msg_SetFincaBattleHeroIdsRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_SetFincaBattleHeroIdsRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_SetFincaBattleHeroIdsRsp} Msg_SetFincaBattleHeroIdsRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_SetFincaBattleHeroIdsRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_SetFincaBattleHeroIdsRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.error = $root.proto.CommonError.decode(r, r.uint32());
                    break;
                case 2:
                    if (!(m.heroIds && m.heroIds.length))
                        m.heroIds = [];
                    if ((t & 7) === 2) {
                        var c2 = r.uint32() + r.pos;
                        while (r.pos < c2)
                            m.heroIds.push(r.int64());
                    } else
                        m.heroIds.push(r.int64());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_SetFincaBattleHeroIdsRsp;
    })();

    proto.Msg_SetFincaBattleBookIdsReq = (function() {

        /**
         * Properties of a Msg_SetFincaBattleBookIdsReq.
         * @memberof proto
         * @interface IMsg_SetFincaBattleBookIdsReq
         * @property {Array.<number>|null} [bookItemIds] Msg_SetFincaBattleBookIdsReq bookItemIds
         */

        /**
         * Constructs a new Msg_SetFincaBattleBookIdsReq.
         * @memberof proto
         * @classdesc Represents a Msg_SetFincaBattleBookIdsReq.
         * @implements IMsg_SetFincaBattleBookIdsReq
         * @constructor
         * @param {proto.IMsg_SetFincaBattleBookIdsReq=} [p] Properties to set
         */
        function Msg_SetFincaBattleBookIdsReq(p) {
            this.bookItemIds = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_SetFincaBattleBookIdsReq bookItemIds.
         * @member {Array.<number>} bookItemIds
         * @memberof proto.Msg_SetFincaBattleBookIdsReq
         * @instance
         */
        Msg_SetFincaBattleBookIdsReq.prototype.bookItemIds = $util.emptyArray;

        /**
         * Encodes the specified Msg_SetFincaBattleBookIdsReq message. Does not implicitly {@link proto.Msg_SetFincaBattleBookIdsReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_SetFincaBattleBookIdsReq
         * @static
         * @param {proto.IMsg_SetFincaBattleBookIdsReq} m Msg_SetFincaBattleBookIdsReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_SetFincaBattleBookIdsReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.bookItemIds != null && m.bookItemIds.length) {
                w.uint32(10).fork();
                for (var i = 0; i < m.bookItemIds.length; ++i)
                    w.int32(m.bookItemIds[i]);
                w.ldelim();
            }
            return w;
        };

        /**
         * Decodes a Msg_SetFincaBattleBookIdsReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_SetFincaBattleBookIdsReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_SetFincaBattleBookIdsReq} Msg_SetFincaBattleBookIdsReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_SetFincaBattleBookIdsReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_SetFincaBattleBookIdsReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.bookItemIds && m.bookItemIds.length))
                        m.bookItemIds = [];
                    if ((t & 7) === 2) {
                        var c2 = r.uint32() + r.pos;
                        while (r.pos < c2)
                            m.bookItemIds.push(r.int32());
                    } else
                        m.bookItemIds.push(r.int32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_SetFincaBattleBookIdsReq;
    })();

    proto.Msg_SetFincaBattleBookIdsRsp = (function() {

        /**
         * Properties of a Msg_SetFincaBattleBookIdsRsp.
         * @memberof proto
         * @interface IMsg_SetFincaBattleBookIdsRsp
         * @property {proto.ICommonError|null} [error] Msg_SetFincaBattleBookIdsRsp error
         * @property {Array.<number>|null} [bookItemIds] Msg_SetFincaBattleBookIdsRsp bookItemIds
         */

        /**
         * Constructs a new Msg_SetFincaBattleBookIdsRsp.
         * @memberof proto
         * @classdesc Represents a Msg_SetFincaBattleBookIdsRsp.
         * @implements IMsg_SetFincaBattleBookIdsRsp
         * @constructor
         * @param {proto.IMsg_SetFincaBattleBookIdsRsp=} [p] Properties to set
         */
        function Msg_SetFincaBattleBookIdsRsp(p) {
            this.bookItemIds = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_SetFincaBattleBookIdsRsp error.
         * @member {proto.ICommonError|null|undefined} error
         * @memberof proto.Msg_SetFincaBattleBookIdsRsp
         * @instance
         */
        Msg_SetFincaBattleBookIdsRsp.prototype.error = null;

        /**
         * Msg_SetFincaBattleBookIdsRsp bookItemIds.
         * @member {Array.<number>} bookItemIds
         * @memberof proto.Msg_SetFincaBattleBookIdsRsp
         * @instance
         */
        Msg_SetFincaBattleBookIdsRsp.prototype.bookItemIds = $util.emptyArray;

        /**
         * Encodes the specified Msg_SetFincaBattleBookIdsRsp message. Does not implicitly {@link proto.Msg_SetFincaBattleBookIdsRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_SetFincaBattleBookIdsRsp
         * @static
         * @param {proto.IMsg_SetFincaBattleBookIdsRsp} m Msg_SetFincaBattleBookIdsRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_SetFincaBattleBookIdsRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.error != null && Object.hasOwnProperty.call(m, "error"))
                $root.proto.CommonError.encode(m.error, w.uint32(10).fork()).ldelim();
            if (m.bookItemIds != null && m.bookItemIds.length) {
                w.uint32(18).fork();
                for (var i = 0; i < m.bookItemIds.length; ++i)
                    w.int32(m.bookItemIds[i]);
                w.ldelim();
            }
            return w;
        };

        /**
         * Decodes a Msg_SetFincaBattleBookIdsRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_SetFincaBattleBookIdsRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_SetFincaBattleBookIdsRsp} Msg_SetFincaBattleBookIdsRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_SetFincaBattleBookIdsRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_SetFincaBattleBookIdsRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.error = $root.proto.CommonError.decode(r, r.uint32());
                    break;
                case 2:
                    if (!(m.bookItemIds && m.bookItemIds.length))
                        m.bookItemIds = [];
                    if ((t & 7) === 2) {
                        var c2 = r.uint32() + r.pos;
                        while (r.pos < c2)
                            m.bookItemIds.push(r.int32());
                    } else
                        m.bookItemIds.push(r.int32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_SetFincaBattleBookIdsRsp;
    })();

    proto.FincaBattleRole = (function() {

        /**
         * Properties of a FincaBattleRole.
         * @memberof proto
         * @interface IFincaBattleRole
         * @property {string|null} [roleId] FincaBattleRole roleId
         * @property {number|Long|null} [score] FincaBattleRole score
         * @property {number|null} [powerScore] FincaBattleRole powerScore
         * @property {proto.ISimpleRole|null} [simpleRole] FincaBattleRole simpleRole
         */

        /**
         * Constructs a new FincaBattleRole.
         * @memberof proto
         * @classdesc Represents a FincaBattleRole.
         * @implements IFincaBattleRole
         * @constructor
         * @param {proto.IFincaBattleRole=} [p] Properties to set
         */
        function FincaBattleRole(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * FincaBattleRole roleId.
         * @member {string} roleId
         * @memberof proto.FincaBattleRole
         * @instance
         */
        FincaBattleRole.prototype.roleId = "";

        /**
         * FincaBattleRole score.
         * @member {number|Long} score
         * @memberof proto.FincaBattleRole
         * @instance
         */
        FincaBattleRole.prototype.score = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

        /**
         * FincaBattleRole powerScore.
         * @member {number} powerScore
         * @memberof proto.FincaBattleRole
         * @instance
         */
        FincaBattleRole.prototype.powerScore = 0;

        /**
         * FincaBattleRole simpleRole.
         * @member {proto.ISimpleRole|null|undefined} simpleRole
         * @memberof proto.FincaBattleRole
         * @instance
         */
        FincaBattleRole.prototype.simpleRole = null;

        /**
         * Encodes the specified FincaBattleRole message. Does not implicitly {@link proto.FincaBattleRole.verify|verify} messages.
         * @function encode
         * @memberof proto.FincaBattleRole
         * @static
         * @param {proto.IFincaBattleRole} m FincaBattleRole message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        FincaBattleRole.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.roleId != null && Object.hasOwnProperty.call(m, "roleId"))
                w.uint32(10).string(m.roleId);
            if (m.score != null && Object.hasOwnProperty.call(m, "score"))
                w.uint32(16).int64(m.score);
            if (m.powerScore != null && Object.hasOwnProperty.call(m, "powerScore"))
                w.uint32(24).int32(m.powerScore);
            if (m.simpleRole != null && Object.hasOwnProperty.call(m, "simpleRole"))
                $root.proto.SimpleRole.encode(m.simpleRole, w.uint32(34).fork()).ldelim();
            return w;
        };

        /**
         * Decodes a FincaBattleRole message from the specified reader or buffer.
         * @function decode
         * @memberof proto.FincaBattleRole
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.FincaBattleRole} FincaBattleRole
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        FincaBattleRole.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.FincaBattleRole();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.roleId = r.string();
                    break;
                case 2:
                    m.score = r.int64();
                    break;
                case 3:
                    m.powerScore = r.int32();
                    break;
                case 4:
                    m.simpleRole = $root.proto.SimpleRole.decode(r, r.uint32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return FincaBattleRole;
    })();

    proto.Msg_GetFincaBattleOpponentsReq = (function() {

        /**
         * Properties of a Msg_GetFincaBattleOpponentsReq.
         * @memberof proto
         * @interface IMsg_GetFincaBattleOpponentsReq
         * @property {boolean|null} [isRefresh] Msg_GetFincaBattleOpponentsReq isRefresh
         */

        /**
         * Constructs a new Msg_GetFincaBattleOpponentsReq.
         * @memberof proto
         * @classdesc Represents a Msg_GetFincaBattleOpponentsReq.
         * @implements IMsg_GetFincaBattleOpponentsReq
         * @constructor
         * @param {proto.IMsg_GetFincaBattleOpponentsReq=} [p] Properties to set
         */
        function Msg_GetFincaBattleOpponentsReq(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_GetFincaBattleOpponentsReq isRefresh.
         * @member {boolean} isRefresh
         * @memberof proto.Msg_GetFincaBattleOpponentsReq
         * @instance
         */
        Msg_GetFincaBattleOpponentsReq.prototype.isRefresh = false;

        /**
         * Encodes the specified Msg_GetFincaBattleOpponentsReq message. Does not implicitly {@link proto.Msg_GetFincaBattleOpponentsReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_GetFincaBattleOpponentsReq
         * @static
         * @param {proto.IMsg_GetFincaBattleOpponentsReq} m Msg_GetFincaBattleOpponentsReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_GetFincaBattleOpponentsReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.isRefresh != null && Object.hasOwnProperty.call(m, "isRefresh"))
                w.uint32(8).bool(m.isRefresh);
            return w;
        };

        /**
         * Decodes a Msg_GetFincaBattleOpponentsReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_GetFincaBattleOpponentsReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_GetFincaBattleOpponentsReq} Msg_GetFincaBattleOpponentsReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_GetFincaBattleOpponentsReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_GetFincaBattleOpponentsReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.isRefresh = r.bool();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_GetFincaBattleOpponentsReq;
    })();

    proto.Msg_GetFincaBattleOpponentsRsp = (function() {

        /**
         * Properties of a Msg_GetFincaBattleOpponentsRsp.
         * @memberof proto
         * @interface IMsg_GetFincaBattleOpponentsRsp
         * @property {proto.ICommonError|null} [error] Msg_GetFincaBattleOpponentsRsp error
         * @property {boolean|null} [isRefresh] Msg_GetFincaBattleOpponentsRsp isRefresh
         * @property {Array.<proto.IFincaBattleRole>|null} [opponents] Msg_GetFincaBattleOpponentsRsp opponents
         */

        /**
         * Constructs a new Msg_GetFincaBattleOpponentsRsp.
         * @memberof proto
         * @classdesc Represents a Msg_GetFincaBattleOpponentsRsp.
         * @implements IMsg_GetFincaBattleOpponentsRsp
         * @constructor
         * @param {proto.IMsg_GetFincaBattleOpponentsRsp=} [p] Properties to set
         */
        function Msg_GetFincaBattleOpponentsRsp(p) {
            this.opponents = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_GetFincaBattleOpponentsRsp error.
         * @member {proto.ICommonError|null|undefined} error
         * @memberof proto.Msg_GetFincaBattleOpponentsRsp
         * @instance
         */
        Msg_GetFincaBattleOpponentsRsp.prototype.error = null;

        /**
         * Msg_GetFincaBattleOpponentsRsp isRefresh.
         * @member {boolean} isRefresh
         * @memberof proto.Msg_GetFincaBattleOpponentsRsp
         * @instance
         */
        Msg_GetFincaBattleOpponentsRsp.prototype.isRefresh = false;

        /**
         * Msg_GetFincaBattleOpponentsRsp opponents.
         * @member {Array.<proto.IFincaBattleRole>} opponents
         * @memberof proto.Msg_GetFincaBattleOpponentsRsp
         * @instance
         */
        Msg_GetFincaBattleOpponentsRsp.prototype.opponents = $util.emptyArray;

        /**
         * Encodes the specified Msg_GetFincaBattleOpponentsRsp message. Does not implicitly {@link proto.Msg_GetFincaBattleOpponentsRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_GetFincaBattleOpponentsRsp
         * @static
         * @param {proto.IMsg_GetFincaBattleOpponentsRsp} m Msg_GetFincaBattleOpponentsRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_GetFincaBattleOpponentsRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.error != null && Object.hasOwnProperty.call(m, "error"))
                $root.proto.CommonError.encode(m.error, w.uint32(10).fork()).ldelim();
            if (m.isRefresh != null && Object.hasOwnProperty.call(m, "isRefresh"))
                w.uint32(16).bool(m.isRefresh);
            if (m.opponents != null && m.opponents.length) {
                for (var i = 0; i < m.opponents.length; ++i)
                    $root.proto.FincaBattleRole.encode(m.opponents[i], w.uint32(26).fork()).ldelim();
            }
            return w;
        };

        /**
         * Decodes a Msg_GetFincaBattleOpponentsRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_GetFincaBattleOpponentsRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_GetFincaBattleOpponentsRsp} Msg_GetFincaBattleOpponentsRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_GetFincaBattleOpponentsRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_GetFincaBattleOpponentsRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.error = $root.proto.CommonError.decode(r, r.uint32());
                    break;
                case 2:
                    m.isRefresh = r.bool();
                    break;
                case 3:
                    if (!(m.opponents && m.opponents.length))
                        m.opponents = [];
                    m.opponents.push($root.proto.FincaBattleRole.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_GetFincaBattleOpponentsRsp;
    })();

    proto.FincaBattleFightRecord = (function() {

        /**
         * Properties of a FincaBattleFightRecord.
         * @memberof proto
         * @interface IFincaBattleFightRecord
         * @property {string|null} [roleId] FincaBattleFightRecord roleId
         * @property {string|null} [roleName] FincaBattleFightRecord roleName
         * @property {string|null} [opponentRoleId] FincaBattleFightRecord opponentRoleId
         * @property {string|null} [opponentRoleName] FincaBattleFightRecord opponentRoleName
         * @property {number|null} [type] FincaBattleFightRecord type
         * @property {number|Long|null} [time] FincaBattleFightRecord time
         * @property {boolean|null} [isWin] FincaBattleFightRecord isWin
         * @property {number|Long|null} [changeScore] FincaBattleFightRecord changeScore
         */

        /**
         * Constructs a new FincaBattleFightRecord.
         * @memberof proto
         * @classdesc Represents a FincaBattleFightRecord.
         * @implements IFincaBattleFightRecord
         * @constructor
         * @param {proto.IFincaBattleFightRecord=} [p] Properties to set
         */
        function FincaBattleFightRecord(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * FincaBattleFightRecord roleId.
         * @member {string} roleId
         * @memberof proto.FincaBattleFightRecord
         * @instance
         */
        FincaBattleFightRecord.prototype.roleId = "";

        /**
         * FincaBattleFightRecord roleName.
         * @member {string} roleName
         * @memberof proto.FincaBattleFightRecord
         * @instance
         */
        FincaBattleFightRecord.prototype.roleName = "";

        /**
         * FincaBattleFightRecord opponentRoleId.
         * @member {string} opponentRoleId
         * @memberof proto.FincaBattleFightRecord
         * @instance
         */
        FincaBattleFightRecord.prototype.opponentRoleId = "";

        /**
         * FincaBattleFightRecord opponentRoleName.
         * @member {string} opponentRoleName
         * @memberof proto.FincaBattleFightRecord
         * @instance
         */
        FincaBattleFightRecord.prototype.opponentRoleName = "";

        /**
         * FincaBattleFightRecord type.
         * @member {number} type
         * @memberof proto.FincaBattleFightRecord
         * @instance
         */
        FincaBattleFightRecord.prototype.type = 0;

        /**
         * FincaBattleFightRecord time.
         * @member {number|Long} time
         * @memberof proto.FincaBattleFightRecord
         * @instance
         */
        FincaBattleFightRecord.prototype.time = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

        /**
         * FincaBattleFightRecord isWin.
         * @member {boolean} isWin
         * @memberof proto.FincaBattleFightRecord
         * @instance
         */
        FincaBattleFightRecord.prototype.isWin = false;

        /**
         * FincaBattleFightRecord changeScore.
         * @member {number|Long} changeScore
         * @memberof proto.FincaBattleFightRecord
         * @instance
         */
        FincaBattleFightRecord.prototype.changeScore = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

        /**
         * Encodes the specified FincaBattleFightRecord message. Does not implicitly {@link proto.FincaBattleFightRecord.verify|verify} messages.
         * @function encode
         * @memberof proto.FincaBattleFightRecord
         * @static
         * @param {proto.IFincaBattleFightRecord} m FincaBattleFightRecord message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        FincaBattleFightRecord.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.roleId != null && Object.hasOwnProperty.call(m, "roleId"))
                w.uint32(10).string(m.roleId);
            if (m.roleName != null && Object.hasOwnProperty.call(m, "roleName"))
                w.uint32(18).string(m.roleName);
            if (m.opponentRoleId != null && Object.hasOwnProperty.call(m, "opponentRoleId"))
                w.uint32(26).string(m.opponentRoleId);
            if (m.opponentRoleName != null && Object.hasOwnProperty.call(m, "opponentRoleName"))
                w.uint32(34).string(m.opponentRoleName);
            if (m.type != null && Object.hasOwnProperty.call(m, "type"))
                w.uint32(40).int32(m.type);
            if (m.time != null && Object.hasOwnProperty.call(m, "time"))
                w.uint32(48).int64(m.time);
            if (m.isWin != null && Object.hasOwnProperty.call(m, "isWin"))
                w.uint32(56).bool(m.isWin);
            if (m.changeScore != null && Object.hasOwnProperty.call(m, "changeScore"))
                w.uint32(64).int64(m.changeScore);
            return w;
        };

        /**
         * Decodes a FincaBattleFightRecord message from the specified reader or buffer.
         * @function decode
         * @memberof proto.FincaBattleFightRecord
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.FincaBattleFightRecord} FincaBattleFightRecord
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        FincaBattleFightRecord.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.FincaBattleFightRecord();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.roleId = r.string();
                    break;
                case 2:
                    m.roleName = r.string();
                    break;
                case 3:
                    m.opponentRoleId = r.string();
                    break;
                case 4:
                    m.opponentRoleName = r.string();
                    break;
                case 5:
                    m.type = r.int32();
                    break;
                case 6:
                    m.time = r.int64();
                    break;
                case 7:
                    m.isWin = r.bool();
                    break;
                case 8:
                    m.changeScore = r.int64();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return FincaBattleFightRecord;
    })();

    proto.Msg_GetFincaBattleFightRecordsReq = (function() {

        /**
         * Properties of a Msg_GetFincaBattleFightRecordsReq.
         * @memberof proto
         * @interface IMsg_GetFincaBattleFightRecordsReq
         */

        /**
         * Constructs a new Msg_GetFincaBattleFightRecordsReq.
         * @memberof proto
         * @classdesc Represents a Msg_GetFincaBattleFightRecordsReq.
         * @implements IMsg_GetFincaBattleFightRecordsReq
         * @constructor
         * @param {proto.IMsg_GetFincaBattleFightRecordsReq=} [p] Properties to set
         */
        function Msg_GetFincaBattleFightRecordsReq(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Encodes the specified Msg_GetFincaBattleFightRecordsReq message. Does not implicitly {@link proto.Msg_GetFincaBattleFightRecordsReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_GetFincaBattleFightRecordsReq
         * @static
         * @param {proto.IMsg_GetFincaBattleFightRecordsReq} m Msg_GetFincaBattleFightRecordsReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_GetFincaBattleFightRecordsReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };

        /**
         * Decodes a Msg_GetFincaBattleFightRecordsReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_GetFincaBattleFightRecordsReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_GetFincaBattleFightRecordsReq} Msg_GetFincaBattleFightRecordsReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_GetFincaBattleFightRecordsReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_GetFincaBattleFightRecordsReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_GetFincaBattleFightRecordsReq;
    })();

    proto.Msg_GetFincaBattleFightRecordsRsp = (function() {

        /**
         * Properties of a Msg_GetFincaBattleFightRecordsRsp.
         * @memberof proto
         * @interface IMsg_GetFincaBattleFightRecordsRsp
         * @property {proto.ICommonError|null} [error] Msg_GetFincaBattleFightRecordsRsp error
         * @property {Array.<proto.IFincaBattleFightRecord>|null} [fightRecords] Msg_GetFincaBattleFightRecordsRsp fightRecords
         */

        /**
         * Constructs a new Msg_GetFincaBattleFightRecordsRsp.
         * @memberof proto
         * @classdesc Represents a Msg_GetFincaBattleFightRecordsRsp.
         * @implements IMsg_GetFincaBattleFightRecordsRsp
         * @constructor
         * @param {proto.IMsg_GetFincaBattleFightRecordsRsp=} [p] Properties to set
         */
        function Msg_GetFincaBattleFightRecordsRsp(p) {
            this.fightRecords = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_GetFincaBattleFightRecordsRsp error.
         * @member {proto.ICommonError|null|undefined} error
         * @memberof proto.Msg_GetFincaBattleFightRecordsRsp
         * @instance
         */
        Msg_GetFincaBattleFightRecordsRsp.prototype.error = null;

        /**
         * Msg_GetFincaBattleFightRecordsRsp fightRecords.
         * @member {Array.<proto.IFincaBattleFightRecord>} fightRecords
         * @memberof proto.Msg_GetFincaBattleFightRecordsRsp
         * @instance
         */
        Msg_GetFincaBattleFightRecordsRsp.prototype.fightRecords = $util.emptyArray;

        /**
         * Encodes the specified Msg_GetFincaBattleFightRecordsRsp message. Does not implicitly {@link proto.Msg_GetFincaBattleFightRecordsRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_GetFincaBattleFightRecordsRsp
         * @static
         * @param {proto.IMsg_GetFincaBattleFightRecordsRsp} m Msg_GetFincaBattleFightRecordsRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_GetFincaBattleFightRecordsRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.error != null && Object.hasOwnProperty.call(m, "error"))
                $root.proto.CommonError.encode(m.error, w.uint32(10).fork()).ldelim();
            if (m.fightRecords != null && m.fightRecords.length) {
                for (var i = 0; i < m.fightRecords.length; ++i)
                    $root.proto.FincaBattleFightRecord.encode(m.fightRecords[i], w.uint32(18).fork()).ldelim();
            }
            return w;
        };

        /**
         * Decodes a Msg_GetFincaBattleFightRecordsRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_GetFincaBattleFightRecordsRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_GetFincaBattleFightRecordsRsp} Msg_GetFincaBattleFightRecordsRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_GetFincaBattleFightRecordsRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_GetFincaBattleFightRecordsRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.error = $root.proto.CommonError.decode(r, r.uint32());
                    break;
                case 2:
                    if (!(m.fightRecords && m.fightRecords.length))
                        m.fightRecords = [];
                    m.fightRecords.push($root.proto.FincaBattleFightRecord.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_GetFincaBattleFightRecordsRsp;
    })();

    proto.Msg_GetSimpleRankReq = (function() {

        /**
         * Properties of a Msg_GetSimpleRankReq.
         * @memberof proto
         * @interface IMsg_GetSimpleRankReq
         * @property {number|null} [rankId] Msg_GetSimpleRankReq rankId
         * @property {number|null} [pageIndex] Msg_GetSimpleRankReq pageIndex
         * @property {number|null} [pageSize] Msg_GetSimpleRankReq pageSize
         */

        /**
         * Constructs a new Msg_GetSimpleRankReq.
         * @memberof proto
         * @classdesc Represents a Msg_GetSimpleRankReq.
         * @implements IMsg_GetSimpleRankReq
         * @constructor
         * @param {proto.IMsg_GetSimpleRankReq=} [p] Properties to set
         */
        function Msg_GetSimpleRankReq(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_GetSimpleRankReq rankId.
         * @member {number} rankId
         * @memberof proto.Msg_GetSimpleRankReq
         * @instance
         */
        Msg_GetSimpleRankReq.prototype.rankId = 0;

        /**
         * Msg_GetSimpleRankReq pageIndex.
         * @member {number} pageIndex
         * @memberof proto.Msg_GetSimpleRankReq
         * @instance
         */
        Msg_GetSimpleRankReq.prototype.pageIndex = 0;

        /**
         * Msg_GetSimpleRankReq pageSize.
         * @member {number} pageSize
         * @memberof proto.Msg_GetSimpleRankReq
         * @instance
         */
        Msg_GetSimpleRankReq.prototype.pageSize = 0;

        /**
         * Encodes the specified Msg_GetSimpleRankReq message. Does not implicitly {@link proto.Msg_GetSimpleRankReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_GetSimpleRankReq
         * @static
         * @param {proto.IMsg_GetSimpleRankReq} m Msg_GetSimpleRankReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_GetSimpleRankReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.rankId != null && Object.hasOwnProperty.call(m, "rankId"))
                w.uint32(8).int32(m.rankId);
            if (m.pageIndex != null && Object.hasOwnProperty.call(m, "pageIndex"))
                w.uint32(16).int32(m.pageIndex);
            if (m.pageSize != null && Object.hasOwnProperty.call(m, "pageSize"))
                w.uint32(24).int32(m.pageSize);
            return w;
        };

        /**
         * Decodes a Msg_GetSimpleRankReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_GetSimpleRankReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_GetSimpleRankReq} Msg_GetSimpleRankReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_GetSimpleRankReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_GetSimpleRankReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.rankId = r.int32();
                    break;
                case 2:
                    m.pageIndex = r.int32();
                    break;
                case 3:
                    m.pageSize = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_GetSimpleRankReq;
    })();

    proto.Msg_GetSimpleRankRsp = (function() {

        /**
         * Properties of a Msg_GetSimpleRankRsp.
         * @memberof proto
         * @interface IMsg_GetSimpleRankRsp
         * @property {proto.ICommonError|null} [error] Msg_GetSimpleRankRsp error
         * @property {number|null} [rankId] Msg_GetSimpleRankRsp rankId
         * @property {number|null} [pageIndex] Msg_GetSimpleRankRsp pageIndex
         * @property {number|null} [pageSize] Msg_GetSimpleRankRsp pageSize
         * @property {number|null} [total] Msg_GetSimpleRankRsp total
         * @property {number|null} [ranking] Msg_GetSimpleRankRsp ranking
         * @property {Array.<proto.ISimpleRank>|null} [rankList] Msg_GetSimpleRankRsp rankList
         * @property {proto.ISimpleRank|null} [selfSimple] Msg_GetSimpleRankRsp selfSimple
         * @property {number|Long|null} [settleTime] Msg_GetSimpleRankRsp settleTime
         */

        /**
         * Constructs a new Msg_GetSimpleRankRsp.
         * @memberof proto
         * @classdesc Represents a Msg_GetSimpleRankRsp.
         * @implements IMsg_GetSimpleRankRsp
         * @constructor
         * @param {proto.IMsg_GetSimpleRankRsp=} [p] Properties to set
         */
        function Msg_GetSimpleRankRsp(p) {
            this.rankList = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_GetSimpleRankRsp error.
         * @member {proto.ICommonError|null|undefined} error
         * @memberof proto.Msg_GetSimpleRankRsp
         * @instance
         */
        Msg_GetSimpleRankRsp.prototype.error = null;

        /**
         * Msg_GetSimpleRankRsp rankId.
         * @member {number} rankId
         * @memberof proto.Msg_GetSimpleRankRsp
         * @instance
         */
        Msg_GetSimpleRankRsp.prototype.rankId = 0;

        /**
         * Msg_GetSimpleRankRsp pageIndex.
         * @member {number} pageIndex
         * @memberof proto.Msg_GetSimpleRankRsp
         * @instance
         */
        Msg_GetSimpleRankRsp.prototype.pageIndex = 0;

        /**
         * Msg_GetSimpleRankRsp pageSize.
         * @member {number} pageSize
         * @memberof proto.Msg_GetSimpleRankRsp
         * @instance
         */
        Msg_GetSimpleRankRsp.prototype.pageSize = 0;

        /**
         * Msg_GetSimpleRankRsp total.
         * @member {number} total
         * @memberof proto.Msg_GetSimpleRankRsp
         * @instance
         */
        Msg_GetSimpleRankRsp.prototype.total = 0;

        /**
         * Msg_GetSimpleRankRsp ranking.
         * @member {number} ranking
         * @memberof proto.Msg_GetSimpleRankRsp
         * @instance
         */
        Msg_GetSimpleRankRsp.prototype.ranking = 0;

        /**
         * Msg_GetSimpleRankRsp rankList.
         * @member {Array.<proto.ISimpleRank>} rankList
         * @memberof proto.Msg_GetSimpleRankRsp
         * @instance
         */
        Msg_GetSimpleRankRsp.prototype.rankList = $util.emptyArray;

        /**
         * Msg_GetSimpleRankRsp selfSimple.
         * @member {proto.ISimpleRank|null|undefined} selfSimple
         * @memberof proto.Msg_GetSimpleRankRsp
         * @instance
         */
        Msg_GetSimpleRankRsp.prototype.selfSimple = null;

        /**
         * Msg_GetSimpleRankRsp settleTime.
         * @member {number|Long} settleTime
         * @memberof proto.Msg_GetSimpleRankRsp
         * @instance
         */
        Msg_GetSimpleRankRsp.prototype.settleTime = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

        /**
         * Encodes the specified Msg_GetSimpleRankRsp message. Does not implicitly {@link proto.Msg_GetSimpleRankRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_GetSimpleRankRsp
         * @static
         * @param {proto.IMsg_GetSimpleRankRsp} m Msg_GetSimpleRankRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_GetSimpleRankRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.error != null && Object.hasOwnProperty.call(m, "error"))
                $root.proto.CommonError.encode(m.error, w.uint32(10).fork()).ldelim();
            if (m.rankId != null && Object.hasOwnProperty.call(m, "rankId"))
                w.uint32(16).int32(m.rankId);
            if (m.pageIndex != null && Object.hasOwnProperty.call(m, "pageIndex"))
                w.uint32(24).int32(m.pageIndex);
            if (m.pageSize != null && Object.hasOwnProperty.call(m, "pageSize"))
                w.uint32(32).int32(m.pageSize);
            if (m.total != null && Object.hasOwnProperty.call(m, "total"))
                w.uint32(40).int32(m.total);
            if (m.ranking != null && Object.hasOwnProperty.call(m, "ranking"))
                w.uint32(48).int32(m.ranking);
            if (m.rankList != null && m.rankList.length) {
                for (var i = 0; i < m.rankList.length; ++i)
                    $root.proto.SimpleRank.encode(m.rankList[i], w.uint32(58).fork()).ldelim();
            }
            if (m.selfSimple != null && Object.hasOwnProperty.call(m, "selfSimple"))
                $root.proto.SimpleRank.encode(m.selfSimple, w.uint32(66).fork()).ldelim();
            if (m.settleTime != null && Object.hasOwnProperty.call(m, "settleTime"))
                w.uint32(72).int64(m.settleTime);
            return w;
        };

        /**
         * Decodes a Msg_GetSimpleRankRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_GetSimpleRankRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_GetSimpleRankRsp} Msg_GetSimpleRankRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_GetSimpleRankRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_GetSimpleRankRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.error = $root.proto.CommonError.decode(r, r.uint32());
                    break;
                case 2:
                    m.rankId = r.int32();
                    break;
                case 3:
                    m.pageIndex = r.int32();
                    break;
                case 4:
                    m.pageSize = r.int32();
                    break;
                case 5:
                    m.total = r.int32();
                    break;
                case 6:
                    m.ranking = r.int32();
                    break;
                case 7:
                    if (!(m.rankList && m.rankList.length))
                        m.rankList = [];
                    m.rankList.push($root.proto.SimpleRank.decode(r, r.uint32()));
                    break;
                case 8:
                    m.selfSimple = $root.proto.SimpleRank.decode(r, r.uint32());
                    break;
                case 9:
                    m.settleTime = r.int64();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_GetSimpleRankRsp;
    })();

    proto.MainStageCleardRecord = (function() {

        /**
         * Properties of a MainStageCleardRecord.
         * @memberof proto
         * @interface IMainStageCleardRecord
         * @property {number|null} [stageId] MainStageCleardRecord stageId
         * @property {proto.ISimpleRole|null} [role] MainStageCleardRecord role
         * @property {Array.<number>|null} [weaponIds] MainStageCleardRecord weaponIds
         * @property {Array.<proto.MainStageCleardRecord.IStageHero>|null} [heroes] MainStageCleardRecord heroes
         * @property {number|Long|null} [time] MainStageCleardRecord time
         */

        /**
         * Constructs a new MainStageCleardRecord.
         * @memberof proto
         * @classdesc Represents a MainStageCleardRecord.
         * @implements IMainStageCleardRecord
         * @constructor
         * @param {proto.IMainStageCleardRecord=} [p] Properties to set
         */
        function MainStageCleardRecord(p) {
            this.weaponIds = [];
            this.heroes = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * MainStageCleardRecord stageId.
         * @member {number} stageId
         * @memberof proto.MainStageCleardRecord
         * @instance
         */
        MainStageCleardRecord.prototype.stageId = 0;

        /**
         * MainStageCleardRecord role.
         * @member {proto.ISimpleRole|null|undefined} role
         * @memberof proto.MainStageCleardRecord
         * @instance
         */
        MainStageCleardRecord.prototype.role = null;

        /**
         * MainStageCleardRecord weaponIds.
         * @member {Array.<number>} weaponIds
         * @memberof proto.MainStageCleardRecord
         * @instance
         */
        MainStageCleardRecord.prototype.weaponIds = $util.emptyArray;

        /**
         * MainStageCleardRecord heroes.
         * @member {Array.<proto.MainStageCleardRecord.IStageHero>} heroes
         * @memberof proto.MainStageCleardRecord
         * @instance
         */
        MainStageCleardRecord.prototype.heroes = $util.emptyArray;

        /**
         * MainStageCleardRecord time.
         * @member {number|Long} time
         * @memberof proto.MainStageCleardRecord
         * @instance
         */
        MainStageCleardRecord.prototype.time = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

        /**
         * Encodes the specified MainStageCleardRecord message. Does not implicitly {@link proto.MainStageCleardRecord.verify|verify} messages.
         * @function encode
         * @memberof proto.MainStageCleardRecord
         * @static
         * @param {proto.IMainStageCleardRecord} m MainStageCleardRecord message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        MainStageCleardRecord.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.stageId != null && Object.hasOwnProperty.call(m, "stageId"))
                w.uint32(8).int32(m.stageId);
            if (m.role != null && Object.hasOwnProperty.call(m, "role"))
                $root.proto.SimpleRole.encode(m.role, w.uint32(18).fork()).ldelim();
            if (m.weaponIds != null && m.weaponIds.length) {
                w.uint32(26).fork();
                for (var i = 0; i < m.weaponIds.length; ++i)
                    w.int32(m.weaponIds[i]);
                w.ldelim();
            }
            if (m.heroes != null && m.heroes.length) {
                for (var i = 0; i < m.heroes.length; ++i)
                    $root.proto.MainStageCleardRecord.StageHero.encode(m.heroes[i], w.uint32(34).fork()).ldelim();
            }
            if (m.time != null && Object.hasOwnProperty.call(m, "time"))
                w.uint32(40).int64(m.time);
            return w;
        };

        /**
         * Decodes a MainStageCleardRecord message from the specified reader or buffer.
         * @function decode
         * @memberof proto.MainStageCleardRecord
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.MainStageCleardRecord} MainStageCleardRecord
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        MainStageCleardRecord.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.MainStageCleardRecord();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.stageId = r.int32();
                    break;
                case 2:
                    m.role = $root.proto.SimpleRole.decode(r, r.uint32());
                    break;
                case 3:
                    if (!(m.weaponIds && m.weaponIds.length))
                        m.weaponIds = [];
                    if ((t & 7) === 2) {
                        var c2 = r.uint32() + r.pos;
                        while (r.pos < c2)
                            m.weaponIds.push(r.int32());
                    } else
                        m.weaponIds.push(r.int32());
                    break;
                case 4:
                    if (!(m.heroes && m.heroes.length))
                        m.heroes = [];
                    m.heroes.push($root.proto.MainStageCleardRecord.StageHero.decode(r, r.uint32()));
                    break;
                case 5:
                    m.time = r.int64();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        MainStageCleardRecord.StageHero = (function() {

            /**
             * Properties of a StageHero.
             * @memberof proto.MainStageCleardRecord
             * @interface IStageHero
             * @property {number|null} [heroItemId] StageHero heroItemId
             * @property {number|null} [level] StageHero level
             * @property {number|null} [damage] StageHero damage
             */

            /**
             * Constructs a new StageHero.
             * @memberof proto.MainStageCleardRecord
             * @classdesc Represents a StageHero.
             * @implements IStageHero
             * @constructor
             * @param {proto.MainStageCleardRecord.IStageHero=} [p] Properties to set
             */
            function StageHero(p) {
                if (p)
                    for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                        if (p[ks[i]] != null)
                            this[ks[i]] = p[ks[i]];
            }

            /**
             * StageHero heroItemId.
             * @member {number} heroItemId
             * @memberof proto.MainStageCleardRecord.StageHero
             * @instance
             */
            StageHero.prototype.heroItemId = 0;

            /**
             * StageHero level.
             * @member {number} level
             * @memberof proto.MainStageCleardRecord.StageHero
             * @instance
             */
            StageHero.prototype.level = 0;

            /**
             * StageHero damage.
             * @member {number} damage
             * @memberof proto.MainStageCleardRecord.StageHero
             * @instance
             */
            StageHero.prototype.damage = 0;

            /**
             * Encodes the specified StageHero message. Does not implicitly {@link proto.MainStageCleardRecord.StageHero.verify|verify} messages.
             * @function encode
             * @memberof proto.MainStageCleardRecord.StageHero
             * @static
             * @param {proto.MainStageCleardRecord.IStageHero} m StageHero message or plain object to encode
             * @param {$protobuf.Writer} [w] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            StageHero.encode = function encode(m, w) {
                if (!w)
                    w = $Writer.create();
                if (m.heroItemId != null && Object.hasOwnProperty.call(m, "heroItemId"))
                    w.uint32(8).int32(m.heroItemId);
                if (m.level != null && Object.hasOwnProperty.call(m, "level"))
                    w.uint32(16).int32(m.level);
                if (m.damage != null && Object.hasOwnProperty.call(m, "damage"))
                    w.uint32(25).double(m.damage);
                return w;
            };

            /**
             * Decodes a StageHero message from the specified reader or buffer.
             * @function decode
             * @memberof proto.MainStageCleardRecord.StageHero
             * @static
             * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
             * @param {number} [l] Message length if known beforehand
             * @returns {proto.MainStageCleardRecord.StageHero} StageHero
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            StageHero.decode = function decode(r, l) {
                if (!(r instanceof $Reader))
                    r = $Reader.create(r);
                var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.MainStageCleardRecord.StageHero();
                while (r.pos < c) {
                    var t = r.uint32();
                    switch (t >>> 3) {
                    case 1:
                        m.heroItemId = r.int32();
                        break;
                    case 2:
                        m.level = r.int32();
                        break;
                    case 3:
                        m.damage = r.double();
                        break;
                    default:
                        r.skipType(t & 7);
                        break;
                    }
                }
                return m;
            };

            return StageHero;
        })();

        return MainStageCleardRecord;
    })();

    proto.Msg_GetMainStageCleardRecordsReq = (function() {

        /**
         * Properties of a Msg_GetMainStageCleardRecordsReq.
         * @memberof proto
         * @interface IMsg_GetMainStageCleardRecordsReq
         * @property {number|null} [stageId] Msg_GetMainStageCleardRecordsReq stageId
         */

        /**
         * Constructs a new Msg_GetMainStageCleardRecordsReq.
         * @memberof proto
         * @classdesc Represents a Msg_GetMainStageCleardRecordsReq.
         * @implements IMsg_GetMainStageCleardRecordsReq
         * @constructor
         * @param {proto.IMsg_GetMainStageCleardRecordsReq=} [p] Properties to set
         */
        function Msg_GetMainStageCleardRecordsReq(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_GetMainStageCleardRecordsReq stageId.
         * @member {number} stageId
         * @memberof proto.Msg_GetMainStageCleardRecordsReq
         * @instance
         */
        Msg_GetMainStageCleardRecordsReq.prototype.stageId = 0;

        /**
         * Encodes the specified Msg_GetMainStageCleardRecordsReq message. Does not implicitly {@link proto.Msg_GetMainStageCleardRecordsReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_GetMainStageCleardRecordsReq
         * @static
         * @param {proto.IMsg_GetMainStageCleardRecordsReq} m Msg_GetMainStageCleardRecordsReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_GetMainStageCleardRecordsReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.stageId != null && Object.hasOwnProperty.call(m, "stageId"))
                w.uint32(8).int32(m.stageId);
            return w;
        };

        /**
         * Decodes a Msg_GetMainStageCleardRecordsReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_GetMainStageCleardRecordsReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_GetMainStageCleardRecordsReq} Msg_GetMainStageCleardRecordsReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_GetMainStageCleardRecordsReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_GetMainStageCleardRecordsReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.stageId = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_GetMainStageCleardRecordsReq;
    })();

    proto.Msg_GetMainStageCleardRecordsRsp = (function() {

        /**
         * Properties of a Msg_GetMainStageCleardRecordsRsp.
         * @memberof proto
         * @interface IMsg_GetMainStageCleardRecordsRsp
         * @property {proto.ICommonError|null} [error] Msg_GetMainStageCleardRecordsRsp error
         * @property {number|null} [stageId] Msg_GetMainStageCleardRecordsRsp stageId
         * @property {proto.IMainStageCleardRecord|null} [firstRecord] Msg_GetMainStageCleardRecordsRsp firstRecord
         * @property {Array.<proto.IMainStageCleardRecord>|null} [top3Records] Msg_GetMainStageCleardRecordsRsp top3Records
         */

        /**
         * Constructs a new Msg_GetMainStageCleardRecordsRsp.
         * @memberof proto
         * @classdesc Represents a Msg_GetMainStageCleardRecordsRsp.
         * @implements IMsg_GetMainStageCleardRecordsRsp
         * @constructor
         * @param {proto.IMsg_GetMainStageCleardRecordsRsp=} [p] Properties to set
         */
        function Msg_GetMainStageCleardRecordsRsp(p) {
            this.top3Records = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_GetMainStageCleardRecordsRsp error.
         * @member {proto.ICommonError|null|undefined} error
         * @memberof proto.Msg_GetMainStageCleardRecordsRsp
         * @instance
         */
        Msg_GetMainStageCleardRecordsRsp.prototype.error = null;

        /**
         * Msg_GetMainStageCleardRecordsRsp stageId.
         * @member {number} stageId
         * @memberof proto.Msg_GetMainStageCleardRecordsRsp
         * @instance
         */
        Msg_GetMainStageCleardRecordsRsp.prototype.stageId = 0;

        /**
         * Msg_GetMainStageCleardRecordsRsp firstRecord.
         * @member {proto.IMainStageCleardRecord|null|undefined} firstRecord
         * @memberof proto.Msg_GetMainStageCleardRecordsRsp
         * @instance
         */
        Msg_GetMainStageCleardRecordsRsp.prototype.firstRecord = null;

        /**
         * Msg_GetMainStageCleardRecordsRsp top3Records.
         * @member {Array.<proto.IMainStageCleardRecord>} top3Records
         * @memberof proto.Msg_GetMainStageCleardRecordsRsp
         * @instance
         */
        Msg_GetMainStageCleardRecordsRsp.prototype.top3Records = $util.emptyArray;

        /**
         * Encodes the specified Msg_GetMainStageCleardRecordsRsp message. Does not implicitly {@link proto.Msg_GetMainStageCleardRecordsRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_GetMainStageCleardRecordsRsp
         * @static
         * @param {proto.IMsg_GetMainStageCleardRecordsRsp} m Msg_GetMainStageCleardRecordsRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_GetMainStageCleardRecordsRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.error != null && Object.hasOwnProperty.call(m, "error"))
                $root.proto.CommonError.encode(m.error, w.uint32(10).fork()).ldelim();
            if (m.stageId != null && Object.hasOwnProperty.call(m, "stageId"))
                w.uint32(16).int32(m.stageId);
            if (m.firstRecord != null && Object.hasOwnProperty.call(m, "firstRecord"))
                $root.proto.MainStageCleardRecord.encode(m.firstRecord, w.uint32(26).fork()).ldelim();
            if (m.top3Records != null && m.top3Records.length) {
                for (var i = 0; i < m.top3Records.length; ++i)
                    $root.proto.MainStageCleardRecord.encode(m.top3Records[i], w.uint32(34).fork()).ldelim();
            }
            return w;
        };

        /**
         * Decodes a Msg_GetMainStageCleardRecordsRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_GetMainStageCleardRecordsRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_GetMainStageCleardRecordsRsp} Msg_GetMainStageCleardRecordsRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_GetMainStageCleardRecordsRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_GetMainStageCleardRecordsRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.error = $root.proto.CommonError.decode(r, r.uint32());
                    break;
                case 2:
                    m.stageId = r.int32();
                    break;
                case 3:
                    m.firstRecord = $root.proto.MainStageCleardRecord.decode(r, r.uint32());
                    break;
                case 4:
                    if (!(m.top3Records && m.top3Records.length))
                        m.top3Records = [];
                    m.top3Records.push($root.proto.MainStageCleardRecord.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_GetMainStageCleardRecordsRsp;
    })();

    proto.CumulativeRecharge = (function() {

        /**
         * Properties of a CumulativeRecharge.
         * @memberof proto
         * @interface ICumulativeRecharge
         * @property {number|null} [activityId] CumulativeRecharge activityId
         * @property {number|Long|null} [activityEndTime] CumulativeRecharge activityEndTime
         * @property {number|null} [payAmount] CumulativeRecharge payAmount
         * @property {Array.<number>|null} [receivedRewardIds] CumulativeRecharge receivedRewardIds
         */

        /**
         * Constructs a new CumulativeRecharge.
         * @memberof proto
         * @classdesc Represents a CumulativeRecharge.
         * @implements ICumulativeRecharge
         * @constructor
         * @param {proto.ICumulativeRecharge=} [p] Properties to set
         */
        function CumulativeRecharge(p) {
            this.receivedRewardIds = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * CumulativeRecharge activityId.
         * @member {number} activityId
         * @memberof proto.CumulativeRecharge
         * @instance
         */
        CumulativeRecharge.prototype.activityId = 0;

        /**
         * CumulativeRecharge activityEndTime.
         * @member {number|Long} activityEndTime
         * @memberof proto.CumulativeRecharge
         * @instance
         */
        CumulativeRecharge.prototype.activityEndTime = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

        /**
         * CumulativeRecharge payAmount.
         * @member {number} payAmount
         * @memberof proto.CumulativeRecharge
         * @instance
         */
        CumulativeRecharge.prototype.payAmount = 0;

        /**
         * CumulativeRecharge receivedRewardIds.
         * @member {Array.<number>} receivedRewardIds
         * @memberof proto.CumulativeRecharge
         * @instance
         */
        CumulativeRecharge.prototype.receivedRewardIds = $util.emptyArray;

        /**
         * Encodes the specified CumulativeRecharge message. Does not implicitly {@link proto.CumulativeRecharge.verify|verify} messages.
         * @function encode
         * @memberof proto.CumulativeRecharge
         * @static
         * @param {proto.ICumulativeRecharge} m CumulativeRecharge message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CumulativeRecharge.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.activityId != null && Object.hasOwnProperty.call(m, "activityId"))
                w.uint32(8).int32(m.activityId);
            if (m.activityEndTime != null && Object.hasOwnProperty.call(m, "activityEndTime"))
                w.uint32(16).int64(m.activityEndTime);
            if (m.payAmount != null && Object.hasOwnProperty.call(m, "payAmount"))
                w.uint32(24).int32(m.payAmount);
            if (m.receivedRewardIds != null && m.receivedRewardIds.length) {
                w.uint32(34).fork();
                for (var i = 0; i < m.receivedRewardIds.length; ++i)
                    w.int32(m.receivedRewardIds[i]);
                w.ldelim();
            }
            return w;
        };

        /**
         * Decodes a CumulativeRecharge message from the specified reader or buffer.
         * @function decode
         * @memberof proto.CumulativeRecharge
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.CumulativeRecharge} CumulativeRecharge
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CumulativeRecharge.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.CumulativeRecharge();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.activityId = r.int32();
                    break;
                case 2:
                    m.activityEndTime = r.int64();
                    break;
                case 3:
                    m.payAmount = r.int32();
                    break;
                case 4:
                    if (!(m.receivedRewardIds && m.receivedRewardIds.length))
                        m.receivedRewardIds = [];
                    if ((t & 7) === 2) {
                        var c2 = r.uint32() + r.pos;
                        while (r.pos < c2)
                            m.receivedRewardIds.push(r.int32());
                    } else
                        m.receivedRewardIds.push(r.int32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return CumulativeRecharge;
    })();

    proto.Msg_GetCumulativeRechargeMapReq = (function() {

        /**
         * Properties of a Msg_GetCumulativeRechargeMapReq.
         * @memberof proto
         * @interface IMsg_GetCumulativeRechargeMapReq
         */

        /**
         * Constructs a new Msg_GetCumulativeRechargeMapReq.
         * @memberof proto
         * @classdesc Represents a Msg_GetCumulativeRechargeMapReq.
         * @implements IMsg_GetCumulativeRechargeMapReq
         * @constructor
         * @param {proto.IMsg_GetCumulativeRechargeMapReq=} [p] Properties to set
         */
        function Msg_GetCumulativeRechargeMapReq(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Encodes the specified Msg_GetCumulativeRechargeMapReq message. Does not implicitly {@link proto.Msg_GetCumulativeRechargeMapReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_GetCumulativeRechargeMapReq
         * @static
         * @param {proto.IMsg_GetCumulativeRechargeMapReq} m Msg_GetCumulativeRechargeMapReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_GetCumulativeRechargeMapReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };

        /**
         * Decodes a Msg_GetCumulativeRechargeMapReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_GetCumulativeRechargeMapReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_GetCumulativeRechargeMapReq} Msg_GetCumulativeRechargeMapReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_GetCumulativeRechargeMapReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_GetCumulativeRechargeMapReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_GetCumulativeRechargeMapReq;
    })();

    proto.Msg_GetCumulativeRechargeMapRsp = (function() {

        /**
         * Properties of a Msg_GetCumulativeRechargeMapRsp.
         * @memberof proto
         * @interface IMsg_GetCumulativeRechargeMapRsp
         * @property {Object.<string,proto.ICumulativeRecharge>|null} [cumulativeRechargeMap] Msg_GetCumulativeRechargeMapRsp cumulativeRechargeMap
         */

        /**
         * Constructs a new Msg_GetCumulativeRechargeMapRsp.
         * @memberof proto
         * @classdesc Represents a Msg_GetCumulativeRechargeMapRsp.
         * @implements IMsg_GetCumulativeRechargeMapRsp
         * @constructor
         * @param {proto.IMsg_GetCumulativeRechargeMapRsp=} [p] Properties to set
         */
        function Msg_GetCumulativeRechargeMapRsp(p) {
            this.cumulativeRechargeMap = {};
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_GetCumulativeRechargeMapRsp cumulativeRechargeMap.
         * @member {Object.<string,proto.ICumulativeRecharge>} cumulativeRechargeMap
         * @memberof proto.Msg_GetCumulativeRechargeMapRsp
         * @instance
         */
        Msg_GetCumulativeRechargeMapRsp.prototype.cumulativeRechargeMap = $util.emptyObject;

        /**
         * Encodes the specified Msg_GetCumulativeRechargeMapRsp message. Does not implicitly {@link proto.Msg_GetCumulativeRechargeMapRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_GetCumulativeRechargeMapRsp
         * @static
         * @param {proto.IMsg_GetCumulativeRechargeMapRsp} m Msg_GetCumulativeRechargeMapRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_GetCumulativeRechargeMapRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.cumulativeRechargeMap != null && Object.hasOwnProperty.call(m, "cumulativeRechargeMap")) {
                for (var ks = Object.keys(m.cumulativeRechargeMap), i = 0; i < ks.length; ++i) {
                    w.uint32(10).fork().uint32(8).int32(ks[i]);
                    $root.proto.CumulativeRecharge.encode(m.cumulativeRechargeMap[ks[i]], w.uint32(18).fork()).ldelim().ldelim();
                }
            }
            return w;
        };

        /**
         * Decodes a Msg_GetCumulativeRechargeMapRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_GetCumulativeRechargeMapRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_GetCumulativeRechargeMapRsp} Msg_GetCumulativeRechargeMapRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_GetCumulativeRechargeMapRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_GetCumulativeRechargeMapRsp(), k, value;
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (m.cumulativeRechargeMap === $util.emptyObject)
                        m.cumulativeRechargeMap = {};
                    var c2 = r.uint32() + r.pos;
                    k = 0;
                    value = null;
                    while (r.pos < c2) {
                        var tag2 = r.uint32();
                        switch (tag2 >>> 3) {
                        case 1:
                            k = r.int32();
                            break;
                        case 2:
                            value = $root.proto.CumulativeRecharge.decode(r, r.uint32());
                            break;
                        default:
                            r.skipType(tag2 & 7);
                            break;
                        }
                    }
                    m.cumulativeRechargeMap[k] = value;
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_GetCumulativeRechargeMapRsp;
    })();

    proto.Msg_ReceiveCumulativeRechargeRewardReq = (function() {

        /**
         * Properties of a Msg_ReceiveCumulativeRechargeRewardReq.
         * @memberof proto
         * @interface IMsg_ReceiveCumulativeRechargeRewardReq
         * @property {number|null} [rewardId] Msg_ReceiveCumulativeRechargeRewardReq rewardId
         */

        /**
         * Constructs a new Msg_ReceiveCumulativeRechargeRewardReq.
         * @memberof proto
         * @classdesc Represents a Msg_ReceiveCumulativeRechargeRewardReq.
         * @implements IMsg_ReceiveCumulativeRechargeRewardReq
         * @constructor
         * @param {proto.IMsg_ReceiveCumulativeRechargeRewardReq=} [p] Properties to set
         */
        function Msg_ReceiveCumulativeRechargeRewardReq(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_ReceiveCumulativeRechargeRewardReq rewardId.
         * @member {number} rewardId
         * @memberof proto.Msg_ReceiveCumulativeRechargeRewardReq
         * @instance
         */
        Msg_ReceiveCumulativeRechargeRewardReq.prototype.rewardId = 0;

        /**
         * Encodes the specified Msg_ReceiveCumulativeRechargeRewardReq message. Does not implicitly {@link proto.Msg_ReceiveCumulativeRechargeRewardReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_ReceiveCumulativeRechargeRewardReq
         * @static
         * @param {proto.IMsg_ReceiveCumulativeRechargeRewardReq} m Msg_ReceiveCumulativeRechargeRewardReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_ReceiveCumulativeRechargeRewardReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.rewardId != null && Object.hasOwnProperty.call(m, "rewardId"))
                w.uint32(8).int32(m.rewardId);
            return w;
        };

        /**
         * Decodes a Msg_ReceiveCumulativeRechargeRewardReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_ReceiveCumulativeRechargeRewardReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_ReceiveCumulativeRechargeRewardReq} Msg_ReceiveCumulativeRechargeRewardReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_ReceiveCumulativeRechargeRewardReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_ReceiveCumulativeRechargeRewardReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.rewardId = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_ReceiveCumulativeRechargeRewardReq;
    })();

    proto.Msg_ReceiveCumulativeRechargeRewardRsp = (function() {

        /**
         * Properties of a Msg_ReceiveCumulativeRechargeRewardRsp.
         * @memberof proto
         * @interface IMsg_ReceiveCumulativeRechargeRewardRsp
         * @property {proto.ICommonError|null} [error] Msg_ReceiveCumulativeRechargeRewardRsp error
         * @property {number|null} [rewardId] Msg_ReceiveCumulativeRechargeRewardRsp rewardId
         * @property {Array.<proto.IItem>|null} [rewards] Msg_ReceiveCumulativeRechargeRewardRsp rewards
         */

        /**
         * Constructs a new Msg_ReceiveCumulativeRechargeRewardRsp.
         * @memberof proto
         * @classdesc Represents a Msg_ReceiveCumulativeRechargeRewardRsp.
         * @implements IMsg_ReceiveCumulativeRechargeRewardRsp
         * @constructor
         * @param {proto.IMsg_ReceiveCumulativeRechargeRewardRsp=} [p] Properties to set
         */
        function Msg_ReceiveCumulativeRechargeRewardRsp(p) {
            this.rewards = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_ReceiveCumulativeRechargeRewardRsp error.
         * @member {proto.ICommonError|null|undefined} error
         * @memberof proto.Msg_ReceiveCumulativeRechargeRewardRsp
         * @instance
         */
        Msg_ReceiveCumulativeRechargeRewardRsp.prototype.error = null;

        /**
         * Msg_ReceiveCumulativeRechargeRewardRsp rewardId.
         * @member {number} rewardId
         * @memberof proto.Msg_ReceiveCumulativeRechargeRewardRsp
         * @instance
         */
        Msg_ReceiveCumulativeRechargeRewardRsp.prototype.rewardId = 0;

        /**
         * Msg_ReceiveCumulativeRechargeRewardRsp rewards.
         * @member {Array.<proto.IItem>} rewards
         * @memberof proto.Msg_ReceiveCumulativeRechargeRewardRsp
         * @instance
         */
        Msg_ReceiveCumulativeRechargeRewardRsp.prototype.rewards = $util.emptyArray;

        /**
         * Encodes the specified Msg_ReceiveCumulativeRechargeRewardRsp message. Does not implicitly {@link proto.Msg_ReceiveCumulativeRechargeRewardRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_ReceiveCumulativeRechargeRewardRsp
         * @static
         * @param {proto.IMsg_ReceiveCumulativeRechargeRewardRsp} m Msg_ReceiveCumulativeRechargeRewardRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_ReceiveCumulativeRechargeRewardRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.error != null && Object.hasOwnProperty.call(m, "error"))
                $root.proto.CommonError.encode(m.error, w.uint32(10).fork()).ldelim();
            if (m.rewardId != null && Object.hasOwnProperty.call(m, "rewardId"))
                w.uint32(16).int32(m.rewardId);
            if (m.rewards != null && m.rewards.length) {
                for (var i = 0; i < m.rewards.length; ++i)
                    $root.proto.Item.encode(m.rewards[i], w.uint32(26).fork()).ldelim();
            }
            return w;
        };

        /**
         * Decodes a Msg_ReceiveCumulativeRechargeRewardRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_ReceiveCumulativeRechargeRewardRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_ReceiveCumulativeRechargeRewardRsp} Msg_ReceiveCumulativeRechargeRewardRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_ReceiveCumulativeRechargeRewardRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_ReceiveCumulativeRechargeRewardRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.error = $root.proto.CommonError.decode(r, r.uint32());
                    break;
                case 2:
                    m.rewardId = r.int32();
                    break;
                case 3:
                    if (!(m.rewards && m.rewards.length))
                        m.rewards = [];
                    m.rewards.push($root.proto.Item.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_ReceiveCumulativeRechargeRewardRsp;
    })();

    proto.Msg_GetEliteStageInfoReq = (function() {

        /**
         * Properties of a Msg_GetEliteStageInfoReq.
         * @memberof proto
         * @interface IMsg_GetEliteStageInfoReq
         */

        /**
         * Constructs a new Msg_GetEliteStageInfoReq.
         * @memberof proto
         * @classdesc Represents a Msg_GetEliteStageInfoReq.
         * @implements IMsg_GetEliteStageInfoReq
         * @constructor
         * @param {proto.IMsg_GetEliteStageInfoReq=} [p] Properties to set
         */
        function Msg_GetEliteStageInfoReq(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Encodes the specified Msg_GetEliteStageInfoReq message. Does not implicitly {@link proto.Msg_GetEliteStageInfoReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_GetEliteStageInfoReq
         * @static
         * @param {proto.IMsg_GetEliteStageInfoReq} m Msg_GetEliteStageInfoReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_GetEliteStageInfoReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            return w;
        };

        /**
         * Decodes a Msg_GetEliteStageInfoReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_GetEliteStageInfoReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_GetEliteStageInfoReq} Msg_GetEliteStageInfoReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_GetEliteStageInfoReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_GetEliteStageInfoReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_GetEliteStageInfoReq;
    })();

    proto.Msg_GetEliteStageInfoRsp = (function() {

        /**
         * Properties of a Msg_GetEliteStageInfoRsp.
         * @memberof proto
         * @interface IMsg_GetEliteStageInfoRsp
         * @property {Array.<number>|null} [clearedStageIds] Msg_GetEliteStageInfoRsp clearedStageIds
         * @property {number|null} [currentStageMaxAliveSeconds] Msg_GetEliteStageInfoRsp currentStageMaxAliveSeconds
         * @property {number|null} [fightingStageId] Msg_GetEliteStageInfoRsp fightingStageId
         * @property {Array.<number>|null} [receivedFirstRewardStageIds] Msg_GetEliteStageInfoRsp receivedFirstRewardStageIds
         */

        /**
         * Constructs a new Msg_GetEliteStageInfoRsp.
         * @memberof proto
         * @classdesc Represents a Msg_GetEliteStageInfoRsp.
         * @implements IMsg_GetEliteStageInfoRsp
         * @constructor
         * @param {proto.IMsg_GetEliteStageInfoRsp=} [p] Properties to set
         */
        function Msg_GetEliteStageInfoRsp(p) {
            this.clearedStageIds = [];
            this.receivedFirstRewardStageIds = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_GetEliteStageInfoRsp clearedStageIds.
         * @member {Array.<number>} clearedStageIds
         * @memberof proto.Msg_GetEliteStageInfoRsp
         * @instance
         */
        Msg_GetEliteStageInfoRsp.prototype.clearedStageIds = $util.emptyArray;

        /**
         * Msg_GetEliteStageInfoRsp currentStageMaxAliveSeconds.
         * @member {number} currentStageMaxAliveSeconds
         * @memberof proto.Msg_GetEliteStageInfoRsp
         * @instance
         */
        Msg_GetEliteStageInfoRsp.prototype.currentStageMaxAliveSeconds = 0;

        /**
         * Msg_GetEliteStageInfoRsp fightingStageId.
         * @member {number} fightingStageId
         * @memberof proto.Msg_GetEliteStageInfoRsp
         * @instance
         */
        Msg_GetEliteStageInfoRsp.prototype.fightingStageId = 0;

        /**
         * Msg_GetEliteStageInfoRsp receivedFirstRewardStageIds.
         * @member {Array.<number>} receivedFirstRewardStageIds
         * @memberof proto.Msg_GetEliteStageInfoRsp
         * @instance
         */
        Msg_GetEliteStageInfoRsp.prototype.receivedFirstRewardStageIds = $util.emptyArray;

        /**
         * Encodes the specified Msg_GetEliteStageInfoRsp message. Does not implicitly {@link proto.Msg_GetEliteStageInfoRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_GetEliteStageInfoRsp
         * @static
         * @param {proto.IMsg_GetEliteStageInfoRsp} m Msg_GetEliteStageInfoRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_GetEliteStageInfoRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.clearedStageIds != null && m.clearedStageIds.length) {
                w.uint32(10).fork();
                for (var i = 0; i < m.clearedStageIds.length; ++i)
                    w.int32(m.clearedStageIds[i]);
                w.ldelim();
            }
            if (m.currentStageMaxAliveSeconds != null && Object.hasOwnProperty.call(m, "currentStageMaxAliveSeconds"))
                w.uint32(16).int32(m.currentStageMaxAliveSeconds);
            if (m.fightingStageId != null && Object.hasOwnProperty.call(m, "fightingStageId"))
                w.uint32(24).int32(m.fightingStageId);
            if (m.receivedFirstRewardStageIds != null && m.receivedFirstRewardStageIds.length) {
                w.uint32(34).fork();
                for (var i = 0; i < m.receivedFirstRewardStageIds.length; ++i)
                    w.int32(m.receivedFirstRewardStageIds[i]);
                w.ldelim();
            }
            return w;
        };

        /**
         * Decodes a Msg_GetEliteStageInfoRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_GetEliteStageInfoRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_GetEliteStageInfoRsp} Msg_GetEliteStageInfoRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_GetEliteStageInfoRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_GetEliteStageInfoRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    if (!(m.clearedStageIds && m.clearedStageIds.length))
                        m.clearedStageIds = [];
                    if ((t & 7) === 2) {
                        var c2 = r.uint32() + r.pos;
                        while (r.pos < c2)
                            m.clearedStageIds.push(r.int32());
                    } else
                        m.clearedStageIds.push(r.int32());
                    break;
                case 2:
                    m.currentStageMaxAliveSeconds = r.int32();
                    break;
                case 3:
                    m.fightingStageId = r.int32();
                    break;
                case 4:
                    if (!(m.receivedFirstRewardStageIds && m.receivedFirstRewardStageIds.length))
                        m.receivedFirstRewardStageIds = [];
                    if ((t & 7) === 2) {
                        var c2 = r.uint32() + r.pos;
                        while (r.pos < c2)
                            m.receivedFirstRewardStageIds.push(r.int32());
                    } else
                        m.receivedFirstRewardStageIds.push(r.int32());
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_GetEliteStageInfoRsp;
    })();

    proto.Msg_ReceiveEliteClearStageRewardsReq = (function() {

        /**
         * Properties of a Msg_ReceiveEliteClearStageRewardsReq.
         * @memberof proto
         * @interface IMsg_ReceiveEliteClearStageRewardsReq
         * @property {number|null} [stageId] Msg_ReceiveEliteClearStageRewardsReq stageId
         */

        /**
         * Constructs a new Msg_ReceiveEliteClearStageRewardsReq.
         * @memberof proto
         * @classdesc Represents a Msg_ReceiveEliteClearStageRewardsReq.
         * @implements IMsg_ReceiveEliteClearStageRewardsReq
         * @constructor
         * @param {proto.IMsg_ReceiveEliteClearStageRewardsReq=} [p] Properties to set
         */
        function Msg_ReceiveEliteClearStageRewardsReq(p) {
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_ReceiveEliteClearStageRewardsReq stageId.
         * @member {number} stageId
         * @memberof proto.Msg_ReceiveEliteClearStageRewardsReq
         * @instance
         */
        Msg_ReceiveEliteClearStageRewardsReq.prototype.stageId = 0;

        /**
         * Encodes the specified Msg_ReceiveEliteClearStageRewardsReq message. Does not implicitly {@link proto.Msg_ReceiveEliteClearStageRewardsReq.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_ReceiveEliteClearStageRewardsReq
         * @static
         * @param {proto.IMsg_ReceiveEliteClearStageRewardsReq} m Msg_ReceiveEliteClearStageRewardsReq message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_ReceiveEliteClearStageRewardsReq.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.stageId != null && Object.hasOwnProperty.call(m, "stageId"))
                w.uint32(8).int32(m.stageId);
            return w;
        };

        /**
         * Decodes a Msg_ReceiveEliteClearStageRewardsReq message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_ReceiveEliteClearStageRewardsReq
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_ReceiveEliteClearStageRewardsReq} Msg_ReceiveEliteClearStageRewardsReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_ReceiveEliteClearStageRewardsReq.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_ReceiveEliteClearStageRewardsReq();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.stageId = r.int32();
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_ReceiveEliteClearStageRewardsReq;
    })();

    proto.Msg_ReceiveEliteClearStageRewardsRsp = (function() {

        /**
         * Properties of a Msg_ReceiveEliteClearStageRewardsRsp.
         * @memberof proto
         * @interface IMsg_ReceiveEliteClearStageRewardsRsp
         * @property {proto.ICommonError|null} [error] Msg_ReceiveEliteClearStageRewardsRsp error
         * @property {number|null} [stageId] Msg_ReceiveEliteClearStageRewardsRsp stageId
         * @property {Array.<proto.IItem>|null} [rewards] Msg_ReceiveEliteClearStageRewardsRsp rewards
         */

        /**
         * Constructs a new Msg_ReceiveEliteClearStageRewardsRsp.
         * @memberof proto
         * @classdesc Represents a Msg_ReceiveEliteClearStageRewardsRsp.
         * @implements IMsg_ReceiveEliteClearStageRewardsRsp
         * @constructor
         * @param {proto.IMsg_ReceiveEliteClearStageRewardsRsp=} [p] Properties to set
         */
        function Msg_ReceiveEliteClearStageRewardsRsp(p) {
            this.rewards = [];
            if (p)
                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
                    if (p[ks[i]] != null)
                        this[ks[i]] = p[ks[i]];
        }

        /**
         * Msg_ReceiveEliteClearStageRewardsRsp error.
         * @member {proto.ICommonError|null|undefined} error
         * @memberof proto.Msg_ReceiveEliteClearStageRewardsRsp
         * @instance
         */
        Msg_ReceiveEliteClearStageRewardsRsp.prototype.error = null;

        /**
         * Msg_ReceiveEliteClearStageRewardsRsp stageId.
         * @member {number} stageId
         * @memberof proto.Msg_ReceiveEliteClearStageRewardsRsp
         * @instance
         */
        Msg_ReceiveEliteClearStageRewardsRsp.prototype.stageId = 0;

        /**
         * Msg_ReceiveEliteClearStageRewardsRsp rewards.
         * @member {Array.<proto.IItem>} rewards
         * @memberof proto.Msg_ReceiveEliteClearStageRewardsRsp
         * @instance
         */
        Msg_ReceiveEliteClearStageRewardsRsp.prototype.rewards = $util.emptyArray;

        /**
         * Encodes the specified Msg_ReceiveEliteClearStageRewardsRsp message. Does not implicitly {@link proto.Msg_ReceiveEliteClearStageRewardsRsp.verify|verify} messages.
         * @function encode
         * @memberof proto.Msg_ReceiveEliteClearStageRewardsRsp
         * @static
         * @param {proto.IMsg_ReceiveEliteClearStageRewardsRsp} m Msg_ReceiveEliteClearStageRewardsRsp message or plain object to encode
         * @param {$protobuf.Writer} [w] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        Msg_ReceiveEliteClearStageRewardsRsp.encode = function encode(m, w) {
            if (!w)
                w = $Writer.create();
            if (m.error != null && Object.hasOwnProperty.call(m, "error"))
                $root.proto.CommonError.encode(m.error, w.uint32(10).fork()).ldelim();
            if (m.stageId != null && Object.hasOwnProperty.call(m, "stageId"))
                w.uint32(16).int32(m.stageId);
            if (m.rewards != null && m.rewards.length) {
                for (var i = 0; i < m.rewards.length; ++i)
                    $root.proto.Item.encode(m.rewards[i], w.uint32(26).fork()).ldelim();
            }
            return w;
        };

        /**
         * Decodes a Msg_ReceiveEliteClearStageRewardsRsp message from the specified reader or buffer.
         * @function decode
         * @memberof proto.Msg_ReceiveEliteClearStageRewardsRsp
         * @static
         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
         * @param {number} [l] Message length if known beforehand
         * @returns {proto.Msg_ReceiveEliteClearStageRewardsRsp} Msg_ReceiveEliteClearStageRewardsRsp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        Msg_ReceiveEliteClearStageRewardsRsp.decode = function decode(r, l) {
            if (!(r instanceof $Reader))
                r = $Reader.create(r);
            var c = l === undefined ? r.len : r.pos + l, m = new $root.proto.Msg_ReceiveEliteClearStageRewardsRsp();
            while (r.pos < c) {
                var t = r.uint32();
                switch (t >>> 3) {
                case 1:
                    m.error = $root.proto.CommonError.decode(r, r.uint32());
                    break;
                case 2:
                    m.stageId = r.int32();
                    break;
                case 3:
                    if (!(m.rewards && m.rewards.length))
                        m.rewards = [];
                    m.rewards.push($root.proto.Item.decode(r, r.uint32()));
                    break;
                default:
                    r.skipType(t & 7);
                    break;
                }
            }
            return m;
        };

        return Msg_ReceiveEliteClearStageRewardsRsp;
    })();

    return proto;
})();

export { $root as default };
