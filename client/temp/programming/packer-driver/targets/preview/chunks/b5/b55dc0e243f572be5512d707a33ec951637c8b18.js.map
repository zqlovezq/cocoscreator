{"version":3,"sources":["file:///C:/chickenStarClient/client/node_modules/protobufjs/src/field.js"],"names":["_cjsLoader","_req","__cjsMetaURL","_req0","_req1","_req2","url","define","exports","require","module","__filename","__dirname","Field","ReflectionObject","prototype","Object","create","constructor","className","Enum","types","util","Type","ruleRe","fromJSON","name","json","id","type","rule","extend","options","comment","isObject","undefined","call","isInteger","TypeError","isString","test","toString","toLowerCase","required","optional","repeated","map","message","partOf","typeDefault","defaultValue","long","Long","bytes","resolvedType","extensionField","declaringField","_packed","defineProperty","get","getOption","setOption","value","ifNotSet","toJSON","toJSONOptions","keepComments","Boolean","toObject","resolve","resolved","defaults","parent","lookupTypeOrEnum","values","keys","proto3_optional","packed","length","fromNumber","charAt","freeze","buf","base64","decode","newBuffer","utf8","write","emptyObject","emptyArray","ctor","d","decorateField","fieldId","fieldType","fieldRule","decorateType","decorateEnum","fieldDecorator","fieldName","add","_configure","configure","Type_","_cjsExports"],"mappings":"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","sourcesContent":["import _cjsLoader from 'cce:/internal/ml/cjs-loader.mjs';\nimport { __cjsMetaURL as _req} from './object';\nimport { __cjsMetaURL as _req0} from './enum';\nimport { __cjsMetaURL as _req1} from './types';\nimport { __cjsMetaURL as _req2} from './util';\nlet _cjsExports;\nconst __cjsMetaURL = import.meta.url;\n_cjsLoader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {\n// #region ORIGINAL CODE\n\n\n \"use strict\";\n module.exports = Field;\n\n // extends ReflectionObject\n var ReflectionObject = require(\"./object\");\n ((Field.prototype = Object.create(ReflectionObject.prototype)).constructor = Field).className = \"Field\";\n\n var Enum  = require(\"./enum\"),\n     types = require(\"./types\"),\n     util  = require(\"./util\");\n\n var Type; // cyclic\n\n var ruleRe = /^required|optional|repeated$/;\n\n /**\n  * Constructs a new message field instance. Note that {@link MapField|map fields} have their own class.\n  * @name Field\n  * @classdesc Reflected message field.\n  * @extends FieldBase\n  * @constructor\n  * @param {string} name Unique name within its namespace\n  * @param {number} id Unique id within its namespace\n  * @param {string} type Value type\n  * @param {string|Object.<string,*>} [rule=\"optional\"] Field rule\n  * @param {string|Object.<string,*>} [extend] Extended type if different from parent\n  * @param {Object.<string,*>} [options] Declared options\n  */\n\n /**\n  * Constructs a field from a field descriptor.\n  * @param {string} name Field name\n  * @param {IField} json Field descriptor\n  * @returns {Field} Created field\n  * @throws {TypeError} If arguments are invalid\n  */\n Field.fromJSON = function fromJSON(name, json) {\n     return new Field(name, json.id, json.type, json.rule, json.extend, json.options, json.comment);\n };\n\n /**\n  * Not an actual constructor. Use {@link Field} instead.\n  * @classdesc Base class of all reflected message fields. This is not an actual class but here for the sake of having consistent type definitions.\n  * @exports FieldBase\n  * @extends ReflectionObject\n  * @constructor\n  * @param {string} name Unique name within its namespace\n  * @param {number} id Unique id within its namespace\n  * @param {string} type Value type\n  * @param {string|Object.<string,*>} [rule=\"optional\"] Field rule\n  * @param {string|Object.<string,*>} [extend] Extended type if different from parent\n  * @param {Object.<string,*>} [options] Declared options\n  * @param {string} [comment] Comment associated with this field\n  */\n function Field(name, id, type, rule, extend, options, comment) {\n\n     if (util.isObject(rule)) {\n         comment = extend;\n         options = rule;\n         rule = extend = undefined;\n     } else if (util.isObject(extend)) {\n         comment = options;\n         options = extend;\n         extend = undefined;\n     }\n\n     ReflectionObject.call(this, name, options);\n\n     if (!util.isInteger(id) || id < 0)\n         throw TypeError(\"id must be a non-negative integer\");\n\n     if (!util.isString(type))\n         throw TypeError(\"type must be a string\");\n\n     if (rule !== undefined && !ruleRe.test(rule = rule.toString().toLowerCase()))\n         throw TypeError(\"rule must be a string rule\");\n\n     if (extend !== undefined && !util.isString(extend))\n         throw TypeError(\"extend must be a string\");\n\n     /**\n      * Field rule, if any.\n      * @type {string|undefined}\n      */\n     if (rule === \"proto3_optional\") {\n         rule = \"optional\";\n     }\n     this.rule = rule && rule !== \"optional\" ? rule : undefined; // toJSON\n\n     /**\n      * Field type.\n      * @type {string}\n      */\n     this.type = type; // toJSON\n\n     /**\n      * Unique field id.\n      * @type {number}\n      */\n     this.id = id; // toJSON, marker\n\n     /**\n      * Extended type if different from parent.\n      * @type {string|undefined}\n      */\n     this.extend = extend || undefined; // toJSON\n\n     /**\n      * Whether this field is required.\n      * @type {boolean}\n      */\n     this.required = rule === \"required\";\n\n     /**\n      * Whether this field is optional.\n      * @type {boolean}\n      */\n     this.optional = !this.required;\n\n     /**\n      * Whether this field is repeated.\n      * @type {boolean}\n      */\n     this.repeated = rule === \"repeated\";\n\n     /**\n      * Whether this field is a map or not.\n      * @type {boolean}\n      */\n     this.map = false;\n\n     /**\n      * Message this field belongs to.\n      * @type {Type|null}\n      */\n     this.message = null;\n\n     /**\n      * OneOf this field belongs to, if any,\n      * @type {OneOf|null}\n      */\n     this.partOf = null;\n\n     /**\n      * The field type's default value.\n      * @type {*}\n      */\n     this.typeDefault = null;\n\n     /**\n      * The field's default value on prototypes.\n      * @type {*}\n      */\n     this.defaultValue = null;\n\n     /**\n      * Whether this field's value should be treated as a long.\n      * @type {boolean}\n      */\n     this.long = util.Long ? types.long[type] !== undefined : /* istanbul ignore next */ false;\n\n     /**\n      * Whether this field's value is a buffer.\n      * @type {boolean}\n      */\n     this.bytes = type === \"bytes\";\n\n     /**\n      * Resolved type if not a basic type.\n      * @type {Type|Enum|null}\n      */\n     this.resolvedType = null;\n\n     /**\n      * Sister-field within the extended type if a declaring extension field.\n      * @type {Field|null}\n      */\n     this.extensionField = null;\n\n     /**\n      * Sister-field within the declaring namespace if an extended field.\n      * @type {Field|null}\n      */\n     this.declaringField = null;\n\n     /**\n      * Internally remembers whether this field is packed.\n      * @type {boolean|null}\n      * @private\n      */\n     this._packed = null;\n\n     /**\n      * Comment for this field.\n      * @type {string|null}\n      */\n     this.comment = comment;\n }\n\n /**\n  * Determines whether this field is packed. Only relevant when repeated and working with proto2.\n  * @name Field#packed\n  * @type {boolean}\n  * @readonly\n  */\n Object.defineProperty(Field.prototype, \"packed\", {\n     get: function() {\n         // defaults to packed=true if not explicity set to false\n         if (this._packed === null)\n             this._packed = this.getOption(\"packed\") !== false;\n         return this._packed;\n     }\n });\n\n /**\n  * @override\n  */\n Field.prototype.setOption = function setOption(name, value, ifNotSet) {\n     if (name === \"packed\") // clear cached before setting\n         this._packed = null;\n     return ReflectionObject.prototype.setOption.call(this, name, value, ifNotSet);\n };\n\n /**\n  * Field descriptor.\n  * @interface IField\n  * @property {string} [rule=\"optional\"] Field rule\n  * @property {string} type Field type\n  * @property {number} id Field id\n  * @property {Object.<string,*>} [options] Field options\n  */\n\n /**\n  * Extension field descriptor.\n  * @interface IExtensionField\n  * @extends IField\n  * @property {string} extend Extended type\n  */\n\n /**\n  * Converts this field to a field descriptor.\n  * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n  * @returns {IField} Field descriptor\n  */\n Field.prototype.toJSON = function toJSON(toJSONOptions) {\n     var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n     return util.toObject([\n         \"rule\"    , this.rule !== \"optional\" && this.rule || undefined,\n         \"type\"    , this.type,\n         \"id\"      , this.id,\n         \"extend\"  , this.extend,\n         \"options\" , this.options,\n         \"comment\" , keepComments ? this.comment : undefined\n     ]);\n };\n\n /**\n  * Resolves this field's type references.\n  * @returns {Field} `this`\n  * @throws {Error} If any reference cannot be resolved\n  */\n Field.prototype.resolve = function resolve() {\n\n     if (this.resolved)\n         return this;\n\n     if ((this.typeDefault = types.defaults[this.type]) === undefined) { // if not a basic type, resolve it\n         this.resolvedType = (this.declaringField ? this.declaringField.parent : this.parent).lookupTypeOrEnum(this.type);\n         if (this.resolvedType instanceof Type)\n             this.typeDefault = null;\n         else // instanceof Enum\n             this.typeDefault = this.resolvedType.values[Object.keys(this.resolvedType.values)[0]]; // first defined\n     } else if (this.options && this.options.proto3_optional) {\n         // proto3 scalar value marked optional; should default to null\n         this.typeDefault = null;\n     }\n\n     // use explicitly set default value if present\n     if (this.options && this.options[\"default\"] != null) {\n         this.typeDefault = this.options[\"default\"];\n         if (this.resolvedType instanceof Enum && typeof this.typeDefault === \"string\")\n             this.typeDefault = this.resolvedType.values[this.typeDefault];\n     }\n\n     // remove unnecessary options\n     if (this.options) {\n         if (this.options.packed === true || this.options.packed !== undefined && this.resolvedType && !(this.resolvedType instanceof Enum))\n             delete this.options.packed;\n         if (!Object.keys(this.options).length)\n             this.options = undefined;\n     }\n\n     // convert to internal data type if necesssary\n     if (this.long) {\n         this.typeDefault = util.Long.fromNumber(this.typeDefault, this.type.charAt(0) === \"u\");\n\n         /* istanbul ignore else */\n         if (Object.freeze)\n             Object.freeze(this.typeDefault); // long instances are meant to be immutable anyway (i.e. use small int cache that even requires it)\n\n     } else if (this.bytes && typeof this.typeDefault === \"string\") {\n         var buf;\n         if (util.base64.test(this.typeDefault))\n             util.base64.decode(this.typeDefault, buf = util.newBuffer(util.base64.length(this.typeDefault)), 0);\n         else\n             util.utf8.write(this.typeDefault, buf = util.newBuffer(util.utf8.length(this.typeDefault)), 0);\n         this.typeDefault = buf;\n     }\n\n     // take special care of maps and repeated fields\n     if (this.map)\n         this.defaultValue = util.emptyObject;\n     else if (this.repeated)\n         this.defaultValue = util.emptyArray;\n     else\n         this.defaultValue = this.typeDefault;\n\n     // ensure proper value on prototype\n     if (this.parent instanceof Type)\n         this.parent.ctor.prototype[this.name] = this.defaultValue;\n\n     return ReflectionObject.prototype.resolve.call(this);\n };\n\n /**\n  * Decorator function as returned by {@link Field.d} and {@link MapField.d} (TypeScript).\n  * @typedef FieldDecorator\n  * @type {function}\n  * @param {Object} prototype Target prototype\n  * @param {string} fieldName Field name\n  * @returns {undefined}\n  */\n\n /**\n  * Field decorator (TypeScript).\n  * @name Field.d\n  * @function\n  * @param {number} fieldId Field id\n  * @param {\"double\"|\"float\"|\"int32\"|\"uint32\"|\"sint32\"|\"fixed32\"|\"sfixed32\"|\"int64\"|\"uint64\"|\"sint64\"|\"fixed64\"|\"sfixed64\"|\"string\"|\"bool\"|\"bytes\"|Object} fieldType Field type\n  * @param {\"optional\"|\"required\"|\"repeated\"} [fieldRule=\"optional\"] Field rule\n  * @param {T} [defaultValue] Default value\n  * @returns {FieldDecorator} Decorator function\n  * @template T extends number | number[] | Long | Long[] | string | string[] | boolean | boolean[] | Uint8Array | Uint8Array[] | Buffer | Buffer[]\n  */\n Field.d = function decorateField(fieldId, fieldType, fieldRule, defaultValue) {\n\n     // submessage: decorate the submessage and use its name as the type\n     if (typeof fieldType === \"function\")\n         fieldType = util.decorateType(fieldType).name;\n\n     // enum reference: create a reflected copy of the enum and keep reuseing it\n     else if (fieldType && typeof fieldType === \"object\")\n         fieldType = util.decorateEnum(fieldType).name;\n\n     return function fieldDecorator(prototype, fieldName) {\n         util.decorateType(prototype.constructor)\n             .add(new Field(fieldName, fieldId, fieldType, fieldRule, { \"default\": defaultValue }));\n     };\n };\n\n /**\n  * Field decorator (TypeScript).\n  * @name Field.d\n  * @function\n  * @param {number} fieldId Field id\n  * @param {Constructor<T>|string} fieldType Field type\n  * @param {\"optional\"|\"required\"|\"repeated\"} [fieldRule=\"optional\"] Field rule\n  * @returns {FieldDecorator} Decorator function\n  * @template T extends Message<T>\n  * @variation 2\n  */\n // like Field.d but without a default value\n\n // Sets up cyclic dependencies (called in index-light)\n Field._configure = function configure(Type_) {\n     Type = Type_;\n };\n\n\n// #endregion ORIGINAL CODE\n\n_cjsExports = module.exports;\n\n\n}, () => ({\n  './object': _req,\n  './enum': _req0,\n  './types': _req1,\n  './util': _req2,\n}));\nexport { _cjsExports as default };\nexport { __cjsMetaURL }\n"]}