{"version":3,"sources":["file:///C:/chickenStarClient/client/assets/scripts/logic/fight/base/obj/role/role/state/RoleState3Attack.ts"],"names":["RoleState3Attack","Vec3","FightRootControl","AbsRoleState","AbsStateType","PlayerControl","tab","BulletControl","CDTime","SkillControl","FightData","velocity","tempData","constructor","roleAttack","info","cd","tmpSkill","runningShotCount","bulletGroupId","isTargetPos","targetPos","testTime","actionTime","setAbs","abs","enter","isLeader","ins","getClicking","set","getClickNodePos","onSkillTrigger","Triggertype","Triggertype_PreAttack","getNowSkill","console","warn","avatarPlayComplete","useSkillTarget","animationId","ActionID","avatar","setOtherSpeedScale","SkillType","SkillType_holdAttack","Math","max","attrData","getAttr","AttrType","AttrType_AttackSpeed","addSelfGroupId","reset","setTypeKey","CdType","BulletTimeCD","setLiftTime","BulletTime","onCdEnd","bind","setSpeed","otherSpeedScale","time","keyType","baseNum","Expend","Triggertype_Attack","subNormalAttack","emitBullet","isRunningShot","addRate","isRunningShotSuccess","RunningShotCD","RunningShot","updateFrame","delteTime","animName","checkRemoveBuff","ClearType","ClearType_Attack","refreshHoldTime","Triggertype_AttackCount","Triggertype_AttackEnd","isState","stateType","checkNormalCd","changeState","RoleSkillCd","testBullet","getData","BulletTableById","getValue","testBulletId","bulletTab","skillPowers","createTypeAnyId","PowerType","PowerType_BulletTable","Id","isAudo","audoEmitBullet","clickEmitBullet","useSkillBullet","re","RunningShotBulletType","RunningShotBulletType_SameEnemy"],"mappings":"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","sourcesContent":["import { Vec3 } from \"cc\"\nimport { FightRootControl } from \"../../../../../FightRootControl\"\nimport { AbsObjFactory } from \"../../../AbsObjFactory\"\nimport { AbsRoleState, AbsState, AbsStateType } from \"../../../state/AbsState\"\nimport { Role } from \"../Role\"\nimport { PlayerControl } from \"../PlayerControl\"\nimport { BulletInfo } from \"../../../bullet/BulletInfo\"\nimport { AbsObj } from \"../../../AbsObj\"\nimport { tab } from \"../../../../../../../Table/table_gen\"\nimport { BulletControl } from \"../../../bullet/BulletControl\"\nimport { CDTime } from \"../../../../cd/CDTime\"\nimport { SkillTab } from \"../../../../../power/powerTab/SkillTab\"\nimport { AbsRole } from \"../../AbsRole\"\nimport { SkillControl } from \"../../../../skill/SkillControl\"\nimport { Random } from \"../../../../../util/Random\"\nimport { BuffControl } from \"../../../../buff/BuffControl\"\nimport { AbsObjInfoAttr } from \"../../../AbsObjInfo\"\nimport { AbsRoleInfo } from \"../../AbsRoleInfo\"\nimport { BulletTab } from \"../../../../../power/powerTab/BulletTab\"\nimport { FightData } from \"../../../../../data/FightData\"\n\nconst enum CdType {\n    BulletTimeCD = \"BulletTimeCD\",\n    RunningShotCD = \"RunningShotCD\"\n}\n\nconst velocity = new Vec3()\nconst tempData: any = {}\nexport class RoleState3Attack extends AbsRoleState {\n    constructor() {\n        super(AbsStateType.roleAttack)\n    }\n\n    info: AbsRoleInfo\n    cd: CDTime = new CDTime()\n    tmpSkill: SkillTab\n    runningShotCount: number = 0\n    bulletGroupId: number = 0 //子弹组id (连射为同一组)\n\n    isTargetPos: boolean = false\n    targetPos: Vec3 = new Vec3()\n\n    testTime: number = 0\n    setAbs(abs: AbsObj): void {\n        super.setAbs(abs)\n        this.info = (this.abs.info as AbsRoleInfo)\n    }\n\n    enter(): boolean {\n        this.isTargetPos = false\n        if (this.abs.info.isLeader) {\n            this.isTargetPos = PlayerControl.ins.getClicking()\n            this.targetPos.set(PlayerControl.ins.getClickNodePos())\n        }\n        this.info.onSkillTrigger(tab.Triggertype.Triggertype_PreAttack)\n        this.tmpSkill = this.info.getNowSkill()\n        if (this.tmpSkill == null) {\n            console.warn(\"没有当前技能\")\n            this.avatarPlayComplete(\"\")\n            return\n        }\n\n        SkillControl.ins.useSkillTarget(this.tmpSkill, this.abs)\n\n\n        this.abs.animationId = this.tmpSkill.ActionID\n        this.abs.avatar.setOtherSpeedScale(0)\n        if (this.tmpSkill.SkillType != tab.SkillType.SkillType_holdAttack) {\n            this.abs.avatar.setOtherSpeedScale(Math.max(this.abs.info.attrData.getAttr(tab.AttrType.AttrType_AttackSpeed),-9000))\n        }\n        this.runningShotCount = 0\n        this.bulletGroupId = BulletControl.ins.addSelfGroupId()\n        this.cd.reset()\n        this.cd.setTypeKey(CdType.BulletTimeCD)\n        this.cd.setLiftTime(this.tmpSkill.BulletTime, this.onCdEnd.bind(this))\n        this.cd.setSpeed(this.abs.avatar.otherSpeedScale)\n        this.testTime = FightData.time\n        this.actionTime = FightData.time\n        return true\n    }\n    actionTime: number = 0\n\n\n\n    onCdEnd(keyType: string) {\n        if (keyType == CdType.BulletTimeCD) {\n            //消耗的出手次数， 触发器可能会修改\n            tempData.baseNum = this.tmpSkill.Expend\n            this.info.onSkillTrigger(tab.Triggertype.Triggertype_Attack, tempData)\n            this.info.subNormalAttack(tempData.baseNum)\n            this.emitBullet()\n            if (this.tmpSkill.isRunningShot()) {\n                let addRate = 0\n                if (!this.tmpSkill.isRunningShotSuccess(addRate)) {\n                    return\n                }\n\n                this.runningShotCount = 0\n                this.cd.reset()\n                this.cd.setTypeKey(CdType.RunningShotCD)\n                this.cd.setLiftTime(this.tmpSkill.RunningShot[0], this.onCdEnd.bind(this))\n            }\n        } else if (keyType == CdType.RunningShotCD) {\n            this.runningShotCount++\n            this.emitBullet()\n            if (this.runningShotCount < this.tmpSkill.RunningShot[1]) {\n                this.cd.reset()\n                this.cd.setTypeKey(CdType.RunningShotCD)\n                this.cd.setLiftTime(this.tmpSkill.RunningShot[0], this.onCdEnd.bind(this))\n            }\n        }\n    }\n    updateFrame(delteTime: number): void {\n        super.updateFrame(delteTime)\n        this.cd.updateFrame(delteTime)\n    }\n\n    avatarPlayComplete(animName: string): void {\n       \n        this.abs.info.checkRemoveBuff(tab.ClearType.ClearType_Attack)\n        this.info.refreshHoldTime()//攻击后清除蓄力时间\n        this.info.onSkillTrigger(tab.Triggertype.Triggertype_AttackCount)\n        this.info.onSkillTrigger(tab.Triggertype.Triggertype_AttackEnd)\n\n        if (!this.abs.isState(this.stateType)) {\n            return\n        }\n        if (this.abs.info.checkNormalCd()) {\n            this.abs.changeState(AbsStateType.RoleSkillCd)\n            return\n        }\n\n        super.avatarPlayComplete(animName)\n    }\n    emitBullet() {\n        let testBullet = tab.getData().BulletTableById.getValue(FightRootControl.ins.testBulletId)\n        if (testBullet) {\n\n            let bulletTab = this.info.skillPowers.createTypeAnyId(tab.PowerType.PowerType_BulletTable, testBullet.Id) as BulletTab\n\n            if (this.abs.info.isAudo) {\n                BulletControl.ins.audoEmitBullet(bulletTab, this.abs, this.bulletGroupId)\n            } else {\n                BulletControl.ins.clickEmitBullet(bulletTab, this.abs, this.targetPos, this.bulletGroupId)\n            }\n\n        } else {\n            if (this.isTargetPos) {\n                SkillControl.ins.useSkillBullet(this.tmpSkill, this.abs, this.targetPos, this.bulletGroupId, this.runningShotCount > 0)\n            } else {\n                let re = SkillControl.ins.useSkillBullet(this.tmpSkill, this.abs, null, this.bulletGroupId, this.runningShotCount > 0)\n                if (this.tmpSkill.RunningShotBulletType == tab.RunningShotBulletType.RunningShotBulletType_SameEnemy  &&    re) {\n                    this.isTargetPos = true\n                    this.targetPos.set(re)\n                }\n            }\n        }\n    }\n}"]}