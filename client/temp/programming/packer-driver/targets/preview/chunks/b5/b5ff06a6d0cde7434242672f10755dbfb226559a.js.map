{"version":3,"sources":["file:///C:/chickenStarClient/client/assets/scripts/logic/model/activity/rookieTask/RookieTaskItem.ts"],"names":["_decorator","Label","Node","ProgressBar","InfiniteCell","tab","TaskData","proto","CommonItem","ItemInfo","UIMgr","Net","LangMgr","ccclass","property","RookieTaskItem","taskData","_taskId","_trialId","_taskTab","UpdateContent","data","id","getData","TaskTableById","getValue","ins","getTrialTaskInfo","rewards","RewardItemIds","nums","RewardItemNum","taskCondition","FinishType","finishParam","FinishParam1","bar_progress","progress","lbl_bar","string","lbl_name","getLab","Describe","award","itemId","num","common_item","initData","isReceived","setSelectState","node_goto","active","node_reach","isCanReceived","node_not_reach","node_got","JumpUI","onClickGotoBtn","hideView","jumpLayer","JumpParam","clickGetAward","msg","Msg_ReceiveNewPlayerTrialTaskRewardsReq","trialId","taskId","Send","Ptl","ReceiveNewPlayerTrialTaskRewardsReq"],"mappings":"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","sourcesContent":["import { _decorator, Component, Label, Node, ProgressBar } from 'cc';\r\nimport InfiniteCell from '../../../../Common/InfiniteList/InfiniteCell';\r\nimport { tab } from '../../../../Table/table_gen';\r\nimport { TaskData } from '../../task/TaskData';\r\nimport { proto } from 'client_protocol';\r\nimport { CommonItem } from '../../item/CommonItem';\r\nimport { ItemInfo } from '../../item/ItemInfo';\r\nimport { UIMgr } from '../../../mgr/UIMgr';\r\nimport { TaskInfo } from '../../task/TaskInfo';\r\nimport { Net } from '../../../net/Net';\r\nimport { RookieTaskMgr } from './RookieTaskMgr';\r\nimport { LangMgr } from '../../../mgr/LangMgr';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('RookieTaskItem')\r\nexport class RookieTaskItem extends InfiniteCell {\r\n    @property(ProgressBar)\r\n    bar_progress: ProgressBar = null;\r\n    @property(Label)\r\n    lbl_name: Label = null;\r\n    @property(CommonItem)\r\n    common_item: CommonItem = null;\r\n    @property(Node)\r\n    node_goto: Node = null;//前往按鈕\r\n    @property(Node)\r\n    node_reach: Node = null;//領取按鈕\r\n    @property(Node)\r\n    node_not_reach: Node = null;//未達成按鈕\r\n    @property(Node)\r\n    node_got: Node = null;//已获得\r\n    @property(Label)\r\n    lbl_bar:Label = null;\r\n    private taskData: TaskInfo = null;\r\n    private _taskId: number = 0;\r\n    private _trialId: number = 0;\r\n    private _taskTab: tab.TaskTable = null;\r\n    UpdateContent(data: any): void {\r\n        this._taskId = data.data;\r\n        this._trialId = data.id;\r\n        this._taskTab = tab.getData().TaskTableById.getValue(this._taskId);\r\n        this.taskData = TaskData.ins.getTrialTaskInfo(this._taskId);\r\n        const rewards = this._taskTab.RewardItemIds;\r\n        const nums = this._taskTab.RewardItemNum;\r\n        const taskCondition = this._taskTab.FinishType;\r\n        let finishParam = this._taskTab.FinishParam1;\r\n        this.bar_progress.progress = this.taskData.progress/finishParam;\r\n        this.lbl_bar.string = `${this.taskData.progress}/${finishParam}`\r\n        this.lbl_name.string =LangMgr.getLab(this._taskTab.Describe);\r\n        const award = new ItemInfo();\r\n        award.itemId = rewards[0];\r\n        award.num = nums[0];\r\n        this.common_item.initData(award);\r\n        if (this.taskData.isReceived) {\r\n            this.bar_progress.progress = 1\r\n            this.common_item.setSelectState(true);\r\n        }\r\n        this.node_goto.active = false;\r\n        this.node_reach.active = this.taskData.isCanReceived;\r\n        this.node_not_reach.active = false;\r\n        this.node_got.active = this.taskData.isReceived;\r\n        if (!this.taskData.isReceived && !this.taskData.isCanReceived) {\r\n            if (this._taskTab.JumpUI) {\r\n                this.node_goto.active = true;\r\n            } else {\r\n                this.node_not_reach.active = true;\r\n            }\r\n        }\r\n    }\r\n    onClickGotoBtn() {\r\n        if (this._taskTab.JumpUI) {\r\n            UIMgr.ins.hideView(\"RookieTaskPop\");\r\n            UIMgr.ins.jumpLayer(this._taskTab.JumpUI,this._taskTab.JumpParam[0]);\r\n        }\r\n    }\r\n    // 点击领取任务奖励\r\n    clickGetAward() {\r\n        let msg = new proto.Msg_ReceiveNewPlayerTrialTaskRewardsReq();\r\n        msg.trialId = this._trialId;\r\n        msg.taskId = this._taskId;\r\n        Net.Send(proto.Ptl.ReceiveNewPlayerTrialTaskRewardsReq, msg);\r\n    }\r\n}\r\n\r\n\r\n"]}