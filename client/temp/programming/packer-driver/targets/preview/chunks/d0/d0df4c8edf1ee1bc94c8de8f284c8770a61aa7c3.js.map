{"version":3,"sources":["file:///C:/chickenStarClient/client/assets/scripts/framework/collision/ColliderMgr.ts"],"names":["ColliderMgr","Agent","CollisionBody","ShapeSupport","Dirty","Trigger","id","pools","axis","frameID","bodys","isDirty","pairs","Map","inst","_inst","create","obj","body","pop","object","insert","force","inCollider","push","insertFrame","isRemove","isRetrieve","RTS","remove","retrieve","reset","i","length","clear","update","dt","reBuild","triggers","triggerBegin","triggerEnd","n","m","agentMgr","j","N","bi","trigger","isIgnoreTrigger","A","aabb","an","am","mask","group","upper","objA","bj","lower","B","objB","a2b","b2a","isAgent","priority","check","at","shape","type","bt","onTrigger","endTrigger","state","aid","bid","data","get","undefined","stay","enter","set","a","b","deletes","size","entries","values","value","next","exit","delete","removeTrigger","aObj","bObj","change","preBuildAxis","sort","l","v","w","sumX","sumX2","sumY","sumY2","sumZ","sumZ2","x","y","z","removeFrame","isValid","updateBound","s","sx","sy","sz","cX","cY","cZ","invN","X","Y","Z","getBodyLen"],"mappings":"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","sourcesContent":["import { Agent } from \"./Agent\";\nimport { CollisionBody } from \"./CollisionBody\";\nimport { ShapeSupport } from \"./CollisionShape\";\nimport { Dirty, Trigger, CollisionObject } from \"./CollisionObject\";\nimport { AbsObjType } from \"../../logic/fight/base/obj/AbsObj\";\n\n\nexport class ColliderMgr {\n\n    private id: number = 0;\n    private pools: Array<CollisionBody> = [];\n\n    private static _inst: ColliderMgr = null;\n    static get inst() {\n        if (this._inst == null) {\n            this._inst = new ColliderMgr();\n        }\n        return this._inst;\n    }\n\n    private axis: number = -1;\n    private frameID: number = 0;\n    private bodys: Array<CollisionBody> = [];\n    private isDirty: boolean = false;\n    private pairs: Map<number, any> = new Map();\n\n    create(obj: CollisionObject) {\n\n        let body = this.pools.pop();\n        if (!body) {\n            body = new CollisionBody(obj);\n            body.id = this.id++;\n            return body;\n        }\n\n        body.object = obj;\n        return body;\n    }\n\n\n    //插入 body, force 强制更新数据\n    insert(body: CollisionBody, force: boolean = false) {\n\n        if (!body) return;\n\n        if (!body.inCollider) {\n            //不在列表,重新插入\n            this.bodys.push(body);\n            if (body.object) {\n                body.object.insertFrame()\n            }\n            body.inCollider = true;\n        }\n\n        //复位状态\n        body.isRemove = false;\n        body.isRetrieve = false;\n\n        //强制刷新body数据\n        if (force && body.object) {\n            body.object.isDirty = Dirty.RTS;\n            // body.updateBound(Dirty.RTS);\n        }\n    }\n\n    //删除 body: 提前标记删除 , update中执行移除\n    remove(body: CollisionBody, retrieve: boolean = false) {\n\n        if (!body) return;\n        body.isRemove = true; //标记移除body\n        body.isRetrieve = retrieve; //是否回收复用body?\n    }\n\n    //重置回收bodys\n    reset() {\n        this.axis = -1;\n        this.frameID = 0;\n        this.isDirty = true;\n\n        //回收bodys\n        let bodys = this.bodys;\n        for (let i = bodys.length - 1; i >= 0; i--) {\n            let body = bodys[i];\n            this.pools.push(body);\n            body.clear();\n        }\n        bodys.length = 0;\n\n    }\n\n    //退出释放bodys\n    clear() {\n        this.id = 0;\n        this.axis = -1;\n        this.frameID = 0;\n        this.isDirty = true;\n        this.pools.length = 0;\n\n        //清空bodys\n        let bodys = this.bodys;\n        for (let i = bodys.length - 1; i >= 0; i--) {\n            bodys[i].clear();\n        }\n        bodys.length = 0;\n    }\n\n\n    update(dt: number) {\n        this.reBuild();\n        this.triggers();\n        // Agent.inst.process(this.bodys);\n    }\n    triggerBegin() {\n\n    }\n    triggerEnd() {\n\n    }\n\n\n\n    //相交碰撞测试\n    private triggers(): void { //resultCB: (a: CollisionBody, b: CollisionBody) => void\n\n        ++this.frameID;\n\n        let axis = this.axis,\n            n = (axis >> 2) & 0x3,\n            m = (axis >> 4) & 0x3;\n\n        let bodys = this.bodys;\n        let agentMgr = Agent.inst;\n        let i = 0, j = 0, N = bodys.length;\n        for (i = 0; i < N; i++) {\n\n            let bi = bodys[i];\n            if (bi.isRemove || !bi.object.trigger || bi.isIgnoreTrigger) continue;\n\n            let A = bi.aabb,\n                an = A[n],\n                am = A[m],\n                mask = bi.mask,\n                group = bi.group,\n                upper = bi.upper,\n                objA = bi.object;\n\n            for (j = i + 1; j < N; j++) {\n\n                let bj = bodys[j];\n\n\n                if (bj.isRemove || !bj.object.trigger || bj.isIgnoreTrigger) continue;\n\n                if (upper <= bj.lower) {\n                    break;\n                }\n\n                let B = bj.aabb, objB = bj.object;\n                let a2b = mask & bj.group, b2a = bj.mask & group;\n\n                if (!(an > B[n + 3] || B[n] > A[n + 3] || am > B[m + 3] || B[m] > A[m + 3])) {\n\n                    if (bi.isAgent && bj.isAgent) {\n                        let priority = bi.priority - bj.priority;\n                        if (priority <= 0)\n                            agentMgr.check(bi, bj);\n                        if (priority >= 0)\n                            agentMgr.check(bj, bi);\n                    }\n\n                    if ((a2b || b2a)) {\n                        let at = objA.shape.type;\n                        let bt = objB.shape.type;\n                        if (at > bt) {\n                            if (!ShapeSupport[bt | at](bj, bi))\n                                continue;\n                        } else {\n                            if (!ShapeSupport[at | bt](bi, bj))\n                                continue;\n                        }\n\n                        this.onTrigger(bi, bj, (a2b ? 1 : 0) | (b2a ? 2 : 0));\n                    }\n                }\n            }\n        }\n\n        this.endTrigger();\n    }\n\n\n    private onTrigger(bi: CollisionBody, bj: CollisionBody, state: number) {\n\n\n        let trigger = 0, id = 0,\n            aid = bi.id, bid = bj.id;\n        if (aid < bid) { id = aid; aid = bid; bid = id; }\n        id = (aid * (aid + 1) >> 1) + bid - 1;\n\n        let pairs = this.pairs;\n        let data = pairs.get(id);\n        if (data !== undefined) {\n            trigger = Trigger.stay;\n            data.frameID = this.frameID;\n            data.state = state;\n        } else {\n            trigger = Trigger.enter;\n            pairs.set(id, { id: id, a: bi, b: bj, frameID: this.frameID, state: state });\n        }\n\n        let objA = bi.object;\n        if ((state & 1) && objA && objA.trigger && !bi.isRemove) {\n            objA.onTrigger(bj, trigger);\n        }\n\n        let objB = bj.object;\n        if ((state & 2) && objB && objB.trigger && !bj.isRemove) {\n            objB.onTrigger(bi, trigger);\n        }\n    }\n\n    private endTrigger() {\n        let deletes = [];\n        let pairs = this.pairs;\n\n        let length = pairs.size;\n        let frameID = this.frameID;\n        let entries = pairs.values();\n        for (let i = 0; i < length; i++) {\n            let value = entries.next().value;\n            let bi = value.a;\n            let bj = value.b;\n\n            if (value.frameID != frameID || bi.isRemove || bi.isRemove || bi.isIgnoreTrigger || bj.isIgnoreTrigger) {\n\n                let objA = bi.object;\n                if (objA && objA.trigger && !bi.isRemove)\n                    objA.onTrigger(bj, Trigger.exit);\n\n                let objB = bj.object;\n                if (objB && objB.trigger && !bj.isRemove)\n                    objB.onTrigger(bi, Trigger.exit);\n\n                deletes.push(value.id);\n            }\n        }\n\n        length = deletes.length - 1;\n        while (length >= 0) {\n            pairs.delete(deletes[length--]);\n        }\n        deletes.length = 0;\n    }\n\n    removeTrigger(aObj: CollisionObject, bObj: CollisionObject) {\n        let deletes = [];\n        let pairs = this.pairs;\n\n        let length = pairs.size;\n        let entries = pairs.values();\n        for (let i = 0; i < length; i++) {\n            let value = entries.next().value;\n            let bi = value.a;\n            let bj = value.b;\n\n\n            if ((aObj.body == bi && bObj.body == bj) || (aObj.body == bj && bObj.body == bi)) {\n                let objA = bi.object;\n                if (objA && objA.trigger && !bi.isRemove)\n                    objA.onTrigger(bj, Trigger.exit);\n\n                let objB = bj.object;\n                if (objB && objB.trigger && !bj.isRemove)\n                    objB.onTrigger(bi, Trigger.exit);\n\n                deletes.push(value.id);\n                break\n            }\n        }\n\n        length = deletes.length - 1;\n        while (length >= 0) {\n            pairs.delete(deletes[length--]);\n        }\n        deletes.length = 0;\n    }\n\n    private reBuild(): void {\n\n        let change = false;\n        let axis = this.preBuildAxis();\n        if ((axis & 0x3) != (this.axis & 0x3) || this.axis < 0) {\n            this.axis = axis;\n            change = true;\n        }\n\n        if (change || this.isDirty) {\n\n            this.isDirty = false;\n\n            let bodys = this.bodys;\n            axis = this.axis & 0x3;\n            for (let i = 0, N = bodys.length; i !== N; i++) {\n                let bi = bodys[i];\n                let aabb = bi.aabb;\n                bi.lower = aabb[axis];\n                bi.upper = aabb[axis + 3];\n            }\n\n            if (!change)\n                this.sort(bodys);\n            else\n                bodys.sort((a: CollisionBody, b: CollisionBody) => a.lower - b.lower);\n\n        }\n    }\n\n\n    private sort(a: Array<CollisionBody>): void {\n\n        let i = 0, j = 0, l = 0;\n        for (i = 1, l = a.length; i < l; i++) {\n            let v = a[i];\n            let lower = v.lower;\n            for (j = i - 1; j >= 0; j--) {\n                let w = a[j];\n                if (w.lower <= lower) {\n                    break;\n                }\n                a[j + 1] = w;\n            }\n\n            if (j + 1 != i) {\n                a[j + 1] = v;\n            }\n        }\n    }\n\n\n    private preBuildAxis(): number {\n\n        let axis = 0,\n            sumX = 0, sumX2 = 0,\n            sumY = 0, sumY2 = 0,\n            sumZ = 0, sumZ2 = 0,\n            x = 0.0, y = 0.0, z = 0.0;\n\n        let bodys = this.bodys;\n        let N = bodys.length;\n\n        let length = 0;\n        let isDirty = false;\n        for (let i = 0; i < N; i++) {\n\n            let body = bodys[i];\n\n            //删除body\n            if (body.isRemove) {\n                //是否回收body\n                if (body.isRetrieve) {\n                    this.pools.push(body);\n                    if (body.object) {\n                        body.object.removeFrame();\n                    }\n                    body.clear();\n                }\n                //已从collider移除\n                body.inCollider = false;\n                continue;\n            }\n            if (body.object == null || (body.object && !body.object.isValid)) {\n                body.inCollider = false;\n                continue\n            }\n\n            if ((++length) <= i) {\n                bodys[length - 1] = body;\n            }\n            if (body.updateBound()) isDirty = true;\n\n            let s = body.aabb,\n                sx = (s[3] - s[0]),\n                sy = (s[4] - s[1]),\n                sz = (s[5] - s[2]);\n            x += sx * sx, y += sy * sy; z += sz * sz;\n\n            let cX = (s[3] + s[0]) * 0.5;\n            sumX += cX, sumX2 += cX * cX;\n\n            let cY = (s[4] + s[1]) * 0.5;\n            sumY += cY, sumY2 += cY * cY;\n\n            let cZ = (s[5] + s[2]) * 0.5;\n            sumZ += cZ, sumZ2 += cZ * cZ;\n        }\n\n        this.bodys.length = length;\n        this.isDirty = isDirty;\n\n        let invN = 1.0 / length;\n        x = x > 0 ? length / x : 0;\n        y = y > 0 ? length / y : 0;\n        z = z > 0 ? length / z : 0;\n\n        let X = (sumX2 - sumX * sumX * invN) * x;\n        let Y = (sumY2 - sumY * sumY * invN) * y;\n        let Z = (sumZ2 - sumZ * sumZ * invN) * z;\n\n        if (X == 0) X = x; if (Y == 0) Y = y; if (Z == 0) Z = z;\n\n        if (X > Y) {\n            if (X > Z) {\n                axis = 0;\n                axis |= (Y > Z ? (1 << 2) | (2 << 4) : (1 << 4) | (2 << 2));//yz:zy;\n            } else {\n                axis = 2;\n                axis |= (X > Y ? (0 << 2) | (1 << 4) : (0 << 4) | (1 << 2));//xy:yx;\n            }\n        } else if (Y > Z) {\n            axis = 1;\n            axis |= (X > Z ? (0 << 2) | (2 << 4) : (0 << 4) | (2 << 2));//xz:zx;\n        } else {\n            axis = 2;\n            axis |= (X > Y ? (0 << 2) | (1 << 4) : (0 << 4) | (1 << 2));//xy:yx;\n        }\n\n\n        return axis;\n    }\n\n    getBodyLen(){\n        return this.bodys.length;\n    }\n}\n\n"]}