{"version":3,"sources":["file:///C:/chickenStarClient/client/assets/scripts/logic/model/hero/HeroData.ts"],"names":["HeroData","_decorator","HeroInfo","Func","HeroDataControl","ccclass","property","heros","ins","_instance","purge","length","getHeros","adds","list","index","v","heroinfo","getById","id","push","merge","initBagHeros","heroInfo","hero","removes","ids","i","remove","Number","forBy","getByItemId","itemId","removeId","removeBy"],"mappings":";;;4HAaaA,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAbUC,MAAAA,U,OAAAA,U;;AAKdC,MAAAA,Q,iBAAAA,Q;;AACAC,MAAAA,I,iBAAAA,I;;AAEAC,MAAAA,e,iBAAAA,e;;;;;;;;;OAEH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBL,U;AAE9B;;0BACaD,Q,GAAN,MAAMA,QAAN,CAAiC;AAAA;AAAA,eAU5BO,KAV4B,GAUR,EAVQ;AAAA;;AAGf,mBAAHC,GAAG,GAAG;AACpB,cAAI,QAAQ,KAAKC,SAAjB,EAA4B;AACxB,iBAAKA,SAAL,GAAiB,IAAIT,QAAJ,EAAjB;AACH;;AACD,iBAAO,KAAKS,SAAZ;AACH;;AAGDC,QAAAA,KAAK,GAAS;AACV,eAAKH,KAAL,CAAWI,MAAX,GAAoB,CAApB;AACH;;AACDC,QAAAA,QAAQ,GAAE;AACN,iBAAO,KAAKL,KAAZ;AACH;;AACDM,QAAAA,IAAI,CAACC,IAAD,EAAqB;AACrB,eAAK,IAAIC,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGD,IAAI,CAACH,MAAjC,EAAyCI,KAAK,EAA9C,EAAkD;AAC9C,gBAAMC,CAAC,GAAGF,IAAI,CAACC,KAAD,CAAd;AACA,gBAAIE,QAAQ,GAAG,KAAKC,OAAL,CAAaF,CAAC,CAACG,EAAf,CAAf;;AACA,gBAAIF,QAAQ,IAAI,IAAhB,EAAsB;AAClBA,cAAAA,QAAQ,GAAG;AAAA;AAAA,yCAAX;AACA,mBAAKV,KAAL,CAAWa,IAAX,CAAgBH,QAAhB;AACH;;AACD,iBAAKI,KAAL,CAAWJ,QAAX,EAAqBD,CAArB;AACH;;AACD,cAAG,KAAKT,KAAL,CAAWI,MAAX,GAAkB,CAArB,EAAuB;AACnB;AAAA;AAAA,oDAAgBH,GAAhB,CAAoBc,YAApB;AACH;AACJ;;AAEDD,QAAAA,KAAK,CAACE,QAAD,EAAqBC,IAArB,EAAuC;AACxCD,UAAAA,QAAQ,CAACF,KAAT,CAAeG,IAAf;AACH;;AAEDC,QAAAA,OAAO,CAACC,GAAD,EAAgB;AACnB,eAAI,IAAIC,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACD,GAAG,CAACf,MAAlB,EAAyBgB,CAAC,EAA1B,EAA6B;AACzB,iBAAKC,MAAL,CAAYF,GAAG,CAACC,CAAD,CAAf;AACH;AACJ;;AAEDT,QAAAA,OAAO,CAACC,EAAD,EAA4B;AAC/B,cAAGA,EAAE,IAAE,CAAP,EAAS;AACL,mBAAO,IAAP;AACH;;AACDA,UAAAA,EAAE,GAAGU,MAAM,CAACV,EAAD,CAAX;AACA,iBAAO;AAAA;AAAA,4BAAKW,KAAL,CAAW,KAAKvB,KAAhB,EAAuB,IAAvB,EAA6BY,EAA7B,CAAP;AACH;;AAEDY,QAAAA,WAAW,CAACC,MAAD,EAA0B;AACjC,iBAAO;AAAA;AAAA,4BAAKF,KAAL,CAAW,KAAKvB,KAAhB,EAAuB,QAAvB,EAAiCyB,MAAjC,CAAP;AACH;;AAEDJ,QAAAA,MAAM,CAACT,EAAD,EAAkB;AACpB,cAAMc,QAAQ,GAAGJ,MAAM,CAACV,EAAD,CAAvB;AACA;AAAA;AAAA,4BAAKe,QAAL,CAAc,KAAK3B,KAAnB,EAA0B,IAA1B,EAAgC0B,QAAhC;AACA;AAAA;AAAA,kDAAgBzB,GAAhB,CAAoBc,YAApB;AACH;;AA1DmC,O;;AAA3BtB,MAAAA,Q,CAEMS,S","sourcesContent":["import { Node, Prefab, _decorator } from \"cc\";\nimport { tab } from \"../../../Table/table_gen\";\nimport { PREVIEW } from \"cc/env\";\nimport { IClear } from \"../../../framework/base/IAbs\";\nimport { proto } from \"client_protocol\";\nimport { HeroInfo } from \"./HeroInfo\";\nimport { Func } from \"../../utils/Func\";\nimport { Long } from \"protobufjs\";\nimport { HeroDataControl } from \"./herobag/HeroDataControl\";\n\nconst { ccclass, property } = _decorator;\n\n/** 英雄数据 */\nexport class HeroData implements IClear {\n\n    private static _instance: HeroData;\n    public static get ins() {\n        if (null == this._instance) {\n            this._instance = new HeroData();\n        }\n        return this._instance;\n    }\n\n    private heros: HeroInfo[] = [];\n    purge(): void {\n        this.heros.length = 0\n    }\n    getHeros(){\n        return this.heros;\n    }\n    adds(list: proto.Hero[]) {\n        for (let index = 0; index < list.length; index++) {\n            const v = list[index];\n            let heroinfo = this.getById(v.id)\n            if (heroinfo == null) {\n                heroinfo = new HeroInfo()\n                this.heros.push(heroinfo)\n            }\n            this.merge(heroinfo, v)\n        }\n        if(this.heros.length>0){\n            HeroDataControl.ins.initBagHeros();\n        }\n    }\n\n    merge(heroInfo: HeroInfo, hero: proto.Hero) {\n        heroInfo.merge(hero)\n    }\n\n    removes(ids: number[]) {\n        for(let i=0;i<ids.length;i++){\n            this.remove(ids[i]);\n        }\n    }\n\n    getById(id: number|Long): HeroInfo {\n        if(id==0){\n            return null;\n        }\n        id = Number(id);\n        return Func.forBy(this.heros, \"id\", id)\n    }\n\n    getByItemId(itemId: number) :HeroInfo{\n        return Func.forBy(this.heros, \"itemId\", itemId)\n    }\n\n    remove(id: number|Long) {\n        const removeId = Number(id);\n        Func.removeBy(this.heros, \"id\", removeId)\n        HeroDataControl.ins.initBagHeros();\n    }\n}"]}