{"version":3,"sources":["file:///C:/chickenStarClient/client/assets/scripts/Table/sensitive_words_gen.ts"],"names":["Data","getData","InitData","json","Table","FromJSON","SensitiveWordsTable","SensitiveWords","result","JSON","parse","reviver","tbl","Object","assign","BuildData","key","value","ResetData","sensitive_tab"],"mappings":";;;;;;;;;;;;;;;;;AAIC;AAEA;AACA;AACA;AAEA,YAAIA,IAAU,GAAG,IAAjB;;AAAiC,iBAASC,OAAT,GAAyB;AAAE,iBAAOD,IAAP;AAAc;;;;AAEnE,iBAASE,QAAT,CAAkBC,IAAlB,EAAuC;AAC7CH,UAAAA,IAAI,GAAGI,KAAK,CAACC,QAAN,CAAeF,IAAf,CAAP;AACA;;;;AAKM,cAAMG,mBAAN,CAA0B;AAAA;AAAA,iBAChCC,cADgC;AAAA,YACR;;;AADQ;;;;AAM1B,cAAMH,KAAN,CAAY;AAAA;AAAA,iBAClBE,mBADkB;AAAA;;AAC0B;AAE5C;AAIA;AACe,iBAARD,QAAQ,CAACF,IAAD,EAA6B;AAC3C,gBAAIK,MAAJ;;AACS,gBAAI,OAAOL,IAAP,KAAgB,QAApB,EAA8B;AAC1B;AACAK,cAAAA,MAAM,GAAEC,IAAI,CAACC,KAAL,CAAWP,IAAX,EAAiBC,KAAK,CAACO,OAAvB,CAAR;AACH,aAHD,MAGO;AACH;AACA,kBAAIC,GAAG,GAAG,IAAIR,KAAJ,EAAV,CAFG,CAGH;;AACAI,cAAAA,MAAM,GAAGK,MAAM,CAACC,MAAP,CAAcF,GAAd,EAAmBT,IAAnB,CAAT;AACH;;AACVK,YAAAA,MAAM,CAACO,SAAP;AACA,mBAAOP,MAAP;AACA;;AAEmB,iBAAPG,OAAO,CAACK,GAAD,EAAcC,KAAd,EAA+B;AACzC,mBAAOD,GAAG,KAAK,EAAR,GAAaZ,KAAK,CAACC,QAAN,CAAeY,KAAf,CAAb,GAAqCA,KAA5C;AACH,WAzBW,CA2BlB;;;AACAC,UAAAA,SAAS,GAAG;AAEX,iBAAKZ,mBAAL,GAA2B,EAA3B;AAEA,WAhCiB,CAkClB;;;AACAS,UAAAA,SAAS,GAAG,CAEX;;AArCiB;;;SAtBHI,a,6BAAAA,a","sourcesContent":["// Generated by github.com/greatwing/tabtoy\n// DO NOT EDIT!!\n// Version: \nexport namespace sensitive_tab {\n\t// export var Data:Table = null;\n\n\t// export function InitData(json: Object|string) {\n\t// \tData = Table.FromJSON(json);\n\t// }\n\n\tvar Data:Table = null;    export function getData():Table { return Data; }\n\n\texport function InitData(json: Object|string) {\n\t\tData = Table.FromJSON(json);\n\t}\n\n\t\n\n\t\n\texport class SensitiveWordsTable { \n\t\tSensitiveWords : string // 屏蔽字 \n\t}\n\t\n\n\t// Combine struct\n\texport class Table { \n\t\tSensitiveWordsTable : SensitiveWordsTable[] // table: SensitiveWordsTable \n\n\t\t// Indices \n\n\t\t\n\n\t\t//根据json创建Table\n\t\tstatic FromJSON(json: Object|string): Table {\n\t\t\tlet result: Table;\n            if (typeof json === 'string') {\n                // if it's a string, parse it first\n                result= JSON.parse(json, Table.reviver);\n            } else {\n                // create an instance of the Table class\n                let tbl = new Table()\n                // copy all the fields from the json object\n                result = Object.assign(tbl, json);\n            }\n\t\t\tresult.BuildData();\n\t\t\treturn result;\n\t\t}\n\n        static reviver(key: string, value: any): any {\n            return key === \"\" ? Table.FromJSON(value) : value;\n        }\n\n\t\t// 清除索引和数据\n\t\tResetData() {\n\t\t\t\n\t\t\tthis.SensitiveWordsTable = [] \n\t\t\t\n\t\t}\n\n\t\t// 构建索引\n\t\tBuildData() {\n\t\t\t\n\t\t}\n\t}\n}\n"]}