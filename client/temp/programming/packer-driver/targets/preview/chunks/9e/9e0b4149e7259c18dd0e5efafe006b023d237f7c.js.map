{"version":3,"sources":["file:///C:/chickenStarClient/client/assets/scripts/Table/table_gen.ts"],"names":["Data","getData","InitData","json","Table","FromJSON","ViewType","ViewZIndex","Module","AttrType","ItemType","ItemQuality","BagType","CurrencyType","PrivilegedType","FunctionType","OpenFunctionName","ItemSource","GoodsType","ChannelType","ServerState","LanguageType","AnimationType","Builds","HeroClass","HeroAptitude","HeroStarUpType","HeroStarDescType","ExtraAttrTarget","MonsterType","AttackType","SkillType","EffectUnit","RunningShotBulletType","BulletType","Trajectory","BulletBorn","SearchEnemy","EnemyFiltrate","DeathType","CommonShow","BuffType","Rule","BuffGroup","ClearType","Triggertype","TriggerCondition","Behavior","TriggerTarget","TriggerGoal","BoundType","PowerType","PveStageType","EggDropType","RobotType","VirtualItemType","EffectTarget","OwnClass","RogueActivationCondition","SoundType","EquipType","EquipGroupType","EquipGroupMode","MasterType","EquipUpgradeType","GeneType","GeneUnlockType","BookSlotType","BookSlotUnlockType","LimitTimeItemType","LimitTimeItemReplace","DropType","DropEventType","AdType","RefreshType","FinishTaskType","TaskType","RankType","RankRewardType","RankClearType","NoticeType","BuyStaminaType","LimitedRewardType","DailyRewardType","MallType","MallTab","MallCostType","HeroCollectionType","VipBonus","BattlePassType","BattlePassTab","BuyGoldType","MailTemplate","GuideType","SceneType","HeadUnlockType","GuildPosition","GuildGiftCond","GuildGiftType","ChatBreviaryType","GuildOFName","PvpType","ItemTable","Id","Name","Type","Quality","Desc","Icon","MarkTopLeft","MarkBottomLeft","MarkTopRight","Sort","SimpleItem","DropId","AcquireWay","ModuleTable","ModuleType","ViewName","Path","ZIndex","OpenFunctionId","GuildOpenFunction","OpenFunctionTable","BattleLv","PlayerLv","CreateDay","VipLv","Privileged","TipsKey","ShowType","RewardItemId","RewardItemNum","FunctionUnlockAnimation","JumpUI","JumpParam","RechargeTable","Price","PriceDollar","PriceTWD","PriceHKD","PriceJPY","GoodsID","RewardItemIds","RefundPenalty","ProductIdP800","ProductId37JP","ActivityCumulativeRechargeTable","IndexId","ActivityId","ShowId","Total","TotalDollar","TotalTWD","TotalHKD","TotalJPY","ServerlistTable","ID","Address","SvcGroup","ReviewSvcGroup","GMAddress","NoticeAddr","NoticeVerAddr","PayVerification","RefreshSessionKey","AllowCORS","SelectServerUrl","ChannelTable","BaseUrl","HotUpdateUrl","BaseUrlTest","HotUpdateUrlTest","BaseLanguage","LanguageList","DefultID","TestSeverID","Currency","ProductType","IosStoreUrl","AndroidStoreUrl","FaceBookUrl","AnimationTable","NextAnimation","AnimationName","FPS","AnimationSpeed","FrameCount","Loop","Offset","Scale","SoundId","AttackPoint","HeroTable","Class","Aptitude","Speciality","DefaultStar","BaseHeroAttrId","Image","WeaponHead","SkillIcon1","SkillIcon2","SkillIcon3","Shadow","Bounds","Born","Idle","Dead","Revive","Idle2","ShotPos","HitPos","RadarChart","RadarHighlight","HeroScore","HeroLevelUpTable","Level","MaterialIds","MaterialNum","MinTeamLevel","HeroStarUpTable","HeroId","HeroStar","NeedStarSteps","CostHeroStar","CostHeroNum","CostItemId","CostItemNum","ResetCostItem","ResetCostNum","MaxLevel","AttrPerLevel","ExtraAttrList","SkillGroupIds","SkillId","DescType","StarName","StarDesc","RogueId","HeroStarStepTable","SkillEnhanceIds","StepDesc","HeroAttrTable","HeroAttrType","HeroAttrValue","HeroCommonCostTable","HeroLevelResonanceTable","NeedLv","AttrTypes","AttrValue","HeroStarResonanceTable","NeedStar","RecommendTeamTable","HeroIdList","IsCore","ItemId","ItemNum","HeroAlbumTable","HeroClassTable","HeroAptitudeTable","SkillBg","BookBg","BookTitle","BookBgSmall","MonsterTable","Speed","BornAnimationId","IdleAnimationId","WalkAnimationId","BeHitAnimationId","DeadAnimationId","SearchRules","AttackRange","SkillIds","ReviveDefeatDistance","IsDefeat","IsHitBack","BuffLocation","BuffVFX","MonsterDieSound","SkillGroupTable","NormalAttack","AttackCount","BreathTime","SkillTable","Priority","Trigger","ActionPriority","ActionID","Expend","Effect","SearchNum","AddBuff","HandEnemy","AddBuffChance","CoolTime","SkillConflict","BulletTime","RunningShot","Bullet","RunningShotBullet","BulletTable","BulletOffset","Rating","EnemyUnit","ForwardArrow","Fission","Penetration","Catapult","Round","Rotate","Centrifugation","ScreenBounce","IntervalEffect","LiveTime","DamageTick","DamageScale","AddEffect","DamageAmount","SameLow","HitChance","HitTrigger","HitEffect","HitShake","HitBack","CollisionInterval","DeathTrigger","OlnyOne","NoHarm","OlnyOneSon","IsReviveClean","BuffTable","VFXID","Duration","Addbuff","CheckAttr","Number","NoOneMemory","EffectTable","EffectType","Parameters","RandomWave","TriggerTable","Chance","TriggerNumber","TriggerCd","Argument","SkillSummonTable","SummonId","Summon","PRBTable","CValue","BoundTable","SkillPowerTable","PowerId","PowerMent","PowerValue","MainChapterTable","StageIds","EliteStageIds","Introduction","ComicID","IconSelect","DailyTaskReward1","DailyTaskNum1","DailyTaskReward2","DailyTaskNum2","DailyTaskReward3","DailyTaskNum3","DailyTaskReward4","DailyTaskNum4","DailyTaskReward5","DailyTaskNum5","PveStageTable","StageId","StageName","StageType","NextLevelId","RecommendFight","LevelArrange","Time","LevelBUFF","EggDropGroup","RougeGroupId","ReviveNumber","LostRewardId","LostRewardNum","Background","MonsterDieDrop","RobotTable","Power","Core","PlayerLevel","Head","Hero","HeroLevel","Book","BookStar","BookLevel","Experience","AddAttrId","VoidStageTable","StageID","HeroID","FeatherEggDrop","EggDropLevel","EggDropExp","EggDropContent","MapBlock","CoordinateX","CoordinateY","Long","High","PveStageDropTable","DropItem","DropItemCount","VirtualItem","VirtualItemId","VirtualAnimationId","VirtualItemIcon","PveTimeDropTable","DropTime","DropCount","PveStageBuffTable","CorrespondingId","Own","Show","ShowIcon","PveAddFeatherDropTable","Count","Times","WorldBossRewardTable","Damage","WorldBossDamTable","EffectId","DailyChallengeBuffTable","HeroBuff","MonsterBuff","DailyChallengeLevelTable","MainStageLimit","IsEasier","Require","ClimbTowerTable","Floor","OpenTime","DailyReward","DailyRewardNum","SkillShow","CrushedValue","BackgroundUrl","AnimationId","RogueTable","Condition","Stage","Skill","SkillGroup","Weight","Mutex","Backlimit","BookId","ActivationCondition","Description","RogueGroupTable","RogueGroup","IsHaveHeroLevelUp","TipsTable","SoundTable","volume","EquipTable","EquipStar","MasterLevel","BaseAttrGroupId","ExtraAttrGroupId","SkillGroupId","EnhanceLimit","RefineLimit","Materials","EquipAttrTable","Base","Growth","EquipAttrGroupTable","Mode","List","EquipSkillTable","Group","Playstyle","SkillIcon","SkillName","SkillDesc","HeroMasterTable","AttrList","EquipUpgradeTable","Moneys","Odds","Amount","GroupId","WordTable","Key","Zh_tw","En_us","Jp_jp","ItemStarClientTable","ItemQualityTable","QualityFrame","HeroBagQuality","HeroBagGrowthQuality","HeroBagLevelQuality","HeroStarBg","QualityColor","HeroPowerScore","Args","Score","HeroAttrClientTable","IsBase","ShowPercent","ShowHeroAttr","GeneLevelTable","UnlockType","UnlockArgs","MaterialIdList","MaterialCountList","EnableIcon","DisableIcon","BookTable","IsWear","PlaystyleName","BookStarTable","ExtraAttrType","ExtraAttrValue","BookDescription","BookLevelTable","Ratio","BookFragmentTable","BaseAmount","BookSeriesTable","BookSlotTable","Slot","BookDictionary","PhaseOneBook","PhaseTwoBook","PhaseThreeBook","PlayerLvTable","Exp","ScrollPaintingTable","SPAttrTypes","SPAttrValue","LimitTimeItemTable","GetItemId","LimitTimeType","LimitTimeValue","ReplaceType","TransformItemId","TransformItemCount","DropTable","ItemList","ItemCount","DropEventTable","NumVal","StrVal","ChapterFristRewardTable","RewardItemIds1","RewardItemNum1","RewardItemIds2","RewardItemNum2","RewardItemIds3","RewardItemNum3","AdvertPosTable","AdvertCount","GachaTable","SubItemId","SubItemBaseCount","ShowCount","Function","AutoDisband","ElixirTable","MaxCount","TaskTable","Revision","FinishType","CanAcceptEarly","FinishParam1","FinishParam2","FinishParam3","BattlePassRewardIds","BattlePassRewardNum","Title","Describe","WeeklyTaskBoxTable","BoxRewardItemIds","BoxRewardItemNum","AchievementTaskTable","PreTaskId","QuestLogTable","TaskIds","ShowLv","QuestLogAttrType","QuestLogAttrValue","RankTable","Length","Range","IsStatic","RankRewardTable","SpecialCount","MailType","MailType2","Ranking","RankCycleRewardTable","Refresh","CycleRanking","CycleDropId","NoticeTable","WordKey","Texts","Param1","Param2","Param3","BuyStaminaTable","GetItemNum","DailyCount","PatrolTable","PveStageId","BaseTimes","BaseItemIds","BaseItemNum","ExtraTimes","ExtraItemIds","ExtraItemNum","ChoiceBoxTable","ChoiceBoxId","ChoiceItemIds","ChoiceItemNum","PveClearStageTable","ClearRewardItemIds","ClearRewardItemNum","PveSweepTable","SweepRewardItemIds","SweepRewardItemNum","LimitedRewardTable","TriggerHour","TriggerType","TriggerParam","TriggerRewardId","TriggerRewardCount","RewardId","RewardCount","FirstTriggerInterval","TriggerInterval","FirstRechargeTable","RechargeId","ContainGoodsId","FRItemIds","FRItemNum","RateShow","ButtonIcon","IconAnimationId","ChallengeButtonTable","ShowItemId","DailyRewardTable","NextId","DailyRewardItemTable","Index","MallTable","MallId","IsDefinite","PrefabUrl","Version","MallItemTabe","GetItemIds","CostType","CostItemIds","LimitCount","OpenFunction","IconUrl","BuyDiamondsTable","GoodsId","FirstAdd","Add","ViewSpecial","DailyShopTable","ShopId","ItemGroupId","BuyCout","DailyShopItemTable","Advert","DiscountIcon","HeroCollectionTable","Params","BreakEggTable","MaxScore","VipTable","VipExp","ShowVipLv","VipDailyRewardIds","VipDailyRewardNum","VipRewardIds","VipRewardNum","VipCostItemIds","VipCostItemNum","ShowCost","VipBonusTable","AddValue","MonthlyPassTable","BuyRewardIds","BuyRewardNum","RewardIds","RewardNum","MonthlyPassBonus","MonthlyPassValue","BattlePassTable","PassType","PassValue","BuyLvCostId","BuyLvCostNum","IsBattleBtn","BuyGoldTable","CostItemCount","PurchaseCount","NewPlayerDailyGiftTable","ShowStar","ActivityNewPlayerTaskTable","TaskIds1","TaskIds2","ActivityNewPlayerTaskScoreTable","MainChapterGiftTable","MainChapterId","ServerMailTable","Sender","Content","ExpireTime","ExistsTime","AttachmentID","AttachmentCount","ActivityTable","ActivityName","ActivityIds","ButtonIconUrl","ActivityNewServerTable","OpenDay","EndDay","ItemClientJumpTable","ActivityRankTable","RankId","EndTimes","RandomNameTable","FirstName","LastName","GuideTable","PreGuide","ScriptName","GuideScene","GuideDialogueTable","IsLeft","PosX","PosY","IsMask","Sound","HeadTable","UnlockParam","HeadFramTable","CheatStageTable","BossIdList","RollCountList","BossHpList","BossDPSList","GuildLevelTable","TaskBoxReward1","TaskRewardNum1","TaskBoxReward2","TaskRewardNum2","TaskBoxReward3","TaskRewardNum3","TaskBoxReward4","TaskRewardNum4","TaskBoxReward5","TaskRewardNum5","GuildPositionTable","Position","KickOut","Appoint","WriteNotification","Proces","Setting","GuildSignInTable","SignInCostDiamond","GuildAttrTable","ShowLevel","GuildBossPointTable","PointRaito","GuildFlagTable","GuildGiftTable","ActivationCond","ActivationParams","DiamondPrice","MinPrice","BargainingRange","Button","ChatBreviaryTable","Text","GuildOpenFunctionTable","Comic","prefabName","NodeName","ComicName","ComicUnlock","GachaUpTable","GachaIds","TabUrl","LoginShowUrl","ActivityHeroGrowTable","FreeRewardId","FreeRewardCount","SignInGiftTable","Day","IsGrand","PopWindowMechanism","PopPriority","MutexID","PvPStageTable","SceneWidth","SceneHeight","PvPStagePositionTable","X","Y","location","FincaFightTeam","UnlockHero","UnlockWeapon","ConfigTable","InitialItems","InitialQuantities","EquipMaxNum","ChangeNameCost","InitialStaminaMaxCount","StaminaResumeTime","MainChapterQuiteCount","InterfaceTxtGreen","InterfaceTxtRed","DailyTaskRewardNeedCount","InitialPatrolMaxTime","QuickPatrolUseItem","QuickPatrolDailyCount","QuickPatrolTime","PatrolRewardCd","PatrolTipsTime","GoldStageSweepFreeCount","GoldStageSweepBuyCount","GoldStageSweepBuyCost","FeedStageSweepFreeCount","FeedStageSweepBuyCount","FeedStageSweepBuyCost","HeroCollectionExistsSec","NewPlayerTask1Duration","NewPlayerTask2Duration","HeroBagNum","HeroBagExpansion","HeroRecycleReward","HeroOneClickUpgradeStars","HeroOneClickUpgradeStarMax","BookStarUniversalMaterial","BookStarUniversalMaterialQuality","weaponLimit","FightDefConstant","FightDefHeroStarConstant","FightDefHeroLevelConstant","FightCriticalConstant","FightCriticalPointTop","FightCriticalCurvature","FightCriticalInflection","FightBaseThumpDamage","FightBaseVertigo","FightDamageColor_0","FightDamageColor_1","FightDamageColor_2","FightDamageColor_3","FightDamageColor_4","TimeScale","FightRogueRefreshCount","CaptainSkill","FrontSkill","FightReviveCountByAd","Deatheffect","Resurrectioneffect","Holding","HoldFull","BulletBaseTarget","FinalBuffId","TapTipsTimes","ShieldLimit","NormalHitBack","WanDaoLocation","RogueHeroRankScore","RogueCaptainScore","RogueWarriorScore","RogueBookBuildsScore","RogueBookCoreScore","RogueBookSkillScore","RogueBookBaseScore","RogueBookKeyScore","RogueCaptainUpMul","RogueSeparatedScore","FriendMaxCount","ApplyFriendMaxCount","BlackListMaxCount","RecommendMaxCount","RecommendTimeLimit","RecommendOfflineLimit","GiftMaxCount","GiftRecvMaxCount","GiftGivingMaxCount","GiftItemId","GiftAmount","DailyShopFreeRefreshCount","DailyShopFreeRefreshCD","DailyShopBuyRefreshCount","DailyShopBuyCostDiamonds","ChatCd","RankUpdateInterval","DailyRewardId","MonthlyPassBothRewardItemIds","MonthlyPassBothRewardItemNum","WorldBossStageId","WorldBossDailyCount","WorldBossDailyBuyCount","WorldBossDailyBuyCostDiamonds","WorldBossShowSkillIds","DailyChallengeCD","DailyChallengeCount","DailyChallengeFreeCount","ClimbTowerDefeatCount","InitialDropFeather","AddDropFeather","RogueFullBackupOption","MailExpireTime","MailMaxCount","GuideStage","GuideStageBuff","GuideStageFeatherGroup","GuideStageRogueGroup","LoadingTipsTime","CreateGuildCostDiamond","GuildChangeNameCost","GuildAttrResetCost","GuildDailyTaskRewardNeedCount","GuildGiftPhase","GuildGiftRefreshWeekday","GuildRankSyncInterval","GuildJoinCd","GuildBossStageId","GuildBossDailyCount","GuildBossDailyBuyCount","GuildBossDailyBuyCostDiamonds","GuildBossShowSkillIds","FincaFightDefaultScore","FincaFightFreeTimes","FincaFightBattleSkip","PvPRogueTick","PveStageDifficultyTag","AchievementTaskTableById","ActivityCumulativeRechargeTableByIndexId","ActivityHeroGrowTableById","ActivityNewPlayerTaskScoreTableById","ActivityNewPlayerTaskTableById","ActivityRankTableById","ActivityTableByActivityId","AdvertPosTableByAdType","AnimationTableById","BattlePassTableById","BookDictionaryByPhaseOneBook","BookFragmentTableById","BookLevelTableById","BookSeriesTableById","BookSlotTableById","BookStarTableById","BookTableById","BoundTableById","BreakEggTableById","BuffTableById","BulletTableById","BuyDiamondsTableByGoodsId","BuyGoldTableByType","BuyStaminaTableByType","ChallengeButtonTableById","ChannelTableByChannelType","ChapterFristRewardTableById","ChatBreviaryTableByType","ChoiceBoxTableByChoiceBoxId","ClimbTowerTableByStageId","ComicByComicID","DailyChallengeBuffTableById","DailyChallengeLevelTableByLevel","DailyRewardTableById","DailyShopItemTableById","DailyShopTableByShopId","DropTableById","EffectTableById","ElixirTableById","EquipAttrGroupTableById","EquipAttrTableById","EquipSkillTableById","EquipTableById","EquipUpgradeTableById","FeatherEggDropById","FincaFightTeamByLevel","FirstRechargeTableById","GachaTableById","GachaUpTableById","GeneLevelTableById","GuideDialogueTableById","GuideTableById","GuildAttrTableById","GuildBossPointTableById","GuildFlagTableById","GuildGiftTableById","GuildLevelTableById","GuildOpenFunctionTableByName","GuildPositionTableByPosition","GuildSignInTableById","HeadFramTableById","HeadTableById","HeroAlbumTableByHeroAptitude","HeroAptitudeTableByHeroAptitude","HeroAttrClientTableByType","HeroAttrTableById","HeroClassTableByHeroClass","HeroCollectionTableById","HeroCommonCostTableById","HeroLevelResonanceTableById","HeroLevelUpTableByLevel","HeroMasterTableById","HeroPowerScoreById","HeroStarResonanceTableById","HeroStarStepTableById","HeroStarUpTableById","HeroTableById","ItemClientJumpTableByItemId","ItemQualityTableByQuality","ItemStarClientTableById","ItemTableById","LimitTimeItemTableByItemId","MainChapterGiftTableByMallId","MainChapterTableById","MallItemTabeById","MallTableByMallId","MapBlockById","ModuleTableByModuleType","MonsterTableById","MonthlyPassTableByType","NewPlayerDailyGiftTableById","NoticeTableById","OpenFunctionTableByName","PRBTableById","PatrolTableByPveStageId","PlayerLvTableByPlayerLv","PopWindowMechanismByID","PvPStageTableByID","PveAddFeatherDropTableByCount","PveClearStageTableByStageId","PveStageBuffTableById","PveStageDropTableByDropId","PveStageTableByStageId","PveSweepTableByStageId","PveTimeDropTableByStageId","QuestLogTableByLevel","RandomNameTableById","RankCycleRewardTableByIndexId","RankRewardTableById","RechargeTableById","RecommendTeamTableById","RobotTableById","RogueGroupTableById","RogueTableById","ScrollPaintingTableById","ServerlistTableByID","SignInGiftTableByDay","SkillGroupTableById","SkillPowerTableById","SkillSummonTableBySummonId","SkillTableById","SoundTableById","TaskTableById","TipsTableById","TriggerTableById","VipBonusTableByIndexId","VipTableByVipLv","VirtualItemByVirtualItemId","VoidStageTableById","WeeklyTaskBoxTableById","WorldBossDamTableById","WorldBossRewardTableById","GetKeyValue_ConfigTable","result","JSON","parse","reviver","tbl","Object","assign","BuildData","key","value","ResetData","Dictionary","v","setValue","constructor","toStrFunction","table","nElements","toStr","defaultToString","getValue","pair","isUndefined","undefined","ret","k","previousElement","remove","keys","array","name","has","push","values","forEach","callback","containsKey","clear","size","isEmpty","toString","toret","item","isString","_hasOwnProperty","prototype","hasOwnProperty","obj","prop","call","defineProperty","target","varArgs","TypeError","to","index","arguments","length","nextSource","nextKey","writable","configurable","tab"],"mappings":";;;;;;;;;;;;;;;;;AAII,YAAIA,IAAU,GAAG,IAAjB;;AAAiC,iBAASC,OAAT,GAAyB;AAAE,iBAAOD,IAAP;AAAc;;;;AAEtE,iBAASE,QAAT,CAAkBC,IAAlB,EAAuC;AAC7CH,UAAAA,IAAI,GAAGI,KAAK,CAACC,QAAN,CAAeF,IAAf,CAAP;AACA;;;;YAGWG,Q,0BAAAA,Q;AAAAA,UAAAA,Q,CAAAA,Q;AAAAA,UAAAA,Q,CAAAA,Q;AAAAA,UAAAA,Q,CAAAA,Q;AAAAA,UAAAA,Q,CAAAA,Q;AAAAA,UAAAA,Q,CAAAA,Q;AAAAA,UAAAA,Q,CAAAA,Q;AAAAA,UAAAA,Q,CAAAA,Q;iBAAAA,Q;;;;;YASAC,U,0BAAAA,U;AAAAA,UAAAA,U,CAAAA,U;AAAAA,UAAAA,U,CAAAA,U;AAAAA,UAAAA,U,CAAAA,U;AAAAA,UAAAA,U,CAAAA,U;AAAAA,UAAAA,U,CAAAA,U;AAAAA,UAAAA,U,CAAAA,U;AAAAA,UAAAA,U,CAAAA,U;iBAAAA,U;;;;;YASAC,M,0BAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;iBAAAA,M;;;;;YA2KAC,Q,0BAAAA,Q;AAAAA,UAAAA,Q,CAAAA,Q;AAAAA,UAAAA,Q,CAAAA,Q;AAAAA,UAAAA,Q,CAAAA,Q;AAAAA,UAAAA,Q,CAAAA,Q;AAAAA,UAAAA,Q,CAAAA,Q;AAAAA,UAAAA,Q,CAAAA,Q;AAAAA,UAAAA,Q,CAAAA,Q;AAAAA,UAAAA,Q,CAAAA,Q;AAAAA,UAAAA,Q,CAAAA,Q;AAAAA,UAAAA,Q,CAAAA,Q;AAAAA,UAAAA,Q,CAAAA,Q;AAAAA,UAAAA,Q,CAAAA,Q;AAAAA,UAAAA,Q,CAAAA,Q;AAAAA,UAAAA,Q,CAAAA,Q;AAAAA,UAAAA,Q,CAAAA,Q;AAAAA,UAAAA,Q,CAAAA,Q;AAAAA,UAAAA,Q,CAAAA,Q;AAAAA,UAAAA,Q,CAAAA,Q;AAAAA,UAAAA,Q,CAAAA,Q;AAAAA,UAAAA,Q,CAAAA,Q;AAAAA,UAAAA,Q,CAAAA,Q;AAAAA,UAAAA,Q,CAAAA,Q;AAAAA,UAAAA,Q,CAAAA,Q;AAAAA,UAAAA,Q,CAAAA,Q;AAAAA,UAAAA,Q,CAAAA,Q;AAAAA,UAAAA,Q,CAAAA,Q;AAAAA,UAAAA,Q,CAAAA,Q;AAAAA,UAAAA,Q,CAAAA,Q;AAAAA,UAAAA,Q,CAAAA,Q;AAAAA,UAAAA,Q,CAAAA,Q;AAAAA,UAAAA,Q,CAAAA,Q;AAAAA,UAAAA,Q,CAAAA,Q;AAAAA,UAAAA,Q,CAAAA,Q;AAAAA,UAAAA,Q,CAAAA,Q;AAAAA,UAAAA,Q,CAAAA,Q;AAAAA,UAAAA,Q,CAAAA,Q;AAAAA,UAAAA,Q,CAAAA,Q;AAAAA,UAAAA,Q,CAAAA,Q;AAAAA,UAAAA,Q,CAAAA,Q;AAAAA,UAAAA,Q,CAAAA,Q;AAAAA,UAAAA,Q,CAAAA,Q;AAAAA,UAAAA,Q,CAAAA,Q;AAAAA,UAAAA,Q,CAAAA,Q;AAAAA,UAAAA,Q,CAAAA,Q;AAAAA,UAAAA,Q,CAAAA,Q;AAAAA,UAAAA,Q,CAAAA,Q;AAAAA,UAAAA,Q,CAAAA,Q;AAAAA,UAAAA,Q,CAAAA,Q;AAAAA,UAAAA,Q,CAAAA,Q;AAAAA,UAAAA,Q,CAAAA,Q;AAAAA,UAAAA,Q,CAAAA,Q;AAAAA,UAAAA,Q,CAAAA,Q;AAAAA,UAAAA,Q,CAAAA,Q;AAAAA,UAAAA,Q,CAAAA,Q;AAAAA,UAAAA,Q,CAAAA,Q;AAAAA,UAAAA,Q,CAAAA,Q;AAAAA,UAAAA,Q,CAAAA,Q;AAAAA,UAAAA,Q,CAAAA,Q;AAAAA,UAAAA,Q,CAAAA,Q;AAAAA,UAAAA,Q,CAAAA,Q;AAAAA,UAAAA,Q,CAAAA,Q;AAAAA,UAAAA,Q,CAAAA,Q;AAAAA,UAAAA,Q,CAAAA,Q;AAAAA,UAAAA,Q,CAAAA,Q;AAAAA,UAAAA,Q,CAAAA,Q;AAAAA,UAAAA,Q,CAAAA,Q;AAAAA,UAAAA,Q,CAAAA,Q;AAAAA,UAAAA,Q,CAAAA,Q;AAAAA,UAAAA,Q,CAAAA,Q;AAAAA,UAAAA,Q,CAAAA,Q;AAAAA,UAAAA,Q,CAAAA,Q;AAAAA,UAAAA,Q,CAAAA,Q;AAAAA,UAAAA,Q,CAAAA,Q;AAAAA,UAAAA,Q,CAAAA,Q;AAAAA,UAAAA,Q,CAAAA,Q;iBAAAA,Q;;;;;YA6EAC,Q,0BAAAA,Q;AAAAA,UAAAA,Q,CAAAA,Q;AAAAA,UAAAA,Q,CAAAA,Q;AAAAA,UAAAA,Q,CAAAA,Q;AAAAA,UAAAA,Q,CAAAA,Q;AAAAA,UAAAA,Q,CAAAA,Q;AAAAA,UAAAA,Q,CAAAA,Q;AAAAA,UAAAA,Q,CAAAA,Q;AAAAA,UAAAA,Q,CAAAA,Q;AAAAA,UAAAA,Q,CAAAA,Q;AAAAA,UAAAA,Q,CAAAA,Q;AAAAA,UAAAA,Q,CAAAA,Q;AAAAA,UAAAA,Q,CAAAA,Q;AAAAA,UAAAA,Q,CAAAA,Q;AAAAA,UAAAA,Q,CAAAA,Q;AAAAA,UAAAA,Q,CAAAA,Q;AAAAA,UAAAA,Q,CAAAA,Q;AAAAA,UAAAA,Q,CAAAA,Q;AAAAA,UAAAA,Q,CAAAA,Q;iBAAAA,Q;;;;;YAoBAC,W,0BAAAA,W;AAAAA,UAAAA,W,CAAAA,W;AAAAA,UAAAA,W,CAAAA,W;AAAAA,UAAAA,W,CAAAA,W;AAAAA,UAAAA,W,CAAAA,W;AAAAA,UAAAA,W,CAAAA,W;AAAAA,UAAAA,W,CAAAA,W;AAAAA,UAAAA,W,CAAAA,W;iBAAAA,W;;;;;YASAC,O,0BAAAA,O;AAAAA,UAAAA,O,CAAAA,O;AAAAA,UAAAA,O,CAAAA,O;AAAAA,UAAAA,O,CAAAA,O;AAAAA,UAAAA,O,CAAAA,O;AAAAA,UAAAA,O,CAAAA,O;AAAAA,UAAAA,O,CAAAA,O;iBAAAA,O;;;;;YAQAC,Y,0BAAAA,Y;AAAAA,UAAAA,Y,CAAAA,Y;AAAAA,UAAAA,Y,CAAAA,Y;AAAAA,UAAAA,Y,CAAAA,Y;AAAAA,UAAAA,Y,CAAAA,Y;AAAAA,UAAAA,Y,CAAAA,Y;AAAAA,UAAAA,Y,CAAAA,Y;AAAAA,UAAAA,Y,CAAAA,Y;AAAAA,UAAAA,Y,CAAAA,Y;AAAAA,UAAAA,Y,CAAAA,Y;AAAAA,UAAAA,Y,CAAAA,Y;AAAAA,UAAAA,Y,CAAAA,Y;AAAAA,UAAAA,Y,CAAAA,Y;AAAAA,UAAAA,Y,CAAAA,Y;AAAAA,UAAAA,Y,CAAAA,Y;AAAAA,UAAAA,Y,CAAAA,Y;AAAAA,UAAAA,Y,CAAAA,Y;iBAAAA,Y;;;;;YAkBAC,c,0BAAAA,c;AAAAA,UAAAA,c,CAAAA,c;AAAAA,UAAAA,c,CAAAA,c;AAAAA,UAAAA,c,CAAAA,c;AAAAA,UAAAA,c,CAAAA,c;AAAAA,UAAAA,c,CAAAA,c;iBAAAA,c;;;;;YAOAC,Y,0BAAAA,Y;AAAAA,UAAAA,Y,CAAAA,Y;AAAAA,UAAAA,Y,CAAAA,Y;iBAAAA,Y;;;;;YAIAC,gB,0BAAAA,gB;AAAAA,UAAAA,gB,CAAAA,gB;AAAAA,UAAAA,gB,CAAAA,gB;AAAAA,UAAAA,gB,CAAAA,gB;AAAAA,UAAAA,gB,CAAAA,gB;AAAAA,UAAAA,gB,CAAAA,gB;AAAAA,UAAAA,gB,CAAAA,gB;AAAAA,UAAAA,gB,CAAAA,gB;AAAAA,UAAAA,gB,CAAAA,gB;AAAAA,UAAAA,gB,CAAAA,gB;AAAAA,UAAAA,gB,CAAAA,gB;AAAAA,UAAAA,gB,CAAAA,gB;AAAAA,UAAAA,gB,CAAAA,gB;AAAAA,UAAAA,gB,CAAAA,gB;AAAAA,UAAAA,gB,CAAAA,gB;AAAAA,UAAAA,gB,CAAAA,gB;AAAAA,UAAAA,gB,CAAAA,gB;AAAAA,UAAAA,gB,CAAAA,gB;AAAAA,UAAAA,gB,CAAAA,gB;AAAAA,UAAAA,gB,CAAAA,gB;AAAAA,UAAAA,gB,CAAAA,gB;AAAAA,UAAAA,gB,CAAAA,gB;AAAAA,UAAAA,gB,CAAAA,gB;AAAAA,UAAAA,gB,CAAAA,gB;AAAAA,UAAAA,gB,CAAAA,gB;AAAAA,UAAAA,gB,CAAAA,gB;AAAAA,UAAAA,gB,CAAAA,gB;AAAAA,UAAAA,gB,CAAAA,gB;AAAAA,UAAAA,gB,CAAAA,gB;AAAAA,UAAAA,gB,CAAAA,gB;AAAAA,UAAAA,gB,CAAAA,gB;AAAAA,UAAAA,gB,CAAAA,gB;AAAAA,UAAAA,gB,CAAAA,gB;AAAAA,UAAAA,gB,CAAAA,gB;AAAAA,UAAAA,gB,CAAAA,gB;AAAAA,UAAAA,gB,CAAAA,gB;AAAAA,UAAAA,gB,CAAAA,gB;AAAAA,UAAAA,gB,CAAAA,gB;AAAAA,UAAAA,gB,CAAAA,gB;AAAAA,UAAAA,gB,CAAAA,gB;AAAAA,UAAAA,gB,CAAAA,gB;AAAAA,UAAAA,gB,CAAAA,gB;AAAAA,UAAAA,gB,CAAAA,gB;AAAAA,UAAAA,gB,CAAAA,gB;AAAAA,UAAAA,gB,CAAAA,gB;AAAAA,UAAAA,gB,CAAAA,gB;AAAAA,UAAAA,gB,CAAAA,gB;AAAAA,UAAAA,gB,CAAAA,gB;AAAAA,UAAAA,gB,CAAAA,gB;AAAAA,UAAAA,gB,CAAAA,gB;AAAAA,UAAAA,gB,CAAAA,gB;AAAAA,UAAAA,gB,CAAAA,gB;AAAAA,UAAAA,gB,CAAAA,gB;AAAAA,UAAAA,gB,CAAAA,gB;AAAAA,UAAAA,gB,CAAAA,gB;AAAAA,UAAAA,gB,CAAAA,gB;AAAAA,UAAAA,gB,CAAAA,gB;AAAAA,UAAAA,gB,CAAAA,gB;AAAAA,UAAAA,gB,CAAAA,gB;AAAAA,UAAAA,gB,CAAAA,gB;AAAAA,UAAAA,gB,CAAAA,gB;AAAAA,UAAAA,gB,CAAAA,gB;AAAAA,UAAAA,gB,CAAAA,gB;AAAAA,UAAAA,gB,CAAAA,gB;AAAAA,UAAAA,gB,CAAAA,gB;AAAAA,UAAAA,gB,CAAAA,gB;AAAAA,UAAAA,gB,CAAAA,gB;AAAAA,UAAAA,gB,CAAAA,gB;AAAAA,UAAAA,gB,CAAAA,gB;AAAAA,UAAAA,gB,CAAAA,gB;AAAAA,UAAAA,gB,CAAAA,gB;AAAAA,UAAAA,gB,CAAAA,gB;AAAAA,UAAAA,gB,CAAAA,gB;AAAAA,UAAAA,gB,CAAAA,gB;AAAAA,UAAAA,gB,CAAAA,gB;AAAAA,UAAAA,gB,CAAAA,gB;AAAAA,UAAAA,gB,CAAAA,gB;AAAAA,UAAAA,gB,CAAAA,gB;AAAAA,UAAAA,gB,CAAAA,gB;AAAAA,UAAAA,gB,CAAAA,gB;AAAAA,UAAAA,gB,CAAAA,gB;AAAAA,UAAAA,gB,CAAAA,gB;AAAAA,UAAAA,gB,CAAAA,gB;AAAAA,UAAAA,gB,CAAAA,gB;AAAAA,UAAAA,gB,CAAAA,gB;AAAAA,UAAAA,gB,CAAAA,gB;AAAAA,UAAAA,gB,CAAAA,gB;AAAAA,UAAAA,gB,CAAAA,gB;AAAAA,UAAAA,gB,CAAAA,gB;AAAAA,UAAAA,gB,CAAAA,gB;AAAAA,UAAAA,gB,CAAAA,gB;AAAAA,UAAAA,gB,CAAAA,gB;AAAAA,UAAAA,gB,CAAAA,gB;AAAAA,UAAAA,gB,CAAAA,gB;AAAAA,UAAAA,gB,CAAAA,gB;AAAAA,UAAAA,gB,CAAAA,gB;AAAAA,UAAAA,gB,CAAAA,gB;AAAAA,UAAAA,gB,CAAAA,gB;AAAAA,UAAAA,gB,CAAAA,gB;AAAAA,UAAAA,gB,CAAAA,gB;AAAAA,UAAAA,gB,CAAAA,gB;AAAAA,UAAAA,gB,CAAAA,gB;AAAAA,UAAAA,gB,CAAAA,gB;AAAAA,UAAAA,gB,CAAAA,gB;AAAAA,UAAAA,gB,CAAAA,gB;AAAAA,UAAAA,gB,CAAAA,gB;AAAAA,UAAAA,gB,CAAAA,gB;AAAAA,UAAAA,gB,CAAAA,gB;AAAAA,UAAAA,gB,CAAAA,gB;AAAAA,UAAAA,gB,CAAAA,gB;AAAAA,UAAAA,gB,CAAAA,gB;AAAAA,UAAAA,gB,CAAAA,gB;AAAAA,UAAAA,gB,CAAAA,gB;AAAAA,UAAAA,gB,CAAAA,gB;AAAAA,UAAAA,gB,CAAAA,gB;AAAAA,UAAAA,gB,CAAAA,gB;AAAAA,UAAAA,gB,CAAAA,gB;AAAAA,UAAAA,gB,CAAAA,gB;AAAAA,UAAAA,gB,CAAAA,gB;iBAAAA,gB;;;;;YAwHAC,U,0BAAAA,U;AAAAA,UAAAA,U,CAAAA,U;AAAAA,UAAAA,U,CAAAA,U;AAAAA,UAAAA,U,CAAAA,U;AAAAA,UAAAA,U,CAAAA,U;AAAAA,UAAAA,U,CAAAA,U;AAAAA,UAAAA,U,CAAAA,U;AAAAA,UAAAA,U,CAAAA,U;AAAAA,UAAAA,U,CAAAA,U;AAAAA,UAAAA,U,CAAAA,U;AAAAA,UAAAA,U,CAAAA,U;AAAAA,UAAAA,U,CAAAA,U;AAAAA,UAAAA,U,CAAAA,U;AAAAA,UAAAA,U,CAAAA,U;AAAAA,UAAAA,U,CAAAA,U;AAAAA,UAAAA,U,CAAAA,U;AAAAA,UAAAA,U,CAAAA,U;AAAAA,UAAAA,U,CAAAA,U;AAAAA,UAAAA,U,CAAAA,U;AAAAA,UAAAA,U,CAAAA,U;AAAAA,UAAAA,U,CAAAA,U;AAAAA,UAAAA,U,CAAAA,U;AAAAA,UAAAA,U,CAAAA,U;AAAAA,UAAAA,U,CAAAA,U;AAAAA,UAAAA,U,CAAAA,U;AAAAA,UAAAA,U,CAAAA,U;AAAAA,UAAAA,U,CAAAA,U;AAAAA,UAAAA,U,CAAAA,U;AAAAA,UAAAA,U,CAAAA,U;AAAAA,UAAAA,U,CAAAA,U;AAAAA,UAAAA,U,CAAAA,U;AAAAA,UAAAA,U,CAAAA,U;AAAAA,UAAAA,U,CAAAA,U;AAAAA,UAAAA,U,CAAAA,U;AAAAA,UAAAA,U,CAAAA,U;AAAAA,UAAAA,U,CAAAA,U;AAAAA,UAAAA,U,CAAAA,U;AAAAA,UAAAA,U,CAAAA,U;AAAAA,UAAAA,U,CAAAA,U;AAAAA,UAAAA,U,CAAAA,U;AAAAA,UAAAA,U,CAAAA,U;AAAAA,UAAAA,U,CAAAA,U;AAAAA,UAAAA,U,CAAAA,U;AAAAA,UAAAA,U,CAAAA,U;AAAAA,UAAAA,U,CAAAA,U;AAAAA,UAAAA,U,CAAAA,U;AAAAA,UAAAA,U,CAAAA,U;AAAAA,UAAAA,U,CAAAA,U;AAAAA,UAAAA,U,CAAAA,U;AAAAA,UAAAA,U,CAAAA,U;AAAAA,UAAAA,U,CAAAA,U;AAAAA,UAAAA,U,CAAAA,U;AAAAA,UAAAA,U,CAAAA,U;AAAAA,UAAAA,U,CAAAA,U;AAAAA,UAAAA,U,CAAAA,U;AAAAA,UAAAA,U,CAAAA,U;AAAAA,UAAAA,U,CAAAA,U;AAAAA,UAAAA,U,CAAAA,U;AAAAA,UAAAA,U,CAAAA,U;AAAAA,UAAAA,U,CAAAA,U;AAAAA,UAAAA,U,CAAAA,U;AAAAA,UAAAA,U,CAAAA,U;AAAAA,UAAAA,U,CAAAA,U;AAAAA,UAAAA,U,CAAAA,U;AAAAA,UAAAA,U,CAAAA,U;AAAAA,UAAAA,U,CAAAA,U;AAAAA,UAAAA,U,CAAAA,U;AAAAA,UAAAA,U,CAAAA,U;AAAAA,UAAAA,U,CAAAA,U;AAAAA,UAAAA,U,CAAAA,U;AAAAA,UAAAA,U,CAAAA,U;AAAAA,UAAAA,U,CAAAA,U;AAAAA,UAAAA,U,CAAAA,U;AAAAA,UAAAA,U,CAAAA,U;AAAAA,UAAAA,U,CAAAA,U;AAAAA,UAAAA,U,CAAAA,U;AAAAA,UAAAA,U,CAAAA,U;AAAAA,UAAAA,U,CAAAA,U;AAAAA,UAAAA,U,CAAAA,U;AAAAA,UAAAA,U,CAAAA,U;AAAAA,UAAAA,U,CAAAA,U;AAAAA,UAAAA,U,CAAAA,U;AAAAA,UAAAA,U,CAAAA,U;AAAAA,UAAAA,U,CAAAA,U;AAAAA,UAAAA,U,CAAAA,U;AAAAA,UAAAA,U,CAAAA,U;AAAAA,UAAAA,U,CAAAA,U;AAAAA,UAAAA,U,CAAAA,U;AAAAA,UAAAA,U,CAAAA,U;AAAAA,UAAAA,U,CAAAA,U;AAAAA,UAAAA,U,CAAAA,U;AAAAA,UAAAA,U,CAAAA,U;AAAAA,UAAAA,U,CAAAA,U;AAAAA,UAAAA,U,CAAAA,U;AAAAA,UAAAA,U,CAAAA,U;AAAAA,UAAAA,U,CAAAA,U;AAAAA,UAAAA,U,CAAAA,U;AAAAA,UAAAA,U,CAAAA,U;AAAAA,UAAAA,U,CAAAA,U;AAAAA,UAAAA,U,CAAAA,U;AAAAA,UAAAA,U,CAAAA,U;AAAAA,UAAAA,U,CAAAA,U;AAAAA,UAAAA,U,CAAAA,U;AAAAA,UAAAA,U,CAAAA,U;AAAAA,UAAAA,U,CAAAA,U;AAAAA,UAAAA,U,CAAAA,U;AAAAA,UAAAA,U,CAAAA,U;AAAAA,UAAAA,U,CAAAA,U;AAAAA,UAAAA,U,CAAAA,U;AAAAA,UAAAA,U,CAAAA,U;AAAAA,UAAAA,U,CAAAA,U;AAAAA,UAAAA,U,CAAAA,U;AAAAA,UAAAA,U,CAAAA,U;AAAAA,UAAAA,U,CAAAA,U;AAAAA,UAAAA,U,CAAAA,U;AAAAA,UAAAA,U,CAAAA,U;AAAAA,UAAAA,U,CAAAA,U;AAAAA,UAAAA,U,CAAAA,U;AAAAA,UAAAA,U,CAAAA,U;AAAAA,UAAAA,U,CAAAA,U;AAAAA,UAAAA,U,CAAAA,U;AAAAA,UAAAA,U,CAAAA,U;AAAAA,UAAAA,U,CAAAA,U;AAAAA,UAAAA,U,CAAAA,U;AAAAA,UAAAA,U,CAAAA,U;AAAAA,UAAAA,U,CAAAA,U;AAAAA,UAAAA,U,CAAAA,U;AAAAA,UAAAA,U,CAAAA,U;AAAAA,UAAAA,U,CAAAA,U;AAAAA,UAAAA,U,CAAAA,U;AAAAA,UAAAA,U,CAAAA,U;AAAAA,UAAAA,U,CAAAA,U;AAAAA,UAAAA,U,CAAAA,U;AAAAA,UAAAA,U,CAAAA,U;AAAAA,UAAAA,U,CAAAA,U;AAAAA,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,CAAAA,S;AAAAA,UAAAA,S,CAAAA,S;AAAAA,UAAAA,S,CAAAA,S;AAAAA,UAAAA,S,CAAAA,S;iBAAAA,S;;;;;YAaAC,S,0BAAAA,S;AAAAA,UAAAA,S,CAAAA,S;AAAAA,UAAAA,S,CAAAA,S;AAAAA,UAAAA,S,CAAAA,S;AAAAA,UAAAA,S,CAAAA,S;AAAAA,UAAAA,S,CAAAA,S;AAAAA,UAAAA,S,CAAAA,S;AAAAA,UAAAA,S,CAAAA,S;AAAAA,UAAAA,S,CAAAA,S;AAAAA,UAAAA,S,CAAAA,S;iBAAAA,S;;;;;YAWAC,W,0BAAAA,W;AAAAA,UAAAA,W,CAAAA,W;AAAAA,UAAAA,W,CAAAA,W;AAAAA,UAAAA,W,CAAAA,W;AAAAA,UAAAA,W,CAAAA,W;AAAAA,UAAAA,W,CAAAA,W;AAAAA,UAAAA,W,CAAAA,W;AAAAA,UAAAA,W,CAAAA,W;AAAAA,UAAAA,W,CAAAA,W;AAAAA,UAAAA,W,CAAAA,W;AAAAA,UAAAA,W,CAAAA,W;AAAAA,UAAAA,W,CAAAA,W;AAAAA,UAAAA,W,CAAAA,W;AAAAA,UAAAA,W,CAAAA,W;AAAAA,UAAAA,W,CAAAA,W;AAAAA,UAAAA,W,CAAAA,W;AAAAA,UAAAA,W,CAAAA,W;AAAAA,UAAAA,W,CAAAA,W;AAAAA,UAAAA,W,CAAAA,W;AAAAA,UAAAA,W,CAAAA,W;AAAAA,UAAAA,W,CAAAA,W;AAAAA,UAAAA,W,CAAAA,W;AAAAA,UAAAA,W,CAAAA,W;AAAAA,UAAAA,W,CAAAA,W;AAAAA,UAAAA,W,CAAAA,W;AAAAA,UAAAA,W,CAAAA,W;AAAAA,UAAAA,W,CAAAA,W;AAAAA,UAAAA,W,CAAAA,W;AAAAA,UAAAA,W,CAAAA,W;AAAAA,UAAAA,W,CAAAA,W;AAAAA,UAAAA,W,CAAAA,W;AAAAA,UAAAA,W,CAAAA,W;iBAAAA,W;;;;;YAiCAC,gB,0BAAAA,gB;AAAAA,UAAAA,gB,CAAAA,gB;AAAAA,UAAAA,gB,CAAAA,gB;AAAAA,UAAAA,gB,CAAAA,gB;AAAAA,UAAAA,gB,CAAAA,gB;AAAAA,UAAAA,gB,CAAAA,gB;AAAAA,UAAAA,gB,CAAAA,gB;AAAAA,UAAAA,gB,CAAAA,gB;AAAAA,UAAAA,gB,CAAAA,gB;AAAAA,UAAAA,gB,CAAAA,gB;AAAAA,UAAAA,gB,CAAAA,gB;AAAAA,UAAAA,gB,CAAAA,gB;AAAAA,UAAAA,gB,CAAAA,gB;AAAAA,UAAAA,gB,CAAAA,gB;AAAAA,UAAAA,gB,CAAAA,gB;AAAAA,UAAAA,gB,CAAAA,gB;AAAAA,UAAAA,gB,CAAAA,gB;AAAAA,UAAAA,gB,CAAAA,gB;AAAAA,UAAAA,gB,CAAAA,gB;AAAAA,UAAAA,gB,CAAAA,gB;AAAAA,UAAAA,gB,CAAAA,gB;AAAAA,UAAAA,gB,CAAAA,gB;AAAAA,UAAAA,gB,CAAAA,gB;AAAAA,UAAAA,gB,CAAAA,gB;iBAAAA,gB;;;;;YAyBAC,Q,0BAAAA,Q;AAAAA,UAAAA,Q,CAAAA,Q;AAAAA,UAAAA,Q,CAAAA,Q;AAAAA,UAAAA,Q,CAAAA,Q;AAAAA,UAAAA,Q,CAAAA,Q;AAAAA,UAAAA,Q,CAAAA,Q;AAAAA,UAAAA,Q,CAAAA,Q;AAAAA,UAAAA,Q,CAAAA,Q;AAAAA,UAAAA,Q,CAAAA,Q;AAAAA,UAAAA,Q,CAAAA,Q;AAAAA,UAAAA,Q,CAAAA,Q;AAAAA,UAAAA,Q,CAAAA,Q;AAAAA,UAAAA,Q,CAAAA,Q;AAAAA,UAAAA,Q,CAAAA,Q;AAAAA,UAAAA,Q,CAAAA,Q;AAAAA,UAAAA,Q,CAAAA,Q;AAAAA,UAAAA,Q,CAAAA,Q;AAAAA,UAAAA,Q,CAAAA,Q;AAAAA,UAAAA,Q,CAAAA,Q;iBAAAA,Q;;;;;YAoBAC,a,0BAAAA,a;AAAAA,UAAAA,a,CAAAA,a;AAAAA,UAAAA,a,CAAAA,a;iBAAAA,a;;;;;YAIAC,W,0BAAAA,W;AAAAA,UAAAA,W,CAAAA,W;AAAAA,UAAAA,W,CAAAA,W;iBAAAA,W;;;;;YAIAC,S,0BAAAA,S;AAAAA,UAAAA,S,CAAAA,S;AAAAA,UAAAA,S,CAAAA,S;iBAAAA,S;;;;;YAIAC,S,0BAAAA,S;AAAAA,UAAAA,S,CAAAA,S;AAAAA,UAAAA,S,CAAAA,S;AAAAA,UAAAA,S,CAAAA,S;AAAAA,UAAAA,S,CAAAA,S;AAAAA,UAAAA,S,CAAAA,S;AAAAA,UAAAA,S,CAAAA,S;iBAAAA,S;;;;;YAQAC,Y,0BAAAA,Y;AAAAA,UAAAA,Y,CAAAA,Y;AAAAA,UAAAA,Y,CAAAA,Y;AAAAA,UAAAA,Y,CAAAA,Y;AAAAA,UAAAA,Y,CAAAA,Y;AAAAA,UAAAA,Y,CAAAA,Y;AAAAA,UAAAA,Y,CAAAA,Y;AAAAA,UAAAA,Y,CAAAA,Y;AAAAA,UAAAA,Y,CAAAA,Y;AAAAA,UAAAA,Y,CAAAA,Y;AAAAA,UAAAA,Y,CAAAA,Y;iBAAAA,Y;;;;;YAYAC,W,0BAAAA,W;AAAAA,UAAAA,W,CAAAA,W;AAAAA,UAAAA,W,CAAAA,W;AAAAA,UAAAA,W,CAAAA,W;iBAAAA,W;;;;;YAKAC,S,0BAAAA,S;AAAAA,UAAAA,S,CAAAA,S;AAAAA,UAAAA,S,CAAAA,S;iBAAAA,S;;;;;YAIAC,e,0BAAAA,e;AAAAA,UAAAA,e,CAAAA,e;AAAAA,UAAAA,e,CAAAA,e;AAAAA,UAAAA,e,CAAAA,e;iBAAAA,e;;;;;YAKAC,Y,0BAAAA,Y;AAAAA,UAAAA,Y,CAAAA,Y;AAAAA,UAAAA,Y,CAAAA,Y;AAAAA,UAAAA,Y,CAAAA,Y;AAAAA,UAAAA,Y,CAAAA,Y;AAAAA,UAAAA,Y,CAAAA,Y;iBAAAA,Y;;;;;YAOAC,Q,0BAAAA,Q;AAAAA,UAAAA,Q,CAAAA,Q;AAAAA,UAAAA,Q,CAAAA,Q;AAAAA,UAAAA,Q,CAAAA,Q;AAAAA,UAAAA,Q,CAAAA,Q;AAAAA,UAAAA,Q,CAAAA,Q;AAAAA,UAAAA,Q,CAAAA,Q;AAAAA,UAAAA,Q,CAAAA,Q;iBAAAA,Q;;;;;YASAC,wB,0BAAAA,wB;AAAAA,UAAAA,wB,CAAAA,wB;AAAAA,UAAAA,wB,CAAAA,wB;iBAAAA,wB;;;;;YAIAC,S,0BAAAA,S;AAAAA,UAAAA,S,CAAAA,S;AAAAA,UAAAA,S,CAAAA,S;iBAAAA,S;;;;;YAIAC,S,0BAAAA,S;AAAAA,UAAAA,S,CAAAA,S;AAAAA,UAAAA,S,CAAAA,S;AAAAA,UAAAA,S,CAAAA,S;AAAAA,UAAAA,S,CAAAA,S;AAAAA,UAAAA,S,CAAAA,S;AAAAA,UAAAA,S,CAAAA,S;AAAAA,UAAAA,S,CAAAA,S;iBAAAA,S;;;;;YASAC,c,0BAAAA,c;AAAAA,UAAAA,c,CAAAA,c;AAAAA,UAAAA,c,CAAAA,c;AAAAA,UAAAA,c,CAAAA,c;AAAAA,UAAAA,c,CAAAA,c;iBAAAA,c;;;;;YAMAC,c,0BAAAA,c;AAAAA,UAAAA,c,CAAAA,c;AAAAA,UAAAA,c,CAAAA,c;AAAAA,UAAAA,c,CAAAA,c;AAAAA,UAAAA,c,CAAAA,c;iBAAAA,c;;;;;YAMAC,U,0BAAAA,U;AAAAA,UAAAA,U,CAAAA,U;AAAAA,UAAAA,U,CAAAA,U;AAAAA,UAAAA,U,CAAAA,U;AAAAA,UAAAA,U,CAAAA,U;iBAAAA,U;;;;;YAMAC,gB,0BAAAA,gB;AAAAA,UAAAA,gB,CAAAA,gB;AAAAA,UAAAA,gB,CAAAA,gB;AAAAA,UAAAA,gB,CAAAA,gB;AAAAA,UAAAA,gB,CAAAA,gB;iBAAAA,gB;;;;;YAMAC,Q,0BAAAA,Q;AAAAA,UAAAA,Q,CAAAA,Q;AAAAA,UAAAA,Q,CAAAA,Q;AAAAA,UAAAA,Q,CAAAA,Q;iBAAAA,Q;;;;;YAKAC,c,0BAAAA,c;AAAAA,UAAAA,c,CAAAA,c;AAAAA,UAAAA,c,CAAAA,c;AAAAA,UAAAA,c,CAAAA,c;iBAAAA,c;;;;;YAKAC,Y,0BAAAA,Y;AAAAA,UAAAA,Y,CAAAA,Y;AAAAA,UAAAA,Y,CAAAA,Y;AAAAA,UAAAA,Y,CAAAA,Y;AAAAA,UAAAA,Y,CAAAA,Y;AAAAA,UAAAA,Y,CAAAA,Y;AAAAA,UAAAA,Y,CAAAA,Y;AAAAA,UAAAA,Y,CAAAA,Y;iBAAAA,Y;;;;;YASAC,kB,0BAAAA,kB;AAAAA,UAAAA,kB,CAAAA,kB;AAAAA,UAAAA,kB,CAAAA,kB;iBAAAA,kB;;;;;YAIAC,iB,0BAAAA,iB;AAAAA,UAAAA,iB,CAAAA,iB;AAAAA,UAAAA,iB,CAAAA,iB;iBAAAA,iB;;;;;YAIAC,oB,0BAAAA,oB;AAAAA,UAAAA,oB,CAAAA,oB;AAAAA,UAAAA,oB,CAAAA,oB;AAAAA,UAAAA,oB,CAAAA,oB;iBAAAA,oB;;;;;YAKAC,Q,0BAAAA,Q;AAAAA,UAAAA,Q,CAAAA,Q;AAAAA,UAAAA,Q,CAAAA,Q;AAAAA,UAAAA,Q,CAAAA,Q;AAAAA,UAAAA,Q,CAAAA,Q;AAAAA,UAAAA,Q,CAAAA,Q;iBAAAA,Q;;;;;YAOAC,a,0BAAAA,a;AAAAA,UAAAA,a,CAAAA,a;AAAAA,UAAAA,a,CAAAA,a;AAAAA,UAAAA,a,CAAAA,a;AAAAA,UAAAA,a,CAAAA,a;AAAAA,UAAAA,a,CAAAA,a;AAAAA,UAAAA,a,CAAAA,a;AAAAA,UAAAA,a,CAAAA,a;iBAAAA,a;;;;;YASAC,M,0BAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;AAAAA,UAAAA,M,CAAAA,M;iBAAAA,M;;;;;YAmBAC,W,0BAAAA,W;AAAAA,UAAAA,W,CAAAA,W;AAAAA,UAAAA,W,CAAAA,W;AAAAA,UAAAA,W,CAAAA,W;AAAAA,UAAAA,W,CAAAA,W;AAAAA,UAAAA,W,CAAAA,W;iBAAAA,W;;;;;YAOAC,c,0BAAAA,c;AAAAA,UAAAA,c,CAAAA,c;AAAAA,UAAAA,c,CAAAA,c;AAAAA,UAAAA,c,CAAAA,c;AAAAA,UAAAA,c,CAAAA,c;AAAAA,UAAAA,c,CAAAA,c;AAAAA,UAAAA,c,CAAAA,c;AAAAA,UAAAA,c,CAAAA,c;AAAAA,UAAAA,c,CAAAA,c;AAAAA,UAAAA,c,CAAAA,c;AAAAA,UAAAA,c,CAAAA,c;AAAAA,UAAAA,c,CAAAA,c;AAAAA,UAAAA,c,CAAAA,c;AAAAA,UAAAA,c,CAAAA,c;AAAAA,UAAAA,c,CAAAA,c;AAAAA,UAAAA,c,CAAAA,c;AAAAA,UAAAA,c,CAAAA,c;AAAAA,UAAAA,c,CAAAA,c;AAAAA,UAAAA,c,CAAAA,c;AAAAA,UAAAA,c,CAAAA,c;AAAAA,UAAAA,c,CAAAA,c;AAAAA,UAAAA,c,CAAAA,c;AAAAA,UAAAA,c,CAAAA,c;AAAAA,UAAAA,c,CAAAA,c;AAAAA,UAAAA,c,CAAAA,c;AAAAA,UAAAA,c,CAAAA,c;AAAAA,UAAAA,c,CAAAA,c;AAAAA,UAAAA,c,CAAAA,c;AAAAA,UAAAA,c,CAAAA,c;AAAAA,UAAAA,c,CAAAA,c;AAAAA,UAAAA,c,CAAAA,c;AAAAA,UAAAA,c,CAAAA,c;AAAAA,UAAAA,c,CAAAA,c;AAAAA,UAAAA,c,CAAAA,c;AAAAA,UAAAA,c,CAAAA,c;AAAAA,UAAAA,c,CAAAA,c;AAAAA,UAAAA,c,CAAAA,c;AAAAA,UAAAA,c,CAAAA,c;AAAAA,UAAAA,c,CAAAA,c;iBAAAA,c;;;;;YAwCAC,Q,0BAAAA,Q;AAAAA,UAAAA,Q,CAAAA,Q;AAAAA,UAAAA,Q,CAAAA,Q;AAAAA,UAAAA,Q,CAAAA,Q;AAAAA,UAAAA,Q,CAAAA,Q;AAAAA,UAAAA,Q,CAAAA,Q;AAAAA,UAAAA,Q,CAAAA,Q;AAAAA,UAAAA,Q,CAAAA,Q;AAAAA,UAAAA,Q,CAAAA,Q;iBAAAA,Q;;;;;YAUAC,Q,0BAAAA,Q;AAAAA,UAAAA,Q,CAAAA,Q;AAAAA,UAAAA,Q,CAAAA,Q;AAAAA,UAAAA,Q,CAAAA,Q;AAAAA,UAAAA,Q,CAAAA,Q;AAAAA,UAAAA,Q,CAAAA,Q;AAAAA,UAAAA,Q,CAAAA,Q;AAAAA,UAAAA,Q,CAAAA,Q;AAAAA,UAAAA,Q,CAAAA,Q;AAAAA,UAAAA,Q,CAAAA,Q;AAAAA,UAAAA,Q,CAAAA,Q;AAAAA,UAAAA,Q,CAAAA,Q;AAAAA,UAAAA,Q,CAAAA,Q;AAAAA,UAAAA,Q,CAAAA,Q;AAAAA,UAAAA,Q,CAAAA,Q;AAAAA,UAAAA,Q,CAAAA,Q;iBAAAA,Q;;;;;YAiBAC,c,0BAAAA,c;AAAAA,UAAAA,c,CAAAA,c;AAAAA,UAAAA,c,CAAAA,c;AAAAA,UAAAA,c,CAAAA,c;AAAAA,UAAAA,c,CAAAA,c;AAAAA,UAAAA,c,CAAAA,c;iBAAAA,c;;;;;YAOAC,a,0BAAAA,a;AAAAA,UAA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","sourcesContent":["// Generated by github.com/greatwing/tabtoy\r\n// DO NOT EDIT!!\r\n// Version: \r\nexport namespace tab {\r\n    var Data:Table = null;    export function getData():Table { return Data; }\r\n\r\n\texport function InitData(json: Object|string) {\r\n\t\tData = Table.FromJSON(json);\r\n\t}\r\n\r\n\t\r\n\texport enum ViewType { \r\n\t\tViewType_Diy = 0, // 不处理 \r\n\t\tViewType_View = 1, // 全屏 \r\n\t\tViewType_Pop = 2, // 弹窗 \r\n\t\tViewType_Persist = 3, // 常驻 \r\n\t\tViewType_Box = 4, // 宝箱 \r\n\t\tViewType_Tips = 5, // 提示 \r\n\t\tViewType_Award = 6, // 奖励 \r\n\t}\r\n\texport enum ViewZIndex { \r\n\t\tViewZIndex_View = 100, // View \r\n\t\tViewZIndex_Pop = 200, // Pop \r\n\t\tViewZIndex_Box = 300, // Box \r\n\t\tViewZIndex_Tips = 400, // Tips \r\n\t\tViewZIndex_Award = 500, // Award \r\n\t\tViewZIndex_Loading = 600, // Loading \r\n\t\tViewZIndex_Reconnect = 700, // Reconnect \r\n\t}\r\n\texport enum Module { \r\n\t\tModule_Unknown = 0, // 无效值 \r\n\t\tModule_LoginView = 1, // 登录界面 \r\n\t\tModule_HomeMainView = 2, // 主界面 \r\n\t\tModule_ConfirmPop = 3, // ConfirmPop \r\n\t\tModule_DynamicAtlas = 4, // DynamicAtlas \r\n\t\tModule_Reconnect = 5, // Reconnect \r\n\t\tModule_AzheGmPop = 6, // AzheGmPop \r\n\t\tModule_FightUIView = 7, // FightUIView \r\n\t\tModule_BattleMainView = 8, // 主线关卡主界面 \r\n\t\tModule_CongratulationPop = 9, // 恭喜获得弹窗 \r\n\t\tModule_BattleMainRewardPop = 10, // 通关奖励弹窗 \r\n\t\tModule_HeroBagView = 11, // 英雄背包界面 \r\n\t\tModule_BagPop = 12, // 背包弹窗 \r\n\t\tModule_DrugView = 13, // 丹药界面 \r\n\t\tModule_PaintingView = 14, // 绘卷界面 \r\n\t\tModule_RareBookView = 15, // 秘籍主界面 \r\n\t\tModule_TalentView = 16, // 天赋界面 \r\n\t\tModule_EquipmentView = 17, // 装备主界面 \r\n\t\tModule_EquipResolvePop = 18, // 装备分解界面 \r\n\t\tModule_EquipMasterPop = 19, // 装备大师界面 \r\n\t\tModule_RecruitView = 20, // 英雄招募界面 \r\n\t\tModule_JadeDetailPop = 21, // 玉佩详情界面 \r\n\t\tModule_JadeSelectPop = 22, // 玉佩选择界面 \r\n\t\tModule_JadeRecastPop = 23, // 玉佩重铸界面 \r\n\t\tModule_JadeSkillPreviewPop = 24, // 玉佩技能预览界面 \r\n\t\tModule_JadePreviewPop = 25, // 玉佩预览界面 \r\n\t\tModule_SkinPreviewPop = 26, // 皮肤预览界面 \r\n\t\tModule_RareBookDetailView = 27, // 秘籍详情界面 \r\n\t\tModule_RareBookRewardPreviewPop = 28, // 秘籍奖励预览弹窗 \r\n\t\tModule_RareBookGuaranteedPop = 29, // 秘籍保底界面弹窗 \r\n\t\tModule_RareBookLevelPreviewPop = 30, // 秘籍参悟预览弹窗 \r\n\t\tModule_RareBookEquipPop = 31, // 秘籍装备弹窗 \r\n\t\tModule_RareBookGroupPop = 32, // 秘籍组合弹窗 \r\n\t\tModule_RareBookExchangePop = 33, // 秘籍残卷转换弹窗 \r\n\t\tModule_HeroDetailView = 34, // 英雄详情界面 \r\n\t\tModule_HeroResolvePop = 35, // 英雄遣散弹窗 \r\n\t\tModule_HeroResonancePop = 36, // 英雄共鸣弹窗 \r\n\t\tModule_HeroSkillPop = 37, // 英雄技能弹窗 \r\n\t\tModule_HeroRecommendPop = 38, // 英雄阵容推荐弹窗 \r\n\t\tModule_HeroAutoAscendPop = 39, // 英雄一键升星弹窗 \r\n\t\tModule_HeroResetPop = 40, // 英雄重置弹窗 \r\n\t\tModule_GameplayView = 41, // 游戏玩法界面 \r\n\t\tModule_InstanceZonesView = 42, // 副本界面 \r\n\t\tModule_InstanceRewardPop = 43, // 副本奖励弹窗 \r\n\t\tModule_PatrolPop = 44, // 巡逻弹窗 \r\n\t\tModule_EquipmentDetailPop = 45, // 装备详情弹窗 \r\n\t\tModule_CrazyChickenPop = 46, // 疯狂砸鸡弹窗 \r\n\t\tModule_LimitedBenefitsPop = 47, // 限时福利弹窗 \r\n\t\tModule_FirstRechargePop = 48, // 首充弹窗 \r\n\t\tModule_NewPlayerSignInView = 49, // 新服签到界面 \r\n\t\tModule_SignInView = 50, // 七日签到界面 \r\n\t\tModule_HeroRoadView = 51, // 侠客之路界面 \r\n\t\tModule_HeroMaterialPop = 52, // 升星材料弹窗 \r\n\t\tModule_HandbookPop = 53, // 进化指南弹窗 \r\n\t\tModule_MailPop = 54, // 邮件弹窗 \r\n\t\tModule_MailDeletePop = 55, // 删除邮件弹窗 \r\n\t\tModule_CommonTipsPop = 56, // 通用提示弹窗 \r\n\t\tModule_ItemInfoPop = 57, // 背包兑换弹窗 \r\n\t\tModule_Hero7GiftPackPop = 58, // 英雄七日直升礼包弹窗 \r\n\t\tModule_SecretBook14GiftPackPop = 59, // 秘籍七日直升礼包弹窗 \r\n\t\tModule_PaintingAttributePop = 60, // 绘卷属性弹窗 \r\n\t\tModule_PaintingLvupPop = 61, // 绘卷升级弹窗 \r\n\t\tModule_FengyunRankingMainView = 62, // 风云碑界面 \r\n\t\tModule_FengyunRankingView = 63, // 风云排行界面 \r\n\t\tModule_MonthlyCardView = 64, // 月卡界面 \r\n\t\tModule_WelfareActivityMainView = 65, // 超值福利界面 \r\n\t\tModule_VipPrivilegeView = 66, // Vip界面 \r\n\t\tModule_ChatPop = 67, // 聊天 \r\n\t\tModule_ServerChoosePop = 68, // 服务器选择界面 \r\n\t\tModule_FriendPop = 69, // 好友界面 \r\n\t\tModule_TopWarView = 70, // 冠绝一战界面 \r\n\t\tModule_TopWarRankRewardPop = 71, // 冠绝一战排行奖励弹窗 \r\n\t\tModule_PrestigePop = 72, // 江湖名望弹窗 \r\n\t\tModule_RankPop = 73, // 排行榜弹窗 \r\n\t\tModule_RoleInfoPop = 74, // 个人设置弹窗 \r\n\t\tModule_HomeSkinPop = 75, // 更换主界面背景弹窗 \r\n\t\tModule_RoleInfoDecorationsPop = 76, // 更换形象弹窗 \r\n\t\tModule_AssociationView = 77, // 舰队界面 \r\n\t\tModule_NewHandGiftView = 78, // 新手礼包 \r\n\t\tModule_CycleGiftView = 79, // 超值礼包 \r\n\t\tModule_ChapterGiftView = 80, // 章节礼包 \r\n\t\tModule_EveryDayChallengeView = 81, // 每日挑战 \r\n\t\tModule_EveryDayChallengeHelpPop = 82, // 每日挑战帮助弹窗 \r\n\t\tModule_CommonHelpPop = 83, // 通用帮助弹窗 \r\n\t\tModule_HeroAttrPop = 84, // 英雄属性弹窗 \r\n\t\tModule_ForceUpPop = 85, // 战力提升提示 \r\n\t\tModule_CommonBlackTipsPop = 86, // 通用黑色提示弹窗 \r\n\t\tModule_JadeSkillDetailPop = 87, // 玉佩技能弹窗 \r\n\t\tModule_HeroStarSpecialPop = 88, // 英雄高级升星界面 \r\n\t\tModule_PlayerLvUpPop = 89, // 玩家升级弹窗 \r\n\t\tModule_MutationView = 90, // 突变界面 \r\n\t\tModule_RareBookInfoItemPop = 91, // 秘籍详情弹窗 \r\n\t\tModule_WeaponPop = 92, // 武器图鉴弹窗 \r\n\t\tModule_RecruitProbabilityPop = 93, // 招募概率预览弹窗 \r\n\t\tModule_RecruitGetPop = 94, // 招募结果弹窗 \r\n\t\tModule_StarUpPop = 95, // 升星弹窗 \r\n\t\tModule_RoleInfoRedemptionCodePop = 96, // 礼包兑换弹窗 \r\n\t\tModule_RoleInfoChangeNamePop = 97, // 改名弹窗 \r\n\t\tModule_RoleInfoHomeSkinPop = 98, // 更换主界面背景弹窗 \r\n\t\tModule_RoleInfoNoticePop = 99, // 公告界面 \r\n\t\tModule_TaskView = 100, // 任务界面 \r\n\t\tModule_RecruitGuaranteePop = 101, // 抽卡保底弹窗 \r\n\t\tModule_RareBookGetPop = 102, // 武器获得弹窗 \r\n\t\tModule_NewHeroPop = 103, // 新英雄获得弹窗 \r\n\t\tModule_CommonBoxTipsPop = 104, // 任务宝箱道具弹窗 \r\n\t\tModule_CheckRoleInfoPop = 105, // 其他玩家信息弹窗 \r\n\t\tModule_CheckRoleInfoReportPop = 106, // 其他玩家举报弹窗 \r\n\t\tModule_CheckRoleInfoHeroPop = 107, // 其他玩家英雄弹窗 \r\n\t\tModule_ResourceBuyPop = 108, // 购买资源弹窗 \r\n\t\tModule_EnergyAccumulatePop = 109, // 累计体力弹窗 \r\n\t\tModule_MallMainView = 110, // 商店主界面 \r\n\t\tModule_WarningPop = 111, // 战斗警告弹窗 \r\n\t\tModule_RoguePop = 112, // 战斗升级弹窗 \r\n\t\tModule_FightWinPop = 113, // 战斗胜利界面 \r\n\t\tModule_FightLosePop = 114, // 战斗失败界面 \r\n\t\tModule_DiamondBuyPop = 115, // 快捷购买钻石界面 \r\n\t\tModule_ActivityMainView = 116, // 活动中心界面 \r\n\t\tModule_BattlePassView = 117, // 战令界面 \r\n\t\tModule_ClimbingTowerMainView = 118, // 爬塔界面 \r\n\t\tModule_RookieTaskPop = 119, // 试炼活动界面 \r\n\t\tModule_ClimbingTowerTowerEveryDayRewardPop = 120, // 爬塔每日奖励弹窗 \r\n\t\tModule_ClimbingTowerRewardPop = 121, // 爬塔阶段奖励弹窗 \r\n\t\tModule_JobMallShopView = 122, // 职业特卖界面 \r\n\t\tModule_EquipFettersPop = 123, // 装备大师升星弹窗 \r\n\t\tModule_FunctionUnlockPop = 124, // 功能解锁弹窗 \r\n\t\tModule_RecruitProProbabilityPop = 125, // 职业扭蛋概率展示弹窗 \r\n\t\tModule_RecruitFriendProbabilityPop = 126, // 好友扭蛋概率展示弹窗 \r\n\t\tModule_RareBookProbabilityPop = 127, // 秘籍抽奖概率展示弹窗 \r\n\t\tModule_RareBookSrProbabilityPop = 128, // sr秘籍抽奖概率展示弹窗 \r\n\t\tModule_RecruitMustProbabilityPop = 129, // 必出SSR概率公示弹窗 \r\n\t\tModule_CommunityPop = 130, // 社群弹窗 \r\n\t\tModule_InspirePop = 131, // 五星好评弹窗 \r\n\t\tModule_EveryDayBuffPop = 132, // 日常挑战buff弹窗 \r\n\t\tModule_AssociationMainView = 133, // 舰队详情界面 \r\n\t\tModule_AssociationApplyView = 134, // 舰队申请界面 \r\n\t\tModule_AssociationOperatePop = 135, // 舰队处理弹窗 \r\n\t\tModule_AssociationInfoPop = 136, // 舰队详情弹窗 \r\n\t\tModule_AssociationChangeFlagPop = 137, // 舰队修改旗帜弹窗 \r\n\t\tModule_AssociationLogPop = 138, // 舰队日志弹窗 \r\n\t\tModule_AssociationApplyListPop = 139, // 舰队申请列表弹窗 \r\n\t\tModule_AssociationGiftPop = 140, // 舰队礼包弹窗 \r\n\t\tModule_AssociationSkillPop = 141, // 舰队技能弹窗 \r\n\t\tModule_AssociationTaskPop = 142, // 舰队任务弹窗 \r\n\t\tModule_AssociationAttrPop = 143, // 舰队技能属性弹窗 \r\n\t\tModule_AssociationBossView = 144, // 舰队BOSS界面 \r\n\t\tModule_AssociationRankPop = 145, // 舰队BOSS排行榜弹窗 \r\n\t\tModule_AssociationRankRewardPop = 146, // 舰队BOSS排行奖励弹窗 \r\n\t\tModule_AssociationMainPop = 147, // 舰队申请详情弹窗 \r\n\t\tModule_AssociationCreatePop = 148, // 创建舰队弹窗 \r\n\t\tModule_AssociationChangeNoticePop = 149, // 舰队更换公告弹窗 \r\n\t\tModule_AssociationChangeInfoPop = 150, // 舰队更换信息弹窗 \r\n\t\tModule_AssociationDonatePop = 151, // 舰队捐献弹窗 \r\n\t\tModule_AssociationSkillResetPop = 152, // 舰队技能重置弹窗 \r\n\t\tModule_AssociationBossRewardPop = 153, // 舰队BOSS宝箱奖励弹窗 \r\n\t\tModule_FightAssociationBossResultPop = 154, // 舰队BOSS伤害结算弹窗 \r\n\t\tModule_NewPlayerSignInPop = 155, // 萌新签到弹窗 \r\n\t\tModule_ReviveTipsPop = 156, // 复活弹窗 \r\n\t\tModule_SignInGiftPop = 157, // 签到送抽弹窗 \r\n\t\tModule_CombineActivityMainView = 158, // 活动组界面 \r\n\t\tModule_RecruitLimitView = 159, // 限定卡池界面 \r\n\t\tModule_BannerPop = 160, // banner图弹窗 \r\n\t\tModule_RecruitLimitProbabilityPop1000 = 161, // 活动组1000概率公示 \r\n\t\tModule_FincaFightView = 162, // 庄园战主界面 \r\n\t\tModule_FincaFightStageView = 163, // 庄园战布阵界面 \r\n\t\tModule_FincaFightRankRewardPop = 164, // 庄园战排行奖励弹窗 \r\n\t\tModule_FincaFightLogPop = 165, // 庄园战战报弹窗 \r\n\t\tModule_ItemBuyPop = 166, // 道具购买弹窗 \r\n\t\tModule_BattleMainRecordPop = 167, // 通关纪录弹窗 \r\n\t\tModule_ItemGetWayPop = 168, // 获取途径弹窗 \r\n\t}\r\n\texport enum AttrType { \r\n\t\tAttrType_None = 0, // 无效值 \r\n\t\tAttrType_Attack = 1, // 攻击 \r\n\t\tAttrType_Hp = 2, // 生命 \r\n\t\tAttrType_Defence = 3, // 防御 \r\n\t\tAttrType_BreakDefenceFixed = 4, // 破防固定值 \r\n\t\tAttrType_BreakDefencePer = 5, // 破防百分比 \r\n\t\tAttrType_Block = 6, // 格挡 \r\n\t\tAttrType_Critical = 7, // 会心 \r\n\t\tAttrType_CriticalDamageAdd = 8, // 会心增伤 \r\n\t\tAttrType_CriticalPoint = 9, // 暴击点数 \r\n\t\tAttrType_ResistCriticalPoint = 10, // 暴击抵抗 \r\n\t\tAttrType_CriticalPer = 11, // 暴击率 \r\n\t\tAttrType_ResistCriticalPer = 12, // 暴抗率 \r\n\t\tAttrType_CriticalDamage = 13, // 暴击伤害 \r\n\t\tAttrType_ResistCriticalDamage = 14, // 暴击减免 \r\n\t\tAttrType_BulletSpeed = 15, // 子弹倍率 \r\n\t\tAttrType_DamagePer1 = 16, // 攻击百分比1 \r\n\t\tAttrType_DefencePer1 = 17, // 防御百分比1 \r\n\t\tAttrType_HpPer = 18, // 生命百分比 \r\n\t\tAttrType_DamagePer2 = 19, // 攻击百分比2 \r\n\t\tAttrType_DefencePer2 = 20, // 防御百分比2 \r\n\t\tAttrType_DamagePer3 = 21, // 攻击百分比3 \r\n\t\tAttrType_DefencePer3 = 22, // 防御百分比3 \r\n\t\tAttrType_DamageAdd = 23, // 伤害增加 \r\n\t\tAttrType_DamageReduce = 24, // 伤害减免 \r\n\t\tAttrType_FinalDamage = 25, // 最终伤害 \r\n\t\tAttrType_FinalDamageReduce = 26, // 最终减免 \r\n\t\tAttrType_DamageResult = 27, // 伤害结果 \r\n\t\tAttrType_HeroStar = 28, // 英雄星级 \r\n\t\tAttrType_EquipSkill = 29, // 装备技能 \r\n\t\tAttrType_AttackHeal = 30, // 攻击治疗 \r\n\t\tAttrType_HealDeep = 31, // 治疗效果加成 \r\n\t\tAttrType_AttackTear = 32, // 攻击撕裂 \r\n\t\tAttrType_TearCoe = 33, // 撕裂系数修正 \r\n\t\tAttrType_TearDeep = 34, // 撕裂伤害加深 \r\n\t\tAttrType_BigHpHeal = 35, // 最大生命百分比回血 \r\n\t\tAttrType_NowHpHeal = 36, // 当前生命百分比掉血 \r\n\t\tAttrType_InitialScroll = 37, // 初始卷轴 \r\n\t\tAttrType_AddScroll = 38, // 额外卷轴 \r\n\t\tAttrType_RefreshCount = 39, // 刷新次数 \r\n\t\tAttrType_BreathTimePercent = 40, // 调息时间百分比 \r\n\t\tAttrType_AttackNum = 41, // 攻击次数 \r\n\t\tAttrType_AttackSpeed = 42, // 攻击速度 \r\n\t\tAttrType_RogueLevel = 43, // 重数 \r\n\t\tAttrType_TargetHpDamageAdd = 44, // 目标生命比例伤害增加 \r\n\t\tAttrType_TearEffect = 45, // 撕裂效果 \r\n\t\tAttrType_SpeedMoveAdd = 46, // 移速加成 \r\n\t\tAttrType_Stealth = 47, // 隐身 \r\n\t\tAttrType_Invincible = 48, // 无敌 \r\n\t\tAttrType_AttackShield = 49, // 攻击护盾 \r\n\t\tAttrType_BigHpShield = 50, // 最大生命护盾 \r\n\t\tAttrType_ShieldDeep = 51, // 护盾效果加成 \r\n\t\tAttrType_TransferDamage = 52, // 连带伤害 \r\n\t\tAttrType_VertigoPer = 53, // 眩晕概率 \r\n\t\tAttrType_Vertigo = 54, // 眩晕效果 \r\n\t\tAttrType_BreathPer = 55, // 调息速度百分比 \r\n\t\tAttrType_IgnorePer = 56, // 无视防御 \r\n\t\tAttrType_BigHpLoss = 57, // 最大生命百分比掉血 \r\n\t\tAttrType_DamageResultReduce = 58, // 结果减免 \r\n\t\tAttrType_BossDamageAdd = 59, // Boss增伤 \r\n\t\tAttrType_HpHealShieldPer = 60, // 生命回复护盾增益 \r\n\t\tAttrType_NegativeBuffImmunity = 61, // 负面buff免疫 \r\n\t\tAttrType_CriticalEffect = 62, // 会心效果 \r\n\t\tAttrType_BeCriticalEffect = 63, // 被会心效果 \r\n\t\tAttrType_CriticalPerEffect = 64, // 暴击效果 \r\n\t\tAttrType_BeCriticalPerEffect = 65, // 被暴击效果 \r\n\t\tAttrType_DamageReduceCoefficientFix = 66, // 怪物减伤系数修正 \r\n\t\tAttrType_ShieldLimit = 67, // 护盾上限 \r\n\t\tAttrType_CriticalTimes = 68, // 会心倍率 \r\n\t\tAttrType_HitBackChance = 69, // 击退概率 \r\n\t\tAttrType_HoldTimePercent = 70, // 蓄力时间百分比 \r\n\t\tAttrType_HpPer2 = 71, // 生命百分比2 \r\n\t\tAttrType_TotalAttack = 101, // 总攻击 \r\n\t\tAttrType_TotalDefence = 102, // 总防御 \r\n\t\tAttrType_TotalHp = 103, // 总生命 \r\n\t}\r\n\texport enum ItemType { \r\n\t\tItemType_UnknownItem = 0, // 无效值 \r\n\t\tItemType_Currency = 1, // 货币 \r\n\t\tItemType_Hero = 2, // 英雄 \r\n\t\tItemType_IdleReward = 3, // 挂机奖励 \r\n\t\tItemType_Piece = 4, // 碎片 \r\n\t\tItemType_Material = 5, // 材料 \r\n\t\tItemType_Equip = 6, // 装备 \r\n\t\tItemType_Gift = 7, // 礼包 \r\n\t\tItemType_HeroCommonCost = 8, // 英雄耗材 \r\n\t\tItemType_Head = 10, // 头像 \r\n\t\tItemType_HeadFrame = 11, // 头像框 \r\n\t\tItemType_ChatBubble = 12, // 聊天框 \r\n\t\tItemType_LimitTimeItem = 13, // 限时道具 \r\n\t\tItemType_MainScene = 14, // 主城场景 \r\n\t\tItemType_Book = 15, // 秘籍 \r\n\t\tItemType_Box = 16, // 随机宝箱 \r\n\t\tItemType_Elixir = 17, // 丹药 \r\n\t\tItemType_ChoiceBox = 18, // 自选宝箱 \r\n\t}\r\n\texport enum ItemQuality { \r\n\t\tItemQuality_Green = 1, // 绿 \r\n\t\tItemQuality_Blue = 2, // 蓝 \r\n\t\tItemQuality_Purple = 3, // 紫 \r\n\t\tItemQuality_Gold = 4, // 金 \r\n\t\tItemQuality_Red = 5, // 红 \r\n\t\tItemQuality_White = 6, // 白 \r\n\t\tItemQuality_Colourful = 7, // 天蓝 \r\n\t}\r\n\texport enum BagType { \r\n\t\tBagType_None = 0, // 不显示 \r\n\t\tBagType_Goods = 1, // 道具 \r\n\t\tBagType_Fragment = 2, // 碎片 \r\n\t\tBagType_Consumable = 3, // 材料 \r\n\t\tBagType_Equip = 4, // 装备 \r\n\t\tBagType_Jade = 5, // 羽毛 \r\n\t}\r\n\texport enum CurrencyType { \r\n\t\tCurrencyType_UnknownCurrency = 0, // 无效值 \r\n\t\tCurrencyType_Diamond = 1, // 钻石 \r\n\t\tCurrencyType_Gold = 2, // 金币 \r\n\t\tCurrencyType_RoleExp = 3, // 角色经验 \r\n\t\tCurrencyType_VipExp = 4, // Vip经验 \r\n\t\tCurrencyType_ResolveCurrency = 5, // 遣散券 \r\n\t\tCurrencyType_Stamina = 6, // 体力 \r\n\t\tCurrencyType_DailyActivity = 7, // 日活跃度 \r\n\t\tCurrencyType_WeeklyActivity = 8, // 周活跃度 \r\n\t\tCurrencyType_Friendship = 9, // 友情点 \r\n\t\tCurrencyType_FastTravel = 10, // 快速游历 \r\n\t\tCurrencyType_Voucher = 11, // 代金券 \r\n\t\tCurrencyType_GuildCurrency = 84, // 鸡舍建材 \r\n\t\tCurrencyType_FincaFightTicket = 85, // 庄园挑战券 \r\n\t\tCurrencyType_ReviveCurrency = 202, // 复活币 \r\n\t\tCurrencyType_Feed = 1001, // 饲料 \r\n\t}\r\n\texport enum PrivilegedType { \r\n\t\tPrivilegedType_None = 0, // 无 \r\n\t\tPrivilegedType_MonthlyPass = 1, // 普通月卡 \r\n\t\tPrivilegedType_PremiumMonthlyPass = 2, // 至尊月卡 \r\n\t\tPrivilegedType_BattlePassStamina = 3, // 体力战令 \r\n\t\tPrivilegedType_WorldBossPass = 4, // 生化危机战令 \r\n\t}\r\n\texport enum FunctionType { \r\n\t\tFunctionType_Function = 0, // 功能 \r\n\t\tFunctionType_Activity = 1, // 活动 \r\n\t}\r\n\texport enum OpenFunctionName { \r\n\t\tOpenFunctionName_None = 0, // 无 \r\n\t\tOpenFunctionName_Drug = 1, // 丹药 \r\n\t\tOpenFunctionName_ScrollPainting = 2, // 绘卷 \r\n\t\tOpenFunctionName_RareBook = 3, // 武器库 \r\n\t\tOpenFunctionName_Gene = 4, // 基因 \r\n\t\tOpenFunctionName_Equipment = 5, // 装备 \r\n\t\tOpenFunctionName_Jade = 6, // 装备-羽毛 \r\n\t\tOpenFunctionName_Patrol = 7, // 巡逻 \r\n\t\tOpenFunctionName_HeroLevelResonance = 8, // 英雄等级共鸣 \r\n\t\tOpenFunctionName_HeroStarResonanceTable = 9, // 英雄星级共鸣 \r\n\t\tOpenFunctionName_GachaHero = 10, // 高级扭蛋 \r\n\t\tOpenFunctionName_GachaHeroClass = 11, // 职业扭蛋 \r\n\t\tOpenFunctionName_GachaFriendHero = 12, // 好友扭蛋 \r\n\t\tOpenFunctionName_GachaBook = 13, // 武器库扭蛋 \r\n\t\tOpenFunctionName_MainChapter = 14, // 主线关卡 \r\n\t\tOpenFunctionName_DailyTask = 15, // 每日任务 \r\n\t\tOpenFunctionName_WeeklyTask = 16, // 每周任务 \r\n\t\tOpenFunctionName_AchievementTask = 17, // 成就任务 \r\n\t\tOpenFunctionName_GachaBookSR = 18, // SR武器扭蛋 \r\n\t\tOpenFunctionName_GachaHeroSSR = 19, // SSR英雄扭蛋 \r\n\t\tOpenFunctionName_DismissalShop = 20, // 遣散商店 \r\n\t\tOpenFunctionName_AssassinShop = 21, // 战士商店 \r\n\t\tOpenFunctionName_ArcherShop = 22, // 法师商店 \r\n\t\tOpenFunctionName_PriestShop = 23, // 刺客商店 \r\n\t\tOpenFunctionName_CasterShop = 24, // 射手商店 \r\n\t\tOpenFunctionName_WarriorShop = 25, // 牧师商店 \r\n\t\tOpenFunctionName_DiamondShop = 26, // 钻石商店 \r\n\t\tOpenFunctionName_BossShop = 27, // Boss商店 \r\n\t\tOpenFunctionName_HeroCollection = 28, // 舰队启航 \r\n\t\tOpenFunctionName_NewServerSignIn = 29, // 新服签到 \r\n\t\tOpenFunctionName_DailySignIn = 30, // 7日签到 \r\n\t\tOpenFunctionName_DailyShop = 31, // 每日商店 \r\n\t\tOpenFunctionName_FightSpeed2 = 32, // 战斗2倍速 \r\n\t\tOpenFunctionName_FightSpeed3 = 33, // 战斗3倍速 \r\n\t\tOpenFunctionName_FightAuto = 34, // 自动战斗 \r\n\t\tOpenFunctionName_SkipAd = 35, // 跳过广告 \r\n\t\tOpenFunctionName_Guide = 36, // 进化指南 \r\n\t\tOpenFunctionName_Mail = 37, // 邮件 \r\n\t\tOpenFunctionName_Rank = 38, // 排行榜入口 \r\n\t\tOpenFunctionName_Friend = 39, // 好友 \r\n\t\tOpenFunctionName_CrazyChicken = 40, // 疯狂砸鸡 \r\n\t\tOpenFunctionName_LimitBenifit = 41, // 限时奖励 \r\n\t\tOpenFunctionName_Prestage = 42, // 冒险日志 \r\n\t\tOpenFunctionName_Chat = 43, // 聊天入口 \r\n\t\tOpenFunctionName_FirstRecharge = 44, // 首充 \r\n\t\tOpenFunctionName_Welfare = 45, // 福利入口 \r\n\t\tOpenFunctionName_Challenge = 46, // 挑战入口 \r\n\t\tOpenFunctionName_Recruit = 47, // 扭蛋入口 \r\n\t\tOpenFunctionName_Association = 48, // 舰队 \r\n\t\tOpenFunctionName_PvpShop = 49, // 竞赛商店 \r\n\t\tOpenFunctionName_MonthlyPass = 50, // 月卡 \r\n\t\tOpenFunctionName_BattlePassMainChapter1 = 51, // 主线战令1 \r\n\t\tOpenFunctionName_BattlePassMainChapter2 = 52, // 主线战令2 \r\n\t\tOpenFunctionName_BattlePassMainChapter3 = 53, // 主线战令3 \r\n\t\tOpenFunctionName_BattlePassMainChapter4 = 54, // 主线战令4 \r\n\t\tOpenFunctionName_BattlePassMainChapter5 = 55, // 主线战令5 \r\n\t\tOpenFunctionName_BattlePassMainChapter6 = 56, // 主线战令6 \r\n\t\tOpenFunctionName_BattlePassMainChapter7 = 57, // 主线战令7 \r\n\t\tOpenFunctionName_BattlePassMainChapter8 = 58, // 主线战令8 \r\n\t\tOpenFunctionName_BattlePassMainChapter9 = 59, // 主线战令9 \r\n\t\tOpenFunctionName_BattlePassMainChapter10 = 60, // 主线战令10 \r\n\t\tOpenFunctionName_BattlePassMainChapter11 = 61, // 主线战令11 \r\n\t\tOpenFunctionName_BattlePassPlayerLv1 = 62, // 等级战令1 \r\n\t\tOpenFunctionName_BattlePassPlayerLv2 = 63, // 等级战令2 \r\n\t\tOpenFunctionName_BattlePassPlayerLv3 = 64, // 等级战令3 \r\n\t\tOpenFunctionName_BattlePassPlayerLv4 = 65, // 等级战令4 \r\n\t\tOpenFunctionName_BattlePassPlayerLv5 = 66, // 等级战令5 \r\n\t\tOpenFunctionName_BattlePassPlayerLv6 = 67, // 等级战令6 \r\n\t\tOpenFunctionName_BattlePassPlayerLv7 = 68, // 等级战令7 \r\n\t\tOpenFunctionName_BattlePassPlayerLv8 = 69, // 等级战令8 \r\n\t\tOpenFunctionName_BattlePassPlayerLv9 = 70, // 等级战令9 \r\n\t\tOpenFunctionName_BattlePassStamina = 71, // 体力战令 \r\n\t\tOpenFunctionName_BattlePassSignIn1 = 72, // 活动战令 \r\n\t\tOpenFunctionName_DailyStageSweepAll = 73, // 日常探险一键扫荡 \r\n\t\tOpenFunctionName_DailyShopBuyAll = 74, // 每日商店一键购买 \r\n\t\tOpenFunctionName_Vip = 75, // VIP特权 \r\n\t\tOpenFunctionName_WorldBossSweepAll = 78, // 生化危鸡一键扫荡 \r\n\t\tOpenFunctionName_WorldBossFreeBuyCount = 79, // 免费购买生化危鸡次数 \r\n\t\tOpenFunctionName_WorldBoss = 80, // 生化危鸡 \r\n\t\tOpenFunctionName_WorldBossPass = 81, // 生化危鸡战令 \r\n\t\tOpenFunctionName_NewPlayerDailyGift = 82, // 创角每日礼包 \r\n\t\tOpenFunctionName_SpecialGiftDaily = 83, // 日礼包 \r\n\t\tOpenFunctionName_SpecialGiftWeekly = 84, // 周礼包 \r\n\t\tOpenFunctionName_SpecialGiftMonthly = 85, // 月礼包 \r\n\t\tOpenFunctionName_ActivityNewPlayerTask = 86, // 新手试炼 \r\n\t\tOpenFunctionName_MainChapterGift = 87, // 章节礼包 \r\n\t\tOpenFunctionName_ActivityNewPlayerTask2 = 88, // 精英试炼 \r\n\t\tOpenFunctionName_DailyChallenge = 89, // 每日挑战 \r\n\t\tOpenFunctionName_DailyChallengeSweepAll = 90, // 每日挑战一键扫荡 \r\n\t\tOpenFunctionName_Hero7GiftPack = 91, // 英雄七日直升礼包入口 \r\n\t\tOpenFunctionName_SecretBook14GiftPack = 92, // 秘籍七日直升礼包入口 \r\n\t\tOpenFunctionName_ClimbTower = 93, // 爬塔 \r\n\t\tOpenFunctionName_Weapon = 94, // 武器图鉴入口 \r\n\t\tOpenFunctionName_QuestLogPass = 95, // 军衔战令1 \r\n\t\tOpenFunctionName_ClimbTowerPass1 = 96, // 爬塔战令1 \r\n\t\tOpenFunctionName_ClimbTowerPass2 = 97, // 爬塔战令2 \r\n\t\tOpenFunctionName_ClimbTowerPass3 = 98, // 爬塔战令3 \r\n\t\tOpenFunctionName_ActivityRank = 99, // 排行活动 \r\n\t\tOpenFunctionName_QuestLogPass2 = 100, // 军衔战令2 \r\n\t\tOpenFunctionName_NewPlayerMall = 101, // 新手商城 \r\n\t\tOpenFunctionName_NewPlayerMall2 = 102, // 精英商城 \r\n\t\tOpenFunctionName_WinResultDoubleReward = 103, // 胜利结算奖励双倍 \r\n\t\tOpenFunctionName_Skin = 104, // 皮肤 \r\n\t\tOpenFunctionName_Handbook = 105, // 英雄图鉴 \r\n\t\tOpenFunctionName_NewPlayerTaskShow = 106, // 新手试炼显示 \r\n\t\tOpenFunctionName_ActivityGachaUp = 107, // UP池和累抽活动 \r\n\t\tOpenFunctionName_ActivityShowGroup = 108, // 活动显示分组 \r\n\t\tOpenFunctionName_ActivityHeroGrow = 109, // 英雄养成计划 \r\n\t\tOpenFunctionName_BuyGold = 110, // 购买金币 \r\n\t\tOpenFunctionName_SignInGift = 111, // 签到777抽 \r\n\t\tOpenFunctionName_MainChapterReward = 112, // 主线通关奖励 \r\n\t\tOpenFunctionName_AutoSelectRogue = 113, // 自动选肉鸽 \r\n\t\tOpenFunctionName_ActivityMall = 114, // 限时商店活动 \r\n\t\tOpenFunctionName_FincaFight = 115, // 庄园竞赛 \r\n\t\tOpenFunctionName_QuestLogPass3 = 116, // 军衔战令3 \r\n\t\tOpenFunctionName_ClimbTowerPass4 = 117, // 爬塔战令4 \r\n\t\tOpenFunctionName_EliteChapter = 118, // 精英关卡 \r\n\t\tOpenFunctionName_ActivityCumulativeRecharge = 119, // 累充活动 \r\n\t}\r\n\texport enum ItemSource { \r\n\t\tItemSource_None = 0, // 未知 \r\n\t\tItemSource_HeroLvlUp = 1, // 英雄升级 \r\n\t\tItemSource_HeroStarUpgrade = 2, // 英雄升星 \r\n\t\tItemSource_HeroResetLv = 3, // 英雄重置等级 \r\n\t\tItemSource_HeroResetStar = 4, // 英雄重置星级 \r\n\t\tItemSource_HeroDisband = 5, // 英雄遣散 \r\n\t\tItemSource_HeroAlbumActivation = 6, // 英雄图鉴激活 \r\n\t\tItemSource_EquipmentEnhance = 7, // 装备强化 \r\n\t\tItemSource_EquipmentRefine = 8, // 装备淬炼 \r\n\t\tItemSource_EquipmentDecompose = 9, // 装备分解 \r\n\t\tItemSource_FeatherRecast = 10, // 羽毛技能重铸 \r\n\t\tItemSource_HeroStarStepUpgrade = 11, // 英雄星级升阶 \r\n\t\tItemSource_SmallGeneUpgrade = 12, // 小基因升级 \r\n\t\tItemSource_BigGeneUpgrade = 13, // 大基因升级 \r\n\t\tItemSource_UpgradeBookStar = 14, // 武器强化升星 \r\n\t\tItemSource_UpgradeBookLevel = 15, // 武器打磨升级 \r\n\t\tItemSource_SwitchBookFragment = 16, // 零件转换 \r\n\t\tItemSource_CombineBookFragment = 17, // 武器零件合成 \r\n\t\tItemSource_GachaHeroToOne = 18, // 高级扭蛋-单抽 \r\n\t\tItemSource_GachaHeroToTen = 19, // 高级扭蛋-十连 \r\n\t\tItemSource_GachaArcherHeroToOne = 20, // 射手扭蛋-单抽 \r\n\t\tItemSource_GachaArcherHeroToTen = 21, // 射手扭蛋-十连 \r\n\t\tItemSource_GachaAssassinHeroToOne = 22, // 刺客扭蛋-单抽 \r\n\t\tItemSource_GachaAssassinHeroToTen = 23, // 刺客扭蛋-十连 \r\n\t\tItemSource_GachaCasterHeroToOne = 24, // 法师扭蛋-单抽 \r\n\t\tItemSource_GachaCasterHeroToTen = 25, // 法师扭蛋-十连 \r\n\t\tItemSource_GachaPriestHeroToOne = 26, // 牧师扭蛋-单抽 \r\n\t\tItemSource_GachaPriestHeroToTen = 27, // 牧师扭蛋-十连 \r\n\t\tItemSource_GachaWarriorHeroToOne = 28, // 战士扭蛋-单抽 \r\n\t\tItemSource_GachaWarriorHeroToTen = 29, // 战士扭蛋-十连 \r\n\t\tItemSource_GachaFriendHeroToOne = 30, // 好友扭蛋-单抽 \r\n\t\tItemSource_GachaFriendHeroToTen = 31, // 好友扭蛋-十连 \r\n\t\tItemSource_GachaHeroSSR = 32, // SSR英雄扭蛋 \r\n\t\tItemSource_GachaBookToOne = 33, // 武器扭蛋-单抽 \r\n\t\tItemSource_GachaBookToTen = 34, // 武器扭蛋-十连 \r\n\t\tItemSource_GachaBookSR = 35, // SR武器扭蛋 \r\n\t\tItemSource_UseElixir = 36, // 捕虫食用 \r\n\t\tItemSource_DailyGift = 37, // 每日礼物 \r\n\t\tItemSource_LimitedReward = 38, // 限时奖励 \r\n\t\tItemSource_DailyReward = 39, // 每日签到 \r\n\t\tItemSource_DismissalShop = 40, // 遣散商店购买 \r\n\t\tItemSource_AssassinShop = 41, // 战士商店购买 \r\n\t\tItemSource_ArcherShop = 42, // 法师商店购买 \r\n\t\tItemSource_PriestShop = 43, // 刺客商店购买 \r\n\t\tItemSource_CasterShop = 44, // 射手商店购买 \r\n\t\tItemSource_WarriorShop = 45, // 牧师商店购买 \r\n\t\tItemSource_DiamondShop = 46, // 钻石直购 \r\n\t\tItemSource_BossShop = 47, // Boss商店购买 \r\n\t\tItemSource_HeroCollection = 48, // 舰队启航 \r\n\t\tItemSource_DailyShop = 49, // 每日商店购买 \r\n\t\tItemSource_BreakEgg = 50, // 砸金蛋 \r\n\t\tItemSource_PvpShop = 51, // 庄园竞赛商店 \r\n\t\tItemSource_BuyMonthlyPass = 52, // 购买月卡 \r\n\t\tItemSource_MonthlyPassReward = 53, // 领取月卡奖励 \r\n\t\tItemSource_BuyGold = 54, // 购买金币 \r\n\t\tItemSource_NewPlayerDailyGift = 55, // 创角每日礼包 \r\n\t\tItemSource_SpecialGiftDaily = 56, // 日礼包 \r\n\t\tItemSource_SpecialGiftWeekly = 57, // 周礼包 \r\n\t\tItemSource_SpecialGiftMonthly = 58, // 月礼包 \r\n\t\tItemSource_ActivityNewPlayerTask = 59, // 新手任务活动 \r\n\t\tItemSource_MainChapterGift = 60, // 章节礼包 \r\n\t\tItemSource_WorldBoss = 61, // 生化危鸡 \r\n\t\tItemSource_DailyChallenge = 62, // 每日挑战 \r\n\t\tItemSource_BattlePass = 63, // 战令 \r\n\t\tItemSource_StartClimbTower = 64, // 开始爬塔关卡 \r\n\t\tItemSource_ResetCyclicalTask = 65, // 重置周期任务 \r\n\t\tItemSource_ReceiveDailyActivityRewards = 66, // 领取每日活跃度奖励 \r\n\t\tItemSource_ReceiveWeeklyActivityRewards = 67, // 领取每周活跃度奖励 \r\n\t\tItemSource_StartExploreStage = 68, // 开始探险关卡 \r\n\t\tItemSource_UpHeroBagCapacityLevel = 69, // 升级英雄背包等级 \r\n\t\tItemSource_ReceiveRecommendTeamRewards = 70, // 领取推荐阵容奖励 \r\n\t\tItemSource_ReceiveHeroAlbumRewards = 71, // 领取英雄图鉴奖励 \r\n\t\tItemSource_StartMainStage = 72, // 开始主线关卡 \r\n\t\tItemSource_ReceiveMainStageDoubleWinRewards = 73, // 领取主线关卡双倍奖励 \r\n\t\tItemSource_ReceiveMainFirstReward = 74, // 领取主线关卡首通将领 \r\n\t\tItemSource_ReceiveNewPlayerTrialScoreRewards = 75, // 领取新手试炼评分奖励 \r\n\t\tItemSource_ReceiveOpenFunctionReward = 76, // 领取功能开启奖励 \r\n\t\tItemSource_ReceivePatrolRewards = 77, // 领取巡逻奖励 \r\n\t\tItemSource_QuickPatrol = 78, // 快速巡逻奖励 \r\n\t\tItemSource_AdQuickPatrol = 79, // 广告快速巡逻 \r\n\t\tItemSource_RefreshQuickPatrolTimes = 80, // 刷新快速巡逻次数 \r\n\t\tItemSource_BuyDiamonds = 81, // 购买钻石 \r\n\t\tItemSource_FirstRecharge = 82, // 购买首充奖励 \r\n\t\tItemSource_RechargeRewards = 83, // 充值奖励 \r\n\t\tItemSource_PayByVoucher = 84, // 通过代金券支付 \r\n\t\tItemSource_BuyPremiumMonthlyPass = 85, // 购买至尊月卡 \r\n\t\tItemSource_PremiumMonthlyPassReward = 86, // 至尊月卡每日奖励 \r\n\t\tItemSource_ReceiveMontylyPassAddtionalRewards = 87, // 领取月卡加码奖励 \r\n\t\tItemSource_UpRoleLevelRewards = 88, // 角色升级奖励 \r\n\t\tItemSource_ReceiveMailRewards = 89, // 领取邮件奖励 \r\n\t\tItemSource_ReviveOnStage = 90, // 在关卡中复活 \r\n\t\tItemSource_RefreshStamina = 91, // 刷新体力 \r\n\t\tItemSource_BuyStamina = 92, // 购买体力 \r\n\t\tItemSource_BuyVipGift = 93, // 购买VIP礼包 \r\n\t\tItemSource_ReceiveVipDailyGift = 94, // 领取VIP每日礼包 \r\n\t\tItemSource_ClearExpiredLimitItem = 95, // 清理过期限时道具 \r\n\t\tItemSource_FinishStage = 96, // 结束关卡 \r\n\t\tItemSource_CreateRole = 97, // 创建角色 \r\n\t\tItemSource_GmModify = 98, // GM修改 \r\n\t\tItemSource_UseItem = 99, // 使用道具 \r\n\t\tItemSource_UseRedeemCode = 100, // 使用兑换码 \r\n\t\tItemSource_ReceiveBattlePassTaskRewards = 101, // 领取战令任务奖励 \r\n\t\tItemSource_ReceiveNewPlayerTrialTaskRewards = 102, // 领取新手试炼任务奖励 \r\n\t\tItemSource_ReceiveDailyTaskRewards = 103, // 领取每日任务奖励 \r\n\t\tItemSource_ReceiveWeeklyTaskRewards = 104, // 领取每周任务奖励 \r\n\t\tItemSource_ReceiveAchievementRewards = 105, // 领取成就任务奖励 \r\n\t\tItemSource_ReceiveQuestLogTaskRewards = 106, // 领取冒险日志任务奖励 \r\n\t\tItemSource_SweepExploreStage = 107, // 扫荡日常探险关卡 \r\n\t\tItemSource_ReceiveClimbTowerDailyRewards = 108, // 领取爬塔每日奖励 \r\n\t\tItemSource_ReceiveHonorRollTasksRewards = 109, // 领取荣耀榜任务奖励 \r\n\t\tItemSource_NewPlayerMall = 110, // 新手商城 \r\n\t\tItemSource_NewPlayerMall2 = 111, // 精英商城 \r\n\t\tItemSource_ReceiveClearExploreStageRewards = 112, // 领取日常探险通关奖励 \r\n\t\tItemSource_ReceiveClearClimbTowerStageRewards = 113, // 领取森林迷踪通关奖励 \r\n\t\tItemSource_ChangeRoleName = 114, // 修改角色名称 \r\n\t\tItemSource_RefreshVipBonus = 115, // 更新VIP加成 \r\n\t\tItemSource_GuildShop = 116, // 鸡舍宝库购买 \r\n\t\tItemSource_CreateGuild = 117, // 创建公会 \r\n\t\tItemSource_GuildSign = 118, // 公会签到 \r\n\t\tItemSource_BuyGuildGift = 119, // 购买公会礼包 \r\n\t\tItemSource_UpGuildSkill = 120, // 升级公会技能 \r\n\t\tItemSource_ResetGuildSkill = 121, // 重置公会技能 \r\n\t\tItemSource_ReceiveGuildTaskRewards = 122, // 领取公会任务奖励 \r\n\t\tItemSource_ReceiveGuildTaskChestRewards = 123, // 领取公会任务宝箱奖励 \r\n\t\tItemSource_SetGuildNameAndFlag = 124, // 修改公会名称和旗帜 \r\n\t\tItemSource_GuildBoss = 125, // 工会BOSS \r\n\t\tItemSource_GachaHeroUpToOne = 126, // UP池-单抽 \r\n\t\tItemSource_GachaHeroUpToTen = 127, // UP池-十连 \r\n\t\tItemSource_SignInGift = 128, // 签到礼包 \r\n\t\tItemSource_ActivityMall = 129, // 限时商店活动 \r\n\t\tItemSource_ReceiveActivityGachaUpTasksRewards = 130, // 领取卡池up活动任务奖励 \r\n\t\tItemSource_ReceiveFreeHeroGrowReward = 131, // 领取英雄养成活动免费奖励 \r\n\t\tItemSource_BuyHeroGrowReward = 132, // 购买英雄养成活动奖励 \r\n\t\tItemSource_RefundOrder = 133, // 退款 \r\n\t\tItemSource_FinishVoidStage = 134, // 结束虚空关卡 \r\n\t\tItemSource_PVPBuyCount = 135, // 庄园竞赛买券 \r\n\t\tItemSource_FightFincaBattle = 136, // 庄园战对战 \r\n\t}\r\n\texport enum GoodsType { \r\n\t\tGoodsType_FirstRecharge = 0, // 首充 \r\n\t\tGoodsType_BuyDiamonds = 1, // 购买钻石 \r\n\t\tGoodsType_Mall = 2, // 商店购买 \r\n\t\tGoodsType_BreakEgg = 3, // 砸金蛋 \r\n\t\tGoodsType_MonthlyPass = 4, // 月卡 \r\n\t\tGoodsType_BuyBattlePass = 5, // 购买战令 \r\n\t\tGoodsType_NewPlayerDailyGift = 6, // 创角每日礼包 \r\n\t\tGoodsType_ThirdPartyRechargeP800 = 7, // 第三方充值(P800) \r\n\t\tGoodsType_ThirdPartyRecharge37JP = 8, // 第三方充值(37JP) \r\n\t\tGoodsType_ActivityHeroGrow = 9, // 英雄养成计划 \r\n\t}\r\n\texport enum ChannelType { \r\n\t\tChannelType_None = 0, // 浏览器登录测试 \r\n\t\tChannelType_PlayTW = 1, // Play800TW \r\n\t\tChannelType_G37JP = 2, // 37JP \r\n\t}\r\n\texport enum ServerState { \r\n\t\tServerState_Crowded = 0, // 拥挤 \r\n\t\tServerState_Maintain = 1, // 维护 \r\n\t\tServerState_Hot = 2, // 火爆 \r\n\t\tServerState_New = 3, // 新服 \r\n\t}\r\n\texport enum LanguageType { \r\n\t\tLanguageType_Zh_tw = 0, // 中文 \r\n\t\tLanguageType_En_us = 1, // 英文 \r\n\t\tLanguageType_Jp_jp = 2, // 日文 \r\n\t}\r\n\texport enum AnimationType { \r\n\t\tAnimationType_SpriteFrame = 0, // 静态图 \r\n\t\tAnimationType_SkeletonData = 1, // 骨骼动画 \r\n\t\tAnimationType_AnimationClip = 2, // 预制体 \r\n\t\tAnimationType_Plist = 3, // Plist \r\n\t}\r\n\texport enum Builds { \r\n\t\tBuilds_None = 0, // 无 \r\n\t\tBuilds_Core = 1, // 核心 \r\n\t\tBuilds_Skill = 2, // 技能 \r\n\t\tBuilds_HeavyStrike1 = 101, // 重击1 \r\n\t\tBuilds_Rage1 = 102, // 狂暴1 \r\n\t\tBuilds_LightDark1 = 103, // 光暗1 \r\n\t\tBuilds_Aim1 = 104, // 瞄准1 \r\n\t\tBuilds_Bleed1 = 105, // 流血1 \r\n\t\tBuilds_HeavyStrike2 = 201, // 重击2 \r\n\t\tBuilds_Rage2 = 202, // 狂暴2 \r\n\t\tBuilds_LightDark2 = 203, // 光暗2 \r\n\t\tBuilds_Aim2 = 204, // 瞄准2 \r\n\t\tBuilds_Bleed2 = 205, // 流血2 \r\n\t}\r\n\texport enum HeroClass { \r\n\t\tHeroClass_Any = 0, // 任意 \r\n\t\tHeroClass_Assassin = 1, // 刺客 \r\n\t\tHeroClass_Archer = 2, // 射手 \r\n\t\tHeroClass_Priest = 3, // 牧师 \r\n\t\tHeroClass_Caster = 4, // 法师 \r\n\t\tHeroClass_Warrior = 5, // 战士 \r\n\t\tHeroClass_Max = 6, // 最大值 \r\n\t}\r\n\texport enum HeroAptitude { \r\n\t\tHeroAptitude_None = 0, // 无效值 \r\n\t\tHeroAptitude_N = 1, // N \r\n\t\tHeroAptitude_R = 2, // R \r\n\t\tHeroAptitude_SR = 3, // SR \r\n\t\tHeroAptitude_SSR = 4, // SSR \r\n\t}\r\n\texport enum HeroStarUpType { \r\n\t\tHeroStarUpType_AnyHero = 0, // 任意 \r\n\t\tHeroStarUpType_SameNameHero = 1, // 同名 \r\n\t\tHeroStarUpType_SameClassHero = 2, // 同职业 \r\n\t}\r\n\texport enum HeroStarDescType { \r\n\t\tHeroStarDescType_None = 0, // 无效值 \r\n\t\tHeroStarDescType_First = 1, // 招式 \r\n\t\tHeroStarDescType_Second = 2, // 天赋 \r\n\t\tHeroStarDescType_Third = 3, // 觉醒 \r\n\t}\r\n\texport enum ExtraAttrTarget { \r\n\t\tExtraAttrTarget_Mine = 0, // 自身 \r\n\t\tExtraAttrTarget_All = 1, // 全体 \r\n\t}\r\n\texport enum MonsterType { \r\n\t\tMonsterType_None = 0, // 无 \r\n\t\tMonsterType_CommonMonster = 1, // 普通 \r\n\t\tMonsterType_EliteMonster = 2, // 精英 \r\n\t\tMonsterType_BossMonster = 3, // BOSS \r\n\t}\r\n\texport enum AttackType { \r\n\t\tAttackType_Attack = 0, // 普攻 \r\n\t\tAttackType_ActionAttack = 1, // 招式 \r\n\t}\r\n\texport enum SkillType { \r\n\t\tSkillType_None = 0, // 无 \r\n\t\tSkillType_NormalAttack = 1, // 普通攻击 \r\n\t\tSkillType_SpecialAttack = 2, // 特殊攻击 \r\n\t\tSkillType_holdAttack = 3, // 蓄力攻击 \r\n\t\tSkillType_MovesAttack = 4, // 招式攻击 \r\n\t\tSkillType_PassiveSkill = 5, // 被动技能 \r\n\t\tSkillType_TimePush = 6, // 时间释放 \r\n\t}\r\n\texport enum EffectUnit { \r\n\t\tEffectUnit_Mine = 0, // 自身 \r\n\t\tEffectUnit_Friend = 1, // 我方 \r\n\t\tEffectUnit_Enemy = 2, // 敌方 \r\n\t\tEffectUnit_FriendNome = 3, // 友方 \r\n\t}\r\n\texport enum RunningShotBulletType { \r\n\t\tRunningShotBulletType_SameEnemy = 0, // 固定索敌 \r\n\t\tRunningShotBulletType_RuleEnemy = 1, // 规则索敌 \r\n\t}\r\n\texport enum BulletType { \r\n\t\tBulletType_SeekingBullet = 0, // 索敌子弹 \r\n\t\tBulletType_FollowingBullet = 1, // 跟随子弹 \r\n\t}\r\n\texport enum Trajectory { \r\n\t\tTrajectory_StraightLine = 0, // 直线 \r\n\t\tTrajectory_Trackless = 1, // 无轨迹 \r\n\t\tTrajectory_Parabola = 2, // 抛物线 \r\n\t\tTrajectory_TrackingTarget = 3, // 追踪目标 \r\n\t\tTrajectory_Laser = 4, // 激光 \r\n\t\tTrajectory_Trajectory = 5, // 直线轨迹 \r\n\t}\r\n\texport enum BulletBorn { \r\n\t\tBulletBorn_Me = 0, // 自身 \r\n\t\tBulletBorn_She = 1, // 目标 \r\n\t\tBulletBorn_Inherit = 2, // 继承 \r\n\t}\r\n\texport enum SearchEnemy { \r\n\t\tSearchEnemy_None = 0, // 无 \r\n\t\tSearchEnemy_LowBlood = 1, // 血量最少 \r\n\t\tSearchEnemy_Near = 2, // 最近 \r\n\t\tSearchEnemy_Behind = 3, // 后排 \r\n\t\tSearchEnemy_RandomGoal = 4, // 随机 \r\n\t\tSearchEnemy_Mine = 5, // 自身 \r\n\t\tSearchEnemy_Assassin = 6, // 刺客 \r\n\t\tSearchEnemy_Archer = 7, // 射手 \r\n\t\tSearchEnemy_Priest = 8, // 牧师 \r\n\t\tSearchEnemy_Caster = 9, // 法师 \r\n\t\tSearchEnemy_Warrior = 10, // 战士 \r\n\t\tSearchEnemy_All = 11, // 全部 \r\n\t\tSearchEnemy_LowBloodShield = 12, // 血盾最少 \r\n\t}\r\n\texport enum EnemyFiltrate { \r\n\t\tEnemyFiltrate_CanSelectlast = 0, // 可选已攻击目标 \r\n\t\tEnemyFiltrate_Ignorelast = 1, // 忽略上一个目标 \r\n\t\tEnemyFiltrate_NoSelectSame = 2, // 忽略已攻击目标 \r\n\t}\r\n\texport enum DeathType { \r\n\t\tDeathType_HitDeath = 0, // 命中死亡 \r\n\t\tDeathType_TimeDeath = 1, // 时间死亡 \r\n\t\tDeathType_OwnDeath = 2, // 释放者死亡 \r\n\t}\r\n\texport enum CommonShow { \r\n\t\tCommonShow_None = 0, // 无 \r\n\t\tCommonShow_LaunchMask = 1, // 发射遮罩 \r\n\t}\r\n\texport enum BuffType { \r\n\t\tBuffType_None = 0, // 无 \r\n\t\tBuffType_Gain = 1, // 增益 \r\n\t\tBuffType_Loss = 2, // 减益 \r\n\t}\r\n\texport enum Rule { \r\n\t\tRule_TimeNoneEffectNone = 0, // 时间不变，效果不变 \r\n\t\tRule_TimeRefreshEffectNone = 1, // 时间重置，效果不变 \r\n\t\tRule_TimeRefreshEffectadd = 2, // 时间重置，效果叠加 \r\n\t\tRule_TimeAddEffectNone = 3, // 时间叠加，效果不变 \r\n\t\tRule_SingleCount = 4, // 独立计数 \r\n\t}\r\n\texport enum BuffGroup { \r\n\t\tBuffGroup_None = 0, // 无 \r\n\t\tBuffGroup_TearEffect = 1, // 撕裂 \r\n\t\tBuffGroup_TransferDamage = 2, // 连带伤害 \r\n\t\tBuffGroup_StrongWind = 3, // 疾风 \r\n\t\tBuffGroup_RolesBuffLayerNum = 4, // 角色之间共享层数 \r\n\t\tBuffGroup_FiveRollOne = 5, // 词条随机5/1 \r\n\t\tBuffGroup_MonsterAttackHalo = 6, // 怪物加攻光环 \r\n\t\tBuffGroup_MonsterSpeedHalo = 7, // 怪物加速光环 \r\n\t\tBuffGroup_MonsterReduceTreatHalo = 8, // 怪物减疗光环 \r\n\t\tBuffGroup_MonsterReduceDamHalo = 9, // 怪物减伤光环 \r\n\t\tBuffGroup_MaxFeatherHeal = 10, // 满毛回血 \r\n\t}\r\n\texport enum ClearType { \r\n\t\tClearType_None = 0, // 不清除 \r\n\t\tClearType_Die = 1, // 死亡 \r\n\t\tClearType_BeDamaged = 2, // 受伤 \r\n\t\tClearType_Breath = 3, // 调息 \r\n\t\tClearType_Attack = 4, // 攻击 \r\n\t\tClearType_StackFull = 5, // 叠满 \r\n\t\tClearType_BulletMadeDamage = 6, // 子弹造成伤害 \r\n\t\tClearType_CriticalDamage = 7, // 暴击 \r\n\t\tClearType_DeadlyDamage = 8, // 会心 \r\n\t}\r\n\texport enum Triggertype { \r\n\t\tTriggertype_Born = 0, // 英雄出生 \r\n\t\tTriggertype_PreAttack = 1, // 攻击发动前 \r\n\t\tTriggertype_Attack = 2, // 攻击中 \r\n\t\tTriggertype_AttackEnd = 3, // 攻击结束后 \r\n\t\tTriggertype_BeHitFront = 4, // 被攻击前 \r\n\t\tTriggertype_BeHitBack = 5, // 被攻击后 \r\n\t\tTriggertype_BreathStart = 6, // 调息开始 \r\n\t\tTriggertype_BreathEnd = 7, // 调息结束 \r\n\t\tTriggertype_AttackCount = 8, // 技能组攻击次数 \r\n\t\tTriggertype_NowHp = 9, // 当前血量 \r\n\t\tTriggertype_TotalLostHp = 10, // 生命变更 \r\n\t\tTriggertype_HarmTest = 11, // 伤害计算 \r\n\t\tTriggertype_Rogue = 12, // 肉鸽 \r\n\t\tTriggertype_BeHit = 13, // 受伤 \r\n\t\tTriggertype_Kill = 14, // 击杀 \r\n\t\tTriggertype_Dead = 15, // 死亡 \r\n\t\tTriggertype_AtHIT = 16, // 命中 \r\n\t\tTriggertype_Revive = 17, // 复活 \r\n\t\tTriggertype_SearchEnemy = 18, // 寻找敌人 \r\n\t\tTriggertype_BuffExpiration = 19, // buff到期 \r\n\t\tTriggertype_BackJumpFinish = 20, // 后跳完成 \r\n\t\tTriggertype_warning = 21, // 警告 \r\n\t\tTriggertype_BossDied = 22, // Boss死亡 \r\n\t\tTriggertype_AddBuff = 23, // 添加buff \r\n\t\tTriggertype_CriticalPer = 24, // 暴击率 \r\n\t\tTriggertype_DamageAdd = 25, // 伤害增加 \r\n\t\tTriggertype_DamageReduce = 26, // 伤害减免 \r\n\t\tTriggertype_DetectionSkill = 27, // 使用技能 \r\n\t\tTriggertype_DamageResult = 28, // 伤害结果 \r\n\t\tTriggertype_TargetHpDamageAdd = 29, // 目标生命比例伤害增加 \r\n\t\tTriggertype_DamageResultReduce = 30, // 结果减免 \r\n\t}\r\n\texport enum TriggerCondition { \r\n\t\tTriggerCondition_AttackNum = 0, // 攻击次数 \r\n\t\tTriggerCondition_HoldTime = 1, // 蓄力时间 \r\n\t\tTriggerCondition_TimeRefresh = 2, // 时间间隔 \r\n\t\tTriggerCondition_SkillId = 3, // 使用普攻技能id \r\n\t\tTriggerCondition_SkillGroup = 4, // 检测技能组 \r\n\t\tTriggerCondition_HpLostPer = 5, // 本次损失生命比例 \r\n\t\tTriggerCondition_Critical = 6, // 会心 \r\n\t\tTriggerCondition_HpPer = 7, // 生命比例低于 \r\n\t\tTriggerCondition_CriticalPoint = 8, // 暴击 \r\n\t\tTriggerCondition_BeCriticalPoint = 9, // 被暴击 \r\n\t\tTriggerCondition_BeCritical = 10, // 被会心 \r\n\t\tTriggerCondition_RogueId = 11, // 肉鸽id \r\n\t\tTriggerCondition_TotalHpLostPer = 12, // 总累计损失生命比例 \r\n\t\tTriggerCondition_TimeInterval = 13, // 时间间隔 \r\n\t\tTriggerCondition_Distance = 14, // 距离 \r\n\t\tTriggerCondition_Level = 15, // 等级 \r\n\t\tTriggerCondition_BuffId = 16, // buffid \r\n\t\tTriggerCondition_BuffLayerNum = 17, // buff层数 \r\n\t\tTriggerCondition_WarnType = 18, // 警告类型 \r\n\t\tTriggerCondition_HpRatio = 19, // 生命比例高于 \r\n\t\tTriggerCondition_CheckAttr = 20, // 属性检测 \r\n\t\tTriggerCondition_EveryHpLostPer = 21, // 每累计损失生命比例 \r\n\t\tTriggerCondition_DetectionSkillId = 22, // 技能id \r\n\t}\r\n\texport enum Behavior { \r\n\t\tBehavior_UseSkill = 0, // 使用技能 \r\n\t\tBehavior_SwitchGroup = 1, // 切换技能组 \r\n\t\tBehavior_SwitchSkill = 2, // 替换普攻 \r\n\t\tBehavior_AddBuff = 3, // 行为目标给行为目标加buff \r\n\t\tBehavior_HarmPer = 4, // 伤害比例 \r\n\t\tBehavior_UseEffect = 5, // 使用效果 \r\n\t\tBehavior_AddAttackNum = 6, // 增加攻击次数 \r\n\t\tBehavior_Dead = 7, // 死亡 \r\n\t\tBehavior_Revive = 8, // 复活 \r\n\t\tBehavior_BackJump = 9, // 后跳 \r\n\t\tBehavior_Summon = 10, // 召唤 \r\n\t\tBehavior_AddSkill = 11, // 添加技能 \r\n\t\tBehavior_BuffClear = 12, // 清除buff \r\n\t\tBehavior_ConditionAddBuff = 13, // 条件目标给行为目标加buff \r\n\t\tBehavior_ReplaceMonsterAnimation = 14, // 替换怪物动画为该怪物ID \r\n\t\tBehavior_ModifyLogicParameter = 15, // 修改本次逻辑计算参数 \r\n\t\tBehavior_BuffClearType = 16, // 清除buff类型 \r\n\t\tBehavior_ModifyLogicParameterRange = 17, // 修改本次逻辑计算参数区间 \r\n\t}\r\n\texport enum TriggerTarget { \r\n\t\tTriggerTarget_Mine = 0, // 自身 \r\n\t\tTriggerTarget_Enemy = 1, // 目标 \r\n\t}\r\n\texport enum TriggerGoal { \r\n\t\tTriggerGoal_Mine = 0, // 自身 \r\n\t\tTriggerGoal_Enemy = 1, // 目标 \r\n\t}\r\n\texport enum BoundType { \r\n\t\tBoundType_Circle = 0, // 圆 \r\n\t\tBoundType_Rectangle = 1, // 矩形 \r\n\t}\r\n\texport enum PowerType { \r\n\t\tPowerType_SkillGroupTable = 0, // 技能组 \r\n\t\tPowerType_SkillTable = 1, // 技能 \r\n\t\tPowerType_BuffTable = 2, // buff \r\n\t\tPowerType_EffectTable = 3, // 效果 \r\n\t\tPowerType_BulletTable = 4, // 子弹 \r\n\t\tPowerType_TriggerTable = 5, // 触发器 \r\n\t}\r\n\texport enum PveStageType { \r\n\t\tPveStageType_MainChapter = 0, // 主线 \r\n\t\tPveStageType_GoldStage = 1, // 黄金矿洞 \r\n\t\tPveStageType_FeedStage = 2, // 饲料工厂 \r\n\t\tPveStageType_DailyChallenge = 3, // 每日挑战 \r\n\t\tPveStageType_ClimbTower = 4, // 爬塔 \r\n\t\tPveStageType_WorldBoss = 5, // 世界boss \r\n\t\tPveStageType_GuildBoss = 6, // 公会boss \r\n\t\tPveStageType_VoidStage = 7, // 虚空关 \r\n\t\tPveStageType_PVPBattle = 8, // PVP对战 \r\n\t\tPveStageType_EliteChapter = 9, // 精英 \r\n\t}\r\n\texport enum EggDropType { \r\n\t\tEggDropType_None = 0, // 无 \r\n\t\tEggDropType_TimeDrop = 1, // 时间掉 \r\n\t\tEggDropType_ExperienceDrop = 2, // 经验掉 \r\n\t}\r\n\texport enum RobotType { \r\n\t\tRobotType_None = 0, // 无 \r\n\t\tRobotType_PVP = 1, // PVP \r\n\t}\r\n\texport enum VirtualItemType { \r\n\t\tVirtualItemType_None = 0, // 无 \r\n\t\tVirtualItemType_Eggs = 1, // 蛋 \r\n\t\tVirtualItemType_Feathers = 2, // 毛 \r\n\t}\r\n\texport enum EffectTarget { \r\n\t\tEffectTarget_None = 0, // 无 \r\n\t\tEffectTarget_Hero = 1, // 英雄 \r\n\t\tEffectTarget_Monster = 2, // 怪物 \r\n\t\tEffectTarget_Rogue = 3, // 肉鸽 \r\n\t\tEffectTarget_Book = 4, // 秘籍 \r\n\t}\r\n\texport enum OwnClass { \r\n\t\tOwnClass_All = 0, // 全体 \r\n\t\tOwnClass_Assassin = 1, // 刺客 \r\n\t\tOwnClass_Archer = 2, // 射手 \r\n\t\tOwnClass_Priest = 3, // 牧师 \r\n\t\tOwnClass_Caster = 4, // 法师 \r\n\t\tOwnClass_Warrior = 5, // 战士 \r\n\t\tOwnClass_TeamLeader = 6, // 队长 \r\n\t}\r\n\texport enum RogueActivationCondition { \r\n\t\tRogueActivationCondition_Default = 0, // 默认激活 \r\n\t\tRogueActivationCondition_WearBook = 1, // 佩戴秘籍 \r\n\t}\r\n\texport enum SoundType { \r\n\t\tSoundType_Music = 0, // 音乐 \r\n\t\tSoundType_SoundEffect = 1, // 音效 \r\n\t}\r\n\texport enum EquipType { \r\n\t\tEquipType_None = 0, // 无效值 \r\n\t\tEquipType_Gloves = 1, // 手套 \r\n\t\tEquipType_Clothing = 2, // 衣服 \r\n\t\tEquipType_Cloak = 3, // 披风 \r\n\t\tEquipType_Hat = 4, // 帽子 \r\n\t\tEquipType_Feather = 5, // 羽毛 \r\n\t\tEquipType_Max = 6, // 最大值 \r\n\t}\r\n\texport enum EquipGroupType { \r\n\t\tEquipGroupType_None = 0, // 无效值 \r\n\t\tEquipGroupType_Attr = 1, // 装备属性 \r\n\t\tEquipGroupType_SkillGroup = 2, // 装备技能组 \r\n\t\tEquipGroupType_Group = 3, // 分组嵌套 \r\n\t}\r\n\texport enum EquipGroupMode { \r\n\t\tEquipGroupMode_None = 0, // 无效值 \r\n\t\tEquipGroupMode_Repeat = 1, // 重复 \r\n\t\tEquipGroupMode_Only = 2, // 排除 \r\n\t\tEquipGroupMode_All = 3, // 全部 \r\n\t}\r\n\texport enum MasterType { \r\n\t\tMasterType_None = 0, // 无效值 \r\n\t\tMasterType_Quality = 1, // 品质大师 \r\n\t\tMasterType_Enhance = 2, // 强化大师 \r\n\t\tMasterType_Refine = 3, // 淬炼大师 \r\n\t}\r\n\texport enum EquipUpgradeType { \r\n\t\tEquipUpgradeType_None = 0, // 无效值 \r\n\t\tEquipUpgradeType_Enhance = 1, // 装备强化 \r\n\t\tEquipUpgradeType_Refine = 2, // 装备淬炼 \r\n\t\tEquipUpgradeType_Recast = 3, // 羽毛重铸 \r\n\t}\r\n\texport enum GeneType { \r\n\t\tGeneType_None = 0, // 无效值 \r\n\t\tGeneType_SmallGene = 1, // 小基因 \r\n\t\tGeneType_BigGene = 2, // 大基因 \r\n\t}\r\n\texport enum GeneUnlockType { \r\n\t\tGeneUnlockType_None = 0, // 无效值 \r\n\t\tGeneUnlockType_RoleLevel = 1, // 玩家等级 \r\n\t\tGeneUnlockType_SmallGeneLevel = 2, // 小基因等级 \r\n\t}\r\n\texport enum BookSlotType { \r\n\t\tBookSlotType_None = 0, // 无效值 \r\n\t\tBookSlotType_Slot1 = 1, // 槽位1 \r\n\t\tBookSlotType_Slot2 = 2, // 槽位2 \r\n\t\tBookSlotType_Slot3 = 3, // 槽位3 \r\n\t\tBookSlotType_Slot4 = 4, // 槽位4 \r\n\t\tBookSlotType_Slot5 = 5, // 槽位5 \r\n\t\tBookSlotType_Max = 6, // 最大值 \r\n\t}\r\n\texport enum BookSlotUnlockType { \r\n\t\tBookSlotUnlockType_None = 0, // 无效值 \r\n\t\tBookSlotUnlockType_Experience = 1, // 冒险等级 \r\n\t}\r\n\texport enum LimitTimeItemType { \r\n\t\tLimitTimeItemType_Duration = 0, // 持续 \r\n\t\tLimitTimeItemType_FixedTime = 1, // 固定 \r\n\t}\r\n\texport enum LimitTimeItemReplace { \r\n\t\tLimitTimeItemReplace_None = 0, // 无 \r\n\t\tLimitTimeItemReplace_AccumulatedTime = 1, // 时间累计 \r\n\t\tLimitTimeItemReplace_DeadLine = 2, // 按截止时间替换 \r\n\t}\r\n\texport enum DropType { \r\n\t\tDropType_None = 0, // 无效值 \r\n\t\tDropType_Odds = 1, // 概率掉落 \r\n\t\tDropType_Weight = 2, // 权重掉落 \r\n\t\tDropType_GroupOdds = 3, // 复合概率掉落 \r\n\t\tDropType_GroupWeight = 4, // 复合权重掉落 \r\n\t}\r\n\texport enum DropEventType { \r\n\t\tDropEventType_None = 0, // 无效值 \r\n\t\tDropEventType_Sum = 1, // 掉落计数 \r\n\t\tDropEventType_ReplaceDropId = 2, // 掉落ID替换 \r\n\t\tDropEventType_HitResetSum = 3, // 命中掉落ID清零计数 \r\n\t\tDropEventType_SumAddOdds = 4, // 计数增加概率 \r\n\t\tDropEventType_MissCheckByItemId = 5, // 掉落物未命中检查 \r\n\t\tDropEventType_ReplaceDropIdByDropId = 6, // 掉落ID命中替换 \r\n\t}\r\n\texport enum AdType { \r\n\t\tAdType_None = 0, // 无 \r\n\t\tAdType_MainChapterReward = 1, // 主线通关奖励双倍 \r\n\t\tAdType_Gacha101 = 2, // 高级扭蛋单抽 \r\n\t\tAdType_Gacha301 = 3, // 好友扭蛋单抽 \r\n\t\tAdType_Gacha1001 = 4, // 武器扭蛋单抽 \r\n\t\tAdType_BuyStamina = 5, // 购买体力 \r\n\t\tAdType_QuickPatrol = 6, // 免费快速游历 \r\n\t\tAdType_LimitedReward = 7, // 限时奖励领取 \r\n\t\tAdType_BuyDailyShop = 8, // 每日商店购买 \r\n\t\tAdType_FightReviveByAdvert = 9, // 看广告复活 \r\n\t\tAdType_BuyGold = 10, // 购买金币 \r\n\t\tAdType_SpecialGiftDaily = 11, // 日礼包 \r\n\t\tAdType_SpecialGiftWeekly = 12, // 周礼包 \r\n\t\tAdType_SpecialGiftMonthly = 13, // 月礼包 \r\n\t\tAdType_DailyChallenge = 14, // 每日挑战 \r\n\t\tAdType_RogueRefreshByAdvert = 15, // 看广告刷新肉鸽 \r\n\t\tAdType_ActivityMallDailyGift = 16, // 活动商店每日广告 \r\n\t}\r\n\texport enum RefreshType { \r\n\t\tRefreshType_Daily = 0, // 每日 \r\n\t\tRefreshType_Weekly = 1, // 每周 \r\n\t\tRefreshType_Monthly = 2, // 每月 \r\n\t\tRefreshType_Unable = 3, // 不刷新 \r\n\t\tRefreshType_Max = 4, // 最大值 \r\n\t}\r\n\texport enum FinishTaskType { \r\n\t\tFinishTaskType_CumulativeLogin = 0, // 累计登录{1}天 \r\n\t\tFinishTaskType_CumulativeAptitudeHero = 1, // 累计获得{1}名资质为{2}的英雄 \r\n\t\tFinishTaskType_CumulativeConsumeDiamonds = 2, // 累计消耗{1}钻石 \r\n\t\tFinishTaskType_CumulativeConsumeGold = 3, // 累计消耗{1}金币 \r\n\t\tFinishTaskType_CumulativeConsumeStamina = 4, // 累计消耗{1}体力 \r\n\t\tFinishTaskType_CumulativeMainChapterCount = 5, // 累计挑战主线{1}次 \r\n\t\tFinishTaskType_PlayerLevel = 6, // 玩家等级大于等于{1}级 \r\n\t\tFinishTaskType_PassedPveStage = 7, // 是否已通关ID为{2}的关卡 \r\n\t\tFinishTaskType_PassedMainChapter = 8, // 是否已通关章节ID为{2}的主线章节 \r\n\t\tFinishTaskType_GeneCount = 9, // 已激活{1}个基因 \r\n\t\tFinishTaskType_EnhancedEquipCount = 10, // 强化装备{1}次 \r\n\t\tFinishTaskType_ConsumeStamina = 11, // 消耗{1}体力 \r\n\t\tFinishTaskType_Login = 12, // 登录{1}天 \r\n\t\tFinishTaskType_ViaPveStageType = 13, // 挑战{1}次关卡类型为{2}的关卡 \r\n\t\tFinishTaskType_OwnHeroLevel = 14, // 拥有{1}个等级大于等于{2}的上阵英雄 \r\n\t\tFinishTaskType_GetPatrolReward = 15, // 领取{1}次巡逻收益 \r\n\t\tFinishTaskType_QuickPatrolCount = 16, // 快速巡逻{1}次 \r\n\t\tFinishTaskType_GiveFriendship = 17, // 赠送友情点{1}次 \r\n\t\tFinishTaskType_GetFriendship = 18, // 领取友情点{1}次 \r\n\t\tFinishTaskType_DrawCardByFunction = 19, // 进行{1}次功能ID为{2}的抽卡 \r\n\t\tFinishTaskType_HeroUpgrade = 20, // 英雄升级{1}次 \r\n\t\tFinishTaskType_HeroStarUpgrade = 21, // 英雄升星{1}次 \r\n\t\tFinishTaskType_MallPurchaseByMallType = 22, // 在商店ID为{2}购买商品{1}次 \r\n\t\tFinishTaskType_QuestLogLevel = 23, // 军衔达到{1}级 \r\n\t\tFinishTaskType_ActivityRecharge = 24, // 是否累计充值金额大于等于{2}元 \r\n\t\tFinishTaskType_FeatherCollect = 25, // 在关卡中获得{1}个羽毛 \r\n\t\tFinishTaskType_BossKill = 26, // 在关卡中击杀{1}个BOSS \r\n\t\tFinishTaskType_WorldBossHarmMax = 27, // 生化危鸡中单次最大伤害达到{1} \r\n\t\tFinishTaskType_PlayerPowerScore = 28, // 玩家战力大于等于{1} \r\n\t\tFinishTaskType_DailyChallengeScore = 29, // 在每日挑战难度大于等于{2}中至少获得{1}分 \r\n\t\tFinishTaskType_GuildDonateCount = 31, // 进行{1}次公会捐献 \r\n\t\tFinishTaskType_GuildAttrLevelUp = 32, // 升级{1}次公会技能 \r\n\t\tFinishTaskType_ConsumeDiamonds = 33, // 消耗{1}钻石 \r\n\t\tFinishTaskType_FinishTaskTypeCount = 34, // 完成{1}个任务类型为{2}任务 \r\n\t\tFinishTaskType_CumulativeGacha = 2001, // 累计进行{1}次功能ID为{2}的抽卡 \r\n\t\tFinishTaskType_CumulativePveStage = 2002, // 累计挑战{1}次关卡类型为{2}的关卡 \r\n\t\tFinishTaskType_CumulativeFeatherCollect = 2004, // 累计在关卡获得{1}个羽毛 \r\n\t\tFinishTaskType_CumulativeBossKill = 2005, // 累计击杀{1}个BOSS \r\n\t}\r\n\texport enum TaskType { \r\n\t\tTaskType_None = 0, // 无 \r\n\t\tTaskType_DailyTask = 1, // 每日任务 \r\n\t\tTaskType_WeeklyTask = 2, // 每周任务 \r\n\t\tTaskType_AchievementTask = 3, // 成就任务 \r\n\t\tTaskType_QuestLog = 4, // 冒险日志 \r\n\t\tTaskType_BattlePass = 5, // 战令任务 \r\n\t\tTaskType_ActivityNewPlayerTask = 6, // 新手任务活动 \r\n\t\tTaskType_GuildDailyTask = 7, // 公会任务 \r\n\t}\r\n\texport enum RankType { \r\n\t\tRankType_Unknown = 0, // 未知 \r\n\t\tRankType_Stage = 1, // 闯关榜 \r\n\t\tRankType_Level = 2, // 等级榜 \r\n\t\tRankType_PowerScore = 3, // 战力榜 \r\n\t\tRankType_Assassin = 4, // 刺客榜 \r\n\t\tRankType_Archer = 5, // 射手榜 \r\n\t\tRankType_Priest = 6, // 牧师榜 \r\n\t\tRankType_Caster = 7, // 法师榜 \r\n\t\tRankType_Warrior = 8, // 战士榜 \r\n\t\tRankType_WorldBoss = 9, // 世界BOSS伤害榜 \r\n\t\tRankType_Guild = 10, // 工会榜 \r\n\t\tRankType_GuildBoss = 11, // 首领入侵工会榜 \r\n\t\tRankType_GuildBossPlayer = 12, // 首领入侵个人榜 \r\n\t\tRankType_FincaFight = 13, // 庄园竞赛榜 \r\n\t\tRankType_EliteChapter = 14, // 精英关卡榜 \r\n\t}\r\n\texport enum RankRewardType { \r\n\t\tRankRewardType_None = 0, // 不结算 \r\n\t\tRankRewardType_DailyReward = 1, // 每日结算 \r\n\t\tRankRewardType_CloseReward = 2, // 关榜结算 \r\n\t\tRankRewardType_SpecifyReward = 3, // 开榜定时 \r\n\t\tRankRewardType_CodeReward = 4, // 代码控制 \r\n\t}\r\n\texport enum RankClearType { \r\n\t\tRankClearType_None = 0, // 不清榜 \r\n\t\tRankClearType_SettleClear = 1, // 结算清榜 \r\n\t\tRankClearType_OpenClear = 2, // 开榜清榜 \r\n\t\tRankClearType_CloseClear = 3, // 关榜清榜 \r\n\t}\r\n\texport enum NoticeType { \r\n\t\tNoticeType_GetItemAptitude = 0, // 通过变化原因{1}获得资质为{2}的物品 \r\n\t\tNoticeType_GetItemQuality = 1, // 通过变化原因{1}获得品质为{2}的物品 \r\n\t}\r\n\texport enum BuyStaminaType { \r\n\t\tBuyStaminaType_WatchAdverts = 0, // 看广告 \r\n\t\tBuyStaminaType_UseCurrency = 1, // 使用钻石 \r\n\t\tBuyStaminaType_BuyMissStamina = 2, // 购买错过体力 \r\n\t}\r\n\texport enum LimitedRewardType { \r\n\t\tLimitedRewardType_None = 0, // 无 \r\n\t\tLimitedRewardType_ItemBelow = 1, // 道具数量小于 \r\n\t}\r\n\texport enum DailyRewardType { \r\n\t\tDailyRewardType_Unknown = 0, // 未知 \r\n\t\tDailyRewardType_NewServer = 1, // 新服签到 \r\n\t\tDailyRewardType_Daily = 2, // 每日签到 \r\n\t}\r\n\texport enum MallType { \r\n\t\tMallType_None = 0, // 无 \r\n\t\tMallType_BaseShop = 1, // 商城 \r\n\t\tMallType_SpecialGift = 2, // 特惠礼包 \r\n\t\tMallType_ActivityNewPlayerTask = 3, // 新手任务活动 \r\n\t\tMallType_MainChapterGift = 4, // 章节礼包 \r\n\t\tMallType_NewPlayerMall = 5, // 新手商城 \r\n\t\tMallType_NewPlayerMall2 = 6, // 精英商城 \r\n\t\tMallType_ActivityMall = 7, // 限时商店活动 \r\n\t}\r\n\texport enum MallTab { \r\n\t\tMallTab_None = 0, // 无 \r\n\t\tMallTab_Tab1 = 1, // 每日 \r\n\t\tMallTab_Tab2 = 2, // 遣散 \r\n\t\tMallTab_Tab3 = 3, // 职业 \r\n\t\tMallTab_Tab4 = 4, // 挑战 \r\n\t\tMallTab_Tab5 = 5, // 钻石 \r\n\t\tMallTab_SpecialGiftTab1 = 11, // 超值礼包 \r\n\t\tMallTab_NewPlayerMall = 12, // 新手商城 \r\n\t\tMallTab_NewPlayerMall2 = 13, // 精英商城 \r\n\t}\r\n\texport enum MallCostType { \r\n\t\tMallCostType_CostItem = 0, // 物品 \r\n\t\tMallCostType_Recharge = 1, // 充值 \r\n\t\tMallCostType_Advert = 2, // 广告 \r\n\t}\r\n\texport enum HeroCollectionType { \r\n\t\tHeroCollectionType_Unknown = 0, // 未知 \r\n\t\tHeroCollectionType_SumSR = 1, // SR英雄累积获得 \r\n\t}\r\n\texport enum VipBonus { \r\n\t\tVipBonus_Unknown = 0, // 未知 \r\n\t\tVipBonus_OpenFunction = 1, // 功能开启 \r\n\t\tVipBonus_StaminaLimit = 2, // 体力上限增加 \r\n\t\tVipBonus_PatrolMoneyRatio = 3, // 巡逻金币增加万分比 \r\n\t\tVipBonus_PatrolFoodRatio = 4, // 巡逻饲料增加万分比 \r\n\t\tVipBonus_PatrolIdleTime = 5, // 巡逻挂机时间增加秒数 \r\n\t\tVipBonus_QuickPatrolDailyCount = 6, // 快速巡逻增加次数 \r\n\t\tVipBonus_DailyStageBuySweepCount = 7, // 日常探险增加购买次数 \r\n\t\tVipBonus_DailyShopRefresh = 8, // 每日商店增加刷新次数 \r\n\t\tVipBonus_HeroBagAddCount = 9, // 英雄背包增加数量 \r\n\t\tVipBonus_RefreshCount = 12, // 羽毛刷新次数 \r\n\t\tVipBonus_Max = 13, // 最大值 \r\n\t}\r\n\texport enum BattlePassType { \r\n\t\tBattlePassType_BaseBattlePass = 0, // 常驻战令 \r\n\t\tBattlePassType_LoopBattlePass = 1, // 周期战令 \r\n\t\tBattlePassType_ActivityBattlePass = 2, // 活动战令 \r\n\t}\r\n\texport enum BattlePassTab { \r\n\t\tBattlePassTab_MainChapterPass = 1, // 主线战令 \r\n\t\tBattlePassTab_PlayerLvPass = 2, // 等级战令 \r\n\t\tBattlePassTab_StaminaPass = 3, // 挑战战令 \r\n\t\tBattlePassTab_QuestLogPass = 4, // 军衔战令 \r\n\t\tBattlePassTab_ClimbTowerPass = 5, // 爬塔战令 \r\n\t\tBattlePassTab_WorldBossPass = 6, // 危鸡战令 \r\n\t}\r\n\texport enum BuyGoldType { \r\n\t\tBuyGoldType_Buy1 = 0, // 2小时金币 \r\n\t\tBuyGoldType_Buy2 = 1, // 8小时金币 \r\n\t\tBuyGoldType_Buy3 = 2, // 24小时金币 \r\n\t}\r\n\texport enum MailTemplate { \r\n\t\tMailTemplate_MainStageQuite = 0, // 主线异常 \r\n\t\tMailTemplate_FullyHeroBag = 1, // 英雄背包已满 \r\n\t\tMailTemplate_NewServerReward = 2, // 新服签到补发 \r\n\t\tMailTemplate_WorldBoss = 3, // 世界BOSS排行榜奖励 \r\n\t\tMailTemplate_ActivityRank = 4, // 新服排行活动奖励 \r\n\t\tMailTemplate_WorldBoss2 = 5, // 世界BOSS排行榜奖励2 \r\n\t\tMailTemplate_NewServerLvRank = 6, // 荣耀等级榜 \r\n\t\tMailTemplate_NewServerLvRank2 = 7, // 荣耀等级榜2 \r\n\t\tMailTemplate_NewServerStageRank = 8, // 荣耀闯关榜 \r\n\t\tMailTemplate_NewServerStageRank2 = 9, // 荣耀闯关榜2 \r\n\t\tMailTemplate_NewServerWorldBossRank = 10, // 荣耀生化榜 \r\n\t\tMailTemplate_NewServerWorldBossRank2 = 11, // 荣耀生化榜2 \r\n\t\tMailTemplate_NewServerCPRank = 12, // 荣耀战力榜 \r\n\t\tMailTemplate_NewServerCPRank2 = 13, // 荣耀战力榜2 \r\n\t\tMailTemplate_P800ThirdPartyRechargeMail = 14, // 第三方额外奖励 \r\n\t\tMailTemplate_kickedOutGuild = 15, // 被踢出公会 \r\n\t\tMailTemplate_Gift37Default = 16, // 37礼包模板 \r\n\t\tMailTemplate_FincaFightDailyReward = 17, // 庄园竞赛日奖励 \r\n\t\tMailTemplate_FincaFightWeekReward = 18, // 庄园竞赛周奖励 \r\n\t\tMailTemplate_GuildBossRank = 19, // 怪物入侵鸡舍奖励 \r\n\t\tMailTemplate_GuildBossRank2 = 20, // 怪物入侵鸡舍奖励2 \r\n\t\tMailTemplate_GuildBossPlayerRank = 21, // 怪物入侵个人奖励 \r\n\t\tMailTemplate_GuildBossPlayerRank2 = 22, // 怪物入侵个人奖励2 \r\n\t}\r\n\texport enum GuideType { \r\n\t\tGuideType_Trunk = 0, // 主线 \r\n\t\tGuideType_Branch = 1, // 支线 \r\n\t}\r\n\texport enum SceneType { \r\n\t\tSceneType_MainScene = 0, // 主场景 \r\n\t\tSceneType_BattleScene = 1, // 战斗场景 \r\n\t}\r\n\texport enum HeadUnlockType { \r\n\t\tHeadUnlockType_None = 0, // 无 \r\n\t\tHeadUnlockType_GetHero = 1, // 获得英雄 \r\n\t}\r\n\texport enum GuildPosition { \r\n\t\tGuildPosition_None = 0, // 无 \r\n\t\tGuildPosition_President = 1, // 会长 \r\n\t\tGuildPosition_VicePresident = 2, // 副会长 \r\n\t\tGuildPosition_Elite = 30, // 精英 \r\n\t\tGuildPosition_Member = 50, // 成员 \r\n\t}\r\n\texport enum GuildGiftCond { \r\n\t\tGuildGiftCond_None = 0, // 无 \r\n\t\tGuildGiftCond_GuildLevel = 1, // 公会大于等于{1}级 \r\n\t}\r\n\texport enum GuildGiftType { \r\n\t\tGuildGiftType_None = 0, // 无 \r\n\t\tGuildGiftType_LoopGift = 1, // 周期礼包 \r\n\t\tGuildGiftType_LevelGift = 2, // 升级礼包 \r\n\t}\r\n\texport enum ChatBreviaryType { \r\n\t\tChatBreviaryType_GuildGiftBargain = 0, // 鸡多多砍价分享 \r\n\t\tChatBreviaryType_GuildGiftLow = 1, // 鸡多多低价分享 \r\n\t}\r\n\texport enum GuildOFName { \r\n\t\tGuildOFName_None = 0, // 无 \r\n\t\tGuildOFName_GuildTask = 1, // 公会任务 \r\n\t\tGuildOFName_GuildAttr = 2, // 公会技能 \r\n\t\tGuildOFName_GuildGift = 3, // 公会周期礼包 \r\n\t\tGuildOFName_GuildBoss = 4, // 公会BOSS \r\n\t}\r\n\texport enum PvpType { \r\n\t\tPvpType_None = 0, // 无 \r\n\t\tPvpType_PvP = 1, // 1v1 \r\n\t}\r\n\r\n\t\r\n\texport class ItemTable { \r\n\t\tId : number // ID \r\n\t\tName : string // 道具名称 \r\n\t\tType : ItemType // 道具类型 \r\n\t\tQuality : ItemQuality // 品质 \r\n\t\tDesc : string // 道具描述 \r\n\t\tIcon : string // 道具图标 \r\n\t\tMarkTopLeft : string // 左上角标 \r\n\t\tMarkBottomLeft : string // 左下角标 \r\n\t\tMarkTopRight : string // 右上角标 \r\n\t\tBagType : BagType // 背包栏位 \r\n\t\tSort : number // 排序 \r\n\t\tSimpleItem : boolean // 简单道具 \r\n\t\tDropId : number[] // 掉落ID \r\n\t\tAcquireWay : OpenFunctionName[] // 获取途径 \r\n\t}\r\n\t\r\n\texport class ModuleTable { \r\n\t\tModuleType : Module // 模块枚举 \r\n\t\tViewName : string // UI名称 \r\n\t\tPath : string // 路径 \r\n\t\tViewType : ViewType // 类型 \r\n\t\tZIndex : ViewZIndex // 层级 \r\n\t\tOpenFunctionId : OpenFunctionName[] // 功能名称 \r\n\t\tGuildOpenFunction : GuildOFName // 公会功能 \r\n\t}\r\n\t\r\n\texport class OpenFunctionTable { \r\n\t\tName : OpenFunctionName // 功能名称 \r\n\t\tType : FunctionType // 类型 \r\n\t\tBattleLv : number // 通关关卡 \r\n\t\tPlayerLv : number // 玩家等级 \r\n\t\tCreateDay : number // 创角天数 \r\n\t\tVipLv : number // VIP等级 \r\n\t\tPrivileged : PrivilegedType // 特权 \r\n\t\tTipsKey : string // 提示文本 \r\n\t\tIcon : string // 功能图标 \r\n\t\tShowType : number // 指南类型 \r\n\t\tRewardItemId : number[] // 指南奖励道具ID \r\n\t\tRewardItemNum : number[] // 指南奖励数量 \r\n\t\tFunctionUnlockAnimation : string // 开启动画节点 \r\n\t\tJumpUI : Module // 跳转界面 \r\n\t\tJumpParam : number[] // 跳转参数 \r\n\t}\r\n\t\r\n\texport class RechargeTable { \r\n\t\tId : number // 充值ID \r\n\t\tPrice : number // 价格(元) \r\n\t\tPriceDollar : number // 价格(美分) \r\n\t\tPriceTWD : number // 价格(台币) \r\n\t\tPriceHKD : number // 价格(港币) \r\n\t\tPriceJPY : number // 价格(日元) \r\n\t\tType : GoodsType // 充值类型 \r\n\t\tDesc : string // 描述 \r\n\t\tGoodsID : number // 商品ID \r\n\t\tRewardItemIds : number[] // 赠送物品ID \r\n\t\tRewardItemNum : number[] // 赠送物品数量 \r\n\t\tRefundPenalty : number // 退款扣钻石 \r\n\t\tProductIdP800 : string // 商品ID(P800) \r\n\t\tProductId37JP : string // 商品ID(37JP) \r\n\t}\r\n\t\r\n\texport class ActivityCumulativeRechargeTable { \r\n\t\tIndexId : number // 索引 \r\n\t\tActivityId : number // 活动参数 \r\n\t\tShowId : number // 显示档位 \r\n\t\tRewardItemIds : number[] // 奖励道具 \r\n\t\tRewardItemNum : number[] // 奖励数量 \r\n\t\tTotal : number // 累充(元) \r\n\t\tTotalDollar : number // 累充(美分) \r\n\t\tTotalTWD : number // 累充(台币) \r\n\t\tTotalHKD : number // 累充(港币) \r\n\t\tTotalJPY : number // 累充(日元) \r\n\t}\r\n\t\r\n\texport class ServerlistTable { \r\n\t\tID : number // ID \r\n\t\tName : string // 名称 \r\n\t\tAddress : string // 登录地址 \r\n\t\tSvcGroup : string // 服务器分组 \r\n\t\tReviewSvcGroup : string // 提审服分组 \r\n\t\tGMAddress : string // GM服务器地址 \r\n\t\tNoticeAddr : string // 公告地址 \r\n\t\tNoticeVerAddr : string // 公告版本地址 \r\n\t\tPayVerification : string // 支付验证 \r\n\t\tRefreshSessionKey : string // 刷新sessionkey \r\n\t\tAllowCORS : boolean // 是否允许跨域 \r\n\t\tSelectServerUrl : string // 选服地址 \r\n\t}\r\n\t\r\n\texport class ChannelTable { \r\n\t\tChannelType : ChannelType // 渠道类型 \r\n\t\tBaseUrl : string // 基础URL \r\n\t\tHotUpdateUrl : string // 热更地址 \r\n\t\tBaseUrlTest : string // 基础URL-测试 \r\n\t\tHotUpdateUrlTest : string // 热更地址-测试 \r\n\t\tBaseLanguage : LanguageType // 默认语言 \r\n\t\tLanguageList : LanguageType[] // 可切换语言组 \r\n\t\tDefultID : number // 默认服务器ID \r\n\t\tTestSeverID : number // 测试服务器ID \r\n\t\tCurrency : string // 币种类型 \r\n\t\tProductType : string // 商品ID字段名 \r\n\t\tIosStoreUrl : string // 苹果商店地址 \r\n\t\tAndroidStoreUrl : string // 谷歌商店地址 \r\n\t\tFaceBookUrl : string // FaceBook地址 \r\n\t}\r\n\t\r\n\texport class AnimationTable { \r\n\t\tId : number // ID \r\n\t\tNextAnimation : number // 下一个动画 \r\n\t\tType : AnimationType // 类型 \r\n\t\tPath : string // 资源路径 \r\n\t\tAnimationName : string // 动画名称 \r\n\t\tFPS : number // 每秒帧数 \r\n\t\tAnimationSpeed : number // 动作速度 \r\n\t\tFrameCount : number // 总帧数 \r\n\t\tLoop : boolean // 循环播放 \r\n\t\tOffset : number[] // 偏移 \r\n\t\tScale : number[] // 缩放 \r\n\t\tSoundId : number // 音效ID \r\n\t\tAttackPoint : string // 攻击点 \r\n\t}\r\n\t\r\n\texport class HeroTable { \r\n\t\tId : number // ID \r\n\t\tClass : HeroClass // 职业 \r\n\t\tAptitude : HeroAptitude // 资质 \r\n\t\tBuilds : Builds[] // 流派 \r\n\t\tSpeciality : string // 特性 \r\n\t\tDefaultStar : number // 初始星级 \r\n\t\tBaseHeroAttrId : number // 初始属性 \r\n\t\tImage : string // 立绘 \r\n\t\tWeaponHead : string // 武器图鉴头像 \r\n\t\tSkillIcon1 : string // 技能图标 \r\n\t\tSkillIcon2 : string // 天赋图标 \r\n\t\tSkillIcon3 : string // 觉醒图标 \r\n\t\tShadow : number // 阴影 \r\n\t\tBounds : number[] // 包围盒组 \r\n\t\tBorn : number // 入场动画 \r\n\t\tIdle : number // 待机动画 \r\n\t\tDead : number // 死亡动画 \r\n\t\tRevive : number // 复活动画 \r\n\t\tIdle2 : number // 调息动画 \r\n\t\tShotPos : number[] // 攻击点 \r\n\t\tHitPos : number[] // 受击点 \r\n\t\tRadarChart : string // 雷达图 \r\n\t\tRadarHighlight : number[] // 雷达高亮 \r\n\t\tHeroScore : string // 评分 \r\n\t}\r\n\t\r\n\texport class HeroLevelUpTable { \r\n\t\tLevel : number // 等级 \r\n\t\tMaterialIds : number[] // 消耗材料组 \r\n\t\tMaterialNum : number[] // 消耗数量组 \r\n\t\tMinTeamLevel : number // 队友最低等级 \r\n\t}\r\n\t\r\n\texport class HeroStarUpTable { \r\n\t\tId : number // ID \r\n\t\tHeroId : number // 英雄ID \r\n\t\tHeroStar : number // 英雄星级 \r\n\t\tNeedStarSteps : number[] // 升星满足阶段 \r\n\t\tHeroStarUpType : HeroStarUpType[] // 升星消耗类型 \r\n\t\tCostHeroStar : number[] // 升星消耗星级 \r\n\t\tCostHeroNum : number[] // 升星消耗数量 \r\n\t\tCostItemId : number[] // 升星消耗道具 \r\n\t\tCostItemNum : number[] // 道具消耗数量 \r\n\t\tResetCostItem : number // 重置消耗道具 \r\n\t\tResetCostNum : number // 重置消耗数量 \r\n\t\tMaxLevel : number // 等级上限 \r\n\t\tAttrPerLevel : number // 星级升级属性 \r\n\t\tExtraAttrTarget : ExtraAttrTarget[] // 额外属性类型 \r\n\t\tExtraAttrList : number[] // 额外属性值 \r\n\t\tSkillGroupIds : number // 技能组ID \r\n\t\tSkillId : number[] // 技能ID \r\n\t\tDescType : HeroStarDescType[] // 描述类型 \r\n\t\tStarName : string[] // 名称 \r\n\t\tStarDesc : string[] // 描述 \r\n\t\tRogueId : number[] // 肉鸽池 \r\n\t}\r\n\t\r\n\texport class HeroStarStepTable { \r\n\t\tId : number // 阶段ID \r\n\t\tHeroId : number // 英雄ID \r\n\t\tHeroStarUpType : HeroStarUpType[] // 当前阶段消耗类型 \r\n\t\tCostHeroStar : number[] // 当前阶段消耗星级 \r\n\t\tCostHeroNum : number[] // 当前阶段消耗数量 \r\n\t\tCostItemId : number[] // 阶段消耗道具 \r\n\t\tCostItemNum : number[] // 道具消耗数量 \r\n\t\tExtraAttrTarget : ExtraAttrTarget[] // 额外属性类型 \r\n\t\tExtraAttrList : number[] // 额外属性值 \r\n\t\tSkillGroupIds : number[] // 技能组ID \r\n\t\tSkillEnhanceIds : number[] // 技能增强ID \r\n\t\tStepDesc : string // 描述 \r\n\t}\r\n\t\r\n\texport class HeroAttrTable { \r\n\t\tId : number // 属性ID \r\n\t\tHeroAttrType : AttrType[] // 属性类型 \r\n\t\tHeroAttrValue : number[] // 属性值 \r\n\t}\r\n\t\r\n\texport class HeroCommonCostTable { \r\n\t\tId : number // ID \r\n\t\tHeroClass : HeroClass // 等价职业 \r\n\t\tHeroStar : number // 等价星级 \r\n\t}\r\n\t\r\n\texport class HeroLevelResonanceTable { \r\n\t\tId : number // 共鸣等级 \r\n\t\tNeedLv : number // 升级需求等级 \r\n\t\tAttrTypes : AttrType[] // 获得属性类型 \r\n\t\tAttrValue : number[] // 获得属性值 \r\n\t}\r\n\t\r\n\texport class HeroStarResonanceTable { \r\n\t\tId : number // 共鸣等级 \r\n\t\tNeedStar : number // 升级需求星级 \r\n\t\tAttrTypes : AttrType[] // 获得属性类型 \r\n\t\tAttrValue : number[] // 获得属性值 \r\n\t}\r\n\t\r\n\texport class RecommendTeamTable { \r\n\t\tId : number // 阵容ID \r\n\t\tName : string // 阵容名称 \r\n\t\tHeroIdList : number[] // 英雄ID \r\n\t\tIsCore : boolean[] // 是否核心 \r\n\t\tDesc : string // 阵容描述 \r\n\t\tItemId : number // 激活奖励ID \r\n\t\tItemNum : number // 激活奖励数量 \r\n\t}\r\n\t\r\n\texport class HeroAlbumTable { \r\n\t\tHeroAptitude : HeroAptitude // 英雄资质 \r\n\t\tItemId : number // 激活奖励ID \r\n\t\tItemNum : number // 激活奖励数量 \r\n\t}\r\n\t\r\n\texport class HeroClassTable { \r\n\t\tHeroClass : HeroClass // 英雄职业 \r\n\t\tIcon : string // 职业图标 \r\n\t}\r\n\t\r\n\texport class HeroAptitudeTable { \r\n\t\tHeroAptitude : HeroAptitude // 英雄资质 \r\n\t\tIcon : string // 资质图标 \r\n\t\tSkillBg : string // 英雄资质技能背景底 \r\n\t\tBookBg : string // 秘籍资质背景底 \r\n\t\tBookTitle : string // 秘籍资质名称底 \r\n\t\tBookBgSmall : string // 秘籍资质背景小底 \r\n\t}\r\n\t\r\n\texport class MonsterTable { \r\n\t\tId : number // ID \r\n\t\tName : string // 名称 \r\n\t\tSpeed : number // 速度 \r\n\t\tBornAnimationId : number // 出生动画 \r\n\t\tIdleAnimationId : number // 待机动画 \r\n\t\tWalkAnimationId : number // 移动动画 \r\n\t\tBeHitAnimationId : number // 受击动画 \r\n\t\tDeadAnimationId : number // 死亡动画 \r\n\t\tBounds : number[] // 包围盒组 \r\n\t\tMonsterType : MonsterType // 怪物类型 \r\n\t\tSearchRules : SearchEnemy // 索敌规则 \r\n\t\tAttackRange : number // 攻击范围 \r\n\t\tSkillIds : number[] // 技能id \r\n\t\tReviveDefeatDistance : number // 复活被右移距离 \r\n\t\tIsDefeat : boolean // 是否会被击退 \r\n\t\tIsHitBack : boolean // 是否命中击退 \r\n\t\tShadow : number // 阴影 \r\n\t\tBuffLocation : number[] // buff位置偏移 \r\n\t\tBuffVFX : number // buff特效缩放 \r\n\t\tMonsterDieSound : number // 怪物死亡音效 \r\n\t}\r\n\t\r\n\texport class SkillGroupTable { \r\n\t\tId : number // ID \r\n\t\tIcon : string // 技能图标 \r\n\t\tAttackType : AttackType // 攻击类型 \r\n\t\tNormalAttack : number[] // 普攻技能 \r\n\t\tAttackCount : number // 出手次数 \r\n\t\tBreathTime : number // 调息时间 \r\n\t}\r\n\t\r\n\texport class SkillTable { \r\n\t\tId : number // ID \r\n\t\tSkillType : SkillType // 技能类型 \r\n\t\tPriority : number // 发动优先级 \r\n\t\tTrigger : number[] // 触发器 \r\n\t\tActionPriority : number // 动作优先级 \r\n\t\tActionID : number // 动作ID \r\n\t\tExpend : number // 出手消耗 \r\n\t\tSkillEnhanceIds : number[] // 技能增强 \r\n\t\tEffect : number[] // 效果 \r\n\t\tEffectUnit : EffectUnit // 作用目标 \r\n\t\tSearchEnemy : SearchEnemy // 作用规则 \r\n\t\tSearchNum : number // 作用数量 \r\n\t\tAddBuff : number[] // 加buff \r\n\t\tHandEnemy : boolean // 手动目标 \r\n\t\tAddBuffChance : number[] // buff触发概率 \r\n\t\tCoolTime : number[] // 冷却时间 \r\n\t\tSkillConflict : number[] // 技能互斥 \r\n\t\tBulletTime : number // 子弹发射时间 \r\n\t\tRunningShot : number[] // 连射 \r\n\t\tBullet : number // 子弹ID \r\n\t\tRunningShotBullet : number // 连射子弹 \r\n\t\tRunningShotBulletType : RunningShotBulletType // 连射类型 \r\n\t}\r\n\t\r\n\texport class BulletTable { \r\n\t\tId : number // ID \r\n\t\tBulletType : BulletType // 子弹类型 \r\n\t\tBulletOffset : number[] // 跟随子弹偏移 \r\n\t\tSpeed : number // 速度 \r\n\t\tRating : number // 子弹层级 \r\n\t\tBornAnimationId : number // 出生动画 \r\n\t\tWalkAnimationId : number // 移动动画 \r\n\t\tDeadAnimationId : number // 死亡动画 \r\n\t\tBounds : number[] // 包围盒组 \r\n\t\tBulletBorn : BulletBorn // 子弹出生点 \r\n\t\tEnemyUnit : EffectUnit // 索敌单位 \r\n\t\tSearchEnemy : SearchEnemy // 索敌规则 \r\n\t\tEnemyFiltrate : EnemyFiltrate // 索敌筛选 \r\n\t\tEffectUnit : EffectUnit // 作用单位 \r\n\t\tTrajectory : Trajectory // 子弹轨迹 \r\n\t\tForwardArrow : number[] // 正向箭 \r\n\t\tFission : number[] // 分裂 \r\n\t\tPenetration : number // 穿透 \r\n\t\tCatapult : number // 弹射 \r\n\t\tRound : number[] // 回旋 \r\n\t\tRotate : number // 自旋 \r\n\t\tCentrifugation : number[] // 离心 \r\n\t\tScreenBounce : number // 屏幕反弹 \r\n\t\tCommonShow : CommonShow // 通用表现 \r\n\t\tIntervalEffect : number[] // 间隔时间效果 \r\n\t\tLiveTime : number[] // 生存时间 \r\n\t\tDamageTick : number // 伤害间隔 \r\n\t\tDamageScale : number[] // 子弹伤害系数 \r\n\t\tAddEffect : number[] // 子弹额外效果 \r\n\t\tDamageAmount : number // 子弹多段伤害 \r\n\t\tSameLow : number // 相同子弹衰减 \r\n\t\tHitChance : number // 命中触发概率 \r\n\t\tHitTrigger : number[] // 命中触发效果 \r\n\t\tHitEffect : number[] // 命中特效 \r\n\t\tHitShake : number // 命中抖动 \r\n\t\tHitBack : number[] // 命中击退 \r\n\t\tAddBuffChance : number[] // buff触发概率 \r\n\t\tAddBuff : number[] // 加buff \r\n\t\tCollisionInterval : number // 触碰间隔 \r\n\t\tDeathType : DeathType // 死亡方式 \r\n\t\tDeathTrigger : number[] // 死亡触发子弹 \r\n\t\tOlnyOne : boolean // 相同子弹唯一 \r\n\t\tNoHarm : boolean // 子系忽视父系 \r\n\t\tOlnyOneSon : boolean // 子系伤害唯一 \r\n\t\tIsReviveClean : boolean // 复活清除 \r\n\t\tSoundId : number[] // 子弹音效 \r\n\t}\r\n\t\r\n\texport class BuffTable { \r\n\t\tId : number // ID \r\n\t\tBuffType : BuffType // buff类型 \r\n\t\tVFXID : number // 特效id \r\n\t\tDuration : number // 持续时间 \r\n\t\tEffect : number[] // 效果 \r\n\t\tTrigger : number // 持续时间内触发间隔 \r\n\t\tAddbuff : number[] // 加buff \r\n\t\tBuffGroup : BuffGroup // buff分组 \r\n\t\tRule : Rule // 叠加规则 \r\n\t\tCheckAttr : number[] // 属性检测 \r\n\t\tNumber : number // 叠加数量 \r\n\t\tClearType : ClearType[] // 清除buff的条件 \r\n\t\tNoOneMemory : boolean // 非独立内存 \r\n\t}\r\n\t\r\n\texport class EffectTable { \r\n\t\tId : number // ID \r\n\t\tEffectType : AttrType // 效果类型 \r\n\t\tParameters : number[] // 效果参数 \r\n\t\tRandomWave : number[] // 效果基础值波动参数 \r\n\t}\r\n\t\r\n\texport class TriggerTable { \r\n\t\tId : number // ID \r\n\t\tChance : number // 概率 \r\n\t\tTriggertype : Triggertype // 触发类型 \r\n\t\tTriggerNumber : number // 触发次数 \r\n\t\tTriggerCd : number // 触发CD \r\n\t\tTriggerCondition : TriggerCondition // 触发条件 \r\n\t\tParameters : number[] // 条件参数 \r\n\t\tBehavior : Behavior[] // 触发行为 \r\n\t\tArgument : number[] // 行为参数 \r\n\t\tTriggerTarget : TriggerTarget // 条件目标 \r\n\t\tTriggerGoal : TriggerGoal // 行为目标 \r\n\t}\r\n\t\r\n\texport class SkillSummonTable { \r\n\t\tSummonId : number // 召唤ID \r\n\t\tSummon : number[] // 召唤内容 \r\n\t}\r\n\t\r\n\texport class PRBTable { \r\n\t\tId : number // ID \r\n\t\tCValue : number // C值 \r\n\t}\r\n\t\r\n\texport class BoundTable { \r\n\t\tId : number // ID \r\n\t\tType : BoundType // 类型 \r\n\t\tParameters : number[] // 参数 \r\n\t}\r\n\t\r\n\texport class SkillPowerTable { \r\n\t\tId : number // ID \r\n\t\tPowerType : PowerType // 增强类型 \r\n\t\tPowerId : number // 增强id \r\n\t\tPowerMent : string // 增强字段 \r\n\t\tPowerValue : number[] // 增强值 \r\n\t}\r\n\t\r\n\texport class MainChapterTable { \r\n\t\tId : number // 章节ID \r\n\t\tStageIds : number[] // 主线关卡ID \r\n\t\tEliteStageIds : number[] // 可解锁精英关卡ID \r\n\t\tName : string // 章节名称 \r\n\t\tIntroduction : string // 章节介绍 \r\n\t\tComicID : number // 开始前播放漫画ID \r\n\t\tIcon : string // 章节图标路径 \r\n\t\tIconSelect : string // 章节图标选中背景路径 \r\n\t\tDailyTaskReward1 : number[] // 任务奖励1 \r\n\t\tDailyTaskNum1 : number[] // 奖励数量1 \r\n\t\tDailyTaskReward2 : number[] // 任务奖励2 \r\n\t\tDailyTaskNum2 : number[] // 奖励数量2 \r\n\t\tDailyTaskReward3 : number[] // 任务奖励3 \r\n\t\tDailyTaskNum3 : number[] // 奖励数量3 \r\n\t\tDailyTaskReward4 : number[] // 任务奖励4 \r\n\t\tDailyTaskNum4 : number[] // 奖励数量4 \r\n\t\tDailyTaskReward5 : number[] // 任务奖励5 \r\n\t\tDailyTaskNum5 : number[] // 奖励数量5 \r\n\t}\r\n\t\r\n\texport class PveStageTable { \r\n\t\tStageId : number // 关卡ID \r\n\t\tStageName : string // 关卡名 \r\n\t\tStageType : PveStageType // 关卡类型 \r\n\t\tNextLevelId : number // 下一关ID \r\n\t\tRecommendFight : number // 推荐战力 \r\n\t\tLevelArrange : string // 关卡配置 \r\n\t\tTime : number // 关卡时长 \r\n\t\tLevelBUFF : number[] // 关卡buff \r\n\t\tEggDropType : EggDropType // 掉毛类型 \r\n\t\tEggDropGroup : number // 掉毛组 \r\n\t\tRougeGroupId : number // 肉鸽组 \r\n\t\tReviveNumber : number // 复活次数 \r\n\t\tCostItemId : number[] // 关卡消耗道具ID \r\n\t\tCostItemNum : number[] // 关卡消耗数量 \r\n\t\tRewardItemId : number[] // 通关奖励ID \r\n\t\tRewardItemNum : number[] // 通关奖励数量 \r\n\t\tLostRewardId : number[] // 失败奖励ID \r\n\t\tLostRewardNum : number[] // 失败奖励数量 \r\n\t\tBackground : string // 战斗背景 \r\n\t\tMonsterDieDrop : number[] // 怪死掉落 \r\n\t}\r\n\t\r\n\texport class RobotTable { \r\n\t\tId : number // ID \r\n\t\tRobotType : RobotType // 类型 \r\n\t\tName : string // 名字 \r\n\t\tPower : number // 战力 \r\n\t\tCore : number // 积分 \r\n\t\tPlayerLevel : number // 玩家等级 \r\n\t\tImage : number // 形象id \r\n\t\tHead : number // 头像id \r\n\t\tHero : number[] // 英雄id \r\n\t\tHeroStar : number[] // 英雄星级 \r\n\t\tHeroLevel : number[] // 英雄等级 \r\n\t\tBook : number[] // 秘籍id \r\n\t\tBookStar : number[] // 秘籍星级 \r\n\t\tBookLevel : number[] // 秘籍等级 \r\n\t\tExperience : number // 冒险等级 \r\n\t\tAddAttrId : number // 额外属性 \r\n\t}\r\n\t\r\n\texport class VoidStageTable { \r\n\t\tId : number // ID \r\n\t\tStageID : number // 关卡ID \r\n\t\tHeroID : number // 英雄id \r\n\t\tHeroLevel : number // 等级 \r\n\t\tHeroStar : number // 星级 \r\n\t}\r\n\t\r\n\texport class FeatherEggDrop { \r\n\t\tId : number // ID \r\n\t\tEggDropGroup : number // 掉毛组 \r\n\t\tEggDropLevel : number // 掉毛等级 \r\n\t\tEggDropExp : number // 掉毛经验 \r\n\t\tEggDropContent : number // 掉落ID \r\n\t}\r\n\t\r\n\texport class MapBlock { \r\n\t\tId : number // ID \r\n\t\tCoordinateX : number // 位置X \r\n\t\tCoordinateY : number // 位置Y \r\n\t\tLong : number // 长 \r\n\t\tHigh : number // 高 \r\n\t}\r\n\t\r\n\texport class PveStageDropTable { \r\n\t\tDropId : number // 战斗掉落ID \r\n\t\tDropItem : number[] // 掉落道具ID \r\n\t\tDropItemCount : number[] // 掉落道具数量 \r\n\t}\r\n\t\r\n\texport class VirtualItem { \r\n\t\tVirtualItemId : number // 道具ID \r\n\t\tVirtualItemType : VirtualItemType // 类型 \r\n\t\tVirtualAnimationId : number // 图标动画ID \r\n\t\tVirtualItemIcon : string // 图标 \r\n\t}\r\n\t\r\n\texport class PveTimeDropTable { \r\n\t\tStageId : number // 关卡ID \r\n\t\tDropTime : number[] // 掉落时间 \r\n\t\tDropCount : number[] // 掉落 \r\n\t}\r\n\t\r\n\texport class PveStageBuffTable { \r\n\t\tId : number // 战斗初始增益ID \r\n\t\tCorrespondingId : number[] // 对应ID \r\n\t\tEffectTarget : EffectTarget // 生效目标 \r\n\t\tOwn : OwnClass // 归属 \r\n\t\tShow : string // 前端技能说明 \r\n\t\tShowIcon : string // 前端技能图标 \r\n\t}\r\n\t\r\n\texport class PveAddFeatherDropTable { \r\n\t\tCount : number // 数量 \r\n\t\tTimes : number[] // 掉落时间点 \r\n\t}\r\n\t\r\n\texport class WorldBossRewardTable { \r\n\t\tId : number // ID \r\n\t\tStageId : number // 关卡ID \r\n\t\tDamage : number // 伤害值 \r\n\t\tItemId : number[] // 奖励道具 \r\n\t\tItemNum : number[] // 奖励道具数量 \r\n\t}\r\n\t\r\n\texport class WorldBossDamTable { \r\n\t\tId : number // ID \r\n\t\tStageId : number // 关卡ID \r\n\t\tDamage : number // 伤害值 \r\n\t\tEffectId : number[] // 伤害效果 \r\n\t}\r\n\t\r\n\texport class DailyChallengeBuffTable { \r\n\t\tId : number // ID \r\n\t\tHeroBuff : number // 英雄增益 \r\n\t\tMonsterBuff : number // 怪物增益 \r\n\t}\r\n\t\r\n\texport class DailyChallengeLevelTable { \r\n\t\tLevel : number // 难度 \r\n\t\tMainStageLimit : number // 主线通关需求 \r\n\t\tIsEasier : boolean // 能否下降难度 \r\n\t\tStageId : number // 关卡ID \r\n\t\tRequire : number[] // 奖励领取条件 \r\n\t\tDropId : number[] // 掉落ID \r\n\t}\r\n\t\r\n\texport class ClimbTowerTable { \r\n\t\tStageId : number // 关卡ID \r\n\t\tFloor : number // 米 \r\n\t\tOpenTime : number // 开启天数 \r\n\t\tDailyReward : number[] // 每日奖励ID \r\n\t\tDailyRewardNum : number[] // 奖励数量 \r\n\t\tSkillShow : number[] // 关卡技能 \r\n\t\tCrushedValue : number // 碾压系数 \r\n\t\tBackgroundUrl : string // 关卡背景 \r\n\t\tAnimationId : string // BOSS动画ID \r\n\t}\r\n\t\r\n\texport class RogueTable { \r\n\t\tId : number // ID \r\n\t\tCondition : number // 前置条件 \r\n\t\tSort : VirtualItemType // 分类 \r\n\t\tOwn : OwnClass // 归属 \r\n\t\tLevel : number // 重数 \r\n\t\tStage : number // 阶段 \r\n\t\tSkill : number[] // 技能id \r\n\t\tSkillGroup : number // 技能组id \r\n\t\tWeight : number // 权重 \r\n\t\tMutex : boolean // 互斥 \r\n\t\tBacklimit : number // 放回上限 \r\n\t\tBookId : number // 对应秘籍ID \r\n\t\tActivationCondition : RogueActivationCondition // 激活条件 \r\n\t\tDescription : string // 技能说明 \r\n\t}\r\n\t\r\n\texport class RogueGroupTable { \r\n\t\tId : number // ID \r\n\t\tRogueGroup : number[] // 肉鸽内容ID \r\n\t\tIsHaveHeroLevelUp : boolean // 是否存在英雄升级 \r\n\t}\r\n\t\r\n\texport class TipsTable { \r\n\t\tId : number // 提示枚举 \r\n\t\tTipsKey : string // 提示文本 \r\n\t}\r\n\t\r\n\texport class SoundTable { \r\n\t\tId : number // ID \r\n\t\tType : SoundType // 类型 \r\n\t\tPath : string // 路径 \r\n\t\tLoop : boolean // 是否循环 \r\n\t\tvolume : number // 音量大小 \r\n\t}\r\n\t\r\n\texport class EquipTable { \r\n\t\tId : number // ID \r\n\t\tType : EquipType // 槽位 \r\n\t\tClass : HeroClass // 职业 \r\n\t\tEquipStar : number // 星级 \r\n\t\tMasterLevel : number // 大师等级 \r\n\t\tBaseAttrGroupId : string // 基础属性分组ID \r\n\t\tExtraAttrGroupId : string // 附加属性分组ID \r\n\t\tSkillGroupId : string // 技能分组ID \r\n\t\tEnhanceLimit : number // 强化上限 \r\n\t\tRefineLimit : number // 淬炼上限 \r\n\t\tMaterials : number[] // 分解材料 \r\n\t}\r\n\t\r\n\texport class EquipAttrTable { \r\n\t\tId : number // ID \r\n\t\tAttrType : AttrType // 属性类型 \r\n\t\tBase : number // 属性基值 \r\n\t\tGrowth : number // 成长系数 \r\n\t}\r\n\t\r\n\texport class EquipAttrGroupTable { \r\n\t\tId : string // 分组ID \r\n\t\tType : EquipGroupType // 类型 \r\n\t\tCount : number // 随机条目数 \r\n\t\tMode : EquipGroupMode // 随机方式 \r\n\t\tList : string // 随机值列表 \r\n\t}\r\n\t\r\n\texport class EquipSkillTable { \r\n\t\tId : number // ID \r\n\t\tGroup : string // 分组 \r\n\t\tQuality : ItemQuality // 品质 \r\n\t\tPlaystyle : string // 流派名称 \r\n\t\tSkillIcon : string // 技能图标 \r\n\t\tSkillName : string // 技能名称 \r\n\t\tSkillDesc : string // 技能描述 \r\n\t}\r\n\t\r\n\texport class HeroMasterTable { \r\n\t\tId : number // ID \r\n\t\tType : MasterType // 类型 \r\n\t\tLevel : number // 等级 \r\n\t\tRequire : number // 等级需求 \r\n\t\tAttrList : number[] // 属性列表 \r\n\t\tDesc : string // 条件描述 \r\n\t}\r\n\t\r\n\texport class EquipUpgradeTable { \r\n\t\tId : number // ID \r\n\t\tType : EquipUpgradeType // 类型 \r\n\t\tLevel : number // 等级 \r\n\t\tMoneys : number[] // 货币消耗 \r\n\t\tMaterials : number[] // 材料消耗 \r\n\t\tOdds : number // 概率 \r\n\t\tAmount : number // 累积次数 \r\n\t\tGroupId : string // 分组ID \r\n\t}\r\n\t\r\n\texport class WordTable { \r\n\t\tKey : string // Key \r\n\t\tZh_tw : string // zh_tw \r\n\t\tEn_us : string // 英文 \r\n\t\tJp_jp : string // 日文 \r\n\t}\r\n\t\r\n\texport class ItemStarClientTable { \r\n\t\tId : number // 星级 \r\n\t\tAnimationId : number // 显示动画ID \r\n\t\tNumber : number // 数量 \r\n\t}\r\n\t\r\n\texport class ItemQualityTable { \r\n\t\tQuality : ItemQuality // 道具品质 \r\n\t\tHeroStar : number[] // 英雄星级 \r\n\t\tQualityFrame : string // 品质框 \r\n\t\tHeroBagQuality : string // 英雄背包品质底 \r\n\t\tHeroBagGrowthQuality : string // 英雄背包养成品质底 \r\n\t\tHeroBagLevelQuality : string // 英雄背包等级品质底 \r\n\t\tHeroStarBg : string // 英雄和装备星级职业底 \r\n\t\tQualityColor : string // 名字颜色 \r\n\t}\r\n\t\r\n\texport class HeroPowerScore { \r\n\t\tId : number // ID \r\n\t\tType : AttrType // 类型 \r\n\t\tArgs : number // 参数 \r\n\t\tScore : number // 评分 \r\n\t}\r\n\t\r\n\texport class HeroAttrClientTable { \r\n\t\tType : AttrType // 属性类型 \r\n\t\tIcon : string // 属性图标 \r\n\t\tIsBase : boolean // 是否基础属性 \r\n\t\tShowPercent : boolean // 是否百分比 \r\n\t\tShowHeroAttr : boolean // 英雄面板是否显示 \r\n\t}\r\n\t\r\n\texport class GeneLevelTable { \r\n\t\tId : number // ID \r\n\t\tType : GeneType // 类型 \r\n\t\tLevel : number // 等级 \r\n\t\tUnlockType : GeneUnlockType // 解锁条件 \r\n\t\tUnlockArgs : number // 解锁参数 \r\n\t\tAttrType : AttrType // 属性类型 \r\n\t\tAttrValue : number // 属性值 \r\n\t\tMaterialIdList : number[] // 消耗道具 \r\n\t\tMaterialCountList : number[] // 消耗道具数量 \r\n\t\tName : string // 名称 \r\n\t\tDesc : string // 描述 \r\n\t\tEnableIcon : string // 已激活图标 \r\n\t\tDisableIcon : string // 未激活图标 \r\n\t}\r\n\t\r\n\texport class BookTable { \r\n\t\tId : number // 秘籍ID \r\n\t\tClass : HeroClass // 职业 \r\n\t\tAptitude : HeroAptitude // 资质 \r\n\t\tBuilds : Builds // 流派 \r\n\t\tIsWear : boolean // 是否可穿戴 \r\n\t\tPlaystyleName : string // 效果简介 \r\n\t\tMaterialIdList : number[] // 分解道具ID \r\n\t\tMaterialCountList : number[] // 分解道具数量 \r\n\t}\r\n\t\r\n\texport class BookStarTable { \r\n\t\tId : number // ID \r\n\t\tBookId : number // 秘籍ID \r\n\t\tLevel : number // 星级 \r\n\t\tMaxLevel : number // 研习等级上限 \r\n\t\tMaterialIdList : number[] // 消耗道具ID \r\n\t\tMaterialCountList : number[] // 消耗道具数量 \r\n\t\tSkillId : number[] // 技能ID \r\n\t\tAttrType : AttrType[] // 初始属性类型 \r\n\t\tAttrValue : number[] // 初始属性值 \r\n\t\tExtraAttrType : AttrType[] // 升星额外属性类型 \r\n\t\tExtraAttrValue : number[] // 升星额外属性值 \r\n\t\tDescription : string // 升星效果描述 \r\n\t\tBookDescription : string // 秘籍效果描述 \r\n\t}\r\n\t\r\n\texport class BookLevelTable { \r\n\t\tId : number // ID \r\n\t\tAptitude : HeroAptitude // 资质 \r\n\t\tLevel : number // 等级 \r\n\t\tClass : HeroClass // 职业 \r\n\t\tMaterialIdList : number[] // 消耗道具ID \r\n\t\tMaterialCountList : number[] // 消耗道具数量 \r\n\t\tRatio : number // 研习比例 \r\n\t}\r\n\t\r\n\texport class BookFragmentTable { \r\n\t\tBookId : number // 秘籍ID \r\n\t\tId : number // 残卷ID \r\n\t\tCount : number // 修复所需数量 \r\n\t\tBaseAmount : number // 转换基数 \r\n\t\tMaterialIdList : number[] // 转换后道具ID \r\n\t\tMaterialCountList : number[] // 转换后道具数量 \r\n\t}\r\n\t\r\n\texport class BookSeriesTable { \r\n\t\tId : number // ID \r\n\t\tBookId : number[] // 秘籍ID \r\n\t\tGroupId : number // 分组ID \r\n\t\tLevel : number // 星级 \r\n\t\tSkill : number[] // 技能ID \r\n\t\tAttrType : AttrType[] // 属性类型 \r\n\t\tAttrValue : number[] // 属性值 \r\n\t\tName : string // 名称配置 \r\n\t\tSkillShow : string[] // 技能说明 \r\n\t}\r\n\t\r\n\texport class BookSlotTable { \r\n\t\tId : number // ID \r\n\t\tClass : HeroClass // 职业 \r\n\t\tSlot : BookSlotType // 槽位 \r\n\t\tUnlockType : BookSlotUnlockType // 解锁条件 \r\n\t\tUnlockArgs : number // 解锁参数 \r\n\t}\r\n\t\r\n\texport class BookDictionary { \r\n\t\tPhaseOneBook : number // 一阶秘籍ID \r\n\t\tPhaseTwoBook : number[] // 二阶秘籍ID \r\n\t\tPhaseThreeBook : number[] // 三阶秘籍ID \r\n\t}\r\n\t\r\n\texport class PlayerLvTable { \r\n\t\tPlayerLv : number // 等级 \r\n\t\tExp : number // 累计经验 \r\n\t\tItemId : number[] // 奖励道具ID \r\n\t\tItemNum : number[] // 奖励道具数量 \r\n\t}\r\n\t\r\n\texport class ScrollPaintingTable { \r\n\t\tId : number // 索引ID \r\n\t\tAptitude : HeroAptitude // 资质 \r\n\t\tHeroStar : number // 星级 \r\n\t\tSPAttrTypes : AttrType[] // 属性类型 \r\n\t\tSPAttrValue : number[] // 属性值 \r\n\t}\r\n\t\r\n\texport class LimitTimeItemTable { \r\n\t\tItemId : number // 限时道具ID \r\n\t\tGetItemId : number // 获得真实道具ID \r\n\t\tLimitTimeType : LimitTimeItemType // 限时类型 \r\n\t\tLimitTimeValue : number // 限时参数 \r\n\t\tReplaceType : LimitTimeItemReplace // 替换类型 \r\n\t\tTransformItemId : number[] // 转换道具ID \r\n\t\tTransformItemCount : number[] // 转换道具数量 \r\n\t}\r\n\t\r\n\texport class DropTable { \r\n\t\tId : number // ID \r\n\t\tType : DropType // 掉落类型 \r\n\t\tCount : number // 执行参数 \r\n\t\tItemList : number[] // 掉落组 \r\n\t\tItemCount : number[] // 道具数量 \r\n\t\tArgs : number[] // 掉落参数 \r\n\t}\r\n\t\r\n\texport class DropEventTable { \r\n\t\tId : number // ID \r\n\t\tType : DropEventType // 事件类型 \r\n\t\tNumVal : number[] // 数值参数 \r\n\t\tStrVal : string[] // 字串参数 \r\n\t}\r\n\t\r\n\texport class ChapterFristRewardTable { \r\n\t\tId : number // 关卡ID \r\n\t\tTime : number[] // 目标时间 \r\n\t\tRewardItemIds1 : number[] // 目标1奖励ID \r\n\t\tRewardItemNum1 : number[] // 目标1奖励数量 \r\n\t\tRewardItemIds2 : number[] // 目标2奖励ID \r\n\t\tRewardItemNum2 : number[] // 目标2奖励数量 \r\n\t\tRewardItemIds3 : number[] // 目标3奖励ID \r\n\t\tRewardItemNum3 : number[] // 目标3奖励数量 \r\n\t}\r\n\t\r\n\texport class AdvertPosTable { \r\n\t\tAdType : AdType // 广告点类型 \r\n\t\tRefreshType : RefreshType // 刷新周期 \r\n\t\tAdvertCount : number // 广告次数 \r\n\t}\r\n\t\r\n\texport class GachaTable { \r\n\t\tId : number // ID \r\n\t\tItemSource : ItemSource // 物品变化原因 \r\n\t\tDropId : number // 掉落ID \r\n\t\tDropCount : number // 掉落次数 \r\n\t\tItemId : number // 消耗道具ID \r\n\t\tItemCount : number // 消耗道具数量 \r\n\t\tSubItemId : number // 替代道具ID \r\n\t\tSubItemBaseCount : number // 替代物消耗基数 \r\n\t\tShowCount : number // 显示保底次数 \r\n\t\tAdType : AdType // 广告类型 \r\n\t\tFunction : OpenFunctionName // 功能开启条件 \r\n\t\tAutoDisband : boolean // 自动遣散 \r\n\t}\r\n\t\r\n\texport class ElixirTable { \r\n\t\tId : number // ID \r\n\t\tAttrType : AttrType[] // 属性类型 \r\n\t\tAttrValue : number[] // 属性值 \r\n\t\tPlayerLv : number[] // 玩家等级 \r\n\t\tMaxCount : number[] // 吃药上限 \r\n\t}\r\n\t\r\n\texport class TaskTable { \r\n\t\tId : number // 任务ID \r\n\t\tTaskType : TaskType // 任务类型 \r\n\t\tRevision : number // 版本号 \r\n\t\tFinishType : FinishTaskType // 任务条件 \r\n\t\tCanAcceptEarly : boolean // 提前接任务 \r\n\t\tFinishParam1 : number // 参数1 \r\n\t\tFinishParam2 : number // 参数2 \r\n\t\tFinishParam3 : number // 参数3 \r\n\t\tRewardItemIds : number[] // 奖励道具ID \r\n\t\tRewardItemNum : number[] // 奖励道具数量 \r\n\t\tBattlePassRewardIds : number[] // 战令奖励ID \r\n\t\tBattlePassRewardNum : number[] // 战令奖励数量 \r\n\t\tTitle : string // 任务标题 \r\n\t\tDescribe : string // 任务描述 \r\n\t\tJumpUI : Module // 跳转界面 \r\n\t\tJumpParam : number[] // 跳转参数 \r\n\t}\r\n\t\r\n\texport class WeeklyTaskBoxTable { \r\n\t\tId : number // 周活跃度 \r\n\t\tBoxRewardItemIds : number[] // 奖励道具 \r\n\t\tBoxRewardItemNum : number[] // 奖励数量 \r\n\t}\r\n\t\r\n\texport class AchievementTaskTable { \r\n\t\tId : number // 任务ID \r\n\t\tPreTaskId : number // 前置任务ID \r\n\t}\r\n\t\r\n\texport class QuestLogTable { \r\n\t\tLevel : number // 军衔等级 \r\n\t\tTaskIds : number[] // 任务组 \r\n\t\tShowLv : number // 预览等级 \r\n\t\tName : string // 名称 \r\n\t\tQuestLogAttrType : AttrType[] // 属性类型 \r\n\t\tQuestLogAttrValue : number[] // 属性值 \r\n\t}\r\n\t\r\n\texport class RankTable { \r\n\t\tId : number // ID \r\n\t\tType : RankType // 排行榜类型 \r\n\t\tLength : number // 上榜人数 \r\n\t\tRange : number // 显示人数 \r\n\t\tIsStatic : boolean // 是否常驻 \r\n\t}\r\n\t\r\n\texport class RankRewardTable { \r\n\t\tId : number // 排行榜ID \r\n\t\tType : RankRewardType // 结算类型 \r\n\t\tArgs : number // 结算参数 \r\n\t\tClearType : RankClearType // 清榜类型 \r\n\t\tSpecialCount : number // 特殊名次 \r\n\t\tMailType : MailTemplate // 邮件类型1 \r\n\t\tMailType2 : MailTemplate // 邮件类型2 \r\n\t\tRanking : string[] // 榜单 \r\n\t\tDropId : number[] // 奖品 \r\n\t}\r\n\t\r\n\texport class RankCycleRewardTable { \r\n\t\tIndexId : number // 索引ID \r\n\t\tId : number // 排行榜ID \r\n\t\tRefresh : RefreshType // 发奖周期 \r\n\t\tArgs : number // 发奖时间 \r\n\t\tSpecialCount : number // 特殊名次 \r\n\t\tMailType : MailTemplate // 邮件类型1 \r\n\t\tMailType2 : MailTemplate // 邮件类型2 \r\n\t\tCycleRanking : string[] // 榜单 \r\n\t\tCycleDropId : number[] // 奖品 \r\n\t}\r\n\t\r\n\texport class NoticeTable { \r\n\t\tId : number // 通知ID \r\n\t\tWordKey : string // 关联文本 \r\n\t\tTexts : string[] // 文本定义 \r\n\t\tNoticeType : NoticeType // 公告触发类型 \r\n\t\tParam1 : number[] // 参数1 \r\n\t\tParam2 : number[] // 参数2 \r\n\t\tParam3 : number[] // 参数3 \r\n\t}\r\n\t\r\n\texport class BuyStaminaTable { \r\n\t\tType : BuyStaminaType // 购买类型 \r\n\t\tGetItemId : number[] // 获得物品 \r\n\t\tGetItemNum : number[] // 获得数量 \r\n\t\tCostItemId : number // 消耗物品 \r\n\t\tCostItemNum : number // 消耗数量 \r\n\t\tAdType : AdType // 看广告 \r\n\t\tDailyCount : number // 每日次数 \r\n\t\tMaxCount : number // 上限次数 \r\n\t\tShowIcon : string // 显示图标 \r\n\t}\r\n\t\r\n\texport class PatrolTable { \r\n\t\tPveStageId : number // 关卡ID \r\n\t\tBaseTimes : number[] // 基础奖励时间 \r\n\t\tBaseItemIds : number[] // 基础奖励ID \r\n\t\tBaseItemNum : number[] // 基础奖励数量 \r\n\t\tExtraTimes : number[] // 进阶奖励时间 \r\n\t\tExtraItemIds : number[] // 进阶奖励ID \r\n\t\tExtraItemNum : number[] // 进阶奖励数量 \r\n\t}\r\n\t\r\n\texport class ChoiceBoxTable { \r\n\t\tChoiceBoxId : number // 自选ID \r\n\t\tChoiceItemIds : number[] // 可选ID \r\n\t\tChoiceItemNum : number[] // 可选数量 \r\n\t}\r\n\t\r\n\texport class PveClearStageTable { \r\n\t\tStageId : number // 关卡ID \r\n\t\tStageType : PveStageType // 关卡类型 \r\n\t\tClearRewardItemIds : number[] // 通关奖励道具 \r\n\t\tClearRewardItemNum : number[] // 通关奖励数量 \r\n\t}\r\n\t\r\n\texport class PveSweepTable { \r\n\t\tStageId : number // 关卡ID \r\n\t\tSweepRewardItemIds : number[] // 扫荡奖励道具 \r\n\t\tSweepRewardItemNum : number[] // 扫荡奖励数量 \r\n\t}\r\n\t\r\n\texport class LimitedRewardTable { \r\n\t\tTriggerHour : number // 触发时间 \r\n\t\tTriggerType : LimitedRewardType // 触发条件 \r\n\t\tTriggerParam : number[] // 触发参数 \r\n\t\tTriggerRewardId : number // 触发奖励ID \r\n\t\tTriggerRewardCount : number // 触发奖励数量 \r\n\t\tRewardId : number // 未触发奖励ID \r\n\t\tRewardCount : number // 未触发奖励数量 \r\n\t\tFirstTriggerInterval : number[] // 首次触发间隔 \r\n\t\tTriggerInterval : number[] // 奖励补发间隔 \r\n\t}\r\n\t\r\n\texport class FirstRechargeTable { \r\n\t\tId : number // ID \r\n\t\tRechargeId : number // 充值表ID \r\n\t\tContainGoodsId : number[] // 包含商品ID \r\n\t\tFRItemIds : number[] // 奖励道具ID \r\n\t\tFRItemNum : number[] // 奖励道具数量 \r\n\t\tRateShow : string // 返利显示 \r\n\t\tWordKey : string // 显示文本 \r\n\t\tAnimationId : number // 显示动画 \r\n\t\tButtonIcon : string // 入口图标 \r\n\t\tIconAnimationId : number // 图标扫光 \r\n\t}\r\n\t\r\n\texport class ChallengeButtonTable { \r\n\t\tId : number // 序号 \r\n\t\tPveStageType : PveStageType[] // 包含关卡类型 \r\n\t\tBackground : string // 背景图 \r\n\t\tName : string // 名称 \r\n\t\tShowItemId : number[] // 显示道具图标 \r\n\t\tJumpUI : Module // 跳转界面 \r\n\t}\r\n\t\r\n\texport class DailyRewardTable { \r\n\t\tId : number // 签到ID \r\n\t\tType : DailyRewardType // 签到类型 \r\n\t\tNextId : number // 下轮签到ID \r\n\t\tOpenTime : number // 持续时间 \r\n\t}\r\n\t\r\n\texport class DailyRewardItemTable { \r\n\t\tId : number // 签到ID \r\n\t\tIndex : number // 天数 \r\n\t\tItemId : number // 物品ID \r\n\t\tItemCount : number // 物品数量 \r\n\t}\r\n\t\r\n\texport class MallTable { \r\n\t\tMallId : number // 商店ID \r\n\t\tIsDefinite : boolean // 商品是否固定 \r\n\t\tMallType : MallType // 商店类型 \r\n\t\tMallTab : MallTab // 页签 \r\n\t\tPrefabUrl : string // 关联prefab \r\n\t\tBackgroundUrl : string // 背景图 \r\n\t\tAnimationId : number // 动画ID \r\n\t\tItemSource : ItemSource // 变化原因 \r\n\t\tFunction : OpenFunctionName // 开启条件 \r\n\t\tDuration : number // 持续时间 \r\n\t\tVersion : number // 版本号 \r\n\t}\r\n\t\r\n\texport class MallItemTabe { \r\n\t\tId : number // 商品ID \r\n\t\tMallId : number // 商店ID \r\n\t\tGetItemIds : number[] // 获得物品 \r\n\t\tGetItemNum : number[] // 物品数量 \r\n\t\tCostType : MallCostType // 购买类型 \r\n\t\tCostItemIds : number[] // 购买消耗 \r\n\t\tCostItemNum : number[] // 消耗数量 \r\n\t\tRechargeId : number // 充值ID \r\n\t\tAdType : AdType // 广告类型 \r\n\t\tLimitCount : number // 限购次数 \r\n\t\tRefreshType : RefreshType // 刷新周期 \r\n\t\tOpenFunction : OpenFunctionName // 开启条件 \r\n\t\tIconUrl : string // 显示图标 \r\n\t}\r\n\t\r\n\texport class BuyDiamondsTable { \r\n\t\tGoodsId : number // 商品ID \r\n\t\tRechargeId : number // 充值ID \r\n\t\tGetItemId : number // 获得物品 \r\n\t\tGetItemNum : number // 获得数量 \r\n\t\tFirstAdd : number // 首充赠送 \r\n\t\tAdd : number // 后续赠送 \r\n\t\tIcon : string // 显示图标 \r\n\t\tViewSpecial : boolean // 仅在提审显示 \r\n\t}\r\n\t\r\n\texport class DailyShopTable { \r\n\t\tShopId : number // 栏位序号 \r\n\t\tItemGroupId : number[] // 商品组 \r\n\t\tBuyCout : number[] // 购买次数 \r\n\t}\r\n\t\r\n\texport class DailyShopItemTable { \r\n\t\tId : number // 商品ID \r\n\t\tItemGroupId : number // 商品组 \r\n\t\tWeight : number // 刷新权重 \r\n\t\tGetItemId : number // 获得物品 \r\n\t\tGetItemNum : number // 物品数量 \r\n\t\tCostItemId : number // 购买消耗 \r\n\t\tCostItemNum : number // 消耗数量 \r\n\t\tAdvert : AdType // 广告类型 \r\n\t\tOpenFunction : OpenFunctionName // 开启条件 \r\n\t\tDiscountIcon : string // 折扣图标 \r\n\t}\r\n\t\r\n\texport class HeroCollectionTable { \r\n\t\tId : number // ID \r\n\t\tType : HeroCollectionType // 类型 \r\n\t\tParams : number // 参数 \r\n\t\tItemId : number // 物品ID \r\n\t\tItemCount : number // 物品数量 \r\n\t}\r\n\t\r\n\texport class BreakEggTable { \r\n\t\tId : number // ID \r\n\t\tRechargeId : number // 充值ID \r\n\t\tItemId : number // 奖励道具 \r\n\t\tItemCount : number // 奖励数量 \r\n\t\tParams : number[] // 计算参数 \r\n\t\tMaxScore : number // 总进度 \r\n\t}\r\n\t\r\n\texport class VipTable { \r\n\t\tVipLv : number // VIP等级 \r\n\t\tVipExp : number // 累计VIP积分 \r\n\t\tShowVipLv : number // 可预览等级 \r\n\t\tVipDailyRewardIds : number[] // 每日奖励道具ID \r\n\t\tVipDailyRewardNum : number[] // 每日奖励数量 \r\n\t\tVipRewardIds : number[] // 专属奖励道具ID \r\n\t\tVipRewardNum : number[] // 专属奖励数量 \r\n\t\tVipCostItemIds : number // 专属奖励消耗 \r\n\t\tVipCostItemNum : number // 专属奖励消耗数量 \r\n\t\tShowCost : number // 显示原价 \r\n\t}\r\n\t\r\n\texport class VipBonusTable { \r\n\t\tIndexId : number // 索引ID \r\n\t\tVipLv : number // VIP等级 \r\n\t\tVipBonus : VipBonus // 加成类型 \r\n\t\tAddValue : number // 加成值 \r\n\t}\r\n\t\r\n\texport class MonthlyPassTable { \r\n\t\tType : PrivilegedType // 月卡类型 \r\n\t\tRechargeId : number // 充值ID \r\n\t\tDuration : number // 持续时间 \r\n\t\tBuyRewardIds : number[] // 购买奖励ID \r\n\t\tBuyRewardNum : number[] // 购买奖励数量 \r\n\t\tRewardIds : number[] // 每日奖励ID \r\n\t\tRewardNum : number[] // 每日奖励数量 \r\n\t\tMonthlyPassBonus : VipBonus[] // 特权加成 \r\n\t\tMonthlyPassValue : number[] // 加成值 \r\n\t\tWordKey : string[] // 显示文本 \r\n\t}\r\n\t\r\n\texport class BattlePassTable { \r\n\t\tId : number // 战令ID \r\n\t\tRechargeId : number // 充值ID \r\n\t\tOpenFunction : OpenFunctionName // 开启条件 \r\n\t\tPassType : BattlePassType // 战令类型 \r\n\t\tPassValue : number // 参数 \r\n\t\tBuyLvCostId : number // 买等级消耗道具ID \r\n\t\tBuyLvCostNum : number // 买等级消耗道具数量 \r\n\t\tPrivileged : PrivilegedType // 购买后激活特权 \r\n\t\tTaskIds : number[] // 任务ID列表 \r\n\t\tIsBattleBtn : boolean // 是否在战令页签 \r\n\t\tBattlePassTab : BattlePassTab // 页签名 \r\n\t\tPrefabUrl : string // prefab路径 \r\n\t\tAnimationId : number // 动画ID \r\n\t}\r\n\t\r\n\texport class BuyGoldTable { \r\n\t\tType : BuyGoldType // 购买类型 \r\n\t\tItemId : number[] // 获得物品 \r\n\t\tItemCount : number[] // 获得数量 \r\n\t\tCostItemId : number // 消耗物品 \r\n\t\tCostItemCount : number // 消耗数量 \r\n\t\tAdType : AdType // 广告类型 \r\n\t\tPurchaseCount : number // 限购次数 \r\n\t\tShowIcon : string // 显示图标 \r\n\t}\r\n\t\r\n\texport class NewPlayerDailyGiftTable { \r\n\t\tId : number // ID \r\n\t\tGroup : number // 分组 \r\n\t\tCreateDay : number // 可购买天数 \r\n\t\tRechargeId : number // 充值ID \r\n\t\tRewardItemIds : number[] // 奖励道具 \r\n\t\tRewardItemNum : number[] // 奖励数量 \r\n\t\tDiscountIcon : string // 折扣图标 \r\n\t\tShowStar : number // 显示星级 \r\n\t}\r\n\t\r\n\texport class ActivityNewPlayerTaskTable { \r\n\t\tId : number // ID \r\n\t\tGroup : OpenFunctionName // 分组 \r\n\t\tCreateDay : number // 创角时间 \r\n\t\tTaskIds1 : number[] // 任务ID列表1 \r\n\t\tTaskIds2 : number[] // 任务ID列表2 \r\n\t\tMallId : number // 商店ID \r\n\t}\r\n\t\r\n\texport class ActivityNewPlayerTaskScoreTable { \r\n\t\tId : number // ID \r\n\t\tGroup : OpenFunctionName // 分组 \r\n\t\tScore : number // 累计积分 \r\n\t\tRewardId : number // 奖励道具ID \r\n\t\tRewardNum : number // 奖励数量 \r\n\t}\r\n\t\r\n\texport class MainChapterGiftTable { \r\n\t\tMallId : number // 商店ID \r\n\t\tMainChapterId : number // 通关主线章节 \r\n\t\tDiscountIcon : string // 折扣图标 \r\n\t\tAnimationId : number // 显示动画ID \r\n\t}\r\n\t\r\n\texport class ServerMailTable { \r\n\t\tType : MailTemplate // 邮件类型 \r\n\t\tTitle : string // 标题 \r\n\t\tSender : string // 发送者 \r\n\t\tContent : string // 邮件内容 \r\n\t\tExpireTime : number // 过期时间 \r\n\t\tExistsTime : number // 存续时间 \r\n\t\tAttachmentID : number[] // 物品ID \r\n\t\tAttachmentCount : number[] // 物品数量 \r\n\t}\r\n\t\r\n\texport class ActivityTable { \r\n\t\tActivityId : number // 活动ID \r\n\t\tActivityName : string // 活动名称 \r\n\t\tType : OpenFunctionName // 活动类型 \r\n\t\tParam1 : number // 参数1 \r\n\t\tParam2 : number // 参数2 \r\n\t\tParam3 : number // 参数3 \r\n\t\tActivityIds : number[] // 活动ID列表 \r\n\t\tButtonIconUrl : string // 活动入口 \r\n\t\tWordKey : string // 活动页签文本 \r\n\t}\r\n\t\r\n\texport class ActivityNewServerTable { \r\n\t\tActivityId : number // 活动ID \r\n\t\tOpenDay : number // 开启天数 \r\n\t\tEndDay : number // 结束天数 \r\n\t}\r\n\t\r\n\texport class ItemClientJumpTable { \r\n\t\tItemId : number // 道具ID \r\n\t\tJumpUI : Module // 跳转界面 \r\n\t\tJumpParam : number[] // 跳转参数 \r\n\t}\r\n\t\r\n\texport class ActivityRankTable { \r\n\t\tId : number // 索引ID \r\n\t\tActivityId : number // 活动ID \r\n\t\tRankId : number // 排行榜ID \r\n\t\tEndTimes : number // 排行榜结算时间 \r\n\t\tTaskIds : number[] // 任务ID列表 \r\n\t\tWordKey : string // 活动名称文本 \r\n\t}\r\n\t\r\n\texport class RandomNameTable { \r\n\t\tId : number // 索引ID \r\n\t\tFirstName : string // 前缀 \r\n\t\tLastName : string // 后缀 \r\n\t}\r\n\t\r\n\texport class GuideTable { \r\n\t\tId : number // 引导ID \r\n\t\tGuideType : GuideType // 引导类型 \r\n\t\tPreGuide : number // 前置引导 \r\n\t\tScriptName : string // 脚本名 \r\n\t\tGuideScene : SceneType // 引导所在场景 \r\n\t}\r\n\t\r\n\texport class GuideDialogueTable { \r\n\t\tId : string // 对话ID \r\n\t\tIsLeft : boolean // 是否在左侧 \r\n\t\tPosX : number // x坐标 \r\n\t\tPosY : number // y坐标 \r\n\t\tIsMask : boolean // 是否遮黑 \r\n\t\tHead : string // 对话头像 \r\n\t\tSound : number // 播放语音 \r\n\t}\r\n\t\r\n\texport class HeadTable { \r\n\t\tId : number // 头像ID \r\n\t\tUnlockType : HeadUnlockType // 解锁方式 \r\n\t\tUnlockParam : number // 解锁参数 \r\n\t\tAttrTypes : AttrType[] // 属性类型 \r\n\t\tAttrValue : number[] // 属性值 \r\n\t}\r\n\t\r\n\texport class HeadFramTable { \r\n\t\tId : number // 头像框ID \r\n\t\tAttrTypes : AttrType[] // 属性类型 \r\n\t\tAttrValue : number[] // 属性值 \r\n\t}\r\n\t\r\n\texport class CheatStageTable { \r\n\t\tId : number // 关卡ID \r\n\t\tDropId : number // 战斗掉落ID \r\n\t\tBossIdList : number[] // Boss列表 \r\n\t\tRollCountList : number[] // Boss战卷轴激活列表 \r\n\t\tBossHpList : number[] // Boss血量列表 \r\n\t\tBossDPSList : number[] // BossDPS列表 \r\n\t}\r\n\t\r\n\texport class GuildLevelTable { \r\n\t\tId : number // 公会等级 \r\n\t\tExp : number // 累计经验 \r\n\t\tMaxCount : number // 最大人数 \r\n\t\tTaskBoxReward1 : number[] // 任务宝箱1 \r\n\t\tTaskRewardNum1 : number[] // 奖励数量1 \r\n\t\tTaskBoxReward2 : number[] // 任务宝箱2 \r\n\t\tTaskRewardNum2 : number[] // 奖励数量2 \r\n\t\tTaskBoxReward3 : number[] // 任务宝箱3 \r\n\t\tTaskRewardNum3 : number[] // 奖励数量3 \r\n\t\tTaskBoxReward4 : number[] // 任务宝箱4 \r\n\t\tTaskRewardNum4 : number[] // 奖励数量4 \r\n\t\tTaskBoxReward5 : number[] // 任务宝箱5 \r\n\t\tTaskRewardNum5 : number[] // 奖励数量5 \r\n\t}\r\n\t\r\n\texport class GuildPositionTable { \r\n\t\tPosition : GuildPosition // 职位 \r\n\t\tMaxCount : number // 最大数量 \r\n\t\tKickOut : number // 踢人/天 \r\n\t\tAppoint : boolean // 任职 \r\n\t\tWriteNotification : boolean // 写公告 \r\n\t\tProces : boolean // 处理申请 \r\n\t\tSetting : boolean // 公会设置 \r\n\t}\r\n\t\r\n\texport class GuildSignInTable { \r\n\t\tId : number // 签到次数 \r\n\t\tRewardItemIds : number[] // 签到奖励道具 \r\n\t\tRewardCount : number[] // 签到奖励数量 \r\n\t\tSignInCostDiamond : number // 签到消耗钻石 \r\n\t}\r\n\t\r\n\texport class GuildAttrTable { \r\n\t\tId : number // ID \r\n\t\tLevel : number // 等级 \r\n\t\tHeroClass : HeroClass // 职业 \r\n\t\tShowLevel : number // 显示等级 \r\n\t\tAttrTypes : AttrType[] // 属性类型 \r\n\t\tAttrValue : number[] // 属性值 \r\n\t\tCostItemIds : number[] // 消耗道具 \r\n\t\tCostItemCount : number[] // 消耗数量 \r\n\t}\r\n\t\r\n\texport class GuildBossPointTable { \r\n\t\tId : number // ID \r\n\t\tStageId : number // 关卡ID \r\n\t\tDamage : number // 伤害值 \r\n\t\tPointRaito : number // 积分比率 \r\n\t\tDropId : number // 掉落ID \r\n\t}\r\n\t\r\n\texport class GuildFlagTable { \r\n\t\tId : number // 旗帜ID \r\n\t\tIconUrl : string // 旗帜路径 \r\n\t}\r\n\t\r\n\texport class GuildGiftTable { \r\n\t\tId : number // 礼包ID \r\n\t\tNextId : number // 下一个ID \r\n\t\tType : GuildGiftType // 礼包类型 \r\n\t\tActivationCond : GuildGiftCond // 激活条件 \r\n\t\tActivationParams : number[] // 激活参数 \r\n\t\tRewardItemId : number // 礼包道具 \r\n\t\tItemCount : number // 道具数量 \r\n\t\tDiamondPrice : number // 钻石售价 \r\n\t\tMinPrice : number // 最低售价 \r\n\t\tBargainingRange : number[] // 砍价范围 \r\n\t\tDuration : number // 持续时间 \r\n\t\tButton : string // 入口 \r\n\t}\r\n\t\r\n\texport class ChatBreviaryTable { \r\n\t\tType : ChatBreviaryType // 类型 \r\n\t\tText : string // 消息文本 \r\n\t\tJumpUI : Module // 跳转界面 \r\n\t\tJumpParam : number[] // 跳转参数 \r\n\t}\r\n\t\r\n\texport class GuildOpenFunctionTable { \r\n\t\tName : GuildOFName // 功能名称 \r\n\t\tLevel : number // 公会等级 \r\n\t\tWordKey : string // 提示文本 \r\n\t}\r\n\t\r\n\texport class Comic { \r\n\t\tComicID : number // 漫画ID \r\n\t\tprefabName : string // 预制体路径 \r\n\t\tNodeName : string[] // 节点名字 \r\n\t\tAnimationName : string[] // 动画名字 \r\n\t\tComicName : string // 漫画名字 \r\n\t\tComicUnlock : number // 解锁条件 \r\n\t}\r\n\t\r\n\texport class GachaUpTable { \r\n\t\tId : number // 索引ID \r\n\t\tGachaIds : number[] // 卡池ID \r\n\t\tTaskIds : number[] // 任务ID \r\n\t\tIconUrl : string // 扭蛋入口图片 \r\n\t\tTabUrl : string[] // 页签图标 \r\n\t\tAnimationId : number // 动画ID \r\n\t\tLoginShowUrl : string // 登录展示图 \r\n\t\tPrefabUrl : string // 概率显示prefab \r\n\t}\r\n\t\r\n\texport class ActivityHeroGrowTable { \r\n\t\tId : number // 索引ID \r\n\t\tHeroId : number // 英雄ID \r\n\t\tHeroStar : number // 英雄星级 \r\n\t\tFreeRewardId : number // 免费奖励ID \r\n\t\tFreeRewardCount : number // 免费奖励数量 \r\n\t\tRechargeId : number // 充值ID \r\n\t\tLimitCount : number // 限购次数 \r\n\t\tRewardIds : number[] // 付费奖励ID \r\n\t\tRewardCount : number[] // 付费奖励数量 \r\n\t\tBackgroundUrl : string // 活动背景图 \r\n\t\tAnimationId : number // 动画ID \r\n\t}\r\n\t\r\n\texport class SignInGiftTable { \r\n\t\tDay : number // 登录天数 \r\n\t\tItemId : number // 道具ID \r\n\t\tItemCount : number // 道具数量 \r\n\t\tIsGrand : boolean // 是否大奖 \r\n\t}\r\n\t\r\n\texport class PopWindowMechanism { \r\n\t\tID : number // 索引ID \r\n\t\tPopPriority : number // 弹出优先级 \r\n\t\tMutexID : number[] // 互斥弹出 \r\n\t}\r\n\t\r\n\texport class PvPStageTable { \r\n\t\tID : number // 关卡ID \r\n\t\tType : PvpType // 战斗类型 \r\n\t\tSceneWidth : number // 场景宽度 \r\n\t\tSceneHeight : number // 场景高度 \r\n\t\tPosition : number[] // 英雄站点 \r\n\t}\r\n\t\r\n\texport class PvPStagePositionTable { \r\n\t\tID : number // 分组ID \r\n\t\tHeroClass : HeroClass // 英雄 \r\n\t\tX : number // X \r\n\t\tY : number // Y \r\n\t\tlocation : number // 对应阵容位置 \r\n\t}\r\n\t\r\n\texport class FincaFightTeam { \r\n\t\tLevel : number // 日志等级 \r\n\t\tUnlockHero : number // 解锁英雄数量 \r\n\t\tUnlockWeapon : number // 解锁武器数量 \r\n\t}\r\n\t\r\n\texport class ConfigTable { \r\n\t\tInitialItems : number[] //  \r\n\t\tInitialQuantities : number[] //  \r\n\t\tEquipMaxNum : number //  \r\n\t\tChangeNameCost : number[] //  \r\n\t\tInitialStaminaMaxCount : number //  \r\n\t\tStaminaResumeTime : number //  \r\n\t\tMainChapterQuiteCount : number //  \r\n\t\tInterfaceTxtGreen : string //  \r\n\t\tInterfaceTxtRed : string //  \r\n\t\tDailyTaskRewardNeedCount : number[] //  \r\n\t\tInitialPatrolMaxTime : number //  \r\n\t\tQuickPatrolUseItem : number[] //  \r\n\t\tQuickPatrolDailyCount : number //  \r\n\t\tQuickPatrolTime : number //  \r\n\t\tPatrolRewardCd : number //  \r\n\t\tPatrolTipsTime : number //  \r\n\t\tGoldStageSweepFreeCount : number //  \r\n\t\tGoldStageSweepBuyCount : number //  \r\n\t\tGoldStageSweepBuyCost : number[] //  \r\n\t\tFeedStageSweepFreeCount : number //  \r\n\t\tFeedStageSweepBuyCount : number //  \r\n\t\tFeedStageSweepBuyCost : number[] //  \r\n\t\tHeroCollectionExistsSec : number //  \r\n\t\tNewPlayerTask1Duration : number //  \r\n\t\tNewPlayerTask2Duration : number //  \r\n\t\tHeroBagNum : number //  \r\n\t\tHeroBagExpansion : number[] //  \r\n\t\tHeroRecycleReward : number[] //  \r\n\t\tHeroOneClickUpgradeStars : number //  \r\n\t\tHeroOneClickUpgradeStarMax : number //  \r\n\t\tBookStarUniversalMaterial : number //  \r\n\t\tBookStarUniversalMaterialQuality : ItemQuality //  \r\n\t\tweaponLimit : number //  \r\n\t\tFightDefConstant : number //  \r\n\t\tFightDefHeroStarConstant : number //  \r\n\t\tFightDefHeroLevelConstant : number //  \r\n\t\tFightCriticalConstant : number //  \r\n\t\tFightCriticalPointTop : number //  \r\n\t\tFightCriticalCurvature : number //  \r\n\t\tFightCriticalInflection : number //  \r\n\t\tFightBaseThumpDamage : number //  \r\n\t\tFightBaseVertigo : number //  \r\n\t\tFightDamageColor_0 : string[] //  \r\n\t\tFightDamageColor_1 : string[] //  \r\n\t\tFightDamageColor_2 : string[] //  \r\n\t\tFightDamageColor_3 : string[] //  \r\n\t\tFightDamageColor_4 : string[] //  \r\n\t\tTimeScale : string[] //  \r\n\t\tFightRogueRefreshCount : number //  \r\n\t\tCaptainSkill : number //  \r\n\t\tFrontSkill : number //  \r\n\t\tFightReviveCountByAd : number //  \r\n\t\tDeatheffect : number[] //  \r\n\t\tResurrectioneffect : number //  \r\n\t\tHolding : number //  \r\n\t\tHoldFull : number //  \r\n\t\tBulletBaseTarget : number[] //  \r\n\t\tFinalBuffId : number[] //  \r\n\t\tTapTipsTimes : number[] //  \r\n\t\tShieldLimit : number //  \r\n\t\tNormalHitBack : number[] //  \r\n\t\tWanDaoLocation : number[] //  \r\n\t\tRogueHeroRankScore : number[] //  \r\n\t\tRogueCaptainScore : number //  \r\n\t\tRogueWarriorScore : number //  \r\n\t\tRogueBookBuildsScore : number[] //  \r\n\t\tRogueBookCoreScore : number //  \r\n\t\tRogueBookSkillScore : number //  \r\n\t\tRogueBookBaseScore : number //  \r\n\t\tRogueBookKeyScore : number //  \r\n\t\tRogueCaptainUpMul : number //  \r\n\t\tRogueSeparatedScore : number[] //  \r\n\t\tFriendMaxCount : number //  \r\n\t\tApplyFriendMaxCount : number //  \r\n\t\tBlackListMaxCount : number //  \r\n\t\tRecommendMaxCount : number //  \r\n\t\tRecommendTimeLimit : number //  \r\n\t\tRecommendOfflineLimit : number //  \r\n\t\tGiftMaxCount : number //  \r\n\t\tGiftRecvMaxCount : number //  \r\n\t\tGiftGivingMaxCount : number //  \r\n\t\tGiftItemId : number //  \r\n\t\tGiftAmount : number //  \r\n\t\tDailyShopFreeRefreshCount : number //  \r\n\t\tDailyShopFreeRefreshCD : number //  \r\n\t\tDailyShopBuyRefreshCount : number //  \r\n\t\tDailyShopBuyCostDiamonds : number[] //  \r\n\t\tChatCd : number //  \r\n\t\tRankUpdateInterval : number //  \r\n\t\tDailyRewardId : number //  \r\n\t\tMonthlyPassBothRewardItemIds : number[] //  \r\n\t\tMonthlyPassBothRewardItemNum : number[] //  \r\n\t\tWorldBossStageId : number //  \r\n\t\tWorldBossDailyCount : number //  \r\n\t\tWorldBossDailyBuyCount : number //  \r\n\t\tWorldBossDailyBuyCostDiamonds : number[] //  \r\n\t\tWorldBossShowSkillIds : number[] //  \r\n\t\tDailyChallengeCD : number //  \r\n\t\tDailyChallengeCount : number //  \r\n\t\tDailyChallengeFreeCount : number //  \r\n\t\tClimbTowerDefeatCount : number //  \r\n\t\tInitialDropFeather : number //  \r\n\t\tAddDropFeather : number //  \r\n\t\tRogueFullBackupOption : number //  \r\n\t\tMailExpireTime : number //  \r\n\t\tMailMaxCount : number //  \r\n\t\tGuideStage : string //  \r\n\t\tGuideStageBuff : number[] //  \r\n\t\tGuideStageFeatherGroup : number //  \r\n\t\tGuideStageRogueGroup : number //  \r\n\t\tLoadingTipsTime : number //  \r\n\t\tCreateGuildCostDiamond : number //  \r\n\t\tGuildChangeNameCost : number //  \r\n\t\tGuildAttrResetCost : number //  \r\n\t\tGuildDailyTaskRewardNeedCount : number[] //  \r\n\t\tGuildGiftPhase : number[] //  \r\n\t\tGuildGiftRefreshWeekday : number[] //  \r\n\t\tGuildRankSyncInterval : number //  \r\n\t\tGuildJoinCd : number //  \r\n\t\tGuildBossStageId : number //  \r\n\t\tGuildBossDailyCount : number //  \r\n\t\tGuildBossDailyBuyCount : number //  \r\n\t\tGuildBossDailyBuyCostDiamonds : number[] //  \r\n\t\tGuildBossShowSkillIds : number[] //  \r\n\t\tFincaFightDefaultScore : number //  \r\n\t\tFincaFightFreeTimes : number //  \r\n\t\tFincaFightBattleSkip : number //  \r\n\t\tPvPRogueTick : number[] //  \r\n\t\tPveStageDifficultyTag : number[] //  \r\n\t}\r\n\t\r\n\r\n\t// Combine struct\r\n\texport class Table { \r\n\t\tAchievementTaskTable : AchievementTaskTable[] // table: AchievementTaskTable \r\n\t\tActivityCumulativeRechargeTable : ActivityCumulativeRechargeTable[] // table: ActivityCumulativeRechargeTable \r\n\t\tActivityHeroGrowTable : ActivityHeroGrowTable[] // table: ActivityHeroGrowTable \r\n\t\tActivityNewPlayerTaskScoreTable : ActivityNewPlayerTaskScoreTable[] // table: ActivityNewPlayerTaskScoreTable \r\n\t\tActivityNewPlayerTaskTable : ActivityNewPlayerTaskTable[] // table: ActivityNewPlayerTaskTable \r\n\t\tActivityRankTable : ActivityRankTable[] // table: ActivityRankTable \r\n\t\tActivityTable : ActivityTable[] // table: ActivityTable \r\n\t\tAdvertPosTable : AdvertPosTable[] // table: AdvertPosTable \r\n\t\tAnimationTable : AnimationTable[] // table: AnimationTable \r\n\t\tBattlePassTable : BattlePassTable[] // table: BattlePassTable \r\n\t\tBookDictionary : BookDictionary[] // table: BookDictionary \r\n\t\tBookFragmentTable : BookFragmentTable[] // table: BookFragmentTable \r\n\t\tBookLevelTable : BookLevelTable[] // table: BookLevelTable \r\n\t\tBookSeriesTable : BookSeriesTable[] // table: BookSeriesTable \r\n\t\tBookSlotTable : BookSlotTable[] // table: BookSlotTable \r\n\t\tBookStarTable : BookStarTable[] // table: BookStarTable \r\n\t\tBookTable : BookTable[] // table: BookTable \r\n\t\tBoundTable : BoundTable[] // table: BoundTable \r\n\t\tBreakEggTable : BreakEggTable[] // table: BreakEggTable \r\n\t\tBuffTable : BuffTable[] // table: BuffTable \r\n\t\tBulletTable : BulletTable[] // table: BulletTable \r\n\t\tBuyDiamondsTable : BuyDiamondsTable[] // table: BuyDiamondsTable \r\n\t\tBuyGoldTable : BuyGoldTable[] // table: BuyGoldTable \r\n\t\tBuyStaminaTable : BuyStaminaTable[] // table: BuyStaminaTable \r\n\t\tChallengeButtonTable : ChallengeButtonTable[] // table: ChallengeButtonTable \r\n\t\tChannelTable : ChannelTable[] // table: ChannelTable \r\n\t\tChapterFristRewardTable : ChapterFristRewardTable[] // table: ChapterFristRewardTable \r\n\t\tChatBreviaryTable : ChatBreviaryTable[] // table: ChatBreviaryTable \r\n\t\tChoiceBoxTable : ChoiceBoxTable[] // table: ChoiceBoxTable \r\n\t\tClimbTowerTable : ClimbTowerTable[] // table: ClimbTowerTable \r\n\t\tComic : Comic[] // table: Comic \r\n\t\tDailyChallengeBuffTable : DailyChallengeBuffTable[] // table: DailyChallengeBuffTable \r\n\t\tDailyChallengeLevelTable : DailyChallengeLevelTable[] // table: DailyChallengeLevelTable \r\n\t\tDailyRewardItemTable : DailyRewardItemTable[] // table: DailyRewardItemTable \r\n\t\tDailyRewardTable : DailyRewardTable[] // table: DailyRewardTable \r\n\t\tDailyShopItemTable : DailyShopItemTable[] // table: DailyShopItemTable \r\n\t\tDailyShopTable : DailyShopTable[] // table: DailyShopTable \r\n\t\tDropTable : DropTable[] // table: DropTable \r\n\t\tEffectTable : EffectTable[] // table: EffectTable \r\n\t\tElixirTable : ElixirTable[] // table: ElixirTable \r\n\t\tEquipAttrGroupTable : EquipAttrGroupTable[] // table: EquipAttrGroupTable \r\n\t\tEquipAttrTable : EquipAttrTable[] // table: EquipAttrTable \r\n\t\tEquipSkillTable : EquipSkillTable[] // table: EquipSkillTable \r\n\t\tEquipTable : EquipTable[] // table: EquipTable \r\n\t\tEquipUpgradeTable : EquipUpgradeTable[] // table: EquipUpgradeTable \r\n\t\tFeatherEggDrop : FeatherEggDrop[] // table: FeatherEggDrop \r\n\t\tFincaFightTeam : FincaFightTeam[] // table: FincaFightTeam \r\n\t\tFirstRechargeTable : FirstRechargeTable[] // table: FirstRechargeTable \r\n\t\tGachaTable : GachaTable[] // table: GachaTable \r\n\t\tGachaUpTable : GachaUpTable[] // table: GachaUpTable \r\n\t\tGeneLevelTable : GeneLevelTable[] // table: GeneLevelTable \r\n\t\tGuideDialogueTable : GuideDialogueTable[] // table: GuideDialogueTable \r\n\t\tGuideTable : GuideTable[] // table: GuideTable \r\n\t\tGuildAttrTable : GuildAttrTable[] // table: GuildAttrTable \r\n\t\tGuildBossPointTable : GuildBossPointTable[] // table: GuildBossPointTable \r\n\t\tGuildFlagTable : GuildFlagTable[] // table: GuildFlagTable \r\n\t\tGuildGiftTable : GuildGiftTable[] // table: GuildGiftTable \r\n\t\tGuildLevelTable : GuildLevelTable[] // table: GuildLevelTable \r\n\t\tGuildOpenFunctionTable : GuildOpenFunctionTable[] // table: GuildOpenFunctionTable \r\n\t\tGuildPositionTable : GuildPositionTable[] // table: GuildPositionTable \r\n\t\tGuildSignInTable : GuildSignInTable[] // table: GuildSignInTable \r\n\t\tHeadFramTable : HeadFramTable[] // table: HeadFramTable \r\n\t\tHeadTable : HeadTable[] // table: HeadTable \r\n\t\tHeroAlbumTable : HeroAlbumTable[] // table: HeroAlbumTable \r\n\t\tHeroAptitudeTable : HeroAptitudeTable[] // table: HeroAptitudeTable \r\n\t\tHeroAttrClientTable : HeroAttrClientTable[] // table: HeroAttrClientTable \r\n\t\tHeroAttrTable : HeroAttrTable[] // table: HeroAttrTable \r\n\t\tHeroClassTable : HeroClassTable[] // table: HeroClassTable \r\n\t\tHeroCollectionTable : HeroCollectionTable[] // table: HeroCollectionTable \r\n\t\tHeroCommonCostTable : HeroCommonCostTable[] // table: HeroCommonCostTable \r\n\t\tHeroLevelResonanceTable : HeroLevelResonanceTable[] // table: HeroLevelResonanceTable \r\n\t\tHeroLevelUpTable : HeroLevelUpTable[] // table: HeroLevelUpTable \r\n\t\tHeroMasterTable : HeroMasterTable[] // table: HeroMasterTable \r\n\t\tHeroPowerScore : HeroPowerScore[] // table: HeroPowerScore \r\n\t\tHeroStarResonanceTable : HeroStarResonanceTable[] // table: HeroStarResonanceTable \r\n\t\tHeroStarStepTable : HeroStarStepTable[] // table: HeroStarStepTable \r\n\t\tHeroStarUpTable : HeroStarUpTable[] // table: HeroStarUpTable \r\n\t\tHeroTable : HeroTable[] // table: HeroTable \r\n\t\tItemClientJumpTable : ItemClientJumpTable[] // table: ItemClientJumpTable \r\n\t\tItemQualityTable : ItemQualityTable[] // table: ItemQualityTable \r\n\t\tItemStarClientTable : ItemStarClientTable[] // table: ItemStarClientTable \r\n\t\tItemTable : ItemTable[] // table: ItemTable \r\n\t\tLimitTimeItemTable : LimitTimeItemTable[] // table: LimitTimeItemTable \r\n\t\tMainChapterGiftTable : MainChapterGiftTable[] // table: MainChapterGiftTable \r\n\t\tMainChapterTable : MainChapterTable[] // table: MainChapterTable \r\n\t\tMallItemTabe : MallItemTabe[] // table: MallItemTabe \r\n\t\tMallTable : MallTable[] // table: MallTable \r\n\t\tMapBlock : MapBlock[] // table: MapBlock \r\n\t\tModuleTable : ModuleTable[] // table: ModuleTable \r\n\t\tMonsterTable : MonsterTable[] // table: MonsterTable \r\n\t\tMonthlyPassTable : MonthlyPassTable[] // table: MonthlyPassTable \r\n\t\tNewPlayerDailyGiftTable : NewPlayerDailyGiftTable[] // table: NewPlayerDailyGiftTable \r\n\t\tNoticeTable : NoticeTable[] // table: NoticeTable \r\n\t\tOpenFunctionTable : OpenFunctionTable[] // table: OpenFunctionTable \r\n\t\tPRBTable : PRBTable[] // table: PRBTable \r\n\t\tPatrolTable : PatrolTable[] // table: PatrolTable \r\n\t\tPlayerLvTable : PlayerLvTable[] // table: PlayerLvTable \r\n\t\tPopWindowMechanism : PopWindowMechanism[] // table: PopWindowMechanism \r\n\t\tPvPStagePositionTable : PvPStagePositionTable[] // table: PvPStagePositionTable \r\n\t\tPvPStageTable : PvPStageTable[] // table: PvPStageTable \r\n\t\tPveAddFeatherDropTable : PveAddFeatherDropTable[] // table: PveAddFeatherDropTable \r\n\t\tPveClearStageTable : PveClearStageTable[] // table: PveClearStageTable \r\n\t\tPveStageBuffTable : PveStageBuffTable[] // table: PveStageBuffTable \r\n\t\tPveStageDropTable : PveStageDropTable[] // table: PveStageDropTable \r\n\t\tPveStageTable : PveStageTable[] // table: PveStageTable \r\n\t\tPveSweepTable : PveSweepTable[] // table: PveSweepTable \r\n\t\tPveTimeDropTable : PveTimeDropTable[] // table: PveTimeDropTable \r\n\t\tQuestLogTable : QuestLogTable[] // table: QuestLogTable \r\n\t\tRandomNameTable : RandomNameTable[] // table: RandomNameTable \r\n\t\tRankCycleRewardTable : RankCycleRewardTable[] // table: RankCycleRewardTable \r\n\t\tRankRewardTable : RankRewardTable[] // table: RankRewardTable \r\n\t\tRechargeTable : RechargeTable[] // table: RechargeTable \r\n\t\tRecommendTeamTable : RecommendTeamTable[] // table: RecommendTeamTable \r\n\t\tRobotTable : RobotTable[] // table: RobotTable \r\n\t\tRogueGroupTable : RogueGroupTable[] // table: RogueGroupTable \r\n\t\tRogueTable : RogueTable[] // table: RogueTable \r\n\t\tScrollPaintingTable : ScrollPaintingTable[] // table: ScrollPaintingTable \r\n\t\tServerlistTable : ServerlistTable[] // table: ServerlistTable \r\n\t\tSignInGiftTable : SignInGiftTable[] // table: SignInGiftTable \r\n\t\tSkillGroupTable : SkillGroupTable[] // table: SkillGroupTable \r\n\t\tSkillPowerTable : SkillPowerTable[] // table: SkillPowerTable \r\n\t\tSkillSummonTable : SkillSummonTable[] // table: SkillSummonTable \r\n\t\tSkillTable : SkillTable[] // table: SkillTable \r\n\t\tSoundTable : SoundTable[] // table: SoundTable \r\n\t\tTaskTable : TaskTable[] // table: TaskTable \r\n\t\tTipsTable : TipsTable[] // table: TipsTable \r\n\t\tTriggerTable : TriggerTable[] // table: TriggerTable \r\n\t\tVipBonusTable : VipBonusTable[] // table: VipBonusTable \r\n\t\tVipTable : VipTable[] // table: VipTable \r\n\t\tVirtualItem : VirtualItem[] // table: VirtualItem \r\n\t\tVoidStageTable : VoidStageTable[] // table: VoidStageTable \r\n\t\tWeeklyTaskBoxTable : WeeklyTaskBoxTable[] // table: WeeklyTaskBoxTable \r\n\t\tWorldBossDamTable : WorldBossDamTable[] // table: WorldBossDamTable \r\n\t\tWorldBossRewardTable : WorldBossRewardTable[] // table: WorldBossRewardTable \r\n\t\tConfigTable : ConfigTable[] // table: ConfigTable \r\n\r\n\t\t// Indices \r\n\t\tAchievementTaskTableById : Dictionary<number, AchievementTaskTable> // table: AchievementTaskTable \r\n\t\tActivityCumulativeRechargeTableByIndexId : Dictionary<number, ActivityCumulativeRechargeTable> // table: ActivityCumulativeRechargeTable \r\n\t\tActivityHeroGrowTableById : Dictionary<number, ActivityHeroGrowTable> // table: ActivityHeroGrowTable \r\n\t\tActivityNewPlayerTaskScoreTableById : Dictionary<number, ActivityNewPlayerTaskScoreTable> // table: ActivityNewPlayerTaskScoreTable \r\n\t\tActivityNewPlayerTaskTableById : Dictionary<number, ActivityNewPlayerTaskTable> // table: ActivityNewPlayerTaskTable \r\n\t\tActivityRankTableById : Dictionary<number, ActivityRankTable> // table: ActivityRankTable \r\n\t\tActivityTableByActivityId : Dictionary<number, ActivityTable> // table: ActivityTable \r\n\t\tAdvertPosTableByAdType : Dictionary<AdType, AdvertPosTable> // table: AdvertPosTable \r\n\t\tAnimationTableById : Dictionary<number, AnimationTable> // table: AnimationTable \r\n\t\tBattlePassTableById : Dictionary<number, BattlePassTable> // table: BattlePassTable \r\n\t\tBookDictionaryByPhaseOneBook : Dictionary<number, BookDictionary> // table: BookDictionary \r\n\t\tBookFragmentTableById : Dictionary<number, BookFragmentTable> // table: BookFragmentTable \r\n\t\tBookLevelTableById : Dictionary<number, BookLevelTable> // table: BookLevelTable \r\n\t\tBookSeriesTableById : Dictionary<number, BookSeriesTable> // table: BookSeriesTable \r\n\t\tBookSlotTableById : Dictionary<number, BookSlotTable> // table: BookSlotTable \r\n\t\tBookStarTableById : Dictionary<number, BookStarTable> // table: BookStarTable \r\n\t\tBookTableById : Dictionary<number, BookTable> // table: BookTable \r\n\t\tBoundTableById : Dictionary<number, BoundTable> // table: BoundTable \r\n\t\tBreakEggTableById : Dictionary<number, BreakEggTable> // table: BreakEggTable \r\n\t\tBuffTableById : Dictionary<number, BuffTable> // table: BuffTable \r\n\t\tBulletTableById : Dictionary<number, BulletTable> // table: BulletTable \r\n\t\tBuyDiamondsTableByGoodsId : Dictionary<number, BuyDiamondsTable> // table: BuyDiamondsTable \r\n\t\tBuyGoldTableByType : Dictionary<BuyGoldType, BuyGoldTable> // table: BuyGoldTable \r\n\t\tBuyStaminaTableByType : Dictionary<BuyStaminaType, BuyStaminaTable> // table: BuyStaminaTable \r\n\t\tChallengeButtonTableById : Dictionary<number, ChallengeButtonTable> // table: ChallengeButtonTable \r\n\t\tChannelTableByChannelType : Dictionary<ChannelType, ChannelTable> // table: ChannelTable \r\n\t\tChapterFristRewardTableById : Dictionary<number, ChapterFristRewardTable> // table: ChapterFristRewardTable \r\n\t\tChatBreviaryTableByType : Dictionary<ChatBreviaryType, ChatBreviaryTable> // table: ChatBreviaryTable \r\n\t\tChoiceBoxTableByChoiceBoxId : Dictionary<number, ChoiceBoxTable> // table: ChoiceBoxTable \r\n\t\tClimbTowerTableByStageId : Dictionary<number, ClimbTowerTable> // table: ClimbTowerTable \r\n\t\tComicByComicID : Dictionary<number, Comic> // table: Comic \r\n\t\tDailyChallengeBuffTableById : Dictionary<number, DailyChallengeBuffTable> // table: DailyChallengeBuffTable \r\n\t\tDailyChallengeLevelTableByLevel : Dictionary<number, DailyChallengeLevelTable> // table: DailyChallengeLevelTable \r\n\t\tDailyRewardTableById : Dictionary<number, DailyRewardTable> // table: DailyRewardTable \r\n\t\tDailyShopItemTableById : Dictionary<number, DailyShopItemTable> // table: DailyShopItemTable \r\n\t\tDailyShopTableByShopId : Dictionary<number, DailyShopTable> // table: DailyShopTable \r\n\t\tDropTableById : Dictionary<number, DropTable> // table: DropTable \r\n\t\tEffectTableById : Dictionary<number, EffectTable> // table: EffectTable \r\n\t\tElixirTableById : Dictionary<number, ElixirTable> // table: ElixirTable \r\n\t\tEquipAttrGroupTableById : Dictionary<string, EquipAttrGroupTable> // table: EquipAttrGroupTable \r\n\t\tEquipAttrTableById : Dictionary<number, EquipAttrTable> // table: EquipAttrTable \r\n\t\tEquipSkillTableById : Dictionary<number, EquipSkillTable> // table: EquipSkillTable \r\n\t\tEquipTableById : Dictionary<number, EquipTable> // table: EquipTable \r\n\t\tEquipUpgradeTableById : Dictionary<number, EquipUpgradeTable> // table: EquipUpgradeTable \r\n\t\tFeatherEggDropById : Dictionary<number, FeatherEggDrop> // table: FeatherEggDrop \r\n\t\tFincaFightTeamByLevel : Dictionary<number, FincaFightTeam> // table: FincaFightTeam \r\n\t\tFirstRechargeTableById : Dictionary<number, FirstRechargeTable> // table: FirstRechargeTable \r\n\t\tGachaTableById : Dictionary<number, GachaTable> // table: GachaTable \r\n\t\tGachaUpTableById : Dictionary<number, GachaUpTable> // table: GachaUpTable \r\n\t\tGeneLevelTableById : Dictionary<number, GeneLevelTable> // table: GeneLevelTable \r\n\t\tGuideDialogueTableById : Dictionary<string, GuideDialogueTable> // table: GuideDialogueTable \r\n\t\tGuideTableById : Dictionary<number, GuideTable> // table: GuideTable \r\n\t\tGuildAttrTableById : Dictionary<number, GuildAttrTable> // table: GuildAttrTable \r\n\t\tGuildBossPointTableById : Dictionary<number, GuildBossPointTable> // table: GuildBossPointTable \r\n\t\tGuildFlagTableById : Dictionary<number, GuildFlagTable> // table: GuildFlagTable \r\n\t\tGuildGiftTableById : Dictionary<number, GuildGiftTable> // table: GuildGiftTable \r\n\t\tGuildLevelTableById : Dictionary<number, GuildLevelTable> // table: GuildLevelTable \r\n\t\tGuildOpenFunctionTableByName : Dictionary<GuildOFName, GuildOpenFunctionTable> // table: GuildOpenFunctionTable \r\n\t\tGuildPositionTableByPosition : Dictionary<GuildPosition, GuildPositionTable> // table: GuildPositionTable \r\n\t\tGuildSignInTableById : Dictionary<number, GuildSignInTable> // table: GuildSignInTable \r\n\t\tHeadFramTableById : Dictionary<number, HeadFramTable> // table: HeadFramTable \r\n\t\tHeadTableById : Dictionary<number, HeadTable> // table: HeadTable \r\n\t\tHeroAlbumTableByHeroAptitude : Dictionary<HeroAptitude, HeroAlbumTable> // table: HeroAlbumTable \r\n\t\tHeroAptitudeTableByHeroAptitude : Dictionary<HeroAptitude, HeroAptitudeTable> // table: HeroAptitudeTable \r\n\t\tHeroAttrClientTableByType : Dictionary<AttrType, HeroAttrClientTable> // table: HeroAttrClientTable \r\n\t\tHeroAttrTableById : Dictionary<number, HeroAttrTable> // table: HeroAttrTable \r\n\t\tHeroClassTableByHeroClass : Dictionary<HeroClass, HeroClassTable> // table: HeroClassTable \r\n\t\tHeroCollectionTableById : Dictionary<number, HeroCollectionTable> // table: HeroCollectionTable \r\n\t\tHeroCommonCostTableById : Dictionary<number, HeroCommonCostTable> // table: HeroCommonCostTable \r\n\t\tHeroLevelResonanceTableById : Dictionary<number, HeroLevelResonanceTable> // table: HeroLevelResonanceTable \r\n\t\tHeroLevelUpTableByLevel : Dictionary<number, HeroLevelUpTable> // table: HeroLevelUpTable \r\n\t\tHeroMasterTableById : Dictionary<number, HeroMasterTable> // table: HeroMasterTable \r\n\t\tHeroPowerScoreById : Dictionary<number, HeroPowerScore> // table: HeroPowerScore \r\n\t\tHeroStarResonanceTableById : Dictionary<number, HeroStarResonanceTable> // table: HeroStarResonanceTable \r\n\t\tHeroStarStepTableById : Dictionary<number, HeroStarStepTable> // table: HeroStarStepTable \r\n\t\tHeroStarUpTableById : Dictionary<number, HeroStarUpTable> // table: HeroStarUpTable \r\n\t\tHeroTableById : Dictionary<number, HeroTable> // table: HeroTable \r\n\t\tItemClientJumpTableByItemId : Dictionary<number, ItemClientJumpTable> // table: ItemClientJumpTable \r\n\t\tItemQualityTableByQuality : Dictionary<ItemQuality, ItemQualityTable> // table: ItemQualityTable \r\n\t\tItemStarClientTableById : Dictionary<number, ItemStarClientTable> // table: ItemStarClientTable \r\n\t\tItemTableById : Dictionary<number, ItemTable> // table: ItemTable \r\n\t\tLimitTimeItemTableByItemId : Dictionary<number, LimitTimeItemTable> // table: LimitTimeItemTable \r\n\t\tMainChapterGiftTableByMallId : Dictionary<number, MainChapterGiftTable> // table: MainChapterGiftTable \r\n\t\tMainChapterTableById : Dictionary<number, MainChapterTable> // table: MainChapterTable \r\n\t\tMallItemTabeById : Dictionary<number, MallItemTabe> // table: MallItemTabe \r\n\t\tMallTableByMallId : Dictionary<number, MallTable> // table: MallTable \r\n\t\tMapBlockById : Dictionary<number, MapBlock> // table: MapBlock \r\n\t\tModuleTableByModuleType : Dictionary<Module, ModuleTable> // table: ModuleTable \r\n\t\tMonsterTableById : Dictionary<number, MonsterTable> // table: MonsterTable \r\n\t\tMonthlyPassTableByType : Dictionary<PrivilegedType, MonthlyPassTable> // table: MonthlyPassTable \r\n\t\tNewPlayerDailyGiftTableById : Dictionary<number, NewPlayerDailyGiftTable> // table: NewPlayerDailyGiftTable \r\n\t\tNoticeTableById : Dictionary<number, NoticeTable> // table: NoticeTable \r\n\t\tOpenFunctionTableByName : Dictionary<OpenFunctionName, OpenFunctionTable> // table: OpenFunctionTable \r\n\t\tPRBTableById : Dictionary<number, PRBTable> // table: PRBTable \r\n\t\tPatrolTableByPveStageId : Dictionary<number, PatrolTable> // table: PatrolTable \r\n\t\tPlayerLvTableByPlayerLv : Dictionary<number, PlayerLvTable> // table: PlayerLvTable \r\n\t\tPopWindowMechanismByID : Dictionary<number, PopWindowMechanism> // table: PopWindowMechanism \r\n\t\tPvPStageTableByID : Dictionary<number, PvPStageTable> // table: PvPStageTable \r\n\t\tPveAddFeatherDropTableByCount : Dictionary<number, PveAddFeatherDropTable> // table: PveAddFeatherDropTable \r\n\t\tPveClearStageTableByStageId : Dictionary<number, PveClearStageTable> // table: PveClearStageTable \r\n\t\tPveStageBuffTableById : Dictionary<number, PveStageBuffTable> // table: PveStageBuffTable \r\n\t\tPveStageDropTableByDropId : Dictionary<number, PveStageDropTable> // table: PveStageDropTable \r\n\t\tPveStageTableByStageId : Dictionary<number, PveStageTable> // table: PveStageTable \r\n\t\tPveSweepTableByStageId : Dictionary<number, PveSweepTable> // table: PveSweepTable \r\n\t\tPveTimeDropTableByStageId : Dictionary<number, PveTimeDropTable> // table: PveTimeDropTable \r\n\t\tQuestLogTableByLevel : Dictionary<number, QuestLogTable> // table: QuestLogTable \r\n\t\tRandomNameTableById : Dictionary<number, RandomNameTable> // table: RandomNameTable \r\n\t\tRankCycleRewardTableByIndexId : Dictionary<number, RankCycleRewardTable> // table: RankCycleRewardTable \r\n\t\tRankRewardTableById : Dictionary<number, RankRewardTable> // table: RankRewardTable \r\n\t\tRechargeTableById : Dictionary<number, RechargeTable> // table: RechargeTable \r\n\t\tRecommendTeamTableById : Dictionary<number, RecommendTeamTable> // table: RecommendTeamTable \r\n\t\tRobotTableById : Dictionary<number, RobotTable> // table: RobotTable \r\n\t\tRogueGroupTableById : Dictionary<number, RogueGroupTable> // table: RogueGroupTable \r\n\t\tRogueTableById : Dictionary<number, RogueTable> // table: RogueTable \r\n\t\tScrollPaintingTableById : Dictionary<number, ScrollPaintingTable> // table: ScrollPaintingTable \r\n\t\tServerlistTableByID : Dictionary<number, ServerlistTable> // table: ServerlistTable \r\n\t\tSignInGiftTableByDay : Dictionary<number, SignInGiftTable> // table: SignInGiftTable \r\n\t\tSkillGroupTableById : Dictionary<number, SkillGroupTable> // table: SkillGroupTable \r\n\t\tSkillPowerTableById : Dictionary<number, SkillPowerTable> // table: SkillPowerTable \r\n\t\tSkillSummonTableBySummonId : Dictionary<number, SkillSummonTable> // table: SkillSummonTable \r\n\t\tSkillTableById : Dictionary<number, SkillTable> // table: SkillTable \r\n\t\tSoundTableById : Dictionary<number, SoundTable> // table: SoundTable \r\n\t\tTaskTableById : Dictionary<number, TaskTable> // table: TaskTable \r\n\t\tTipsTableById : Dictionary<number, TipsTable> // table: TipsTable \r\n\t\tTriggerTableById : Dictionary<number, TriggerTable> // table: TriggerTable \r\n\t\tVipBonusTableByIndexId : Dictionary<number, VipBonusTable> // table: VipBonusTable \r\n\t\tVipTableByVipLv : Dictionary<number, VipTable> // table: VipTable \r\n\t\tVirtualItemByVirtualItemId : Dictionary<number, VirtualItem> // table: VirtualItem \r\n\t\tVoidStageTableById : Dictionary<number, VoidStageTable> // table: VoidStageTable \r\n\t\tWeeklyTaskBoxTableById : Dictionary<number, WeeklyTaskBoxTable> // table: WeeklyTaskBoxTable \r\n\t\tWorldBossDamTableById : Dictionary<number, WorldBossDamTable> // table: WorldBossDamTable \r\n\t\tWorldBossRewardTableById : Dictionary<number, WorldBossRewardTable> // table: WorldBossRewardTable \r\n\r\n\t\t\r\n\t\t// table: ConfigTable\r\n\t\tGetKeyValue_ConfigTable(): ConfigTable{\r\n\t\t\treturn this.ConfigTable[0]\r\n\t\t}\r\n\t\t\r\n\r\n\t\t//根据json创建Table\r\n\t\tstatic FromJSON(json: Object|string): Table {\r\n\t\t\tlet result: Table;\r\n            if (typeof json === 'string') {\r\n                // if it's a string, parse it first\r\n                result= JSON.parse(json, Table.reviver);\r\n            } else {\r\n                // create an instance of the Table class\r\n                let tbl = new Table()\r\n                // copy all the fields from the json object\r\n                result = Object.assign(tbl, json);\r\n            }\r\n\t\t\tresult.BuildData();\r\n\t\t\treturn result;\r\n\t\t}\r\n\r\n        static reviver(key: string, value: any): any {\r\n            return key === \"\" ? Table.FromJSON(value) : value;\r\n        }\r\n\r\n\t\t// 清除索引和数据\r\n\t\tResetData() {\r\n\t\t\t\r\n\t\t\tthis.AchievementTaskTable = [] \r\n\t\t\tthis.ActivityCumulativeRechargeTable = [] \r\n\t\t\tthis.ActivityHeroGrowTable = [] \r\n\t\t\tthis.ActivityNewPlayerTaskScoreTable = [] \r\n\t\t\tthis.ActivityNewPlayerTaskTable = [] \r\n\t\t\tthis.ActivityRankTable = [] \r\n\t\t\tthis.ActivityTable = [] \r\n\t\t\tthis.AdvertPosTable = [] \r\n\t\t\tthis.AnimationTable = [] \r\n\t\t\tthis.BattlePassTable = [] \r\n\t\t\tthis.BookDictionary = [] \r\n\t\t\tthis.BookFragmentTable = [] \r\n\t\t\tthis.BookLevelTable = [] \r\n\t\t\tthis.BookSeriesTable = [] \r\n\t\t\tthis.BookSlotTable = [] \r\n\t\t\tthis.BookStarTable = [] \r\n\t\t\tthis.BookTable = [] \r\n\t\t\tthis.BoundTable = [] \r\n\t\t\tthis.BreakEggTable = [] \r\n\t\t\tthis.BuffTable = [] \r\n\t\t\tthis.BulletTable = [] \r\n\t\t\tthis.BuyDiamondsTable = [] \r\n\t\t\tthis.BuyGoldTable = [] \r\n\t\t\tthis.BuyStaminaTable = [] \r\n\t\t\tthis.ChallengeButtonTable = [] \r\n\t\t\tthis.ChannelTable = [] \r\n\t\t\tthis.ChapterFristRewardTable = [] \r\n\t\t\tthis.ChatBreviaryTable = [] \r\n\t\t\tthis.ChoiceBoxTable = [] \r\n\t\t\tthis.ClimbTowerTable = [] \r\n\t\t\tthis.Comic = [] \r\n\t\t\tthis.DailyChallengeBuffTable = [] \r\n\t\t\tthis.DailyChallengeLevelTable = [] \r\n\t\t\tthis.DailyRewardItemTable = [] \r\n\t\t\tthis.DailyRewardTable = [] \r\n\t\t\tthis.DailyShopItemTable = [] \r\n\t\t\tthis.DailyShopTable = [] \r\n\t\t\tthis.DropTable = [] \r\n\t\t\tthis.EffectTable = [] \r\n\t\t\tthis.ElixirTable = [] \r\n\t\t\tthis.EquipAttrGroupTable = [] \r\n\t\t\tthis.EquipAttrTable = [] \r\n\t\t\tthis.EquipSkillTable = [] \r\n\t\t\tthis.EquipTable = [] \r\n\t\t\tthis.EquipUpgradeTable = [] \r\n\t\t\tthis.FeatherEggDrop = [] \r\n\t\t\tthis.FincaFightTeam = [] \r\n\t\t\tthis.FirstRechargeTable = [] \r\n\t\t\tthis.GachaTable = [] \r\n\t\t\tthis.GachaUpTable = [] \r\n\t\t\tthis.GeneLevelTable = [] \r\n\t\t\tthis.GuideDialogueTable = [] \r\n\t\t\tthis.GuideTable = [] \r\n\t\t\tthis.GuildAttrTable = [] \r\n\t\t\tthis.GuildBossPointTable = [] \r\n\t\t\tthis.GuildFlagTable = [] \r\n\t\t\tthis.GuildGiftTable = [] \r\n\t\t\tthis.GuildLevelTable = [] \r\n\t\t\tthis.GuildOpenFunctionTable = [] \r\n\t\t\tthis.GuildPositionTable = [] \r\n\t\t\tthis.GuildSignInTable = [] \r\n\t\t\tthis.HeadFramTable = [] \r\n\t\t\tthis.HeadTable = [] \r\n\t\t\tthis.HeroAlbumTable = [] \r\n\t\t\tthis.HeroAptitudeTable = [] \r\n\t\t\tthis.HeroAttrClientTable = [] \r\n\t\t\tthis.HeroAttrTable = [] \r\n\t\t\tthis.HeroClassTable = [] \r\n\t\t\tthis.HeroCollectionTable = [] \r\n\t\t\tthis.HeroCommonCostTable = [] \r\n\t\t\tthis.HeroLevelResonanceTable = [] \r\n\t\t\tthis.HeroLevelUpTable = [] \r\n\t\t\tthis.HeroMasterTable = [] \r\n\t\t\tthis.HeroPowerScore = [] \r\n\t\t\tthis.HeroStarResonanceTable = [] \r\n\t\t\tthis.HeroStarStepTable = [] \r\n\t\t\tthis.HeroStarUpTable = [] \r\n\t\t\tthis.HeroTable = [] \r\n\t\t\tthis.ItemClientJumpTable = [] \r\n\t\t\tthis.ItemQualityTable = [] \r\n\t\t\tthis.ItemStarClientTable = [] \r\n\t\t\tthis.ItemTable = [] \r\n\t\t\tthis.LimitTimeItemTable = [] \r\n\t\t\tthis.MainChapterGiftTable = [] \r\n\t\t\tthis.MainChapterTable = [] \r\n\t\t\tthis.MallItemTabe = [] \r\n\t\t\tthis.MallTable = [] \r\n\t\t\tthis.MapBlock = [] \r\n\t\t\tthis.ModuleTable = [] \r\n\t\t\tthis.MonsterTable = [] \r\n\t\t\tthis.MonthlyPassTable = [] \r\n\t\t\tthis.NewPlayerDailyGiftTable = [] \r\n\t\t\tthis.NoticeTable = [] \r\n\t\t\tthis.OpenFunctionTable = [] \r\n\t\t\tthis.PRBTable = [] \r\n\t\t\tthis.PatrolTable = [] \r\n\t\t\tthis.PlayerLvTable = [] \r\n\t\t\tthis.PopWindowMechanism = [] \r\n\t\t\tthis.PvPStagePositionTable = [] \r\n\t\t\tthis.PvPStageTable = [] \r\n\t\t\tthis.PveAddFeatherDropTable = [] \r\n\t\t\tthis.PveClearStageTable = [] \r\n\t\t\tthis.PveStageBuffTable = [] \r\n\t\t\tthis.PveStageDropTable = [] \r\n\t\t\tthis.PveStageTable = [] \r\n\t\t\tthis.PveSweepTable = [] \r\n\t\t\tthis.PveTimeDropTable = [] \r\n\t\t\tthis.QuestLogTable = [] \r\n\t\t\tthis.RandomNameTable = [] \r\n\t\t\tthis.RankCycleRewardTable = [] \r\n\t\t\tthis.RankRewardTable = [] \r\n\t\t\tthis.RechargeTable = [] \r\n\t\t\tthis.RecommendTeamTable = [] \r\n\t\t\tthis.RobotTable = [] \r\n\t\t\tthis.RogueGroupTable = [] \r\n\t\t\tthis.RogueTable = [] \r\n\t\t\tthis.ScrollPaintingTable = [] \r\n\t\t\tthis.ServerlistTable = [] \r\n\t\t\tthis.SignInGiftTable = [] \r\n\t\t\tthis.SkillGroupTable = [] \r\n\t\t\tthis.SkillPowerTable = [] \r\n\t\t\tthis.SkillSummonTable = [] \r\n\t\t\tthis.SkillTable = [] \r\n\t\t\tthis.SoundTable = [] \r\n\t\t\tthis.TaskTable = [] \r\n\t\t\tthis.TipsTable = [] \r\n\t\t\tthis.TriggerTable = [] \r\n\t\t\tthis.VipBonusTable = [] \r\n\t\t\tthis.VipTable = [] \r\n\t\t\tthis.VirtualItem = [] \r\n\t\t\tthis.VoidStageTable = [] \r\n\t\t\tthis.WeeklyTaskBoxTable = [] \r\n\t\t\tthis.WorldBossDamTable = [] \r\n\t\t\tthis.WorldBossRewardTable = [] \r\n\t\t\tthis.ConfigTable = [] \r\n\t\t\t\r\n\t\t\tthis.AchievementTaskTableById = new Dictionary<number, AchievementTaskTable>() \r\n\t\t\tthis.ActivityCumulativeRechargeTableByIndexId = new Dictionary<number, ActivityCumulativeRechargeTable>() \r\n\t\t\tthis.ActivityHeroGrowTableById = new Dictionary<number, ActivityHeroGrowTable>() \r\n\t\t\tthis.ActivityNewPlayerTaskScoreTableById = new Dictionary<number, ActivityNewPlayerTaskScoreTable>() \r\n\t\t\tthis.ActivityNewPlayerTaskTableById = new Dictionary<number, ActivityNewPlayerTaskTable>() \r\n\t\t\tthis.ActivityRankTableById = new Dictionary<number, ActivityRankTable>() \r\n\t\t\tthis.ActivityTableByActivityId = new Dictionary<number, ActivityTable>() \r\n\t\t\tthis.AdvertPosTableByAdType = new Dictionary<AdType, AdvertPosTable>() \r\n\t\t\tthis.AnimationTableById = new Dictionary<number, AnimationTable>() \r\n\t\t\tthis.BattlePassTableById = new Dictionary<number, BattlePassTable>() \r\n\t\t\tthis.BookDictionaryByPhaseOneBook = new Dictionary<number, BookDictionary>() \r\n\t\t\tthis.BookFragmentTableById = new Dictionary<number, BookFragmentTable>() \r\n\t\t\tthis.BookLevelTableById = new Dictionary<number, BookLevelTable>() \r\n\t\t\tthis.BookSeriesTableById = new Dictionary<number, BookSeriesTable>() \r\n\t\t\tthis.BookSlotTableById = new Dictionary<number, BookSlotTable>() \r\n\t\t\tthis.BookStarTableById = new Dictionary<number, BookStarTable>() \r\n\t\t\tthis.BookTableById = new Dictionary<number, BookTable>() \r\n\t\t\tthis.BoundTableById = new Dictionary<number, BoundTable>() \r\n\t\t\tthis.BreakEggTableById = new Dictionary<number, BreakEggTable>() \r\n\t\t\tthis.BuffTableById = new Dictionary<number, BuffTable>() \r\n\t\t\tthis.BulletTableById = new Dictionary<number, BulletTable>() \r\n\t\t\tthis.BuyDiamondsTableByGoodsId = new Dictionary<number, BuyDiamondsTable>() \r\n\t\t\tthis.BuyGoldTableByType = new Dictionary<BuyGoldType, BuyGoldTable>() \r\n\t\t\tthis.BuyStaminaTableByType = new Dictionary<BuyStaminaType, BuyStaminaTable>() \r\n\t\t\tthis.ChallengeButtonTableById = new Dictionary<number, ChallengeButtonTable>() \r\n\t\t\tthis.ChannelTableByChannelType = new Dictionary<ChannelType, ChannelTable>() \r\n\t\t\tthis.ChapterFristRewardTableById = new Dictionary<number, ChapterFristRewardTable>() \r\n\t\t\tthis.ChatBreviaryTableByType = new Dictionary<ChatBreviaryType, ChatBreviaryTable>() \r\n\t\t\tthis.ChoiceBoxTableByChoiceBoxId = new Dictionary<number, ChoiceBoxTable>() \r\n\t\t\tthis.ClimbTowerTableByStageId = new Dictionary<number, ClimbTowerTable>() \r\n\t\t\tthis.ComicByComicID = new Dictionary<number, Comic>() \r\n\t\t\tthis.DailyChallengeBuffTableById = new Dictionary<number, DailyChallengeBuffTable>() \r\n\t\t\tthis.DailyChallengeLevelTableByLevel = new Dictionary<number, DailyChallengeLevelTable>() \r\n\t\t\tthis.DailyRewardTableById = new Dictionary<number, DailyRewardTable>() \r\n\t\t\tthis.DailyShopItemTableById = new Dictionary<number, DailyShopItemTable>() \r\n\t\t\tthis.DailyShopTableByShopId = new Dictionary<number, DailyShopTable>() \r\n\t\t\tthis.DropTableById = new Dictionary<number, DropTable>() \r\n\t\t\tthis.EffectTableById = new Dictionary<number, EffectTable>() \r\n\t\t\tthis.ElixirTableById = new Dictionary<number, ElixirTable>() \r\n\t\t\tthis.EquipAttrGroupTableById = new Dictionary<string, EquipAttrGroupTable>() \r\n\t\t\tthis.EquipAttrTableById = new Dictionary<number, EquipAttrTable>() \r\n\t\t\tthis.EquipSkillTableById = new Dictionary<number, EquipSkillTable>() \r\n\t\t\tthis.EquipTableById = new Dictionary<number, EquipTable>() \r\n\t\t\tthis.EquipUpgradeTableById = new Dictionary<number, EquipUpgradeTable>() \r\n\t\t\tthis.FeatherEggDropById = new Dictionary<number, FeatherEggDrop>() \r\n\t\t\tthis.FincaFightTeamByLevel = new Dictionary<number, FincaFightTeam>() \r\n\t\t\tthis.FirstRechargeTableById = new Dictionary<number, FirstRechargeTable>() \r\n\t\t\tthis.GachaTableById = new Dictionary<number, GachaTable>() \r\n\t\t\tthis.GachaUpTableById = new Dictionary<number, GachaUpTable>() \r\n\t\t\tthis.GeneLevelTableById = new Dictionary<number, GeneLevelTable>() \r\n\t\t\tthis.GuideDialogueTableById = new Dictionary<string, GuideDialogueTable>() \r\n\t\t\tthis.GuideTableById = new Dictionary<number, GuideTable>() \r\n\t\t\tthis.GuildAttrTableById = new Dictionary<number, GuildAttrTable>() \r\n\t\t\tthis.GuildBossPointTableById = new Dictionary<number, GuildBossPointTable>() \r\n\t\t\tthis.GuildFlagTableById = new Dictionary<number, GuildFlagTable>() \r\n\t\t\tthis.GuildGiftTableById = new Dictionary<number, GuildGiftTable>() \r\n\t\t\tthis.GuildLevelTableById = new Dictionary<number, GuildLevelTable>() \r\n\t\t\tthis.GuildOpenFunctionTableByName = new Dictionary<GuildOFName, GuildOpenFunctionTable>() \r\n\t\t\tthis.GuildPositionTableByPosition = new Dictionary<GuildPosition, GuildPositionTable>() \r\n\t\t\tthis.GuildSignInTableById = new Dictionary<number, GuildSignInTable>() \r\n\t\t\tthis.HeadFramTableById = new Dictionary<number, HeadFramTable>() \r\n\t\t\tthis.HeadTableById = new Dictionary<number, HeadTable>() \r\n\t\t\tthis.HeroAlbumTableByHeroAptitude = new Dictionary<HeroAptitude, HeroAlbumTable>() \r\n\t\t\tthis.HeroAptitudeTableByHeroAptitude = new Dictionary<HeroAptitude, HeroAptitudeTable>() \r\n\t\t\tthis.HeroAttrClientTableByType = new Dictionary<AttrType, HeroAttrClientTable>() \r\n\t\t\tthis.HeroAttrTableById = new Dictionary<number, HeroAttrTable>() \r\n\t\t\tthis.HeroClassTableByHeroClass = new Dictionary<HeroClass, HeroClassTable>() \r\n\t\t\tthis.HeroCollectionTableById = new Dictionary<number, HeroCollectionTable>() \r\n\t\t\tthis.HeroCommonCostTableById = new Dictionary<number, HeroCommonCostTable>() \r\n\t\t\tthis.HeroLevelResonanceTableById = new Dictionary<number, HeroLevelResonanceTable>() \r\n\t\t\tthis.HeroLevelUpTableByLevel = new Dictionary<number, HeroLevelUpTable>() \r\n\t\t\tthis.HeroMasterTableById = new Dictionary<number, HeroMasterTable>() \r\n\t\t\tthis.HeroPowerScoreById = new Dictionary<number, HeroPowerScore>() \r\n\t\t\tthis.HeroStarResonanceTableById = new Dictionary<number, HeroStarResonanceTable>() \r\n\t\t\tthis.HeroStarStepTableById = new Dictionary<number, HeroStarStepTable>() \r\n\t\t\tthis.HeroStarUpTableById = new Dictionary<number, HeroStarUpTable>() \r\n\t\t\tthis.HeroTableById = new Dictionary<number, HeroTable>() \r\n\t\t\tthis.ItemClientJumpTableByItemId = new Dictionary<number, ItemClientJumpTable>() \r\n\t\t\tthis.ItemQualityTableByQuality = new Dictionary<ItemQuality, ItemQualityTable>() \r\n\t\t\tthis.ItemStarClientTableById = new Dictionary<number, ItemStarClientTable>() \r\n\t\t\tthis.ItemTableById = new Dictionary<number, ItemTable>() \r\n\t\t\tthis.LimitTimeItemTableByItemId = new Dictionary<number, LimitTimeItemTable>() \r\n\t\t\tthis.MainChapterGiftTableByMallId = new Dictionary<number, MainChapterGiftTable>() \r\n\t\t\tthis.MainChapterTableById = new Dictionary<number, MainChapterTable>() \r\n\t\t\tthis.MallItemTabeById = new Dictionary<number, MallItemTabe>() \r\n\t\t\tthis.MallTableByMallId = new Dictionary<number, MallTable>() \r\n\t\t\tthis.MapBlockById = new Dictionary<number, MapBlock>() \r\n\t\t\tthis.ModuleTableByModuleType = new Dictionary<Module, ModuleTable>() \r\n\t\t\tthis.MonsterTableById = new Dictionary<number, MonsterTable>() \r\n\t\t\tthis.MonthlyPassTableByType = new Dictionary<PrivilegedType, MonthlyPassTable>() \r\n\t\t\tthis.NewPlayerDailyGiftTableById = new Dictionary<number, NewPlayerDailyGiftTable>() \r\n\t\t\tthis.NoticeTableById = new Dictionary<number, NoticeTable>() \r\n\t\t\tthis.OpenFunctionTableByName = new Dictionary<OpenFunctionName, OpenFunctionTable>() \r\n\t\t\tthis.PRBTableById = new Dictionary<number, PRBTable>() \r\n\t\t\tthis.PatrolTableByPveStageId = new Dictionary<number, PatrolTable>() \r\n\t\t\tthis.PlayerLvTableByPlayerLv = new Dictionary<number, PlayerLvTable>() \r\n\t\t\tthis.PopWindowMechanismByID = new Dictionary<number, PopWindowMechanism>() \r\n\t\t\tthis.PvPStageTableByID = new Dictionary<number, PvPStageTable>() \r\n\t\t\tthis.PveAddFeatherDropTableByCount = new Dictionary<number, PveAddFeatherDropTable>() \r\n\t\t\tthis.PveClearStageTableByStageId = new Dictionary<number, PveClearStageTable>() \r\n\t\t\tthis.PveStageBuffTableById = new Dictionary<number, PveStageBuffTable>() \r\n\t\t\tthis.PveStageDropTableByDropId = new Dictionary<number, PveStageDropTable>() \r\n\t\t\tthis.PveStageTableByStageId = new Dictionary<number, PveStageTable>() \r\n\t\t\tthis.PveSweepTableByStageId = new Dictionary<number, PveSweepTable>() \r\n\t\t\tthis.PveTimeDropTableByStageId = new Dictionary<number, PveTimeDropTable>() \r\n\t\t\tthis.QuestLogTableByLevel = new Dictionary<number, QuestLogTable>() \r\n\t\t\tthis.RandomNameTableById = new Dictionary<number, RandomNameTable>() \r\n\t\t\tthis.RankCycleRewardTableByIndexId = new Dictionary<number, RankCycleRewardTable>() \r\n\t\t\tthis.RankRewardTableById = new Dictionary<number, RankRewardTable>() \r\n\t\t\tthis.RechargeTableById = new Dictionary<number, RechargeTable>() \r\n\t\t\tthis.RecommendTeamTableById = new Dictionary<number, RecommendTeamTable>() \r\n\t\t\tthis.RobotTableById = new Dictionary<number, RobotTable>() \r\n\t\t\tthis.RogueGroupTableById = new Dictionary<number, RogueGroupTable>() \r\n\t\t\tthis.RogueTableById = new Dictionary<number, RogueTable>() \r\n\t\t\tthis.ScrollPaintingTableById = new Dictionary<number, ScrollPaintingTable>() \r\n\t\t\tthis.ServerlistTableByID = new Dictionary<number, ServerlistTable>() \r\n\t\t\tthis.SignInGiftTableByDay = new Dictionary<number, SignInGiftTable>() \r\n\t\t\tthis.SkillGroupTableById = new Dictionary<number, SkillGroupTable>() \r\n\t\t\tthis.SkillPowerTableById = new Dictionary<number, SkillPowerTable>() \r\n\t\t\tthis.SkillSummonTableBySummonId = new Dictionary<number, SkillSummonTable>() \r\n\t\t\tthis.SkillTableById = new Dictionary<number, SkillTable>() \r\n\t\t\tthis.SoundTableById = new Dictionary<number, SoundTable>() \r\n\t\t\tthis.TaskTableById = new Dictionary<number, TaskTable>() \r\n\t\t\tthis.TipsTableById = new Dictionary<number, TipsTable>() \r\n\t\t\tthis.TriggerTableById = new Dictionary<number, TriggerTable>() \r\n\t\t\tthis.VipBonusTableByIndexId = new Dictionary<number, VipBonusTable>() \r\n\t\t\tthis.VipTableByVipLv = new Dictionary<number, VipTable>() \r\n\t\t\tthis.VirtualItemByVirtualItemId = new Dictionary<number, VirtualItem>() \r\n\t\t\tthis.VoidStageTableById = new Dictionary<number, VoidStageTable>() \r\n\t\t\tthis.WeeklyTaskBoxTableById = new Dictionary<number, WeeklyTaskBoxTable>() \r\n\t\t\tthis.WorldBossDamTableById = new Dictionary<number, WorldBossDamTable>() \r\n\t\t\tthis.WorldBossRewardTableById = new Dictionary<number, WorldBossRewardTable>() \r\n\t\t}\r\n\r\n\t\t// 构建索引\r\n\t\tBuildData() {\r\n\t\t\t\r\n\t\t\tthis.AchievementTaskTableById = new Dictionary<number, AchievementTaskTable>()\r\n\t\t\tif(this.AchievementTaskTable) {\r\n\t\t\t\tfor(let v of this.AchievementTaskTable) {\r\n\t\t\t\t\tthis.AchievementTaskTableById.setValue(v.Id, v)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.ActivityCumulativeRechargeTableByIndexId = new Dictionary<number, ActivityCumulativeRechargeTable>()\r\n\t\t\tif(this.ActivityCumulativeRechargeTable) {\r\n\t\t\t\tfor(let v of this.ActivityCumulativeRechargeTable) {\r\n\t\t\t\t\tthis.ActivityCumulativeRechargeTableByIndexId.setValue(v.IndexId, v)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.ActivityHeroGrowTableById = new Dictionary<number, ActivityHeroGrowTable>()\r\n\t\t\tif(this.ActivityHeroGrowTable) {\r\n\t\t\t\tfor(let v of this.ActivityHeroGrowTable) {\r\n\t\t\t\t\tthis.ActivityHeroGrowTableById.setValue(v.Id, v)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.ActivityNewPlayerTaskScoreTableById = new Dictionary<number, ActivityNewPlayerTaskScoreTable>()\r\n\t\t\tif(this.ActivityNewPlayerTaskScoreTable) {\r\n\t\t\t\tfor(let v of this.ActivityNewPlayerTaskScoreTable) {\r\n\t\t\t\t\tthis.ActivityNewPlayerTaskScoreTableById.setValue(v.Id, v)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.ActivityNewPlayerTaskTableById = new Dictionary<number, ActivityNewPlayerTaskTable>()\r\n\t\t\tif(this.ActivityNewPlayerTaskTable) {\r\n\t\t\t\tfor(let v of this.ActivityNewPlayerTaskTable) {\r\n\t\t\t\t\tthis.ActivityNewPlayerTaskTableById.setValue(v.Id, v)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.ActivityRankTableById = new Dictionary<number, ActivityRankTable>()\r\n\t\t\tif(this.ActivityRankTable) {\r\n\t\t\t\tfor(let v of this.ActivityRankTable) {\r\n\t\t\t\t\tthis.ActivityRankTableById.setValue(v.Id, v)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.ActivityTableByActivityId = new Dictionary<number, ActivityTable>()\r\n\t\t\tif(this.ActivityTable) {\r\n\t\t\t\tfor(let v of this.ActivityTable) {\r\n\t\t\t\t\tthis.ActivityTableByActivityId.setValue(v.ActivityId, v)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.AdvertPosTableByAdType = new Dictionary<AdType, AdvertPosTable>()\r\n\t\t\tif(this.AdvertPosTable) {\r\n\t\t\t\tfor(let v of this.AdvertPosTable) {\r\n\t\t\t\t\tthis.AdvertPosTableByAdType.setValue(v.AdType, v)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.AnimationTableById = new Dictionary<number, AnimationTable>()\r\n\t\t\tif(this.AnimationTable) {\r\n\t\t\t\tfor(let v of this.AnimationTable) {\r\n\t\t\t\t\tthis.AnimationTableById.setValue(v.Id, v)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.BattlePassTableById = new Dictionary<number, BattlePassTable>()\r\n\t\t\tif(this.BattlePassTable) {\r\n\t\t\t\tfor(let v of this.BattlePassTable) {\r\n\t\t\t\t\tthis.BattlePassTableById.setValue(v.Id, v)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.BookDictionaryByPhaseOneBook = new Dictionary<number, BookDictionary>()\r\n\t\t\tif(this.BookDictionary) {\r\n\t\t\t\tfor(let v of this.BookDictionary) {\r\n\t\t\t\t\tthis.BookDictionaryByPhaseOneBook.setValue(v.PhaseOneBook, v)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.BookFragmentTableById = new Dictionary<number, BookFragmentTable>()\r\n\t\t\tif(this.BookFragmentTable) {\r\n\t\t\t\tfor(let v of this.BookFragmentTable) {\r\n\t\t\t\t\tthis.BookFragmentTableById.setValue(v.Id, v)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.BookLevelTableById = new Dictionary<number, BookLevelTable>()\r\n\t\t\tif(this.BookLevelTable) {\r\n\t\t\t\tfor(let v of this.BookLevelTable) {\r\n\t\t\t\t\tthis.BookLevelTableById.setValue(v.Id, v)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.BookSeriesTableById = new Dictionary<number, BookSeriesTable>()\r\n\t\t\tif(this.BookSeriesTable) {\r\n\t\t\t\tfor(let v of this.BookSeriesTable) {\r\n\t\t\t\t\tthis.BookSeriesTableById.setValue(v.Id, v)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.BookSlotTableById = new Dictionary<number, BookSlotTable>()\r\n\t\t\tif(this.BookSlotTable) {\r\n\t\t\t\tfor(let v of this.BookSlotTable) {\r\n\t\t\t\t\tthis.BookSlotTableById.setValue(v.Id, v)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.BookStarTableById = new Dictionary<number, BookStarTable>()\r\n\t\t\tif(this.BookStarTable) {\r\n\t\t\t\tfor(let v of this.BookStarTable) {\r\n\t\t\t\t\tthis.BookStarTableById.setValue(v.Id, v)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.BookTableById = new Dictionary<number, BookTable>()\r\n\t\t\tif(this.BookTable) {\r\n\t\t\t\tfor(let v of this.BookTable) {\r\n\t\t\t\t\tthis.BookTableById.setValue(v.Id, v)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.BoundTableById = new Dictionary<number, BoundTable>()\r\n\t\t\tif(this.BoundTable) {\r\n\t\t\t\tfor(let v of this.BoundTable) {\r\n\t\t\t\t\tthis.BoundTableById.setValue(v.Id, v)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.BreakEggTableById = new Dictionary<number, BreakEggTable>()\r\n\t\t\tif(this.BreakEggTable) {\r\n\t\t\t\tfor(let v of this.BreakEggTable) {\r\n\t\t\t\t\tthis.BreakEggTableById.setValue(v.Id, v)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.BuffTableById = new Dictionary<number, BuffTable>()\r\n\t\t\tif(this.BuffTable) {\r\n\t\t\t\tfor(let v of this.BuffTable) {\r\n\t\t\t\t\tthis.BuffTableById.setValue(v.Id, v)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.BulletTableById = new Dictionary<number, BulletTable>()\r\n\t\t\tif(this.BulletTable) {\r\n\t\t\t\tfor(let v of this.BulletTable) {\r\n\t\t\t\t\tthis.BulletTableById.setValue(v.Id, v)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.BuyDiamondsTableByGoodsId = new Dictionary<number, BuyDiamondsTable>()\r\n\t\t\tif(this.BuyDiamondsTable) {\r\n\t\t\t\tfor(let v of this.BuyDiamondsTable) {\r\n\t\t\t\t\tthis.BuyDiamondsTableByGoodsId.setValue(v.GoodsId, v)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.BuyGoldTableByType = new Dictionary<BuyGoldType, BuyGoldTable>()\r\n\t\t\tif(this.BuyGoldTable) {\r\n\t\t\t\tfor(let v of this.BuyGoldTable) {\r\n\t\t\t\t\tthis.BuyGoldTableByType.setValue(v.Type, v)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.BuyStaminaTableByType = new Dictionary<BuyStaminaType, BuyStaminaTable>()\r\n\t\t\tif(this.BuyStaminaTable) {\r\n\t\t\t\tfor(let v of this.BuyStaminaTable) {\r\n\t\t\t\t\tthis.BuyStaminaTableByType.setValue(v.Type, v)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.ChallengeButtonTableById = new Dictionary<number, ChallengeButtonTable>()\r\n\t\t\tif(this.ChallengeButtonTable) {\r\n\t\t\t\tfor(let v of this.ChallengeButtonTable) {\r\n\t\t\t\t\tthis.ChallengeButtonTableById.setValue(v.Id, v)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.ChannelTableByChannelType = new Dictionary<ChannelType, ChannelTable>()\r\n\t\t\tif(this.ChannelTable) {\r\n\t\t\t\tfor(let v of this.ChannelTable) {\r\n\t\t\t\t\tthis.ChannelTableByChannelType.setValue(v.ChannelType, v)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.ChapterFristRewardTableById = new Dictionary<number, ChapterFristRewardTable>()\r\n\t\t\tif(this.ChapterFristRewardTable) {\r\n\t\t\t\tfor(let v of this.ChapterFristRewardTable) {\r\n\t\t\t\t\tthis.ChapterFristRewardTableById.setValue(v.Id, v)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.ChatBreviaryTableByType = new Dictionary<ChatBreviaryType, ChatBreviaryTable>()\r\n\t\t\tif(this.ChatBreviaryTable) {\r\n\t\t\t\tfor(let v of this.ChatBreviaryTable) {\r\n\t\t\t\t\tthis.ChatBreviaryTableByType.setValue(v.Type, v)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.ChoiceBoxTableByChoiceBoxId = new Dictionary<number, ChoiceBoxTable>()\r\n\t\t\tif(this.ChoiceBoxTable) {\r\n\t\t\t\tfor(let v of this.ChoiceBoxTable) {\r\n\t\t\t\t\tthis.ChoiceBoxTableByChoiceBoxId.setValue(v.ChoiceBoxId, v)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.ClimbTowerTableByStageId = new Dictionary<number, ClimbTowerTable>()\r\n\t\t\tif(this.ClimbTowerTable) {\r\n\t\t\t\tfor(let v of this.ClimbTowerTable) {\r\n\t\t\t\t\tthis.ClimbTowerTableByStageId.setValue(v.StageId, v)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.ComicByComicID = new Dictionary<number, Comic>()\r\n\t\t\tif(this.Comic) {\r\n\t\t\t\tfor(let v of this.Comic) {\r\n\t\t\t\t\tthis.ComicByComicID.setValue(v.ComicID, v)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.DailyChallengeBuffTableById = new Dictionary<number, DailyChallengeBuffTable>()\r\n\t\t\tif(this.DailyChallengeBuffTable) {\r\n\t\t\t\tfor(let v of this.DailyChallengeBuffTable) {\r\n\t\t\t\t\tthis.DailyChallengeBuffTableById.setValue(v.Id, v)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.DailyChallengeLevelTableByLevel = new Dictionary<number, DailyChallengeLevelTable>()\r\n\t\t\tif(this.DailyChallengeLevelTable) {\r\n\t\t\t\tfor(let v of this.DailyChallengeLevelTable) {\r\n\t\t\t\t\tthis.DailyChallengeLevelTableByLevel.setValue(v.Level, v)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.DailyRewardTableById = new Dictionary<number, DailyRewardTable>()\r\n\t\t\tif(this.DailyRewardTable) {\r\n\t\t\t\tfor(let v of this.DailyRewardTable) {\r\n\t\t\t\t\tthis.DailyRewardTableById.setValue(v.Id, v)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.DailyShopItemTableById = new Dictionary<number, DailyShopItemTable>()\r\n\t\t\tif(this.DailyShopItemTable) {\r\n\t\t\t\tfor(let v of this.DailyShopItemTable) {\r\n\t\t\t\t\tthis.DailyShopItemTableById.setValue(v.Id, v)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.DailyShopTableByShopId = new Dictionary<number, DailyShopTable>()\r\n\t\t\tif(this.DailyShopTable) {\r\n\t\t\t\tfor(let v of this.DailyShopTable) {\r\n\t\t\t\t\tthis.DailyShopTableByShopId.setValue(v.ShopId, v)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.DropTableById = new Dictionary<number, DropTable>()\r\n\t\t\tif(this.DropTable) {\r\n\t\t\t\tfor(let v of this.DropTable) {\r\n\t\t\t\t\tthis.DropTableById.setValue(v.Id, v)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.EffectTableById = new Dictionary<number, EffectTable>()\r\n\t\t\tif(this.EffectTable) {\r\n\t\t\t\tfor(let v of this.EffectTable) {\r\n\t\t\t\t\tthis.EffectTableById.setValue(v.Id, v)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.ElixirTableById = new Dictionary<number, ElixirTable>()\r\n\t\t\tif(this.ElixirTable) {\r\n\t\t\t\tfor(let v of this.ElixirTable) {\r\n\t\t\t\t\tthis.ElixirTableById.setValue(v.Id, v)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.EquipAttrGroupTableById = new Dictionary<string, EquipAttrGroupTable>()\r\n\t\t\tif(this.EquipAttrGroupTable) {\r\n\t\t\t\tfor(let v of this.EquipAttrGroupTable) {\r\n\t\t\t\t\tthis.EquipAttrGroupTableById.setValue(v.Id, v)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.EquipAttrTableById = new Dictionary<number, EquipAttrTable>()\r\n\t\t\tif(this.EquipAttrTable) {\r\n\t\t\t\tfor(let v of this.EquipAttrTable) {\r\n\t\t\t\t\tthis.EquipAttrTableById.setValue(v.Id, v)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.EquipSkillTableById = new Dictionary<number, EquipSkillTable>()\r\n\t\t\tif(this.EquipSkillTable) {\r\n\t\t\t\tfor(let v of this.EquipSkillTable) {\r\n\t\t\t\t\tthis.EquipSkillTableById.setValue(v.Id, v)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.EquipTableById = new Dictionary<number, EquipTable>()\r\n\t\t\tif(this.EquipTable) {\r\n\t\t\t\tfor(let v of this.EquipTable) {\r\n\t\t\t\t\tthis.EquipTableById.setValue(v.Id, v)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.EquipUpgradeTableById = new Dictionary<number, EquipUpgradeTable>()\r\n\t\t\tif(this.EquipUpgradeTable) {\r\n\t\t\t\tfor(let v of this.EquipUpgradeTable) {\r\n\t\t\t\t\tthis.EquipUpgradeTableById.setValue(v.Id, v)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.FeatherEggDropById = new Dictionary<number, FeatherEggDrop>()\r\n\t\t\tif(this.FeatherEggDrop) {\r\n\t\t\t\tfor(let v of this.FeatherEggDrop) {\r\n\t\t\t\t\tthis.FeatherEggDropById.setValue(v.Id, v)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.FincaFightTeamByLevel = new Dictionary<number, FincaFightTeam>()\r\n\t\t\tif(this.FincaFightTeam) {\r\n\t\t\t\tfor(let v of this.FincaFightTeam) {\r\n\t\t\t\t\tthis.FincaFightTeamByLevel.setValue(v.Level, v)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.FirstRechargeTableById = new Dictionary<number, FirstRechargeTable>()\r\n\t\t\tif(this.FirstRechargeTable) {\r\n\t\t\t\tfor(let v of this.FirstRechargeTable) {\r\n\t\t\t\t\tthis.FirstRechargeTableById.setValue(v.Id, v)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.GachaTableById = new Dictionary<number, GachaTable>()\r\n\t\t\tif(this.GachaTable) {\r\n\t\t\t\tfor(let v of this.GachaTable) {\r\n\t\t\t\t\tthis.GachaTableById.setValue(v.Id, v)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.GachaUpTableById = new Dictionary<number, GachaUpTable>()\r\n\t\t\tif(this.GachaUpTable) {\r\n\t\t\t\tfor(let v of this.GachaUpTable) {\r\n\t\t\t\t\tthis.GachaUpTableById.setValue(v.Id, v)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.GeneLevelTableById = new Dictionary<number, GeneLevelTable>()\r\n\t\t\tif(this.GeneLevelTable) {\r\n\t\t\t\tfor(let v of this.GeneLevelTable) {\r\n\t\t\t\t\tthis.GeneLevelTableById.setValue(v.Id, v)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.GuideDialogueTableById = new Dictionary<string, GuideDialogueTable>()\r\n\t\t\tif(this.GuideDialogueTable) {\r\n\t\t\t\tfor(let v of this.GuideDialogueTable) {\r\n\t\t\t\t\tthis.GuideDialogueTableById.setValue(v.Id, v)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.GuideTableById = new Dictionary<number, GuideTable>()\r\n\t\t\tif(this.GuideTable) {\r\n\t\t\t\tfor(let v of this.GuideTable) {\r\n\t\t\t\t\tthis.GuideTableById.setValue(v.Id, v)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.GuildAttrTableById = new Dictionary<number, GuildAttrTable>()\r\n\t\t\tif(this.GuildAttrTable) {\r\n\t\t\t\tfor(let v of this.GuildAttrTable) {\r\n\t\t\t\t\tthis.GuildAttrTableById.setValue(v.Id, v)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.GuildBossPointTableById = new Dictionary<number, GuildBossPointTable>()\r\n\t\t\tif(this.GuildBossPointTable) {\r\n\t\t\t\tfor(let v of this.GuildBossPointTable) {\r\n\t\t\t\t\tthis.GuildBossPointTableById.setValue(v.Id, v)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.GuildFlagTableById = new Dictionary<number, GuildFlagTable>()\r\n\t\t\tif(this.GuildFlagTable) {\r\n\t\t\t\tfor(let v of this.GuildFlagTable) {\r\n\t\t\t\t\tthis.GuildFlagTableById.setValue(v.Id, v)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.GuildGiftTableById = new Dictionary<number, GuildGiftTable>()\r\n\t\t\tif(this.GuildGiftTable) {\r\n\t\t\t\tfor(let v of this.GuildGiftTable) {\r\n\t\t\t\t\tthis.GuildGiftTableById.setValue(v.Id, v)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.GuildLevelTableById = new Dictionary<number, GuildLevelTable>()\r\n\t\t\tif(this.GuildLevelTable) {\r\n\t\t\t\tfor(let v of this.GuildLevelTable) {\r\n\t\t\t\t\tthis.GuildLevelTableById.setValue(v.Id, v)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.GuildOpenFunctionTableByName = new Dictionary<GuildOFName, GuildOpenFunctionTable>()\r\n\t\t\tif(this.GuildOpenFunctionTable) {\r\n\t\t\t\tfor(let v of this.GuildOpenFunctionTable) {\r\n\t\t\t\t\tthis.GuildOpenFunctionTableByName.setValue(v.Name, v)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.GuildPositionTableByPosition = new Dictionary<GuildPosition, GuildPositionTable>()\r\n\t\t\tif(this.GuildPositionTable) {\r\n\t\t\t\tfor(let v of this.GuildPositionTable) {\r\n\t\t\t\t\tthis.GuildPositionTableByPosition.setValue(v.Position, v)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.GuildSignInTableById = new Dictionary<number, GuildSignInTable>()\r\n\t\t\tif(this.GuildSignInTable) {\r\n\t\t\t\tfor(let v of this.GuildSignInTable) {\r\n\t\t\t\t\tthis.GuildSignInTableById.setValue(v.Id, v)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.HeadFramTableById = new Dictionary<number, HeadFramTable>()\r\n\t\t\tif(this.HeadFramTable) {\r\n\t\t\t\tfor(let v of this.HeadFramTable) {\r\n\t\t\t\t\tthis.HeadFramTableById.setValue(v.Id, v)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.HeadTableById = new Dictionary<number, HeadTable>()\r\n\t\t\tif(this.HeadTable) {\r\n\t\t\t\tfor(let v of this.HeadTable) {\r\n\t\t\t\t\tthis.HeadTableById.setValue(v.Id, v)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.HeroAlbumTableByHeroAptitude = new Dictionary<HeroAptitude, HeroAlbumTable>()\r\n\t\t\tif(this.HeroAlbumTable) {\r\n\t\t\t\tfor(let v of this.HeroAlbumTable) {\r\n\t\t\t\t\tthis.HeroAlbumTableByHeroAptitude.setValue(v.HeroAptitude, v)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.HeroAptitudeTableByHeroAptitude = new Dictionary<HeroAptitude, HeroAptitudeTable>()\r\n\t\t\tif(this.HeroAptitudeTable) {\r\n\t\t\t\tfor(let v of this.HeroAptitudeTable) {\r\n\t\t\t\t\tthis.HeroAptitudeTableByHeroAptitude.setValue(v.HeroAptitude, v)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.HeroAttrClientTableByType = new Dictionary<AttrType, HeroAttrClientTable>()\r\n\t\t\tif(this.HeroAttrClientTable) {\r\n\t\t\t\tfor(let v of this.HeroAttrClientTable) {\r\n\t\t\t\t\tthis.HeroAttrClientTableByType.setValue(v.Type, v)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.HeroAttrTableById = new Dictionary<number, HeroAttrTable>()\r\n\t\t\tif(this.HeroAttrTable) {\r\n\t\t\t\tfor(let v of this.HeroAttrTable) {\r\n\t\t\t\t\tthis.HeroAttrTableById.setValue(v.Id, v)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.HeroClassTableByHeroClass = new Dictionary<HeroClass, HeroClassTable>()\r\n\t\t\tif(this.HeroClassTable) {\r\n\t\t\t\tfor(let v of this.HeroClassTable) {\r\n\t\t\t\t\tthis.HeroClassTableByHeroClass.setValue(v.HeroClass, v)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.HeroCollectionTableById = new Dictionary<number, HeroCollectionTable>()\r\n\t\t\tif(this.HeroCollectionTable) {\r\n\t\t\t\tfor(let v of this.HeroCollectionTable) {\r\n\t\t\t\t\tthis.HeroCollectionTableById.setValue(v.Id, v)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.HeroCommonCostTableById = new Dictionary<number, HeroCommonCostTable>()\r\n\t\t\tif(this.HeroCommonCostTable) {\r\n\t\t\t\tfor(let v of this.HeroCommonCostTable) {\r\n\t\t\t\t\tthis.HeroCommonCostTableById.setValue(v.Id, v)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.HeroLevelResonanceTableById = new Dictionary<number, HeroLevelResonanceTable>()\r\n\t\t\tif(this.HeroLevelResonanceTable) {\r\n\t\t\t\tfor(let v of this.HeroLevelResonanceTable) {\r\n\t\t\t\t\tthis.HeroLevelResonanceTableById.setValue(v.Id, v)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.HeroLevelUpTableByLevel = new Dictionary<number, HeroLevelUpTable>()\r\n\t\t\tif(this.HeroLevelUpTable) {\r\n\t\t\t\tfor(let v of this.HeroLevelUpTable) {\r\n\t\t\t\t\tthis.HeroLevelUpTableByLevel.setValue(v.Level, v)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.HeroMasterTableById = new Dictionary<number, HeroMasterTable>()\r\n\t\t\tif(this.HeroMasterTable) {\r\n\t\t\t\tfor(let v of this.HeroMasterTable) {\r\n\t\t\t\t\tthis.HeroMasterTableById.setValue(v.Id, v)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.HeroPowerScoreById = new Dictionary<number, HeroPowerScore>()\r\n\t\t\tif(this.HeroPowerScore) {\r\n\t\t\t\tfor(let v of this.HeroPowerScore) {\r\n\t\t\t\t\tthis.HeroPowerScoreById.setValue(v.Id, v)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.HeroStarResonanceTableById = new Dictionary<number, HeroStarResonanceTable>()\r\n\t\t\tif(this.HeroStarResonanceTable) {\r\n\t\t\t\tfor(let v of this.HeroStarResonanceTable) {\r\n\t\t\t\t\tthis.HeroStarResonanceTableById.setValue(v.Id, v)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.HeroStarStepTableById = new Dictionary<number, HeroStarStepTable>()\r\n\t\t\tif(this.HeroStarStepTable) {\r\n\t\t\t\tfor(let v of this.HeroStarStepTable) {\r\n\t\t\t\t\tthis.HeroStarStepTableById.setValue(v.Id, v)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.HeroStarUpTableById = new Dictionary<number, HeroStarUpTable>()\r\n\t\t\tif(this.HeroStarUpTable) {\r\n\t\t\t\tfor(let v of this.HeroStarUpTable) {\r\n\t\t\t\t\tthis.HeroStarUpTableById.setValue(v.Id, v)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.HeroTableById = new Dictionary<number, HeroTable>()\r\n\t\t\tif(this.HeroTable) {\r\n\t\t\t\tfor(let v of this.HeroTable) {\r\n\t\t\t\t\tthis.HeroTableById.setValue(v.Id, v)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.ItemClientJumpTableByItemId = new Dictionary<number, ItemClientJumpTable>()\r\n\t\t\tif(this.ItemClientJumpTable) {\r\n\t\t\t\tfor(let v of this.ItemClientJumpTable) {\r\n\t\t\t\t\tthis.ItemClientJumpTableByItemId.setValue(v.ItemId, v)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.ItemQualityTableByQuality = new Dictionary<ItemQuality, ItemQualityTable>()\r\n\t\t\tif(this.ItemQualityTable) {\r\n\t\t\t\tfor(let v of this.ItemQualityTable) {\r\n\t\t\t\t\tthis.ItemQualityTableByQuality.setValue(v.Quality, v)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.ItemStarClientTableById = new Dictionary<number, ItemStarClientTable>()\r\n\t\t\tif(this.ItemStarClientTable) {\r\n\t\t\t\tfor(let v of this.ItemStarClientTable) {\r\n\t\t\t\t\tthis.ItemStarClientTableById.setValue(v.Id, v)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.ItemTableById = new Dictionary<number, ItemTable>()\r\n\t\t\tif(this.ItemTable) {\r\n\t\t\t\tfor(let v of this.ItemTable) {\r\n\t\t\t\t\tthis.ItemTableById.setValue(v.Id, v)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.LimitTimeItemTableByItemId = new Dictionary<number, LimitTimeItemTable>()\r\n\t\t\tif(this.LimitTimeItemTable) {\r\n\t\t\t\tfor(let v of this.LimitTimeItemTable) {\r\n\t\t\t\t\tthis.LimitTimeItemTableByItemId.setValue(v.ItemId, v)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.MainChapterGiftTableByMallId = new Dictionary<number, MainChapterGiftTable>()\r\n\t\t\tif(this.MainChapterGiftTable) {\r\n\t\t\t\tfor(let v of this.MainChapterGiftTable) {\r\n\t\t\t\t\tthis.MainChapterGiftTableByMallId.setValue(v.MallId, v)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.MainChapterTableById = new Dictionary<number, MainChapterTable>()\r\n\t\t\tif(this.MainChapterTable) {\r\n\t\t\t\tfor(let v of this.MainChapterTable) {\r\n\t\t\t\t\tthis.MainChapterTableById.setValue(v.Id, v)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.MallItemTabeById = new Dictionary<number, MallItemTabe>()\r\n\t\t\tif(this.MallItemTabe) {\r\n\t\t\t\tfor(let v of this.MallItemTabe) {\r\n\t\t\t\t\tthis.MallItemTabeById.setValue(v.Id, v)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.MallTableByMallId = new Dictionary<number, MallTable>()\r\n\t\t\tif(this.MallTable) {\r\n\t\t\t\tfor(let v of this.MallTable) {\r\n\t\t\t\t\tthis.MallTableByMallId.setValue(v.MallId, v)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.MapBlockById = new Dictionary<number, MapBlock>()\r\n\t\t\tif(this.MapBlock) {\r\n\t\t\t\tfor(let v of this.MapBlock) {\r\n\t\t\t\t\tthis.MapBlockById.setValue(v.Id, v)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.ModuleTableByModuleType = new Dictionary<Module, ModuleTable>()\r\n\t\t\tif(this.ModuleTable) {\r\n\t\t\t\tfor(let v of this.ModuleTable) {\r\n\t\t\t\t\tthis.ModuleTableByModuleType.setValue(v.ModuleType, v)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.MonsterTableById = new Dictionary<number, MonsterTable>()\r\n\t\t\tif(this.MonsterTable) {\r\n\t\t\t\tfor(let v of this.MonsterTable) {\r\n\t\t\t\t\tthis.MonsterTableById.setValue(v.Id, v)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.MonthlyPassTableByType = new Dictionary<PrivilegedType, MonthlyPassTable>()\r\n\t\t\tif(this.MonthlyPassTable) {\r\n\t\t\t\tfor(let v of this.MonthlyPassTable) {\r\n\t\t\t\t\tthis.MonthlyPassTableByType.setValue(v.Type, v)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.NewPlayerDailyGiftTableById = new Dictionary<number, NewPlayerDailyGiftTable>()\r\n\t\t\tif(this.NewPlayerDailyGiftTable) {\r\n\t\t\t\tfor(let v of this.NewPlayerDailyGiftTable) {\r\n\t\t\t\t\tthis.NewPlayerDailyGiftTableById.setValue(v.Id, v)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.NoticeTableById = new Dictionary<number, NoticeTable>()\r\n\t\t\tif(this.NoticeTable) {\r\n\t\t\t\tfor(let v of this.NoticeTable) {\r\n\t\t\t\t\tthis.NoticeTableById.setValue(v.Id, v)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.OpenFunctionTableByName = new Dictionary<OpenFunctionName, OpenFunctionTable>()\r\n\t\t\tif(this.OpenFunctionTable) {\r\n\t\t\t\tfor(let v of this.OpenFunctionTable) {\r\n\t\t\t\t\tthis.OpenFunctionTableByName.setValue(v.Name, v)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.PRBTableById = new Dictionary<number, PRBTable>()\r\n\t\t\tif(this.PRBTable) {\r\n\t\t\t\tfor(let v of this.PRBTable) {\r\n\t\t\t\t\tthis.PRBTableById.setValue(v.Id, v)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.PatrolTableByPveStageId = new Dictionary<number, PatrolTable>()\r\n\t\t\tif(this.PatrolTable) {\r\n\t\t\t\tfor(let v of this.PatrolTable) {\r\n\t\t\t\t\tthis.PatrolTableByPveStageId.setValue(v.PveStageId, v)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.PlayerLvTableByPlayerLv = new Dictionary<number, PlayerLvTable>()\r\n\t\t\tif(this.PlayerLvTable) {\r\n\t\t\t\tfor(let v of this.PlayerLvTable) {\r\n\t\t\t\t\tthis.PlayerLvTableByPlayerLv.setValue(v.PlayerLv, v)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.PopWindowMechanismByID = new Dictionary<number, PopWindowMechanism>()\r\n\t\t\tif(this.PopWindowMechanism) {\r\n\t\t\t\tfor(let v of this.PopWindowMechanism) {\r\n\t\t\t\t\tthis.PopWindowMechanismByID.setValue(v.ID, v)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.PvPStageTableByID = new Dictionary<number, PvPStageTable>()\r\n\t\t\tif(this.PvPStageTable) {\r\n\t\t\t\tfor(let v of this.PvPStageTable) {\r\n\t\t\t\t\tthis.PvPStageTableByID.setValue(v.ID, v)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.PveAddFeatherDropTableByCount = new Dictionary<number, PveAddFeatherDropTable>()\r\n\t\t\tif(this.PveAddFeatherDropTable) {\r\n\t\t\t\tfor(let v of this.PveAddFeatherDropTable) {\r\n\t\t\t\t\tthis.PveAddFeatherDropTableByCount.setValue(v.Count, v)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.PveClearStageTableByStageId = new Dictionary<number, PveClearStageTable>()\r\n\t\t\tif(this.PveClearStageTable) {\r\n\t\t\t\tfor(let v of this.PveClearStageTable) {\r\n\t\t\t\t\tthis.PveClearStageTableByStageId.setValue(v.StageId, v)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.PveStageBuffTableById = new Dictionary<number, PveStageBuffTable>()\r\n\t\t\tif(this.PveStageBuffTable) {\r\n\t\t\t\tfor(let v of this.PveStageBuffTable) {\r\n\t\t\t\t\tthis.PveStageBuffTableById.setValue(v.Id, v)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.PveStageDropTableByDropId = new Dictionary<number, PveStageDropTable>()\r\n\t\t\tif(this.PveStageDropTable) {\r\n\t\t\t\tfor(let v of this.PveStageDropTable) {\r\n\t\t\t\t\tthis.PveStageDropTableByDropId.setValue(v.DropId, v)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.PveStageTableByStageId = new Dictionary<number, PveStageTable>()\r\n\t\t\tif(this.PveStageTable) {\r\n\t\t\t\tfor(let v of this.PveStageTable) {\r\n\t\t\t\t\tthis.PveStageTableByStageId.setValue(v.StageId, v)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.PveSweepTableByStageId = new Dictionary<number, PveSweepTable>()\r\n\t\t\tif(this.PveSweepTable) {\r\n\t\t\t\tfor(let v of this.PveSweepTable) {\r\n\t\t\t\t\tthis.PveSweepTableByStageId.setValue(v.StageId, v)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.PveTimeDropTableByStageId = new Dictionary<number, PveTimeDropTable>()\r\n\t\t\tif(this.PveTimeDropTable) {\r\n\t\t\t\tfor(let v of this.PveTimeDropTable) {\r\n\t\t\t\t\tthis.PveTimeDropTableByStageId.setValue(v.StageId, v)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.QuestLogTableByLevel = new Dictionary<number, QuestLogTable>()\r\n\t\t\tif(this.QuestLogTable) {\r\n\t\t\t\tfor(let v of this.QuestLogTable) {\r\n\t\t\t\t\tthis.QuestLogTableByLevel.setValue(v.Level, v)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.RandomNameTableById = new Dictionary<number, RandomNameTable>()\r\n\t\t\tif(this.RandomNameTable) {\r\n\t\t\t\tfor(let v of this.RandomNameTable) {\r\n\t\t\t\t\tthis.RandomNameTableById.setValue(v.Id, v)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.RankCycleRewardTableByIndexId = new Dictionary<number, RankCycleRewardTable>()\r\n\t\t\tif(this.RankCycleRewardTable) {\r\n\t\t\t\tfor(let v of this.RankCycleRewardTable) {\r\n\t\t\t\t\tthis.RankCycleRewardTableByIndexId.setValue(v.IndexId, v)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.RankRewardTableById = new Dictionary<number, RankRewardTable>()\r\n\t\t\tif(this.RankRewardTable) {\r\n\t\t\t\tfor(let v of this.RankRewardTable) {\r\n\t\t\t\t\tthis.RankRewardTableById.setValue(v.Id, v)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.RechargeTableById = new Dictionary<number, RechargeTable>()\r\n\t\t\tif(this.RechargeTable) {\r\n\t\t\t\tfor(let v of this.RechargeTable) {\r\n\t\t\t\t\tthis.RechargeTableById.setValue(v.Id, v)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.RecommendTeamTableById = new Dictionary<number, RecommendTeamTable>()\r\n\t\t\tif(this.RecommendTeamTable) {\r\n\t\t\t\tfor(let v of this.RecommendTeamTable) {\r\n\t\t\t\t\tthis.RecommendTeamTableById.setValue(v.Id, v)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.RobotTableById = new Dictionary<number, RobotTable>()\r\n\t\t\tif(this.RobotTable) {\r\n\t\t\t\tfor(let v of this.RobotTable) {\r\n\t\t\t\t\tthis.RobotTableById.setValue(v.Id, v)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.RogueGroupTableById = new Dictionary<number, RogueGroupTable>()\r\n\t\t\tif(this.RogueGroupTable) {\r\n\t\t\t\tfor(let v of this.RogueGroupTable) {\r\n\t\t\t\t\tthis.RogueGroupTableById.setValue(v.Id, v)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.RogueTableById = new Dictionary<number, RogueTable>()\r\n\t\t\tif(this.RogueTable) {\r\n\t\t\t\tfor(let v of this.RogueTable) {\r\n\t\t\t\t\tthis.RogueTableById.setValue(v.Id, v)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.ScrollPaintingTableById = new Dictionary<number, ScrollPaintingTable>()\r\n\t\t\tif(this.ScrollPaintingTable) {\r\n\t\t\t\tfor(let v of this.ScrollPaintingTable) {\r\n\t\t\t\t\tthis.ScrollPaintingTableById.setValue(v.Id, v)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.ServerlistTableByID = new Dictionary<number, ServerlistTable>()\r\n\t\t\tif(this.ServerlistTable) {\r\n\t\t\t\tfor(let v of this.ServerlistTable) {\r\n\t\t\t\t\tthis.ServerlistTableByID.setValue(v.ID, v)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.SignInGiftTableByDay = new Dictionary<number, SignInGiftTable>()\r\n\t\t\tif(this.SignInGiftTable) {\r\n\t\t\t\tfor(let v of this.SignInGiftTable) {\r\n\t\t\t\t\tthis.SignInGiftTableByDay.setValue(v.Day, v)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.SkillGroupTableById = new Dictionary<number, SkillGroupTable>()\r\n\t\t\tif(this.SkillGroupTable) {\r\n\t\t\t\tfor(let v of this.SkillGroupTable) {\r\n\t\t\t\t\tthis.SkillGroupTableById.setValue(v.Id, v)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.SkillPowerTableById = new Dictionary<number, SkillPowerTable>()\r\n\t\t\tif(this.SkillPowerTable) {\r\n\t\t\t\tfor(let v of this.SkillPowerTable) {\r\n\t\t\t\t\tthis.SkillPowerTableById.setValue(v.Id, v)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.SkillSummonTableBySummonId = new Dictionary<number, SkillSummonTable>()\r\n\t\t\tif(this.SkillSummonTable) {\r\n\t\t\t\tfor(let v of this.SkillSummonTable) {\r\n\t\t\t\t\tthis.SkillSummonTableBySummonId.setValue(v.SummonId, v)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.SkillTableById = new Dictionary<number, SkillTable>()\r\n\t\t\tif(this.SkillTable) {\r\n\t\t\t\tfor(let v of this.SkillTable) {\r\n\t\t\t\t\tthis.SkillTableById.setValue(v.Id, v)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.SoundTableById = new Dictionary<number, SoundTable>()\r\n\t\t\tif(this.SoundTable) {\r\n\t\t\t\tfor(let v of this.SoundTable) {\r\n\t\t\t\t\tthis.SoundTableById.setValue(v.Id, v)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.TaskTableById = new Dictionary<number, TaskTable>()\r\n\t\t\tif(this.TaskTable) {\r\n\t\t\t\tfor(let v of this.TaskTable) {\r\n\t\t\t\t\tthis.TaskTableById.setValue(v.Id, v)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.TipsTableById = new Dictionary<number, TipsTable>()\r\n\t\t\tif(this.TipsTable) {\r\n\t\t\t\tfor(let v of this.TipsTable) {\r\n\t\t\t\t\tthis.TipsTableById.setValue(v.Id, v)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.TriggerTableById = new Dictionary<number, TriggerTable>()\r\n\t\t\tif(this.TriggerTable) {\r\n\t\t\t\tfor(let v of this.TriggerTable) {\r\n\t\t\t\t\tthis.TriggerTableById.setValue(v.Id, v)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.VipBonusTableByIndexId = new Dictionary<number, VipBonusTable>()\r\n\t\t\tif(this.VipBonusTable) {\r\n\t\t\t\tfor(let v of this.VipBonusTable) {\r\n\t\t\t\t\tthis.VipBonusTableByIndexId.setValue(v.IndexId, v)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.VipTableByVipLv = new Dictionary<number, VipTable>()\r\n\t\t\tif(this.VipTable) {\r\n\t\t\t\tfor(let v of this.VipTable) {\r\n\t\t\t\t\tthis.VipTableByVipLv.setValue(v.VipLv, v)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.VirtualItemByVirtualItemId = new Dictionary<number, VirtualItem>()\r\n\t\t\tif(this.VirtualItem) {\r\n\t\t\t\tfor(let v of this.VirtualItem) {\r\n\t\t\t\t\tthis.VirtualItemByVirtualItemId.setValue(v.VirtualItemId, v)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.VoidStageTableById = new Dictionary<number, VoidStageTable>()\r\n\t\t\tif(this.VoidStageTable) {\r\n\t\t\t\tfor(let v of this.VoidStageTable) {\r\n\t\t\t\t\tthis.VoidStageTableById.setValue(v.Id, v)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.WeeklyTaskBoxTableById = new Dictionary<number, WeeklyTaskBoxTable>()\r\n\t\t\tif(this.WeeklyTaskBoxTable) {\r\n\t\t\t\tfor(let v of this.WeeklyTaskBoxTable) {\r\n\t\t\t\t\tthis.WeeklyTaskBoxTableById.setValue(v.Id, v)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.WorldBossDamTableById = new Dictionary<number, WorldBossDamTable>()\r\n\t\t\tif(this.WorldBossDamTable) {\r\n\t\t\t\tfor(let v of this.WorldBossDamTable) {\r\n\t\t\t\t\tthis.WorldBossDamTableById.setValue(v.Id, v)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.WorldBossRewardTableById = new Dictionary<number, WorldBossRewardTable>()\r\n\t\t\tif(this.WorldBossRewardTable) {\r\n\t\t\t\tfor(let v of this.WorldBossRewardTable) {\r\n\t\t\t\t\tthis.WorldBossRewardTableById.setValue(v.Id, v)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// Used internally by dictionary\r\n\texport interface IDictionaryPair<K, V> {\r\n\t\tkey: K;\r\n\t\tvalue: V;\r\n\t}\r\n\t\r\n\texport class Dictionary<K, V> {\r\n\t\r\n\t\t/**\r\n\t\t * Object holding the key-value pairs.\r\n\t\t * @type {Object}\r\n\t\t * @private\r\n\t\t */\r\n\t\tprotected table: { [key: string]: IDictionaryPair<K, V> };\r\n\t\t//: [key: K] will not work since indices can only by strings in javascript and typescript enforces this.\r\n\t\r\n\t\t/**\r\n\t\t * Number of elements in the list.\r\n\t\t * @type {number}\r\n\t\t * @private\r\n\t\t */\r\n\t\tprotected nElements: number;\r\n\t\r\n\t\t/**\r\n\t\t * Function used to convert keys to strings.\r\n\t\t * @type {function(Object):string}\r\n\t\t * @protected\r\n\t\t */\r\n\t\tprotected toStr: (key: K) => string;\r\n\t\r\n\t\r\n\t\t/**\r\n\t\t * Creates an empty dictionary.\r\n\t\t * @class <p>Dictionaries map keys to values; each key can map to at most one value.\r\n\t\t * This implementation accepts any kind of objects as keys.</p>\r\n\t\t *\r\n\t\t * <p>If the keys are custom objects a function which converts keys to unique\r\n\t\t * strings must be provided. Example:</p>\r\n\t\t * <pre>\r\n\t\t * function petToString(pet) {\r\n\t\t *  return pet.name;\r\n\t\t * }\r\n\t\t * </pre>\r\n\t\t * @constructor\r\n\t\t * @param {function(Object):string=} toStrFunction optional function used\r\n\t\t * to convert keys to strings. If the keys aren't strings or if toString()\r\n\t\t * is not appropriate, a custom function which receives a key and returns a\r\n\t\t * unique string must be provided.\r\n\t\t */\r\n\t\tconstructor(toStrFunction?: (key: K) => string) {\r\n\t\t\tthis.table = {};\r\n\t\t\tthis.nElements = 0;\r\n\t\t\tthis.toStr = toStrFunction || defaultToString;\r\n\t\t}\r\n\t\r\n\t\r\n\t\t/**\r\n\t\t * Returns the value to which this dictionary maps the specified key.\r\n\t\t * Returns undefined if this dictionary contains no mapping for this key.\r\n\t\t * @param {Object} key key whose associated value is to be returned.\r\n\t\t * @return {*} the value to which this dictionary maps the specified key or\r\n\t\t * undefined if the map contains no mapping for this key.\r\n\t\t */\r\n\t\tgetValue(key: K): V | undefined {\r\n\t\t\tconst pair: IDictionaryPair<K, V> = this.table['$' + this.toStr(key)];\r\n\t\t\tif (isUndefined(pair)) {\r\n\t\t\t\treturn undefined;\r\n\t\t\t}\r\n\t\t\treturn pair.value;\r\n\t\t}\r\n\t\r\n\t\r\n\t\t/**\r\n\t\t * Associates the specified value with the specified key in this dictionary.\r\n\t\t * If the dictionary previously contained a mapping for this key, the old\r\n\t\t * value is replaced by the specified value.\r\n\t\t * @param {Object} key key with which the specified value is to be\r\n\t\t * associated.\r\n\t\t * @param {Object} value value to be associated with the specified key.\r\n\t\t * @return {*} previous value associated with the specified key, or undefined if\r\n\t\t * there was no mapping for the key or if the key/value are undefined.\r\n\t\t */\r\n\t\tsetValue(key: K, value: V): V | undefined {\r\n\t\r\n\t\t\tif (isUndefined(key) || isUndefined(value)) {\r\n\t\t\t\treturn undefined;\r\n\t\t\t}\r\n\t\r\n\t\t\tlet ret: V | undefined;\r\n\t\t\tconst k = '$' + this.toStr(key);\r\n\t\t\tconst previousElement: IDictionaryPair<K, V> = this.table[k];\r\n\t\t\tif (isUndefined(previousElement)) {\r\n\t\t\t\tthis.nElements++;\r\n\t\t\t\tret = undefined;\r\n\t\t\t} else {\r\n\t\t\t\tret = previousElement.value;\r\n\t\t\t}\r\n\t\t\tthis.table[k] = {\r\n\t\t\t\tkey: key,\r\n\t\t\t\tvalue: value\r\n\t\t\t};\r\n\t\t\treturn ret;\r\n\t\t}\r\n\t\r\n\t\t/**\r\n\t\t * Removes the mapping for this key from this dictionary if it is present.\r\n\t\t * @param {Object} key key whose mapping is to be removed from the\r\n\t\t * dictionary.\r\n\t\t * @return {*} previous value associated with specified key, or undefined if\r\n\t\t * there was no mapping for key.\r\n\t\t */\r\n\t\tremove(key: K): V | undefined {\r\n\t\t\tconst k = '$' + this.toStr(key);\r\n\t\t\tconst previousElement: IDictionaryPair<K, V> = this.table[k];\r\n\t\t\tif (!isUndefined(previousElement)) {\r\n\t\t\t\tdelete this.table[k];\r\n\t\t\t\tthis.nElements--;\r\n\t\t\t\treturn previousElement.value;\r\n\t\t\t}\r\n\t\t\treturn undefined;\r\n\t\t}\r\n\t\r\n\t\t/**\r\n\t\t * Returns an array containing all of the keys in this dictionary.\r\n\t\t * @return {Array} an array containing all of the keys in this dictionary.\r\n\t\t */\r\n\t\tkeys(): K[] {\r\n\t\t\tconst array: K[] = [];\r\n\t\t\tfor (const name in this.table) {\r\n\t\t\t\tif (has(this.table, name)) {\r\n\t\t\t\t\tconst pair: IDictionaryPair<K, V> = this.table[name];\r\n\t\t\t\t\tarray.push(pair.key);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn array;\r\n\t\t}\r\n\t\r\n\t\t/**\r\n\t\t * Returns an array containing all of the values in this dictionary.\r\n\t\t * @return {Array} an array containing all of the values in this dictionary.\r\n\t\t */\r\n\t\tvalues(): V[] {\r\n\t\t\tconst array: V[] = [];\r\n\t\t\tfor (const name in this.table) {\r\n\t\t\t\tif (has(this.table, name)) {\r\n\t\t\t\t\tconst pair: IDictionaryPair<K, V> = this.table[name];\r\n\t\t\t\t\tarray.push(pair.value);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn array;\r\n\t\t}\r\n\t\r\n\t\t/**\r\n\t\t * Executes the provided function once for each key-value pair\r\n\t\t * present in this dictionary.\r\n\t\t * @param {function(Object,Object):*} callback function to execute, it is\r\n\t\t * invoked with two arguments: key and value. To break the iteration you can\r\n\t\t * optionally return false.\r\n\t\t */\r\n\t\tforEach(callback: (key: K, value: V) => any): void {\r\n\t\t\tfor (const name in this.table) {\r\n\t\t\t\tif (has(this.table, name)) {\r\n\t\t\t\t\tconst pair: IDictionaryPair<K, V> = this.table[name];\r\n\t\t\t\t\tconst ret = callback(pair.key, pair.value);\r\n\t\t\t\t\tif (ret === false) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\t/**\r\n\t\t * Returns true if this dictionary contains a mapping for the specified key.\r\n\t\t * @param {Object} key key whose presence in this dictionary is to be\r\n\t\t * tested.\r\n\t\t * @return {boolean} true if this dictionary contains a mapping for the\r\n\t\t * specified key.\r\n\t\t */\r\n\t\tcontainsKey(key: K): boolean {\r\n\t\t\treturn !isUndefined(this.getValue(key));\r\n\t\t}\r\n\t\r\n\t\t/**\r\n\t\t * Removes all mappings from this dictionary.\r\n\t\t * @this {collections.Dictionary}\r\n\t\t */\r\n\t\tclear() {\r\n\t\t\tthis.table = {};\r\n\t\t\tthis.nElements = 0;\r\n\t\t}\r\n\t\r\n\t\t/**\r\n\t\t * Returns the number of keys in this dictionary.\r\n\t\t * @return {number} the number of key-value mappings in this dictionary.\r\n\t\t */\r\n\t\tsize(): number {\r\n\t\t\treturn this.nElements;\r\n\t\t}\r\n\t\r\n\t\t/**\r\n\t\t * Returns true if this dictionary contains no mappings.\r\n\t\t * @return {boolean} true if this dictionary contains no mappings.\r\n\t\t */\r\n\t\tisEmpty(): boolean {\r\n\t\t\treturn this.nElements <= 0;\r\n\t\t}\r\n\t\r\n\t\ttoString(): string {\r\n\t\t\tlet toret = '{';\r\n\t\t\tthis.forEach((k, v) => {\r\n\t\t\t\ttoret += \"\\n\\t\" + k.toString() + \" : \" + v.toString();\r\n\t\t\t});\r\n\t\t\treturn toret + '\\n}';\r\n\t\t}\r\n\t} // End of dictionary\r\n\r\n\tfunction defaultToString(item: any): string {\r\n\t\tif (item === null) {\r\n\t\t\treturn 'COLLECTION_NULL';\r\n\t\t} else if (isUndefined(item)) {\r\n\t\t\treturn 'COLLECTION_UNDEFINED';\r\n\t\t} else if (isString(item)) {\r\n\t\t\treturn '$s' + item;\r\n\t\t} else {\r\n\t\t\treturn '$o' + item.toString();\r\n\t\t}\r\n\t}\r\n\r\n\tconst _hasOwnProperty = Object.prototype.hasOwnProperty;\r\n\tconst has = function(obj: any, prop: any) {\r\n\t\treturn _hasOwnProperty.call(obj, prop);\r\n\t};\r\n\r\n\tfunction isUndefined(obj: any): obj is undefined {\r\n\t\treturn (typeof obj) === 'undefined';\r\n\t}\r\n\r\n\tfunction isString(obj: any): boolean {\r\n\t\treturn Object.prototype.toString.call(obj) === '[object String]';\r\n\t}\r\n\r\n\t//Polyfill\r\n    if (typeof Object.assign !== 'function') {\r\n        // Must be writable: true, enumerable: false, configurable: true\r\n\t\tObject.defineProperty(Object, \"assign\", {\r\n\t\t\tvalue: function assign(target, varArgs) { // .length of function is 2\r\n            \t'use strict';\r\n            \tif (target === null || target === undefined) {\r\n              \t\tthrow new TypeError('Cannot convert undefined or null to object');\r\n            \t}\r\n      \r\n            \tvar to = Object(target);\r\n      \r\n            \tfor (var index = 1; index < arguments.length; index++) {\r\n              \t\tvar nextSource = arguments[index];\r\n      \r\n              \t\tif (nextSource !== null && nextSource !== undefined) { \r\n                \t\tfor (var nextKey in nextSource) {\r\n                  \t\t\t// Avoid bugs when hasOwnProperty is shadowed\r\n                  \t\t\tif (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\r\n                    \t\t\tto[nextKey] = nextSource[nextKey];\r\n                  \t\t\t}\r\n\t\t\t\t\t\t}\r\n              \t\t}\r\n            \t}\r\n            \treturn to;\r\n\t\t\t},\r\n\t\t\twritable: true,\r\n\t\t\tconfigurable: true\r\n        });\r\n    }\r\n}\r\n"]}