{"version":3,"sources":["file:///C:/chickenStarClient/client/assets/scripts/logic/model/chat/ChatMessageInfo.ts"],"names":["_decorator","proto","tab","LangMgr","ccclass","property","ChatMessageInfo","ChatMessage","_systemContent","merge","item","key","systemContent","notice","table","getData","NoticeTableById","getValue","noticeId","param","texts","Texts","push","params","ItemTableById","Number","getLab","Name","getCombineString","WordKey"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;;AACAC,MAAAA,K,oBAAAA,K;;AACAC,MAAAA,G,iBAAAA,G;;AACAC,MAAAA,O,iBAAAA,O;;;;;;;;;OACH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBL,U;AAE9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;iCAGaM,e,WADZF,OAAO,CAAC,iBAAD,C,gBAAR,MACaE,eADb,SACqC;AAAA;AAAA,0BAAMC,WAD3C,CACuD;AAAA;AAAA;AAAA,eAC3CC,cAD2C,GACrB,EADqB;AAAA;;AAEnDC,QAAAA,KAAK,CAACC,IAAD,EAA0B;AAC3B,eAAK,IAAMC,GAAX,IAAkBD,IAAlB,EAAwB;AACpB,iBAAKC,GAAL,IAAYD,IAAI,CAACC,GAAD,CAAhB;AACH;AACJ;;AAEgB,YAAbC,aAAa,GAAE;AACf,cAAG,CAAC,KAAKJ,cAAN,IAAsB,KAAKK,MAA9B,EAAqC;AACjC,gBAAIC,KAAK,GAAC;AAAA;AAAA,4BAAIC,OAAJ,GAAcC,eAAd,CAA8BC,QAA9B,CAAuC,KAAKJ,MAAL,CAAYK,QAAnD,CAAV;;AACA,gBAAGJ,KAAH,EAAS;AACL,kBAAIK,KAAK,GAAC,EAAV;AACA,kBAAIC,KAAK,GAACN,KAAK,CAACO,KAAhB;;AACA,mBAAI,IAAIV,GAAR,IAAeS,KAAf,EAAqB;AACjB,wBAAOA,KAAK,CAACT,GAAD,CAAZ;AACI,uBAAK,YAAL;AACIQ,oBAAAA,KAAK,CAACG,IAAN,CAAW,KAAKT,MAAL,CAAYU,MAAZ,CAAmBZ,GAAnB,CAAX;AACJ;;AACA,uBAAK,UAAL;AACI,wBAAID,IAAI,GAAC;AAAA;AAAA,oCAAIK,OAAJ,GAAcS,aAAd,CAA4BP,QAA5B,CAAqCQ,MAAM,CAAC,KAAKZ,MAAL,CAAYU,MAAZ,CAAmBZ,GAAnB,CAAD,CAA3C,CAAT;;AACA,wBAAGD,IAAH,EAAQ;AACJS,sBAAAA,KAAK,CAACG,IAAN,CAAW;AAAA;AAAA,8CAAQI,MAAR,CAAehB,IAAI,CAACiB,IAApB,CAAX;AACH,qBAFD,MAEK;AACDR,sBAAAA,KAAK,CAACG,IAAN,CAAW,EAAX;AACH;;AAEL;;AACA;AACIH,oBAAAA,KAAK,CAACG,IAAN,CAAW,EAAX;AACA;AAfR;AAiBH,eArBI,CAsBL;;;AACA,mBAAKd,cAAL,GAAoB;AAAA;AAAA,sCAAQoB,gBAAR,CAAyBd,KAAK,CAACe,OAA/B,EAAuCV,KAAvC,CAApB;AACH;AAEJ;;AACD,iBAAO,KAAKX,cAAZ;AACH;;AAvCkD,O","sourcesContent":["import { _decorator, Component, Node } from 'cc';\r\nimport { proto } from 'client_protocol';\r\nimport { tab } from '../../../Table/table_gen';\r\nimport { LangMgr } from '../../mgr/LangMgr';\r\nconst { ccclass, property } = _decorator;\r\n\r\n/**\r\n * \r\n * ChatMessageInfo\r\n * zhudingchao\r\n * Thu Jun 13 2024 17:06:22 GMT+0800 (中国标准时间)\r\n * db://assets/scripts/logic/model/chat/ChatMessageInfo.ts\r\n *\r\n */\r\n\r\n@ccclass('ChatMessageInfo')\r\nexport class ChatMessageInfo extends proto.ChatMessage {\r\n    private _systemContent:string=\"\"\r\n    merge(item: proto.ChatMessage) {\r\n        for (const key in item) {\r\n            this[key] = item[key]\r\n        }\r\n    }\r\n\r\n    get systemContent(){\r\n        if(!this._systemContent&&this.notice){\r\n            let table=tab.getData().NoticeTableById.getValue(this.notice.noticeId);\r\n            if(table){\r\n                let param=[];\r\n                let texts=table.Texts;\r\n                for(let key in texts){\r\n                    switch(texts[key]){\r\n                        case \"playerName\":\r\n                            param.push(this.notice.params[key]);\r\n                        break;\r\n                        case \"itemName\":\r\n                            let item=tab.getData().ItemTableById.getValue(Number(this.notice.params[key]))\r\n                            if(item){\r\n                                param.push(LangMgr.getLab(item.Name));\r\n                            }else{\r\n                                param.push(\"\");\r\n                            }\r\n                           \r\n                        break;\r\n                        default:\r\n                            param.push(\"\");\r\n                            break;\r\n                    }\r\n                }\r\n                // let noticeId=this.notice.noticeId;\r\n                this._systemContent=LangMgr.getCombineString(table.WordKey,param);\r\n            }\r\n            \r\n        }\r\n        return this._systemContent;\r\n    }\r\n}"]}