{"version":3,"sources":["file:///C:/chickenStarClient/client/assets/scripts/logic/model/prestige/PrestigeControl.ts"],"names":["_decorator","AbsControl","EventMgr","proto","Net","PrestigeData","RedMgr","RedDotType","ccclass","property","PrestigeControl","ins","_instance","register","onMsg","Ptl","GetQuestLogsRsp","on_s2c_GetQuestLogsRsp","ReceiveQuestLogRewardRsp","on_s2c_ReceiveQuestLogRsp","UpQuestLogLevelRsp","on_s2c_UpQuestLogLevelRsp","TaskChangePush","on_s2c_TaskChangePush","registerCalculateFb","Prestige","on_getRedPoint","request","requestQuestLogs","msg","Msg_GetQuestLogsReq","Send","GetQuestLogsReq","requestUpQuestLogLevel","Msg_UpQuestLogLevelReq","UpQuestLogLevelReq","requestReceiveQuestLog","ids","Msg_ReceiveQuestLogRewardReq","taskIds","ReceiveQuestLogRewardReq","initData","refreshEvent","error","code","CommonErrorCode","Succeed","receiveQuestLog","level","updateTask","getIsRedPoint"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node } from 'cc';\r\nimport { AbsControl } from '../../../framework/base/IAbs';\r\nimport { EventMgr } from '../../mgr/EventMgr';\r\nimport { proto } from 'client_protocol';\r\nimport { Net } from '../../net/Net';\r\nimport { PrestigeData } from './PrestigeData';\r\nimport { RedMgr } from '../../mgr/RedMgr';\r\nimport { RedDotType } from '../../red/RedDotType';\r\nconst { ccclass, property } = _decorator;\r\n\r\n/**\r\n * \r\n * PrestigeControl\r\n * zhudingchao\r\n * Thu Jun 06 2024 10:57:07 GMT+0800 (中国标准时间)\r\n * db://assets/scripts/logic/model/prestige/PrestigeControl.ts\r\n *\r\n */\r\n\r\n@ccclass('PrestigeControl')\r\nexport class PrestigeControl extends AbsControl {\r\n\r\n    private static _instance: PrestigeControl;\r\n    public static get ins() {\r\n        if (null == this._instance) {\r\n            this._instance = new PrestigeControl();\r\n        }\r\n        return this._instance;\r\n    }\r\n    register(): void {\r\n        EventMgr.onMsg(proto.Ptl.GetQuestLogsRsp, this.on_s2c_GetQuestLogsRsp, this);\r\n        EventMgr.onMsg(proto.Ptl.ReceiveQuestLogRewardRsp, this.on_s2c_ReceiveQuestLogRsp, this);\r\n        EventMgr.onMsg(proto.Ptl.UpQuestLogLevelRsp, this.on_s2c_UpQuestLogLevelRsp, this);\r\n        EventMgr.onMsg(proto.Ptl.TaskChangePush, this.on_s2c_TaskChangePush, this);\r\n\r\n        RedMgr.ins.registerCalculateFb(RedDotType.Prestige, this.on_getRedPoint, this);\r\n\r\n    }\r\n    request() {\r\n        this.requestQuestLogs();\r\n    }\r\n\r\n    requestQuestLogs() {\r\n        let msg = new proto.Msg_GetQuestLogsReq();\r\n        Net.Send(proto.Ptl.GetQuestLogsReq, msg)\r\n    }\r\n    requestUpQuestLogLevel() {\r\n        let msg = new proto.Msg_UpQuestLogLevelReq();\r\n        Net.Send(proto.Ptl.UpQuestLogLevelReq, msg)\r\n    }\r\n    requestReceiveQuestLog(ids: number[]) {\r\n        let msg = new proto.Msg_ReceiveQuestLogRewardReq();\r\n        msg.taskIds = ids;\r\n        Net.Send(proto.Ptl.ReceiveQuestLogRewardReq, msg)\r\n    }\r\n    on_s2c_GetQuestLogsRsp(msg: proto.Msg_GetQuestLogsRsp) {\r\n        PrestigeData.ins.initData(msg);\r\n        RedMgr.refreshEvent(RedDotType.Prestige);\r\n    }\r\n    on_s2c_ReceiveQuestLogRsp(msg: proto.Msg_ReceiveQuestLogRewardRsp) {\r\n        if (!msg.error || msg.error.code == proto.CommonErrorCode.Succeed) {\r\n            PrestigeData.ins.receiveQuestLog(msg);\r\n            RedMgr.refreshEvent(RedDotType.Prestige);\r\n        }\r\n    }\r\n    on_s2c_UpQuestLogLevelRsp(msg: proto.Msg_UpQuestLogLevelRsp) {\r\n        if (!msg.error || msg.error.code == proto.CommonErrorCode.Succeed) {\r\n            PrestigeData.ins.level=msg.level;\r\n            RedMgr.refreshEvent(RedDotType.Prestige);\r\n        }\r\n    }\r\n    on_s2c_TaskChangePush(msg: proto.Msg_TaskChangePush) {\r\n        PrestigeData.ins.updateTask(msg);\r\n        RedMgr.refreshEvent(RedDotType.Prestige);\r\n        // TaskData.ins.updateTask(msg);\r\n    }\r\n    on_getRedPoint(){\r\n        return PrestigeData.ins.getIsRedPoint();\r\n    }\r\n}"]}