{"version":3,"sources":["file:///C:/chickenStarClient/client/assets/scripts/logic/fight/pvp/PvpDrawLine.ts"],"names":["_decorator","Color","Graphics","Layers","Node","ccclass","property","PvpDrawLine","pool","graphics","parent","setParent","create","grap","pop","nn","layer","Enum","DEFAULT","addComponent","addChild","clear","node","angle","put","push","destory","recycle","length","index","show","points","strokeColor","RED","lineWidth","moveTo","lineTo","stroke"],"mappings":";;;;;;;;;;AACSA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,K,OAAAA,K;AAA6DC,MAAAA,Q,OAAAA,Q;AAAkCC,MAAAA,M,OAAAA,M;AAAQC,MAAAA,I,OAAAA,I;;;;;;;;;OAGtH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBN,U;;6BAKjBO,W,WADZF,OAAO,CAAC,aAAD,C,gBAAR,MACaE,WADb,CACyB;AAAA;AAAA,eACrBC,IADqB,GACF,EADE;AAAA,eAErBC,QAFqB,GAEE,EAFF;AAAA,eAGrBC,MAHqB,GAGN,IAHM;AAAA;;AAKrBC,QAAAA,SAAS,CAACD,MAAD,EAAe;AACpB,eAAKA,MAAL,GAAcA,MAAd;AACH;;AACDE,QAAAA,MAAM,GAAG;AACL,cAAIC,IAAI,GAAG,KAAKL,IAAL,CAAUM,GAAV,EAAX;;AACA,cAAID,IAAI,IAAI,IAAZ,EAAkB;AACd,gBAAIE,EAAE,GAAG,IAAIX,IAAJ,CAAS,aAAT,CAAT;AACAW,YAAAA,EAAE,CAACC,KAAH,GAAWb,MAAM,CAACc,IAAP,CAAYC,OAAvB;AACAL,YAAAA,IAAI,GAAGE,EAAE,CAACI,YAAH,CAAgBjB,QAAhB,CAAP;AACA,iBAAKQ,MAAL,CAAYU,QAAZ,CAAqBL,EAArB;AACH;;AACDF,UAAAA,IAAI,CAACQ,KAAL;AACAR,UAAAA,IAAI,CAACS,IAAL,CAAUC,KAAV,GAAkB,CAAlB;AACA,iBAAOV,IAAP;AACH;;AAEDW,QAAAA,GAAG,CAACX,IAAD,EAAiB;AAChBA,UAAAA,IAAI,CAACQ,KAAL;AACA,eAAKb,IAAL,CAAUiB,IAAV,CAAeZ,IAAf;AACH;;AAEDa,QAAAA,OAAO,GAAG;AACN,eAAKC,OAAL;AACA,eAAKnB,IAAL,CAAUoB,MAAV,GAAmB,CAAnB;AACH;;AAEDD,QAAAA,OAAO,GAAG;AACN,eAAK,IAAIE,KAAK,GAAG,KAAKpB,QAAL,CAAcmB,MAAd,GAAuB,CAAxC,EAA2CC,KAAK,IAAI,CAApD,EAAuDA,KAAK,EAA5D,EAAgE;AAC5D,iBAAKL,GAAL,CAAS,KAAKf,QAAL,CAAcoB,KAAd,CAAT;AACH;;AACD,eAAKpB,QAAL,CAAcmB,MAAd,GAAuB,CAAvB;AACH;;AAEDE,QAAAA,IAAI,CAACC,MAAD,EAAmB;AACnB,cAAIA,MAAM,CAACH,MAAP,IAAiB,CAArB,EAAwB;AACpB;AACH;;AACD,cAAIf,IAAI,GAAG,KAAKD,MAAL,EAAX;AAEAC,UAAAA,IAAI,CAACmB,WAAL,GAAmB/B,KAAK,CAACgC,GAAzB;AACApB,UAAAA,IAAI,CAACqB,SAAL,GAAiB,CAAjB;;AACA,eAAK,IAAIL,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGE,MAAM,CAACH,MAAnC,EAA2CC,KAAK,IAAI,CAApD,EAAuD;AACnD,gBAAIE,MAAM,CAACH,MAAP,GAAgB,CAAhB,IAAqBC,KAAzB,EAAgC;AAC5B;AACH;;AACDhB,YAAAA,IAAI,CAACsB,MAAL,CAAYJ,MAAM,CAACF,KAAD,CAAlB,EAA2BE,MAAM,CAACF,KAAK,GAAG,CAAT,CAAjC;AACAhB,YAAAA,IAAI,CAACuB,MAAL,CAAYL,MAAM,CAACF,KAAK,GAAG,CAAT,CAAlB,EAA+BE,MAAM,CAACF,KAAK,GAAG,CAAT,CAArC;AACH,WAdkB,CAgBnB;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;;;AAGAhB,UAAAA,IAAI,CAACwB,MAAL;AACA,eAAK5B,QAAL,CAAcgB,IAAd,CAAmBZ,IAAnB;AACH;;AArEoB,O","sourcesContent":["\nimport { _decorator, Color, Component, director, EditBox, EventTouch, Font, game, Graphics, instantiate, js, Label, Layers, Node, Prefab, ProgressBar, Size, Sprite, SpriteFrame, Toggle, Tween, tween, UIOpacity, UITransform, v2, v3, Vec3, view } from 'cc';\nimport { FightRootControl } from '../FightRootControl';\nimport { util } from 'protobufjs';\nconst { ccclass, property } = _decorator;\n\n\n\n@ccclass('PvpDrawLine')\nexport class PvpDrawLine {\n    pool: Graphics[] = [];\n    graphics: Graphics[] = []\n    parent: Node = null;\n\n    setParent(parent: Node) {\n        this.parent = parent\n    }\n    create() {\n        let grap = this.pool.pop()\n        if (grap == null) {\n            let nn = new Node(\"PvpDrawLine\");\n            nn.layer = Layers.Enum.DEFAULT\n            grap = nn.addComponent(Graphics)\n            this.parent.addChild(nn)\n        }\n        grap.clear()\n        grap.node.angle = 0\n        return grap\n    }\n\n    put(grap: Graphics) {\n        grap.clear()\n        this.pool.push(grap)\n    }\n\n    destory() {\n        this.recycle()\n        this.pool.length = 0\n    }\n\n    recycle() {\n        for (let index = this.graphics.length - 1; index >= 0; index--) {\n            this.put(this.graphics[index])\n        }\n        this.graphics.length = 0\n    }\n\n    show(points: number[]) {\n        if (points.length == 0) {\n            return\n        }\n        let grap = this.create()\n\n        grap.strokeColor = Color.RED\n        grap.lineWidth = 3\n        for (let index = 0; index < points.length; index += 2) {\n            if (points.length - 2 == index) {\n                break\n            }\n            grap.moveTo(points[index], points[index + 1])\n            grap.lineTo(points[index + 2], points[index + 3])\n        }\n\n        // grap.moveTo(0,0)\n        // grap.lineTo(0,100)\n\n        // grap.moveTo(0,100)\n        // grap.lineTo(100,100)\n\n        // grap.moveTo(100,100)\n        // grap.lineTo(100,0)\n\n        // grap.moveTo(100,0)\n        // grap.lineTo(0,0)\n\n\n        grap.stroke()\n        this.graphics.push(grap)\n    }\n\n}\n\n"]}