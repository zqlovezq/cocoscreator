{"version":3,"sources":["file:///C:/chickenStarClient/client/assets/scripts/logic/model/jianghu/climbingTower/ClimbingTowerMainView.ts"],"names":["_decorator","Label","Node","Sprite","ViewScreen","ClimbingTowerTowerItem","ClimbingTowerBuffInfoItem","EventMgr","proto","GameplayControl","tab","GameplayViewDataMgr","LangMgr","ItemInfo","ItemPoolMgr","RoleData","ShowTips","UIMgr","ViewName","Net","GameUtil","Func","ccclass","property","ClimbingTowerMainView","currStateId","isMax","register","onMsg","Ptl","GetClimbTowerInfoRsp","on_s2c_GetClimbTowerInfoRsp","QuickFinishClimbTowerStageRsp","on_s2c_QuickFinishClimbTowerStageRsp","onShow","ins","requestGetClimbTowerInfo","showGuild","getItem","node_guild","active","setItem","hideGuild","initView","msg","climbTowerInfoMsg","clearedStageIds","length","table","getData","ClimbTowerTableByStageId","getValue","layersLab","string","getCombineString","Floor","buffs","SkillShow","key","buffTab","PveStageBuffTableById","buffInfoItems","buffIcon","setTexture","ShowIcon","buffInfoLab","getLab","Show","rewardNode","removeAllChildren","pveTable","PveStageTableByStageId","StageId","RewardItemId","itemInfo","initItemData","RewardItemNum","createRewadItem","recFight","RecommendFight","setLastTimer","node","total","GetKeyValue_ConfigTable","ClimbTowerDefeatCount","last","defeatTimes","getChildByName","getComponent","CrushedValue","recommendNode","convertNumber","jingyingBtnNode","saoDangBtnNode","tioazhanBtnNode","currFight","powerScore","isRolling","grayscale","initTowerItem","initStateRewad","ids","state","indexOf","climbingTowerTowerItem","tables","PveClearStageTable","currStateTab","StageType","PveStageType","PveStageType_ClimbTower","stateRewadNode","ClearRewardItemIds","ClearRewardItemNum","level","stageRewardLab2","stageRewardLab1","onClickRewardBtn","show","viewName","ClimbingTowerTowerEveryDayRewardPop","onClickStateRewardBtn","ClimbingTowerRewardPop","onClickChallenge","Msg_StartStageReq","stageId","Send","StartStageReq","onClickRolling","requestQuickFinishClimbTowerStage","error","code","CommonErrorCode","Succeed","rewards","CongratulationPop","data","onClickTips","event","CommonBlackTipsPop","target","worldPosition","onClikhideView","onClose","GameplayView"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAA2CC,MAAAA,K,OAAAA,K;AAAOC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,M,OAAAA,M;;AACxDC,MAAAA,U,iBAAAA,U;;AACAC,MAAAA,sB,iBAAAA,sB;;AACAC,MAAAA,yB,iBAAAA,yB;;AACAC,MAAAA,Q,iBAAAA,Q;;AACAC,MAAAA,K,oBAAAA,K;;AACAC,MAAAA,e,iBAAAA,e;;AACAC,MAAAA,G,iBAAAA,G;;AACAC,MAAAA,mB,iBAAAA,mB;;AACAC,MAAAA,O,iBAAAA,O;;AACAC,MAAAA,Q,kBAAAA,Q;;AACAC,MAAAA,W,kBAAAA,W;;AACAC,MAAAA,Q,kBAAAA,Q;;AACAC,MAAAA,Q,kBAAAA,Q;AAAUC,MAAAA,K,kBAAAA,K;;AACVC,MAAAA,Q,kBAAAA,Q;;AACAC,MAAAA,G,kBAAAA,G;;AACAC,MAAAA,Q,kBAAAA,Q;;AACAC,MAAAA,I,kBAAAA,I;;;;;;;;;OACH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBvB,U;AAE9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;uCAGawB,qB,WADZF,OAAO,CAAC,uBAAD,C,UAEHC,QAAQ,CAACtB,KAAD,C,UAERsB,QAAQ,CAACtB,KAAD,C,UAERsB,QAAQ,CAAC,CAACrB,IAAD,CAAD,C,UAERqB,QAAQ,CAACrB,IAAD,C,UAERqB,QAAQ,CAACrB,IAAD,C,UAERqB,QAAQ,CAACrB,IAAD,C,UAERqB,QAAQ,CAACrB,IAAD,C,UAERqB,QAAQ,CAACtB,KAAD,C,WAERsB,QAAQ,CAACtB,KAAD,C,WAERsB,QAAQ,CAAC;AAAA;AAAA,2DAAD,C,WAERA,QAAQ,CAAC;AAAA;AAAA,iEAAD,C,WAGRA,QAAQ,CAACrB,IAAD,C,WAERqB,QAAQ,CAACrB,IAAD,C,2BA3Bb,MACasB,qBADb;AAAA;AAAA,oCACsD;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA,eA4B1CC,WA5B0C;AAAA,eA6B1CC,KA7B0C,GA6B5B,KA7B4B;AAAA;;AA8BlDC,QAAAA,QAAQ,GAAS;AACb;AAAA;AAAA,oCAASC,KAAT,CAAe;AAAA;AAAA,8BAAMC,GAAN,CAAUC,oBAAzB,EAA+C,KAAKC,2BAApD,EAAiF,IAAjF;AAGA;AAAA;AAAA,oCAASH,KAAT,CAAe;AAAA;AAAA,8BAAMC,GAAN,CAAUG,6BAAzB,EAAwD,KAAKC,oCAA7D,EAAmG,IAAnG;AACH;;AACDC,QAAAA,MAAM,GAAS;AACX;AAAA;AAAA,kDAAgBC,GAAhB,CAAoBC,wBAApB;AACA,cAAMC,SAAS,GAAG;AAAA;AAAA,4BAAKC,OAAL,CAAa,mBAAb,CAAlB;;AACA,cAAG,CAACD,SAAJ,EAAc;AACV,iBAAKE,UAAL,CAAgBC,MAAhB,GAAyB,IAAzB;AACA;AAAA;AAAA,8BAAKC,OAAL,CAAa,mBAAb,EAAiC,GAAjC;AACH,WAHD,MAGK;AACD,iBAAKF,UAAL,CAAgBC,MAAhB,GAAyB,KAAzB;AACH;AACJ;;AACDE,QAAAA,SAAS,GAAE;AACP,eAAKH,UAAL,CAAgBC,MAAhB,GAAyB,KAAzB;AACH;;AACDG,QAAAA,QAAQ,GAAG;AACP,cAAIC,GAAG,GAAG;AAAA;AAAA,0DAAoBT,GAApB,CAAwBU,iBAAlC;AACA,eAAKpB,WAAL,GAAmBmB,GAAG,CAACE,eAAJ,CAAoBC,MAApB,IAA8B,CAA9B,GAAkC,KAAlC,GAA0CH,GAAG,CAACE,eAAJ,CAAoBF,GAAG,CAACE,eAAJ,CAAoBC,MAApB,GAA6B,CAAjD,IAAsD,CAAnH;AACA,cAAIC,KAAK,GAAG;AAAA;AAAA,0BAAIC,OAAJ,GAAcC,wBAAd,CAAuCC,QAAvC,CAAgD,KAAK1B,WAArD,CAAZ;AACA,cAAIC,KAAa,GAAC,KAAlB;;AACA,cAAG,CAACsB,KAAJ,EAAU;AACN,iBAAKvB,WAAL,GAAkB,KAAKA,WAAL,GAAiB,CAAnC;AACAuB,YAAAA,KAAK,GAAG;AAAA;AAAA,4BAAIC,OAAJ,GAAcC,wBAAd,CAAuCC,QAAvC,CAAgD,KAAK1B,WAArD,CAAR;AACAC,YAAAA,KAAK,GAAC,IAAN;AAEH;;AACD,eAAKA,KAAL,GAAWA,KAAX;;AACA,cAAIsB,KAAJ,EAAW;AACP,iBAAKI,SAAL,CAAeC,MAAf,GAAwB;AAAA;AAAA,oCAAQC,gBAAR,CAAyB,oBAAzB,EAA+C,CAACN,KAAK,CAACO,KAAP,CAA/C,CAAxB;AACA,gBAAIC,KAAK,GAAGR,KAAK,CAACS,SAAlB;;AACA,iBAAK,IAAIC,GAAT,IAAgBF,KAAhB,EAAuB;AACnB,kBAAIG,OAAO,GAAG;AAAA;AAAA,8BAAIV,OAAJ,GAAcW,qBAAd,CAAoCT,QAApC,CAA6CK,KAAK,CAACE,GAAD,CAAlD,CAAd;;AACA,kBAAIC,OAAJ,EAAa;AACT,qBAAKE,aAAL,CAAmBH,GAAnB,EAAwBI,QAAxB,CAAiCC,UAAjC,CAA4CJ,OAAO,CAACK,QAApD;AACA,qBAAKH,aAAL,CAAmBH,GAAnB,EAAwBO,WAAxB,CAAoCZ,MAApC,GAA6C;AAAA;AAAA,wCAAQa,MAAR,CAAeP,OAAO,CAACQ,IAAvB,CAA7C;AACH;AAEJ;;AACD,iBAAKC,UAAL,CAAgBC,iBAAhB;AACA,gBAAIC,QAAQ,GAAE;AAAA;AAAA,4BAAIrB,OAAJ,GAAcsB,sBAAd,CAAqCpB,QAArC,CAA8CH,KAAK,CAACwB,OAApD,CAAd;;AACA,iBAAK,IAAId,IAAT,IAAgBY,QAAQ,CAACG,YAAzB,EAAuC;AACnC,kBAAIC,QAAQ,GAAG;AAAA;AAAA,yCAAf;AACAA,cAAAA,QAAQ,CAACC,YAAT,CAAsBL,QAAQ,CAACG,YAAT,CAAsBf,IAAtB,CAAtB,EAAkDY,QAAQ,CAACM,aAAT,CAAuBlB,IAAvB,CAAlD;AACA;AAAA;AAAA,8CAAYvB,GAAZ,CAAgB0C,eAAhB,CAAgCH,QAAhC,EAA0C,KAAKN,UAA/C;AACH;;AACD,gBAAIU,QAAQ,GAAER,QAAQ,CAACS,cAAvB;;AACA,gBAAIC,YAAY,GAAIC,IAAD,IAAgB;AAC/B,kBAAIC,KAAK,GAAG;AAAA;AAAA,8BAAIjC,OAAJ,GAAckC,uBAAd,GAAwCC,qBAApD;AACA,kBAAIC,IAAI,GAAGH,KAAK,GAAGtC,GAAG,CAAC0C,WAAvB;AACAL,cAAAA,IAAI,CAACM,cAAL,CAAoB,UAApB,EAAgCA,cAAhC,CAA+C,WAA/C,EAA4DC,YAA5D,CAAyEvF,KAAzE,EAAgFoD,MAAhF,GAAyFgC,IAAI,GAAG,GAAP,GAAaH,KAAtG;AACH,aAJD;;AAKA,gBAAI,CAAClC,KAAK,CAACyC,YAAX,EAAyB;AACrB;AACA,mBAAKC,aAAL,CAAmB,CAAnB,EAAsBlD,MAAtB,GAA+B,KAA/B;AACA,mBAAKkD,aAAL,CAAmB,CAAnB,EAAsBlD,MAAtB,GAA+B,KAA/B;AACA,mBAAKkD,aAAL,CAAmB,CAAnB,EAAsBlD,MAAtB,GAA+B,IAA/B;AACA,mBAAKkD,aAAL,CAAmB,CAAnB,EAAsBH,cAAtB,CAAqC,WAArC,EAAkDC,YAAlD,CAA+DvF,KAA/D,EAAsEoD,MAAtE,GAA+E;AAAA;AAAA,wCAASsC,aAAT,CAAuBb,QAAvB,IAAmC,EAAlH;AACA,mBAAKc,eAAL,CAAqBpD,MAArB,GAA8B,IAA9B;AACA,mBAAKqD,cAAL,CAAoBrD,MAApB,GAA6B,KAA7B;AACA,mBAAKsD,eAAL,CAAqBtD,MAArB,GAA8B,KAA9B,CARqB,CASrB;AACH,aAVD,MAUO;AAEH,kBAAIuD,SAAS,GAAG;AAAA;AAAA,wCAAS5D,GAAT,CAAa6D,UAA7B;AACA,kBAAIC,SAAS,GAAGF,SAAS,IAAKjB,QAAQ,GAAG9B,KAAK,CAACyC,YAAjB,GAAgC,KAA9D;;AACA,kBAAIQ,SAAJ,EAAe;AACX;AACA,qBAAKP,aAAL,CAAmB,CAAnB,EAAsBlD,MAAtB,GAA+B,IAA/B;AACA,qBAAKkD,aAAL,CAAmB,CAAnB,EAAsBlD,MAAtB,GAA+B,KAA/B;AACA,qBAAKkD,aAAL,CAAmB,CAAnB,EAAsBlD,MAAtB,GAA+B,KAA/B;AACA,qBAAKkD,aAAL,CAAmB,CAAnB,EAAsBH,cAAtB,CAAqC,WAArC,EAAkDC,YAAlD,CAA+DvF,KAA/D,EAAsEoD,MAAtE,GAA+E;AAAA;AAAA,0CAASsC,aAAT,CAAuBb,QAAvB,IAAmC,EAAlH;AACA,qBAAKe,cAAL,CAAoBrD,MAApB,GAA6B,IAA7B;AACA,qBAAKoD,eAAL,CAAqBpD,MAArB,GAA8B,KAA9B;AACA,qBAAKsD,eAAL,CAAqBtD,MAArB,GAA8B,KAA9B,CARW,CASX;AACH,eAVD,MAUO;AACH;AACA,qBAAKkD,aAAL,CAAmB,CAAnB,EAAsBlD,MAAtB,GAA+B,KAA/B;AACA,qBAAKkD,aAAL,CAAmB,CAAnB,EAAsBlD,MAAtB,GAA+B,IAA/B;AACA,qBAAKkD,aAAL,CAAmB,CAAnB,EAAsBlD,MAAtB,GAA+B,KAA/B;AACA,qBAAKkD,aAAL,CAAmB,CAAnB,EAAsBH,cAAtB,CAAqC,WAArC,EAAkDC,YAAlD,CAA+DvF,KAA/D,EAAsEoD,MAAtE,GAA+E;AAAA;AAAA,0CAASsC,aAAT,CAAuBb,QAAvB,IAAmC,EAAlH;AACA,qBAAKgB,eAAL,CAAqBtD,MAArB,GAA8B,IAA9B;AACA,qBAAKoD,eAAL,CAAqBpD,MAArB,GAA8B,KAA9B;AACA,qBAAKqD,cAAL,CAAoBrD,MAApB,GAA6B,KAA7B,CARG,CASH;AAEH;AAEJ;;AACD,gBAAG,KAAKd,KAAR,EAAc;AAET,mBAAKkE,eAAL,CAAqBJ,YAArB,CAAkCrF,MAAlC,EAA0C+F,SAA1C,GAAoD,IAApD;AAAyD;AACzD,mBAAKL,cAAL,CAAoBL,YAApB,CAAiCrF,MAAjC,EAAyC+F,SAAzC,GAAmD,IAAnD;AAAwD;AACxD,mBAAKJ,eAAL,CAAqBN,YAArB,CAAkCrF,MAAlC,EAA0C+F,SAA1C,GAAoD,IAApD;AAAyD;AAG7D;AAGJ,WAxED,MAwEO,CACH;AACH;;AACD,eAAKC,aAAL;AACA,eAAKC,cAAL;AAEH;;AACDD,QAAAA,aAAa,GAAG;AACZ,cAAIvD,GAAG,GAAG;AAAA;AAAA,0DAAoBT,GAApB,CAAwBU,iBAAlC;AACA,cAAIpB,WAAW,GAAE,KAAKA,WAAtB;AACA,cAAI4E,GAAG,GAAG,EAAV;;AACA,cAAIzD,GAAG,CAACE,eAAJ,CAAoBC,MAApB,IAA8B,CAAlC,EAAqC;AACjCsD,YAAAA,GAAG,GAAG,CAAC5E,WAAD,EAAcA,WAAW,GAAG,CAA5B,EAA+BA,WAAW,GAAG,CAA7C,CAAN;AACH,WAFD,MAEO;AACH4E,YAAAA,GAAG,GAAG,CAAC5E,WAAW,GAAG,CAAf,EAAkBA,WAAlB,EAA+BA,WAAW,GAAG,CAA7C,CAAN;AACH;;AACD,eAAK,IAAIiC,GAAT,IAAgB2C,GAAhB,EAAqB;AACjB,gBAAIC,KAAK,GAAG,CAAZ;;AACA,gBAAID,GAAG,CAAC3C,GAAD,CAAH,IAAYjC,WAAhB,EAA6B;AACzB6E,cAAAA,KAAK,GAAG,CAAR;AACH,aAFD,MAEO;AACH,kBAAI1D,GAAG,CAACE,eAAJ,CAAoByD,OAApB,CAA4BF,GAAG,CAAC3C,GAAD,CAA/B,KAAyC,CAA7C,EAAgD;AAC5C4C,gBAAAA,KAAK,GAAG,CAAR;AACH;AACJ;;AACD,gBAAItD,KAAK,GAAG;AAAA;AAAA,4BAAIC,OAAJ,GAAcC,wBAAd,CAAuCC,QAAvC,CAAgDkD,GAAG,CAAC3C,GAAD,CAAnD,CAAZ;AACA,iBAAK8C,sBAAL,CAA4B9C,GAA5B,EAAiCf,QAAjC,CAA0C2D,KAA1C,EAAiDtD,KAAjD;AACH;AACJ;;AACDoD,QAAAA,cAAc,GAAE;AAEZ,cAAIK,MAAM,GAAG;AAAA;AAAA,0BAAIxD,OAAJ,GAAcyD,kBAA3B;AACA,cAAIC,YAAmC,GAAC,IAAxC;;AACA,eAAK,IAAIjD,GAAT,IAAgB+C,MAAhB,EAAwB;AACpB,gBAAIA,MAAM,CAAC/C,GAAD,CAAN,CAAYkD,SAAZ,IAAyB;AAAA;AAAA,4BAAIC,YAAJ,CAAiBC,uBAA9C,EAAuE;AACnE,kBAAG,KAAKpF,KAAR,EAAc;AACViF,gBAAAA,YAAY,GAACF,MAAM,CAAC/C,GAAD,CAAnB;AACH,eAFD,MAEK;AACD,oBAAG,KAAKjC,WAAL,IAAkBgF,MAAM,CAAC/C,GAAD,CAAN,CAAYc,OAAjC,EAAyC;AACrCmC,kBAAAA,YAAY,GAACF,MAAM,CAAC/C,GAAD,CAAnB;AACA;AACH;AACJ;AAEJ;AACJ;;AAED,eAAKqD,cAAL,CAAoB1C,iBAApB;;AACA,cAAGsC,YAAH,EAAgB;AACZ,gBAAIjC,QAAQ,GAAC;AAAA;AAAA,uCAAb;AACAA,YAAAA,QAAQ,CAACC,YAAT,CAAsBgC,YAAY,CAACK,kBAAb,CAAgC,CAAhC,CAAtB,EAAyDL,YAAY,CAACM,kBAAb,CAAgC,CAAhC,CAAzD;AACA;AAAA;AAAA,4CAAY9E,GAAZ,CAAgB0C,eAAhB,CAAgCH,QAAhC,EAAyC,KAAKqC,cAA9C;AACA,gBAAIG,KAAK,GAACP,YAAY,CAACnC,OAAb,GAAqB,KAAK/C,WAApC;;AACA,gBAAGyF,KAAK,IAAE,CAAV,EAAY;AACR,mBAAKC,eAAL,CAAqBlC,IAArB,CAA0BzC,MAA1B,GAAiC,IAAjC;AACA,mBAAK4E,eAAL,CAAqBnC,IAArB,CAA0BzC,MAA1B,GAAiC,KAAjC;AACH,aAHD,MAGK;AACD,mBAAK2E,eAAL,CAAqBlC,IAArB,CAA0BzC,MAA1B,GAAiC,KAAjC;AACA,mBAAK4E,eAAL,CAAqBnC,IAArB,CAA0BzC,MAA1B,GAAiC,IAAjC;;AACA,kBAAG,KAAKd,KAAR,EAAc;AACV,qBAAK0F,eAAL,CAAqB/D,MAArB,GAA4B;AAAA;AAAA,wCAAQC,gBAAR,CAAyB,oBAAzB,EAA8C,CAAC,CAAD,CAA9C,CAA5B;AACH,eAFD,MAEK;AACD,qBAAK8D,eAAL,CAAqB/D,MAArB,GAA4B;AAAA;AAAA,wCAAQC,gBAAR,CAAyB,oBAAzB,EAA8C,CAAC,CAAC4D,KAAK,GAAC,CAAP,IAAU,EAAX,CAA9C,CAA5B;AACH;AAEJ;AACJ,WAlBD,MAkBK,CACD;AACH;AACJ;;AACDG,QAAAA,gBAAgB,GAAG;AACf;AAAA;AAAA,8BAAMlF,GAAN,CAAUmF,IAAV,CAAe;AAACC,YAAAA,QAAQ,EAAC;AAAA;AAAA,sCAASC;AAAnB,WAAf;AACH;;AACDC,QAAAA,qBAAqB,GAAG;AACpB;AAAA;AAAA,8BAAMtF,GAAN,CAAUmF,IAAV,CAAe;AAACC,YAAAA,QAAQ,EAAC;AAAA;AAAA,sCAASG;AAAnB,WAAf;AACH;AACD;;;AACAC,QAAAA,gBAAgB,GAAG;AACf,cAAG,CAAC,KAAKjG,KAAT,EAAe;AACX,gBAAIwD,KAAK,GAAG;AAAA;AAAA,4BAAIjC,OAAJ,GAAckC,uBAAd,GAAwCC,qBAApD;AACA,gBAAIC,IAAI,GAAGH,KAAK,GAAG;AAAA;AAAA,4DAAoB/C,GAApB,CAAwBU,iBAAxB,CAA0CyC,WAA7D;;AACA,gBAAGD,IAAI,GAAC,CAAR,EAAU;AACN,kBAAIrC,KAAK,GAAG;AAAA;AAAA,8BAAIC,OAAJ,GAAcC,wBAAd,CAAuCC,QAAvC,CAAgD,KAAK1B,WAArD,CAAZ;AACA,kBAAImB,GAAG,GAAG,IAAI;AAAA;AAAA,kCAAMgF,iBAAV,EAAV;AACAhF,cAAAA,GAAG,CAACiF,OAAJ,GAAe7E,KAAK,CAACwB,OAArB;AACA;AAAA;AAAA,8BAAIsD,IAAJ,CAAS;AAAA;AAAA,kCAAMjG,GAAN,CAAUkG,aAAnB,EAAkCnF,GAAlC;AACH,aALD,MAKK;AACD;AACA;AAAA;AAAA,wCAAS;AAAA;AAAA,sCAAQsB,MAAR,CAAe,mBAAf,CAAT;AACH;AACJ;AAGJ;AACD;;;AACA8D,QAAAA,cAAc,GAAG;AACb,cAAG,CAAC,KAAKtG,KAAT,EAAe;AACX;AAAA;AAAA,oDAAgBS,GAAhB,CAAoB8F,iCAApB,CAAsD,KAAKxG,WAA3D;AACH;AAEJ;;AACDM,QAAAA,2BAA2B,CAACa,GAAD,EAAsC;AAC7D,eAAKD,QAAL;AACH,SA5OiD,CA6OlD;AACA;AAEA;AACA;;;AAEAV,QAAAA,oCAAoC,CAACW,GAAD,EAA+C;AAC/E,cAAI,CAACA,GAAG,CAACsF,KAAL,IAActF,GAAG,CAACsF,KAAJ,CAAUC,IAAV,IAAkB;AAAA;AAAA,8BAAMC,eAAN,CAAsBC,OAA1D,EAAmE;AAC/D,iBAAK1F,QAAL;;AACA,gBAAIC,GAAG,CAAC0F,OAAJ,IAAe1F,GAAG,CAAC0F,OAAJ,CAAYvF,MAAZ,GAAqB,CAAxC,EAA2C;AACvC;AAAA;AAAA,kCAAMZ,GAAN,CAAUmF,IAAV,CAAe;AAAEC,gBAAAA,QAAQ,EAAE;AAAA;AAAA,0CAASgB,iBAArB;AAAwCC,gBAAAA,IAAI,EAAE5F,GAAG,CAAC0F;AAAlD,eAAf;AACH;AACJ;AACJ;;AACDG,QAAAA,WAAW,CAACC,KAAD,EAAkB;AACzB;AAAA;AAAA,8BAAMvG,GAAN,CAAUmF,IAAV,CAAe;AAAEC,YAAAA,QAAQ,EAAE;AAAA;AAAA,sCAASoB,kBAArB;AAAwCH,YAAAA,IAAI,EAAC;AAAC,wBAAS,CAAC,CAAX;AAAa,0BAAWE,KAAK,CAACE,MAAN,CAAaC,aAArC;AAAmD,8BAAe;AAAlE;AAA7C,WAAf;AACH;;AACDC,QAAAA,cAAc,GAAG;AACb,eAAKC,OAAL;AACA;AAAA;AAAA,8BAAM5G,GAAN,CAAUmF,IAAV,CAAe;AAAEC,YAAAA,QAAQ,EAAE;AAAA;AAAA,sCAASyB;AAArB,WAAf;AACH;;AAjQiD,O;;;;;iBAEjC,I;;;;;;;iBAEE,I;;;;;;;iBAEK,E;;;;;;;iBAEL,I;;;;;;;iBAEI,I;;;;;;;iBAEC,I;;;;;;;iBAEA,I;;;;;;;iBAEC,I;;;;;;;iBAEA,I;;;;;;;iBAE0B,E;;;;;;;iBAEN,E;;;;;;;iBAGzB,I;;;;;;;iBAEF,I","sourcesContent":["import { _decorator, Button, Component, EventTouch, Label, Node, Sprite } from 'cc';\r\nimport { ViewScreen } from '../../../../framework/base/ViewScreen';\r\nimport { ClimbingTowerTowerItem } from './ClimbingTowerTowerItem';\r\nimport { ClimbingTowerBuffInfoItem } from './ClimbingTowerBuffInfoItem';\r\nimport { EventMgr } from '../../../mgr/EventMgr';\r\nimport { proto } from 'client_protocol';\r\nimport { GameplayControl } from '../GameplayControl';\r\nimport { tab } from '../../../../Table/table_gen';\r\nimport { GameplayViewDataMgr } from '../GameplayViewDataMgr';\r\nimport { LangMgr } from '../../../mgr/LangMgr';\r\nimport { ItemInfo } from '../../item/ItemInfo';\r\nimport { ItemPoolMgr } from '../../item/ItemPoolMgr';\r\nimport { RoleData } from '../../role/RoleData';\r\nimport { ShowTips, UIMgr } from '../../../mgr/UIMgr';\r\nimport { ViewName } from '../../../define/ViewDefine';\r\nimport { Net } from '../../../net/Net';\r\nimport { GameUtil } from '../../../utils/GameUtil';\r\nimport { Func } from '../../../utils/Func';\r\nconst { ccclass, property } = _decorator;\r\n\r\n/**\r\n * \r\n * ClimbingTowerMainView\r\n * zhudingchao\r\n * Thu Jul 11 2024 14:26:32 GMT+0800 (中国标准时间)\r\n * db://assets/scripts/logic/model/jianghu/climbingTower/ClimbingTowerMainView.ts\r\n *\r\n */\r\n\r\n@ccclass('ClimbingTowerMainView')\r\nexport class ClimbingTowerMainView extends ViewScreen {\r\n    @property(Label)\r\n    nameLab: Label = null;\r\n    @property(Label)\r\n    layersLab: Label = null;\r\n    @property([Node])\r\n    recommendNode: Node[] = [];\r\n    @property(Node)\r\n    rewardNode: Node = null;\r\n    @property(Node)\r\n    saoDangBtnNode: Node = null;\r\n    @property(Node)\r\n    tioazhanBtnNode: Node = null;\r\n    @property(Node)\r\n    jingyingBtnNode: Node = null;\r\n    @property(Label)\r\n    stageRewardLab1: Label = null;\r\n    @property(Label)\r\n    stageRewardLab2: Label = null;\r\n    @property([ClimbingTowerTowerItem])\r\n    climbingTowerTowerItem: ClimbingTowerTowerItem[] = [];\r\n    @property([ClimbingTowerBuffInfoItem])\r\n    buffInfoItems: ClimbingTowerBuffInfoItem[] = [];\r\n\r\n    @property(Node)\r\n    stateRewadNode:Node=null;\r\n    @property(Node)\r\n    node_guild:Node = null;\r\n    private currStateId: number;\r\n    private isMax:boolean=false;\r\n    register(): void {\r\n        EventMgr.onMsg(proto.Ptl.GetClimbTowerInfoRsp, this.on_s2c_GetClimbTowerInfoRsp, this);\r\n      \r\n     \r\n        EventMgr.onMsg(proto.Ptl.QuickFinishClimbTowerStageRsp, this.on_s2c_QuickFinishClimbTowerStageRsp, this);\r\n    }\r\n    onShow(): void {\r\n        GameplayControl.ins.requestGetClimbTowerInfo();\r\n        const showGuild = Func.getItem(\"openClimbingTower\");\r\n        if(!showGuild){\r\n            this.node_guild.active = true;\r\n            Func.setItem(\"openClimbingTower\",\"1\");\r\n        }else{\r\n            this.node_guild.active = false;\r\n        }\r\n    }\r\n    hideGuild(){\r\n        this.node_guild.active = false;\r\n    }\r\n    initView() {\r\n        let msg = GameplayViewDataMgr.ins.climbTowerInfoMsg;\r\n        this.currStateId = msg.clearedStageIds.length == 0 ? 30101 : msg.clearedStageIds[msg.clearedStageIds.length - 1] + 1;\r\n        let table = tab.getData().ClimbTowerTableByStageId.getValue(this.currStateId );\r\n        let isMax:boolean=false;\r\n        if(!table){\r\n            this.currStateId= this.currStateId-1;\r\n            table = tab.getData().ClimbTowerTableByStageId.getValue(this.currStateId );\r\n            isMax=true;\r\n            \r\n        }\r\n        this.isMax=isMax;\r\n        if (table) {\r\n            this.layersLab.string = LangMgr.getCombineString(\"ui_climbingtower_2\", [table.Floor])\r\n            let buffs = table.SkillShow;\r\n            for (let key in buffs) {\r\n                let buffTab = tab.getData().PveStageBuffTableById.getValue(buffs[key]);\r\n                if (buffTab) {\r\n                    this.buffInfoItems[key].buffIcon.setTexture(buffTab.ShowIcon);\r\n                    this.buffInfoItems[key].buffInfoLab.string = LangMgr.getLab(buffTab.Show)\r\n                }\r\n\r\n            }\r\n            this.rewardNode.removeAllChildren();\r\n            let pveTable= tab.getData().PveStageTableByStageId.getValue(table.StageId);\r\n            for (let key in pveTable.RewardItemId) {\r\n                let itemInfo = new ItemInfo();\r\n                itemInfo.initItemData(pveTable.RewardItemId[key], pveTable.RewardItemNum[key]);\r\n                ItemPoolMgr.ins.createRewadItem(itemInfo, this.rewardNode);\r\n            }\r\n            let recFight =pveTable.RecommendFight;\r\n            let setLastTimer = (node: Node) => {\r\n                let total = tab.getData().GetKeyValue_ConfigTable().ClimbTowerDefeatCount;\r\n                let last = total - msg.defeatTimes;\r\n                node.getChildByName(\"num_node\").getChildByName(\"num_label\").getComponent(Label).string = last + \"/\" + total;\r\n            }\r\n            if (!table.CrushedValue) {\r\n                //精英挑战\r\n                this.recommendNode[0].active = false;\r\n                this.recommendNode[1].active = false;\r\n                this.recommendNode[2].active = true;\r\n                this.recommendNode[2].getChildByName(\"cenum_txt\").getComponent(Label).string = GameUtil.convertNumber(recFight) + \"\";\r\n                this.jingyingBtnNode.active = true;\r\n                this.saoDangBtnNode.active = false;\r\n                this.tioazhanBtnNode.active = false;\r\n                // setLastTimer(this.jingyingBtnNode);\r\n            } else {\r\n\r\n                let currFight = RoleData.ins.powerScore;\r\n                let isRolling = currFight >= (recFight * table.CrushedValue / 10000);\r\n                if (isRolling) {\r\n                    //碾压\r\n                    this.recommendNode[0].active = true;\r\n                    this.recommendNode[1].active = false;\r\n                    this.recommendNode[2].active = false;\r\n                    this.recommendNode[0].getChildByName(\"cenum_txt\").getComponent(Label).string = GameUtil.convertNumber(recFight) + \"\";\r\n                    this.saoDangBtnNode.active = true;\r\n                    this.jingyingBtnNode.active = false;\r\n                    this.tioazhanBtnNode.active = false;\r\n                    // setLastTimer(this.saoDangBtnNode);\r\n                } else {\r\n                    //挑战\r\n                    this.recommendNode[0].active = false;\r\n                    this.recommendNode[1].active = true;\r\n                    this.recommendNode[2].active = false;\r\n                    this.recommendNode[1].getChildByName(\"cenum_txt\").getComponent(Label).string = GameUtil.convertNumber(recFight) + \"\";\r\n                    this.tioazhanBtnNode.active = true;\r\n                    this.jingyingBtnNode.active = false;\r\n                    this.saoDangBtnNode.active = false;\r\n                    // setLastTimer(this.tioazhanBtnNode);\r\n\r\n                }\r\n\r\n            }\r\n            if(this.isMax){\r\n               \r\n                 this.jingyingBtnNode.getComponent(Sprite).grayscale=true;;\r\n                 this.saoDangBtnNode.getComponent(Sprite).grayscale=true;;\r\n                 this.tioazhanBtnNode.getComponent(Sprite).grayscale=true;;\r\n                \r\n                \r\n            }\r\n\r\n\r\n        } else {\r\n            //已通关\r\n        }\r\n        this.initTowerItem();\r\n        this.initStateRewad();\r\n\r\n    }\r\n    initTowerItem() {\r\n        let msg = GameplayViewDataMgr.ins.climbTowerInfoMsg;\r\n        let currStateId =this.currStateId ;\r\n        let ids = [];\r\n        if (msg.clearedStageIds.length == 0) {\r\n            ids = [currStateId, currStateId + 1, currStateId + 2];\r\n        } else {\r\n            ids = [currStateId - 1, currStateId, currStateId + 1];\r\n        }\r\n        for (let key in ids) {\r\n            let state = 2;\r\n            if (ids[key] == currStateId) {\r\n                state = 1;\r\n            } else {\r\n                if (msg.clearedStageIds.indexOf(ids[key]) >= 0) {\r\n                    state = 0;\r\n                }\r\n            }\r\n            let table = tab.getData().ClimbTowerTableByStageId.getValue(ids[key]);\r\n            this.climbingTowerTowerItem[key].initView(state, table)\r\n        }\r\n    }\r\n    initStateRewad(){\r\n    \r\n        let tables = tab.getData().PveClearStageTable;\r\n        let currStateTab:tab.PveClearStageTable=null;\r\n        for (let key in tables) {\r\n            if (tables[key].StageType == tab.PveStageType.PveStageType_ClimbTower) {\r\n                if(this.isMax){\r\n                    currStateTab=tables[key];\r\n                }else{\r\n                    if(this.currStateId<=tables[key].StageId){\r\n                        currStateTab=tables[key];\r\n                        break;\r\n                    }\r\n                }\r\n                   \r\n            }\r\n        }\r\n      \r\n        this.stateRewadNode.removeAllChildren();\r\n        if(currStateTab){\r\n            let itemInfo=new ItemInfo();\r\n            itemInfo.initItemData(currStateTab.ClearRewardItemIds[0],currStateTab.ClearRewardItemNum[0]);\r\n            ItemPoolMgr.ins.createRewadItem(itemInfo,this.stateRewadNode);\r\n            let level=currStateTab.StageId-this.currStateId;\r\n            if(level==0){\r\n                this.stageRewardLab2.node.active=true;\r\n                this.stageRewardLab1.node.active=false;\r\n            }else{\r\n                this.stageRewardLab2.node.active=false;\r\n                this.stageRewardLab1.node.active=true;\r\n                if(this.isMax){\r\n                    this.stageRewardLab1.string=LangMgr.getCombineString(\"ui_climbingtower_1\",[0]);\r\n                }else{\r\n                    this.stageRewardLab1.string=LangMgr.getCombineString(\"ui_climbingtower_1\",[(level+1)*10]);\r\n                }\r\n              \r\n            }\r\n        }else{\r\n            //满级\r\n        }\r\n    }\r\n    onClickRewardBtn() {\r\n        UIMgr.ins.show({viewName:ViewName.ClimbingTowerTowerEveryDayRewardPop});\r\n    }\r\n    onClickStateRewardBtn() {\r\n        UIMgr.ins.show({viewName:ViewName.ClimbingTowerRewardPop});\r\n    }\r\n    /**点击挑战 */\r\n    onClickChallenge() {\r\n        if(!this.isMax){\r\n            let total = tab.getData().GetKeyValue_ConfigTable().ClimbTowerDefeatCount;\r\n            let last = total - GameplayViewDataMgr.ins.climbTowerInfoMsg.defeatTimes;\r\n            if(last>0){\r\n                let table = tab.getData().ClimbTowerTableByStageId.getValue(this.currStateId);\r\n                let msg = new proto.Msg_StartStageReq();\r\n                msg.stageId =  table.StageId;\r\n                Net.Send(proto.Ptl.StartStageReq, msg)\r\n            }else{\r\n                //ShowTips(\"次数不足\")\r\n                ShowTips(LangMgr.getLab(\"Tips_timeshortage\"))\r\n            }\r\n        }\r\n      \r\n      \r\n    }\r\n    /**点击碾压 */\r\n    onClickRolling() {\r\n        if(!this.isMax){\r\n            GameplayControl.ins.requestQuickFinishClimbTowerStage(this.currStateId )\r\n        }\r\n       \r\n    }\r\n    on_s2c_GetClimbTowerInfoRsp(msg: proto.Msg_GetClimbTowerInfoRsp) {\r\n        this.initView();\r\n    }\r\n    // on_s2c_ReceiveClimbTowerDailyRewardsRsp(msg: proto.Msg_ReceiveClimbTowerDailyRewardsRsp) {\r\n    //     if (!msg.error || msg.error.code == proto.CommonErrorCode.Succeed) {\r\n\r\n    //     }\r\n    // }\r\n   \r\n    on_s2c_QuickFinishClimbTowerStageRsp(msg: proto.Msg_QuickFinishClimbTowerStageRsp) {\r\n        if (!msg.error || msg.error.code == proto.CommonErrorCode.Succeed) {\r\n            this.initView();\r\n            if (msg.rewards && msg.rewards.length > 0) {\r\n                UIMgr.ins.show({ viewName: ViewName.CongratulationPop, data: msg.rewards })\r\n            }\r\n        }\r\n    }\r\n    onClickTips(event:EventTouch){\r\n        UIMgr.ins.show({ viewName: ViewName.CommonBlackTipsPop,data:{\"scaleX\":-1,\"worldPos\":event.target.worldPosition,\"WordTableKey\":\"Tips_help_ClimbingTowerMainView\"}});\r\n    }\r\n    onClikhideView() {\r\n        this.onClose();\r\n        UIMgr.ins.show({ viewName: ViewName.GameplayView })\r\n    }\r\n}"]}