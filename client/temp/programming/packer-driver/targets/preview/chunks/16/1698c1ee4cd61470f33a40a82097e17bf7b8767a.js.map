{"version":3,"sources":["file:///C:/chickenStarClient/client/assets/scripts/logic/model/common/CommonTipsPop.ts"],"names":["_decorator","js","RichText","Toggle","ViewPop","LangMgr","UIMgr","Func","ccclass","property","CommonTipsPopCloseType","CommonTipsPop","_callFunc","_param","create","tipsKey","callFunc","param","ins","show","viewName","pop","getViewScr","setData","register","console","log","getLab","indexOf","formatStr","info_txt","string","gacha","toggle_today","node","parent","active","recordDismissTime","onClickCancel","_call","close","cancel","onClickConfirm","confirm","currentDate","Date","dismissTime","toDateString","isChecked","setItem","onClose"],"mappings":"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","sourcesContent":["import { _decorator, Component, EventTouch, js, Label, Node, RichText, Toggle, UITransform } from 'cc';\nimport { ViewPop } from '../../../framework/base/ViewPop';\nimport { LangMgr } from '../../mgr/LangMgr';\nimport { UIMgr } from '../../mgr/UIMgr';\nimport { Func } from '../../utils/Func';\nconst { ccclass, property } = _decorator;\n\n/** 关闭类型 */\nexport enum CommonTipsPopCloseType {\n    cancel = 0,\n    confirm = 1,\n}\n\n/** 通用确认弹窗 */\n@ccclass('CommonTipsPop')\nexport class CommonTipsPop extends ViewPop {\n    @property(Toggle)\n    toggle_today:Toggle = null;\n    @property(Toggle)\n    toggle_forever:Toggle = null\n    protected _callFunc: Function = null;\n    private _param:any = null;\n    /**\n     * 打开通用弹窗\n     * @param tipsKey 描述文字\n     * @param callFunc 回调\n     * @param param 可选参数\n     */\n    static async create(tipsKey: string, callFunc?: Function, param?: any) {\n        await UIMgr.ins.show({ viewName: \"CommonTipsPop\" })\n        let pop = UIMgr.ins.getViewScr(\"CommonTipsPop\") as CommonTipsPop;\n        if (pop) {\n            pop.setData(tipsKey, callFunc, param)\n        }\n    }\n\n    @property(RichText)\n    info_txt: RichText = null;\n\n    register() {\n\n    }\n\n    setData(tipsKey: string, callFunc?: Function, param?: any) {\n        this._callFunc = callFunc;\n        console.log(tipsKey)\n        tipsKey = LangMgr.getLab(tipsKey)\n        if (tipsKey.indexOf(\"<color=\") == -1){\n            tipsKey = js.formatStr(\"<color=#0000>%s</color>\",tipsKey)\n        }\n\n        this.info_txt.string = tipsKey\n\n        if(param&&param.gacha){\n            this._param = param;\n            this.toggle_today.node.parent.active = true;\n            this.recordDismissTime();\n        }\n    }\n\n    onClickCancel() {\n        let _call =  this._callFunc\n        this.close()\n        _call && _call(CommonTipsPopCloseType.cancel)\n    }\n\n    onClickConfirm() {\n        let _call =  this._callFunc\n        this.close()\n        _call && _call(CommonTipsPopCloseType.confirm)\n\n        if(this._param&&this._param.gacha){\n            const currentDate = new Date();\n            const dismissTime = currentDate.toDateString();\n            if(this.toggle_today.isChecked){\n                Func.setItem(\"dismissTime\"+this._param.gacha,dismissTime)\n            }else{\n                Func.setItem(\"dismissTime\"+this._param.gacha,\"\")\n            }\n        }\n    }\n    onClose(): void {\n        this.onClickCancel()\n    }\n    // 在弹窗中用户选贼不在提示时,记录当前时间\n    recordDismissTime(){\n        // const currentDate = new Date();\n        // const dismissTime = currentDate.toDateString();\n        // if(this.toggle_today.isChecked){\n        //     Func.setItem(\"dismissTime\"+this._param.gacha,dismissTime)\n        // }else{\n        //     Func.setItem(\"dismissTime\"+this._param.gacha,\"\")\n        // }\n    }\n\n}"]}