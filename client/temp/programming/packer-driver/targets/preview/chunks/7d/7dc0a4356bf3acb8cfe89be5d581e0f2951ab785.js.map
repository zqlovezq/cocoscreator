{"version":3,"sources":["file:///C:/chickenStarClient/client/assets/scripts/logic/fight/base/skill/Skill.ts"],"names":["_decorator","tab","Random","SkillTrigger","ccclass","property","Math_RATIO","Skill","configId","configTab","triggers","originalSkill","_bulletTab","bulletTab","getData","BulletTableById","getValue","Bullet","setConfigId","id","SkillTableById","length","isHasTrigger","index","Trigger","element","push","get","isNormalAttack","SkillType","SkillType_NormalAttack","isMovesAttack","SkillType_MovesAttack","isTrigger","type","isType","isRunningShotSuccess","addRate","rate","RunningShot","isSuccess","isHasBuff","AddBuff"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;;AACAC,MAAAA,G,iBAAAA,G;;AACAC,MAAAA,M,iBAAAA,M;;AACAC,MAAAA,Y,iBAAAA,Y;;;;;;;;;OAEH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBL,U;AACxBM,MAAAA,U,GAAa,K;;uBAGNC,K,WADZH,OAAO,CAAC,OAAD,C,gBAAR,MACaG,KADb,CACmB;AAAA;AAAA,eACfC,QADe;AAAA,eAEfC,SAFe;AAAA,eAKfC,QALe,GAKY,EALZ;AAAA,eAOfC,aAPe;AAAA,eASPC,UATO;AAAA;;AAWF,YAATC,SAAS,GAAG;AACZ,cAAI,KAAKD,UAAL,IAAmB,IAAvB,EAA6B;AACzB,iBAAKA,UAAL,GAAkB;AAAA;AAAA,4BAAIE,OAAJ,GAAcC,eAAd,CAA8BC,QAA9B,CAAuC,KAAKP,SAAL,CAAeQ,MAAtD,CAAlB;AACH;;AACD,iBAAO,KAAKL,UAAZ;AACH;;AAEDM,QAAAA,WAAW,CAACC,EAAD,EAAa;AACpB,eAAKX,QAAL,GAAgBW,EAAhB;AACA,eAAKV,SAAL,GAAiB;AAAA;AAAA,0BAAIK,OAAJ,GAAcM,cAAd,CAA6BJ,QAA7B,CAAsCG,EAAtC,CAAjB;AACA,eAAKT,QAAL,CAAcW,MAAd,GAAuB,CAAvB;;AACA,cAAI,KAAKC,YAAL,EAAJ,EAAyB;AACrB,iBAAK,IAAIC,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAG,KAAKd,SAAL,CAAee,OAAf,CAAuBH,MAAnD,EAA2DE,KAAK,EAAhE,EAAoE;AAChE,kBAAME,OAAO,GAAG,KAAKhB,SAAL,CAAee,OAAf,CAAuBD,KAAvB,CAAhB;AACA,mBAAKb,QAAL,CAAcgB,IAAd,CAAmB;AAAA;AAAA,gDAAaC,GAAb,CAAiBF,OAAjB,CAAnB;AACH;AACJ;AACJ;AAED;;;AACAG,QAAAA,cAAc,GAAG;AACb,iBAAO,KAAKnB,SAAL,CAAeoB,SAAf,IAA4B;AAAA;AAAA,0BAAIA,SAAJ,CAAcC,sBAAjD;AACH;AAED;;;AACAC,QAAAA,aAAa,GAAG;AACZ,iBAAO,KAAKtB,SAAL,CAAeoB,SAAf,IAA4B;AAAA;AAAA,0BAAIA,SAAJ,CAAcG,qBAAjD;AACH;AAED;;;AACAV,QAAAA,YAAY,GAAG;AACX,iBAAO,KAAKb,SAAL,CAAee,OAAf,CAAuBH,MAAvB,GAAgC,CAAvC;AACH;;AAEDY,QAAAA,SAAS,CAACC,IAAD,EAAwB;AAC7B,cAAI,KAAKZ,YAAL,EAAJ,EAAyB;AACrB,iBAAK,IAAIC,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAG,KAAKb,QAAL,CAAcW,MAA1C,EAAkDE,KAAK,EAAvD,EAA2D;AACvD,kBAAME,OAAO,GAAG,KAAKf,QAAL,CAAca,KAAd,CAAhB;;AACA,kBAAIE,OAAO,CAACU,MAAR,CAAeD,IAAf,CAAJ,EAA0B;AACtB,uBAAO,IAAP;AACH;AACJ;AACJ;;AACD,iBAAO,KAAP;AACH;AAED;;;AACAE,QAAAA,oBAAoB,CAACC,OAAD,EAAkB;AAClC,cAAIC,IAAI,GAAGD,OAAO,GAAG,KAAK5B,SAAL,CAAe8B,WAAf,CAA2B,CAA3B,CAArB;AACA,iBAAO;AAAA;AAAA,gCAAOC,SAAP,CAAiBF,IAAjB,CAAP;AACH;;AAEDG,QAAAA,SAAS,GAAG;AACR,iBAAO,KAAKhC,SAAL,CAAeiC,OAAf,CAAuBrB,MAAvB,GAAgC,CAAvC;AACH;;AAjEc,O","sourcesContent":["import { _decorator, Component } from \"cc\";\nimport { tab } from \"../../../../Table/table_gen\";\nimport { Random } from \"../../util/Random\";\nimport { SkillTrigger } from \"./SkillTrigger\";\n\nconst { ccclass, property } = _decorator;\nconst Math_RATIO = 10000;\n\n@ccclass('Skill')\nexport class Skill {\n    configId: number\n    configTab: tab.SkillTable\n\n\n    triggers: SkillTrigger[] = []\n\n    originalSkill: Skill\n\n    private _bulletTab: tab.BulletTable\n\n    get bulletTab() {\n        if (this._bulletTab == null) {\n            this._bulletTab = tab.getData().BulletTableById.getValue(this.configTab.Bullet)\n        }\n        return this._bulletTab\n    }\n\n    setConfigId(id: number) {\n        this.configId = id\n        this.configTab = tab.getData().SkillTableById.getValue(id)\n        this.triggers.length = 0\n        if (this.isHasTrigger()) {\n            for (let index = 0; index < this.configTab.Trigger.length; index++) {\n                const element = this.configTab.Trigger[index];\n                this.triggers.push(SkillTrigger.get(element))\n            }\n        }\n    }\n\n    /** 是否为普通攻击 */\n    isNormalAttack() {\n        return this.configTab.SkillType == tab.SkillType.SkillType_NormalAttack\n    }\n\n    /** 是否为招式攻击 */\n    isMovesAttack() {\n        return this.configTab.SkillType == tab.SkillType.SkillType_MovesAttack\n    }\n\n    /** 是否有触发器 */\n    isHasTrigger() {\n        return this.configTab.Trigger.length > 0\n    }\n\n    isTrigger(type: tab.Triggertype) {\n        if (this.isHasTrigger()) {\n            for (let index = 0; index < this.triggers.length; index++) {\n                const element = this.triggers[index];\n                if (element.isType(type)) {\n                    return true\n                }\n            }\n        }\n        return false\n    }\n\n    /** 是否连射 */\n    isRunningShotSuccess(addRate: number) {\n        let rate = addRate + this.configTab.RunningShot[2]\n        return Random.isSuccess(rate)\n    }\n\n    isHasBuff() {\n        return this.configTab.AddBuff.length > 0\n    }\n\n}"]}