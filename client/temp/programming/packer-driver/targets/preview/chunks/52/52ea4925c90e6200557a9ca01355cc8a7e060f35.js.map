{"version":3,"sources":["file:///C:/chickenStarClient/client/assets/scripts/logic/model/login/LoginView.ts"],"names":["_decorator","Button","EditBox","instantiate","Label","Node","Sprite","ViewScreen","UIMgr","Func","EventMgr","LocalEvent","PREVIEW","LoginControl","LoginData","SceneMgr","ScenesName","proto","tab","ViewName","FightMsgControl","ChannelMgr","Global","RoleData","Net","AdMgr","LoginServerChooseItem","RoleControl","SensitiveWordsManager","ccclass","property","LoginView","currSelectId","onLoad","testLayout","active","ebPassword","string","ebAccount","getItem","Number","getDefaultServerId","ins","setServerId","previewNode","isDevChannel","testSdkBtn","node","isDebug","isChangeServer","checkSdkOk","start","showArea","initTestServerList","updateServerName","updateNoticeRed","Init","connect","register","onLocal","LocalEvent_Begin","LoginProcessComplete","on_local_LoginProcessComplete","ServerMaintain","on_local_ServerMaintain","arg1","arg2","arg3","arg4","arg5","console","log","onClickLogin","length","setItem","login","IsGuideFinished","clientData","guideTrunk","enterMainScene","msg","Msg_StartStageReq","stageId","Send","Ptl","StartStageReq","serverChooseItem","str","dd","JSON","parse","area","data","id","name","status","role_level","initData","e","serverData","loadScene","main","onClickTest","show","viewName","AzheGmPop","onClickFight","testFight","onClickWorldboss","getData","GetKeyValue_ConfigTable","WorldBossStageId","onClickPvp","testFightPvp","onClickPvpMsg","testFightPvpMsg","onClickServer","serverList","datas","ServerlistTable","key","item","serverItem","ID","Name","getChildByName","getComponent","on","EventType","TOUCH_END","onClickServerItem","serverContent","addChild","serverName","getServerlistTable","event","target","Id","sdkLoginClick","params","code","sdkLogin","onShowAd","SdkTestPop","sdkLoginBtn","initSdk","sdkOk","isSdkInitOk","scheduleOnce"],"mappings":"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","sourcesContent":["import { _decorator, Button, EditBox, instantiate, Label, Layers, Node, Size, Sprite, SpriteAtlas, SpriteFrame, sys, Tween, tween, UITransform, Vec3, view } from 'cc';\nimport { ViewScreen } from '../../../framework/base/ViewScreen';\nimport { UIMgr } from '../../mgr/UIMgr';\nimport { Func } from '../../utils/Func';\nimport { ResMgr } from '../../mgr/ResMgr';\nimport { EventMgr } from '../../mgr/EventMgr';\nimport { LocalEvent } from '../../define/LocalEvent';\nimport { PREVIEW } from 'cc/env';\nimport { LoginControl } from './LoginControl';\nimport { LoginData } from './LoginData';\nimport { Reconnect } from '../Reconnect';\nimport { SceneMgr, ScenesName } from '../../mgr/SceneMgr';\nimport { proto } from 'client_protocol';\nimport { tab } from '../../../Table/table_gen';\nimport { ViewName } from '../../define/ViewDefine';\nimport { ItemPoolMgr } from '../item/ItemPoolMgr';\nimport { FightMsgControl } from '../../fight/FightMsgControl';\nimport Sound from '../../utils/Sound';\nimport { ChannelMgr } from '../../../channel/ChannelMgr';\nimport { Global } from '../../../Global';\nimport { GuideController } from '../../guide/GuideController';\nimport { RoleData } from '../role/RoleData';\nimport { Net } from '../../net/Net';\nimport { AdMgr } from '../AdMgr';\nimport { LoginServerChooseItem } from './LoginServerChooseItem';\nimport { RoleControl } from '../role/RoleControl';\nimport SensitiveWordsManager from '../../utils/SensitiveWordsManager';\nconst { ccclass, property } = _decorator;\n\n@ccclass('LoginView')\nexport class LoginView extends ViewScreen {\n    @property(Sprite)\n    spr: Sprite = null\n\n    @property(Node)\n    previewNode: Node = null\n\n    @property(Button)\n    sdkLoginBtn: Button = null\n    @property(Button)\n    testSdkBtn: Button = null\n\n    @property(EditBox)\n    ebAccount: EditBox = null;\n\n    @property(EditBox)\n    ebPassword: EditBox = null;\n\n    @property(Button)\n    enterBtn: Button = null;\n\n    @property(Node)\n    serverList: Node = null;\n\n    @property(Label)\n    serverName: Label = null;\n    @property(Node)\n    serverContent: Node = null;\n    @property(Node)\n    serverItem: Node = null;\n\n    @property(LoginServerChooseItem)\n    serverChooseItem: LoginServerChooseItem = null\n\n    @property(Node)\n    testLayout:Node = null\n\n    private currSelectId = 0;\n\n    protected onLoad(): void {\n        super.onLoad()\n        this.testLayout.active = PREVIEW\n        this.ebPassword.string = \"111\"\n        this.ebAccount.string = Func.getItem(\"custom_account\") || \"\";\n        this.currSelectId = Number(Func.getItem(\"custom_server_id\"));\n\n        if (!this.currSelectId) {\n            this.currSelectId = PREVIEW ? 2 : ChannelMgr.getDefaultServerId();\n        }\n        LoginData.ins.setServerId(this.currSelectId)\n\n        this.previewNode.active = PREVIEW || ChannelMgr.isDevChannel\n\n        this.testSdkBtn.node.active = Global.isDebug\n        if (!LoginControl.ins.isChangeServer) {\n            this.checkSdkOk()\n        }\n\n    }\n\n    protected start(): void {\n        this.showArea()\n        if (!LoginControl.ins.isChangeServer) {\n            this.initTestServerList();\n            this.updateServerName();\n            RoleControl.ins.updateNoticeRed();\n            SensitiveWordsManager.ins.Init()\n        } else {\n            LoginControl.ins.isChangeServer = false;\n            LoginControl.ins.connect();\n        }\n\n    }\n    register(): void {\n        EventMgr.onLocal(LocalEvent.LocalEvent_Begin, this.LocalEvent_Begin, this)\n        EventMgr.onLocal(LocalEvent.LoginProcessComplete, this.on_local_LoginProcessComplete, this)\n        EventMgr.onLocal(LocalEvent.ServerMaintain, this.on_local_ServerMaintain, this)\n    }\n\n    LocalEvent_Begin(arg1?: any, arg2?: any, arg3?: any, arg4?: any, arg5?: any) {\n        console.log(\"收到事件----\", arg1, arg2, arg3, arg4, arg5)\n    }\n\n    onClickLogin() {\n        if (this.ebAccount.string.length == 0) {\n            console.log(\"账号不能为空\")\n            return\n        }\n        Func.setItem(\"custom_account\", this.ebAccount.string)\n        Func.setItem(\"custom_server_id\", this.currSelectId)\n        LoginData.ins.setServerId(this.currSelectId)\n        LoginControl.ins.login(this.ebAccount.string, this.ebPassword.string, \"\")\n\n    }\n\n    on_local_LoginProcessComplete() {\n        if (\n            RoleData.ins.IsGuideFinished() || \n            Number(RoleData.ins.clientData.guideTrunk) >= 100) {\n            this.enterMainScene()\n        } else {\n            // 开始战斗新手战斗\n            let msg = new proto.Msg_StartStageReq();\n            msg.stageId = 1;\n            Net.Send(proto.Ptl.StartStageReq, msg)\n        }\n    }\n    showArea() {\n        this.serverChooseItem.node.active = false\n        let str = Func.getItem(\"lastLoginArea\")\n        if (str) {\n            try {\n                let dd = JSON.parse(str)\n                if (dd && dd.area) {\n                    this.serverChooseItem.node.active = true\n                    let data: any = {}\n                    data.id = dd.area\n                    data.name = dd.name\n                    data.status = 3\n                    data.role_level = 0\n                    this.serverChooseItem.initData(data)\n                }\n            } catch (e) {\n\n            }\n        }\n\n    }\n\n    on_local_ServerMaintain() {\n        if (this.serverChooseItem.node.active) {\n            this.serverChooseItem.serverData.status = 1\n            this.serverChooseItem.initData(this.serverChooseItem.serverData)\n        }\n    }\n    enterMainScene() {\n        SceneMgr.ins.loadScene(ScenesName.main)\n    }\n\n    onClickTest() {\n        // UIMgr.ins.show({ viewName: ViewName.DynamicAtlas })\n        UIMgr.ins.show({ viewName: ViewName.AzheGmPop })\n        //UIMgr.ins.show({ viewName: ViewName.BagPop })\n    }\n\n    onClickFight() {\n        FightMsgControl.ins.testFight()\n    }\n\n    onClickWorldboss() {\n        FightMsgControl.ins.testFight(tab.getData().GetKeyValue_ConfigTable().WorldBossStageId)\n    }\n\n    onClickPvp(){\n        FightMsgControl.ins.testFightPvp()\n    }\n    onClickPvpMsg(){\n        FightMsgControl.ins.testFightPvpMsg()\n    }\n\n    onClickServer() {\n        this.serverList.active = true;\n    }\n\n    initTestServerList() {\n\n        let datas = tab.getData().ServerlistTable;\n        for (let key in datas) {\n            let item = instantiate(this.serverItem);\n            item.active = true;\n            item[\"Id\"] = datas[key].ID;\n            item[\"Name\"] = datas[key].Name;\n            item.getChildByName(\"nameLab\").getComponent(Label).string = datas[key].Name;\n            item.on(Node.EventType.TOUCH_END, this.onClickServerItem, this);\n            this.serverContent.addChild(item);\n        }\n    }\n    updateServerName() {\n        this.serverName.string = LoginData.ins.getServerlistTable().Name;\n    }\n    onClickServerItem(event) {\n        let target = event.target;\n        this.currSelectId = target.Id;\n        this.serverList.active = false;\n        // this.serverName.string=target.Name;\n        this.currSelectId = target.Id;\n        LoginData.ins.setServerId(this.currSelectId)\n        this.updateServerName();\n        // console.log(\"FFFFF\")\n    }\n\n    sdkLoginClick() {\n        if (ChannelMgr.isDevChannel) {\n            return\n        }\n        ChannelMgr.login({}, (params: any) => {\n            console.log(\"sdkLoginClick\")\n            if (params.code == 0) {\n                LoginControl.ins.sdkLogin()\n            } else {\n                console.log(\"登录失败\")\n            }\n        })\n    }\n\n    onShowAd() {\n        // AdMgr.ins.playVideoAd(tab.AdType.AdType_MainChapterReward, () => {\n        //     console.log(\"播放成功\")\n        // })\n        UIMgr.ins.show({ viewName: ViewName.SdkTestPop })\n    }\n\n    checkSdkOk() {\n        this.sdkLoginBtn.node.active = Global.isDebug //!this.previewNode.active\n        if (ChannelMgr.isDevChannel) {\n            AdMgr.ins.initSdk()\n            return\n        }\n        let sdkOk = ChannelMgr.isSdkInitOk()\n        console.log(\"initSdkOk\", sdkOk)\n        if (sdkOk == 1) {\n            this.sdkLoginBtn.node.active = true\n            AdMgr.ins.initSdk()\n            this.sdkLoginClick()\n            return\n        }\n        this.scheduleOnce(() => {\n            this.checkSdkOk()\n        }, 1)\n    }\n\n\n}\n\n"]}