{"version":3,"sources":["file:///C:/chickenStarClient/client/assets/scripts/logic/model/fengyunRanking/FengyunBtnItem.ts"],"names":["_decorator","Label","Node","PlayerHeadItem","LangMgr","UIMgr","ViewName","proto","Net","ComponentBase","EventMgr","SimpleRoleInfo","RoleData","RedMgr","RedDotType","ccclass","property","FengyunBtnItem","table","rankMsg","register","onMsg","Ptl","GetRankRsp","on_s2c_GetRankRsp","initView","rankNameLab","string","getLab","WordKey","requestGetRank","msg","Msg_GetHeroRankReq","rankId","RankId","Send","GetRankReq","error","code","CommonErrorCode","Succeed","rankList","length","role","simple","nameLab","name","headItem","node","active","info","initHeadInfo","roleInfo","stateNode","ins","getServerUtcTime","settleTime","refreshRed","onClickBtn","show","FengyunRankingView","data","Id","node_red","i","TaskIds","taskId","isRed","Feng_Yun_Rank","String"],"mappings":"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","sourcesContent":["import { _decorator, Component, Label, labelAssembler, Node } from 'cc';\r\nimport { PlayerHeadItem } from '../common/PlayerHeadItem';\r\nimport { tab } from '../../../Table/table_gen';\r\nimport { LangMgr } from '../../mgr/LangMgr';\r\nimport { UIMgr } from '../../mgr/UIMgr';\r\nimport { ViewName } from '../../define/ViewDefine';\r\nimport { proto } from 'client_protocol';\r\nimport { Net } from '../../net/Net';\r\nimport { ComponentBase } from '../../../framework/base/ComponentBase';\r\nimport { EventMgr } from '../../mgr/EventMgr';\r\nimport { HeroInfo } from '../hero/HeroInfo';\r\nimport { SimpleRoleInfo } from '../friends/SimpleRoleInfo';\r\nimport { RoleData } from '../role/RoleData';\r\nimport { RedMgr } from '../../mgr/RedMgr';\r\nimport { RedDotType } from '../../red/RedDotType';\r\nconst { ccclass, property } = _decorator;\r\n\r\n/**\r\n * \r\n * FengyunBtnItem\r\n * zhudingchao\r\n * Wed Jul 17 2024 14:44:13 GMT+0800 (中国标准时间)\r\n * db://assets/scripts/logic/model/fengyunRanking/FengyunBtnItem.ts\r\n *\r\n */\r\n\r\n@ccclass('FengyunBtnItem')\r\nexport class FengyunBtnItem extends ComponentBase {\r\n    @property(PlayerHeadItem)\r\n    headItem: PlayerHeadItem = null;\r\n    @property(Label)\r\n    nameLab: Label = null;\r\n    @property(Label)\r\n    rankNameLab: Label = null;\r\n    @property(Node)\r\n    stateNode: Node = null;\r\n    @property(Node)\r\n    node_red: Node = null;\r\n    private table: tab.ActivityRankTable;\r\n    private rankMsg: proto.Msg_GetRankRsp;\r\n    register() {\r\n        EventMgr.onMsg(proto.Ptl.GetRankRsp, this.on_s2c_GetRankRsp, this);\r\n    }\r\n\r\n    initView(table: tab.ActivityRankTable) {\r\n\r\n        this.rankNameLab.string = LangMgr.getLab(table.WordKey);\r\n        this.table = table;\r\n        this.requestGetRank();\r\n    }\r\n    requestGetRank() {\r\n        let msg = new proto.Msg_GetHeroRankReq();\r\n        msg.rankId = this.table.RankId;\r\n        Net.Send(proto.Ptl.GetRankReq, msg);\r\n\r\n    }\r\n    on_s2c_GetRankRsp(msg: proto.Msg_GetRankRsp) {\r\n        if (msg.error && msg.error.code != proto.CommonErrorCode.Succeed) return;\r\n\r\n        if (msg.rankId == this.table.RankId) {\r\n            this.rankMsg = msg;\r\n            if (this.rankMsg.rankList && this.rankMsg.rankList.length > 0) {\r\n                let role = this.rankMsg.rankList[0].simple;\r\n                this.nameLab.string = role.name;\r\n                this.headItem.node.active = true;\r\n                let info = new SimpleRoleInfo(role);\r\n                this.headItem.initHeadInfo({ roleInfo: info });\r\n            } else {\r\n                this.headItem.node.active = false;\r\n                //this.nameLab.string=\"虚位以待\"\r\n                this.nameLab.string = LangMgr.getLab(\"ui_rank_7\")\r\n            }\r\n            /* 刷新一下 */\r\n            this.stateNode.active = RoleData.ins.getServerUtcTime() >= msg.settleTime;\r\n        }\r\n        this.refreshRed();\r\n\r\n    }\r\n\r\n    onClickBtn() {\r\n        if (this.rankMsg) {\r\n            UIMgr.ins.show({ \"viewName\": ViewName.FengyunRankingView, data: { \"id\": this.table.Id, \"rankMsg\": this.rankMsg } })\r\n        }\r\n\r\n    }\r\n    refreshRed() {\r\n        this.node_red.active = false;\r\n        for (let i = 0; i < this.table.TaskIds.length; i++) {\r\n            const taskId = this.table.TaskIds[i];\r\n            const isRed = RedMgr.ins.isRed(RedDotType.Feng_Yun_Rank, String(101), String(taskId));\r\n            if (isRed && !this.stateNode.active) {\r\n                this.node_red.active = true;\r\n                break\r\n            }\r\n        }\r\n    }\r\n\r\n}"]}