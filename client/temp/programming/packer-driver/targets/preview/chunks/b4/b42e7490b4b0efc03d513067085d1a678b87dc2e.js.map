{"version":3,"sources":["file:///C:/chickenStarClient/client/assets/scripts/logic/utils/Sound.ts"],"names":["Sound","PlaySound","key","soundTD","getData","SoundTableById","getValue","Type","SoundType","SoundType_Music","ins","StopBGM","Play","PlayHitEffect","Node","AudioSource","AudioClip","director","NodePool","tab","Func","LoadResAsync","BGMFlag","SEFlag","_ins","constructor","_audioEffectPool","curAudioBGM","m_fVolumeBGM","m_fVolumeSount","m_iBgmId","m_iBgmFile","_autoID","_idMap","_overlap","_idHitMap","enableBGM","enableSE","main_bgm","battle_bgm","soundEffectParentNode","name","getScene","addChild","addPersistRootNode","addComponent","loop","Dictionary","bgmFlag","getItem","EnableBGM","seFlag","EnableSE","loadBgm","addRef","ass","finishCallback","console","error","undefined","Path","warn","id","audioID","Id","playClip","setValue","SoundType_SoundEffect","then","audioClip","soundId","audioSourceNode","get","audioSource","getComponent","clip","play","off","EventType","ENDED","on","put","Loop","volume","stop","remove","pause","resume","destroyFightEffect","destroyAllChildren","clear","StopAllSE","enable","isEnableBGM","isEnableSE"],"mappings":"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","sourcesContent":["/*\n * @Date: 2024-04-19 15:09:14\n * @LastEditors: wzq\n * @LastEditTime: 2024-07-15 18:24:10\n */\n\n//Sound.ts\nimport { Node, AudioSource, AudioClip, director, NodePool, Asset } from 'cc';\nimport { tab } from '../../Table/table_gen';\nimport { Func } from './Func';\nimport { LoadResAsync } from \"../mgr/ResMgr\";\nconst BGMFlag = \"bgm_flag\"\nconst SEFlag = \"se_flag\"\nexport function PlaySound(key: number): number {\n    let soundTD = tab.getData().SoundTableById.getValue(key)\n    if (soundTD.Type === tab.SoundType.SoundType_Music) {\n        Sound.ins.StopBGM();\n        return Sound.ins.Play(key);\n    } else {\n        return Sound.ins.PlayHitEffect(key);\n    }\n}\nexport default class Sound {\n    private static _ins: Sound;\n    public static get ins(): Sound {\n        if (this._ins == null) {\n            this._ins = new Sound();\n        }\n        return this._ins;\n    }\n    private _audioEffectPool: NodePool;\n    private curAudioBGM: AudioSource;//BGM组件\n    m_fVolumeBGM: number;\n    m_fVolumeSount: number;\n    m_iBgmId: any;\n    m_iBgmFile: string\n    protected _autoID: number = 0;\n    protected _idMap: tab.Dictionary<number, number>; //<自增id，AudioID>\n    protected _overlap: tab.Dictionary<number, boolean>;\n    protected _idHitMap: tab.Dictionary<number, number>;\n    protected enableBGM = true;\n    protected enableSE = true;\n    private main_bgm: AudioClip;\n    private battle_bgm: AudioClip;\n    private soundEffectParentNode: Node = null\n    constructor() {\n        //@en create a node as audioMgr\n        //@zh 创建一个节点作为 audioMgr\n        let Sound = new Node();\n        Sound.name = '__Sound__';\n\n        //@en add to the scene.\n        //@zh 添加节点到场景\n        director.getScene().addChild(Sound);\n\n        //@en make it as a persistent node, so it won't be destroied when scene change.\n        //@zh 标记为常驻节点，这样场景切换的时候就不会被销毁了\n        director.addPersistRootNode(Sound);\n        //@en add AudioSource componrnt to play audios.\n        //@zh 添加 AudioSource 组件，用于播放音频。\n        this.curAudioBGM = Sound.addComponent(AudioSource);\n        this.curAudioBGM.loop = true;\n\n        this.soundEffectParentNode = new Node(\"SoundEffectParentNode\")\n        Sound.addChild(this.soundEffectParentNode)\n\n        this._idMap = new tab.Dictionary<number, number>()\n        this._overlap = new tab.Dictionary<number, boolean>();\n        this._idHitMap = new tab.Dictionary<number, number>();\n\n        let bgmFlag = Func.getItem(BGMFlag)\n        this.EnableBGM(bgmFlag !== \"false\")\n        let seFlag = Func.getItem(SEFlag)\n        this.EnableSE(seFlag !== \"false\")\n        this._audioEffectPool = new NodePool();\n    }\n    async loadBgm() {\n        this.main_bgm = await LoadResAsync('sound/main', AudioClip);\n        this.battle_bgm = await LoadResAsync('sound/battle_main', AudioClip);\n        this.addRef(this.main_bgm)\n        this.addRef(this.battle_bgm)\n    }\n    addRef(ass: Asset) {\n        if (ass) {\n            ass.addRef()\n        }\n    }\n    public Play(key: number, finishCallback?: Function): number {\n        if (!key) {\n            return;\n        }\n        if (tab.getData() == null) {\n            return\n        }\n        if (!this.curAudioBGM) {\n            console.error(\"audioSource is null\");\n        }\n        let soundTD = tab.getData().SoundTableById.getValue(key)\n        if (!soundTD) {\n            console.error(\"cannot found sound:\" + key)\n            return undefined;\n        }\n\n        // let bgmFlag = Func.getItem(BGMFlag)\n        if (!this.enableBGM && soundTD.Type === tab.SoundType.SoundType_Music\n            // &&bgmFlag == \"false\"\n        ) {\n            return undefined;\n        }\n        if (soundTD.Type == tab.SoundType.SoundType_Music) {\n            if (this.m_iBgmFile == soundTD.Path) {\n                console.warn(\"同一个背景音乐-不播放\")\n                return undefined\n            }\n        }\n        let id = ++this._autoID;\n        let audioID = 0;\n        if (soundTD.Id === 1) {\n            audioID = this.playClip(this.main_bgm, soundTD);\n        } else if (soundTD.Id === 2) {\n            audioID = this.playClip(this.battle_bgm, soundTD);\n        }\n        this._idMap.setValue(id, audioID)\n        return id\n    }\n    public PlayHitEffect(key: number, finishCallback?: Function): number {\n        if (!key) {\n            return undefined;\n        }\n        let soundTD = tab.getData().SoundTableById.getValue(key);\n        if (!soundTD) {\n            console.error(\"cannot found sound:\" + key)\n            return undefined;\n        }\n\n        // let seFlag = Func.getItem(SEFlag)\n        if (!this.enableSE && soundTD.Type === tab.SoundType.SoundType_SoundEffect\n            // &&seFlag == \"false\"\n        ) {\n            return undefined;\n        }\n\n        let id = this._idHitMap.getValue(key);\n        if (id > 3) {\n            return undefined; //已经不需要播放了\n        }\n\n        if (id) {\n            id++;\n            this._idHitMap.setValue(key, id);\n        } else {\n            id = 1;\n            this._idHitMap.setValue(key, id);\n        }\n        LoadResAsync(soundTD.Path, AudioClip).then(audioClip => {\n            this.playClip(audioClip, soundTD);\n        })\n        return id\n    }\n    protected playClip(audioClip: AudioClip, soundTD: tab.SoundTable) {\n        let soundId = soundTD.Id;\n        switch (soundTD.Type) {\n            case tab.SoundType.SoundType_SoundEffect: {\n                let audioSourceNode = this._audioEffectPool.get();\n                if (!audioSourceNode) {\n                    audioSourceNode = new Node();\n                    audioSourceNode.addComponent(AudioSource);\n                    this.soundEffectParentNode.addChild(audioSourceNode);\n                }\n                const audioSource = audioSourceNode.getComponent(AudioSource);\n                audioSource.clip = audioClip;\n                audioSource.play();\n                audioSourceNode.off(AudioSource.EventType.ENDED);\n                audioSourceNode.on(AudioSource.EventType.ENDED, () => {\n                    this._idHitMap.setValue(soundId, this._idHitMap.getValue(soundId) - 1);\n                    this._audioEffectPool.put(audioSourceNode);\n                });\n                break;\n            }\n            case tab.SoundType.SoundType_Music: {\n                //背景音乐\n                this.curAudioBGM.clip = audioClip;\n                this.curAudioBGM.play();\n                this.curAudioBGM.loop = soundTD.Loop;\n                this.m_iBgmFile = soundTD.Path\n                this.m_iBgmId = soundId;\n                this.curAudioBGM.volume = soundTD.volume / 100\n                break;\n            }\n        }\n        return soundId;\n    }\n    /**\n     * stop the audio play\n     */\n    stop(id: number) {\n        let audioID = this._idMap.getValue(id)\n        if (audioID !== undefined) {\n            this.curAudioBGM.stop();\n            this._idMap.remove(id)\n        }\n    }\n\n    /**\n     * pause the audio play\n     */\n    pause() {\n        this.curAudioBGM.pause();\n    }\n\n    /**\n     * resume the audio play\n     */\n    resume() {\n        this.curAudioBGM.play();\n    }\n\n    destroyFightEffect() {\n        this.soundEffectParentNode.destroyAllChildren()\n        this._audioEffectPool.clear()\n    }\n\n    public StopAllSE() {\n        this._idMap.clear()\n        this._overlap.clear()\n    }\n    public StopBGM() {\n        this.m_iBgmFile = null\n        this.m_iBgmId = 0;\n        this.curAudioBGM.stop();\n        this.curAudioBGM.clip = null;\n    }\n    public EnableBGM(enable: boolean) {\n        if (!enable) {\n            this.StopBGM()\n        }\n        this.enableBGM = enable;\n\n        // if (save) {\n        //     Func.setItem(BGMFlag, enable ? \"true\" : \"false\")\n        // }\n    }\n\n    public EnableSE(enable: boolean) {\n        if (!enable) {\n            this.StopAllSE()\n        }\n        this.enableSE = enable;\n\n        // if (save) {\n        //     Func.setItem(SEFlag, enable ? \"true\" : \"false\")\n        // }\n    }\n\n    public isEnableBGM() {\n        return this.enableBGM;\n    }\n\n    public isEnableSE() {\n        return this.enableSE;\n    }\n}"]}