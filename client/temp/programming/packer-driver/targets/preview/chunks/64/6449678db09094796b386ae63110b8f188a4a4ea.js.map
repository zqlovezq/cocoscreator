{"version":3,"sources":["file:///C:/chickenStarClient/client/assets/scripts/framework/editor/lang/LangSprite.ts"],"names":["_decorator","CCBoolean","Component","Sprite","SpriteFrame","EDITOR","ResMgr","LangMgr","ccclass","property","executeInEditMode","menu","LangSprite","visible","type","displayName","preload","tooltip","spr","spriteFrame","value","_spriteFrame","render","_preload","preloadChange","onLoad","node","getComponent","sprUUID","uuid","assetInfo","getBundle","getAssetInfo","checkPath","setTexture"],"mappings":"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","sourcesContent":["import { _decorator, AssetManager, assetManager, CCBoolean, CCInteger, Component, Label, Sprite, SpriteFrame } from 'cc';\n// @ts-ignore\nimport { EDITOR } from 'cc/env';\nimport { UIMgr } from '../../../logic/mgr/UIMgr';\nimport { ResMgr } from '../../../logic/mgr/ResMgr';\nimport { LangMgr } from '../../../logic/mgr/LangMgr';\nconst {\n    ccclass,\n    property,\n    executeInEditMode,\n    menu,\n} = _decorator;\n\n@ccclass('LangSprite')\n@executeInEditMode(true)\nexport default class LangSprite extends Component {\n    @property({ visible: false, type: SpriteFrame })\n    _spriteFrame: SpriteFrame = null;\n\n    @property({ visible: true, type: SpriteFrame })\n    set spriteFrame(value: SpriteFrame) {\n        this._spriteFrame = value;\n        this.render();\n    }\n\n    get spriteFrame(): SpriteFrame {\n        return this._spriteFrame;\n    }\n\n    @property({ visible: false })\n    _preload: Boolean = true;\n\n    @property({ displayName: \"是否预加载\", visible: true, type: CCBoolean })\n    set preload(value: Boolean) {\n        this._preload = value;\n        this.preloadChange();\n    }\n\n    get preload(): Boolean {\n        return this._preload;\n    }\n\n    @property({ displayName: \"资源uuid\", visible() { return !this.preload } })\n    sprUUID: string = \"\"\n\n    spr: Sprite | null = null;\n\n\n    @property({ tooltip: \"备注\", displayName: \"备注\" })\n    desc: string = \"\"\n\n    onLoad() {\n        this.spr = this.node.getComponent(Sprite)\n        if (!EDITOR) {\n            this.spriteFrame = this._spriteFrame\n        } else {\n            this.preload = this._preload\n        }\n    }\n\n    render() {\n        if (EDITOR) {\n            if (this._spriteFrame == null) {\n                this.spr.spriteFrame = null\n                this.sprUUID = \"\"\n                return\n            }\n            if (this.preload) {\n                this.spr.spriteFrame = this._spriteFrame\n            } else {\n                this.sprUUID = this._spriteFrame.uuid\n                this._spriteFrame = null\n            }\n        } else {\n            if (this.preload) {\n                this.spr.spriteFrame = this._spriteFrame\n                if (this._spriteFrame) {\n                    let assetInfo = ResMgr.getBundle().getAssetInfo(this._spriteFrame.uuid)\n                    if (assetInfo && LangMgr.checkPath(assetInfo['path'])) {\n                        this.spr.spriteFrame = null\n                        this.spr.setTexture(assetInfo['path'])\n                    }\n                }\n            } else {\n                if (this.sprUUID == \"\") {\n                    return\n                }\n                let assetInfo = ResMgr.getBundle().getAssetInfo(this.sprUUID)\n                if (assetInfo == null) {\n                    return\n                }\n                this.spr.setTexture(assetInfo['path'])\n            }\n        }\n    }\n\n    preloadChange() {\n        if (this.preload) {\n            this.sprUUID = \"\"\n        } else {\n            if (this._spriteFrame) {\n                this.sprUUID = this._spriteFrame.uuid\n            }\n            this._spriteFrame = null\n            this.spr.spriteFrame = null\n        }\n    }\n\n}\n"]}