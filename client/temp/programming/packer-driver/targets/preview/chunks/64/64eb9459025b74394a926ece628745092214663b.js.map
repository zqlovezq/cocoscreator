{"version":3,"sources":["file:///C:/chickenStarClient/client/assets/scripts/Common/InfiniteList/InfiniteList.ts"],"names":["_decorator","Component","Node","Enum","NodePool","Vec2","Vec3","tween","ScrollView","Graphics","UITransform","Color","InfiniteCell","ccclass","property","Direction","InfiniteList","type","tooltip","_cell_anchor_x","_scrollView","_content","_delegate","_inited","_scrollPosition","_activeCellIndexRange","_cellPools","_cellsOffset","_cellsSize","_activeCellViews","Array","_cellSizePools","onDestroy","_destroyPool","Init","p","clearPoool","_init","SetCellNodeAnchorX","val","playMove","cellIndex","moveLength","bShow","actionTime","realThis","Reload","node","pauseSystemEvents","scheduleOnce","resumeSystemEvents","arTemp","concat","sort","cell1","cell2","getPosition","y","index","data","from","entries","dataIndex","setPosition","x","by","position","start","keepPos","allclean","_clear","_load","Refresh","_updateActiveCellContent","scrollToTop","timeInSecond","attenuated","scrollToBottom","GetScrollPosOfCell","idx","sp","_getCellPosOfIndex","direction","vertical","GetScrollOffset","getScrollOffset","getMaxScrollOffset","ScrollToCell","pos","scrollToOffset","_onScrolling","IsCellVisible","getContent","content","onLoad","getComponent","addComponent","horizontal","cancelInnerEvents","inertia","elastic","name","setAnchorPoint","addChild","bDebug","update","g","clear","fillColor","YELLOW","fillRect","width","height","onEnable","on","onDisable","targetOff","setContentPos","slPos","dataLen","getCellNumber","stopAutoScroll","offset","_refreshActiveCells","needClear","length","_recycleCell","CleanCellPools","id","pool","_preCreateCell","getCellIdentifer","cell","_getCellViewFromPool","getCellView","getCellData","UpdateContent","size","GetCellSize","_generatorCell","range","i","_addCellView","_execute","generator","duration","Promise","resolve","gen","func","startTime","Date","getTime","iter","next","done","headPadding","s","getCellSize","bDynamicSize","spacing","bottomPadding","setContentSize","_getActiveCellIndexRange","equals","_generatorActiveCell","needadd","j","undefined","splice","removeFromParent","destroy","cellIdentifier","put","cellNode","get","_getCellSizeFromPool","ret","startPos","endPos","_getCellIndexOfPos","enabled","push","sidePadding","_updateCellContent","forEach","findCellOfIdx","dataIdx","getChildByName","checkOverflow","isAutoScrolling","isScrolling","anchorX","anchorY","dx","dy","child","children"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node ,Enum,NodePool,Vec2,Vec3,tween,ScrollView, Graphics, UITransform, Color, SpriteFrame, Sprite} from 'cc';\r\nimport InfiniteCell from \"./InfiniteCell\";\r\n\r\n\r\nconst { ccclass, property } = _decorator;\r\n\r\nenum Direction {\r\n\tvertical = 1,\r\n\thorizontal,\r\n}\r\n\r\ninterface GetCellNumber {\r\n\t/**\r\n\t * 返回这个 List 中数据的总数量\r\n\t */\r\n\t(): number;\r\n}\r\n\r\ninterface GetCellIdentifer {\r\n\t/**\r\n\t * 通过数据的下标返回这个 Cell 的表现类型的标志\r\n\t * @param dataIndex: 当前 Cell 所渲染的数据在列表中的下标\r\n\t */\r\n\t(dataIndex?:number): string;\r\n}\r\n\r\ninterface GetCellSize {\r\n\t/**\r\n\t * 通过数据的下标返回这个 Cell 的尺寸（垂直 List 为高度，水平 List 为宽度）\r\n\t * @param dataIndex: 当前 Cell 所渲染的数据在列表中的下标\r\n\t */\r\n\t(dataIndex?:number): number;\r\n}\r\n\r\ninterface GetCellView {\r\n\t/**\r\n\t * 获取一个 Cell 的 View 实例，记住这个控件必须已经挂在一个存在的 Node 上\r\n\t * @param dataIndex: 当前 Cell 所渲染的数据在列表中的下标\r\n\t * @param identifier: 这个 Cell 的表现类型标志\r\n\t * \r\n\t * 这个回调函数只会出现在已经没有可以重用的 Cell 时，List 才会向这个函数请求新的 Cell 实例\r\n\t * 所有已经请求的 Cell 实例都会被重复利用。\r\n\t */\r\n\t(dataIndex?:number, identifier?:string): InfiniteCell;\r\n}\r\n\r\ninterface GetCellData {\r\n\t/**\r\n\t * 根据一个 Cell 的下标获取一个 Cell 的数据，这个数据会作为 Cell 的 UpdateContent 的参数\r\n\t * 这个回调是可选的，可以不提供，如果不提供的话，Cell 需要自己在 UpdateContent 中向其他模块获取更新自己内容的数据\r\n\t */\r\n\t(dataIndex?:number): any;\r\n}\r\n\r\nexport interface InitParam {\r\n\tgetCellNumber: GetCellNumber,\r\n\tgetCellSize: GetCellSize,\r\n\tgetCellIdentifer: GetCellIdentifer,\r\n\tgetCellView: GetCellView,\r\n\tgetCellData?: GetCellData\r\n}\r\n\r\ninterface CellPools {\r\n\t[index:string]: NodePool;\r\n}\r\n\r\ninterface CellSize{\r\n\t[index: string]: number;\r\n}\r\n\r\n@ccclass\r\nexport default class InfiniteList extends Component {\r\n\t@property({\r\n\t\ttype: Enum(Direction),\r\n\t\ttooltip: \"List 滚动的方向，可以选择垂直或者水平\"\r\n\t})\r\n\tpublic direction = Direction.vertical;\r\n\r\n\t@property({\r\n\t\ttooltip: \"cell 之间的像素间隔，最开始和最后面不会添加\"\r\n\t})\r\n\tpublic spacing = 0;\r\n\r\n\t@property({tooltip: \"List 顶部（水平滚动则是最左边）的间隔空间\"})\r\n\tpublic headPadding = 0;\r\n\r\n\t@property({tooltip: \"List 底部（水平滚动则是最右边）的间隔空间\"})\r\n\tpublic bottomPadding = 0;\r\n\r\n\t@property({tooltip: \"侧边的间距，垂直滚动就是左右边的间距，水平滚动就是上下边的间距\"})\r\n\tpublic sidePadding:Vec2 = new Vec2(0, 0);\r\n\r\n\t@property({tooltip: \"取cell固定size，还是动态获取cell的size\"})\r\n\tpublic bDynamicSize: boolean = false;\r\n\t\r\n\t@property({tooltip: \"是否要Debug模式\"})\r\n\tpublic bDebug: boolean = false;\r\n\t@property({tooltip: \"滚动行为是否会取消节点注册的触摸事件\"})\r\n\tpublic cancelInnerEvents: boolean = true;\r\n\t@property({tooltip: \"是否开启滚动惯性\"})\r\n\tpublic inertia: boolean = true;\r\n\t@property({tooltip: \"是否允许滚动内容超过边界，并在停止触摸后回弹\"})\r\n\tpublic elastic: boolean = true;\r\n\r\n\tprivate _cell_anchor_x: number = 0.5;\r\n\r\n\tonDestroy() {\r\n\t\tthis._destroyPool();\r\n\t}\r\n\r\n\t/**无特殊需求clearPool默认即可*/\r\n\tpublic Init(p:InitParam, clearPoool:boolean = false) {\r\n\t\tthis._init(p,clearPoool);\r\n\t}\r\n\r\n\tpublic SetCellNodeAnchorX(val: number){\r\n\t\tthis._cell_anchor_x = val;\r\n\t}\r\n\r\n\tpublic playMove(cellIndex: number, moveLength: number, bShow: boolean) {\r\n\t\tlet actionTime = 0.1;\r\n\t\tlet realThis = this;\r\n\t\tif (bShow) {\r\n\t\t\trealThis.Reload(true);\r\n\t\t} else {\r\n\t\t\trealThis.node.pauseSystemEvents(true);\r\n\t\t\tthis.scheduleOnce(() => {\r\n\t\t\t\trealThis.Reload(true);\r\n\t\t\t\trealThis.node.resumeSystemEvents(true);\r\n\t\t\t}, actionTime);\r\n\t\t}\r\n\t\tlet arTemp = new Array<InfiniteCell>();\r\n\t\tarTemp = arTemp.concat(this._activeCellViews);\r\n\t\tarTemp.sort((cell1: InfiniteCell, cell2: InfiniteCell): number => {\r\n\t\t\tif (cell1.node.getPosition().y > cell2.node.getPosition().y) {\r\n\t\t\t\treturn -1;\r\n\t\t\t} else if (cell1.node.getPosition().y < cell2.node.getPosition().y) {\r\n\t\t\t\treturn 1;\r\n\t\t\t}\r\n\t\t\treturn 0;\r\n\t\t});\r\n\t\tfor (let [index, data] of Array.from(arTemp.entries())) {\r\n\t\t\tif (index + arTemp[0].dataIndex > cellIndex) {\r\n\t\t\t\tif (bShow) {\r\n\t\t\t\t\t// data.node.getPosition().y += moveLength;\r\n\t\t\t\t\tdata.node.setPosition(data.node.getPosition().x,data.node.getPosition().y += moveLength,0)\r\n\t\t\t\t\ttween(data.node).by(actionTime,{position:new Vec3(0, -moveLength,0)}).start();\r\n\t\t\t\t\t// data.node.runAction(cc.moveBy(actionTime, new cc.Vec2(0, -moveLength)));\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// data.node.runAction(cc.moveBy(actionTime, new cc.Vec2(0, moveLength)));\r\n\t\t\t\t\ttween(data.node).by(actionTime,{position:new Vec3(0, moveLength,0)}).start();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Reload 整个 List，这时获取数据的回调函数会重新触发一遍，所有的 cell 也会更新一遍内容\r\n\t */\r\n\tpublic Reload(keepPos:boolean = false, allclean:boolean = false) {\r\n\t\tthis._clear(keepPos, allclean);\r\n\t\tthis._load();\r\n\t}\r\n\r\n\t/**\r\n\t * 重新刷新当前显示 cell 的内容，不会重新载入整个列表\r\n\t * 所以如果列表的数据数量发生了变化，或是想要修改 Cell 的尺寸，调用 Refresh 是没有用处的，请调用 Reload\r\n\t */\r\n\tpublic Refresh() {\r\n\t\tthis._updateActiveCellContent();\r\n\t}\r\n\r\n\t/**\r\n\t * 视图内容将在规定时间内滚动到视图顶部\r\n\t */\r\n\tpublic scrollToTop(timeInSecond?: number, attenuated?: boolean)\r\n\t{\r\n\t\tthis._scrollView.scrollToTop(timeInSecond, attenuated);\r\n\t}\r\n\r\n\t/**\r\n\t * 视图内容将在规定时间内滚动到视图底部\r\n\t */\r\n\tpublic scrollToBottom(timeInSecond?: number, attenuated?: boolean)\r\n\t{\r\n\t\tthis._scrollView.scrollToBottom(timeInSecond, attenuated);\r\n\t}\r\n\r\n\t/**\r\n\t * 返回相对于 ScrollView 的这个 Cell 的滚动坐标\r\n\t * @param idx Cell 的索引下标\r\n\t */\r\n\tpublic GetScrollPosOfCell(idx:number): Vec2 {\r\n\t\tlet sp = this._getCellPosOfIndex(idx);\r\n\t\tif (this.direction == Direction.vertical) {\r\n\t\t\treturn new Vec2(0, sp);\r\n\t\t} else {\r\n\t\t\treturn new Vec2(sp * 1, 0);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * \r\n\t * @returns 返回活动cell的index 范围\r\n\t */\r\n\r\n\t/**\r\n\t * 返回相对于 ScrollView 的滚动坐标\r\n\t*/\r\n\r\n\tpublic GetScrollOffset()\r\n\t{\r\n\t\treturn this._scrollView.getScrollOffset();\r\n\t}\r\n\r\n\t/**\r\n\t\t!#en Get the maximize available  scroll offset\r\n\t\t!#zh 获取滚动视图最大可以滚动的偏移量 \r\n\t*/\r\n\r\n\tpublic getMaxScrollOffset()\r\n\t{\r\n\t\treturn this._scrollView.getMaxScrollOffset();\r\n\t}\r\n\t/**\r\n\t * 在规定的时间里滚动到指定的 Cell\r\n\t * @param idx 目标的 Cell 的下标\r\n\t */\r\n\tpublic ScrollToCell(idx:number, timeInSecond:number = 1, attenuated:boolean = true) {\r\n\t\tlet pos = this.GetScrollPosOfCell(idx);\r\n\r\n\t\tthis._scrollView.scrollToOffset(pos, timeInSecond, attenuated);\r\n\t\tif (timeInSecond == 0){\r\n\t\t\tthis._onScrolling()\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * 在规定的时间里滚动到指定的 pt \r\n\t*/\r\n\tpublic scrollToOffset(pos:Vec2, timeInSecond:number = 1, attenuated:boolean = true)\r\n\t{\r\n\t\tthis._scrollView.scrollToOffset(pos, timeInSecond, attenuated);\r\n\t}\r\n\r\n\tpublic getScrollOffset(){\r\n\t\treturn this._scrollView.getScrollOffset();\r\n\t}\r\n\t/**\r\n\t * 查看一个 Cell 是否当前可见\r\n\t * @param idx Cell 的下标\r\n\t */\r\n\tpublic IsCellVisible(idx:number): boolean {\r\n\t\tif (idx >= this._activeCellIndexRange.x && idx <= this._activeCellIndexRange.y) \r\n\t\t\treturn true;\r\n\t\telse \r\n\t\t\treturn false;\r\n\t}\r\n\r\n\tpublic getContent(){\r\n\t\treturn this._scrollView.content;\r\n\t}\r\n\t////////////////////////////////////////////////////////////\r\n\t// Implenmentions\r\n\t////////////////////////////////////////////////////////////\r\n\tprivate _scrollView:ScrollView;\r\n\tprivate _content:Node;\r\n\tprivate _delegate:InitParam;\r\n\tprivate _inited = false;\r\n\r\n\tprivate _scrollPosition = 0;\r\n\tprivate _activeCellIndexRange:Vec2;\r\n\tprivate _cellPools:CellPools = {};\r\n\r\n\tprivate _cellsOffset:Array<number>;\t// bottom side of cell position\r\n\tprivate _cellsSize:Array<number>;\r\n\tprivate _activeCellViews = new Array<InfiniteCell>();\r\n\tprivate _cellSizePools: CellSize = {}; //cell的Size缓存\r\n\r\n\tpublic onLoad() {\r\n\t\t// setup scrollview component\r\n\t\tthis._scrollView = this.node.getComponent(ScrollView);\r\n\t\tif (!this._scrollView) {\r\n\t\t\tthis._scrollView = this.node.addComponent(ScrollView);\r\n\t\t\tif (this.direction == Direction.horizontal) {\r\n\t\t\t\tthis._scrollView.vertical = false;\r\n\t\t\t\tthis._scrollView.horizontal = true;\r\n\t\t\t} else {\r\n\t\t\t\tthis._scrollView.vertical = true;\r\n\t\t\t\tthis._scrollView.horizontal = false;\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis._scrollView.cancelInnerEvents = this.cancelInnerEvents;\r\n\t\tthis._scrollView.inertia = this.inertia;\r\n\t\tthis._scrollView.elastic = this.elastic;\r\n\t\t// setup content node(which is root of every cell)\r\n\t\tthis._content = new Node();\r\n\t\tthis._content.name = \"list_content\";\r\n\t\tthis._content.addComponent(UITransform);\r\n\t\tthis._content.getComponent(UITransform).setAnchorPoint(this._cell_anchor_x, 1);\r\n\t\tthis.node.addChild(this._content);\r\n\t\tthis._scrollView.content = this._content;\r\n\t\tif (this.bDebug) {\r\n\t\t\t// set background color to content for debug use\r\n\t\t\tthis._content.addComponent(Graphics);\r\n\t\t}\r\n\r\n\t\t// Everything OK, let's start\r\n\t\tthis._inited = true;\r\n\t\tif (this._delegate) {\r\n\t\t\tthis._load();\r\n\t\t}\r\n\t}\r\n\r\n\tpublic update() {\r\n\t\tif (this.bDebug) {\r\n\t\t\tlet g = this._content.getComponent(Graphics);\r\n\t\t\tg.clear();\r\n\t\t\tg.fillColor = Color.YELLOW;\r\n\t\t\tg.fillRect(0, 0, this._content.getComponent(UITransform).width, this._content.getComponent(UITransform).height);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic onEnable() {\r\n\t\t// bind event to scrollview\r\n\t\tthis.node.on(\"scrolling\", this._onScrolling, this);\r\n\t}\r\n\r\n\tpublic onDisable() {\r\n\t\tthis.node.targetOff(this);\r\n\t}\r\n\tpublic setContentPos(slPos:number,x:number,y:number){\r\n\t\tthis._scrollPosition = slPos;\r\n\t\tthis._content.setPosition(new Vec3(x,y,0))\r\n\t\tconst dataLen = this._delegate.getCellNumber();\r\n\t\tif (dataLen <= 0) return;\r\n\t\tthis.stopAutoScroll()\r\n\t}\r\n\tpublic stopAutoScroll(){\r\n\t\tthis._scrollView.stopAutoScroll();\r\n\t\tthis._onScrolling();\r\n\t}\r\n\tprivate  _onScrolling() {\r\n\t\tif (!this._delegate) \r\n\t\t\treturn;\r\n\t\tconst offset = this._scrollView.getScrollOffset();\r\n\t\tif (this.direction == Direction.vertical) {\r\n\t\t\tthis._scrollPosition = offset.y;\r\n\t\t} else {\r\n\t\t\tthis._scrollPosition = offset.x * -1;\r\n\t\t}\r\n\r\n\t\t// refresh active cell with new scroll position\r\n\t\tthis._refreshActiveCells();\r\n\t}\r\n\r\n\tprivate _init(p:InitParam,allclean?:boolean) {\r\n\t\tlet needClear = false;\r\n\t\tif (this._delegate) needClear = true;\r\n\t\tthis._delegate = p;\r\n\t\tif (this._inited) {\r\n\t\t\tif (needClear) this._clear(false,allclean);\r\n\t\t\tthis._load();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _clear(keepPos:boolean = false,allclean:boolean = false) {\r\n\t\tif (this._activeCellViews) {\r\n\t\t\twhile(this._activeCellViews.length > 0) {\r\n\t\t\t\tthis._recycleCell(this._activeCellViews.length - 1, allclean);\r\n\t\t\t}\r\n\t\t\tif(allclean){this._destroyPool();}\r\n\t\t}\r\n\r\n\t\tthis._activeCellIndexRange = new Vec2(-1, -1);\r\n\t\tif (!keepPos) {\r\n\t\t\tthis._scrollPosition = 0;\r\n\t\t\t// this._content.getPosition().x = 0;\r\n\t\t\t// this._content.getPosition().y = 0;\r\n\t\t\tthis._content.setPosition(new Vec3(0,0,0))\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Description: 清空cell缓存\r\n\t */\r\n\tpublic CleanCellPools(){\r\n\t\tif (this._activeCellViews) {\r\n\t\t\twhile(this._activeCellViews.length > 1) {\r\n\t\t\t\tthis._recycleCell(this._activeCellViews.length - 1, true);\r\n\t\t\t}\r\n\t\t\tthis._destroyPool();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _destroyPool() {\r\n\t\tfor(let id in this._cellPools) {\r\n\t\t\tlet pool = this._cellPools[id]\r\n\t\t\tif(pool) {\r\n\t\t\t\tpool.clear()\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis._cellPools = {}\r\n\r\n\t\tthis._cellSizePools = {};\r\n\t}\r\n\r\n\t/**\r\n\t * Description: 预创建单元格，主要用在非固定size的单元格上\r\n\t */\r\n\tprivate _preCreateCell(dataIndex: number){\r\n\t\tlet id   = this._delegate.getCellIdentifer(dataIndex);\r\n\t\tlet cell = this._getCellViewFromPool(id);\r\n\t\tif (!cell) {\r\n\t\t\tcell = this._delegate.getCellView(dataIndex, id);\r\n\t\t}\r\n\t\t\r\n\t\tif(!cell){\r\n\t\t\treturn 1;\r\n\t\t}\r\n\r\n\t\t/*let size = this._getCellSizeFromPool(id);\r\n\t\tif(-1 == size){\r\n\t\t\tlet data = null;\r\n\t\t\tif (this._delegate.getCellData) {\r\n\t\t\t\tdata = this._delegate.getCellData(dataIndex);\r\n\t\t\t}\r\n\r\n\t\t\tcell.UpdateContent(data);\r\n\t\t\tsize = cell.GetCellSize();\r\n\t\t}\r\n\t\t\r\n\t\tif(!this._cellSizePools[id]){\r\n\t\t\tthis._cellSizePools[id] = size;\r\n\t\t}*/\r\n\r\n\t\tlet data = null;\r\n\t\tif (this._delegate.getCellData) {\r\n\t\t\tdata = this._delegate.getCellData(dataIndex);\r\n\t\t}\r\n\r\n\t\tcell.UpdateContent(data);\r\n\t\tlet size = cell.GetCellSize();\r\n\r\n\t\treturn size;\r\n\t}\r\n\r\n\t/**\r\n\t * Description: 生成cell\r\n\t * @param range \r\n\t */\r\n\tprivate* _generatorCell(range: Vec2){\r\n\t\tfor (let i = range.x; i <= range.y; i++) {\r\n\t\t\tyield this._addCellView(i);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Description: 分帧执行Generator逻辑\r\n\t * @param generator   生成器\r\n\t * @param duration    持续时间【每次执行Generator的操作时，最长可持续执行时长】\r\n\t * @returns \r\n\t */\r\n\tprivate _execute(generator: Generator, duration: number){\r\n\t\treturn new Promise<void>(resolve =>{\r\n\t\t\tlet gen = generator;\r\n\t\t\t//创建执行函数\r\n\t\t\tlet func = ()=>{\r\n\t\t\t\t //执行前，先记录开始时间戳\r\n\t\t\t\t let startTime = new Date().getTime();\r\n\t\t\t\t //然后一直从Generator中获取已经拆分好的代码段出来执行\r\n\t\t\t\t for(let iter = gen.next(); ; iter = gen.next()){\r\n\t\t\t\t\t //判断是否已经执行完所有Generator的小代码段\r\n\t\t\t\t\t //如果是的话，那么就表示任务完成\r\n\t\t\t\t\t if(null === iter || iter.done){\r\n\t\t\t\t\t\t resolve();\r\n\t\t\t\t\t\t return;\r\n\t\t\t\t\t }\r\n \r\n\t\t\t\t\t // 如果超过了，那么本帧就不在执行，开定时器，让下一帧再执行\r\n\t\t\t\t\t if(new Date().getTime() - startTime > duration){\r\n\t\t\t\t\t\t this.scheduleOnce(()=>{\r\n\t\t\t\t\t\t\t func();\r\n\t\t\t\t\t\t });\r\n\t\t\t\t\t }\r\n\t\t\t\t }\r\n\t\t\t};\r\n \r\n\t\t\t//运行执行函数\r\n\t\t\tfunc();\r\n\t\t});\r\n\t}\r\n\r\n\tprivate async _load() {\r\n\t\t// get all cell offset with spacing and padding\r\n\t\tconst dataLen = this._delegate.getCellNumber();\r\n\t\tif (dataLen <= 0) return;\r\n\r\n\t\tlet offset = this.headPadding;\r\n\t\tthis._cellsOffset = new Array<number>(dataLen);\r\n\t\tthis._cellsSize = new Array<number>(dataLen);\r\n\t\tfor (let i = 0; i < dataLen; i++) {\r\n\t\t\tlet s = this._delegate.getCellSize(i);\r\n\t\t\t//let s = this.bDynamicSize ? this._preCreateCell(i) : this._delegate.getCellSize(i);\r\n\t\t\tif(this.bDynamicSize && s == -1){\r\n\t\t\t\ts = this._preCreateCell(i);\r\n\t\t\t}\r\n\t\t\tthis._cellsSize[i] = s;\r\n\t\t\toffset = s + (i == 0 ? 0 : this.spacing) + offset;\r\n\t\t\tthis._cellsOffset[i] = offset;\r\n\t\t}\r\n\t\toffset += this.bottomPadding;\r\n\r\n\t\tif (this.direction == Direction.vertical) {\r\n\t\t\tthis._content.getComponent(UITransform).setContentSize(this.node.getComponent(UITransform).width, offset);\r\n\t\t} else {\r\n\t\t\tthis._content.getComponent(UITransform).setContentSize(offset, this.node.getComponent(UITransform).height);\r\n\t\t}\r\n\r\n\t\t// create visible cells\r\n\t\tconst range = this._getActiveCellIndexRange();\r\n\t\tthis._activeCellIndexRange = range;\r\n\r\n\t\t//分帧加载创建cell\r\n\t\tawait this._execute(this._generatorCell(range), 1);\r\n\t\t/*for (let i = range.x; i <= range.y; i++) {\r\n\t\t\tthis._addCellView(i);\r\n\t\t}*/\r\n\t}\r\n\r\n\tprivate async _refreshActiveCells() {\r\n\t\t// update current active cells with new scroll position\r\n\t\tconst range = this._getActiveCellIndexRange();\r\n\t\t// check if any cell need update\r\n\t\tif (range.equals(this._activeCellIndexRange)) return;\r\n\r\n\t\t// recycle all out of range cell\r\n\t\tlet i = 0;\r\n\t\twhile (i < this._activeCellViews.length) {\r\n\t\t\tlet cell = this._activeCellViews[i];\r\n\t\t\tif (cell.dataIndex < range.x || cell.dataIndex > range.y) {\r\n\t\t\t\tthis._recycleCell(i);\r\n\t\t\t} else {\r\n\t\t\t\ti++;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// add any not exist cell\r\n\t\t// !TODO: boost this part effecient\r\n\t\t/*for (let i = range.x; i <= range.y; i++) {\r\n\t\t\tlet needadd = true;\r\n\t\t\tfor (let j = 0; j < this._activeCellViews.length; j++) {\r\n\t\t\t\tif (this._activeCellViews[j].dataIndex == i) {\r\n\t\t\t\t\tneedadd = false;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (needadd) this._addCellView(i);\r\n\t\t}*/\r\n\t\tawait this._execute(this._generatorActiveCell(range), 1);\r\n\r\n\t\t// update current active cell range\r\n\t\tthis._activeCellIndexRange = range;\r\n\t}\r\n\r\n\t/**\r\n\t * Description: 生成激活的cell\r\n\t */\r\n\tprivate* _generatorActiveCell(range: Vec2){\r\n\t\tfor (let i = range.x; i <= range.y; i++) {\r\n\t\t\tlet needadd = true;\r\n\t\t\tfor (let j = 0; j < this._activeCellViews.length; j++) {\r\n\t\t\t\tif (this._activeCellViews[j].dataIndex == i) {\r\n\t\t\t\t\tneedadd = false;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (needadd){\r\n\t\t\t\tyield this._addCellView(i);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * remove one active cell from _activeCellViews array\r\n\t * @param cellIndex index of active cell views array\r\n\t */\r\n\tprivate _recycleCell(cellIndex:number ,allclean:boolean = false) {\r\n\t\t// !TODO: need store this cell in node pool\r\n\t\tif(cellIndex >= this._activeCellViews.length){\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tlet cell = this._activeCellViews[cellIndex];\r\n\t\tif(null === cell || undefined === cell){\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis._activeCellViews.splice(cellIndex, 1);\r\n\t\tcell.node.removeFromParent();\r\n\t\tif(allclean){\r\n\t\t\tcell.node.destroy();\r\n\t\t\tif(cell){cell.destroy();}\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tcell.dataIndex = -1;\r\n\t\tif (!this._cellPools[cell.cellIdentifier]) {\r\n\t\t\tthis._cellPools[cell.cellIdentifier] = new NodePool();\r\n\t\t}\r\n\t\tlet pool = this._cellPools[cell.cellIdentifier];\r\n\t\tpool.put(cell.node);\r\n\t}\r\n\r\n\tprivate _getCellViewFromPool(id:string): InfiniteCell | null {\r\n\t\tif (!this._cellPools[id]) return null;\r\n\t\tlet pool = this._cellPools[id];\r\n\t\tlet cellNode = pool.get();\r\n\t\tif (!cellNode) return null;\r\n\t\treturn cellNode.getComponent(InfiniteCell);\r\n\t}\r\n\r\n\tprivate _getCellSizeFromPool(id: string): number{\r\n\t\tif(!this._cellSizePools[id]){\r\n\t\t\treturn -1;\r\n\t\t}\r\n\r\n\t\tlet ret = this._cellSizePools[id];\r\n\t\treturn ret;\r\n\t}\r\n\r\n\t/**\r\n\t * Return vector2 for start and end cell index of current scroll position\r\n\t */\r\n\tpublic _getActiveCellIndexRange():Vec2 {\r\n\t\tlet startPos = this._scrollPosition;\r\n\t\tlet endPos = startPos + (this.direction == Direction.vertical ? this.node.getComponent(UITransform).height : this.node.getComponent(UITransform).width);\r\n\t\treturn new Vec2(this._getCellIndexOfPos(startPos), this._getCellIndexOfPos(endPos));\r\n\t}\r\n\r\n\tprivate _getCellIndexOfPos(pos:number): number {\r\n\t\t// !TODO: boost this function speed by using binary search\r\n\t\tif(!this._cellsOffset || this._cellsOffset.length <= 0){\r\n\t\t\treturn -1;\r\n\t\t}\r\n\r\n\t\tfor (let i = 0; i < this._cellsOffset.length; i++) {\r\n\t\t\tif (this._cellsOffset[i] >= pos) return i;\r\n\t\t}\r\n\t\treturn this._cellsOffset.length - 1;\r\n\t}\r\n\r\n\t/**\r\n\t * Get cell top position by its index\r\n\t * @param idx Cell index\r\n\t */\r\n\tprivate _getCellPosOfIndex(idx:number): number {\r\n\t\tif(!this._cellsOffset || this._cellsOffset.length <= 0){\r\n\t\t\treturn 0;\r\n\t\t}\r\n\r\n\t\treturn this._cellsOffset[idx] - this._cellsSize[idx];\r\n\t}\r\n\r\n\tprivate _addCellView(dataIndex:number) {\r\n\t\tconst dataLen = this._delegate.getCellNumber();\r\n\t\t// if(dataLen <= 1){\r\n\t\t// \treturn;\r\n\t\t// }\r\n\t\t\r\n\t\tlet id = this._delegate.getCellIdentifer(dataIndex);\r\n\t\tlet cell = this._getCellViewFromPool(id);\r\n\t\tif (!cell) {\r\n\t\t\tcell = this._delegate.getCellView(dataIndex, id);\r\n\t\t\tif(!cell){\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// cell.node.setAnchorPoint(0, 1);\r\n\t\t\tthis.setAnchorPoint(cell.node, this._cell_anchor_x, 1)\r\n\t\t\tcell.cellIdentifier = id;\r\n\t\t}\r\n\r\n\t\tcell.dataIndex = dataIndex;\r\n\t\tcell.enabled   = true;\r\n\t\tcell.node.name = `${dataIndex}`;\r\n\t\tthis._activeCellViews.push(cell);\r\n\t\tthis._content.addChild(cell.node);\r\n\t\tif (this.direction == Direction.vertical) {\r\n\t\t\t// cell.node.getPosition().x = this.sidePadding.x;\r\n\t\t\t// cell.node.getPosition().y = (this._cellsOffset[cell.dataIndex] - this._cellsSize[cell.dataIndex]) * -1;\r\n\t\t\tcell.node.setPosition(new Vec3(this.sidePadding.x,(this._cellsOffset[cell.dataIndex] - this._cellsSize[cell.dataIndex]) * -1,0))\r\n\t\t\tcell.node.getComponent(UITransform).setContentSize(this.node.getComponent(UITransform).width - this.sidePadding.x - this.sidePadding.y, this._cellsSize[dataIndex]);\r\n\t\t} else {\r\n\t\t\t// cell.node.getPosition().x = (this._cellsOffset[cell.dataIndex] - this._cellsSize[cell.dataIndex]);\r\n\t\t\t// cell.node.getPosition().y = this.sidePadding.x * -1;\r\n\t\t\tcell.node.setPosition(new Vec3((this._cellsOffset[cell.dataIndex] - this._cellsSize[cell.dataIndex]), this.sidePadding.x * -1,0))\r\n\t\t\tcell.node.getComponent(UITransform).setContentSize(this._cellsSize[dataIndex], this.node.getComponent(UITransform).height - this.sidePadding.x - this.sidePadding.y);\r\n\t\t}\r\n\r\n\t\tcell.dataIndex = dataIndex;\r\n\t\tthis._updateCellContent(cell);\r\n\t}\r\n\r\n\tprivate _updateActiveCellContent() {\r\n\t\tthis._activeCellViews.forEach(cell => {\r\n\t\t\tthis._updateCellContent(cell);\r\n\t\t});\r\n\t}\r\n\r\n\tprivate _updateCellContent(cell:InfiniteCell) {\r\n\t\tlet data = null\r\n\t\tif (this._delegate.getCellData) {\r\n\t\t\tdata = this._delegate.getCellData(cell.dataIndex);\r\n\t\t}\r\n\r\n\t\tcell.UpdateContent(data);\r\n\t}\r\n\r\n\t/**\r\n\t * Description: 根据child名称获取子节点\r\n\t */\r\n\tpublic findCellOfIdx(dataIdx: number): InfiniteCell{\r\n\t\tlet cell = this._content.getChildByName(`${dataIdx}`);\r\n\t\tif(cell){\r\n\t\t\treturn cell.getComponent(InfiniteCell);\r\n\t\t}\r\n\t\t\r\n\t\treturn null;\r\n\t}\r\n\r\n\tpublic checkOverflow(){\r\n\t\treturn this._content.getPosition().y > this.node.getComponent(UITransform).height || (this._content.getPosition().y == this.node.getComponent(UITransform).height && this._content.getComponent(UITransform).height > this.node.getComponent(UITransform).height)\r\n\t}\r\n\r\n\tpublic isAutoScrolling(){\r\n\t\treturn this._scrollView.isAutoScrolling()\r\n\t}\r\n\r\n\tpublic isScrolling(){\r\n\t\treturn this._scrollView.isScrolling()\r\n\t}\r\n\tpublic setAnchorPoint(node: Node, anchorX: number, anchorY: number) {\r\n\t\tlet dx = (anchorX - node.getComponent(UITransform).anchorX) * node.getComponent(UITransform).width;\r\n\t\tlet dy = (anchorY - node.getComponent(UITransform).anchorY) * node.getComponent(UITransform).height;\r\n\t\t// node.getPosition().x += dx;\r\n\t\t// node.getPosition().y += dy;\r\n\t\tnode.setPosition(new Vec3(node.getPosition().x += dx,node.getPosition().y += dy,0))\r\n\t\tfor (let child of node.children) {\r\n\t\t\t// child.getPosition().x -= dx;\r\n\t\t\t// child.getPosition().y -= dy;\r\n\t\t\tnode.setPosition(new Vec3(child.getPosition().x -= dx,child.getPosition().y -= dy,0))\r\n\t\t}\r\n\t\tnode.getComponent(UITransform).setAnchorPoint(new Vec2(anchorX, anchorY));\r\n\t}\r\n}"]}