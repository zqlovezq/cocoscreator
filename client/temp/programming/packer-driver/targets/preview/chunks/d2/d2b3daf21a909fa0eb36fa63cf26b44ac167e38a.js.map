{"version":3,"sources":["file:///C:/chickenStarClient/client/assets/scripts/Common/InfiniteList/InfiniteCell.ts"],"names":["_decorator","Component","ccclass","property","InfiniteCell","dataIndex","UpdateContent","data","GetScoreNode","GetCellSize"],"mappings":";;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;;;;;;;;;OACf;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBH,U;AAE9B;AACA;AACA;AACA;AACA;;yBAEsBI,Y,GADrBF,O,qBAAD,MACsBE,YADtB,SAC2CH,SAD3C,CACqD;AAAA;AAAA;;AACpD;AACD;AACA;AACA;AAJqD;;AAQpD;AACD;AACA;AAVqD,eAW7CI,SAX6C,GAW1B,CAAC,CAXyB;AAAA;;AAapD;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACCC,QAAAA,aAAa,CAACC,IAAD,EAAe,CAE3B;AAED;AACD;AACA;;;AACQC,QAAAA,YAAY,GAAQ;AAC1B,iBAAO,IAAP;AACA;AAED;AACD;AACA;;;AACQC,QAAAA,WAAW,GAAU;AAC3B,iBAAO,CAAP;AACA;;AAtCmD,O,iFAKnDN,Q;;;;;iBAC8B,E","sourcesContent":["import { _decorator, Component, Node } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\n\r\n/**\r\n * InfiniteCell base class\r\n * Author: Louis Huang\r\n * 每一个使用 InfiniteList 的用户，都需要实现这个 cell 的 interface\r\n */\r\n@ccclass\r\nexport default  class InfiniteCell extends Component {\r\n\t/**\r\n\t * cellIdentifier 是一个独特的字符串，用来表示这个 cell 使用的是哪种类型的资源，\r\n\t * 这样在同一个 scroll 中可以使用多种不同的 cell 类型\r\n\t */\r\n\t@property\r\n\tpublic cellIdentifier:string = \"\";\r\n\r\n\t/**\r\n\t * 表示这个 cell 使用的数据，在整个数据中的索引值\r\n\t */\r\n\tpublic dataIndex:number = -1;\r\n\r\n\t/**\r\n\t * 使用这个函数来更新当前的 Cell 内容，在这个函数被调用时，dataIndex 会指向正确的索引值，所以实现者，可以使用这个索引获得需要更新的数据\r\n\t * \r\n\t * @param data 用来更新这个 Cell 的数据，由使用者的 GetCellData 回调函数提供，如果没有提供这个回调函数，data 就是 null\r\n\t * \r\n\t * 需要注意的是，如果在 UpdateContent 中使用了异步函数获得结果来更新这个 Cell 时\r\n\t * 很有可能返回时，当前的 Cell 已经不再用来显示之前的数据了，所以这时需要在函数中\r\n\t * 使用一个本地变量记录当前的 dataIndex 并在回调函数返回时比较这两个值是否一致\r\n\t */\r\n\tUpdateContent(data:any):void{\r\n\t\t\r\n\t}\r\n\r\n\t/**\r\n\t * 获取积分节点位置\r\n\t */\r\n\tpublic GetScoreNode(): Node{\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * 获取单元格Size【垂直为高度，否则为宽度】\r\n\t */\r\n\tpublic GetCellSize(): number{\r\n\t\treturn 0;\r\n\t}\r\n}\r\n"]}