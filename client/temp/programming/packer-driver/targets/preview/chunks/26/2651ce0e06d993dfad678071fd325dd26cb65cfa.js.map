{"version":3,"sources":["file:///C:/chickenStarClient/client/assets/scripts/logic/fight/base/skill/SkillGroupCd.ts"],"names":["_decorator","CDTime","tab","FightMacro","EventMgr","FightEvent","ccclass","property","SkillGroupCd","absInfo","skillGroup","cd","isCDing","cdCb","setAbsInfo","info","inCd","cb","reset","breathTime","normalGroup","BreathTime","breathTimePercent","PERCENT","attrData","getAttr","AttrType","AttrType_BreathTimePercent","breathPer","AttrType_BreathPer","time","setLiftTime","Math","floor","onCdEnd","bind","setSpeed","updateProgress","getProgress","updateFrame","dt","per","emitFight","Fight_Skill_Cd_Progress","configId"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;;AAGAC,MAAAA,M,iBAAAA,M;;AACAC,MAAAA,G,iBAAAA,G;;AACAC,MAAAA,U,iBAAAA,U;;AACAC,MAAAA,Q,iBAAAA,Q;;AACAC,MAAAA,U,iBAAAA,U;;;;;;;;;OAGH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBP,U;AAE9B;AACA;;8BAEaQ,Y,WADZF,OAAO,CAAC,cAAD,C,gBAAR,MACaE,YADb,CAC0B;AAAA;AAAA,eAEtBC,OAFsB;AAAA,eAGtBC,UAHsB;AAAA,eAItBC,EAJsB,GAIT;AAAA;AAAA,iCAJS;AAAA,eAKtBC,OALsB,GAKH,KALG;AAAA,eAMtBC,IANsB;AAAA;;AAOtBC,QAAAA,UAAU,CAACC,IAAD,EAAiB;AACvB,eAAKN,OAAL,GAAeM,IAAf;AACH;;AAGDC,QAAAA,IAAI,CAACN,UAAD,EAA4BO,EAA5B,EAA0C;AAC1C,eAAKP,UAAL,GAAkBA,UAAlB;AACA,eAAKG,IAAL,GAAYI,EAAZ;AACA,eAAKL,OAAL,GAAe,IAAf;AAEA,eAAKD,EAAL,CAAQO,KAAR;AAEA,cAAIC,UAAU,GAAG,KAAKV,OAAL,CAAaW,WAAb,CAAyBC,UAA1C;AACA,cAAIC,iBAAiB,GAAI,CAAC;AAAA;AAAA,wCAAWC,OAAX,GAAqB,KAAKd,OAAL,CAAae,QAAb,CAAsBC,OAAtB,CAA8B;AAAA;AAAA,0BAAIC,QAAJ,CAAaC,0BAA3C,CAAtB,IAAgG;AAAA;AAAA,wCAAWJ,OAApI;AACA,cAAIK,SAAS,GAAI,CAAC;AAAA;AAAA,wCAAWL,OAAX,GAAqB,KAAKd,OAAL,CAAae,QAAb,CAAsBC,OAAtB,CAA8B;AAAA;AAAA,0BAAIC,QAAJ,CAAaG,kBAA3C,CAAtB,IAAwF;AAAA;AAAA,wCAAWN,OAApH;AACA,cAAIO,IAAI,GAAGX,UAAU,GAAGG,iBAAb,GAAiCM,SAA5C;AAEA,eAAKjB,EAAL,CAAQoB,WAAR,CAAoBC,IAAI,CAACC,KAAL,CAAWH,IAAX,CAApB,EAAsC,KAAKI,OAAL,CAAaC,IAAb,CAAkB,IAAlB,CAAtC;AACA,eAAKxB,EAAL,CAAQyB,QAAR,CAAiB,CAAjB;AACA,eAAKC,cAAL,CAAoB,KAAKC,WAAL,EAApB;AACH;;AAEDC,QAAAA,WAAW,CAACC,EAAD,EAAa;AACpB,eAAK7B,EAAL,CAAQ4B,WAAR,CAAoBC,EAApB;AACA,eAAKH,cAAL,CAAoB,KAAKC,WAAL,EAApB;AACH;;AAEDJ,QAAAA,OAAO,GAAG;AACN,eAAKG,cAAL,CAAoB,CAApB;AACA,eAAKzB,OAAL,GAAe,KAAf;AACA,eAAKC,IAAL,IAAa,KAAKA,IAAL,EAAb;AACH;;AAEDyB,QAAAA,WAAW,GAAG;AACV,iBAAO,KAAK3B,EAAL,CAAQ2B,WAAR,EAAP;AACH;;AAEDD,QAAAA,cAAc,CAACI,GAAD,EAAc;AACxB;AAAA;AAAA,oCAASC,SAAT,CAAmB;AAAA;AAAA,wCAAWC,uBAA9B,EAAuD,KAAKjC,UAAL,CAAgBkC,QAAvE,EAAiFH,GAAjF;AACH;;AA9CqB,O","sourcesContent":["import { _decorator, Component } from \"cc\";\nimport { RoleInfo } from \"../obj/role/role/RoleInfo\";\nimport { SkillGroupTab } from \"../../power/powerTab/SkillGroupTab\";\nimport { CDTime } from \"../cd/CDTime\";\nimport { tab } from \"../../../../Table/table_gen\";\nimport { FightMacro } from \"../../define/FightDefine\";\nimport { EventMgr } from \"../../../mgr/EventMgr\";\nimport { FightEvent } from \"../../define/FightEvent\";\n\n\nconst { ccclass, property } = _decorator;\n\n/** 技能组CD \n*/\n@ccclass('SkillGroupCd')\nexport class SkillGroupCd {\n\n    absInfo: RoleInfo\n    skillGroup: SkillGroupTab\n    cd: CDTime = new CDTime()\n    isCDing: boolean = false\n    cdCb: Function\n    setAbsInfo(info: RoleInfo) {\n        this.absInfo = info\n    }\n\n\n    inCd(skillGroup: SkillGroupTab, cb: Function) {\n        this.skillGroup = skillGroup\n        this.cdCb = cb\n        this.isCDing = true\n\n        this.cd.reset()\n\n        let breathTime = this.absInfo.normalGroup.BreathTime\n        let breathTimePercent = ((FightMacro.PERCENT - this.absInfo.attrData.getAttr(tab.AttrType.AttrType_BreathTimePercent)) / FightMacro.PERCENT)\n        let breathPer = ((FightMacro.PERCENT + this.absInfo.attrData.getAttr(tab.AttrType.AttrType_BreathPer)) / FightMacro.PERCENT)\n        let time = breathTime * breathTimePercent / breathPer\n\n        this.cd.setLiftTime(Math.floor(time), this.onCdEnd.bind(this))\n        this.cd.setSpeed(1)\n        this.updateProgress(this.getProgress())\n    }\n\n    updateFrame(dt: number) {\n        this.cd.updateFrame(dt)\n        this.updateProgress(this.getProgress())\n    }\n\n    onCdEnd() {\n        this.updateProgress(1)\n        this.isCDing = false\n        this.cdCb && this.cdCb()\n    }\n\n    getProgress() {\n        return this.cd.getProgress()\n    }\n\n    updateProgress(per: number) {\n        EventMgr.emitFight(FightEvent.Fight_Skill_Cd_Progress, this.skillGroup.configId, per)\n    }\n}"]}