{"version":3,"sources":["file:///C:/chickenStarClient/client/assets/scripts/logic/guide/GuideCommand.ts"],"names":["IsInFightScene","scene","director","getScene","name","rookie","getComponentInChildren","enabled","IsInMainScene","EnableTouchMask","ins","touchMask","active","resetTouchMask","DisableTouchMask","WaitEnterScene","sceneName","callback","WaitSceneLoaded","checkFunc","unLocal","SceneLoaded","onLocal","SkipCommand","step","skip_cmd","WaitFightResLoad","Promise","resolve","FightResLoadComplete","finish","WaitShowPop","ShowPop","WaitHidePop","hidePop","WaitHideHeroPop","hideHeroPop","WaitShowMonster","ShowMonster","showMonster","WaitJadeDrop","JadeDrop","WaitHeroRevive","ReviveHero","WaitBoss","onFight","Boss_Enter","heroInTeam","WaitFightWin","FightWin","waitOnlyMainView","checkMainView","DisableGuideController","node","EnableGuideController","_decorator","instantiate","log","Node","Prefab","Animation","UITransform","v3","GuideController","FightScene","EventMgr","LocalEvent","LoadResAsync","FightEvent","GuideDialogue","MainScene","tab","PlayerControl","ComicControl","BulletControl","ccclass","property","Command","GuideCommand","getFunc","cmd","cmdFunc","None","none","ClickAnywhere","Click","clickFunc","CircleClick","CircleClickNoClick","Dialogue","dialogueFunc","DialogueNonmodal","Serial","serial","Parallel","parallel","Some","some","Anim","RunComic","guide","args","roles","getRoles","i","length","emitFight","ReviveByItemid","info","configTab","Id","parentNode","getChildByName","addComic","GuideShowNode","GuideShow","addChild","anim","getComponent","play","on","EventType","FINISHED","e","removeFromParent","destroy","modal","dialogueNode","dialoguePre","dialogue","setDialogude","async","eachSeries","command","cb","_processCommand","error","each","err","result","guideNode","fingerToNode","TargetNode","once","TOUCH_END","event","pos","getData","GetKeyValue_ConfigTable","WanDaoLocation","bulletTab","getLeader","skillPowers","createTypeAnyId","PowerType","PowerType_BulletTable","clickEmitBullet","targetOff","find","fingerActive","holeActive","clickAnyWhere","coercive","isCircle","touchNode","scale","node_jump","convertToWorldSpaceAR","position","sendClickSkill"],"mappings":"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","sourcesContent":["import { _decorator, director, instantiate, log, Node, Prefab, Animation, error, UITransform, Layers, v3 } from 'cc';\r\nimport { GuideController } from './GuideController';\r\nimport { FightScene } from '../../scene/FightScene';\r\nimport { EventMgr } from '../mgr/EventMgr';\r\nimport { LocalEvent } from '../define/LocalEvent';\r\nimport { LoadResAsync } from '../mgr/ResMgr';\r\nimport { FightEvent } from '../fight/define/FightEvent';\r\nimport { GuideDialogue } from './GuideDialogue';\r\nimport { MainScene } from '../../scene/MainScene';\r\nimport { tab } from '../../Table/table_gen';\r\nimport { PlayerControl } from '../fight/base/obj/role/role/PlayerControl';\r\nimport { ComicControl } from '../../Common/script/ComicControl';\r\nimport { BulletTab } from '../fight/power/powerTab/BulletTab';\r\nimport { BuffControl } from '../fight/base/buff/BuffControl';\r\nimport { BulletControl } from '../fight/base/obj/bullet/BulletControl';\r\nimport { RoleData } from '../model/role/RoleData';\r\nimport { UIMgr } from '../mgr/UIMgr';\r\nimport { ViewName } from '../define/ViewDefine';\r\nconst { ccclass, property } = _decorator;\r\ninterface DialogueParam {\r\n    id: number | number[];\r\n    autoHide?: boolean;\r\n}\r\nexport enum Command {\r\n    None = 0, //什么都不做，只用于延时\r\n    Click,\r\n    ClickNoMask, //同Click，只是没有黑色半透明遮罩\r\n    ClickAnywhere,\r\n    Dialogue,\r\n    DialogueNonmodal, //非模态对话\r\n    Serial, //串行命令\r\n    Parallel, //并行命令\r\n    Some, //任意一个命令完成就算完成了\r\n    Custom,\r\n    ReportedEvent, //上报埋点事件\r\n    Anim,          //开场动画\r\n    CircleClick,    //圆形点击\r\n    CircleClickNoClick,//只是单独的圆形遮罩\r\n    ReviveHero, //  复活小鸡\r\n    RunComic,    // 漫画\r\n}\r\n@ccclass('GuideCommand')\r\nexport class GuideCommand {\r\n    public static getFunc(cmd: Command): Function {\r\n        let cmdFunc: Function;\r\n        switch (cmd) {\r\n            case Command.None: {\r\n                cmdFunc = GuideCommand.none;\r\n                break\r\n            }\r\n            case Command.ClickAnywhere: {\r\n                cmdFunc = GuideCommand.ClickAnywhere;\r\n                break;\r\n            }\r\n            case Command.Click: {\r\n                cmdFunc = GuideCommand.clickFunc(true, true, false);\r\n                break;\r\n            }\r\n            case Command.ReviveHero: {\r\n                cmdFunc = GuideCommand.ReviveHero();\r\n                break;\r\n            }\r\n            case Command.CircleClick: {\r\n                cmdFunc = GuideCommand.clickFunc(true, true, false, true, true);\r\n                break;\r\n            }\r\n            case Command.CircleClickNoClick: {\r\n                cmdFunc = GuideCommand.CircleClickNoClick();\r\n                break;\r\n            }\r\n            case Command.Dialogue: {\r\n                cmdFunc = GuideCommand.dialogueFunc(true);\r\n                break;\r\n            }\r\n            case Command.DialogueNonmodal: {\r\n                cmdFunc = GuideCommand.dialogueFunc(false);\r\n                break;\r\n            }\r\n            case Command.Serial: {\r\n                cmdFunc = GuideCommand.serial;\r\n                break;\r\n            }\r\n            case Command.Parallel: {\r\n                cmdFunc = GuideCommand.parallel;\r\n                break;\r\n            }\r\n            case Command.Some: {\r\n                cmdFunc = GuideCommand.some;\r\n                break;\r\n            }\r\n            case Command.Anim: {\r\n                cmdFunc = GuideCommand.Anim();\r\n                break;\r\n            }\r\n            case Command.RunComic: {\r\n                cmdFunc = GuideCommand.RunComic();\r\n                break;\r\n            }\r\n        }\r\n        return cmdFunc;\r\n    }\r\n    static none(guide: GuideController, args, callback: Function) {\r\n        callback();\r\n    }\r\n    static ReviveHero() {\r\n        return async function (guide: GuideController, args: number[], callback?: Function) {\r\n            const roles = PlayerControl.ins.getRoles();\r\n            for (let i = 0; i < roles.length; i++) {\r\n                EventMgr.emitFight(FightEvent.ReviveByItemid, roles[i].info.configTab.Id);\r\n            }\r\n            callback();\r\n        }\r\n    }\r\n    static RunComic() {\r\n        return async function (guide: GuideController, args: number | number[] | DialogueParam, callback?: Function) {\r\n            const parentNode = guide.node.getChildByName('dialogudeNode')\r\n            ComicControl.ins.addComic(1, parentNode, callback);\r\n        }\r\n    }\r\n    static Anim() {\r\n        return async function (guide: GuideController, args: number | number[] | DialogueParam, callback?: Function) {\r\n            const parentNode = guide.node.getChildByName('dialogudeNode')\r\n            let GuideShowNode = parentNode.getChildByName(\"GuideShow\")\r\n            if (!GuideShowNode) {\r\n                let GuideShow = await LoadResAsync('prefab/guide/GuideShow', Prefab)\r\n                GuideShowNode = instantiate(GuideShow)\r\n                GuideShowNode.name = \"GuideShow\";\r\n                guide.node.active = true;\r\n                parentNode.addChild(GuideShowNode)\r\n            }\r\n            const anim = GuideShowNode.getComponent(Animation);\r\n            anim.play(\"guideShowAni\");\r\n            anim.on(Animation.EventType.FINISHED, e => {\r\n                callback();\r\n                anim.node.removeFromParent();\r\n                anim.node.destroy();\r\n            })\r\n        }\r\n    }\r\n    static dialogueFunc(modal: boolean) {\r\n        return async function (guide: GuideController, args: string, callback?: Function) {\r\n            const parentNode = guide.node.getChildByName('dialogudeNode')\r\n            let dialogueNode = parentNode.getChildByName(\"GuideDialogue\")\r\n            if (!dialogueNode) {\r\n                let dialoguePre = await LoadResAsync('prefab/guide/GuideDialogue', Prefab)\r\n                dialogueNode = instantiate(dialoguePre)\r\n                dialogueNode.name = \"GuideDialogue\";\r\n                guide.node.active = true;\r\n                parentNode.addChild(dialogueNode)\r\n            }\r\n            let dialogue: GuideDialogue = dialogueNode.getComponent(GuideDialogue);\r\n            if (modal) {\r\n                dialogue.setDialogude(args, callback);\r\n            } else {\r\n                dialogue.setDialogude(args, null);\r\n                callback();\r\n            }\r\n        }\r\n    }\r\n    static serial(guide: GuideController, args: object[], callback: Function) {\r\n        async.eachSeries(args, (command: any, cb) => {\r\n            guide._processCommand(command.cmd, command.args, cb);\r\n        }, (error) => {\r\n            callback(error)\r\n        })\r\n    }\r\n\r\n    static parallel(guide: GuideController, args: object[], callback: Function) {\r\n        async.each(args, (command: any, cb) => {\r\n            guide._processCommand(command.cmd, command.args, cb);\r\n        }, (error) => {\r\n            callback(error)\r\n        })\r\n    }\r\n\r\n    static some(guide: GuideController, args: object[], callback: Function) {\r\n        async.some(args, (command: any, cb) => {\r\n            guide._processCommand(command.cmd, command.args, err => {\r\n                cb(err, true)\r\n            });\r\n        }, (err, result) => {\r\n            callback(err)\r\n        })\r\n    }\r\n    static ClickAnywhere(guide: GuideController, args, callback: Function) {\r\n        const guideNode = guide.node;\r\n        guide.fingerToNode(guideNode, false, false);\r\n        guide.TargetNode = guideNode;\r\n        guideNode.once(Node.EventType.TOUCH_END, (event) => {\r\n            if (args === \"CreateBullet\") {\r\n                // 复活所有小鸡\r\n                // const roles = PlayerControl.ins.getRoles();\r\n                // for (let i = 0; i < roles.length; i++) {\r\n                //     // const abs = roles[i].info.abs;\r\n                //     const heroId = roles[i].info.configTab.Id;\r\n                //     EventMgr.emitFight(FightEvent.ReviveByItemid, heroId);\r\n                //     // if(abs.isDead){\r\n                //     //     EventMgr.emitFight(FightEvent.ReviveByItemid, heroId);\r\n                //     // }\r\n                // }\r\n                const pos = tab.getData().GetKeyValue_ConfigTable().WanDaoLocation;\r\n                let bulletTab = PlayerControl.ins.getLeader().info.skillPowers.createTypeAnyId(tab.PowerType.PowerType_BulletTable, 45) as BulletTab\r\n                BulletControl.ins.clickEmitBullet(bulletTab, PlayerControl.ins.getLeader(), v3(pos[0], pos[1]))\r\n            }\r\n            guide.TargetNode = null;\r\n            guideNode.targetOff(guideNode);\r\n            callback();\r\n        }, this, true);\r\n    }\r\n    protected static CircleClickNoClick() {\r\n        return function (guide: GuideController, args: string, callback: Function) {\r\n            guide.TargetNode = null;\r\n            //定位节点\r\n            guide.find(args, (node: Node, error) => {\r\n                if (error) {\r\n                    callback(error);\r\n                    return;\r\n                }\r\n                //手指动画\r\n                guide.fingerToNode(node, true, true, true);\r\n                callback();\r\n            });\r\n        }\r\n    }\r\n    protected static clickFunc(fingerActive: boolean, holeActive: boolean, clickAnyWhere: boolean, coercive = true, isCircle?: boolean) {\r\n        return function (guide: GuideController, args: string, callback: Function) {\r\n            guide.TargetNode = null;\r\n            //定位节点\r\n            guide.find(args, (node: Node, error) => {\r\n                if (error) {\r\n                    callback(error);\r\n                    return;\r\n                }\r\n                let touchNode = clickAnyWhere ? guide.node : node;\r\n                // guide.setFingerNodeOffsetX(0);\r\n                //手指动画\r\n                let scale = 0;\r\n                if (args === \"Canvas/rootNode/uiNode/RoguePop/select_layout/RogueHeroItem1\" || args === \"Canvas/rootNode/uiNode/RoguePop/select_layout/RogueHeroItem0\") {\r\n                    scale = 0.9;\r\n                }\r\n                guide.fingerToNode(node, fingerActive, holeActive, isCircle, scale);\r\n                guide.TargetNode = node;\r\n                GuideController.ins.node_jump.active = true;\r\n                touchNode.once(Node.EventType.TOUCH_END, (event) => {\r\n                    log('节点被点击');\r\n                    guide.TargetNode = null;\r\n                    node.targetOff(node);\r\n                    if (args === \"FightRootView/rootNode/objects/Monster\") {\r\n                        const pos = node.getComponent(UITransform).convertToWorldSpaceAR(node.position)\r\n                        PlayerControl.ins.getLeader().sendClickSkill(pos)\r\n                    }\r\n                    GuideController.ins.node_jump.active = false;\r\n                    callback();\r\n                }, node, true);\r\n                if (!coercive) {\r\n                    guide.touchMask.active = false;\r\n                }\r\n            });\r\n        }\r\n    }\r\n}\r\nexport function IsInFightScene() {\r\n    let scene = director.getScene()\r\n    if (scene.name != \"FightScene\") {\r\n        return false;\r\n    } else {\r\n        let rookie = scene.getComponentInChildren(FightScene)\r\n        if (rookie && rookie.enabled) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nexport function IsInMainScene() {\r\n    let scene = director.getScene()\r\n    if (scene.name != \"MainScene\") {\r\n        return false;\r\n    } else {\r\n        let rookie = scene.getComponentInChildren(MainScene)\r\n        if (rookie && rookie.enabled) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nexport function EnableTouchMask() {\r\n    GuideController.ins.touchMask.active = true;\r\n    GuideController.ins.resetTouchMask();\r\n}\r\nexport function DisableTouchMask() {\r\n    GuideController.ins.touchMask.active = false;\r\n}\r\nexport function WaitEnterScene(sceneName: string, callback: Function) {\r\n    let scene = director.getScene();\r\n    if (scene.name == sceneName) {\r\n        callback()\r\n    } else {\r\n        WaitSceneLoaded(sceneName, callback)\r\n    }\r\n}\r\nfunction WaitSceneLoaded(sceneName: string, callback: Function) {\r\n    let checkFunc = function (name: string) {\r\n        if (sceneName == name) {\r\n            EventMgr.unLocal(LocalEvent.SceneLoaded, checkFunc, GuideController.ins)\r\n            callback();\r\n        }\r\n    }\r\n    EventMgr.onLocal(LocalEvent.SceneLoaded, checkFunc, GuideController.ins)\r\n}\r\nexport function SkipCommand(step: any) {\r\n    step.skip_cmd = true;\r\n}\r\n// 等待战斗资源加载完成\r\nexport function WaitFightResLoad(): Promise<boolean> {\r\n    return new Promise<boolean>(resolve => {\r\n        EventMgr.onLocal(LocalEvent.FightResLoadComplete, (finish: boolean) => {\r\n            resolve(finish)\r\n        }, GuideController.ins, true)\r\n    })\r\n}\r\n// 等待弹窗打开\r\nexport function WaitShowPop(): Promise<boolean> {\r\n    EventMgr.unLocal(LocalEvent.ShowPop);\r\n    return new Promise<boolean>(resolve => {\r\n        EventMgr.onLocal(LocalEvent.ShowPop, (finish: boolean) => {\r\n            EventMgr.unLocal(LocalEvent.ShowPop);\r\n            resolve(finish)\r\n        }, GuideController.ins, true)\r\n    })\r\n}\r\n// 等待弹窗关闭\r\nexport function WaitHidePop(): Promise<boolean> {\r\n    EventMgr.unLocal(LocalEvent.hidePop);\r\n    return new Promise<boolean>(resolve => {\r\n        EventMgr.onLocal(LocalEvent.hidePop, (finish: boolean) => {\r\n            EventMgr.unLocal(LocalEvent.hidePop);\r\n            resolve(finish)\r\n        }, GuideController.ins, true)\r\n    })\r\n}\r\nexport function WaitHideHeroPop(): Promise<boolean> {\r\n    return new Promise<boolean>(resolve => {\r\n        EventMgr.onLocal(LocalEvent.hideHeroPop, (finish: boolean) => {\r\n            EventMgr.unLocal(LocalEvent.hideHeroPop);\r\n            resolve(finish)\r\n        }, GuideController.ins, true)\r\n    })\r\n}\r\n// 等待出怪\r\nexport function WaitShowMonster(): Promise<boolean> {\r\n    return new Promise<boolean>(resolve => {\r\n        EventMgr.onLocal(LocalEvent.ShowMonster, (finish: boolean) => {\r\n            // 删除监听怪物出现事件\r\n            EventMgr.unLocal(LocalEvent.ShowMonster);\r\n            resolve(finish)\r\n            GuideController.ins.showMonster = true;\r\n        }, GuideController.ins, true)\r\n    })\r\n}\r\n// 羽毛掉落\r\nexport function WaitJadeDrop(): Promise<boolean> {\r\n    EventMgr.unLocal(LocalEvent.JadeDrop);\r\n    return new Promise<boolean>(resolve => {\r\n        EventMgr.onLocal(LocalEvent.JadeDrop, (finish: boolean) => {\r\n            EventMgr.unLocal(LocalEvent.JadeDrop);\r\n            resolve(finish)\r\n        }, GuideController.ins, true)\r\n    })\r\n}\r\n// 等待小鸡复活\r\nexport function WaitHeroRevive(): Promise<boolean> {\r\n    return new Promise<boolean>(resolve => {\r\n        EventMgr.onLocal(LocalEvent.ReviveHero, (finish: boolean) => {\r\n            EventMgr.unLocal(LocalEvent.ReviveHero);\r\n            resolve(finish)\r\n        }, GuideController.ins, true)\r\n    })\r\n}\r\n// 等待boss出现\r\nexport function WaitBoss(): Promise<boolean> {\r\n    return new Promise<boolean>(resolve => {\r\n        EventMgr.onFight(FightEvent.Boss_Enter, (finish: boolean) => {\r\n            resolve(finish)\r\n        }, GuideController.ins, true)\r\n    })\r\n}\r\n// 等待英雄上阵\r\nexport function heroInTeam(): Promise<boolean> {\r\n    return new Promise<boolean>(resolve => {\r\n        EventMgr.onLocal(LocalEvent.heroInTeam, (finish: boolean) => {\r\n            EventMgr.unLocal(LocalEvent.heroInTeam);\r\n            resolve(finish)\r\n        }, GuideController.ins, true)\r\n    })\r\n}\r\n// 等待战斗胜利\r\nexport function WaitFightWin(): Promise<boolean> {\r\n    EventMgr.unLocal(LocalEvent.FightWin);\r\n    return new Promise<boolean>(resolve => {\r\n        EventMgr.onLocal(LocalEvent.FightWin, (finish: boolean) => {\r\n            EventMgr.unLocal(LocalEvent.FightWin);\r\n            resolve(finish)\r\n        }, GuideController.ins, true)\r\n    })\r\n}\r\n// 等待当前主界面只有一个mainView\r\nexport function waitOnlyMainView(): Promise<boolean> {\r\n    return new Promise<boolean>(resolve => {\r\n        EventMgr.onLocal(LocalEvent.checkMainView, (finish: boolean) => {\r\n            EventMgr.unLocal(LocalEvent.checkMainView);\r\n            resolve(finish)\r\n        }, GuideController.ins, true)\r\n    })\r\n}\r\nexport function DisableGuideController() {\r\n    GuideController.ins.node.active = false;\r\n}\r\nexport function EnableGuideController() {\r\n    GuideController.ins.node.active = true;\r\n}\r\n"]}