{"version":3,"sources":["file:///C:/chickenStarClient/client/assets/scripts/logic/fight/base/obj/role/role/Role.ts"],"names":["Layers","Node","PhysicsSystem","Size","Sprite","UITransform","Vec3","_decorator","AbsObjType","AbsRole","AbsStateType","RoleState1Idle","tab","RoleState3Attack","RoleState4Dead","RoleState5Born","RoleState6Revive","EventMgr","FightEvent","RoleState7SkillCd","CollisionGroup","RoleState8NoActive","RoleState9BackJump","RoleState10Vertigo","PlayerControl","PREVIEW","ccclass","property","tempPos","Role","objType","role","roleHead","barItem","info","holdEffect","isShotIcon","start","reset","remove","node","destroy","initMachine","stateMachine","addState","setObjInfo","_info","setBounds","configTab","Bounds","setStateAnimId","roleIdle","Idle","roleDead","Dead","RoleBorn","Born","RoleRevive","Revive","RoleSkillCd","Idle2","RoleVertigo","init","speed","group","PhysicsGroup","setTrigger","initBoby","changeState","RoleNoActive","onDead","isActive","emitFight","add_DeadEffect","onRevive","remove_DeadEffect","Hit_Effect_Add","getData","GetKeyValue_ConfigTable","Resurrectioneffect","avatarShadow","active","updateFrame","dt","onDetectorToEnemy","enemys","onCollect","b","onHitDrop","dropObj","sendClickSkill","uiPos","isDead","isState","useWeaponSkill","ins","getClickNodePos","checkNormalCd","Fight_Skill_Cding","isAttack","roleAttack","onLevelUp","console","log","updateActive","updateHP","set","position","y","changeHp","hpAcive","isBool","updateSkillCd","pro","changeSkillCd","showShotPos","grayNode","layer","Enum","DEFAULT","uitrans","addComponent","setContentSize","addChild","spr","sizeMode","SizeMode","CUSTOM","setTexture","getShotPos","subtract","getPosition","getBonePos","boneName","ShotPos","length","ZERO","x","HitPos"],"mappings":"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","sourcesContent":["import { Color, Input, Layers, Node, PhysicsSystem, Prefab, Quat, Size, Sprite, UITransform, Vec2, Vec3, _decorator, sp, v3, view } from 'cc';\nimport { CollisionObject, Trigger } from '../../../../../../framework/collision/CollisionObject';\nimport { AbsObj, AbsObjType } from '../../AbsObj';\nimport { AbsRole } from '../AbsRole';\nimport { AbsState, AbsStateType } from '../../state/AbsState';\nimport { RoleState1Idle } from './state/RoleState1Idle';\nimport { tab } from '../../../../../../Table/table_gen';\nimport { RoleState3Attack } from './state/RoleState3Attack';\nimport { RoleState4Dead } from './state/RoleState4Dead';\nimport { RoleState5Born } from './state/RoleState5Born';\nimport { RoleState6Revive } from './state/RoleState6Revive';\nimport { EventMgr } from '../../../../../mgr/EventMgr';\nimport { FightEvent } from '../../../../define/FightEvent';\nimport { RoleState7SkillCd } from './state/RoleState7SkillCd';\nimport { RoleInfo } from './RoleInfo';\nimport { CollisionGroup } from '../../../../define/FightDefine';\nimport { FightUITeamItem } from '../../../../view/common/FightUITeamItem';\nimport { RoleState8NoActive } from './state/RoleState8NoActive';\nimport { RoleState9BackJump } from './state/RoleState9BackJump';\nimport { RoleState10Vertigo } from './state/RoleState10Vertigo';\nimport { FightBarItem } from '../../../../view/common/FightBarItem';\nimport { PlayerControl } from './PlayerControl';\nimport { HoldTimeEffectUI } from '../../../effect/HoldTimeEffectUI';\nimport { Func } from '../../../../../utils/Func';\nimport { PREVIEW } from 'cc/env';\n\nconst { ccclass, property } = _decorator;\nconst tempPos = new Vec3(0, 0, 0);\n@ccclass('Role')\nexport class Role extends AbsRole {\n    objType: AbsObjType = AbsObjType.role;\n\n    roleHead: FightUITeamItem\n    barItem: FightBarItem\n    info: RoleInfo\n\n    holdEffect: HoldTimeEffectUI\n    protected start(): void {\n    }\n\n    reset(): void {\n        if (this.holdEffect) {\n            this.holdEffect.remove()\n            this.holdEffect = null\n        }\n        if (this.barItem) {\n            this.barItem.node.destroy()\n            this.barItem = null\n        }\n\n        super.reset()\n    }\n\n    initMachine() {\n        super.initMachine()\n\n        this.stateMachine.addState(new RoleState1Idle())\n        this.stateMachine.addState(new RoleState3Attack())\n        this.stateMachine.addState(new RoleState4Dead())\n        this.stateMachine.addState(new RoleState5Born())\n        this.stateMachine.addState(new RoleState6Revive())\n        this.stateMachine.addState(new RoleState7SkillCd())\n        this.stateMachine.addState(new RoleState8NoActive())\n        this.stateMachine.addState(new RoleState9BackJump())\n        this.stateMachine.addState(new RoleState10Vertigo())\n    }\n\n    setObjInfo(_info: RoleInfo) {\n        super.setObjInfo(_info)\n        this.setBounds(this.info.configTab.Bounds)\n\n        this.setStateAnimId(AbsStateType.roleIdle, this.info.configTab.Idle)\n        this.setStateAnimId(AbsStateType.roleDead, this.info.configTab.Dead)\n        this.setStateAnimId(AbsStateType.RoleBorn, this.info.configTab.Born)\n        this.setStateAnimId(AbsStateType.RoleRevive, this.info.configTab.Revive)\n        this.setStateAnimId(AbsStateType.RoleSkillCd, this.info.configTab.Idle2)\n        this.setStateAnimId(AbsStateType.RoleVertigo, this.info.configTab.Idle)\n    }\n\n    init() {\n        this.speed = 200\n        this.group = PhysicsSystem.PhysicsGroup[CollisionGroup.role]\n\n        this.setTrigger(true)\n        this.initBoby()\n\n        this.changeState(AbsStateType.RoleNoActive)\n    }\n\n    /** 死亡 */\n    onDead() {\n        super.onDead()\n        if (this.barItem) {\n            this.barItem.isActive = false\n        }\n        EventMgr.emitFight(FightEvent.add_DeadEffect, this)\n    }\n\n    /** 复活 */\n    onRevive() {\n        if (this.barItem) {\n            this.barItem.isActive = true\n        }\n        EventMgr.emitFight(FightEvent.remove_DeadEffect, this)\n        EventMgr.emitFight(FightEvent.Hit_Effect_Add, tab.getData().GetKeyValue_ConfigTable().Resurrectioneffect, this)\n        this.changeState(AbsStateType.RoleRevive)\n        this.avatarShadow.node.active = true\n    }\n\n    updateFrame(dt: number): void {\n        super.updateFrame(dt)\n        if (this.holdEffect) {\n            this.holdEffect.updateFrame(dt)\n        }\n    }\n\n    //进入警戒范围\n    onDetectorToEnemy(enemys: AbsRole[]) {\n    }\n\n    //掉落物进入拾取范围\n    onCollect(b: CollisionObject) {\n\n    }\n\n    /** 触碰掉落 */\n    onHitDrop(dropObj: AbsRole) {\n\n    }\n\n    sendClickSkill(uiPos: Vec3) {\n        if (this.isDead) {\n            return\n        }\n        if (this.isState(AbsStateType.RoleVertigo)) {\n            return\n        }\n        this.info.useWeaponSkill(PlayerControl.ins.getClickNodePos())\n        if (this.info.checkNormalCd()) {\n            EventMgr.emitFight(FightEvent.Fight_Skill_Cding, uiPos)\n            return\n        }\n        if (this.isAttack()) {\n            return\n        }\n        this.changeState(AbsStateType.roleAttack)\n    }\n\n    onLevelUp() {\n        console.log(\"播放升级特效---\")\n    }\n    updateActive() {\n        super.updateActive()\n        if (this.barItem) {\n            this.barItem.node.active = this.isActive\n            this.barItem.isActive = true\n            this.updateHP()\n            if (this.isActive) {\n                tempPos.set(this.node.position)\n                tempPos.y += 125\n                this.barItem.node.position = tempPos\n            }\n        }\n\n    }\n\n    updateHP() {\n        if (this.barItem) {\n            this.barItem.changeHp()\n        }\n\n    }\n    hpAcive(isBool: Boolean) {\n\n    }\n\n    updateSkillCd(pro: number) {\n        if (this.barItem) {\n            this.barItem.changeSkillCd(pro)\n        }\n    }\n\n    isShotIcon: boolean = false\n    showShotPos() {\n        if (!PREVIEW) {\n            return\n        }\n        if (this.isShotIcon) {\n            return\n        }\n\n        this.isShotIcon = true\n\n        let grayNode = new Node(\"GrayNode\")\n        grayNode.layer = Layers.Enum.DEFAULT\n        let uitrans = grayNode.addComponent(UITransform)\n        uitrans.setContentSize(new Size(5, 5))\n\n        this.node.addChild(grayNode)\n        let spr = grayNode.addComponent(Sprite)\n        spr.sizeMode = Sprite.SizeMode.CUSTOM\n        spr.setTexture(\"textrue/bg_1\")\n        tempPos.set(this.getShotPos())\n        tempPos.subtract(this.getPosition())\n        grayNode.position = tempPos\n\n    }\n\n    getBonePos(boneName: string){\n        if (boneName == \"root/point_attack\" && this.info.configTab.ShotPos.length){\n            tempPos.set(Vec3.ZERO)\n            tempPos.x = this.info.configTab.ShotPos[0] || 0\n            tempPos.y = this.info.configTab.ShotPos[1] || 0\n            return tempPos\n        }else if (boneName == \"root/point_beattack\" && this.info.configTab.HitPos.length){\n            tempPos.set(Vec3.ZERO)\n            tempPos.x = this.info.configTab.HitPos[0] || 0\n            tempPos.y = this.info.configTab.HitPos[1] || 0\n            return tempPos\n        }else{\n            return this.getBonePos(boneName)\n        }\n    }\n}\n\n"]}