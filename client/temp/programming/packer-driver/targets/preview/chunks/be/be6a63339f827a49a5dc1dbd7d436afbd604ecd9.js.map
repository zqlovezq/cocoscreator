{"version":3,"sources":["file:///C:/chickenStarClient/client/assets/scripts/logic/fight/view/common/FightUITeamItem.ts"],"names":["_decorator","Component","js","Label","Node","EventMgr","FightEvent","FightUITeamSkillItem","FightRoleTeamItem","FightData","ShowTips","UIMgr","tab","ItemData","FightMsgControl","AdMgr","FightRootControl","LangMgr","ccclass","property","FightUITeamItem","roleInfo","onLoad","onFight","Fight_Role_Dead","onFight_Role_Dead","Fight_Initiative_Revive","onFight_Role_Revive","Role_Add_Weapon_SkillGroup","onRole_Add_Weapon_SkillGroup","Role_change_SkillGroup","onRole_change_SkillGroup","Change_Revice_Count","updateReviveShow","setDeadActive","isshow","deadNode","active","skillNode","onDestroy","unTarget","setRoleInfo","info","skill1","node","skill2","item","setData","heroFightInfo","setSkill","normalGroup","weaponeGroup","deadLab","string","formatStr","ins","reviceCount","maxReviceCount","role","onClickRevive","isExitIng","console","log","count","getCount","CurrencyType","CurrencyType_ReviveCurrency","showReviveCurrency","getLab","onClickADRevive","show","viewName","data","callback","type","showAdRevive","requestReviveOnStage","addReviceCount","abs","onRevive","emitFight","pause","playVideoAd","AdType","AdType_FightReviveByAdvert","advertReviceCount","getData","GetKeyValue_ConfigTable","FightReviveCountByAd","resurgenceBtnNode","adBtnNode","maxCout","reviceContLab"],"mappings":"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","sourcesContent":["import { _decorator, Component, js, Label, Node, Texture2D } from \"cc\";\nimport { EventMgr } from \"../../../mgr/EventMgr\";\nimport { CommonItem } from \"../../../model/item/CommonItem\";\nimport { RoleInfo } from \"../../base/obj/role/role/RoleInfo\";\nimport { FightEvent } from \"../../define/FightEvent\";\nimport { FightUITeamSkillItem } from \"./FightUITeamSkillItem\";\nimport { FightRoleTeamItem } from \"./FightRoleTeamItem\";\nimport { FightDamageRankItem } from \"../damage/FightDamageRankItem\";\nimport { FightData } from \"../../data/FightData\";\nimport { Role } from \"../../base/obj/role/role/Role\";\nimport { ShowTips, UIMgr } from \"../../../mgr/UIMgr\";\nimport { tab } from \"../../../../Table/table_gen\";\nimport { ItemData } from \"../../../model/item/ItemData\";\nimport { FightMsgControl } from \"../../FightMsgControl\";\nimport { PlatformMgr } from \"../../../mgr/PlatformMgr\";\nimport { AdMgr } from \"../../../model/AdMgr\";\nimport { FightRootControl } from \"../../FightRootControl\";\nimport { LangMgr } from \"../../../mgr/LangMgr\";\n\nconst { ccclass, property } = _decorator;\n\n\n/** 角色头像（FightUI节点显示的) */\n@ccclass('FightUITeamItem')\nexport class FightUITeamItem extends Component {\n    roleInfo: RoleInfo = null\n\n    @property(Node)\n    deadNode: Node = null\n    @property(Label)\n    deadLab: Label = null\n\n    @property(FightRoleTeamItem)\n    item: FightRoleTeamItem = null\n\n    @property(Node)\n    skillNode: Node = null\n\n    @property(FightUITeamSkillItem)\n    skill1: FightUITeamSkillItem = null\n\n    @property(FightUITeamSkillItem)\n    skill2: FightUITeamSkillItem = null\n\n    @property(Node)\n    resurgenceBtnNode: Node = null;\n    @property(Node)\n    adBtnNode: Node = null;\n    @property(Label)\n    reviceContLab: Label = null;\n    protected onLoad(): void {\n        EventMgr.onFight(FightEvent.Fight_Role_Dead, this.onFight_Role_Dead, this)\n        EventMgr.onFight(FightEvent.Fight_Initiative_Revive, this.onFight_Role_Revive, this)\n        EventMgr.onFight(FightEvent.Role_Add_Weapon_SkillGroup, this.onRole_Add_Weapon_SkillGroup, this)\n        EventMgr.onFight(FightEvent.Role_change_SkillGroup, this.onRole_change_SkillGroup, this)\n\n        EventMgr.onFight(FightEvent.Change_Revice_Count, this.updateReviveShow, this)\n\n        this.setDeadActive(false)\n    }\n\n    setDeadActive(isshow: boolean) {\n        this.deadNode.active = isshow\n        this.skillNode.active = !isshow\n        this.updateReviveShow();\n\n\n    }\n\n    protected onDestroy(): void {\n        EventMgr.unTarget(this)\n    }\n\n    setRoleInfo(info: RoleInfo) {\n        this.roleInfo = info\n\n        this.skill1.node.active = false\n        this.skill2.node.active = false\n\n        this.item.setData(info.heroFightInfo)\n\n        this.skill1.setSkill(info.normalGroup)\n        this.node.active = true\n        if (info.weaponeGroup) {\n            this.onRole_Add_Weapon_SkillGroup(this.roleInfo)\n        }\n\n    }\n\n    onFight_Role_Dead(info: RoleInfo) {\n        if (this.roleInfo == info) {\n            this.deadLab.string = js.formatStr(\"%s/%s\", FightData.ins.reviceCount, FightData.ins.maxReviceCount())\n            this.setDeadActive(true)\n        }\n    }\n\n    onFight_Role_Revive(role: Role) {\n        if (this.roleInfo == (role && role.info)) {\n            this.setDeadActive(false)\n        }\n    }\n\n    onClickRevive() {\n        if (FightRootControl.ins.isExitIng) {\n            return\n        }\n        if (FightData.ins.reviceCount < FightData.ins.maxReviceCount()) {\n            console.log(\"复活\")\n            // tab.CurrencyType\n            let count = ItemData.ins.getCount(tab.CurrencyType.CurrencyType_ReviveCurrency);\n            if (count >= 1) {\n                this.showReviveCurrency()\n            } else {\n                //ShowTips('复活币不足');\n                ShowTips(LangMgr.getLab(\"Tips_revive_1\"));\n            }\n\n        } else {\n            //ShowTips('复活次数不足');\n            ShowTips(LangMgr.getLab(\"Tips_revive_2\"));\n        }\n\n    }\n\n    /**观看广告复活 */\n    onClickADRevive() {\n        if (FightRootControl.ins.isExitIng) {\n            return\n        }\n        if (FightData.ins.maxReviceCount() - FightData.ins.reviceCount >1 && ItemData.ins.getCount(tab.CurrencyType.CurrencyType_ReviveCurrency) >= 1) {\n            //弹窗\n            UIMgr.ins.show({\n                viewName: \"ReviveTipsPop\", data: {\n                    callback: (type: number) => {\n                        if (type == 1) {//广告\n                            this.showAdRevive()\n                        } else if (type == 2) {//复活币\n                            this.showReviveCurrency()\n                        }\n                    }\n                }\n            })\n        } else {\n            this.showAdRevive()\n        }\n    }\n\n    showReviveCurrency() {\n        FightMsgControl.ins.requestReviveOnStage(() => {\n            if (FightRootControl.ins.isExitIng) {\n                return\n            }\n            FightData.ins.addReviceCount()\n            this.roleInfo.abs.onRevive()\n            EventMgr.emitFight(FightEvent.Fight_Initiative_Revive, this.roleInfo.abs)\n        })\n    }\n\n    showAdRevive() {\n        FightData.ins.pause = true\n        AdMgr.ins.playVideoAd(tab.AdType.AdType_FightReviveByAdvert, () => {\n            if (FightRootControl.ins.isExitIng) {\n                return\n            }\n            FightData.ins.pause = false\n            FightData.ins.addReviceCount(true)\n            this.roleInfo.abs.onRevive()\n            EventMgr.emitFight(FightEvent.Fight_Initiative_Revive, this.roleInfo.abs)\n        }, true, () => {\n            FightData.ins.pause = false\n        })\n    }\n\n\n    onRole_Add_Weapon_SkillGroup(info: RoleInfo) {\n        if (this.roleInfo != info) {\n            return\n        }\n\n        this.skill2.setSkill(this.roleInfo.weaponeGroup)\n    }\n    onRole_change_SkillGroup(info: RoleInfo) {\n        if (this.roleInfo != info) {\n            return\n        }\n        this.skill1.setSkill(this.roleInfo.normalGroup)\n    }\n    updateReviveShow() {\n        if (this.deadNode.active) {\n            if (FightData.ins.advertReviceCount >= tab.getData().GetKeyValue_ConfigTable().FightReviveCountByAd) {\n                this.resurgenceBtnNode.active = true;\n                this.adBtnNode.active = false;\n                let maxCout = FightData.ins.maxReviceCount();\n                this.reviceContLab.string = (maxCout - FightData.ins.reviceCount) + \"/\" + maxCout;\n\n            } else {\n                this.resurgenceBtnNode.active = false;\n                this.adBtnNode.active = true;\n            }\n        }\n\n\n    }\n\n}"]}