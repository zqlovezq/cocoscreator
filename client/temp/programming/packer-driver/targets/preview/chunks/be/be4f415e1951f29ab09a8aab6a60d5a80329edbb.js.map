{"version":3,"sources":["file:///C:/chickenStarClient/client/assets/scripts/logic/model/mutation/DrugScrollItem.ts"],"names":["_decorator","Component","Label","ProgressBar","Sprite","tab","CommonItem","ItemInfo","ItemData","RoleData","HeroTeamControl","LangMgr","UIMgr","ViewName","ccclass","property","DrugScrollItem","setData","data","itemData","getData","ItemTableById","getValue","Id","itemInfo","itemId","num","ins","getCount","item","initData","setSelectState","setTouchCallBack","show","viewName","ItemInfoPop","lbl_name","string","getLab","Name","playLevel","level","maxCount","k","PlayerLv","length","MaxCount","usedItemCount","getElixirCountById","lbl_progress","useCount","i","AttrType","attrType","iconPath","HeroAttrClientTableByType","Icon","setTexture","AttrValue","bar_progress","progress"],"mappings":"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","sourcesContent":["import { _decorator, Component, Label, Node, ProgressBar, Sprite } from 'cc';\r\nimport { tab } from '../../../Table/table_gen';\r\nimport { CommonItem } from '../item/CommonItem';\r\nimport { ItemInfo } from '../item/ItemInfo';\r\nimport { ItemData } from '../item/ItemData';\r\nimport { RoleData } from '../role/RoleData';\r\nimport { HeroTeamControl } from '../hero/HeroTeamControl';\r\nimport { LangMgr } from '../../mgr/LangMgr';\r\nimport { UIMgr } from '../../mgr/UIMgr';\r\nimport { ViewName } from '../../define/ViewDefine';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('DrugScrollItem')\r\nexport class DrugScrollItem extends Component {\r\n    @property(CommonItem)\r\n    item:CommonItem = null;\r\n    @property(Label)\r\n    lbl_name:Label = null;\r\n    @property(Label)\r\n    lbl_attr_0:Label;\r\n    @property(Label)\r\n    lbl_attr_1:Label;\r\n    @property(Sprite)\r\n    sp_attr_0:Sprite;\r\n    @property(Sprite)\r\n    sp_attr_1:Sprite;\r\n    @property(ProgressBar)\r\n    bar_progress:ProgressBar = null;\r\n    @property(Label)\r\n    lbl_progress:Label = null;\r\n    setData(data:tab.ElixirTable){\r\n        const itemData = tab.getData().ItemTableById.getValue(data.Id)\r\n        let itemInfo = new ItemInfo();\r\n        itemInfo.itemId = data.Id;\r\n        itemInfo.num = ItemData.ins.getCount(data.Id);\r\n        this.item.initData(itemInfo);\r\n        this.item.setSelectState(false);\r\n        this.item.setTouchCallBack(()=>{\r\n            UIMgr.ins.show({ viewName: ViewName.ItemInfoPop, data: {\r\n                itemId:data.Id\r\n            } })\r\n        })\r\n\r\n        this.lbl_name.string = LangMgr.getLab(itemData.Name);\r\n        const playLevel = RoleData.ins.level;\r\n        let maxCount = 0;\r\n        for(let k=data.PlayerLv.length-1;k>=0;k--){\r\n            const level = data.PlayerLv[k];\r\n            if(playLevel>level){\r\n                maxCount = data.MaxCount[k+1]? data.MaxCount[k+1]:data.MaxCount[k];\r\n                break;\r\n            }\r\n        }\r\n        const usedItemCount = HeroTeamControl.ins.getElixirCountById(data.Id)\r\n        this.lbl_progress.string = usedItemCount+\"/\"+maxCount;\r\n\r\n        let useCount = 0;\r\n        if(usedItemCount+itemInfo.num>maxCount){\r\n            useCount = maxCount-usedItemCount>0?maxCount-usedItemCount:0;\r\n        }else{\r\n            useCount = itemInfo.num\r\n        }\r\n        for(let i=0;i<data.AttrType.length;i++){\r\n            const attrType = data.AttrType[i];\r\n            const iconPath=tab.getData().HeroAttrClientTableByType.getValue(attrType).Icon;\r\n            this[\"sp_attr_\"+i].setTexture(iconPath);\r\n            this[\"lbl_attr_\"+i].string = data.AttrValue[i]* usedItemCount;\r\n        }\r\n\r\n        this.bar_progress.progress = usedItemCount/maxCount>1?1:usedItemCount/maxCount;\r\n    }\r\n}\r\n\r\n\r\n"]}