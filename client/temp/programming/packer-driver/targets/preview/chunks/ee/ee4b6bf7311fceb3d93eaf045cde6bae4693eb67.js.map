{"version":3,"sources":["file:///C:/chickenStarClient/client/assets/scripts/logic/model/association/AssociationData.ts"],"names":["_decorator","AbsControl","proto","AssociationControl","tab","RoleData","TaskData","ItemData","LangMgr","ShowTips","RedMgr","RedDotType","GuildPermission","ccclass","property","AssociationData","AssocitionData","curSelectFlagId","memberMap","Map","guildAttrMap","guildSkillClass","guildSkillClassTab","bossGuildRank","bossRoleRank","memberArr","memberGuildArr","bossRoleMap","bossRoleRankMap","bossGuildMap","bossGuildRankMap","simple","taskTabs","materialMap","_GuildBossMsg","roleRankSelfRanking","guildRankSelfRanking","ins","_instance","initAssociationData","msg","isRegister","init","clear","guild","size","setMemberMap","sortMemberData","sortMembersByLeader","initTask","initSkill","i","getData","TaskTable","length","_tab","TaskType","TaskType_GuildDailyTask","push","tasks","initGuildTasks","refreshEvent","Guild_Task","GuildAttrTable","heroClass","HeroClass","has","get","set","k","HeroClass_Assassin","HeroClass_Warrior","skillLevelMap","maps","key","Number","setGuildAttr","initRank","roleRank","j","guildRank","guildRankData","members","id","getRoleRankSelfRanking","getGuildRankSelfRanking","getGuildRank","getRoleRank","refreshSelfRoleRankScore","score","slefRoleRank","getSelfRoleRankInfo","selfRoleRank","getSelfRoleRankCount","getSelfGuildRankInfo","selfGuildRank","getAssocitionSimpleInfo","getSelfGuildRankCount","member","roleId","getInGuild","getAssocitionInfo","getGuildMembersCount","lvData","GuildLevelTableById","getValue","level","maxPersonCount","MaxCount","memberCount","totalCount","getJobInMemberCount","job","count","refreshGuildData","refreshGuildNotice","notice","refreshGuildInfo","name","flagid","flagId","refreshMemberInfo","isDelete","delete","memberData","GuildPosition","GuildPosition_President","leaderData","leaderId","GuildPosition_Member","leaderName","forEach","val","sort","guildMember1","guildMember2","getMemberOffLineTime","getGuildMemberArr","getMemberArr","getBargainGift","Button","gifts","gift","tabData","GuildGiftTableById","tabId","serverTime","getServerUtcTime","expireTime","getAllTasksTab","addSkill","resetSkill","getSkillLvByClass","value","tabs","_map","AttrTypes","type","AttrValue","getGuildAttr","getSkillTabsByClass","getCurSkillTabByClass","maxLv","Level","lv","isMaterialEnough","CostItemIds","costId","costCount","CostItemCount","costHaveCount","getCount","itemid","isEnough","isSkillLevelMax","getGuildLogs","logs","addGuildRequests","guildId","request","JoinGuildRequest","guildRequests","subGuildRequests","index","splice","getGuildIsRequest","getMemberData","isInGuild","loginTime","lastLoginTime","logoutTime","lastLogoutTime","getResetSkillMaterial","getIsCanBargain","giftData","bargainRecords","record","getIsMinPrice","giftTab","totalPrice","DiamondPrice","minPrice","MinPrice","bargainNum","checkFunctionIsOpen","openFunc","GuildOFName","GuildOFName_None","guildOfTab","GuildOpenFunctionTableByName","guildLevel","showFunctionTips","tips","getFunctionTips","getCombineString","WordKey","GuildBossMsg","checkRolePromission","permission","positionTab","GuildPositionTableByPosition","GuildSetting","Setting","KickOutMember","KickOut","ProcessApply","Proces","SetJob","Appoint","setNotice","WriteNotification"],"mappings":"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","sourcesContent":["/*\r\n * @Date: 2024-08-28 11:16:05\r\n * @LastEditors: wzq\r\n * @LastEditTime: 2024-11-01 11:42:41\r\n */\r\ninterface memberCount {\r\n    memberCount: number,\r\n    totalCount: number,\r\n}\r\nimport { _decorator } from 'cc';\r\nimport { AbsControl } from '../../../framework/base/IAbs';\r\nimport { proto } from 'client_protocol';\r\nimport { AssociationControl } from './AssociationControl';\r\nimport { tab } from '../../../Table/table_gen';\r\nimport { RoleData } from '../role/RoleData';\r\nimport { TaskData } from '../task/TaskData';\r\nimport { ItemData } from '../item/ItemData';\r\nimport { getTimeGuildTXT } from '../../utils/GameUtil';\r\nimport { LangMgr } from '../../mgr/LangMgr';\r\nimport { ShowTips } from '../../mgr/UIMgr';\r\nimport { RedMgr } from '../../mgr/RedMgr';\r\nimport { RedDotType } from '../../red/RedDotType';\r\nimport { GuildPermission } from '../../../Common/script/EnumTypeMgr';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('AssociationDataMgr')\r\nexport class AssociationData extends AbsControl {\r\n    private static _instance: AssociationData;\r\n    private AssocitionData: proto.GuildInfo = null;\r\n    public curSelectFlagId: number = -1;\r\n    private memberMap: Map<string, proto.IGuildMember> = new Map();\r\n    private guildAttrMap: Map<tab.HeroClass, Map<tab.AttrType, number>> = new Map()//帮会属性\r\n    private guildSkillClass: Map<tab.HeroClass, number> = new Map()//帮会属性\r\n    private guildSkillClassTab: Map<tab.HeroClass, tab.GuildAttrTable[]> = new Map();\r\n    private bossGuildRank: proto.IGuildBossRank[] = []//公会排行榜\r\n    private bossRoleRank: proto.ISimpleRank[] = []//公会个人排行榜\r\n    private memberArr: proto.IGuildMember[] = [];\r\n    private memberGuildArr: proto.IGuildMember[] = [];\r\n    private bossRoleMap: Map<string, proto.ISimpleRank> = new Map();\r\n    private bossRoleRankMap: Map<string, number> = new Map();\r\n\r\n    private bossGuildMap: Map<string, proto.IGuildBossRank> = new Map();\r\n    private bossGuildRankMap: Map<string, number> = new Map();\r\n\r\n    private simple: proto.SimpleGuild = null;\r\n    private taskTabs: tab.TaskTable[] = [];\r\n    private materialMap: Map<number, number> = new Map();\r\n    private _GuildBossMsg: proto.Msg_GuildBossDataPush;\r\n    private roleRankSelfRanking: number = -1;\r\n    private guildRankSelfRanking: number = -1;\r\n    public static get ins() {\r\n        if (null == this._instance) {\r\n            this._instance = new AssociationData();\r\n        }\r\n        return this._instance;\r\n    }\r\n    /* 初始化公会信息 */\r\n    initAssociationData(msg: proto.Msg_GetGuildInfoRsp) {\r\n        if (!AssociationControl.ins.isRegister) {\r\n            AssociationControl.ins.init();\r\n        }\r\n        this.memberMap.clear();\r\n        this.simple = null;\r\n        this.AssocitionData = msg.guild as proto.GuildInfo;\r\n        // 初始化公会基本信息\r\n        if (this.AssocitionData.simple) {\r\n            this.simple = this.AssocitionData.simple as proto.SimpleGuild\r\n        }\r\n        // 初始化公会成员信心并排序\r\n        if (this.memberMap.size === 0) {\r\n            this.setMemberMap();\r\n            this.sortMemberData();\r\n            this.sortMembersByLeader();\r\n        }\r\n        // 初始化公会任务\r\n        this.initTask();\r\n        // 初始化公会属性\r\n        this.initSkill();\r\n    }\r\n    initTask() {\r\n        this.taskTabs = [];\r\n        for (let i = 0; i < tab.getData().TaskTable.length; i++) {\r\n            const _tab = tab.getData().TaskTable[i];\r\n            if (_tab.TaskType === tab.TaskType.TaskType_GuildDailyTask) {\r\n                this.taskTabs.push(_tab);\r\n            }\r\n        }\r\n        if (this.AssocitionData.tasks.length > 0) {\r\n            TaskData.ins.initGuildTasks();\r\n        }\r\n        RedMgr.refreshEvent(RedDotType.Guild_Task);\r\n    }\r\n    initSkill() {\r\n        this.guildSkillClassTab.clear();\r\n        this.guildSkillClass.clear();\r\n        for (let i = 0; i < tab.getData().GuildAttrTable.length; i++) {\r\n            const _tab = tab.getData().GuildAttrTable[i];\r\n            const heroClass = _tab.HeroClass;\r\n            if (this.guildSkillClassTab.has(heroClass)) {\r\n                this.guildSkillClassTab.get(heroClass).push(_tab)\r\n            } else {\r\n                this.guildSkillClassTab.set(heroClass, [_tab]);\r\n            }\r\n        }\r\n        for (let k = tab.HeroClass.HeroClass_Assassin; k <= tab.HeroClass.HeroClass_Warrior; k++) {\r\n            this.guildSkillClass.set(k, 0);\r\n        }\r\n        if (this.AssocitionData.skillLevelMap) {\r\n            const maps = this.AssocitionData.skillLevelMap;\r\n            for (let key in maps) {\r\n                this.guildSkillClass.set(Number(key), maps[key]);\r\n            }\r\n        }\r\n        this.setGuildAttr();\r\n    }\r\n    initRank(msg: proto.Msg_GetGuildBossRankRsp) {\r\n        this.bossRoleRank = msg.roleRank;\r\n        this.bossGuildRank =[]\r\n        for(let j= 0;j<msg.guildRank.length;j++){\r\n            const guildRankData = msg.guildRank[j];\r\n            if(guildRankData&&guildRankData.guild&&guildRankData.guild.members.length>0){\r\n                this.bossGuildRank.push(guildRankData);\r\n            }\r\n        }\r\n        this.roleRankSelfRanking = msg.roleRankSelfRanking;\r\n        this.guildRankSelfRanking = msg.guildRankSelfRanking;\r\n        this.bossRoleMap.clear();\r\n        this.bossRoleRankMap.clear();\r\n        this.bossGuildMap.clear();\r\n        this.bossGuildRankMap.clear();\r\n        for (let i = 0; i < this.bossRoleRank.length; i++) {\r\n            if(this.bossRoleRank[i].simple){\r\n                this.bossRoleMap.set(this.bossRoleRank[i].simple.id, this.bossRoleRank[i])\r\n                this.bossRoleRankMap.set(this.bossRoleRank[i].simple.id, i + 1)\r\n            }\r\n        }\r\n        for (let k = 0; k < this.bossGuildRank.length; k++) {\r\n            if(this.bossGuildRank[k].guild.simple){\r\n                this.bossGuildMap.set(this.bossGuildRank[k].guild.simple.id, this.bossGuildRank[k])\r\n                this.bossGuildRankMap.set(this.bossGuildRank[k].guild.simple.id, k + 1)\r\n            }\r\n        }\r\n    }\r\n    // 获取roleRankSelfRanking\r\n    getRoleRankSelfRanking() {\r\n        return this.roleRankSelfRanking+1;\r\n    }\r\n    // guildRankSelfRanking\r\n    getGuildRankSelfRanking() {\r\n        return this.guildRankSelfRanking;\r\n    }\r\n    // 获取公会排行\r\n    getGuildRank() {\r\n        return this.bossGuildRank;\r\n    }\r\n    // 获取个人排行数据\r\n    getRoleRank() {\r\n        return this.bossRoleRank;\r\n    }\r\n    refreshSelfRoleRankScore(score:number){\r\n        const slefRoleRank: proto.ISimpleRank = this.bossRoleMap.get(RoleData.ins.id);\r\n        slefRoleRank.score += score;\r\n    }\r\n    // 获取个人的排行榜数据\r\n    getSelfRoleRankInfo(): proto.ISimpleRank {\r\n        const selfRoleRank: proto.ISimpleRank = this.bossRoleMap.get(RoleData.ins.id);\r\n        return selfRoleRank;\r\n    }\r\n    // 获取个人的排行榜排名\r\n    getSelfRoleRankCount(): number {\r\n        return this.bossRoleRankMap.get(RoleData.ins.id) ?? 0;\r\n    }\r\n    // 获取自己公会排行榜数据\r\n    getSelfGuildRankInfo(): proto.IGuildBossRank {\r\n        const selfGuildRank: proto.IGuildBossRank = this.bossGuildMap.get(AssociationData.ins.getAssocitionSimpleInfo().id);\r\n        return selfGuildRank;\r\n    }\r\n    // 获取自己的公会排名\r\n    getSelfGuildRankCount(): number {\r\n        return this.bossGuildRankMap.get(AssociationData.ins.getAssocitionSimpleInfo().id) ?? 0;\r\n    }\r\n    setMemberMap() {\r\n        this.memberMap.clear();\r\n        if (this.AssocitionData.members.length > 0) {\r\n            for (let i = 0; i < this.AssocitionData.members.length; i++) {\r\n                const member = this.AssocitionData.members[i];\r\n                this.memberMap.set(member.roleId, member);\r\n            }\r\n        }\r\n    }\r\n    /* 获取当前是否有公会 */\r\n    getInGuild() {\r\n        if (this.simple) {\r\n            return true\r\n        }\r\n        return false;\r\n    }\r\n    /* 获取公会基本信息 */\r\n    getAssocitionSimpleInfo() {\r\n        if (this.simple) {\r\n            return this.simple\r\n        }\r\n        return null\r\n    }\r\n    /* 获取公会总信息 */\r\n    getAssocitionInfo() {\r\n        if (this.AssocitionData) {\r\n            return this.AssocitionData\r\n        }\r\n        return null\r\n    }\r\n    /* 获取当前的公会的人数跟总人数 */\r\n    getGuildMembersCount(): memberCount {\r\n        const lvData = tab.getData().GuildLevelTableById.getValue(this.simple.level)\r\n        const maxPersonCount = lvData.MaxCount;\r\n        return {\r\n            memberCount: this.memberArr.length,\r\n            totalCount: maxPersonCount\r\n        }\r\n    }\r\n    /* 获取当前职位的公会人数 */\r\n    getJobInMemberCount(job: number): number {\r\n        let count = 0;\r\n        for (let i = 0; i < this.memberArr.length; i++) {\r\n            const member: proto.IGuildMember = this.memberArr[i];\r\n            if (member.job === job) {\r\n                count++;\r\n            }\r\n        }\r\n        return count;\r\n    }\r\n    /* 刷新公会数据 */\r\n    refreshGuildData(msg: proto.Msg_GetGuildInfoRsp) {\r\n        this.AssocitionData = msg.guild as proto.GuildInfo;\r\n    }\r\n    // 设置公会公告\r\n    refreshGuildNotice(notice: string) {\r\n        if (this.simple) {\r\n            this.simple.notice = notice\r\n        }\r\n    }\r\n    // 设置公会公告\r\n    refreshGuildInfo(name: string, flagid: number) {\r\n        if (this.simple) {\r\n            this.simple.name = name;\r\n            this.simple.flagId = flagid;\r\n        }\r\n    }\r\n    /* 刷新公会成员信息更改职位、删除成员 */\r\n    refreshMemberInfo(roleId: string, job: number, isDelete?: boolean) {\r\n        if (isDelete) {\r\n            this.memberMap.delete(roleId);\r\n            this.sortMemberData();\r\n            this.sortMembersByLeader();\r\n            return;\r\n        }\r\n        const memberData = this.memberMap.get(roleId);\r\n        if (job) {\r\n            memberData.job = job;\r\n            if (job === tab.GuildPosition.GuildPosition_President) {\r\n                const leaderData = this.memberMap.get(this.simple.leaderId);\r\n                leaderData.job = tab.GuildPosition.GuildPosition_Member;//会长的数据变成普通成员\r\n\r\n                this.simple.leaderId = roleId;\r\n                this.simple.leaderName = memberData.name;\r\n            }\r\n        }\r\n    }\r\n    /* 对成员数组并排序 */\r\n    sortMemberData() {\r\n        if (this.simple) {\r\n            this.memberArr = [];\r\n\r\n            this.memberMap.forEach((val, key) => {\r\n                this.memberArr.push(val);\r\n            })\r\n            // 将数据排序规则 自己--在线--职位\r\n            this.memberArr.sort((guildMember1, guildMember2) => {\r\n                if (guildMember1.roleId === RoleData.ins.id && guildMember2.roleId !== RoleData.ins.id) return -1;\r\n                if (guildMember1.roleId !== RoleData.ins.id && guildMember2.roleId === RoleData.ins.id) return 1;\r\n                if (this.getMemberOffLineTime(guildMember1) <= 0 && this.getMemberOffLineTime(guildMember2) > 0) return -1;\r\n                if (this.getMemberOffLineTime(guildMember2) > 0 && this.getMemberOffLineTime(guildMember2) <= 0) return 1;\r\n                return guildMember1.job - guildMember2.job;\r\n            })\r\n\r\n            // if (RoleData.ins.id !== this.simple.leaderId) {\r\n            //     this.memberArr.push(this.memberMap.get(RoleData.ins.id));\r\n            //     this.memberArr.push(this.memberMap.get(this.simple.leaderId));\r\n            // } else {\r\n            //     this.memberArr.push(this.memberMap.get(RoleData.ins.id));\r\n            // }\r\n            // this.memberMap.forEach((val, key) => {\r\n            //     if (key !== RoleData.ins.id && key !== this.simple.leaderId) {\r\n            //         this.memberArr.push(val);\r\n            //     }\r\n            // })\r\n        }\r\n    }\r\n\r\n    // 对members里面的会长必须排第一个\r\n    sortMembersByLeader() {\r\n        if (this.simple) {\r\n            this.memberGuildArr = [];\r\n            this.memberGuildArr.push(this.memberMap.get(this.simple.leaderId));\r\n            this.memberMap.forEach((val, key) => {\r\n                if (key !== this.simple.leaderId) {\r\n                    this.memberGuildArr.push(val);\r\n                }\r\n            })\r\n        }\r\n    }\r\n    getGuildMemberArr() {\r\n        return this.memberGuildArr;\r\n    }\r\n    getMemberArr() {\r\n        return this.memberArr;\r\n    }\r\n    /* 获取鸡多多礼包 */\r\n    getBargainGift(Button:string): proto.GuildGift {\r\n        for (let i = 0; i < this.AssocitionData.gifts.length; i++) {\r\n            const gift = this.AssocitionData.gifts[i] as proto.GuildGift;\r\n            const tabData: tab.GuildGiftTable = tab.getData().GuildGiftTableById.getValue(gift.tabId);\r\n            const serverTime = RoleData.ins.getServerUtcTime();\r\n            if (tabData.Button === Button&&gift.expireTime - serverTime>0) \r\n            {\r\n                return gift\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    /* 获取所有的任务tab */\r\n    getAllTasksTab() {\r\n        return this.taskTabs;\r\n    }\r\n    addSkill(heroClass: tab.HeroClass) {\r\n        this.guildSkillClass.set(heroClass, this.guildSkillClass.get(heroClass) + 1);\r\n        this.setGuildAttr();\r\n    }\r\n    /* 重置技能 */\r\n    resetSkill(heroClass: tab.HeroClass) {\r\n        this.guildSkillClass.set(heroClass, 0);\r\n        this.setGuildAttr();\r\n    }\r\n    /* 获取职业技能等级 */\r\n    getSkillLvByClass(heroClass: tab.HeroClass) {\r\n        return this.guildSkillClass.get(heroClass) ?? 0;\r\n    }\r\n    /* 获取帮会所有属性 */\r\n    public setGuildAttr() {\r\n        this.guildAttrMap.clear();\r\n        this.guildSkillClass.forEach((value, key) => {\r\n            const tabs = this.guildSkillClassTab.get(key);\r\n            if (!this.guildAttrMap.has(key)) {\r\n                this.guildAttrMap.set(key, new Map())\r\n            }\r\n            for (let i = 0; i < value; i++) {\r\n                const _tab = tabs[i];\r\n                const _map = this.guildAttrMap.get(key);\r\n                for (let k = 0; k < _tab.AttrTypes.length; k++) {\r\n                    const type = _tab.AttrTypes[k];\r\n                    const val = _tab.AttrValue[k];\r\n                    if (_map.has(type)) {\r\n                        _map.set(type, _map.get(type) + val)\r\n                    } else {\r\n                        _map.set(type, val)\r\n                    }\r\n                }\r\n            }\r\n        })\r\n    }\r\n    public getGuildAttr(heroClass: tab.HeroClass) {\r\n        return this.guildAttrMap.get(heroClass);\r\n    }\r\n    public getSkillTabsByClass(heroClass: tab.HeroClass) {\r\n        return this.guildSkillClassTab.get(heroClass);\r\n    }\r\n    public getCurSkillTabByClass(heroClass: tab.HeroClass) {\r\n        const tabs = this.guildSkillClassTab.get(heroClass);\r\n        const maxLv = tabs[tabs.length - 1].Level;\r\n        const lv = this.getSkillLvByClass(heroClass) + 1 > maxLv ? maxLv : this.getSkillLvByClass(heroClass) + 1;\r\n        for (let i = 0; i < tabs.length; i++) {\r\n            if (tabs[i].Level === lv) {\r\n                return tabs[i];\r\n            }\r\n        }\r\n    }\r\n    // 判断当前是否材料够升级技能\r\n    public isMaterialEnough(heroClass: tab.HeroClass) {\r\n        const tabData = this.getCurSkillTabByClass(heroClass);\r\n        for (let i = 0; i < tabData.CostItemIds.length; i++) {\r\n            const costId = tabData.CostItemIds[i];\r\n            const costCount = tabData.CostItemCount[i];\r\n            const costHaveCount = ItemData.ins.getCount(costId);\r\n            if (costHaveCount < costCount) {\r\n                return { itemid: costId, isEnough: false };\r\n            }\r\n        }\r\n        return { itemid: -1, isEnough: true };\r\n    }\r\n    public isSkillLevelMax(heroClass: tab.HeroClass) {\r\n        const tabs = this.guildSkillClassTab.get(heroClass);\r\n        const maxLv = tabs[tabs.length - 1].Level;\r\n        const lv = this.getSkillLvByClass(heroClass) + 1\r\n        if (lv > maxLv) {\r\n            return true\r\n        }\r\n        return false\r\n    }\r\n    // 获取公会日志\r\n    getGuildLogs() {\r\n        return this.AssocitionData.logs;\r\n    }\r\n    // 增加申请的公会的请求\r\n    addGuildRequests(guildId: string) {\r\n        const request: proto.IJoinGuildRequest = new proto.JoinGuildRequest();\r\n        request.id = guildId;\r\n        RoleData.ins.guildRequests.push(request);\r\n    }\r\n    subGuildRequests(guildId: string) {\r\n        let index = -1;\r\n        for (let i = 0; i < RoleData.ins.guildRequests.length; i++) {\r\n            if (RoleData.ins.guildRequests[i].id === guildId) {\r\n                index = i;\r\n            }\r\n        }\r\n        if (index >= 0) {\r\n            RoleData.ins.guildRequests.splice(index, 1);\r\n        }\r\n    }\r\n    // 判断当前公会是否是申请过的公会\r\n    getGuildIsRequest(guildId: string): boolean {\r\n        if (this.simple) {\r\n            return true\r\n        } else {\r\n            for (let i = 0; i < RoleData.ins.guildRequests.length; i++) {\r\n                if (RoleData.ins.guildRequests[i].id === guildId) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    // 获取成员信息\r\n    getMemberData(roleId: string): proto.IGuildMember {\r\n        const isInGuild = this.getInGuild();\r\n        return this.memberMap.get(roleId);\r\n    }\r\n    // 获取离线时间\r\n    getMemberOffLineTime(memberData: proto.IGuildMember): number {\r\n        const serverTime = RoleData.ins.getServerUtcTime();\r\n        const loginTime = memberData.lastLoginTime;\r\n        const logoutTime = memberData.lastLogoutTime;\r\n        if (logoutTime >= loginTime) {\r\n            return serverTime - logoutTime;\r\n        } else {\r\n            return -1;\r\n        }\r\n    }\r\n    // 重置技能所获得的资源\r\n    getResetSkillMaterial(heroClass: tab.HeroClass) {\r\n        this.materialMap.clear();\r\n        const lv = this.getSkillLvByClass(heroClass);\r\n        const tabs = this.getSkillTabsByClass(heroClass);\r\n        for (let i = 0; i < tabs.length; i++) {\r\n            const _tab = tabs[i];\r\n            if (_tab.Level <= lv) {\r\n                for (let k = 0; k < _tab.CostItemIds.length; k++) {\r\n                    const id = _tab.CostItemIds[k];\r\n                    const count = _tab.CostItemCount[k]\r\n                    if (this.materialMap.has(id)) {\r\n                        this.materialMap.set(id, this.materialMap.get(id) + count)\r\n                    } else {\r\n                        this.materialMap.set(id, count)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return this.materialMap;\r\n    }\r\n    // 是否拼多多砍了一刀\r\n    getIsCanBargain(Button:string): boolean {\r\n        const giftData = this.getBargainGift(Button);\r\n        if (giftData && giftData.bargainRecords) {\r\n            if (giftData.bargainRecords.length === 0) {\r\n                return true;\r\n            } else {\r\n                for (let i = 0; i < giftData.bargainRecords.length; i++) {\r\n                    const record: proto.IBargainRecord = giftData.bargainRecords[i];\r\n                    if (record.roleId === RoleData.ins.id) {\r\n                        return false;\r\n                    }\r\n                }\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    // 拼多多是否已经是最低价\r\n    getIsMinPrice(Button:string): boolean {\r\n        const giftData = this.getBargainGift(Button);\r\n        if (giftData && giftData.bargainRecords && giftData.bargainRecords.length > 0) {\r\n            const giftTab = tab.getData().GuildGiftTableById.getValue(giftData.tabId);\r\n            let totalPrice = giftTab.DiamondPrice;\r\n            const minPrice = giftTab.MinPrice;\r\n            for (let i = 0; i < giftData.bargainRecords.length; i++) {\r\n                const record: proto.IBargainRecord = giftData.bargainRecords[i];\r\n                totalPrice -= record.bargainNum;\r\n            }\r\n            if (totalPrice <= minPrice) {\r\n                return true;\r\n            }\r\n        }\r\n        return false\r\n    }\r\n    checkFunctionIsOpen(openFunc: tab.GuildOFName) {\r\n        if (openFunc === tab.GuildOFName.GuildOFName_None) {\r\n            return true;\r\n        }\r\n        const guildOfTab = tab.getData().GuildOpenFunctionTableByName.getValue(openFunc);\r\n        const guildLevel = this.simple.level;\r\n        return guildLevel >= guildOfTab.Level;\r\n    }\r\n    showFunctionTips(openFunc: tab.GuildOFName) {\r\n        let tips = this.getFunctionTips(openFunc)\r\n        ShowTips(tips);\r\n    }\r\n    getFunctionTips(openFunc: tab.GuildOFName) {\r\n        const guildOfTab = tab.getData().GuildOpenFunctionTableByName.getValue(openFunc);\r\n        let tips = \"\"\r\n        tips = LangMgr.getCombineString(guildOfTab.WordKey, [guildOfTab.Level]);\r\n        return tips;\r\n    }\r\n    get GuildBossMsg() {\r\n        return this._GuildBossMsg;\r\n    }\r\n    set GuildBossMsg(msg: proto.Msg_GuildBossDataPush) {\r\n        this._GuildBossMsg = msg;\r\n    }\r\n    // 获取鸡多多最后的时间\r\n    // getBargainEndTime(Button:string) {\r\n    //     const giftData: proto.GuildGift = this.getBargainGift(Button);\r\n    //     if (giftData) {\r\n    //         const serverTime = RoleData.ins.getServerUtcTime();\r\n    //         return giftData.expireTime - serverTime;\r\n    //     } else {\r\n    //         return 0;\r\n    //     }\r\n    // }\r\n    // 检查当前玩家是否有权限\r\n    checkRolePromission(permission: GuildPermission) {\r\n        const memberData = this.memberMap.get(RoleData.ins.id);\r\n        if(!memberData){\r\n            return false;\r\n        }\r\n        const positionTab = tab.getData().GuildPositionTableByPosition.getValue(memberData.job);\r\n        if(positionTab){\r\n            switch (permission) {\r\n                case GuildPermission.GuildSetting:\r\n                    return positionTab.Setting;\r\n                case GuildPermission.KickOutMember:\r\n                    return positionTab.KickOut;\r\n                case GuildPermission.ProcessApply:\r\n                    return positionTab.Proces;\r\n                case GuildPermission.SetJob:\r\n                    return positionTab.Appoint;\r\n                case GuildPermission.setNotice:\r\n                    return positionTab.WriteNotification;\r\n                default:\r\n                    return false\r\n            }\r\n        }else{\r\n            return false\r\n        }\r\n    }\r\n}\r\n\r\n\r\n"]}