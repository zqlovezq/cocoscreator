{"version":3,"sources":["file:///C:/chickenStarClient/client/assets/scripts/startScrpit/UpdateScene.ts"],"names":["_decorator","assetManager","director","DynamicAtlasManager","Font","Game","game","macro","sys","view","DEBUG","UpdateView","ChannelMgr","LoadTable","ClientView","GameInit","SceneBase","Global","ResMgr","LangMgr","ccclass","property","UpdateScene","_am","_loadDone","onLoad","CLEANUP_IMAGE_CACHE","instance","enabled","ins","startGame","setFont","font","start","presets","maxConcurrency","maxRequestsPerFrame","on","EVENT_ENGINE_INITED","setOrientation","ORIENTATION_LANDSCAPE","nowPath","then","InitData","init","loadGames","loadBundle","err","bundle","unscheduleAllCallbacks","checkUpdate","isNative","updateView","loadUpdate","initOnLineVersion","setCb","enterLogin","verLab","node","active","string","getVersionStr","loadScene"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAA0BC,MAAAA,Y,OAAAA,Y;AAAyBC,MAAAA,Q,OAAAA,Q;AAAUC,MAAAA,mB,OAAAA,mB;AAAqBC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,K,OAAAA,K;AAAsEC,MAAAA,G,OAAAA,G;AAAeC,MAAAA,I,OAAAA,I;;AACzLC,MAAAA,K,UAAAA,K;;AACAC,MAAAA,U,iBAAAA,U;;AAEAC,MAAAA,U,iBAAAA,U;;AACAC,MAAAA,S,iBAAAA,S;;AAEAC,MAAAA,U,iBAAAA,U;;AACAC,MAAAA,Q,iBAAAA,Q;;AACAC,MAAAA,S,iBAAAA,S;;AACAC,MAAAA,M,iBAAAA,M;;AAEAC,MAAAA,M,iBAAAA,M;;AACAC,MAAAA,O,kBAAAA,O;;;;;;;;;OACH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBrB,U;;6BAKjBsB,W,WADZF,OAAO,CAAC,aAAD,C,UAIHC,QAAQ;AAAA;AAAA,mC,UAGRA,QAAQ,CAACjB,IAAD,C,2BAPb,MACakB,WADb;AAAA;AAAA,kCAC2C;AAAA;AAAA;AAAA,eAC/BC,GAD+B;AAAA,eAE/BC,SAF+B,GAEnB,KAFmB;;AAAA;;AAAA;AAAA;;AAS7BC,QAAAA,MAAM,GAAS;AACrBlB,UAAAA,KAAK,CAACmB,mBAAN,GAA4B,KAA5B;AACAvB,UAAAA,mBAAmB,CAACwB,QAApB,CAA6BC,OAA7B,GAAuC,IAAvC;AACA;AAAA;AAAA,oCAASC,GAAT,CAAaC,SAAb;AACA,gBAAML,MAAN;AACA;AAAA;AAAA,gCAAOM,OAAP,CAAe,KAAKC,IAApB;AACH;;AACDC,QAAAA,KAAK,GAAG;AACJhC,UAAAA,YAAY,CAACiC,OAAb,CAAqB,QAArB,EAA+BC,cAA/B,GAAgD,IAAhD;AACAlC,UAAAA,YAAY,CAACiC,OAAb,CAAqB,QAArB,EAA+BE,mBAA/B,GAAqD,IAArD;;AACA,cAAI1B,KAAJ,EAAW;AACPJ,YAAAA,IAAI,CAAC+B,EAAL,CAAQhC,IAAI,CAACiC,mBAAb,EAAkC,MAAM;AACpC7B,cAAAA,IAAI,CAAC8B,cAAL,CAAoBhC,KAAK,CAACiC,qBAA1B;AACH,aAFD;AAGH;;AAGD;AAAA;AAAA,sCAAU;AAAA;AAAA,kCAAQX,GAAR,CAAYY,OAAtB,EAA+BC,IAA/B,CAAoC,MAAM;AACtC;AAAA;AAAA,oCAAQb,GAAR,CAAYc,QAAZ;AACA;AAAA;AAAA,0CAAWC,IAAX;AAEA;AAAA;AAAA,0CAAWf,GAAX,CAAee,IAAf;AACA,iBAAKC,SAAL;AACH,WAND;AAOH;;AAEDA,QAAAA,SAAS,GAAG;AACR,eAAKrB,SAAL,GAAiB,KAAjB;AACAvB,UAAAA,YAAY,CAAC6C,UAAb,CAAwB,SAAxB,EAAmC,CAACC,GAAD,EAAaC,MAAb,KAA6C;AAC5E,gBAAID,GAAJ,EAAS;AACL;AACH;;AAED,iBAAKE,sBAAL;;AACA,gBAAI,KAAKzB,SAAT,EAAoB;AAChB;AACH;;AACD,iBAAKA,SAAL,GAAiB,IAAjB;AACA,iBAAK0B,WAAL;AACH,WAXD;AAYH;;AAEDA,QAAAA,WAAW,GAAG;AACV,cAAI1C,GAAG,CAAC2C,QAAR,EAAkB;AAAC;AACf,iBAAKC,UAAL,CAAgBC,UAAhB;AACH;;AAED;AAAA;AAAA,wCAAWC,iBAAX,CAA6B,MAAM;AAC/B,gBAAI9C,GAAG,CAAC2C,QAAR,EAAkB;AACd,mBAAKC,UAAL,CAAgBG,KAAhB,CAAsB,MAAM;AACxB,qBAAKC,UAAL;AACH,eAFD;AAGA,mBAAKJ,UAAL,CAAgBF,WAAhB;AACH,aALD,MAKO;AACH,mBAAKM,UAAL;AACH;AACJ,WATD;AAWH;;AAEDA,QAAAA,UAAU,GAAG;AACT,eAAKJ,UAAL,CAAgBK,MAAhB,CAAuBC,IAAvB,CAA4BC,MAA5B,GAAqC,IAArC;AACA,eAAKP,UAAL,CAAgBK,MAAhB,CAAuBG,MAAvB,GAAgC;AAAA;AAAA,gCAAOC,aAAP,EAAhC;AACA3D,UAAAA,QAAQ,CAAC4D,SAAT,CAAmB,YAAnB,EAAiC,MAAM,CAEtC,CAFD,EAHS,CAOT;AACA;AACA;AACA;AACA;AACA;AAEH;;AAnFsC,O;;;;;iBAId,I;;;;;;;iBAGZ,I","sourcesContent":["import { _decorator, AssetManager, assetManager, Component, director, DynamicAtlasManager, Font, Game, game, macro, Node, profiler, Rect, ResolutionPolicy, setDisplayStats, Size, sys, v2, Vec2, view } from 'cc';\nimport { DEBUG } from 'cc/env';\nimport { UpdateView } from './UpdateView';\nimport { Bridge } from '../framework/Bridge';\nimport { ChannelMgr } from '../channel/ChannelMgr';\nimport { LoadTable } from '../Table/table';\nimport { tab } from '../Table/table_gen';\nimport { ClientView } from '../logic/mgr/ClientView';\nimport { GameInit } from '../GameInit';\nimport { SceneBase } from '../scene/SceneBase';\nimport { Global } from '../Global';\nimport { proto } from 'client_protocol';\nimport { ResMgr } from '../logic/mgr/ResMgr';\nimport { LangMgr } from '../logic/mgr/LangMgr';\nconst { ccclass, property } = _decorator;\n\n\n\n@ccclass('UpdateScene')\nexport class UpdateScene extends SceneBase {\n    private _am: jsb.AssetsManager\n    private _loadDone = false;\n    @property(UpdateView)\n    updateView: UpdateView = null\n\n    @property(Font)\n    font: Font = null\n\n    protected onLoad(): void {\n        macro.CLEANUP_IMAGE_CACHE = false;\n        DynamicAtlasManager.instance.enabled = true\n        GameInit.ins.startGame()\n        super.onLoad()\n        ResMgr.setFont(this.font)\n    }\n    start() {\n        assetManager.presets['bundle'].maxConcurrency = 1024;\n        assetManager.presets['bundle'].maxRequestsPerFrame = 1024;\n        if (DEBUG) {\n            game.on(Game.EVENT_ENGINE_INITED, () => {\n                view.setOrientation(macro.ORIENTATION_LANDSCAPE);\n            });\n        }\n\n\n        LoadTable(LangMgr.ins.nowPath).then(() => {\n            LangMgr.ins.InitData()\n            ChannelMgr.init()\n\n            ClientView.ins.init()\n            this.loadGames()\n        })\n    }\n\n    loadGames() {\n        this._loadDone = false\n        assetManager.loadBundle(\"gameRes\", (err: Error, bundle: AssetManager.Bundle) => {\n            if (err) {\n                return;\n            }\n\n            this.unscheduleAllCallbacks();\n            if (this._loadDone) {\n                return;\n            }\n            this._loadDone = true;\n            this.checkUpdate()\n        })\n    }\n\n    checkUpdate() {\n        if (sys.isNative) {//原生平台读取下本地版本\n            this.updateView.loadUpdate()\n        }\n\n        ChannelMgr.initOnLineVersion(() => {\n            if (sys.isNative) {\n                this.updateView.setCb(() => {\n                    this.enterLogin()\n                })\n                this.updateView.checkUpdate()\n            } else {\n                this.enterLogin()\n            }\n        })\n\n    }\n\n    enterLogin() {\n        this.updateView.verLab.node.active = true\n        this.updateView.verLab.string = Global.getVersionStr()\n        director.loadScene(\"LoginScene\", () => {\n\n        })\n        \n        // let rect1 = new Rect(20, 65, 90, 140)\n        // let rect = new Rect(rect1.x - rect1.width / 2, rect1.y - rect1.height / 2, rect1.width, rect1.height)\n        // let worldRect = new Rect(rect1)\n        // worldRect.x = 100 + rect.x\n        // worldRect.y = 200 + rect.y\n        // console.log(\"位置\", v2(100, 200), \"\\n原始包围盒\", rect1, \"\\n局部坐标\", rect, '\\n世界坐标', worldRect)\n\n    }\n}\n\n\n\n\n"]}