{"version":3,"sources":["file:///C:/chickenStarClient/client/assets/scripts/logic/fight/drop/DropControl.ts"],"names":["_decorator","error","Vec3","AbsControl","EventMgr","FightEvent","tab","Func","PlayerControl","RogueControl","RoguePop","FightData","FightMacro","getRandomInt","SettingsManager","WaveTimeControl","Random","ccclass","property","tempPos","DropControl","rogueDrops","feather","otherDrops","Map","exp","expLv","eggDropGroups","isTimeDrop","timeExp","isStart","audoDropCollect","extraDropTimes","extraDropTimeExp","isExtraDrop","timerDropTimes","timerDropIds","itemDrops","ins","_instance","init","register","length","clear","setAudoDropCollect","getSetting","isBool","setSetting","getFirstDrop","onFight","Fight_Start","onFight_Start","Fight_Start_Complete","onFight_Start_Complete","Fight_Monster_Dead","onFight_Monster_Dead","Fight_Drop_Remove_First","onFight_Drop_Remove_First","console","log","isDropByType","EggDropType","EggDropType_TimeDrop","getValuesByKey","getData","FeatherEggDrop","stageTab","EggDropGroup","MonsterDieDrop","index","v","item","animId","probability","push","addDrop","levelJson","drop","initTimerDropData","fightInitialDrop","initExtraDropData","create","abs","info","addExp","checkExpUp","getHitPos","pro","getInt10000","itemDrop","emitFight","Fight_Drop_Item_Anim","shift","dropIds","position","i","dropId","dropTab","PveStageDropTableByDropId","getValue","j","DropItemCount","dropItem","DropItem","count","k","addDropItem","dropItemId","isRogueDrop","checkFull","isRogueEggs","unshift","has","set","get","Fight_Drop_Item","getLenByType","_type","eggsLen","bo","VirtualItemType","VirtualItemType_Eggs","checkEggsFull","heroLen","getNoCreateHeros","_exp","addTime","dt","SECOND","checkTimeExpUp","EggDropExp","EggDropLevel","EggDropContent","iFightUpdate","addExtraDropTime","isWorldAndGuildBoss","num","getGlobleAttr","AttrType","AttrType_InitialScroll","id","GetKeyValue_ConfigTable","InitialDropFeather","VirtualItemByVirtualItemId","VirtualItemType_Feathers","isRogueType","checkExtraDrop","nowTotalTime","AddDropFeather","splice","AttrType_AddScroll","table","PveAddFeatherDropTableByCount","Times","min","max","r","PveTimeDropTableByStageId","stageId","concat","DropTime","DropCount"],"mappings":"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","sourcesContent":["import { _decorator, CCInteger, Color, Component, error, instantiate, Label, Node, Prefab, Quat, Rect, sp, Sprite, tween, UITransform, Vec2, Vec3, view } from 'cc';\nimport { AbsControl } from '../../../framework/base/IAbs';\nimport { EventMgr } from '../../mgr/EventMgr';\nimport { FightEvent } from '../define/FightEvent';\nimport { Monster } from '../base/obj/role/monster/Monster';\nimport { tab } from '../../../Table/table_gen';\nimport { Func } from '../../utils/Func';\nimport { PlayerControl } from '../base/obj/role/role/PlayerControl';\nimport { RogueControl } from '../view/rogue/RogueControl';\nimport { RoguePop } from '../view/rogue/RoguePop';\nimport { FightData } from '../data/FightData';\nimport { FightMacro, IFightUpdate } from '../define/FightDefine';\nimport { getRandomInt } from '../../utils/GameUtil';\nimport { SettingsManager } from '../../model/role/SettingsManager';\nimport { WaveTimeControl } from '../wave/WaveTimeControl';\nimport { Random } from '../util/Random';\n// import { getRandomInt } from '../../utils/GameUtil';\n\n\n\n\nconst { ccclass, property } = _decorator;\n\nconst tempPos = new Vec3(0, 0, 0);\n\nexport interface ItemDrop {\n    animId: number, //动画id\n    probability: number//概率\n}\n\n/** 掉落 */\n@ccclass('DropControl')\nexport class DropControl extends AbsControl implements IFightUpdate {\n\n    private static _instance: DropControl;\n    public static get ins() {\n        if (null == this._instance) {\n            this._instance = new DropControl();\n        }\n        return this._instance;\n    }\n\n    rogueDrops: number[] = []\n    feather: number = 0\n    otherDrops: Map<number, number> = new Map()\n    exp: number = 0\n    expLv: number = 0\n    eggDropGroups: tab.FeatherEggDrop[] = null\n    /** 时间掉落，  false为经验掉落 */\n    isTimeDrop: boolean = false\n    timeExp: number = 0\n\n    isStart: boolean = false\n    /** 自动掉落拾取 */\n    public audoDropCollect: boolean = false\n\n    /**额外掉落时间节点数组 */\n    extraDropTimes: number[] = [];\n    extraDropTimeExp: number = 0;\n    /**是否有额外掉落 */\n    isExtraDrop: boolean = false;\n    /**时间掉落时间节点数组 */\n    timerDropTimes: number[];\n    timerDropIds: number[];\n\n\n    itemDrops: ItemDrop[] = []\n    init(): void {\n        this.register()\n        this.rogueDrops.length = 0\n        this.feather = 0\n        this.otherDrops.clear()\n        this.exp = 0\n        this.expLv = 0\n        this.isStart = false\n        this.isTimeDrop = false\n        this.timeExp = 0\n        this.extraDropTimeExp = 0\n        this.itemDrops.length = 0\n        this.setAudoDropCollect(SettingsManager.ins.getSetting(\"isAutoCollect\"))\n    }\n\n    setAudoDropCollect(isBool: boolean) {\n        this.audoDropCollect = isBool\n        SettingsManager.ins.setSetting(\"isAutoCollect\", isBool);\n        // Func.setItem(\"isAutoCollect\", isBool ? 1 : 0)\n        // console.log(isBool, \"xxxxxx\", Func.getItem(\"isAutoCollect\"))\n    }\n\n\n    getFirstDrop(): number {\n        return this.rogueDrops[0]\n    }\n\n    register(): void {\n        EventMgr.onFight(FightEvent.Fight_Start, this.onFight_Start, this)\n        EventMgr.onFight(FightEvent.Fight_Start_Complete, this.onFight_Start_Complete, this)\n        EventMgr.onFight(FightEvent.Fight_Monster_Dead, this.onFight_Monster_Dead, this)\n        EventMgr.onFight(FightEvent.Fight_Drop_Remove_First, this.onFight_Drop_Remove_First, this)\n    }\n\n    onFight_Start() {\n        console.log(\"Fight_Start-------\")\n        this.isTimeDrop = FightData.ins.isDropByType(tab.EggDropType.EggDropType_TimeDrop)\n        this.eggDropGroups = Func.getValuesByKey(tab.getData().FeatherEggDrop, \"EggDropGroup\", FightData.ins.stageTab.EggDropGroup)\n\n        FightData.ins.stageTab.MonsterDieDrop\n        for (let index = 0; index < FightData.ins.stageTab.MonsterDieDrop.length; index += 2) {\n            const v = FightData.ins.stageTab.MonsterDieDrop[index];\n            let item: ItemDrop = { animId: FightData.ins.stageTab.MonsterDieDrop[index], probability: FightData.ins.stageTab.MonsterDieDrop[index + 1] }\n\n            if (this.itemDrops.length > 0) {\n                item.probability = this.itemDrops[this.itemDrops.length - 1].probability + item.probability\n            }\n            this.itemDrops.push(item)\n        }\n        this.addDrop(FightData.ins.levelJson.drop)\n\n        if (this.isTimeDrop) {\n            this.initTimerDropData();\n        }\n    }\n    onFight_Start_Complete() {\n        this.isStart = true\n        this.fightInitialDrop()\n        this.initExtraDropData();\n        RoguePop.create()\n    }\n\n    onFight_Monster_Dead(abs: Monster) {\n        if (this.isTimeDrop) {\n            return\n        }\n        if (abs && abs.info) {\n            if (abs.info.exp) {\n                this.addExp(abs.info.exp)\n                this.checkExpUp(abs.getHitPos())\n            }\n            if (abs.info.drop) {\n                this.addDrop([abs.info.drop], abs.getHitPos())\n            }\n            let pro = Random.getInt10000()\n            for (let index = 0; index < this.itemDrops.length; index++) {\n                const itemDrop = this.itemDrops[index];\n                if (pro <= itemDrop.probability) {\n                    EventMgr.emitFight(FightEvent.Fight_Drop_Item_Anim, itemDrop.animId, abs.getHitPos())\n                    break\n                }\n            }\n        }\n    }\n\n    onFight_Drop_Remove_First() {\n        this.rogueDrops.shift()\n    }\n\n    /** 增加掉落 */\n    addDrop(dropIds: number[], position?: Vec3) {\n        for (let i = 0; i < dropIds.length; i++) {\n            const dropId = dropIds[i];\n            let dropTab = tab.getData().PveStageDropTableByDropId.getValue(dropId)\n\n            for (let j = 0; j < dropTab.DropItemCount.length; j++) {\n                let dropItem = dropTab.DropItem[j]\n                const count = dropTab.DropItemCount[j];\n                for (let k = 0; k < count; k++) {\n                    this.addDropItem(dropItem, position)\n                }\n            }\n        }\n    }\n\n    addDropItem(dropItemId: number, position?: Vec3) {\n        if (DropControl.isRogueDrop(dropItemId)) {\n            if (RogueControl.ins.checkFull(dropItemId)) {\n                return\n            }\n            if (DropControl.isRogueEggs(dropItemId)) { //蛋放前面，先选英雄\n                this.rogueDrops.unshift(dropItemId)\n            } else {\n                this.rogueDrops.push(dropItemId)\n                this.feather += 1\n            }\n        } else {\n            if (this.otherDrops.has(dropItemId) == null) {\n                this.otherDrops.set(dropItemId, 0)\n            }\n            this.otherDrops.set(dropItemId, this.otherDrops.get(dropItemId) + 1)\n        }\n        EventMgr.emitFight(FightEvent.Fight_Drop_Item, dropItemId, position)\n        if (this.isStart && this.audoDropCollect) {\n            // RoguePop.create()\n        }\n    }\n\n    getLenByType(_type: tab.VirtualItemType) {\n        let eggsLen = 0\n        for (let index = 0; index < this.rogueDrops.length; index++) {\n            const v = this.rogueDrops[index];\n            let bo = DropControl.isRogueEggs(v)\n            if (_type == tab.VirtualItemType.VirtualItemType_Eggs) {\n                if (bo) {\n                    eggsLen += 1\n                }\n            } else {\n                if (!bo) {\n                    eggsLen += 1\n                }\n            }\n        }\n        return eggsLen\n    }\n\n    checkEggsFull() {\n        let heroLen = 5 - PlayerControl.ins.getNoCreateHeros().length\n        let eggsLen = 0\n        for (let index = 0; index < this.rogueDrops.length; index++) {\n            const v = this.rogueDrops[index];\n            if (DropControl.isRogueEggs(v)) {\n                eggsLen += 1\n            }\n        }\n        return heroLen + eggsLen >= 5\n    }\n\n    addExp(_exp: number) {\n        this.exp += _exp\n        console.log(\"exp:\",this.exp,_exp)\n    }\n\n    /** 时间增加 */\n    addTime(dt: number) {\n        this.timeExp += dt\n        if (this.timeExp >= FightMacro.SECOND) {\n            this.timeExp -= FightMacro.SECOND\n            this.addExp(1)\n            this.checkTimeExpUp()\n        }\n    }\n    /** 检测时间掉落 */\n    checkExpUp(position?: Vec3) {\n        for (let index = this.expLv; index < this.eggDropGroups.length; index++) {\n            const v = this.eggDropGroups[index];\n            if (this.exp >= v.EggDropExp) {\n                this.expLv = v.EggDropLevel\n                this.addDrop([v.EggDropContent], position)\n            }\n        }\n\n    }\n    /** 时间经验掉落 */\n    checkTimeExpUp() {\n        if (this.timerDropTimes && this.timerDropTimes.length > 0) {\n            if (this.exp >= this.timerDropTimes[0]) {\n                this.addDrop([this.timerDropIds[0]]);\n                this.timerDropTimes.shift();\n                this.timerDropIds.shift();\n            }\n        }\n    }\n\n    //时间刷新\n    iFightUpdate(dt: number): void {\n        this.isTimeDrop && this.addTime(dt)\n        this.isExtraDrop && this.addExtraDropTime(dt);\n    }\n\n    /** 战场初始掉落（不包含关卡） */\n    fightInitialDrop() {\n        if (FightData.ins.isWorldAndGuildBoss()) {\n            return;\n        }\n        let num = PlayerControl.ins.getGlobleAttr(tab.AttrType.AttrType_InitialScroll);\n        let dropIds = [];\n        let id = tab.getData().GetKeyValue_ConfigTable().InitialDropFeather;\n        for (let i: number = 0; i < num; i++) {\n            dropIds.push(id);\n        }\n        if (dropIds.length > 0) {\n            this.addDrop(dropIds);\n        }\n\n    }\n\n\n    static isRogueDrop(dropItemId: number) {\n        let dropTab = tab.getData().VirtualItemByVirtualItemId.getValue(dropItemId)\n        if (dropTab.VirtualItemType == tab.VirtualItemType.VirtualItemType_Eggs || dropTab.VirtualItemType == tab.VirtualItemType.VirtualItemType_Feathers) {\n            return true\n        }\n        return false\n    }\n\n    static isRogueEggs(dropItemId: number) {\n        let dropTab = tab.getData().VirtualItemByVirtualItemId.getValue(dropItemId)\n        return dropTab.VirtualItemType == tab.VirtualItemType.VirtualItemType_Eggs\n    }\n\n    static isRogueType(dropItemId: number, _type: tab.VirtualItemType) {\n\n    }\n    /** 时间增加 */\n    addExtraDropTime(dt: number) {\n        this.extraDropTimeExp += dt\n        if (this.extraDropTimeExp >= FightMacro.SECOND) {\n            this.extraDropTimeExp -= FightMacro.SECOND\n            this.checkExtraDrop();\n        }\n    }\n    /** 检测额外掉落 */\n    checkExtraDrop() {\n        if (this.extraDropTimes.length > 0) {\n            if (WaveTimeControl.ins.nowTotalTime >= this.extraDropTimes[0]) {\n                this.addDrop([tab.getData().GetKeyValue_ConfigTable().AddDropFeather]);\n                this.extraDropTimes.splice(0, 1);\n                this.isExtraDrop = this.extraDropTimes.length > 0;\n                error(\"额外掉落羽毛====\", WaveTimeControl.ins.nowTotalTime)\n            }\n        }\n    }\n\n    /**\n     * 初始化额外掉落数据\n     */\n    initExtraDropData() {\n        this.extraDropTimes = [];\n        this.isExtraDrop = false;\n        if (FightData.ins.isWorldAndGuildBoss()) {\n            return;\n        }\n\n\n        // if(this.p)\n        let count = PlayerControl.ins.getGlobleAttr(tab.AttrType.AttrType_AddScroll);\n        if (count > 0) {\n            let table = tab.getData().PveAddFeatherDropTableByCount.getValue(count);\n            if (table) {\n                for (let i: number = 0; i < table.Times.length; i += 2) {\n                    let min = table.Times[i];\n                    let max = table.Times[i + 1];\n                    let r = getRandomInt(min, max);\n                    this.extraDropTimes.push(r);\n                }\n                error(\"额外掉落羽毛随机时间====\", this.extraDropTimes)\n                this.isExtraDrop = this.extraDropTimes.length > 0;\n            } else {\n                error(\"额外掉落配表错误 数量\", count)\n            }\n        }\n\n    }\n\n    /**初始化时间掉落数据 */\n    initTimerDropData() {\n        console.error('初始化时间掉落数据', this.timeExp, this.exp)\n        this.timerDropTimes = [];\n        this.timerDropIds = [];\n        let table = tab.getData().PveTimeDropTableByStageId.getValue(FightData.ins.stageId);\n        if (table) {\n            this.timerDropTimes = [].concat(table.DropTime);\n            this.timerDropIds = [].concat(table.DropCount);\n        }\n    }\n\n}\n\n\n\n"]}