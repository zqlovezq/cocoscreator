{"version":3,"sources":["file:///C:/chickenStarClient/client/assets/scripts/logic/model/activity/battlePass/BattlePassDataMgr.ts"],"names":["_decorator","AbsControl","TaskData","tab","RedMgr","RedDotType","ccclass","property","BattlePassDataMgr","_battleMap","Map","_battlePassMap","ins","_instance","initPassBattle","msg","clear","passMap","battlePassMap","Object","keys","forEach","key","tasks","sort","task1","task2","id","set","Number","val","battlePassTab","getData","BattlePassTableById","getValue","tabName","BattlePassTab","IsBattleBtn","has","arr","get","push","initBattlePassTasks","refreshEvent","Battle_Pass","getBattleMap","refreshTasks","allTasks","i","length","k","getBattlePassData","getAllReceiveTaskId","result","battlePass","taskid","taskInfo","getBattlePassTaskInfo","isBoughtAdvance","isCanReceived","isAdvanceReceived","progress","taskTable","FinishParam1","getDataByPassName","buyBattlePassData","passData","getDefaultPassName","name","BattlePassTab_WorldBossPass","defaultName","changeView","value","_result","Id","concat"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node } from 'cc';\r\nimport { AbsControl } from '../../../../framework/base/IAbs';\r\nimport { proto } from 'client_protocol';\r\nimport { TaskData } from '../../task/TaskData';\r\nimport { tab } from '../../../../Table/table_gen';\r\nimport { RedMgr } from '../../../mgr/RedMgr';\r\nimport { RedDotType } from '../../../red/RedDotType';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('BattlePassDataMgr')\r\nexport class BattlePassDataMgr extends AbsControl {\r\n    private _battleMap: Map<number, proto.BattlePass> = new Map();\r\n    private _battlePassMap: Map<tab.BattlePassTab, tab.BattlePassTable[]> = new Map();\r\n    private static _instance: BattlePassDataMgr;\r\n    public static get ins() {\r\n        if (null == this._instance) {\r\n            this._instance = new BattlePassDataMgr();\r\n        }\r\n        return this._instance;\r\n    }\r\n    initPassBattle(msg: proto.Msg_GetBattlePassInfoMapRsp) {\r\n        this._battleMap.clear();\r\n        this._battlePassMap.clear();\r\n        const passMap = msg.battlePassMap;\r\n        Object.keys(passMap).forEach(key => {\r\n            if (passMap[key].tasks) {\r\n                passMap[key].tasks.sort((task1, task2) => {\r\n                    return task1.id - task2.id;\r\n                })\r\n            }\r\n            this._battleMap.set(Number(key), passMap[key] as proto.BattlePass)\r\n        })\r\n\r\n        // 将所有战令数据按照页签存储\r\n        this._battleMap.forEach((val, key) => {\r\n            const battlePassTab = tab.getData().BattlePassTableById.getValue(key);\r\n            if (battlePassTab) {\r\n                const tabName = battlePassTab.BattlePassTab;\r\n                if (tabName && battlePassTab.IsBattleBtn) {\r\n                    if (this._battlePassMap.has(tabName)) {\r\n                        const arr = this._battlePassMap.get(tabName);\r\n                        arr.push(battlePassTab);\r\n                    } else {\r\n                        this._battlePassMap.set(tabName, [battlePassTab]);\r\n                    }\r\n                }\r\n            }\r\n        })\r\n        TaskData.ins.initBattlePassTasks(this._battleMap);\r\n        RedMgr.refreshEvent(RedDotType.Battle_Pass);\r\n    }\r\n    getBattleMap(){\r\n        return this._battleMap;\r\n    }\r\n    // 更新tasks\r\n    refreshTasks(id:number,tasks:proto.ITask[]){\r\n        const allTasks = this._battleMap.get(id).tasks;\r\n        for(let i=0;i<tasks.length;i++){\r\n            for(let k = 0;k<allTasks.length;k++){\r\n                if(tasks[i].id===allTasks[k].id){\r\n                    allTasks[k] = tasks[i];\r\n                }\r\n            }   \r\n        }\r\n    }\r\n    // 通过id直接获取数据\r\n    getBattlePassData(id: number): proto.BattlePass {\r\n        return this._battleMap.get(id);\r\n    }\r\n    // 通过id获取所有的可以领取的任务\r\n    getAllReceiveTaskId(id:number){\r\n        const result = [];\r\n        const battlePass = this.getBattlePassData(id);\r\n        if(!battlePass){\r\n            return result;\r\n        }\r\n        for(let i=0;i<battlePass.tasks.length;i++){\r\n            const taskid = battlePass.tasks[i].id;\r\n            const taskInfo = TaskData.ins.getBattlePassTaskInfo(taskid)\r\n            if(!battlePass.isBoughtAdvance){\r\n                if(taskInfo.isCanReceived){\r\n                    result.push(taskid)\r\n                }\r\n            }else{\r\n                if(!taskInfo.isAdvanceReceived&&taskInfo.progress>=taskInfo.taskTable.FinishParam1){\r\n                    result.push(taskid)\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    // 通过页签获取数据\r\n    getDataByPassName(tabName: tab.BattlePassTab) {\r\n        return this._battlePassMap.get(tabName);\r\n    }\r\n    buyBattlePassData(id: number): proto.BattlePass {\r\n        const passData = this.getBattlePassData(id);\r\n        passData.isBoughtAdvance = true;\r\n        return passData;\r\n    }\r\n    // 获取默认的页签name 并且有可领取的奖励\r\n    getDefaultPassName(){\r\n        let name = tab.BattlePassTab.BattlePassTab_WorldBossPass;\r\n        let defaultName =  tab.BattlePassTab.BattlePassTab_WorldBossPass;\r\n        let changeView = false;\r\n        this._battlePassMap.forEach((key,value)=>{\r\n            let result = [];\r\n            for(let i=0;i<key.length;i++){\r\n                const _result = this.getAllReceiveTaskId(key[i].Id);\r\n                result = result.concat(_result)\r\n            }\r\n            if(result.length>0&&name>=value){\r\n                name = value;\r\n                changeView = true;\r\n            }\r\n            if(defaultName>value){\r\n                defaultName = value;\r\n            }\r\n        })\r\n        return changeView?name:defaultName;\r\n    }\r\n}\r\n\r\n\r\n"]}