{"version":3,"sources":["file:///C:/chickenStarClient/client/assets/scripts/logic/fight/data/FightAttrData.ts"],"names":["FightAttrData","_decorator","tab","FightAttrCalculate","FightMacro","ccclass","property","PrdType","constructor","level","star","attr","Map","_hp","_maxHp","_hpPercent","_shield","_shieldPercent","_maxShield","isHpChange","prdCount","cb","clear","copy","newData","iterator","set","maxHp","hp","hpPercent","init","fullHp","changeCallback","_cb","getAttr","attrType","get","setAttr","value","attrChange","AttrType","AttrType_TotalHp","AttrType_ShieldLimit","changeMaxShield","addAttr","clearAttrByType","Math","min","floor","PERCENT","shield","changeShield","maxShield","getData","GetKeyValue_ConfigTable","ShieldLimit","shieldPercent","max","getHpShieldPercent","toStrong","getPrdCount","_type","addPrdCount","has","clearPrdCount"],"mappings":"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","sourcesContent":["import { _decorator, js, math } from \"cc\";\nimport { IClear } from \"../../../framework/base/IAbs\";\nimport { HeroInfo } from \"../../model/hero/HeroInfo\";\nimport { tab } from \"../../../Table/table_gen\";\nimport { FightAttrCalculate } from \"./FightAttrCalculate\";\nimport { FightMacro } from \"../define/FightDefine\";\n\nconst { ccclass, property } = _decorator;\nexport enum PrdType {\n    CriticalEffect = -1,\n    CriticalPerEffect = -2\n}\n\n/** 战斗角色属性数据 */\nexport class FightAttrData {\n    level: number = 1\n    star: number = 1\n\n    /** 属性计算 */\n    attr: Map<tab.AttrType, number> = new Map<tab.AttrType, number>()\n    /** 血量相关 */\n    private _hp: number = 0\n    private _maxHp: number = 0\n    private _hpPercent: number = 0\n    private _shield: number = 0\n    private _shieldPercent: number = 0\n    private _maxShield: number = 0\n\n    private isHpChange: boolean = false\n\n    private prdCount: Map<number, number> = new Map<number, number>()\n\n    //属性变化回调\n    private cb: Function\n    constructor() {\n        this.clear()\n    }\n    clear() {\n        this.attr.clear()\n        this._hp = 0\n        this._maxHp = 0\n        this._hpPercent = 0\n        this._shieldPercent = 0\n        this.isHpChange = false\n    }\n    copy(newData: FightAttrData) {\n        for (const iterator of newData.attr) {\n            this.attr.set(iterator[0], iterator[1])\n        }\n        this._maxHp = newData.maxHp\n        this._hp = newData.hp\n        this._hpPercent = newData.hpPercent\n        this.isHpChange = newData.isHpChange\n        this._shieldPercent = newData._shieldPercent\n    }\n    init() {\n        this.fullHp()\n    }\n\n    changeCallback(_cb: Function) {\n        this.cb = _cb\n    }\n\n    fullHp() {\n        this.hp = this.maxHp\n    }\n\n    getAttr(attrType: tab.AttrType) {\n        return this.attr.get(attrType) || 0\n    }\n    setAttr(attrType: tab.AttrType, value: number) {\n        this.attr.set(attrType, value)\n        FightAttrCalculate.attrChange(this, attrType, value)\n        if (attrType == tab.AttrType.AttrType_TotalHp) {\n            this.maxHp = value\n        }\n        if (attrType == tab.AttrType.AttrType_ShieldLimit) {\n            this.changeMaxShield()\n        }\n       \n        // if (attrType == tab.AttrType.AttrType_DamagePer1 && value < 0){\n        //     console.warn(\"攻击百分比1 负数\",value)\n        // }\n        this.cb && this.cb(attrType, value)\n    }\n    addAttr(attrType: tab.AttrType, value: number) {\n        this.setAttr(attrType, this.getAttr(attrType) + value)\n    }\n\n    clearAttrByType(attrType: tab.AttrType) {\n        this.setAttr(attrType, 0)\n    }\n\n    //---------------hp相关-------------------\n    /** 血量 */\n    get hp() {\n        return this._hp\n    }\n    /** 血量 */\n    set hp(value: number) {\n        if (this._hp == value) {\n            return\n        }\n        this._hp = value\n\n        this.isHpChange = true\n    }\n    /** 最大血量 */\n    get maxHp() {\n        return this._maxHp\n    }\n    /** 最大血量 */\n    set maxHp(value: number) {\n        if (this._maxHp == value) {\n            return\n        }\n        this._maxHp = value\n        this.hp = Math.min(this.hp, this.maxHp)\n        this.isHpChange = true\n        this.changeMaxShield()\n    }\n\n    /** 血量万分比 */\n    get hpPercent() {\n        if (this.isHpChange) {\n            this._hpPercent = Math.floor((this.hp / this.maxHp) * FightMacro.PERCENT)\n            this.isHpChange = false\n        }\n        return this._hpPercent\n    }\n\n    /** 护盾 */\n    get shield() {\n        return this._shield\n    }\n    /** 护盾 */\n    set shield(value: number) {\n        if (this._shield == value) {\n            return\n        }\n        this._shield = value\n        this.changeShield()\n    }\n\n    /** 最大护盾 */\n    get maxShield() {\n        return this._maxShield\n    }\n    set maxShield(value:number){\n        this._maxShield = value\n    }\n\n    changeMaxShield() {\n        this._maxShield = Math.floor(this.maxHp * ((tab.getData().GetKeyValue_ConfigTable().ShieldLimit + this.getAttr(tab.AttrType.AttrType_ShieldLimit)) / FightMacro.PERCENT))\n        this.changeShield()\n    }\n\n    get shieldPercent() {\n        return this._shieldPercent\n    }\n\n    set shieldPercent(value: number) {\n        this._shieldPercent = value\n    }\n\n    changeShield() {\n        this._shield = Math.max(Math.min(this._shield, this.maxShield), 0)\n        this.shieldPercent = Math.floor((this._shield / this.maxShield) * FightMacro.PERCENT)\n    }\n\n    /** 血盾百分比 */\n    getHpShieldPercent() {\n        return this.hpPercent + this.shieldPercent\n    }\n\n    toStrong() {\n        // console.log(\"属性\",\n        //     js.formatStr(\"等级:\", this.level),\n        //     js.formatStr(\"星级:\", this.star),\n        //     js.formatStr(\"血量:\", this.hp),\n        //     js.formatStr(\"最大血量:\", this.maxHp),\n        //     js.formatStr(\"血量百分比:\", this.hpPercent),\n        //     js.formatStr(\"属性:\", Array.from(this.attr.entries()).map(([key, value]) => `${tab.AttrType[key]}: ${value}`).join(', ')),\n        // )\n    }\n\n    getPrdCount(_type: number) {\n        return this.prdCount.get(_type) || 1\n    }\n\n    addPrdCount(_type) {\n        if (!this.prdCount.has(_type)) {\n            this.prdCount.set(_type, 1)\n        }\n        this.prdCount.set(_type, this.prdCount.get(_type) + 1)\n    }\n    clearPrdCount(_type) {\n        this.prdCount.set(_type, 1)\n    }\n}"]}