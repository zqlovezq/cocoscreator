{"version":3,"sources":["file:///C:/chickenStarClient/client/assets/scripts/logic/fight/base/skill/SkillTriggerControl.ts"],"names":["_decorator","Vec3","AbsControl","tab","SkillControl","AbsObjInfoAttr","BuffControl","EffectControl","FightMacro","FightData","AbsObjType","MonsterControl","PlayerControl","Random","ccclass","property","tempTypeSkills","tempPos","SkillTriggerControl","iFightUpdate","dt","ins","_instance","init","purge","onSkillTrigger","absInfo","type","parms","isRecycle","console","warn","tempSkills","length","skillGroup","normalGroup","isInNormal","skill","j","skills","isNormalAttack","getNowSkill","isTrigger","push","weaponeGroup","index","takeSkills","sort","a","b","Priority","skillTriger","behavior","argument","otherInfo","otherAbsInfo","behaviorInfo","conditionInfo","ii","v","triggerTabs","Triggertype","isInCD","conditions","indexOf","TriggerCondition","isSuccess","isTriggerChanceSucceed","attrData","getPrdCount","Id","addPrdCount","clearPrdCount","Behavior","TriggerTarget","TriggerTarget_Mine","isParmSucceed","isTriggerCondition","TriggerGoal","TriggerGoal_Mine","Triggertype_Dead","abs","isDead","isRole","Triggertype_BuffExpiration","TriggerCondition_BuffId","log","addTriggerCount","k","argumentTabs","Behavior_UseSkill","onUseSkill","Behavior_SwitchGroup","onSwitchGroup","Behavior_SwitchSkill","onSwitchSkill","Behavior_AddBuff","onAddBuff","Behavior_ConditionAddBuff","Behavior_UseEffect","onUseEffect","Behavior_AddAttackNum","onAddAttackNum","Behavior_Dead","onDead","Behavior_Revive","onRevive","Behavior_BackJump","onBackJump","Behavior_Summon","onSummon","Behavior_AddSkill","onAddSkill","Behavior_BuffClear","onClearBuff","Argument","Behavior_ReplaceMonsterAnimation","onReplaceMonsterAnimation","Behavior_ModifyLogicParameter","baseNum","Behavior_ModifyLogicParameterRange","getRandomInt","Behavior_BuffClearType","onClearBuffType","Parameters","bo","TriggerCondition_AttackNum","isParametersSucceedByAttackCount","TriggerCondition_HoldTime","time","getObjAttr","holdTime","getHoldTime","getAttr","AttrType","AttrType_HoldTimePercent","refreshHoldTime","TriggerCondition_TimeInterval","TriggerCondition_TimeRefresh","checkTimeRefresh","clearTimeRefresh","TriggerCondition_SkillId","TriggerCondition_SkillGroup","TriggerCondition_HpLostPer","lossHpPer","TriggerCondition_Critical","print","TriggerCondition_HpPer","hpPercent","TriggerCondition_HpRatio","TriggerCondition_CriticalPoint","TriggerCondition_BeCriticalPoint","TriggerCondition_BeCritical","TriggerCondition_RogueId","rogueId","TriggerCondition_TotalHpLostPer","isParametersSucceedByInfoAttr","totalLossHpPer","TriggerCondition_EveryHpLostPer","EverylHpLostPe","TriggerCondition_Distance","distance","buff","buffId","TriggerCondition_BuffLayerNum","getBuffIdTotalCount","TriggerCondition_WarnType","warningType","TriggerCondition_Level","getLevel","TriggerCondition_CheckAttr","TriggerCondition_DetectionSkillId","skillId","skillTrigger","bool","isParametersSucceed","triggerAttackCount","clearTriggerAttackCount","attrType","isClear","clearObjAttr","skillTab","targetPos","isLeader","getClicking","HandEnemy","getClickNodePos","useSkillAndBullet","switchSkill","switchSkillGroup","addRoleInfo","buffTab","addBuff","objId","effectTab","random","addEffect","count","addNormalAttackCount","hp","maxHp","PERCENT","updateHP","setBackJump","objType","enemy","summon","addSkill","removeBuffs","removeBuffType"],"mappings":"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","sourcesContent":["import { _decorator, CCInteger, Color, Component, instantiate, Label, Node, Prefab, Quat, Rect, sp, Sprite, tween, UITransform, Vec2, Vec3, view } from 'cc';\nimport { AbsControl } from '../../../../framework/base/IAbs';\nimport { SkillTab } from '../../power/powerTab/SkillTab';\nimport { AbsRole } from '../obj/role/AbsRole';\nimport { AbsRoleInfo } from '../obj/role/AbsRoleInfo';\nimport { tab } from '../../../../Table/table_gen';\nimport { BulletControl } from '../obj/bullet/BulletControl';\nimport { SearchEnemy } from '../ai/SearchEnemy';\nimport { SkillControl } from './SkillControl';\nimport { SkillTriggerTab } from '../../power/powerTab/SkillTriggerTab';\nimport { AbsObjInfo, AbsObjInfoAttr } from '../obj/AbsObjInfo';\nimport { BuffControl } from '../buff/BuffControl';\nimport { SkillGroupTab } from '../../power/powerTab/SkillGroupTab';\nimport { BuffTab } from '../../power/powerTab/BuffTab';\nimport { EffectControl } from '../effect/EffectControl';\nimport { EffectTab } from '../../power/powerTab/EffectTab';\nimport { FightMacro, IFightUpdate } from '../../define/FightDefine';\nimport { checkSameDay } from '../../../utils/GameUtil';\nimport { FightData } from '../../data/FightData';\nimport { AbsStateType } from '../obj/state/AbsState';\nimport { AbsObjType } from '../obj/AbsObj';\nimport { MonsterControl } from '../obj/role/monster/MonsterControl';\nimport { Monster } from '../obj/role/monster/Monster';\nimport { Buff } from '../buff/Buff';\nimport { TaskView } from '../../../model/task/TaskView';\nimport { PlayerControl } from '../obj/role/role/PlayerControl';\nimport { Random } from '../../util/Random';\n\n\nconst { ccclass, property } = _decorator;\nconst tempTypeSkills = {}\n\nconst tempPos = new Vec3(0, 0, 0);\nexport interface TriggerParms {\n    damage?: number,\n    conditions?: tab.TriggerCondition[],\n    otherAbsInfo?: AbsRoleInfo\n    rogueId?: number\n    lossHpPer?: number //损失生命比例\n    distance?: number//距离 两向量的欧氏距离平方\n    buff?: Buff\n    warningType?: number//警告类型\n    baseNum?: number //修改数值\n    skillId?: number\n}\n@ccclass('SkillTriggerControl')\nexport class SkillTriggerControl extends AbsControl implements IFightUpdate {\n    iFightUpdate(dt: number): void {\n    }\n\n    private static _instance: SkillTriggerControl;\n    public static get ins() {\n        if (null == this._instance) {\n            this._instance = new SkillTriggerControl();\n        }\n        return this._instance;\n    }\n\n\n    init(): void {\n\n    }\n\n    purge(): void {\n\n    }\n\n    /** 技能触发器 */\n    onSkillTrigger(absInfo: AbsRoleInfo, type: tab.Triggertype, parms: TriggerParms) {\n        if (absInfo.isRecycle) {\n            console.warn(\"已被销毁\")\n            return\n        }\n        if (tempTypeSkills[type] == null) {\n            tempTypeSkills[type] = []\n        }\n        let tempSkills = tempTypeSkills[type]\n        tempSkills.length = 0\n\n        let skillGroup = absInfo.normalGroup\n        if (skillGroup == null) {\n            return\n        }\n\n        let isInNormal = false\n        let skill: SkillTab\n        for (let j = 0; j < skillGroup.skills.length; j++) {\n            skill = skillGroup.skills[j]\n            if (skill.isNormalAttack()) { //普通攻击技能， 只检测当前技能\n                if (isInNormal) { //普通已放入\n                    continue\n                }\n                skill = absInfo.getNowSkill()\n            }\n            if (skill == null) {\n                continue\n            }\n\n            if (skill.isTrigger(type)) {\n                tempSkills.push(skill)\n                if (skill.isNormalAttack()) {\n                    isInNormal = true\n                }\n            }\n        }\n        if (absInfo.weaponeGroup) {//招式\n            for (let j = 0; j < absInfo.weaponeGroup.skills.length; j++) {\n                skill = absInfo.weaponeGroup.skills[j]\n                if (skill.isTrigger(type)) {\n                    tempSkills.push(skill)\n                }\n            }\n        }\n        for (let index = 0; index < absInfo.takeSkills.length; index++) {\n            skill = absInfo.takeSkills[index]\n            if (skill.isTrigger(type)) {\n                tempSkills.push(skill)\n            }\n        }\n\n\n        tempSkills.sort((a, b) => {\n            return a.Priority - b.Priority\n        })\n\n        let skillTriger: SkillTriggerTab\n        let behavior, argument\n\n        let otherInfo\n        if (parms && parms.otherAbsInfo) {\n            otherInfo = parms.otherAbsInfo\n        }\n\n        //执行目标， 条件目标\n        let behaviorInfo: AbsRoleInfo, conditionInfo: AbsRoleInfo\n\n        for (let ii = 0; ii < tempSkills.length; ii++) {\n            const v = tempSkills[ii];\n            if (v.triggerTabs.length == 0) {\n                continue\n            }\n            for (let j = 0; j < v.triggerTabs.length; j++) {\n                skillTriger = v.triggerTabs[j];\n                if (skillTriger.Triggertype != type || skillTriger.isInCD()) {\n                    continue\n                }\n                if (parms) {\n                    if (parms.conditions && parms.conditions.length) {//过滤非指定条件类型 （目前只有伤害计算类型这么处理）\n                        if (parms.conditions.indexOf(skillTriger.TriggerCondition) == -1) {\n                            continue\n                        }\n                    }\n                }\n\n                let isSuccess = skillTriger.isTriggerChanceSucceed(absInfo.attrData.getPrdCount(skillTriger.Id))\n                if (!isSuccess) {\n                    absInfo.attrData.addPrdCount(skillTriger.Id)\n                } else {\n                    absInfo.attrData.clearPrdCount(skillTriger.Id)\n                    if (skillTriger.Behavior.length) {\n                        //条件目标\n                        conditionInfo = skillTriger.TriggerTarget == tab.TriggerTarget.TriggerTarget_Mine ? absInfo : otherInfo\n                        if (conditionInfo == null) {\n                            continue\n                        }\n                        let isParmSucceed = this.isTriggerCondition(conditionInfo, skillTriger, v, parms)\n                        if (isParmSucceed) {\n                            //执行目标\n                            behaviorInfo = skillTriger.TriggerGoal == tab.TriggerGoal.TriggerGoal_Mine ? absInfo : otherInfo\n                            if (behaviorInfo == null) {\n                                continue\n                            }\n                            if (type != tab.Triggertype.Triggertype_Dead && behaviorInfo.abs.isDead) {\n\n                                if (behaviorInfo.abs.isRole() && type == tab.Triggertype.Triggertype_BuffExpiration && skillTriger.TriggerCondition == tab.TriggerCondition.TriggerCondition_BuffId) {\n                                    console.log(\"执行目标死亡---但是，死亡目标是英雄， 并且是光暗相互挂buff，不中断\",)\n                                } else {\n                                    console.log(\"执行目标死亡---\", type)\n                                    continue\n                                }\n\n                            }\n                            skillTriger.addTriggerCount()\n                            for (let k = 0; k < skillTriger.Behavior.length; k++) {\n                                behavior = skillTriger.Behavior[k];\n                                argument = skillTriger.argumentTabs[k]\n                                switch (behavior) {\n                                    case tab.Behavior.Behavior_UseSkill:\n                                        this.onUseSkill(skillTriger, behaviorInfo, argument)\n                                        break;\n                                    case tab.Behavior.Behavior_SwitchGroup:\n                                        this.onSwitchGroup(skillTriger, behaviorInfo, argument)\n                                        break;\n                                    case tab.Behavior.Behavior_SwitchSkill:\n                                        this.onSwitchSkill(skillTriger, behaviorInfo, argument)\n                                        break;\n                                    case tab.Behavior.Behavior_AddBuff:\n                                        this.onAddBuff(skillTriger, behaviorInfo, behaviorInfo, argument)\n                                        break;\n                                    case tab.Behavior.Behavior_ConditionAddBuff:\n                                        this.onAddBuff(skillTriger, conditionInfo, behaviorInfo, argument)\n                                        break;\n                                    case tab.Behavior.Behavior_UseEffect:\n                                        this.onUseEffect(skillTriger, behaviorInfo, argument)\n                                        break;\n                                    case tab.Behavior.Behavior_AddAttackNum:\n                                        this.onAddAttackNum(skillTriger, behaviorInfo, argument)\n                                        break;\n                                    case tab.Behavior.Behavior_Dead:\n                                        this.onDead(skillTriger, behaviorInfo, argument)\n                                        break\n                                    case tab.Behavior.Behavior_Revive:\n                                        this.onRevive(skillTriger, behaviorInfo, argument)\n                                        break\n                                    case tab.Behavior.Behavior_BackJump:\n                                        this.onBackJump(skillTriger, behaviorInfo, argument, skillTriger.argumentTabs)\n                                        break;\n                                    case tab.Behavior.Behavior_Summon:\n                                        this.onSummon(skillTriger, behaviorInfo, argument, skillTriger.argumentTabs)\n                                        break;\n                                    case tab.Behavior.Behavior_AddSkill:\n                                        this.onAddSkill(skillTriger, behaviorInfo, argument)\n                                        break\n                                    case tab.Behavior.Behavior_BuffClear:\n                                        this.onClearBuff(skillTriger, behaviorInfo, argument, skillTriger.Argument)\n                                        break\n                                    case tab.Behavior.Behavior_ReplaceMonsterAnimation:\n                                        this.onReplaceMonsterAnimation(skillTriger, behaviorInfo, argument, skillTriger.Argument)\n                                        break\n                                    case tab.Behavior.Behavior_ModifyLogicParameter:\n                                        console.log(\"修改逻辑计算参数\")\n                                        if (parms) {\n                                            parms.baseNum += argument\n                                        }\n                                        break\n                                    case tab.Behavior.Behavior_ModifyLogicParameterRange:\n                                        console.log(\"修改逻辑计算参数,随机区间\")\n                                        if (parms && skillTriger.Argument.length >= 2) {\n                                            parms.baseNum += Random.getRandomInt(skillTriger.Argument[0], skillTriger.Argument[1] + 1)\n                                        }\n                                        break\n                                    case tab.Behavior.Behavior_BuffClearType:\n                                        this.onClearBuffType(skillTriger, behaviorInfo, argument, skillTriger.Argument)\n                                        break\n\n                                }\n\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    isTriggerCondition(absInfo: AbsRoleInfo, skillTriger: SkillTriggerTab, skill: SkillTab, parms: TriggerParms) {\n        if (skillTriger.Parameters.length == 0) {\n            return true\n        }\n        let bo\n        switch (skillTriger.TriggerCondition) {\n            case tab.TriggerCondition.TriggerCondition_AttackNum:\n                return this.isParametersSucceedByAttackCount(absInfo, skillTriger)\n            case tab.TriggerCondition.TriggerCondition_HoldTime:\n                bo = (FightData.time - absInfo.getObjAttr(AbsObjInfoAttr.holdTime) >= skillTriger.getHoldTime(absInfo.attrData.getAttr(tab.AttrType.AttrType_HoldTimePercent)))\n                if (bo) {\n                    absInfo.refreshHoldTime()\n                }\n                return bo\n            case tab.TriggerCondition.TriggerCondition_TimeInterval:\n            case tab.TriggerCondition.TriggerCondition_TimeRefresh:\n                bo = skillTriger.checkTimeRefresh(skillTriger.Parameters[0])\n                if (bo) {\n                    skillTriger.clearTimeRefresh()\n                }\n                return bo\n            case tab.TriggerCondition.TriggerCondition_SkillId:\n                if (absInfo.getNowSkill()) {\n                    return absInfo.getNowSkill().Id == skillTriger.Parameters[0]\n                }\n                return false\n            case tab.TriggerCondition.TriggerCondition_SkillGroup:\n                return absInfo.normalGroup.Id == skillTriger.Parameters[0]\n            case tab.TriggerCondition.TriggerCondition_HpLostPer:\n                return parms && parms.lossHpPer > skillTriger.Parameters[0]\n            case tab.TriggerCondition.TriggerCondition_Critical://检测这个条件肯定达成\n                SkillTriggerControl.print(\"会心触发器--\")\n                return true\n            case tab.TriggerCondition.TriggerCondition_HpPer:\n                return absInfo.attrData.hpPercent < skillTriger.Parameters[0]\n            case tab.TriggerCondition.TriggerCondition_HpRatio:\n                return absInfo.attrData.hpPercent >= skillTriger.Parameters[0]\n\n            case tab.TriggerCondition.TriggerCondition_CriticalPoint://检测这个条件肯定达成\n                SkillTriggerControl.print(\"暴击触发器--\")\n                return true\n            case tab.TriggerCondition.TriggerCondition_BeCriticalPoint://检测这个条件肯定达成\n                SkillTriggerControl.print(\"被暴击触发器--\")\n                return true\n            case tab.TriggerCondition.TriggerCondition_BeCritical://检测这个条件肯定达成\n                SkillTriggerControl.print(\"被会心触发器--\")\n                return true\n            case tab.TriggerCondition.TriggerCondition_RogueId:\n                return skillTriger.Parameters.indexOf(parms.rogueId) >= 0\n            case tab.TriggerCondition.TriggerCondition_TotalHpLostPer:\n                return this.isParametersSucceedByInfoAttr(absInfo, skillTriger, AbsObjInfoAttr.totalLossHpPer, false)\n            case tab.TriggerCondition.TriggerCondition_EveryHpLostPer:\n                return this.isParametersSucceedByInfoAttr(absInfo, skillTriger, AbsObjInfoAttr.EverylHpLostPe)\n            case tab.TriggerCondition.TriggerCondition_Distance:\n                return parms && parms.distance >= skillTriger.Parameters[0] * skillTriger.Parameters[0]\n            case tab.TriggerCondition.TriggerCondition_BuffId:\n                return parms && parms.buff && parms.buff.buffId == skillTriger.Parameters[0]\n            case tab.TriggerCondition.TriggerCondition_BuffLayerNum:\n                return absInfo.getBuffIdTotalCount(skillTriger.Parameters[0]) >= skillTriger.Parameters[1]\n            case tab.TriggerCondition.TriggerCondition_WarnType:\n                return parms && parms.warningType == skillTriger.Parameters[0]\n            case tab.TriggerCondition.TriggerCondition_Level:\n                return absInfo.getLevel() >= skillTriger.Parameters[0]\n            case tab.TriggerCondition.TriggerCondition_CheckAttr:// 属性检测 \n                return absInfo.attrData.getAttr(skillTriger.Parameters[0] as undefined as tab.AttrType) >= skillTriger.Parameters[1]\n            case tab.TriggerCondition.TriggerCondition_DetectionSkillId:\n                return parms && parms.skillId == skillTriger.Parameters[0]\n        }\n        return true\n    }\n\n    /** 根据攻击次数判定参数是否成功 */\n    isParametersSucceedByAttackCount(absInfo: AbsRoleInfo, skillTrigger: SkillTriggerTab) {\n        let bool = skillTrigger.isParametersSucceed(absInfo.normalGroup.triggerAttackCount)\n        if (bool) {\n            absInfo.normalGroup.clearTriggerAttackCount()\n        }\n        return bool\n    }\n\n    /** 根据人物属性判定参数是否成功 */\n    isParametersSucceedByInfoAttr(absInfo: AbsRoleInfo, skillTrigger: SkillTriggerTab, attrType: AbsObjInfoAttr, isClear: boolean = true) {\n        SkillTriggerControl.print(\"isParametersSucceedByInfoAttr\", attrType, absInfo.getObjAttr(attrType), skillTrigger.Parameters)\n        let bool = skillTrigger.isParametersSucceed(absInfo.getObjAttr(attrType))\n        if (bool && isClear) {\n            absInfo.clearObjAttr(attrType)\n        }\n        return bool\n    }\n\n    /** 使用技能 */\n    onUseSkill(skillTriger: SkillTriggerTab, behaviorInfo: AbsRoleInfo, skillTab: SkillTab) {\n        SkillTriggerControl.print(\"触发器-使用技能-成功\", skillTriger, skillTab)\n        let targetPos\n        if (behaviorInfo.isLeader && PlayerControl.ins.getClicking() && skillTab.HandEnemy) {\n            targetPos = PlayerControl.ins.getClickNodePos()\n        }\n        SkillControl.ins.useSkillAndBullet(skillTab, behaviorInfo.abs, targetPos)\n    }\n\n    /** 切换技能 */\n    onSwitchSkill(skillTriger: SkillTriggerTab, behaviorInfo: AbsRoleInfo, skillTab: SkillTab) {\n        SkillTriggerControl.print(\"触发器-切换技能-成功\", skillTriger, skillTab)\n        SkillControl.ins.switchSkill(skillTab, behaviorInfo.abs)\n    }\n\n    /** 切换技能组 */\n    onSwitchGroup(skillTriger: SkillTriggerTab, behaviorInfo: AbsRoleInfo, skillGroup: SkillGroupTab) {\n        SkillTriggerControl.print(\"触发器-切换技能组-成功\", skillTriger, skillGroup)\n        SkillControl.ins.switchSkillGroup(skillGroup, behaviorInfo.abs)\n    }\n    /** 增加Buff */\n    onAddBuff(skillTriger: SkillTriggerTab, addRoleInfo: AbsRoleInfo, behaviorInfo: AbsRoleInfo, buffTab: BuffTab) {\n        SkillTriggerControl.print(\"触发器-增加Buff-成功\", skillTriger, buffTab)\n        BuffControl.ins.addBuff(buffTab, addRoleInfo.abs.objId, behaviorInfo.abs)\n    }\n\n    /** 使用效果  */\n    onUseEffect(skillTriger: SkillTriggerTab, behaviorInfo: AbsRoleInfo, effectTab: EffectTab) {\n        SkillTriggerControl.print(\"触发器-使用效果-成功\", skillTriger, effectTab)\n        effectTab.random()\n        EffectControl.ins.addEffect(effectTab, behaviorInfo.abs, behaviorInfo.abs)\n    }\n\n    /** 增加攻击次数 */\n    onAddAttackNum(skillTriger: SkillTriggerTab, behaviorInfo: AbsRoleInfo, count: number) {\n        SkillTriggerControl.print(\"触发器-增加攻击次数-成功\", skillTriger, count)\n        behaviorInfo.addNormalAttackCount(count)\n    }\n    /** 死亡 */\n    onDead(skillTriger: SkillTriggerTab, behaviorInfo: AbsRoleInfo, count: number) {\n        SkillTriggerControl.print(\"触发器-死亡-成功\", skillTriger, count)\n        behaviorInfo.abs.onDead()\n    }\n    /** 复活 */\n    onRevive(skillTriger: SkillTriggerTab, behaviorInfo: AbsRoleInfo, count: number) {\n        SkillTriggerControl.print(\"触发器-复活-成功\", skillTriger, count)\n        behaviorInfo.abs.onRevive()\n        behaviorInfo.attrData.hp = behaviorInfo.attrData.maxHp * ((count || FightMacro.PERCENT) / FightMacro.PERCENT)\n        behaviorInfo.abs.updateHP()\n    }\n\n    /** 后跳 */\n    onBackJump(skillTriger: SkillTriggerTab, behaviorInfo: AbsRoleInfo, argument: number, argumentTabs: any[]) {\n        SkillTriggerControl.print(\"触发器-后跳-成功\", skillTriger, argument, argumentTabs)\n        behaviorInfo.abs.setBackJump(skillTriger.Argument)\n    }\n\n    /** 召唤 */\n    onSummon(skillTriger: SkillTriggerTab, behaviorInfo: AbsRoleInfo, argument: number, argumentTabs: any[]) {\n        if (behaviorInfo.abs.objType == AbsObjType.enemy) {\n            SkillTriggerControl.print(\"触发器-召唤-成功\", skillTriger, argument, argumentTabs)\n            MonsterControl.ins.summon(behaviorInfo.abs as Monster, skillTriger.Argument)\n        }\n    }\n\n    /** 添加技能 */\n    onAddSkill(skillTriger: SkillTriggerTab, behaviorInfo: AbsRoleInfo, argument: SkillTab) {\n        SkillTriggerControl.print(\"触发器-添加技能-成功\", skillTriger, argument)\n        SkillControl.ins.addSkill(argument, behaviorInfo.abs)\n    }\n\n    /** 移除buff */\n    onClearBuff(skillTriger: SkillTriggerTab, behaviorInfo: AbsRoleInfo, argument: number, argumentTabs: number[]) {\n        SkillTriggerControl.print(\"触发器-移除buff-成功\", skillTriger, argument, argumentTabs)\n        BuffControl.ins.removeBuffs(argumentTabs, behaviorInfo.abs)\n    }\n\n    /**  清除buff类型  */\n    onClearBuffType(skillTriger: SkillTriggerTab, behaviorInfo: AbsRoleInfo, argument: number, argumentTabs: number[]) {\n        SkillTriggerControl.print(\"触发器-移除buff类型-成功\", skillTriger, argument, argumentTabs)\n        BuffControl.ins.removeBuffType(argument, behaviorInfo.abs)\n    }\n\n\n    /** 替换怪物动画为该怪物ID */\n    onReplaceMonsterAnimation(skillTriger: SkillTriggerTab, behaviorInfo: AbsRoleInfo, argument: number, argumentTabs: number[]) {\n        SkillTriggerControl.print(\"触发器-替换怪物动画为该怪物ID -成功\", skillTriger, argument, argumentTabs)\n        MonsterControl.ins.onReplaceMonsterAnimation(behaviorInfo.abs as Monster, argument)\n    }\n\n\n    static print(...args) {\n        // console.log(...args)\n    }\n}\n\n"]}