{"version":3,"sources":["file:///C:/chickenStarClient/client/assets/scripts/logic/fight/base/obj/role/role/PlayerControl.ts"],"names":["_decorator","UITransform","Vec3","AbsControl","AbsObjFactory","RoleInfo","FightRootControl","HeroFightInfo","EventMgr","FightEvent","FightData","AbsStateType","tab","FightMacro","ccclass","property","tempPos","clickWorldPos","clickNodePos","isWorldChange","PlayerControl","roleDataInfos","intoIndex","roles","roleIds","leaderRole","isAuto","_isClicking","ins","_instance","init","register","length","console","warn","getHeroById","id","index","v","itemId","getAllHeros","getRoles","getIntoHeros","list","level","push","sort","a","b","getHeros","log","onFight","Fight_Start","onFight_Start","Fight_Start_Complete","onFight_Start_Complete","Role_Active","onRole_Active","Warning","onWarning","Fight_Monster_Dead","onFight_Monster_Dead","ReviveByItemid","onReviveByItemid","fightInfo","heroData","info","setServerData","initRole","fightSkillsToRole","skills","forEach","e","addTakeSkill","len","i","j","skillMutualExclusion","nowRole","beRole","takeSkills","mutualExclusionBySkill","splice","initTriggerMap","role","emitFight","checkAbsRoleGainBuff","rogueInfo","heroItemId","hero","lastLv","rogueTab","Level","roleActive","getRole","onLevelUp","warningType","isActive","onSkillTrigger","Triggertype","Triggertype_warning","absRole","isBoss","Triggertype_BossDied","onRevive","Fight_Initiative_Revive","getNoCreateHeros","noCreateHeros","setAudo","bo","getLeader","getNextPosIndex","roleInfo","isHeroClassWarrior","total","isHeroClassSame","configTab","Class","heroInfo","setHeroInfo","error","configId","addRole","getRoleActiveLen","isLeader","posIndex","roleHead","getUIView","createRoleHead","barItem","createBarItem","setAttrData","attrData","setPosition","getRootView","getRolePosByIndex","avatar","updatePause","RolePosType","five","skill","skillPowers","createTypeAnyId","PowerType","PowerType_SkillTable","getData","GetKeyValue_ConfigTable","FrontSkill","abs","avatarShadow","getSprite","setTexture","CaptainSkill","Select_leader","changeState","RoleBorn","Sort_AbsRole","heroId","heroFightInfo","getGlobleAttr","attrType","getTotalValueByAttrType","attr","value","getAttr","getMaxBuffNumByBuffGroup","buffGroup","num","buff","getBuffByGroup","ruleNumber","getPosition","getWorldPosition","body","setClickWorldPos","x","y","isClicking","sendClickSkill","click","getClicking","getClickNodePos","nn","getObjectsNode","getComponent","convertToNodeSpaceAR","destroy"],"mappings":"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","sourcesContent":["import { _decorator, CCInteger, Color, Component, Input, instantiate, Label, Node, Prefab, Quat, Rect, sp, Sprite, tween, UITransform, v3, Vec2, Vec3, view } from 'cc';\nimport { AbsControl } from '../../../../../../framework/base/IAbs';\nimport { AbsObjFactory } from '../../AbsObjFactory';\nimport { Role } from './Role';\nimport { RoleInfo } from './RoleInfo';\nimport { FightRootControl } from '../../../../FightRootControl';\nimport { HeroInfo } from '../../../../../model/hero/HeroInfo';\nimport { HeroFightInfo } from '../../../../data/HeroFightInfo';\nimport { EventMgr } from '../../../../../mgr/EventMgr';\nimport { FightEvent } from '../../../../define/FightEvent';\nimport { FightMsgControl } from '../../../../FightMsgControl';\nimport { RogueInfo } from '../../../../view/rogue/RogueInfo';\nimport { RogueControl } from '../../../../view/rogue/RogueControl';\nimport { FightData } from '../../../../data/FightData';\nimport { AbsStateType } from '../../state/AbsState';\nimport { SkillTab } from '../../../../power/powerTab/SkillTab';\nimport { tab } from '../../../../../../Table/table_gen';\nimport { Monster } from '../monster/Monster';\nimport { SkillControl } from '../../../skill/SkillControl';\nimport { FightMacro } from '../../../../define/FightDefine';\nimport { Buff } from '../../../buff/Buff';\n\nconst { ccclass, property } = _decorator;\nconst tempPos = new Vec3(0, 0, 0);\nconst clickWorldPos = new Vec3(0, 0, 0);\nconst clickNodePos = new Vec3(0, 0, 0);\nvar isWorldChange: boolean = false\n@ccclass('PlayerControl')\nexport class PlayerControl extends AbsControl {\n    private static _instance: PlayerControl;\n    public static get ins() {\n        if (null == this._instance) {\n            this._instance = new PlayerControl();\n        }\n        return this._instance;\n    }\n\n    roleDataInfos: HeroFightInfo[] = []\n    private intoIndex: number = 0\n    roles: Role[] = []\n    roleIds: number[] = []\n    private leaderRole: Role = null\n    /** 是否为自动 */\n    isAuto: boolean = false\n    /** 是否点击种 */\n    _isClicking: boolean\n\n    init(): void {\n        this.register()\n        this.isAuto = false\n        this.roles.length = 0\n        this.roleDataInfos.length = 0\n        this.leaderRole = null\n        this.intoIndex = 0\n        this._isClicking = false\n        this.roleIds.length = 0\n        console.warn(\"销毁\")\n    }\n\n    getHeroById(id: number): HeroFightInfo {\n        for (let index = 0; index < this.roleDataInfos.length; index++) {\n            const v = this.roleDataInfos[index];\n            if (v.itemId == id) {\n                return v\n            }\n        }\n    }\n\n    getAllHeros() {\n        return this.roleDataInfos\n    }\n\n    getRoles() {\n        return this.roles\n    }\n\n    getIntoHeros() {\n        let list = []\n        for (let index = 0; index < this.roleDataInfos.length; index++) {\n            const v = this.roleDataInfos[index];\n            if (v.level > 0) {\n                list.push(v)\n            }\n        }\n        list.sort((a, b) => {\n            return a.intoIndex - b.intoIndex\n        })\n        return list\n    }\n\n    getHeros() {\n        let list = []\n        for (let index = 0; index < this.roleDataInfos.length; index++) {\n            const v = this.roleDataInfos[index];\n            list.push(v)\n        }\n        console.log(list)\n        list.sort((a, b) => {\n            if (a.intoIndex != 0 && b.intoIndex != 0) {\n                return a.intoIndex - b.intoIndex\n            }\n\n            return a.intoIndex > 0 ? -1 : 1\n        })\n\n\n        return list\n    }\n\n    register(): void {\n        EventMgr.onFight(FightEvent.Fight_Start, this.onFight_Start, this)\n        EventMgr.onFight(FightEvent.Fight_Start_Complete, this.onFight_Start_Complete, this)\n\n        EventMgr.onFight(FightEvent.Role_Active, this.onRole_Active, this)\n        EventMgr.onFight(FightEvent.Warning, this.onWarning, this)\n        EventMgr.onFight(FightEvent.Fight_Monster_Dead, this.onFight_Monster_Dead, this)\n        EventMgr.onFight(FightEvent.ReviveByItemid, this.onReviveByItemid, this)\n\n    }\n\n    onFight_Start() {\n        console.log(\"Fight_Start-------\")\n\n        for (let index = 0; index < FightData.ins.fightInfo.heroData.length; index++) {\n            const v = FightData.ins.fightInfo.heroData[index];\n            let info = new HeroFightInfo()\n            info.setServerData(v)\n            this.roleDataInfos.push(info)\n            this.initRole(info)\n        }\n    }\n    /** 战场技能加到角色身上 */\n    fightSkillsToRole() {\n        let skills = FightData.ins.skills\n        for (let index = 0; index < skills.length; index++) {\n            this.roles.forEach(e => {\n                e.info.addTakeSkill(skills[index])\n            })\n        }\n\n        let len = this.roles.length\n        for (let i = 0; i < len - 1; i++) {\n            for (let j = i + 1; j < len; j++) {\n                this.skillMutualExclusion(this.roles[i].info, this.roles[j].info)\n            }\n        }\n    }\n\n    skillMutualExclusion(nowRole: RoleInfo, beRole: RoleInfo) {\n        for (let index = nowRole.takeSkills.length - 1; index >= 0; index--) {\n            if (beRole.mutualExclusionBySkill(nowRole.takeSkills[index]) == 1) {\n                console.log(\"aToB,技能互斥，检测者小， 删除\")\n                nowRole.takeSkills.splice(index, 1)\n            }\n        }\n    }\n\n    onFight_Start_Complete() {\n        console.log(\"onFight_Start_Complete-------\")\n        //全局技能加入到角色技能中\n        this.fightSkillsToRole()\n        this.roles.forEach(e => {\n            e.info.initTriggerMap()\n        })\n        for (let index = 0; index < this.roles.length; index++) {\n            const role = this.roles[index];\n            EventMgr.emitFight(FightEvent.checkAbsRoleGainBuff, role)\n        }\n    }\n\n    onRole_Active(rogueInfo: RogueInfo) {\n        if (rogueInfo.heroItemId) {\n            let hero = this.getHeroById(rogueInfo.heroItemId)\n            let lastLv = hero.level\n            hero.level = rogueInfo.rogueTab.Level\n            if (lastLv == 0) {\n                this.intoIndex += 1\n                hero.intoIndex = this.intoIndex\n                this.roleActive(hero)\n                this.roleIds.push(hero.id)\n            }\n            let role = this.getRole(rogueInfo.heroItemId)\n            role.info.onLevelUp(lastLv, hero.level)\n        }\n    }\n\n\n    onWarning(warningType: number) {\n        this.roles.forEach(e => {\n            if (e.isActive) {\n                e.info.onSkillTrigger(tab.Triggertype.Triggertype_warning, { warningType: warningType })\n            }\n        })\n    }\n\n    onFight_Monster_Dead(absRole: Monster) {\n        if (absRole.info && absRole.info.isBoss) {\n            this.roles.forEach(e => {\n                if (e.isActive) {\n                    e.info.onSkillTrigger(tab.Triggertype.Triggertype_BossDied)\n                }\n            })\n        }\n    }\n\n    onReviveByItemid(itemId: number) {\n        let role = this.getRole(itemId)\n        if (role) {\n            role.onRevive()\n            EventMgr.emitFight(FightEvent.Fight_Initiative_Revive, role)\n        }\n    }\n\n    getNoCreateHeros(): HeroFightInfo[] {\n        let noCreateHeros = []\n        for (let i = 0; i < this.roleDataInfos.length; i++) {\n            if (this.roleDataInfos[i].level == 0) {\n                noCreateHeros.push(this.roleDataInfos[i])\n            }\n        }\n        return noCreateHeros\n    }\n\n    setAudo(bo: boolean) {\n        this.isAuto = bo\n        if (this.getLeader() == null) {\n            return\n        }\n        this.getLeader().info.setAudo(bo)\n    }\n\n    getNextPosIndex(roleInfo: RoleInfo) {\n        if (roleInfo.isHeroClassWarrior()) {\n            return 5 //展示固定5\n        } else {\n            let total = 0\n            for (let i = 0; i < this.roles.length; i++) {\n                if (this.roles[i].isActive && !this.roles[i].info.isHeroClassWarrior()) {\n                    total++\n                }\n            }\n            return total + 1\n        }\n    }\n\n    isHeroClassSame(roleInfo) {\n        for (let i = 0; i < this.roles.length; i++) {\n            if (this.roles[i].info.configTab.Class == roleInfo.configTab.Class) {\n                return true\n            }\n        }\n        return false\n    }\n\n    initRole(heroInfo: HeroFightInfo) {\n        let roleInfo = new RoleInfo()\n        roleInfo.setHeroInfo(heroInfo)\n        if (this.isHeroClassSame(roleInfo)) {\n            console.error(\"createRole 已有相同职业\", roleInfo.configId)\n            return\n        }\n        roleInfo.init()\n\n        let role = AbsObjFactory.getRole(roleInfo)\n\n        this.addRole(role)\n        return role\n    }\n\n    getRoleActiveLen() {\n        let total = 0\n        for (let index = 0; index < this.roles.length; index++) {\n            const role = this.roles[index];\n            if (role.isActive) {\n                total++\n            }\n        }\n        return total\n    }\n\n    roleActive(heroInfo: HeroFightInfo) {\n        let role = this.getRole(heroInfo.itemId)\n        let roleInfo = role.info\n        if (this.getRoleActiveLen() == 0) {\n            roleInfo.isLeader = true\n            roleInfo.setAudo(this.isAuto)\n        } else {\n            roleInfo.setAudo(true)\n        }\n        roleInfo.posIndex = this.getNextPosIndex(roleInfo)\n\n\n        role.roleHead = FightRootControl.ins.getUIView().createRoleHead(roleInfo)\n        role.barItem = FightRootControl.ins.getUIView().createBarItem(roleInfo)\n        role.barItem.setAttrData(roleInfo.attrData)\n        role.setPosition(FightRootControl.ins.getRootView().getRolePosByIndex(roleInfo.posIndex))\n        role.avatar.updatePause(false)\n        role.isActive = true\n\n        if (roleInfo.posIndex == FightMacro.RolePosType.five) {//添加战士额外技能\n            let skill = roleInfo.skillPowers.createTypeAnyId(tab.PowerType.PowerType_SkillTable, tab.getData().GetKeyValue_ConfigTable().FrontSkill) as SkillTab\n            roleInfo.addTakeSkill(skill, true)\n        }\n        if (roleInfo.isLeader) {\n            this.leaderRole = roleInfo.abs\n            role.avatarShadow.avatar.getSprite().setTexture(\"textrue/fight/shadow_captain\")\n            //添加队长额外技能\n            let skill = roleInfo.skillPowers.createTypeAnyId(tab.PowerType.PowerType_SkillTable, tab.getData().GetKeyValue_ConfigTable().CaptainSkill) as SkillTab\n            roleInfo.addTakeSkill(skill, true)\n            EventMgr.emitFight(FightEvent.Select_leader, this.leaderRole)\n        }\n        role.changeState(AbsStateType.RoleBorn)\n        EventMgr.emitFight(FightEvent.Sort_AbsRole)\n        return role\n    }\n\n    getRole(heroId: number) {\n        for (let index = 0; index < this.roles.length; index++) {\n            const v = this.roles[index];\n            if (v.info.heroFightInfo.itemId == heroId) {\n                return v\n            }\n        }\n    }\n\n    addRole(role: Role) {\n        this.roles.push(role)\n\n    }\n\n    /** 获取额外属性   初始卷轴、额外卷轴、刷新次数*/\n    getGlobleAttr(attrType: tab.AttrType) {\n        return this.getTotalValueByAttrType(attrType)\n    }\n\n    getTotalValueByAttrType(attr: tab.AttrType) {\n        let value = 0\n        PlayerControl.ins.roles.forEach((role) => {\n            value += role.info.attrData.getAttr(attr)\n        })\n        return value\n    }\n\n\n    getMaxBuffNumByBuffGroup(buffGroup: tab.BuffGroup) {\n        let num = 0\n\n        let buff: Buff\n        this.roles.forEach(e => {\n            buff = e.info.getBuffByGroup(buffGroup)\n            if (buff && buff.ruleNumber > num) {\n                num = buff.ruleNumber\n            }\n        })\n        return num\n    }\n\n    //-------------------队长相关----------------\n    getLeader() {\n        return this.leaderRole\n    }\n\n    /** 队长位置 */\n    getPosition() {\n        return this.leaderRole.getPosition()\n    }\n\n    getWorldPosition() {\n        return this.leaderRole.body.getPosition()\n    }\n\n    setClickWorldPos(x: number, y: number) {\n        if (this.getLeader() == null) {\n            return\n        }\n        this.isClicking(true)\n        clickWorldPos.x = x\n        clickWorldPos.y = y\n        isWorldChange = true\n        PlayerControl.ins.getLeader().sendClickSkill(clickWorldPos)\n    }\n\n    isClicking(click: boolean) {\n        this._isClicking = click\n    }\n    getClicking() {\n        return this._isClicking\n    }\n\n    getClickNodePos() {\n        if (isWorldChange) {\n            isWorldChange = false\n            let nn = FightRootControl.ins.getObjectsNode()\n            nn.getComponent(UITransform).convertToNodeSpaceAR(clickWorldPos, clickNodePos)\n        }\n        return clickNodePos\n    }\n\n    destroy() {\n        this.init()\n    }\n}\n\n"]}