{"version":3,"sources":["file:///C:/chickenStarClient/client/assets/scripts/logic/model/mutation/PaintingHeroItem.ts"],"names":["_decorator","Component","Label","Node","sp","Sprite","HeroDataControl","tab","HeroStar","UIMgr","ViewName","LangMgr","createAnimation","setGraySpine","ccclass","property","itemState","PaintingHeroItem","Skeleton","_heroId","_state","NOACTIVE","initData","itemId","isFirstActive","heroTab","getData","HeroTableById","getValue","itemTab","ItemTableById","activeStar","ins","paintingActive","get","heroClassTable","HeroClassTableByHeroClass","Class","sp_vocation","setTexture","Icon","node_star","active","getComponent","showStar","lbl_name","string","getLab","Name","maxStar","getMaxPaintingStar","ACTIVE","ACTIVE_UP","ske_hero","node","Idle","node_star_up","sp_name_bg","grayscale","Born","clickPaintingUp","show","viewName","PaintingLvupPop","data","heroId","onDisable"],"mappings":"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","sourcesContent":["import { _decorator, Component, Label, log, Node, sp, Sprite } from 'cc';\r\nimport { proto } from 'client_protocol';\r\nimport { HeroDataControl } from '../hero/herobag/HeroDataControl';\r\nimport { tab } from '../../../Table/table_gen';\r\nimport { HeroStar } from '../hero/HeroStar';\r\nimport { UIMgr } from '../../mgr/UIMgr';\r\nimport { ViewName } from '../../define/ViewDefine';\r\nimport { LangMgr } from '../../mgr/LangMgr';\r\nimport { LoadResAsync } from '../../mgr/ResMgr';\r\nimport { createAnimation, setGraySpine } from '../../utils/GameUtil';\r\nconst { ccclass, property } = _decorator;\r\nenum itemState {\r\n    NOACTIVE = 1,\r\n    ACTIVE = 2,\r\n    ACTIVE_UP = 3\r\n}\r\n@ccclass('PaintingHeroItem')\r\nexport class PaintingHeroItem extends Component {\r\n    @property(Node)\r\n    node_star: Node = null;\r\n    @property(Sprite)\r\n    sp_vocation:Sprite = null;\r\n    @property(sp.Skeleton)\r\n    ske_hero: sp.Skeleton = null;\r\n    @property(Label)\r\n    lbl_name = null;\r\n    @property(Node)\r\n    node_star_up: Node = null;\r\n    @property(Sprite)\r\n    sp_name_bg: Sprite = null;\r\n    private _heroId: number = 0;\r\n    private _state: itemState = itemState.NOACTIVE;\r\n    initData(itemId: number, isFirstActive?: boolean) {\r\n        this._heroId = itemId;\r\n        const heroTab = tab.getData().HeroTableById.getValue(this._heroId);\r\n        const itemTab = tab.getData().ItemTableById.getValue(itemId);\r\n        const activeStar = HeroDataControl.ins.paintingActive.get(this._heroId);\r\n        let heroClassTable = tab.getData().HeroClassTableByHeroClass.getValue(heroTab.Class);\r\n        this.sp_vocation.setTexture(heroClassTable.Icon);\r\n        if (activeStar) {\r\n            this.node_star.active = true;\r\n            this.node_star.getComponent(HeroStar).showStar(activeStar);\r\n        } else {\r\n            this.node_star.active = false;\r\n        }\r\n        this.lbl_name.string = LangMgr.getLab(itemTab.Name);\r\n        if (activeStar) {\r\n            const maxStar = HeroDataControl.ins.getMaxPaintingStar(itemId);\r\n            if (maxStar && maxStar <= activeStar) {\r\n                // 当前不可提升等级\r\n                this._state = itemState.ACTIVE;\r\n            } else {\r\n                this._state = itemState.ACTIVE_UP;\r\n            }\r\n            if (!isFirstActive) {\r\n                createAnimation(this.ske_hero.node,heroTab.Idle);\r\n                setGraySpine(this.ske_hero, false);\r\n            }\r\n        } else {\r\n            // 未激活\r\n            // this.sp_icon.grayscale = true;\r\n            const maxStar = HeroDataControl.ins.getMaxPaintingStar(itemId);\r\n            if (maxStar) {\r\n                this._state = itemState.ACTIVE_UP;\r\n            } else {\r\n                this._state = itemState.NOACTIVE;\r\n            }\r\n            if (!isFirstActive) {\r\n                createAnimation(this.ske_hero.node,heroTab.Idle, 0);\r\n                setGraySpine(this.ske_hero, true);\r\n            }\r\n        }\r\n        this.node_star_up.active = this._state === itemState.ACTIVE_UP;\r\n        // 根据状态创建spine\r\n        this.sp_name_bg.grayscale = this._state === itemState.NOACTIVE;\r\n        if (isFirstActive) {\r\n            createAnimation(this.ske_hero.node,heroTab.Born,heroTab.Idle);\r\n            setGraySpine(this.ske_hero, false);\r\n        }\r\n\r\n    }\r\n    // 点击升级绘卷星级\r\n    clickPaintingUp() {\r\n        UIMgr.ins.show({\r\n            viewName: ViewName.PaintingLvupPop, data: {\r\n                heroId: this._heroId\r\n            }\r\n        })\r\n    }\r\n    protected onDisable(): void {\r\n        this.node_star.getComponent(HeroStar).onDisable();\r\n    }\r\n}\r\n\r\n\r\n"]}