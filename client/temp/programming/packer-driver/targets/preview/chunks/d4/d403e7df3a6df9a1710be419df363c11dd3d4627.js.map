{"version":3,"sources":["file:///C:/chickenStarClient/client/node_modules/protobufjs/src/converter.js"],"names":["_cjsLoader","_req","__cjsMetaURL","_req0","url","define","exports","require","module","__filename","__dirname","converter","Enum","util","genValuePartial_fromObject","gen","field","fieldIndex","prop","defaultAlreadyEmitted","resolvedType","values","keys","Object","i","length","typeDefault","repeated","fullName","isUnsigned","type","fromObject","mtype","fields","fieldsArray","codegen","name","resolve","safeProp","map","genValuePartial_toObject","toObject","slice","sort","compareFieldsById","repeatedFields","mapFields","normalFields","partOf","push","valuesById","long","low","high","unsigned","toString","toNumber","bytes","arrayDefault","Array","prototype","call","join","String","fromCharCode","apply","hasKs2","index","_fieldsArray","indexOf","_cjsExports"],"mappings":"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","sourcesContent":["import _cjsLoader from 'cce:/internal/ml/cjs-loader.mjs';\nimport { __cjsMetaURL as _req} from './enum';\nimport { __cjsMetaURL as _req0} from './util';\nlet _cjsExports;\nconst __cjsMetaURL = import.meta.url;\n_cjsLoader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {\n// #region ORIGINAL CODE\n\n\n \"use strict\";\n /**\n  * Runtime message from/to plain object converters.\n  * @namespace\n  */\n var converter = exports;\n\n var Enum = require(\"./enum\"),\n     util = require(\"./util\");\n\n /**\n  * Generates a partial value fromObject conveter.\n  * @param {Codegen} gen Codegen instance\n  * @param {Field} field Reflected field\n  * @param {number} fieldIndex Field index\n  * @param {string} prop Property reference\n  * @returns {Codegen} Codegen instance\n  * @ignore\n  */\n function genValuePartial_fromObject(gen, field, fieldIndex, prop) {\n     var defaultAlreadyEmitted = false;\n     /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\n     if (field.resolvedType) {\n         if (field.resolvedType instanceof Enum) { gen\n             (\"switch(d%s){\", prop);\n             for (var values = field.resolvedType.values, keys = Object.keys(values), i = 0; i < keys.length; ++i) {\n                 // enum unknown values passthrough\n                 if (values[keys[i]] === field.typeDefault && !defaultAlreadyEmitted) { gen\n                     (\"default:\")\n                         (\"if(typeof(d%s)===\\\"number\\\"){m%s=d%s;break}\", prop, prop, prop);\n                     if (!field.repeated) gen // fallback to default value only for\n                                              // arrays, to avoid leaving holes.\n                         (\"break\");           // for non-repeated fields, just ignore\n                     defaultAlreadyEmitted = true;\n                 }\n                 gen\n                 (\"case%j:\", keys[i])\n                 (\"case %i:\", values[keys[i]])\n                     (\"m%s=%j\", prop, values[keys[i]])\n                     (\"break\");\n             } gen\n             (\"}\");\n         } else gen\n             (\"if(typeof d%s!==\\\"object\\\")\", prop)\n                 (\"throw TypeError(%j)\", field.fullName + \": object expected\")\n             (\"m%s=types[%i].fromObject(d%s)\", prop, fieldIndex, prop);\n     } else {\n         var isUnsigned = false;\n         switch (field.type) {\n             case \"double\":\n             case \"float\": gen\n                 (\"m%s=Number(d%s)\", prop, prop); // also catches \"NaN\", \"Infinity\"\n                 break;\n             case \"uint32\":\n             case \"fixed32\": gen\n                 (\"m%s=d%s>>>0\", prop, prop);\n                 break;\n             case \"int32\":\n             case \"sint32\":\n             case \"sfixed32\": gen\n                 (\"m%s=d%s|0\", prop, prop);\n                 break;\n             case \"uint64\":\n                 isUnsigned = true;\n                 // eslint-disable-next-line no-fallthrough\n             case \"int64\":\n             case \"sint64\":\n             case \"fixed64\":\n             case \"sfixed64\": gen\n                 (\"if(util.Long)\")\n                     (\"(m%s=util.Long.fromValue(d%s)).unsigned=%j\", prop, prop, isUnsigned)\n                 (\"else if(typeof d%s===\\\"string\\\")\", prop)\n                     (\"m%s=parseInt(d%s,10)\", prop, prop)\n                 (\"else if(typeof d%s===\\\"number\\\")\", prop)\n                     (\"m%s=d%s\", prop, prop)\n                 (\"else if(typeof d%s===\\\"object\\\")\", prop)\n                     (\"m%s=new util.LongBits(d%s.low>>>0,d%s.high>>>0).toNumber(%s)\", prop, prop, prop, isUnsigned ? \"true\" : \"\");\n                 break;\n             case \"bytes\": gen\n                 (\"if(typeof d%s===\\\"string\\\")\", prop)\n                     (\"util.base64.decode(d%s,m%s=util.newBuffer(util.base64.length(d%s)),0)\", prop, prop, prop)\n                 (\"else if(d%s.length >= 0)\", prop)\n                     (\"m%s=d%s\", prop, prop);\n                 break;\n             case \"string\": gen\n                 (\"m%s=String(d%s)\", prop, prop);\n                 break;\n             case \"bool\": gen\n                 (\"m%s=Boolean(d%s)\", prop, prop);\n                 break;\n             /* default: gen\n                 (\"m%s=d%s\", prop, prop);\n                 break; */\n         }\n     }\n     return gen;\n     /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\n }\n\n /**\n  * Generates a plain object to runtime message converter specific to the specified message type.\n  * @param {Type} mtype Message type\n  * @returns {Codegen} Codegen instance\n  */\n converter.fromObject = function fromObject(mtype) {\n     /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\n     var fields = mtype.fieldsArray;\n     var gen = util.codegen([\"d\"], mtype.name + \"$fromObject\")\n     (\"if(d instanceof this.ctor)\")\n         (\"return d\");\n     if (!fields.length) return gen\n     (\"return new this.ctor\");\n     gen\n     (\"var m=new this.ctor\");\n     for (var i = 0; i < fields.length; ++i) {\n         var field  = fields[i].resolve(),\n             prop   = util.safeProp(field.name);\n\n         // Map fields\n         if (field.map) { gen\n     (\"if(d%s){\", prop)\n         (\"if(typeof d%s!==\\\"object\\\")\", prop)\n             (\"throw TypeError(%j)\", field.fullName + \": object expected\")\n         (\"m%s={}\", prop)\n         (\"for(var ks=Object.keys(d%s),i=0;i<ks.length;++i){\", prop);\n             genValuePartial_fromObject(gen, field, /* not sorted */ i, prop + \"[ks[i]]\")\n         (\"}\")\n     (\"}\");\n\n         // Repeated fields\n         } else if (field.repeated) { gen\n     (\"if(d%s){\", prop)\n         (\"if(!Array.isArray(d%s))\", prop)\n             (\"throw TypeError(%j)\", field.fullName + \": array expected\")\n         (\"m%s=[]\", prop)\n         (\"for(var i=0;i<d%s.length;++i){\", prop);\n             genValuePartial_fromObject(gen, field, /* not sorted */ i, prop + \"[i]\")\n         (\"}\")\n     (\"}\");\n\n         // Non-repeated fields\n         } else {\n             if (!(field.resolvedType instanceof Enum)) gen // no need to test for null/undefined if an enum (uses switch)\n     (\"if(d%s!=null){\", prop); // !== undefined && !== null\n         genValuePartial_fromObject(gen, field, /* not sorted */ i, prop);\n             if (!(field.resolvedType instanceof Enum)) gen\n     (\"}\");\n         }\n     } return gen\n     (\"return m\");\n     /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\n };\n\n /**\n  * Generates a partial value toObject converter.\n  * @param {Codegen} gen Codegen instance\n  * @param {Field} field Reflected field\n  * @param {number} fieldIndex Field index\n  * @param {string} prop Property reference\n  * @returns {Codegen} Codegen instance\n  * @ignore\n  */\n function genValuePartial_toObject(gen, field, fieldIndex, prop) {\n     /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\n     if (field.resolvedType) {\n         if (field.resolvedType instanceof Enum) gen\n             (\"d%s=o.enums===String?(types[%i].values[m%s]===undefined?m%s:types[%i].values[m%s]):m%s\", prop, fieldIndex, prop, prop, fieldIndex, prop, prop);\n         else gen\n             (\"d%s=types[%i].toObject(m%s,o)\", prop, fieldIndex, prop);\n     } else {\n         var isUnsigned = false;\n         switch (field.type) {\n             case \"double\":\n             case \"float\": gen\n             (\"d%s=o.json&&!isFinite(m%s)?String(m%s):m%s\", prop, prop, prop, prop);\n                 break;\n             case \"uint64\":\n                 isUnsigned = true;\n                 // eslint-disable-next-line no-fallthrough\n             case \"int64\":\n             case \"sint64\":\n             case \"fixed64\":\n             case \"sfixed64\": gen\n             (\"if(typeof m%s===\\\"number\\\")\", prop)\n                 (\"d%s=o.longs===String?String(m%s):m%s\", prop, prop, prop)\n             (\"else\") // Long-like\n                 (\"d%s=o.longs===String?util.Long.prototype.toString.call(m%s):o.longs===Number?new util.LongBits(m%s.low>>>0,m%s.high>>>0).toNumber(%s):m%s\", prop, prop, prop, prop, isUnsigned ? \"true\": \"\", prop);\n                 break;\n             case \"bytes\": gen\n             (\"d%s=o.bytes===String?util.base64.encode(m%s,0,m%s.length):o.bytes===Array?Array.prototype.slice.call(m%s):m%s\", prop, prop, prop, prop, prop);\n                 break;\n             default: gen\n             (\"d%s=m%s\", prop, prop);\n                 break;\n         }\n     }\n     return gen;\n     /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\n }\n\n /**\n  * Generates a runtime message to plain object converter specific to the specified message type.\n  * @param {Type} mtype Message type\n  * @returns {Codegen} Codegen instance\n  */\n converter.toObject = function toObject(mtype) {\n     /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\n     var fields = mtype.fieldsArray.slice().sort(util.compareFieldsById);\n     if (!fields.length)\n         return util.codegen()(\"return {}\");\n     var gen = util.codegen([\"m\", \"o\"], mtype.name + \"$toObject\")\n     (\"if(!o)\")\n         (\"o={}\")\n     (\"var d={}\");\n\n     var repeatedFields = [],\n         mapFields = [],\n         normalFields = [],\n         i = 0;\n     for (; i < fields.length; ++i)\n         if (!fields[i].partOf)\n             ( fields[i].resolve().repeated ? repeatedFields\n             : fields[i].map ? mapFields\n             : normalFields).push(fields[i]);\n\n     if (repeatedFields.length) { gen\n     (\"if(o.arrays||o.defaults){\");\n         for (i = 0; i < repeatedFields.length; ++i) gen\n         (\"d%s=[]\", util.safeProp(repeatedFields[i].name));\n         gen\n     (\"}\");\n     }\n\n     if (mapFields.length) { gen\n     (\"if(o.objects||o.defaults){\");\n         for (i = 0; i < mapFields.length; ++i) gen\n         (\"d%s={}\", util.safeProp(mapFields[i].name));\n         gen\n     (\"}\");\n     }\n\n     if (normalFields.length) { gen\n     (\"if(o.defaults){\");\n         for (i = 0; i < normalFields.length; ++i) {\n             var field = normalFields[i],\n                 prop  = util.safeProp(field.name);\n             if (field.resolvedType instanceof Enum) gen\n         (\"d%s=o.enums===String?%j:%j\", prop, field.resolvedType.valuesById[field.typeDefault], field.typeDefault);\n             else if (field.long) gen\n         (\"if(util.Long){\")\n             (\"var n=new util.Long(%i,%i,%j)\", field.typeDefault.low, field.typeDefault.high, field.typeDefault.unsigned)\n             (\"d%s=o.longs===String?n.toString():o.longs===Number?n.toNumber():n\", prop)\n         (\"}else\")\n             (\"d%s=o.longs===String?%j:%i\", prop, field.typeDefault.toString(), field.typeDefault.toNumber());\n             else if (field.bytes) {\n                 var arrayDefault = \"[\" + Array.prototype.slice.call(field.typeDefault).join(\",\") + \"]\";\n                 gen\n         (\"if(o.bytes===String)d%s=%j\", prop, String.fromCharCode.apply(String, field.typeDefault))\n         (\"else{\")\n             (\"d%s=%s\", prop, arrayDefault)\n             (\"if(o.bytes!==Array)d%s=util.newBuffer(d%s)\", prop, prop)\n         (\"}\");\n             } else gen\n         (\"d%s=%j\", prop, field.typeDefault); // also messages (=null)\n         } gen\n     (\"}\");\n     }\n     var hasKs2 = false;\n     for (i = 0; i < fields.length; ++i) {\n         var field = fields[i],\n             index = mtype._fieldsArray.indexOf(field),\n             prop  = util.safeProp(field.name);\n         if (field.map) {\n             if (!hasKs2) { hasKs2 = true; gen\n     (\"var ks2\");\n             } gen\n     (\"if(m%s&&(ks2=Object.keys(m%s)).length){\", prop, prop)\n         (\"d%s={}\", prop)\n         (\"for(var j=0;j<ks2.length;++j){\");\n             genValuePartial_toObject(gen, field, /* sorted */ index, prop + \"[ks2[j]]\")\n         (\"}\");\n         } else if (field.repeated) { gen\n     (\"if(m%s&&m%s.length){\", prop, prop)\n         (\"d%s=[]\", prop)\n         (\"for(var j=0;j<m%s.length;++j){\", prop);\n             genValuePartial_toObject(gen, field, /* sorted */ index, prop + \"[j]\")\n         (\"}\");\n         } else { gen\n     (\"if(m%s!=null&&m.hasOwnProperty(%j)){\", prop, field.name); // !== undefined && !== null\n         genValuePartial_toObject(gen, field, /* sorted */ index, prop);\n         if (field.partOf) gen\n         (\"if(o.oneofs)\")\n             (\"d%s=%j\", util.safeProp(field.partOf.name), field.name);\n         }\n         gen\n     (\"}\");\n     }\n     return gen\n     (\"return d\");\n     /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\n };\n\n\n// #endregion ORIGINAL CODE\n\n_cjsExports = module.exports;\n\n\n}, () => ({\n  './enum': _req,\n  './util': _req0,\n}));\nexport { _cjsExports as default };\nexport { __cjsMetaURL }\n"]}