{"version":3,"sources":["file:///C:/chickenStarClient/client/node_modules/protobufjs/src/encoder.js"],"names":["_cjsLoader","_req","__cjsMetaURL","_req0","_req1","url","define","exports","require","module","__filename","__dirname","encoder","Enum","types","util","genTypePartial","gen","field","fieldIndex","ref","resolvedType","group","id","mtype","codegen","name","i","fields","fieldsArray","slice","sort","compareFieldsById","length","resolve","index","_fieldsArray","indexOf","type","wireType","basic","safeProp","map","mapKey","keyType","undefined","repeated","packed","optional","_cjsExports"],"mappings":"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","sourcesContent":["import _cjsLoader from 'cce:/internal/ml/cjs-loader.mjs';\nimport { __cjsMetaURL as _req} from './enum';\nimport { __cjsMetaURL as _req0} from './types';\nimport { __cjsMetaURL as _req1} from './util';\nlet _cjsExports;\nconst __cjsMetaURL = import.meta.url;\n_cjsLoader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {\n// #region ORIGINAL CODE\n\n\n \"use strict\";\n module.exports = encoder;\n\n var Enum     = require(\"./enum\"),\n     types    = require(\"./types\"),\n     util     = require(\"./util\");\n\n /**\n  * Generates a partial message type encoder.\n  * @param {Codegen} gen Codegen instance\n  * @param {Field} field Reflected field\n  * @param {number} fieldIndex Field index\n  * @param {string} ref Variable reference\n  * @returns {Codegen} Codegen instance\n  * @ignore\n  */\n function genTypePartial(gen, field, fieldIndex, ref) {\n     return field.resolvedType.group\n         ? gen(\"types[%i].encode(%s,w.uint32(%i)).uint32(%i)\", fieldIndex, ref, (field.id << 3 | 3) >>> 0, (field.id << 3 | 4) >>> 0)\n         : gen(\"types[%i].encode(%s,w.uint32(%i).fork()).ldelim()\", fieldIndex, ref, (field.id << 3 | 2) >>> 0);\n }\n\n /**\n  * Generates an encoder specific to the specified message type.\n  * @param {Type} mtype Message type\n  * @returns {Codegen} Codegen instance\n  */\n function encoder(mtype) {\n     /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\n     var gen = util.codegen([\"m\", \"w\"], mtype.name + \"$encode\")\n     (\"if(!w)\")\n         (\"w=Writer.create()\");\n\n     var i, ref;\n\n     // \"when a message is serialized its known fields should be written sequentially by field number\"\n     var fields = /* initializes */ mtype.fieldsArray.slice().sort(util.compareFieldsById);\n\n     for (var i = 0; i < fields.length; ++i) {\n         var field    = fields[i].resolve(),\n             index    = mtype._fieldsArray.indexOf(field),\n             type     = field.resolvedType instanceof Enum ? \"int32\" : field.type,\n             wireType = types.basic[type];\n             ref      = \"m\" + util.safeProp(field.name);\n\n         // Map fields\n         if (field.map) {\n             gen\n     (\"if(%s!=null&&Object.hasOwnProperty.call(m,%j)){\", ref, field.name) // !== undefined && !== null\n         (\"for(var ks=Object.keys(%s),i=0;i<ks.length;++i){\", ref)\n             (\"w.uint32(%i).fork().uint32(%i).%s(ks[i])\", (field.id << 3 | 2) >>> 0, 8 | types.mapKey[field.keyType], field.keyType);\n             if (wireType === undefined) gen\n             (\"types[%i].encode(%s[ks[i]],w.uint32(18).fork()).ldelim().ldelim()\", index, ref); // can't be groups\n             else gen\n             (\".uint32(%i).%s(%s[ks[i]]).ldelim()\", 16 | wireType, type, ref);\n             gen\n         (\"}\")\n     (\"}\");\n\n             // Repeated fields\n         } else if (field.repeated) { gen\n     (\"if(%s!=null&&%s.length){\", ref, ref); // !== undefined && !== null\n\n             // Packed repeated\n             if (field.packed && types.packed[type] !== undefined) { gen\n\n         (\"w.uint32(%i).fork()\", (field.id << 3 | 2) >>> 0)\n         (\"for(var i=0;i<%s.length;++i)\", ref)\n             (\"w.%s(%s[i])\", type, ref)\n         (\"w.ldelim()\");\n\n             // Non-packed\n             } else { gen\n\n         (\"for(var i=0;i<%s.length;++i)\", ref);\n                 if (wireType === undefined)\n             genTypePartial(gen, field, index, ref + \"[i]\");\n                 else gen\n             (\"w.uint32(%i).%s(%s[i])\", (field.id << 3 | wireType) >>> 0, type, ref);\n\n             } gen\n     (\"}\");\n\n         // Non-repeated\n         } else {\n             if (field.optional) gen\n     (\"if(%s!=null&&Object.hasOwnProperty.call(m,%j))\", ref, field.name); // !== undefined && !== null\n\n             if (wireType === undefined)\n         genTypePartial(gen, field, index, ref);\n             else gen\n         (\"w.uint32(%i).%s(%s)\", (field.id << 3 | wireType) >>> 0, type, ref);\n\n         }\n     }\n\n     return gen\n     (\"return w\");\n     /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\n }\n\n\n// #endregion ORIGINAL CODE\n\n_cjsExports = module.exports;\n\n\n}, () => ({\n  './enum': _req,\n  './types': _req0,\n  './util': _req1,\n}));\nexport { _cjsExports as default };\nexport { __cjsMetaURL }\n"]}