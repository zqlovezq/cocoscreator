{"version":3,"sources":["file:///C:/chickenStarClient/client/assets/scripts/logic/fight/base/ai/SearchEnemy.ts"],"names":["_decorator","Vec3","tab","Random","FrameControl","AbsObjType","Vector2","ccclass","property","tempPos","tempPos1","tempStartPos","tempList","Array","tempAll","SearchEnemy","getAll","objId","ownerObjType","effectUnit","EffectUnit","EffectUnit_Mine","absRole","ins","getObjById","EffectUnit_Friend","role","getObjList","enemy","EffectUnit_Enemy","EffectUnit_FriendNome","length","list","index","v","push","isHasEnemy","includeNoActive","all","len","isActive","isDead","trigger","getBySearchEnemy","ownerObjId","startPos","_type","ignore","set","funcName","skillGetBySearchEnemy","findCount","result","SearchEnemy_All","isIds","i","abs","SearchEnemy_None","allRoles","isSame","SearchEnemy_LowBlood","monster","tmpHp","minHp","info","attrData","hpPercent","SearchEnemy_Near","time","Date","getTime","tmpSqr","minSqr","Math","squaredDistance","getHitPos","SearchEnemy_Behind","isHeroClassWarrior","getRandomInt","SearchEnemy_Warrior","SearchEnemy_RandomGoal","SearchEnemy_Mine","SearchEnemy_HeroClass","heroClass","isHeroClass","SearchEnemy_Assassin","HeroClass","HeroClass_Assassin","SearchEnemy_Archer","HeroClass_Archer","SearchEnemy_Priest","HeroClass_Priest","SearchEnemy_Caster","HeroClass_Caster","HeroClass_Warrior","SearchEnemy_LowBloodShield","getHpShieldPercent"],"mappings":"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","sourcesContent":["import { _decorator, absMax, CCInteger, Color, Component, convertUtils, instantiate, Label, Node, Prefab, Quat, Rect, sp, Sprite, tween, UITransform, Vec2, Vec3, view } from 'cc';\nimport { tab } from '../../../../Table/table_gen';\nimport { AbsControl } from '../../../../framework/base/IAbs';\nimport { Random } from '../../util/Random';\nimport { FrameControl } from '../frame/FrameControl';\nimport { AbsObj, AbsObjType } from '../obj/AbsObj';\nimport { AbsRole } from '../obj/role/AbsRole';\nimport { Monster } from '../obj/role/monster/Monster';\nimport { Role } from '../obj/role/role/Role';\nimport { Vector2 } from '../../../../framework/collision/Maths';\n\nconst { ccclass, property } = _decorator;\n\nconst tempPos = new Vec3(0, 0, 0);\nconst tempPos1 = new Vec3(0, 0, 0);\nconst tempStartPos = new Vec3(0, 0, 0);\nconst tempList = new Array<AbsRole>();\n\nconst tempAll = []\n\n/** 搜索敌人 */\n@ccclass('SearchEnemy')\nexport class SearchEnemy {\n\n    private static getAll(objId: number | AbsRole, ownerObjType: AbsObjType, effectUnit: tab.EffectUnit) {\n\n        switch (effectUnit) {\n            case tab.EffectUnit.EffectUnit_Mine://自己\n                if (typeof objId == \"number\") {\n                    let absRole = FrameControl.ins.getObjById(objId) as AbsRole\n                    if (absRole) {\n                        return [absRole]\n                    }\n                }\n                return [objId as AbsRole]\n            case tab.EffectUnit.EffectUnit_Friend://我方 \n                if (ownerObjType == AbsObjType.role) {\n                    return FrameControl.ins.getObjList(AbsObjType.role) as AbsRole[]\n                } else {\n                    return FrameControl.ins.getObjList(AbsObjType.enemy) as AbsRole[]\n                }\n            case tab.EffectUnit.EffectUnit_Enemy://敌方\n                if (ownerObjType == AbsObjType.role) {\n                    return FrameControl.ins.getObjList(AbsObjType.enemy) as AbsRole[]\n                } else {\n                    return FrameControl.ins.getObjList(AbsObjType.role) as AbsRole[]\n                }\n            case tab.EffectUnit.EffectUnit_FriendNome://友方， 不包含自身\n                tempAll.length = 0\n                let absRole: AbsRole\n                if (typeof objId == \"number\") {\n                    absRole = FrameControl.ins.getObjById(objId) as AbsRole\n                } else {\n                    absRole = objId as AbsRole\n                }\n\n                let list = this.getAll(objId, ownerObjType, tab.EffectUnit.EffectUnit_Friend)\n\n                for (let index = 0; index < list.length; index++) {\n                    const v = list[index];\n                    if (v != absRole) {\n                        tempAll.push(v)\n                    }\n                }\n                return tempAll\n\n        }\n        return []\n    }\n\n    /** 是否有目标敌人 */\n    static isHasEnemy(absRole: AbsRole, ownerObjType: AbsObjType, effectUnit: tab.EffectUnit, includeNoActive?: boolean) {\n        let all = this.getAll(absRole, ownerObjType, effectUnit)\n        let len = all.length\n        if (len == 0) {\n            return false\n        }\n        for (let index = 0; index < len; index++) {\n            const v = all[index];\n            if (!includeNoActive && !v.isActive) { //是否包含未激活状态的\n                continue\n            }\n            if (v.isDead == false && v.trigger) {\n                return true\n            }\n        }\n        return false\n    }\n\n    /**\n     * 根据锁敌规则获取敌人\n     * @param ownerObjId  归属id\n     * @param ownerObjType 归属类型\n     * @param startPos  归属开始位置\n     * @param effectUnit 锁敌单位（查找单位池）\n     * @param _type  锁敌规则\n     * @param ignore 过滤\n     * @param includeNoActive 是否包含未激活\n     * @returns \n     */\n    static getBySearchEnemy(ownerObjId: number, ownerObjType: AbsObjType, startPos: Vec3, effectUnit: tab.EffectUnit, _type: tab.SearchEnemy, ignore?: number[], includeNoActive?: boolean): AbsRole {\n        let all = this.getAll(ownerObjId, ownerObjType, effectUnit)\n        tempStartPos.set(startPos)\n\n        let funcName = tab.SearchEnemy[_type]\n        if (this[funcName]) {\n            return this[funcName](ownerObjId, all, tempStartPos, ignore, includeNoActive)\n        }\n        return null\n    }\n\n    /**\n     * 根据技能规则获取敌人\n     * @param ownerObjId  归属id\n     * @param ownerObjType 归属类型\n     * @param startPos  归属开始位置\n     * @param effectUnit 锁敌单位（查找单位池）\n     * @param _type  锁敌规则\n     * @param findCount 查找数量\n     * @param includeNoActive 是否包含未激活\n     * @returns \n     */\n    static skillGetBySearchEnemy(ownerObjId: number, ownerObjType: AbsObjType, startPos: Vec3, effectUnit: tab.EffectUnit, _type: tab.SearchEnemy, findCount?: number, includeNoActive?: boolean): AbsRole[] {\n        findCount = findCount || 1\n        let result = []\n        if (_type == tab.SearchEnemy.SearchEnemy_All) {\n            let all = this.getAll(ownerObjId, ownerObjType, effectUnit)\n            for (let index = 0; index < all.length; index++) {\n                const v = all[index];\n                if (!includeNoActive && !v.isActive) {\n                    continue\n                }\n                if (v.isDead) {\n                    continue\n                }\n                result.push(v)\n            }\n            return result\n        }\n\n        /** 查找多个， 每循环一次， 过滤下之前的已找到的 */\n        let isIds = []\n        for (let index = 0; index < findCount; index++) {\n            isIds.length = 0\n            for (let i = 0; i < result.length; i++) {\n                const abs = result[i];\n                isIds.push(abs.objId)\n            }\n            let enemy = SearchEnemy.getBySearchEnemy(ownerObjId, ownerObjType, startPos, effectUnit, _type, isIds, includeNoActive)\n            if (enemy) {\n                result.push(enemy)\n            } else {\n                break\n            }\n        }\n        return result\n    }\n\n    private static SearchEnemy_None(objId: number, allRoles: AbsRole[], startPos: Vec3, ignore: number[], includeNoActive?: boolean): AbsRole {\n        if (allRoles.length > 0) {\n            let v\n            for (let index = 0; index < allRoles.length; index++) {\n                v = allRoles[index];\n                if (!includeNoActive && !v.isActive) { //是否包含未激活状态的\n                    continue\n                }\n                if (this.isSame(ignore, v)) {\n                    continue\n                }\n                return v\n            }\n        }\n        return allRoles[0]\n    }\n\n    /** 血量最少 */\n    private static SearchEnemy_LowBlood(objId: number, allRoles: AbsRole[], startPos: Vec3, ignore: number[], includeNoActive?: boolean): AbsRole {\n\n        let monster = null\n\n        let len = allRoles.length\n        let tmpHp = 0\n        let minHp = 0\n        let v\n        for (let i = 0; i < len; i++) {\n            v = allRoles[i]\n            if (!includeNoActive && !v.isActive) { //是否包含未激活状态的\n                continue\n            }\n            if (v.isDead) {\n                continue\n            }\n            if (this.isSame(ignore, v)) {\n                continue\n            }\n            tmpHp = v.info.attrData.hpPercent\n            if (null == monster) {\n                minHp = tmpHp\n                monster = v\n            } else {\n                if (tmpHp < minHp) {\n                    minHp = tmpHp;\n                    monster = v\n                }\n            }\n        }\n        return monster\n    }\n\n    private static isSame(ignore: number[], abs: AbsRole) {\n        if (ignore) {\n            for (let index = 0; index < ignore.length; index++) {\n                const v = ignore[index];\n                if (v == abs.objId) {\n                    return true\n                }\n            }\n        }\n        return false\n    }\n\n    /** 最近 */\n    private static SearchEnemy_Near(objId: number, allRoles: AbsRole[], startPos: Vec3, ignore: number[], includeNoActive?: boolean): AbsRole {\n        let time = new Date().getTime()\n        let monster = null\n\n        let len = allRoles.length\n        let tmpSqr = 0\n        let minSqr = 0\n        for (let i = 0; i < len; i++) {\n            let v = allRoles[i]\n            if (!includeNoActive && !v.isActive) { //是否包含未激活状态的\n                continue\n            }\n            if (v.isDead) {\n                continue\n            }\n            if (this.isSame(ignore, v)) {\n                continue\n            }\n            tmpSqr = Math.abs(Vector2.squaredDistance(v.getHitPos(), startPos))\n            if (null == monster) {\n                minSqr = tmpSqr\n                monster = v\n            } else {\n                if (tmpSqr < minSqr) {\n                    minSqr = tmpSqr;\n                    monster = v\n                }\n            }\n        }\n        return monster\n    }\n\n    /** 后排 */\n    private static SearchEnemy_Behind(objId: number, allRoles: AbsRole[], startPos: Vec3, ignore: number[], includeNoActive?: boolean): AbsRole {\n        tempList.length = 0\n        for (let index = 0; index < allRoles.length; index++) {\n            const v: Role = allRoles[index] as Role\n            if (!includeNoActive && !v.isActive) { //是否包含未激活状态的\n                continue\n            }\n            if (v.isDead) {\n                continue\n            }\n            if (this.isSame(ignore, v)) {\n                continue\n            }\n            if (!v.info.isHeroClassWarrior()) {\n                tempList.push(v)\n            }\n        }\n        if (tempList.length) {\n            return tempList[Random.getRandomInt(0, tempList.length)]\n        }\n        return SearchEnemy.SearchEnemy_Warrior(objId, allRoles, startPos, ignore, includeNoActive)\n    }\n\n    /** 随机 */\n    private static SearchEnemy_RandomGoal(objId: number, allRoles: AbsRole[], startPos: Vec3, ignore: number[], includeNoActive?: boolean): AbsRole {\n        tempList.length = 0\n        for (let index = 0; index < allRoles.length; index++) {\n            const v: Role = allRoles[index] as Role\n            if (!includeNoActive && !v.isActive) { //是否包含未激活状态的\n                continue\n            }\n            if (v.isDead) {\n                continue\n            }\n            if (this.isSame(ignore, v)) {\n                continue\n            }\n            tempList.push(v)\n        }\n        if (tempList.length) {\n            return tempList[Random.getRandomInt(0, tempList.length)]\n        }\n        return null\n    }\n    /** 自己 */\n    private static SearchEnemy_Mine(objId: number, allRoles: AbsRole[], startPos: Vec3, ignore: number[], includeNoActive?: boolean): AbsRole {\n        return FrameControl.ins.getObjById(objId) as AbsRole\n    }\n\n    /** 寻找职业 */\n    private static SearchEnemy_HeroClass(objId: number, allRoles: AbsRole[], heroClass: tab.HeroClass, includeNoActive?: boolean): AbsRole {\n        let len = allRoles.length\n        let v: Role\n        for (let index = 0; index < len; index++) {\n            v = allRoles[index] as Role;\n            if (v.info.isHeroClass(heroClass)) {\n                return v\n            }\n        }\n    }\n\n    /** 刺客  */\n    private static SearchEnemy_Assassin(objId: number, allRoles: AbsRole[], startPos: Vec3, ignore: number[], includeNoActive?: boolean): AbsRole {\n        return SearchEnemy.SearchEnemy_HeroClass(objId, allRoles, tab.HeroClass.HeroClass_Assassin)\n    }\n    /** 射手 */\n    private static SearchEnemy_Archer(objId: number, allRoles: AbsRole[], startPos: Vec3, ignore: number[], includeNoActive?: boolean): AbsRole {\n        return SearchEnemy.SearchEnemy_HeroClass(objId, allRoles, tab.HeroClass.HeroClass_Archer)\n    }\n    /** 牧师 */\n    private static SearchEnemy_Priest(objId: number, allRoles: AbsRole[], startPos: Vec3, ignore: number[], includeNoActive?: boolean): AbsRole {\n        return SearchEnemy.SearchEnemy_HeroClass(objId, allRoles, tab.HeroClass.HeroClass_Priest)\n    }\n    /** 法师 */\n    private static SearchEnemy_Caster(objId: number, allRoles: AbsRole[], startPos: Vec3, ignore: number[], includeNoActive?: boolean): AbsRole {\n        return SearchEnemy.SearchEnemy_HeroClass(objId, allRoles, tab.HeroClass.HeroClass_Caster)\n    }\n    /** 战士 */\n    private static SearchEnemy_Warrior(objId: number, allRoles: AbsRole[], startPos: Vec3, ignore: number[], includeNoActive?: boolean): AbsRole {\n        return SearchEnemy.SearchEnemy_HeroClass(objId, allRoles, tab.HeroClass.HeroClass_Warrior)\n    }\n    /** 血盾最少 */\n    private static SearchEnemy_LowBloodShield(objId: number, allRoles: AbsRole[], startPos: Vec3, ignore: number[], includeNoActive?: boolean) {\n        let monster = null\n\n        let len = allRoles.length\n        let tmpHp = 0\n        let minHp = 0\n        let v\n        for (let i = 0; i < len; i++) {\n            v = allRoles[i]\n            if (!includeNoActive && !v.isActive) { //是否包含未激活状态的\n                continue\n            }\n            if (v.isDead) {\n                continue\n            }\n            if (this.isSame(ignore, v)) {\n                continue\n            }\n            tmpHp = v.info.attrData.getHpShieldPercent()\n            if (null == monster) {\n                minHp = tmpHp\n                monster = v\n            } else {\n                if (tmpHp < minHp) {\n                    minHp = tmpHp;\n                    monster = v\n                }\n            }\n        }\n        return monster\n    }\n}\n\n"]}