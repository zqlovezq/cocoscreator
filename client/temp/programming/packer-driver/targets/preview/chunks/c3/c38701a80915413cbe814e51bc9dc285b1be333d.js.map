{"version":3,"sources":["file:///C:/chickenStarClient/client/assets/scripts/logic/fight/view/rogue/RogueControl.ts"],"names":["_decorator","js","Vec3","AbsControl","EventMgr","tab","PlayerControl","FightEvent","Func","RogueInfo","DropControl","Random","SkillControl","RareBookData","FightData","FightGainBuffControl","RoleData","GuideController","guideTask","RevoltCheatControl","ccclass","property","SKILL_COUNT","tempPos","tmpList","Array","findList","selWeapons","RogueType","RogueControl","validList","selectList","selectAllList","refreshRogueTime","IsHaveHeroLevelUp","defaultRogueInfo","ins","_instance","init","register","length","addRogueId","rogueInfo","addSelect","emitFight","Fight_Drop_Remove_First","isHeroLevel","rogueHeroLevel","getSelectWeapon","removeHeroLevel","heroItemId","index","v","splice","addCount","isRemove","removeInfo","isChange","rogueTab","Condition","Id","ifFullId","push","addRogueAttr","onCheckHeroUp","role","upLv","info","attrData","getAttr","AttrType","AttrType_RogueLevel","tempInfo","configId","level","clearAttrByType","getRole","Math","min","getData","RogueTableById","getValue","heroStarTab","RogueId","Level","addAttrs","onGiveRogue","id","addAttr","func","rogueId","getRogueInfo","setParentPowers","skillPowers","sort","a","b","forEach","onFight","Fight_Start","onFight_Start","Fight_Start_Complete","onFight_Start_Complete","giveRogue","checkHeroUp","reset","getRogueIdsByGroupId","groupId","conf","RogueGroupTableById","list","RogueGroup","begin","end","j","ids","stageTab","RougeGroupId","console","log","GetKeyValue_ConfigTable","RogueFullBackupOption","ActivationCondition","RogueActivationCondition","RogueActivationCondition_WearBook","isWearByItemId","BookId","hasTypeAndCorrespondingId","EffectTarget","EffectTarget_Book","heros","getAllHeros","i","heroId","itemId","forBy2","HeroStarUpTable","star","rogueIds","getList","isSelfRefresh","dropId","getFirstDrop","dropItemTab","VirtualItemByVirtualItemId","VirtualItemType","VirtualItemType_Eggs","getHeros","getWeapens","selt","type","leader","heroList","getNoCreateHeros","hero","weapon","addFindList","isInFightGuiding","stageId","node","active","dropCount","deleteArr","indexOf","Sort","VirtualItemType_Feathers","isUnlockRogue","Mutex","hasMutex","print","randomIndexes","getRandomIndexes","key","JadeDrops","weaponLimit","forBy","removeBy","total","findNum","indexes","randomIndex","getRandomInt","str","s","s2","formatStr","Backlimit","backCount","checkFull","result","isRogueEggs","eggsLen","getLenByType","heroLen","error","Role_Active","rogueUseSkillTarget","addRogue","addRefreshRogueTime","getRefreshRogueTotalTime","num","FightRogueRefreshCount","getGlobleAttr","AttrType_RefreshCount","getPrivilegeValue","VipBonus","VipBonus_RefreshCount","iFightUpdate","dt","getSelectAllIdList","getNowSelectIdList"],"mappings":"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","sourcesContent":["import { _decorator, CCInteger, Color, Component, find, FogInfo, instantiate, js, Label, Node, Prefab, Quat, Rect, sp, Sprite, tween, UITransform, Vec2, Vec3, view } from 'cc';\nimport { AbsControl } from '../../../../framework/base/IAbs';\nimport { EventMgr } from '../../../mgr/EventMgr';\nimport { tab } from '../../../../Table/table_gen';\nimport { PlayerControl } from '../../base/obj/role/role/PlayerControl';\nimport { FightEvent } from '../../define/FightEvent';\nimport { Func } from '../../../utils/Func';\nimport { RogueInfo } from './RogueInfo';\nimport { DropControl } from '../../drop/DropControl';\nimport { Random } from '../../util/Random';\nimport { SkillControl } from '../../base/skill/SkillControl';\nimport { RareBookData } from '../../../model/rareBook/RareBookData';\nimport { FightData } from '../../data/FightData';\nimport { IFightUpdate } from '../../define/FightDefine';\nimport { FightGainBuffControl } from '../../gainBuff/FightGainBuffControl';\nimport { Role } from '../../base/obj/role/role/Role';\nimport { RoleData } from '../../../model/role/RoleData';\nimport { GuideController } from '../../../guide/GuideController';\nimport { guideTask } from '../../../guide/GuideTask';\nimport { RevoltCheatControl } from '../../cheat/RevoltCheatControl';\n\nconst { ccclass, property } = _decorator;\nconst SKILL_COUNT = 3\nconst tempPos = new Vec3(0, 0, 0);\nconst tmpList = new Array<RogueInfo>();\nconst findList = new Array<RogueInfo>();\nconst selWeapons = new Array<RogueInfo>();\nexport enum RogueType {\n    /** 选队长 */\n    leader = 0,\n    /** 选英雄 */\n    hero = 1,\n    /** 选武器（秘籍） */\n    weapon = 2\n}\nexport interface RogueSelect {\n    type: RogueType,\n    list: RogueInfo[] //rogueId\n}\n\n/** 肉鸽 */\n@ccclass('RogueControl')\nexport class RogueControl extends AbsControl implements IFightUpdate {\n\n    private static _instance: RogueControl;\n    public static get ins() {\n        if (null == this._instance) {\n            this._instance = new RogueControl();\n        }\n        return this._instance;\n    }\n\n    /** 生效池 */\n    validList: RogueInfo[] = []\n\n    /** 选中列表 (6个格子内的替换逻辑)*/\n    selectList: RogueInfo[] = []\n\n    /** 选中列表（所有） */\n    selectAllList: RogueInfo[] = []\n\n    /**刷新肉鸽次数 */\n    refreshRogueTime: number = 0;\n\n    /** 是否存在英雄升级  */\n    IsHaveHeroLevelUp: boolean = true\n\n\n    defaultRogueInfo: RogueInfo = null //所有肉鸽选完后， 默认放到池子内一个\n\n    init(): void {\n        this.register()\n        this.validList.length = 0\n        this.selectList.length = 0\n        this.selectAllList.length = 0\n        this.validList.length = 0\n        tmpList.length = 0\n        this.refreshRogueTime = 0\n        selWeapons.length = 0\n        this.IsHaveHeroLevelUp = true\n        this.defaultRogueInfo = null\n    }\n\n    addRogueId(rogueInfo: RogueInfo) {\n        this.addSelect(rogueInfo)\n        EventMgr.emitFight(FightEvent.Fight_Drop_Remove_First)\n        if (rogueInfo.isHeroLevel) { //英雄直接升级\n            this.rogueHeroLevel(rogueInfo)\n        }\n        this.getSelectWeapon(true)\n        this.removeHeroLevel(rogueInfo)\n    }\n\n    /** 移除英雄升级 */\n    removeHeroLevel(rogueInfo: RogueInfo) {\n        if (this.IsHaveHeroLevelUp) {\n            return\n        }\n        if (rogueInfo.heroItemId) {\n            for (let index = this.validList.length - 1; index >= 0; index--) {\n                const v = this.validList[index];\n                if (v.heroItemId == rogueInfo.heroItemId) {\n                    this.validList.splice(index, 1)\n                }\n            }\n        }\n    }\n\n    addSelect(rogueInfo: RogueInfo) {\n        rogueInfo.addCount()\n        if (rogueInfo.isRemove()) {\n            this.removeInfo(rogueInfo)\n        }\n        let isChange: boolean = false\n        if (rogueInfo.rogueTab.Condition) {\n            for (let index = 0; index < this.selectList.length; index++) {\n                let v = this.selectList[index];\n                if (v.Id == rogueInfo.rogueTab.Condition) {\n                    this.selectList[index] = rogueInfo\n                    isChange = true\n                }\n            }\n        }\n        if (!isChange && !rogueInfo.ifFullId()) {\n            this.selectList.push(rogueInfo)\n        }\n        this.selectAllList.push(rogueInfo)\n        this.addRogueAttr(rogueInfo)\n    }\n\n\n    onCheckHeroUp(role: Role) {\n        let upLv = role.info.attrData.getAttr(tab.AttrType.AttrType_RogueLevel)\n        if (upLv) {\n            let tempInfo: RogueInfo\n            for (let index = 0; index < this.selectList.length; index++) {\n                const v = this.selectAllList[index];\n                if (v.heroItemId == role.info.configId) {\n                    tempInfo = v\n                    break\n                }\n            }\n            if (tempInfo) {\n                tempInfo.isHeroLevel = true\n                tempInfo.level = tempInfo.level + upLv\n                role.info.attrData.clearAttrByType(tab.AttrType.AttrType_RogueLevel)\n            }\n        }\n    }\n\n    //英雄直接升级\n    rogueHeroLevel(rogueInfo: RogueInfo) {\n        let role = PlayerControl.ins.getRole(rogueInfo.heroItemId)\n        rogueInfo.level = Math.min(rogueInfo.level, tab.getData().RogueTableById.getValue(role.info.heroStarTab.RogueId[1]).Level)\n        let addAttrs = []\n        for (let index = 0; index < this.validList.length; index++) {\n            const v = this.validList[index];\n            if (v.heroItemId == rogueInfo.heroItemId) {\n                if (rogueInfo.level >= v.rogueTab.Level) {\n                    addAttrs.push(v)\n                }\n            }\n        }\n\n        for (let index = 0; index < addAttrs.length; index++) {\n            const v = addAttrs[index];\n            this.addSelect(v)\n        }\n    }\n\n    //赠送肉鸽\n    onGiveRogue(id: number) {\n        let addAttr = []\n        let func = (rogueId: number) => {\n            let rogueInfo = this.getRogueInfo(rogueId)\n            if (rogueInfo == null) {\n                rogueInfo = new RogueInfo(rogueId)\n                rogueInfo.setParentPowers(FightData.ins.skillPowers)\n            }\n            addAttr.push(rogueInfo)\n            if (rogueInfo.rogueTab.Condition) {\n                func(rogueInfo.rogueTab.Condition)\n            }\n        }\n        //把所有前置条件都添加到列表\n        func(id)\n        // console.log(\"give\", addAttr)\n        addAttr.sort((a, b) => {\n            return a.Id - b.Id\n        })\n        addAttr.forEach(v => {\n            this.addSelect(v)\n        })\n        this.getSelectWeapon(true)\n    }\n\n    register(): void {\n        EventMgr.onFight(FightEvent.Fight_Start, this.onFight_Start, this)\n        EventMgr.onFight(FightEvent.Fight_Start_Complete, this.onFight_Start_Complete, this)\n        EventMgr.onFight(FightEvent.giveRogue, this.onGiveRogue, this)\n        EventMgr.onFight(FightEvent.checkHeroUp, this.onCheckHeroUp, this)\n\n    }\n\n\n    /** 获取已选择的武器 */\n    getSelectWeapon(reset?: boolean) {\n        if (reset) {\n            selWeapons.length = 0\n            for (let index = 0; index < this.selectList.length; index++) {\n                let v = this.selectList[index];\n                if (v.heroItemId == 0) {\n                    selWeapons.push(v)\n                }\n            }\n        }\n        return selWeapons\n    }\n\n    getRogueIdsByGroupId(groupId: number) {\n        let conf = tab.getData().RogueGroupTableById.getValue(groupId)\n        if (conf == null) {\n            this.IsHaveHeroLevelUp = true\n            return []\n        }\n        this.IsHaveHeroLevelUp = conf.IsHaveHeroLevelUp\n        let list = []\n        for (let index = 0; index < conf.RogueGroup.length; index++) {\n            let begin = conf.RogueGroup[index] || 0\n            let end = conf.RogueGroup[index + 1] || 0\n            for (let j = begin; j <= end; j++) {\n                list.push(j)\n            }\n            index++\n        }\n        return list\n    }\n\n    onFight_Start() {\n        // let defuatBegin = tab.getData().GetKeyValue_ConfigTable().globalRogueId[0]\n        // let defuatEnd = tab.getData().GetKeyValue_ConfigTable().globalRogueId[1]\n\n        let ids = this.getRogueIdsByGroupId(FightData.ins.stageTab.RougeGroupId)\n        console.log(\"ids\", ids)\n\n        this.defaultRogueInfo = new RogueInfo(tab.getData().GetKeyValue_ConfigTable().RogueFullBackupOption)\n        this.defaultRogueInfo.setParentPowers(FightData.ins.skillPowers)\n        // let defuatBegin = 1\n        // let defuatEnd = 11\n\n        for (let index = 0; index < ids.length; index++) {\n            let id = ids[index]\n            let info = new RogueInfo(id)\n            info.setParentPowers(FightData.ins.skillPowers)\n            if (info.rogueTab.ActivationCondition) {\n                //秘籍穿戴\n                if (info.rogueTab.ActivationCondition == tab.RogueActivationCondition.RogueActivationCondition_WearBook) {\n                    if (RareBookData.ins.isWearByItemId(info.rogueTab.BookId) || FightGainBuffControl.ins.hasTypeAndCorrespondingId(tab.EffectTarget.EffectTarget_Book, info.rogueTab.BookId)) {\n                        this.validList.push(info)\n                        console.log(\"秘籍条件达成\")\n                    } else {\n                        // console.log(\"秘籍未穿戴\", info.Id)\n                    }\n                }\n            } else {\n                this.validList.push(info)\n            }\n        }\n\n        let heros = PlayerControl.ins.getAllHeros()\n        for (let i = 0; i < heros.length; i++) {\n            let heroId = heros[i].itemId\n            let heroStarTab = Func.forBy2(tab.getData().HeroStarUpTable, \"HeroId\", heroId, \"HeroStar\", heros[i].star) as tab.HeroStarUpTable\n            let rogueIds = heroStarTab.RogueId\n\n            for (let index = rogueIds[0]; index <= rogueIds[1]; index++) {\n                let info = new RogueInfo(index)\n                info.setParentPowers(FightData.ins.skillPowers)\n                info.heroItemId = heroId\n                this.validList.push(info)\n            }\n        }\n    }\n\n    onFight_Start_Complete() {\n        //处理进场送rogueid\n\n    }\n\n    getList(isSelfRefresh: boolean = false): RogueSelect {\n        let dropId = DropControl.ins.getFirstDrop()\n        let dropItemTab = tab.getData().VirtualItemByVirtualItemId.getValue(dropId)\n\n        if (dropItemTab.VirtualItemType == tab.VirtualItemType.VirtualItemType_Eggs) {\n            return this.getHeros()\n        }\n        return this.getWeapens(isSelfRefresh)\n    }\n\n    private getHeros() {\n        tmpList.length = 0\n        let selt: RogueSelect = { type: RogueType.leader, list: tmpList }\n\n        let heroList = PlayerControl.ins.getNoCreateHeros()\n        selt.type = heroList.length == 5 ? RogueType.leader : RogueType.hero\n\n        for (let i = 0; i < heroList.length; i++) {\n            let hero = heroList[i]\n            let heroStarTab = Func.forBy2(tab.getData().HeroStarUpTable, \"HeroId\", hero.itemId, \"HeroStar\", hero.star) as tab.HeroStarUpTable\n            tmpList.push(this.getRogueInfo(heroStarTab.RogueId[0]))\n        }\n        return selt\n    }\n\n    private getWeapens(isSelfRefresh: boolean = false) {\n        let selt: RogueSelect = { type: RogueType.weapon, list: tmpList }\n\n        if (!isSelfRefresh) {\n            tmpList.length = 0\n        }\n\n        findList.length = 0\n        let addFindList = (v: RogueInfo) => {\n\n            if (GuideController.ins.isInFightGuiding() && FightData.ins.stageId === 101 && GuideController.ins.node.active) {\n                if (GuideController.ins.dropCount >= 6 && GuideController.ins.dropCount <= 11) {\n                    const deleteArr = [112, 142];\n                    if (deleteArr.indexOf(v.Id) > -1) {\n                        return;\n                    }\n                }\n            }\n\n            if (tmpList && tmpList.length > 0) {\n                let index = tmpList.indexOf(v);\n                if (index < 0) {\n                    findList.push(v)\n                }\n            } else {\n                findList.push(v)\n            }\n\n        }\n\n        for (let index = 0; index < this.validList.length; index++) {\n            const v = this.validList[index];\n            if (v.rogueTab.Sort != tab.VirtualItemType.VirtualItemType_Feathers) {\n                continue\n            }\n            if (this.isUnlockRogue(v.rogueTab.Condition)) {\n                if (v.rogueTab.Mutex) {\n                    if (!this.hasMutex()) {\n                        addFindList(v)\n                    }\n                } else {\n                    addFindList(v)\n                }\n            }\n        }\n        this.print(this.validList, \"剩余id\")\n        this.print(this.selectList, \"拥有id\")\n        this.print(findList, \"查找id\")\n        if (findList.length > SKILL_COUNT) {\n            tmpList.length = 0;\n            let randomIndexes = this.getRandomIndexes(findList.length, SKILL_COUNT)\n            for (let index = 0; index < randomIndexes.length; index++) {\n                let v = findList[randomIndexes[index]];\n                tmpList.push(v)\n            }\n        } else if (findList.length == SKILL_COUNT) {\n            tmpList.length = 0;\n            for (let key in findList) {\n                tmpList.push(findList[key]);\n            }\n        } else {\n            let list: Array<RogueInfo> = [];\n            for (let key in findList) {\n                list.push(findList[key]);\n            }\n            let randomIndexes = this.getRandomIndexes(tmpList.length, SKILL_COUNT - findList.length)\n            for (let index = 0; index < randomIndexes.length; index++) {\n                let v = tmpList[randomIndexes[index]];\n                list.push(v)\n            }\n            tmpList.length = 0;\n            for (let key in list) {\n                tmpList.push(list[key]);\n            }\n        }\n        if (GuideController.ins.isInFightGuiding() && GuideController.ins.node.active && FightData.ins.stageId === 101) {\n            if (GuideController.ins.dropCount < 6) {\n                tmpList.splice(0, tmpList.length);\n                const ids = guideTask.JadeDrops[GuideController.ins.dropCount];\n                for (let i = 0; i < ids.length; i++) {\n                    if (this.getRogueInfo(ids[i])) {\n                        tmpList.push(this.getRogueInfo(ids[i]));\n                    }\n                }\n            }\n            GuideController.ins.dropCount++;\n        }\n\n        this.print(tmpList, \"随机到的id\")\n        if (tmpList.length == 0) {\n            tmpList.push(this.defaultRogueInfo)\n        }\n        return selt\n    }\n\n\n    /** 是否已经拥有互斥 */\n    hasMutex() {\n        for (let index = 0; index < this.selectList.length; index++) {\n            const v = this.selectList[index];\n            if (v.rogueTab.Mutex) {\n                return true\n            }\n        }\n        return false\n    }\n\n    /** 是否解锁 */\n    isUnlockRogue(id: number) {\n        if (id == 0) {\n            if (this.getSelectWeapon().length >= tab.getData().GetKeyValue_ConfigTable().weaponLimit) {\n                return false\n            }\n            return true\n        }\n        return Func.forBy(this.selectList, \"Id\", id) != null\n    }\n\n    getRogueInfo(id: number): RogueInfo {\n        return Func.forBy(this.validList, \"Id\", id)\n    }\n\n    removeInfo(rogueInfo: RogueInfo) {\n        Func.removeBy(this.validList, \"Id\", rogueInfo.Id)\n    }\n\n    /** 给定长度， 随机获取n个 */\n    getRandomIndexes(total: number, findNum: number): number[] {\n        const indexes: number[] = [];\n        if (total <= findNum) {\n            for (let index = 0; index < total; index++) {\n                indexes.push(index)\n            }\n            return indexes\n        }\n\n        while (indexes.length < findNum) {\n            const randomIndex = Random.getRandomInt(0, total);\n            if (indexes.indexOf(randomIndex) == -1) {\n                indexes.push(randomIndex);\n            }\n        }\n        return indexes;\n    }\n\n    print(list: RogueInfo[], str: string) {\n        let s = \"\"\n        let s2 = \"\"\n        for (let index = 0; index < list.length; index++) {\n            const v = list[index];\n            if (v.heroItemId) {\n                s += v.Id + \",\"\n            } else {\n                s2 += js.formatStr(\"id:%s,剩余次数:%s\", v.Id, v.rogueTab.Backlimit - v.backCount) + \",\"\n            }\n        }\n        console.log(str + \"英雄:\" + s, \"武器:\" + s2)\n    }\n\n    /** 检测掉落类型已满 */\n    checkFull(dropId: number) {\n        let result = false\n        if (DropControl.isRogueEggs(dropId)) {\n            let eggsLen = DropControl.ins.getLenByType(tab.VirtualItemType.VirtualItemType_Eggs)\n            let heroLen = PlayerControl.ins.getAllHeros().length - PlayerControl.ins.getNoCreateHeros().length\n            result = heroLen + eggsLen >= PlayerControl.ins.getAllHeros().length\n            if (result) {\n                console.error(\"场上英雄+蛋， 已满足\" + PlayerControl.ins.getAllHeros().length + \"个\")\n            }\n        } else {\n\n        }\n        return result\n    }\n\n    /** 增加肉鸽属性 */\n    addRogueAttr(rogueInfo: RogueInfo) {\n        console.log(\"添加肉鸽属性\", rogueInfo.Id)\n        if (rogueInfo.heroItemId) {\n            EventMgr.emitFight(FightEvent.Role_Active, rogueInfo)\n        }\n        SkillControl.ins.rogueUseSkillTarget(rogueInfo)\n        RevoltCheatControl.ins.addRogue(rogueInfo.Id)\n    }\n\n    addRefreshRogueTime() {\n        this.refreshRogueTime += 1;\n    }\n    getRefreshRogueTotalTime() {\n        let num = tab.getData().GetKeyValue_ConfigTable().FightRogueRefreshCount;\n        num += PlayerControl.ins.getGlobleAttr(tab.AttrType.AttrType_RefreshCount);\n        num += RoleData.ins.getPrivilegeValue(tab.VipBonus.VipBonus_RefreshCount);\n        return num;\n    }\n\n    iFightUpdate(dt: number): void {\n\n    }\n\n    /** 获取所有已选择id */\n    getSelectAllIdList() {\n        let list = []\n        for (let index = 0; index < this.selectAllList.length; index++) {\n            const v = this.selectAllList[index];\n            list.push(v.Id)\n        }\n        return list\n    }\n    getNowSelectIdList() {\n        let list = []\n        for (let index = 0; index < this.selectList.length; index++) {\n            const v = this.selectList[index];\n            if (v.heroItemId == 0){\n                list.push(v.Id)\n            }\n        }\n        return list\n    }\n}\n\n"]}