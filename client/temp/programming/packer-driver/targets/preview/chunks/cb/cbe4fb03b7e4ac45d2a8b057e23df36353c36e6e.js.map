{"version":3,"sources":["file:///C:/chickenStarClient/client/assets/scripts/logic/model/association/AssociationRankRewardItem.ts"],"names":["_decorator","Component","Label","Node","ItemPoolMgr","ccclass","property","AssociationRankRewardItem","initView","minRank","maxRank","rewards","no1_Node","active","no2_Node","no3_Node","qiTaiNode","rankNunLab","string","String","rewardLayout","removeAllChildren","key","ins","createRewadItem"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,K,OAAAA,K;AAAOC,MAAAA,I,OAAAA,I;;AAC9BC,MAAAA,W,iBAAAA,W;;;;;;;;;OAEH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBN,U;;2CAGjBO,yB,WADZF,OAAO,CAAC,2BAAD,C,UAEHC,QAAQ,CAACH,IAAD,C,UAERG,QAAQ,CAACH,IAAD,C,UAERG,QAAQ,CAACH,IAAD,C,UAERG,QAAQ,CAACH,IAAD,C,UAERG,QAAQ,CAACH,IAAD,C,UAERG,QAAQ,CAACJ,KAAD,C,2BAZb,MACaK,yBADb,SAC+CN,SAD/C,CACyD;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAerDO,QAAAA,QAAQ,CAACC,OAAD,EAAkBC,OAAlB,EAAmCC,OAAnC,EAA6D;AACjE,cAAIF,OAAO,IAAIC,OAAf,EAAwB;AACpB,iBAAKE,QAAL,CAAcC,MAAd,GAAuBJ,OAAO,IAAI,CAAlC;AACA,iBAAKK,QAAL,CAAcD,MAAd,GAAuBJ,OAAO,IAAI,CAAlC;AACA,iBAAKM,QAAL,CAAcF,MAAd,GAAuBJ,OAAO,IAAI,CAAlC;AACA,iBAAKO,SAAL,CAAeH,MAAf,GAAwB,KAAxB;AACH,WALD,MAKO;AACH,iBAAKG,SAAL,CAAeH,MAAf,GAAwB,IAAxB;;AACA,gBAAIJ,OAAJ,EAAa;AACT,mBAAKQ,UAAL,CAAgBC,MAAhB,GAAyBT,OAAO,GAAG,GAAV,GAAgBC,OAAzC;AACH,aAFD,MAEO;AACH,mBAAKO,UAAL,CAAgBC,MAAhB,GAAyBC,MAAM,CAACT,OAAD,CAA/B;AACH;AACJ;;AACD,eAAKU,YAAL,CAAkBC,iBAAlB;;AACA,eAAK,IAAIC,GAAT,IAAgBX,OAAhB,EAAyB;AACrB;AAAA;AAAA,4CAAYY,GAAZ,CAAgBC,eAAhB,CAAgCb,OAAO,CAACW,GAAD,CAAvC,EAA8C,KAAKF,YAAnD;AACH;AACJ;;AAjCoD,O;;;;;iBAEpC,I;;;;;;;iBAEA,I;;;;;;;iBAEA,I;;;;;;;iBAEC,I;;;;;;;iBAEG,I;;;;;;;iBAED,I","sourcesContent":["import { _decorator, Component, Label, Node } from 'cc';\r\nimport { ItemPoolMgr } from '../item/ItemPoolMgr';\r\nimport { ItemInfo } from '../item/ItemInfo';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('AssociationRankRewardItem')\r\nexport class AssociationRankRewardItem extends Component {\r\n    @property(Node)\r\n    no1_Node: Node = null;\r\n    @property(Node)\r\n    no2_Node: Node = null;\r\n    @property(Node)\r\n    no3_Node: Node = null;\r\n    @property(Node)\r\n    qiTaiNode: Node = null;\r\n    @property(Node)\r\n    rewardLayout: Node = null;\r\n    @property(Label)\r\n    rankNunLab: Label = null;\r\n\r\n\r\n    initView(minRank: number, maxRank: number, rewards: Array<ItemInfo>) {\r\n        if (minRank == maxRank) {\r\n            this.no1_Node.active = minRank == 1;\r\n            this.no2_Node.active = minRank == 2;\r\n            this.no3_Node.active = minRank == 3;\r\n            this.qiTaiNode.active = false;\r\n        } else {\r\n            this.qiTaiNode.active = true;\r\n            if (minRank) {\r\n                this.rankNunLab.string = minRank + \"-\" + maxRank;\r\n            } else {\r\n                this.rankNunLab.string = String(maxRank);\r\n            }\r\n        }\r\n        this.rewardLayout.removeAllChildren();\r\n        for (let key in rewards) {\r\n            ItemPoolMgr.ins.createRewadItem(rewards[key], this.rewardLayout);\r\n        }\r\n    }\r\n}\r\n\r\n\r\n"]}