{"version":3,"sources":["file:///C:/chickenStarClient/client/node_modules/protobufjs/src/decoder.js"],"names":["_cjsLoader","_req","__cjsMetaURL","_req0","_req1","url","define","exports","require","module","__filename","__dirname","decoder","Enum","types","util","missing","field","name","mtype","gen","codegen","fieldsArray","filter","map","length","group","i","_fieldsArray","resolve","type","resolvedType","ref","safeProp","id","defaults","keyType","undefined","basic","long","repeated","packed","rfield","required","_cjsExports"],"mappings":"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","sourcesContent":["import _cjsLoader from 'cce:/internal/ml/cjs-loader.mjs';\nimport { __cjsMetaURL as _req} from './enum';\nimport { __cjsMetaURL as _req0} from './types';\nimport { __cjsMetaURL as _req1} from './util';\nlet _cjsExports;\nconst __cjsMetaURL = import.meta.url;\n_cjsLoader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {\n// #region ORIGINAL CODE\n\n\n \"use strict\";\n module.exports = decoder;\n\n var Enum    = require(\"./enum\"),\n     types   = require(\"./types\"),\n     util    = require(\"./util\");\n\n function missing(field) {\n     return \"missing required '\" + field.name + \"'\";\n }\n\n /**\n  * Generates a decoder specific to the specified message type.\n  * @param {Type} mtype Message type\n  * @returns {Codegen} Codegen instance\n  */\n function decoder(mtype) {\n     /* eslint-disable no-unexpected-multiline */\n     var gen = util.codegen([\"r\", \"l\"], mtype.name + \"$decode\")\n     (\"if(!(r instanceof Reader))\")\n         (\"r=Reader.create(r)\")\n     (\"var c=l===undefined?r.len:r.pos+l,m=new this.ctor\" + (mtype.fieldsArray.filter(function(field) { return field.map; }).length ? \",k,value\" : \"\"))\n     (\"while(r.pos<c){\")\n         (\"var t=r.uint32()\");\n     if (mtype.group) gen\n         (\"if((t&7)===4)\")\n             (\"break\");\n     gen\n         (\"switch(t>>>3){\");\n\n     var i = 0;\n     for (; i < /* initializes */ mtype.fieldsArray.length; ++i) {\n         var field = mtype._fieldsArray[i].resolve(),\n             type  = field.resolvedType instanceof Enum ? \"int32\" : field.type,\n             ref   = \"m\" + util.safeProp(field.name); gen\n             (\"case %i: {\", field.id);\n\n         // Map fields\n         if (field.map) { gen\n                 (\"if(%s===util.emptyObject)\", ref)\n                     (\"%s={}\", ref)\n                 (\"var c2 = r.uint32()+r.pos\");\n\n             if (types.defaults[field.keyType] !== undefined) gen\n                 (\"k=%j\", types.defaults[field.keyType]);\n             else gen\n                 (\"k=null\");\n\n             if (types.defaults[type] !== undefined) gen\n                 (\"value=%j\", types.defaults[type]);\n             else gen\n                 (\"value=null\");\n\n             gen\n                 (\"while(r.pos<c2){\")\n                     (\"var tag2=r.uint32()\")\n                     (\"switch(tag2>>>3){\")\n                         (\"case 1: k=r.%s(); break\", field.keyType)\n                         (\"case 2:\");\n\n             if (types.basic[type] === undefined) gen\n                             (\"value=types[%i].decode(r,r.uint32())\", i); // can't be groups\n             else gen\n                             (\"value=r.%s()\", type);\n\n             gen\n                             (\"break\")\n                         (\"default:\")\n                             (\"r.skipType(tag2&7)\")\n                             (\"break\")\n                     (\"}\")\n                 (\"}\");\n\n             if (types.long[field.keyType] !== undefined) gen\n                 (\"%s[typeof k===\\\"object\\\"?util.longToHash(k):k]=value\", ref);\n             else gen\n                 (\"%s[k]=value\", ref);\n\n         // Repeated fields\n         } else if (field.repeated) { gen\n\n                 (\"if(!(%s&&%s.length))\", ref, ref)\n                     (\"%s=[]\", ref);\n\n             // Packable (always check for forward and backward compatiblity)\n             if (types.packed[type] !== undefined) gen\n                 (\"if((t&7)===2){\")\n                     (\"var c2=r.uint32()+r.pos\")\n                     (\"while(r.pos<c2)\")\n                         (\"%s.push(r.%s())\", ref, type)\n                 (\"}else\");\n\n             // Non-packed\n             if (types.basic[type] === undefined) gen(field.resolvedType.group\n                     ? \"%s.push(types[%i].decode(r))\"\n                     : \"%s.push(types[%i].decode(r,r.uint32()))\", ref, i);\n             else gen\n                     (\"%s.push(r.%s())\", ref, type);\n\n         // Non-repeated\n         } else if (types.basic[type] === undefined) gen(field.resolvedType.group\n                 ? \"%s=types[%i].decode(r)\"\n                 : \"%s=types[%i].decode(r,r.uint32())\", ref, i);\n         else gen\n                 (\"%s=r.%s()\", ref, type);\n         gen\n                 (\"break\")\n             (\"}\");\n         // Unknown fields\n     } gen\n             (\"default:\")\n                 (\"r.skipType(t&7)\")\n                 (\"break\")\n\n         (\"}\")\n     (\"}\");\n\n     // Field presence\n     for (i = 0; i < mtype._fieldsArray.length; ++i) {\n         var rfield = mtype._fieldsArray[i];\n         if (rfield.required) gen\n     (\"if(!m.hasOwnProperty(%j))\", rfield.name)\n         (\"throw util.ProtocolError(%j,{instance:m})\", missing(rfield));\n     }\n\n     return gen\n     (\"return m\");\n     /* eslint-enable no-unexpected-multiline */\n }\n\n\n// #endregion ORIGINAL CODE\n\n_cjsExports = module.exports;\n\n\n}, () => ({\n  './enum': _req,\n  './types': _req0,\n  './util': _req1,\n}));\nexport { _cjsExports as default };\nexport { __cjsMetaURL }\n"]}