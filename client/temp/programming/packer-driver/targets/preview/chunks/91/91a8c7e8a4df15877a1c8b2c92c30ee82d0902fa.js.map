{"version":3,"sources":["file:///C:/chickenStarClient/client/assets/scripts/sensitive_word/src/index.test.ts"],"names":[],"mappingssourcesContent":["import Mint from './index';\n\n// const falsyStr = `0、爆，拼拼多多，拼多多；1、拼多爆；2、拼多少；3、多少多；4、1111大促；5、智能ABC；6、我操；7、我操呀`;\n// const truthyStr = `这是一段没有敏感词的字符串，我在这里写了很多，十一月一日有很多优惠，我们要多购买。`;\n\n// describe('基础测试', () => {\n//   it('基本测验-自定义替换字符:', () => {\n//     const mint = new Mint(['拼多多', '多少'], { customCharacter: '_' });\n//     expect(mint.filter('拼多少，多少多').text).toEqual('拼__，__多');\n//   });\n\n//   it('基本测验-中文:', () => {\n//     const mint = new Mint(['拼多多', '多少']);\n//     expect(mint.filter('拼多少，多少多').text).toEqual('拼**，**多');\n//   });\n\n//   it('基本测验-失配', () => {\n//     const mint = new Mint(['ABCE', 'BCD']);\n//     expect(mint.filter('ABCDE').text).toEqual('A***E');\n//   });\n\n//   it('基本测验-字母（关键字大写）:', () => {\n//     const mint = new Mint(['HER', 'HEQ', 'XSHR']);\n//     expect(mint.filter('xsher').text).toEqual('xs***');\n//   });\n\n//   it('基本测验-字母（关键字小写）:', () => {\n//     const mint = new Mint(['her', 'heq', 'xshr']);\n//     expect(mint.filter('XSHER').text).toEqual('XS***');\n//   });\n\n//   it('基本测验-字母（全大写）:', () => {\n//     const mint = new Mint(['HER', 'HEQ', 'XSHR']);\n//     expect(mint.filter('XSHER')).toEqual(\n//       expect.objectContaining({\n//         words: ['HER'],\n//         text: 'XS***',\n//       }),\n//     );\n//   });\n\n//   it('基本测验-字母（全小写）:', () => {\n//     const mint = new Mint(['her', 'heq', 'xshr']);\n//     expect(mint.filter('xsher')).toEqual(\n//       expect.objectContaining({\n//         words: ['her'],\n//         text: 'xs***',\n//       }),\n//     );\n//   });\n\n//   it('基本测验-多词:', () => {\n//     const mint = new Mint(['her', 'heq', 'xshr']);\n//     expect(mint.filter('123_her_heq_xsher_heqher')).toEqual(\n//       expect.objectContaining({\n//         words: ['her', 'heq', 'her', 'heq', 'her'],\n//         text: '123_***_***_xs***_******',\n//       }),\n//     );\n//   });\n// });\n\n// describe('方法检测', () => {\n//   it('mint.add() :', () => {\n//     const mint = new Mint(['heq', 'xshr']);\n//     expect(mint.filter('xsher').text).toEqual('xsher');\n//     mint.add('HER');\n//     mint.add('her');\n//     expect(mint.filter('xsher').text).toEqual('xs***');\n//   });\n\n//   it('mint.delete() :', () => {\n//     const mint = new Mint(['her', 'heq', 'xshr']);\n//     expect(mint.filter('xsher').text).toEqual('xs***');\n//     mint.delete('HER');\n//     expect(mint.filter('xsher').text).toEqual('xsher');\n//     mint.delete('her');\n//   });\n\n//   it('mint.verify() :', () => {\n//     const mint = new Mint(['her', 'heq', 'xshr']);\n//     expect(mint.verify('XSHER')).toBeFalsy();\n//     expect(mint.verify('xshxxw')).toBeTruthy();\n//   });\n\n//   it('mint.filter() :', () => {\n//     const mint = new Mint(['her', 'heq', 'xshr']);\n//     expect(mint.filter('xsheqxx', { replace: false })).toEqual(\n//       expect.objectContaining({\n//         words: ['heq'],\n//         text: 'xsheqxx',\n//       }),\n//     );\n//   });\n\n//   it('混合测试 :', () => {\n//     const mint = new Mint(['her', 'heq', 'xshr']);\n//     mint.add('he');\n//     expect(mint.filter('xsher')).toEqual(\n//       expect.objectContaining({\n//         words: ['he', 'her'],\n//         text: 'xs***',\n//       }),\n//     );\n//     mint.delete('he');\n//     expect(mint.filter('xsher')).toEqual(\n//       expect.objectContaining({\n//         words: ['her'],\n//         text: 'xs***',\n//       }),\n//     );\n//     mint.add('he');\n//     mint.delete('her');\n//     expect(mint.filter('xsher')).toEqual(\n//       expect.objectContaining({\n//         words: ['he'],\n//         text: 'xs**r',\n//       }),\n//     );\n//   });\n// });\n\n// describe('随机测试', () => {\n//   it('混合测试 :', () => {\n//     const arr = ['her', 'heq', 'xshr', 'he'];\n//     const mint = new Mint(arr);\n//     const mint2 = new Mint([]);\n//     arr.map((str) => {\n//       mint2.add(str);\n//     });\n\n//     expect(mint.root).toEqual(expect.objectContaining(mint2.root));\n//   });\n// });\n"]}