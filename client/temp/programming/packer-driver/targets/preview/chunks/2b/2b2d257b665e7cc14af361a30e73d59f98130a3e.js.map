{"version":3,"sources":["file:///C:/chickenStarClient/client/assets/scripts/logic/model/jianghu/everyDayChallenge/EveryDayChallengeHelpPop.ts"],"names":["_decorator","Label","Node","ViewPop","GameplayViewDataMgr","tab","GameUtil","ItemPoolMgr","ccclass","property","EveryDayChallengeHelpPop","register","onShow","currLevel","ins","dailyChallengeDataMsg","level","nextLevel","currTable","getData","DailyChallengeLevelTableByLevel","getValue","nextTable","currLevelLab","string","Level","rewards1","key","DropId","arr","getRewardsByDropId","itemsAddItems","createRewadItem","currContent","rewards2","nextLevelLab","nextContent","nextRewardNode","active"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAuBC,MAAAA,K,OAAAA,K;AAAOC,MAAAA,I,OAAAA,I;;AAC9BC,MAAAA,O,iBAAAA,O;;AACAC,MAAAA,mB,iBAAAA,mB;;AACAC,MAAAA,G,iBAAAA,G;;AACAC,MAAAA,Q,iBAAAA,Q;;AACAC,MAAAA,W,iBAAAA,W;;;;;;;;;OACH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBT,U;AAE9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;0CAGaU,wB,WADZF,OAAO,CAAC,0BAAD,C,UAEHC,QAAQ,CAACP,IAAD,C,UAERO,QAAQ,CAACP,IAAD,C,UAERO,QAAQ,CAACP,IAAD,C,UAERO,QAAQ,CAACR,KAAD,C,UAERQ,QAAQ,CAACR,KAAD,C,2BAVb,MACaS,wBADb;AAAA;AAAA,8BACsD;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAYlDC,QAAAA,QAAQ,GAAS,CAEhB;;AAEDC,QAAAA,MAAM,GAAS;AACX;AACA,cAAIC,SAAS,GAAG;AAAA;AAAA,0DAAoBC,GAApB,CAAwBC,qBAAxB,CAA8CC,KAA9D;AACA,cAAIC,SAAS,GAAGJ,SAAS,GAAG,CAA5B;AACA,cAAIK,SAAS,GAAG;AAAA;AAAA,0BAAIC,OAAJ,GAAcC,+BAAd,CAA8CC,QAA9C,CAAuDR,SAAvD,CAAhB;AACA,cAAIS,SAAS,GAAG;AAAA;AAAA,0BAAIH,OAAJ,GAAcC,+BAAd,CAA8CC,QAA9C,CAAuDJ,SAAvD,CAAhB;AACA,eAAKM,YAAL,CAAkBC,MAAlB,GAA2BN,SAAS,CAACO,KAAV,GAAkB,EAA7C;AACA,cAAIC,QAAQ,GAAG,EAAf;;AACA,eAAK,IAAIC,GAAT,IAAgBT,SAAS,CAACU,MAA1B,EAAkC;AAC9B,gBAAIC,GAAG,GAAG;AAAA;AAAA,sCAASC,kBAAT,CAA4BZ,SAAS,CAACU,MAAV,CAAiBD,GAAjB,CAA5B,CAAV;AACAD,YAAAA,QAAQ,GAAG;AAAA;AAAA,sCAASK,aAAT,CAAuBL,QAAvB,EAAiCG,GAAjC,CAAX;AACH;;AACD,eAAK,IAAIF,IAAT,IAAgBD,QAAhB,EAA0B;AACtB;AAAA;AAAA,4CAAYZ,GAAZ,CAAgBkB,eAAhB,CAAgCN,QAAQ,CAACC,IAAD,CAAxC,EAA+C,KAAKM,WAApD;AACH;;AACD,cAAIX,SAAJ,EAAe;AACX,gBAAIY,QAAQ,GAAG,EAAf;AACC,iBAAKC,YAAL,CAAkBX,MAAlB,GAA2BF,SAAS,CAACG,KAAV,GAAkB,EAA7C;;AACD,iBAAK,IAAIE,KAAT,IAAgBL,SAAS,CAACM,MAA1B,EAAkC;AAC9B,kBAAIC,IAAG,GAAG;AAAA;AAAA,wCAASC,kBAAT,CAA4BR,SAAS,CAACM,MAAV,CAAiBD,KAAjB,CAA5B,CAAV;;AACAO,cAAAA,QAAQ,GAAG;AAAA;AAAA,wCAASH,aAAT,CAAuBG,QAAvB,EAAiCL,IAAjC,CAAX;AACH;;AACD,iBAAK,IAAIF,KAAT,IAAgBO,QAAhB,EAA0B;AACtB;AAAA;AAAA,8CAAYpB,GAAZ,CAAgBkB,eAAhB,CAAgCE,QAAQ,CAACP,KAAD,CAAxC,EAA+C,KAAKS,WAApD;AACH;AACJ,WAVD,MAUK;AACD,iBAAKC,cAAL,CAAoBC,MAApB,GAA2B,KAA3B;AACH;AACJ;;AA5CiD,O;;;;;iBAE3B,I;;;;;;;iBAEH,I;;;;;;;iBAEA,I;;;;;;;iBAEE,I;;;;;;;iBAEA,I","sourcesContent":["import { _decorator, Component, Label, Node } from 'cc';\r\nimport { ViewPop } from '../../../../framework/base/ViewPop';\r\nimport { GameplayViewDataMgr } from '../GameplayViewDataMgr';\r\nimport { tab } from '../../../../Table/table_gen';\r\nimport { GameUtil } from '../../../utils/GameUtil';\r\nimport { ItemPoolMgr } from '../../item/ItemPoolMgr';\r\nconst { ccclass, property } = _decorator;\r\n\r\n/**\r\n * \r\n * EveryDayChallengeHelpPop\r\n * zhudingchao\r\n * Wed Jul 10 2024 19:22:53 GMT+0800 (中国标准时间)\r\n * db://assets/scripts/logic/model/jianghu/everyDayChallenge/EveryDayChallengeHelpPop.ts\r\n *\r\n */\r\n\r\n@ccclass('EveryDayChallengeHelpPop')\r\nexport class EveryDayChallengeHelpPop extends ViewPop {\r\n    @property(Node)\r\n    nextRewardNode: Node = null;\r\n    @property(Node)\r\n    currContent: Node = null;\r\n    @property(Node)\r\n    nextContent: Node = null;\r\n    @property(Label)\r\n    currLevelLab: Label = null;\r\n    @property(Label)\r\n    nextLevelLab: Label = null;\r\n\r\n    register(): void {\r\n        \r\n    }\r\n\r\n    onShow(): void {\r\n        // let \r\n        let currLevel = GameplayViewDataMgr.ins.dailyChallengeDataMsg.level;\r\n        let nextLevel = currLevel + 1;\r\n        let currTable = tab.getData().DailyChallengeLevelTableByLevel.getValue(currLevel);\r\n        let nextTable = tab.getData().DailyChallengeLevelTableByLevel.getValue(nextLevel);\r\n        this.currLevelLab.string = currTable.Level + \"\"\r\n        let rewards1 = [];\r\n        for (let key in currTable.DropId) {\r\n            let arr = GameUtil.getRewardsByDropId(currTable.DropId[key]);\r\n            rewards1 = GameUtil.itemsAddItems(rewards1, arr);\r\n        }\r\n        for (let key in rewards1) {\r\n            ItemPoolMgr.ins.createRewadItem(rewards1[key], this.currContent);\r\n        }\r\n        if (nextTable) {\r\n            let rewards2 = [];\r\n             this.nextLevelLab.string = nextTable.Level + \"\"\r\n            for (let key in nextTable.DropId) {\r\n                let arr = GameUtil.getRewardsByDropId(nextTable.DropId[key]);\r\n                rewards2 = GameUtil.itemsAddItems(rewards2, arr);\r\n            }\r\n            for (let key in rewards2) {\r\n                ItemPoolMgr.ins.createRewadItem(rewards2[key], this.nextContent);\r\n            }\r\n        }else{\r\n            this.nextRewardNode.active=false;\r\n        }\r\n    }\r\n}"]}