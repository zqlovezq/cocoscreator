{"version":3,"sources":["file:///C:/chickenStarClient/client/assets/scripts/logic/net/DataViewRW.ts"],"names":["DataViewBase","DataViewWriter","DataViewReader","constructor","buffer","byteOffset","byteLength","m_len","m_pos","m_DataView","DataView","markEnd","getLen","getPos","setLen","len","resetPos","advance","num","getCapacity","getBuffer","getOffset","setBool","value","setInt8","Number","setUint8","setInt16","setUint16","setInt32","setUint32","setFloat32","setFloat64","setString","codeArray","Array","i","length","code","charCodeAt","push","firstByte","secondByte","thirdByte","fourthByte","Error","charCode","getDataView","getArrayBuffer","slice","getBool","Boolean","getInt8","data","getUint8","getInt16","getUint16","getInt32","getUint32","getFloat32","getFloat64","getString","str","String","fromCharCode"],"mappings":"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","sourcesContent":["\r\n\r\nclass DataViewBase\r\n{\r\n    constructor(buffer: ArrayBufferLike, byteOffset?: number, byteLength?: number) {  \r\n        this.m_DataView = new DataView(buffer, byteOffset, byteLength);\r\n        this.m_len = 0;\r\n        this.m_pos = 0;\r\n    }\r\n\r\n    public markEnd(){\r\n        this.m_len = this.m_pos;\r\n    }\r\n\r\n    public getLen(): number {\r\n        return this.m_len;\r\n    }\r\n\r\n    public getPos(): number {\r\n        return this.m_pos;\r\n    }\r\n\r\n    public setLen(len: number) {\r\n        this.m_len = len;\r\n    }\r\n\r\n    public resetPos() {\r\n        this.m_pos = 0;\r\n    }\r\n\r\n    public advance(num: number) {\r\n        this.m_pos += num;\r\n    }\r\n\r\n    public getCapacity() {\r\n        return this.m_DataView.byteLength;\r\n    }\r\n\r\n    public getBuffer() {\r\n        return this.m_DataView.buffer;\r\n    }\r\n\r\n    public getOffset() {\r\n        return this.m_DataView.byteOffset;\r\n    }\r\n\r\n    protected m_len : number;\r\n    protected m_pos : number;\r\n    protected m_DataView : DataView;\r\n}\r\n\r\nexport class DataViewWriter extends DataViewBase\r\n{\r\n    constructor(buffer: ArrayBufferLike, byteOffset?: number, byteLength?: number) {  \r\n        super(buffer, byteOffset, byteLength);\r\n    }\r\n\r\n    public setBool(value: boolean) {\r\n        this.setInt8(Number(value));\r\n    }\r\n\r\n    public setInt8(value: number) {\r\n        this.m_DataView.setInt8(this.m_pos, value)\r\n        this.m_pos += 1;\r\n    }\r\n\r\n    public setUint8(value: number) {\r\n        this.setInt8(value);\r\n    }\r\n\r\n    public setInt16(value: number) {\r\n        this.m_DataView.setInt16(this.m_pos, value, true)\r\n        this.m_pos += 2;\r\n    }\r\n\r\n    public setUint16(value: number) {\r\n        this.setInt16(value);\r\n    }\r\n\r\n    public setInt32(value: number) {\r\n        this.m_DataView.setInt32(this.m_pos, value, true)\r\n        this.m_pos += 4;\r\n    }\r\n\r\n    public setUint32(value: number) {\r\n        this.setInt32(value);\r\n    }\r\n\r\n    public setFloat32(value: number) {\r\n        this.m_DataView.setFloat32(this.m_pos, value, true)\r\n        this.m_pos += 4;\r\n    }\r\n\r\n    public setFloat64(value: number) {\r\n        this.m_DataView.setFloat64(this.m_pos, value, true)\r\n        this.m_pos += 4;\r\n    }\r\n\r\n    public setString(value: string) {\r\n        let codeArray = new Array<number>();\r\n        for(let i = 0; i < value.length; ++i)\r\n        {\r\n            let code = value.charCodeAt(i);\r\n            if(code < 128)\r\n            {\r\n                //1 byte\r\n                codeArray.push(value.charCodeAt(i))\r\n            }\r\n            else if(code < 2048)\r\n            {\r\n                //2 bytes 110xxxxx 10xxxxxx\r\n                let firstByte = (code >> 6) | 192;\r\n                let secondByte =  (code & 63) | 128;\r\n                codeArray.push(firstByte);\r\n                codeArray.push(secondByte);\r\n            }\r\n            else if(code < 65536)\r\n            {\r\n                //3 bytes 1110xxxx 10xxxxxx 10xxxxxx\r\n                let firstByte = (code >> 12) | 224;\r\n                let secondByte =  ((code >> 6) & 63) | 128;\r\n                let thirdByte =  (code & 63) | 128;\r\n                codeArray.push(firstByte);\r\n                codeArray.push(secondByte);\r\n                codeArray.push(thirdByte);\r\n            }\r\n            else if(code < 1114112)\r\n            {\r\n                //4 bytes 11110xxx 10xxxxxx 10xxxxxx 10xxxxxx\r\n                let firstByte = (code >> 18) | 240;\r\n                let secondByte =  ((code >> 12) & 63) | 128;\r\n                let thirdByte =   ((code >> 6) & 63) | 128;\r\n                let fourthByte =  (code & 63) | 128;\r\n                codeArray.push(firstByte);\r\n                codeArray.push(secondByte);\r\n                codeArray.push(thirdByte);\r\n                codeArray.push(fourthByte);\r\n            }\r\n            else\r\n            {\r\n                throw new Error(\"not supported code\")\r\n            }\r\n        }\r\n        this.setInt32(codeArray.length); //长度\r\n        for(let charCode of codeArray)\r\n        {\r\n            this.setUint8(charCode);\r\n        }\r\n    }\r\n\r\n    public getDataView() : DataView {\r\n        return new DataView(this.m_DataView.buffer, this.m_DataView.byteOffset, this.m_len);\r\n    }\r\n    public getArrayBuffer(): ArrayBuffer {\r\n        return this.m_DataView.buffer.slice(this.m_DataView.byteOffset, this.m_DataView.byteOffset + this.m_len)\r\n    }\r\n}\r\n\r\nexport class DataViewReader extends DataViewBase\r\n{\r\n    constructor(buffer: ArrayBufferLike, byteOffset?: number, byteLength?: number) {  \r\n        super(buffer, byteOffset, byteLength);\r\n    }\r\n\r\n    public getBool(): boolean {\r\n        return Boolean(this.getInt8());\r\n    }\r\n\r\n    public getInt8(): number {\r\n        let data = this.m_DataView.getInt8(this.m_pos)\r\n        this.m_pos += 1;\r\n        return data;\r\n    }\r\n\r\n    public getUint8(): number {\r\n        let data = this.m_DataView.getUint8(this.m_pos)\r\n        this.m_pos += 1;\r\n        return data;\r\n    }\r\n\r\n    public getInt16(): number {\r\n        let data = this.m_DataView.getInt16(this.m_pos, true)\r\n        this.m_pos += 2;\r\n        return data;\r\n    }\r\n\r\n    public getUint16(): number {\r\n        let data = this.m_DataView.getUint16(this.m_pos, true)\r\n        this.m_pos += 2;\r\n        return data;\r\n    }\r\n\r\n    public getInt32(): number {\r\n        let data = this.m_DataView.getInt32(this.m_pos, true)\r\n        this.m_pos += 4;\r\n        return data;\r\n    }\r\n\r\n    public getUint32(): number {\r\n        let data = this.m_DataView.getUint32(this.m_pos, true)\r\n        this.m_pos += 4;\r\n        return data;\r\n    }\r\n\r\n    public getFloat32(): number {\r\n        let data = this.m_DataView.getFloat32(this.m_pos, true)\r\n        this.m_pos += 4;\r\n        return data;\r\n    }\r\n\r\n    public getFloat64(): number {\r\n        let data = this.m_DataView.getFloat64(this.m_pos, true)\r\n        this.m_pos += 8;\r\n        return data;\r\n    }\r\n\r\n    public getString(len: number): string {\r\n        let str: string = \"\";\r\n        let i: number = 0;\r\n        while(i < len)\r\n        {\r\n            let firstByte = this.getUint8();\r\n            if((firstByte & 240) == 240)\r\n            {\r\n                //4 bytes 11110xxx 10xxxxxx 10xxxxxx 10xxxxxx\r\n                if(i + 3 >= len)\r\n                {\r\n                    return str;\r\n                }\r\n                let secondByte =  this.getUint8();\r\n                let thirdByte =   this.getUint8();\r\n                let fourthByte =  this.getUint8();\r\n                let code = ((firstByte & 7) << 18) | ((secondByte & 63) << 12) | ((thirdByte & 63) << 6) | (fourthByte & 63);\r\n                str += String.fromCharCode(code);\r\n\r\n                i += 4;\r\n            }\r\n            else if((firstByte & 224) == 224)\r\n            {\r\n                //3 bytes 1110xxxx 10xxxxxx 10xxxxxx\r\n                if(i + 2 >= len)\r\n                {\r\n                    return str;\r\n                }\r\n                let secondByte =  this.getUint8();\r\n                let thirdByte =   this.getUint8();\r\n                let code = ((firstByte & 15) << 12) | ((secondByte & 63) << 6) | (thirdByte & 63);\r\n                str += String.fromCharCode(code);\r\n                i += 3;\r\n            }\r\n            else if((firstByte & 192) == 192)\r\n            {\r\n                //2 bytes 110xxxxx 10xxxxxx\r\n                if(i + 1 >= len)\r\n                {\r\n                    return str;\r\n                }\r\n                let secondByte =  this.getUint8();\r\n                let code = ((firstByte & 31) << 6) | (secondByte & 63);\r\n                str += String.fromCharCode(code);\r\n                i += 2;\r\n            }\r\n            else\r\n            {\r\n                str += String.fromCharCode(firstByte);\r\n                ++i;\r\n            }\r\n        }\r\n        return str;\r\n    }\r\n\r\n    public getLen(): number {\r\n        return this.m_DataView.byteLength;\r\n    }\r\n}"]}