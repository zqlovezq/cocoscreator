{"version":3,"sources":["file:///C:/chickenStarClient/client/assets/scripts/logic/model/home/battle/BattleMainRewardItem.ts"],"names":["_decorator","Component","Label","Node","Prefab","ItemInfo","proto","Net","BattleMainDataControl","tab","LangMgr","ItemPoolMgr","setTextTime_3","LevelRewardState","ccclass","property","BattleMainRewardItem","_rewardTabData","_curStageId","_state","None","_idx","initData","index","stageId","node_content","destroyAllChildren","getData","ChapterFristRewardTableById","getValue","ins","getCurFightStageId","lbl_reward","string","getCombineString","Time","setState","rewardId","rewardNum","gotRewards","getReceiveFirstRewardById","Id","isGot","state","NotAchieved","Got","Receive","maxTime","getCurMaxAliveSecond","isPass","getIsPasstStageByStageId","i","length","item_data","itemId","num","node","createItem","node_got","active","node_receive","node_not_achieved","clickReceiveBtn","event","key","msg","Msg_ReceiveMainFirstRewardReq","indexes","getAllIndex","Send","Ptl","ReceiveMainFirstRewardReq"],"mappings":"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","sourcesContent":["import { _decorator, Component, EventTouch, instantiate, Label, Node, Prefab } from 'cc';\r\nimport { CommonItem } from '../../item/CommonItem';\r\nimport { ItemInfo } from '../../item/ItemInfo';\r\nimport { proto } from 'client_protocol';\r\nimport { Net } from '../../../net/Net';\r\nimport { BattleMainDataControl } from './BattleMainDataControl';\r\nimport { tab } from '../../../../Table/table_gen';\r\nimport { LangMgr } from '../../../mgr/LangMgr';\r\nimport { ItemPoolMgr } from '../../item/ItemPoolMgr';\r\nimport { setTextTime_3 } from '../../../utils/GameUtil';\r\nimport { LevelRewardState } from '../../../../Common/script/EnumTypeMgr';\r\nconst { ccclass, property } = _decorator;\r\n@ccclass('BattleMainRewardItem')\r\nexport class BattleMainRewardItem extends Component {\r\n    @property(Prefab)\r\n    pfb_common_item: Prefab = null;\r\n\r\n    @property(Node)\r\n    node_not_achieved: Node = null;\r\n    @property(Node)\r\n    node_got: Node = null;\r\n    @property(Node)\r\n    node_receive: Node = null;\r\n\r\n    @property(Label)\r\n    lbl_reward: Label = null;\r\n    @property(Node)\r\n    node_content:Node = null;\r\n\r\n    private _rewardTabData: tab.ChapterFristRewardTable = null;\r\n    private _curStageId: number = 0;\r\n    private _state: LevelRewardState = LevelRewardState.None;\r\n    private _idx: number;\r\n    initData(index: number, stageId: number) {\r\n        this.node_content.destroyAllChildren();\r\n        this._rewardTabData = tab.getData().ChapterFristRewardTableById.getValue(stageId);\r\n        this._idx = index;\r\n        this._curStageId = BattleMainDataControl.ins.getCurFightStageId();\r\n        this.lbl_reward.string = LangMgr.getCombineString(\"ui_battle_1\", [setTextTime_3(this._rewardTabData.Time[index])]);\r\n        this.setState();\r\n    }\r\n    setState() {\r\n        this.node_content.destroyAllChildren();\r\n        const rewardId = this._rewardTabData[\"RewardItemIds\" + (this._idx + 1)];\r\n        const rewardNum = this._rewardTabData[\"RewardItemNum\" + (this._idx + 1)];\r\n        const gotRewards = BattleMainDataControl.ins.getReceiveFirstRewardById(this._rewardTabData.Id, this._idx);\r\n        let isGot = false;\r\n        if (gotRewards) {\r\n            isGot = true;\r\n        }\r\n        /* 如果当前的stageId大于当前id 则状态是 NotAchieved*/\r\n        let state = LevelRewardState.None;\r\n        if (this._rewardTabData.Id > this._curStageId) {\r\n            state = LevelRewardState.NotAchieved\r\n        } else if (this._rewardTabData.Id < this._curStageId) {\r\n            // 判断是否领取\r\n            if (isGot) {\r\n                state = LevelRewardState.Got;\r\n            } else {\r\n                state = LevelRewardState.Receive;\r\n            }\r\n        } else {\r\n            // 获取当前的时间\r\n            const maxTime =BattleMainDataControl.ins.getCurMaxAliveSecond();\r\n            const isPass = BattleMainDataControl.ins.getIsPasstStageByStageId(this._curStageId);\r\n            if (maxTime < this._rewardTabData.Time[this._idx]) {\r\n                state = LevelRewardState.NotAchieved\r\n            } else {\r\n                // 判断是否领取\r\n                if (isGot) {\r\n                    state = LevelRewardState.Got;\r\n                } else {\r\n                    if(this._idx===2){\r\n                        if(isPass){\r\n                            state = LevelRewardState.Receive;\r\n                        }else{\r\n                            state = LevelRewardState.NotAchieved;\r\n                        }\r\n                    }else{\r\n                        state = LevelRewardState.Receive;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        this._state = state;\r\n        for(let i=0;i<rewardId.length;i++){\r\n            const item_data = new ItemInfo();\r\n            item_data.itemId = rewardId[i];\r\n            item_data.num = rewardNum[i];\r\n            let node = ItemPoolMgr.ins.createItem(item_data,this.node_content);\r\n        }\r\n        this.node_got.active = state === LevelRewardState.Got;\r\n        this.node_receive.active = state === LevelRewardState.Receive;\r\n        this.node_not_achieved.active = state === LevelRewardState.NotAchieved;\r\n    }\r\n    clickReceiveBtn(event: EventTouch, key: string) {\r\n        if (this._state !== LevelRewardState.Receive) {\r\n            return;\r\n        }\r\n        let msg = new proto.Msg_ReceiveMainFirstRewardReq();\r\n        msg.indexes = BattleMainDataControl.ins.getAllIndex(this._rewardTabData.Id)\r\n        msg.stageId = this._rewardTabData.Id;\r\n        Net.Send(proto.Ptl.ReceiveMainFirstRewardReq, msg)\r\n    }\r\n}\r\n\r\n\r\n"]}