{"version":3,"sources":["file:///C:/chickenStarClient/client/assets/scripts/logic/model/fincaFight/FincaFightData.ts"],"names":["_decorator","AbsControl","PrestigeData","tab","FincaFightTeamState","RANKING_TYPE","HeroData","GameUtil","RedMgr","RedDotType","FincaFightControl","RareBookData","ccclass","property","FincaFightData","fincaFightData","heroIds","bookIds","freeTimes","_fincaFightTeamTab","HeroToggleIndex","curSelectHero","curSelectBook","BookToggleIndex","FincaRanking","FincaRankingSimple","boosDicTabs","Map","bookList","ins","_instance","initData","msg","init","bookItemIds","length","push","getData","GetKeyValue_ConfigTable","FincaFightFreeTimes","freeFightTimes","setBookData","refreshEvent","Free_Fight_Token","setFincaFightTeamTab","getTeamTab","level","prestigeLevel","maxLevel","FincaFightTeam","Level","FincaFightTeamByLevel","getValue","Math","min","getFincaFightTeamTab","getState","index","UnlockHero","LOCK","HERO","EMPTY","getBookState","UnlockWeapon","BOOK","getHeroInTeam","heroId","indexOf","getInTeamHerosCount","count","i","getHeroEmptyIndex","maxIndex","checkReplaceHero","_id","heroInfo","getById","replaceHeroInfo","heroClassTable","HeroClass","getBookInTeam","bookId","getBookEmptyIndex","getInTeamBooksCount","getRewards","type","needSelf","rewardInfo","DropId","Rankings","selfReward","tableData1","RankRewardTableById","Fight","Ranking","tableData2","getCycleRewardTab","CycleRanking","CycleDropId","str","split","Number","getRewardsByDropId","RankCycleRewardTable","_tab","Id","getUnLockLevel","isHero","fincaTab","checkHeroIdsOk","HeroClass_Warrior","console","log","newArr","_heroInfo","classType","hasRepeat","hasDuplicate","arr","field","seen","value","clear","tabs","BookDictionary","key","PhaseOneBook","heroClass","getBookInfoByItemId","bookTable","Class","set","HeroClass_Assassin","HeroClass_Max","dict","get","k","PhaseTwoBook","twoBookId","threeBookId","PhaseThreeBook","bookInfo","isLock","has","HeroClass_Any","concat","getBookList","checkAllBooks","canSave","bookArr","reqSetFincaBattleBookIds","getChangeScoreStr","newScore","score"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node } from 'cc';\r\nimport { AbsControl } from '../../../framework/base/IAbs';\r\nimport { proto } from 'client_protocol';\r\nimport { PrestigeData } from '../prestige/PrestigeData';\r\nimport { tab } from '../../../Table/table_gen';\r\nimport { FincaFightTeamState, RANKING_TYPE } from '../../../Common/script/EnumTypeMgr';\r\nimport { HeroData } from '../hero/HeroData';\r\nimport { ItemInfo } from '../item/ItemInfo';\r\nimport { GameUtil } from '../../utils/GameUtil';\r\nimport { RedMgr } from '../../mgr/RedMgr';\r\nimport { RedDotType } from '../../red/RedDotType';\r\nimport { FincaFightControl } from './FincaFightControl';\r\nimport { RareBookInfo } from '../rareBook/RareBookInfo';\r\nimport { RareBookData } from '../rareBook/RareBookData';\r\nconst { ccclass, property } = _decorator;\r\ninterface PvPRewardInfo {\r\n    Rankings: string[], // 榜单 \r\n    DropId: number[], // 奖品 \r\n    selfReward: Array<ItemInfo>,//自己的奖励\r\n}\r\n@ccclass('FincaFightData')\r\nexport class FincaFightData extends AbsControl {\r\n    private fincaFightData: proto.Msg_GetFincaBattleInfoRsp = null;\r\n    public heroIds: number[] = []//英雄信息\r\n    public bookIds: number[] = []//秘籍信息\r\n    public freeTimes: number = 0;//免费次数\r\n    private static _instance: FincaFightData;\r\n    private _fincaFightTeamTab: tab.FincaFightTeam = null;\r\n    public HeroToggleIndex: number = 0;\r\n    public curSelectHero: number = 0;\r\n    public curSelectBook: number = 0;\r\n    public BookToggleIndex: number = 0;\r\n    public FincaRanking: number = 0;\r\n    public FincaRankingSimple: proto.ISimpleRank = null;\r\n    private boosDicTabs: Map<number, tab.BookDictionary> = new Map();\r\n    private bookList: Map<tab.HeroClass, RareBookInfo[]> = new Map();\r\n    public static get ins() {\r\n        if (null == this._instance) {\r\n            this._instance = new FincaFightData();\r\n        }\r\n        return this._instance;\r\n    }\r\n    initData(msg: proto.Msg_GetFincaBattleInfoRsp) {\r\n        FincaFightControl.ins.init();\r\n        this.fincaFightData = msg;\r\n        this.heroIds = msg.heroIds;\r\n        this.bookIds = msg.bookItemIds;\r\n        if (this.bookIds.length === 5) {\r\n            this.bookIds.push(0);\r\n        }\r\n        this.freeTimes = tab.getData().GetKeyValue_ConfigTable().FincaFightFreeTimes - msg.freeFightTimes;\r\n        this.setBookData();\r\n        RedMgr.refreshEvent(RedDotType.Free_Fight_Token);\r\n    }\r\n    setFincaFightTeamTab() {\r\n        this._fincaFightTeamTab = this.getTeamTab(PrestigeData.ins.level)\r\n    }\r\n\r\n    /** 根据冒险等级获取解锁 */\r\n    getTeamTab(prestigeLevel: number) {\r\n        const maxLevel = tab.getData().FincaFightTeam[tab.getData().FincaFightTeam.length - 1].Level;\r\n        return tab.getData().FincaFightTeamByLevel.getValue(Math.min(prestigeLevel, maxLevel))\r\n    }\r\n\r\n    // 获取当前解锁了几个\r\n    getFincaFightTeamTab() {\r\n        return this._fincaFightTeamTab;\r\n    }\r\n    // 获取当前位置上的状态\r\n    getState(index: number): FincaFightTeamState {\r\n        if (index > this._fincaFightTeamTab.UnlockHero) {\r\n            return FincaFightTeamState.LOCK;\r\n        } else {\r\n            if (this.heroIds[index - 1]) {\r\n                return FincaFightTeamState.HERO\r\n            }\r\n            return FincaFightTeamState.EMPTY\r\n        }\r\n    }\r\n    // 获取当前位置上秘籍的状态\r\n    getBookState(index: number): FincaFightTeamState {\r\n        if (index > this._fincaFightTeamTab.UnlockWeapon) {\r\n            return FincaFightTeamState.LOCK;\r\n        } else {\r\n            if (this.bookIds[index - 1]) {\r\n                return FincaFightTeamState.BOOK\r\n            }\r\n            return FincaFightTeamState.EMPTY\r\n        }\r\n    }\r\n    // 通过heroid判断状态\r\n    getHeroInTeam(heroId: number): number {\r\n        return this.heroIds.indexOf(heroId)\r\n    }\r\n    // 获取上阵英雄数量\r\n    getInTeamHerosCount() {\r\n        let count = 0;\r\n        for (let i = 0; i < this.heroIds.length; i++) {\r\n            if (this.heroIds[i]) {\r\n                count++;\r\n            }\r\n        }\r\n        return count;\r\n    }\r\n    // 获取当前的空位\r\n    getHeroEmptyIndex(): number {\r\n        const maxIndex = this._fincaFightTeamTab.UnlockHero;\r\n        for (let i = 1; i <= maxIndex; i++) {\r\n            if (!this.heroIds[i - 1]) {\r\n                return i;\r\n            }\r\n        }\r\n        return 0;\r\n    }\r\n    // 判断当前是否可以上阵或者替换英雄\r\n    checkReplaceHero(heroId: number): boolean {\r\n        for (let i = 0; i < this.heroIds.length; i++) {\r\n            if (i !== this.HeroToggleIndex - 1) {\r\n                const _id = this.heroIds[i];\r\n                if (_id) {\r\n                    const heroInfo = HeroData.ins.getById(_id);\r\n                    const replaceHeroInfo = HeroData.ins.getById(heroId);\r\n                    if (heroInfo.heroClassTable.HeroClass === replaceHeroInfo.heroClassTable.HeroClass) {\r\n                        return false\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    /* ------------------------------------------------------- */\r\n    // 通过heroid判断状态\r\n    getBookInTeam(bookId: number): number {\r\n        return this.bookIds.indexOf(bookId)\r\n    }\r\n    getBookEmptyIndex(): number {\r\n        const maxIndex = this._fincaFightTeamTab.UnlockWeapon;\r\n        for (let i = 1; i <= maxIndex; i++) {\r\n            if (!this.bookIds[i - 1]) {\r\n                return i;\r\n            }\r\n        }\r\n        return 0;\r\n    }\r\n    // 获取上阵英雄数量\r\n    getInTeamBooksCount() {\r\n        let count = 0;\r\n        for (let i = 0; i < this.bookIds.length; i++) {\r\n            if (this.bookIds[i]) {\r\n                count++;\r\n            }\r\n        }\r\n        return count;\r\n    }\r\n    // 获取奖励信息列表：1是今日奖励、2是结算奖励\r\n    getRewards(type: number, needSelf: Boolean): PvPRewardInfo {\r\n        const rewardInfo: PvPRewardInfo = {\r\n            DropId: [],\r\n            Rankings: [],\r\n            selfReward: []\r\n        };\r\n        if (type === 2) {\r\n            const tableData1 = tab.getData().RankRewardTableById.getValue(RANKING_TYPE.Fight);\r\n            rewardInfo.Rankings = tableData1.Ranking;\r\n            rewardInfo.DropId = tableData1.DropId\r\n        } else {\r\n            const tableData2 = this.getCycleRewardTab();\r\n            rewardInfo.Rankings = tableData2.CycleRanking;\r\n            rewardInfo.DropId = tableData2.CycleDropId\r\n        }\r\n        if (needSelf) {\r\n            for (let i = 0; i < rewardInfo.Rankings.length; i++) {\r\n                let str = rewardInfo.Rankings[i].split(\";\");\r\n                if (Number(str[0]) <= this.FincaRanking && Number(str[1]) >= this.FincaRanking) {\r\n                    rewardInfo.selfReward = GameUtil.getRewardsByDropId(rewardInfo.DropId[i]);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return rewardInfo;\r\n    }\r\n    getCycleRewardTab() {\r\n        for (let i = 0; i < tab.getData().RankCycleRewardTable.length; i++) {\r\n            const _tab = tab.getData().RankCycleRewardTable[i];\r\n            if (_tab.Id === RANKING_TYPE.Fight) {\r\n                return _tab;\r\n            }\r\n        }\r\n    }\r\n    // 根据位置返回日志等级\r\n    getUnLockLevel(index: number, isHero: boolean): number {\r\n        for (let i = 0; i < tab.getData().FincaFightTeam.length; i++) {\r\n            const fincaTab = tab.getData().FincaFightTeam[i];\r\n            if (isHero) {\r\n                if (fincaTab.UnlockHero === index) {\r\n                    return fincaTab.Level;\r\n                }\r\n            } else {\r\n                if (fincaTab.UnlockWeapon === index) {\r\n                    return fincaTab.Level;\r\n                }\r\n            }\r\n        }\r\n        return 0\r\n    }\r\n    // 判断当前是否可以提交\r\n    checkHeroIdsOk(): boolean {\r\n        if (this.heroIds[0]) {\r\n            const heroInfo = HeroData.ins.getById(this.heroIds[0]);\r\n            if (heroInfo.heroClassTable.HeroClass !== tab.HeroClass.HeroClass_Warrior) {\r\n                console.log(\"cocos 首位不能是非战士英雄\")\r\n                return false;\r\n            }\r\n            const newArr = [];\r\n            for (let i = 0; i < this.heroIds.length; i++) {\r\n                if (this.heroIds[i]) {\r\n                    const _heroInfo = HeroData.ins.getById(this.heroIds[i]);\r\n                    newArr.push({\r\n                        classType: _heroInfo.heroClassTable.HeroClass\r\n                    })\r\n                }\r\n            }\r\n            const hasRepeat = this.hasDuplicate(newArr, \"classType\");\r\n            return !hasRepeat;\r\n        } else {\r\n            return false\r\n        }\r\n    }\r\n    hasDuplicate(arr, field) {\r\n        var seen = {};  // 使用对象来记录已出现的属性值\r\n        for (var i = 0; i < arr.length; i++) {\r\n            var value = arr[i][field];\r\n            if (seen[value]) {  // 如果该值已存在，说明有重复\r\n                return true;\r\n            }\r\n            seen[value] = true;  // 如果没有出现过，将该值标记为已出现\r\n        }\r\n        return false;  // 没有重复\r\n    }\r\n    // 获取秘籍数据按照全部、刺客、射手、牧师、法师、战士\r\n    setBookData() {\r\n        this.bookList.clear();\r\n        this.boosDicTabs.clear();\r\n        let tabs = tab.getData().BookDictionary;\r\n        for (let key in tabs) {\r\n            let bookId = tabs[key].PhaseOneBook;\r\n            let heroClass = RareBookData.ins.getBookInfoByItemId(bookId).bookTable.Class;\r\n            this.boosDicTabs.set(heroClass, tabs[key]);\r\n        }\r\n        for (let i = tab.HeroClass.HeroClass_Assassin; i < tab.HeroClass.HeroClass_Max; i++) {\r\n            const arr = [];\r\n            const dict: tab.BookDictionary = this.boosDicTabs.get(i);\r\n            for (let k = 0; k < dict.PhaseTwoBook.length; k++) {\r\n                const twoBookId = dict.PhaseTwoBook[k];\r\n                const threeBookId = dict.PhaseThreeBook[k];\r\n                let bookInfo = RareBookData.ins.getBookInfoByItemId(threeBookId);\r\n                if (bookInfo.isLock) {\r\n                    let bookInfo = RareBookData.ins.getBookInfoByItemId(threeBookId);\r\n                    arr.push(bookInfo);\r\n                } else {\r\n                    let bookInfo = RareBookData.ins.getBookInfoByItemId(twoBookId);\r\n                    arr.push(bookInfo);\r\n                }\r\n            }\r\n            this.bookList.set(i, arr);\r\n            if (this.bookList.has(tab.HeroClass.HeroClass_Any)) {\r\n                const newArr = this.bookList.get(tab.HeroClass.HeroClass_Any).concat(arr)\r\n                this.bookList.set(tab.HeroClass.HeroClass_Any, newArr)\r\n            } else {\r\n                this.bookList.set(tab.HeroClass.HeroClass_Any, arr)\r\n            }\r\n        }\r\n        console.log(this.bookList);\r\n    }\r\n    getBookList() {\r\n        return this.bookList;\r\n    }\r\n    // 判断当前的bookid是否有可替换的 并保存\r\n    checkAllBooks() {\r\n        let canSave = false;\r\n        for (let i = 0; i < this.bookIds.length; i++) {\r\n            const bookId = this.bookIds[i];\r\n            if (!bookId) {\r\n                continue\r\n            }\r\n            const bookInfo = RareBookData.ins.getBookInfoByItemId(bookId)\r\n            let heroClass = bookInfo.bookTable.Class;\r\n            const bookArr = this.bookList.get(heroClass)\r\n            if (bookArr.indexOf(bookInfo) > -1) {\r\n                continue\r\n            } else {\r\n                // 当前秘籍已经不存在替换\r\n                const dict: tab.BookDictionary = this.boosDicTabs.get(heroClass);\r\n                const index = dict.PhaseTwoBook.indexOf(bookId);\r\n                this.bookIds[i] = dict.PhaseThreeBook[index];\r\n                canSave = true;\r\n            }\r\n        }\r\n        if (canSave) {\r\n            FincaFightControl.ins.reqSetFincaBattleBookIds(FincaFightData.ins.bookIds);\r\n        }\r\n    }\r\n\r\n\r\n    getChangeScoreStr(newScore: number) {\r\n        let score = newScore - this.fincaFightData.score\r\n        if (score > 0) {\r\n            return \"+\" + score\r\n        } else if (score == 0) {\r\n            return \"0\"\r\n        } else {\r\n            return score\r\n        }\r\n    }\r\n}\r\n\r\n\r\n"]}