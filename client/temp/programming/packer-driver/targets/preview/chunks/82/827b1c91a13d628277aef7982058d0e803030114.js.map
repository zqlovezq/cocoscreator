{"version":3,"sources":["file:///C:/chickenStarClient/client/assets/scripts/Common/script/RequestButton.ts"],"names":["WaitRequestBack","ptl","target","Promise","resolve","onMsg","buffer","unTarget","createRequestButton","button","isClickable","node","on","enabled","timeoutPromise","_","reject","setTimeout","Error","race","then","response","console","log","catch","error","message","_decorator","EventMgr","ccclass","property","RequestButton"],"mappings":";;;;;AAUO,WAASA,eAAT,CAAyBC,GAAzB,EAAoCC,MAApC,EAAmE;AACtE,WAAO,IAAIC,OAAJ,CAAqBC,OAAO,IAAI;AACnC;AAAA;AAAA,gCAASC,KAAT,CAAeJ,GAAf,EAAoB,CAACK,MAAD,EAAcL,GAAd,KAA4B;AAC5CG,QAAAA,OAAO,CAACE,MAAD,CAAP;AACA;AAAA;AAAA,kCAASC,QAAT,CAAkBL,MAAlB;AACH,OAHD,EAGGA,MAHH;AAIH,KALM,CAAP;AAMH,G,CACD;;;AACA,WAASM,mBAAT,CAA6BC,MAA7B,EAA2CR,GAA3C,EAAuD;AACnD,QAAIS,WAAW,GAAG,IAAlB,CADmD,CAC1B;AAEzB;;AACAD,IAAAA,MAAM,CAACE,IAAP,CAAYC,EAAZ,CAAe,OAAf,EAAuB,YAAY;AAC/B,UAAI,CAACF,WAAL,EAAkB,OADa,CACL;AAE1B;;AACAA,MAAAA,WAAW,GAAG,KAAd;AACAD,MAAAA,MAAM,CAACI,OAAP,GAAiB,KAAjB,CAL+B,CAO/B;;AACA,UAAMC,cAAc,GAAG,IAAIX,OAAJ,CAAY,CAACY,CAAD,EAAIC,MAAJ,KAAe;AAC9CC,QAAAA,UAAU,CAAC,MAAMD,MAAM,CAAC,IAAIE,KAAJ,CAAU,MAAV,CAAD,CAAb,EAAkC,IAAlC,CAAV;AACH,OAFsB,CAAvB,CAR+B,CAY/B;;AACAf,MAAAA,OAAO,CAACgB,IAAR,CAAa,CAACnB,eAAe,CAACC,GAAD,EAAKQ,MAAM,CAACE,IAAZ,CAAhB,EAAmCG,cAAnC,CAAb,EACKM,IADL,CACUC,QAAQ,IAAI;AACd;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBF,QAAtB;AACH,OAJL,EAKKG,KALL,CAKWC,KAAK,IAAI;AACZ;AACAH,QAAAA,OAAO,CAACG,KAAR,CAAcA,KAAK,CAACC,OAApB;AACH,OARL,EASKN,IATL,CASU,MAAM;AACR;AACAV,QAAAA,WAAW,GAAG,IAAd;AACAD,QAAAA,MAAM,CAACI,OAAP,GAAiB,IAAjB;AACH,OAbL;AAcH,KA3BD;AA4BH;;;;;;6BAzCeb,e;;;;;;;;;AAVP2B,MAAAA,U,OAAAA,U;;AACAC,MAAAA,Q,iBAAAA,Q;;;;;;;;;OAEH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBH,U;;+BAGjBI,a,WADZF,OAAO,CAAC,eAAD,C,gBAAR,MACaE,aADb,CAC0B,E","sourcesContent":["import { _decorator, Button, Component, Node } from 'cc';\r\nimport { EventMgr } from '../../logic/mgr/EventMgr';\r\nimport { proto } from 'client_protocol';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('RequestButton')\r\nexport class RequestButton{\r\n    \r\n}\r\n\r\nexport function WaitRequestBack(ptl:number,target:Node): Promise<boolean> {\r\n    return new Promise<boolean>(resolve => {\r\n        EventMgr.onMsg(ptl, (buffer: any, ptl: number)=>{\r\n            resolve(buffer);\r\n            EventMgr.unTarget(target);\r\n        }, target);\r\n    })\r\n}\r\n// 封装按钮点击方法\r\nfunction createRequestButton(button:Button,ptl:number) {\r\n    let isClickable = true;  // 控制按钮是否可以点击\r\n\r\n    // 定义按钮点击事件\r\n    button.node.on(\"click\",function () {\r\n        if (!isClickable) return; // 如果不可点击，直接返回\r\n\r\n        // 禁用按钮，防止多次点击\r\n        isClickable = false;\r\n        button.enabled = false;\r\n\r\n        // 创建超时Promise，2秒后自动触发\r\n        const timeoutPromise = new Promise((_, reject) => {\r\n            setTimeout(() => reject(new Error(\"请求超时\")), 2000);\r\n        });\r\n\r\n        // 使用 Promise.race 来处理超时情况\r\n        Promise.race([WaitRequestBack(ptl,button.node), timeoutPromise])\r\n            .then(response => {\r\n                // 处理服务器返回的响应\r\n                console.log(\"服务器响应:\", response);\r\n            })\r\n            .catch(error => {\r\n                // 处理请求失败或超时的情况\r\n                console.error(error.message);\r\n            })\r\n            .then(() => {\r\n                // 在收到响应或超时后，恢复按钮的点击状态\r\n                isClickable = true;\r\n                button.enabled = true;\r\n            });\r\n    });\r\n}\r\n\r\n"]}