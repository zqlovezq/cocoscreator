{"version":3,"sources":["file:///C:/chickenStarClient/client/assets/scripts/logic/model/hero/herobag/HeroDataControl.ts"],"names":["_decorator","tab","HeroData","HeroTeamControl","RoleData","RedMgr","RedDotType","ccclass","property","HeroDataControl","heroId","bookId","_idx","_book_idx","_heroBagList","Map","_heroBookList","_heroAptitudeList","_heroPaintingList","paintingActive","paintingActiveMaxStar","_starUpMap","_ResolveHerosMap","_receivedHeroAlbumIds","_receivedRecommendTeamIds","_heroClassType","HeroClass","HeroClass_Max","_bookClassType","_newGetSRHero","_replaceHeroMap","ins","_instance","setAwardData","heroAlbumMap","receivedRecommendTeamIds","clear","Object","keys","forEach","key","id","isReceived","set","k","length","getBookActiveHeroCount","count","value","refreshHeroAlbumIds","heroTab","getData","HeroTableById","getValue","Aptitude","HeroAptitude","HeroAptitude_SR","getNewSRHero","get","deleteNewSRHero","delete","getBookReceivedIds","getRecommendTeamIds","initData","initBookHeros","initPaintingHeros","paintingArr","i","HeroTable","HeroAptitude_SSR","push","Id","sort","hero1","hero2","itemTab1","ItemTableById","itemTab2","Sort","bookHeroTab","heroClass","Class","heroListClassArr","updatePaintings","paintingData","paintings","j","painting","star","unlockStar","has","heroItemId","getMaxPaintingStar","itemId","initBagHeros","sortHeros","sortHeroList","getHeros","heroListAllArr","Number","refreshBagData","size","bookArr","_bookId","heroAptitude","heroListAptitudeArr","getHeroListByAptitude","getHeroListByVocation","vocationType","isHeroBagChange","getBookHeroListByVocation","isBookBagChange","getPaintingListByVocation","getMaxStarByItemId","_heroTab","list","_list","getById","heroInfo","heroData","heroListData","getHeroIndexById","arr","hero_id","refreshTeamBagData","_heroID","heroTable","allList","classList","teamInfo","getHeroByClass","refreshTeam","classIndex","classTemp","allTeamIndex","alIndex","index","allTemp","refreshBookData","bookListData","NextHero","isTeam","classType","teamSlots","getTeam","getTeamIndexById","LastHero","heros","teamHeros","noTeamHeros","temaData","teamHeroInfo","hero","heroInTeam","sortFunc","concat","hero1Info","hero2Info","itemTable","getOneClickList","map","HeroAptitude_R","materialArr","sameIdHeros","getHerosByType","HeroStarUpType","HeroStarUpType_SameNameHero","needSmaeIdCount","needCount","sameClassHeros","HeroStarUpType_SameClassHero","needSmaeClassCount","getAllResolveHeros","HeroAptitude_N","getItemQualityTableByStar","ItemQualityTable","dataTab","HeroStar","getHeroBagFull","add","curNum","heroBagExpansion","GetKeyValue_ConfigTable","HeroBagExpansion","maxCount","HeroBagNum","capacityLevel","getPrivilegeValue","VipBonus","VipBonus_HeroBagAddCount","setCanReplaceHeros","v","heroClassTable","getMaxAptitudeHero","refreshEvent","HeroReplace","getCanReplaceHeros","aptitude","HeroAptitude_None"],"mappings":"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","sourcesContent":["/*\r\n * @Date: 2024-05-06 13:59:46\r\n * @LastEditors: wzq\r\n * @LastEditTime: 2024-11-14 11:38:25\r\n */\r\n\r\nimport { _decorator, log } from 'cc';\r\nimport { proto } from 'client_protocol';\r\nimport { tab } from '../../../../Table/table_gen';\r\nimport { HeroData } from '../HeroData';\r\nimport { HeroTeamControl } from '../HeroTeamControl';\r\nimport { HeroInfo } from '../HeroInfo';\r\nimport { RoleData } from '../../role/RoleData';\r\nimport { Long } from 'protobufjs';\r\nimport { RedMgr } from '../../../mgr/RedMgr';\r\nimport { RedDotType } from '../../../red/RedDotType';\r\n\r\n\r\n\r\nconst { ccclass, property } = _decorator;\r\n@ccclass('HeroDataControl')\r\nexport class HeroDataControl {\r\n    private static _instance: HeroDataControl;\r\n\r\n    public heroId: number = 0;//背包里当前的英雄id\r\n    public bookId: number = 0;//图签切换到的当前英雄id\r\n    private _idx: number = 0;//当前bag id的index\r\n    private _book_idx: number = 0;//当前book id的index\r\n    private _heroBagList: Map<tab.HeroClass, number[]> = new Map();//背包\r\n    private _heroBookList: Map<tab.HeroClass, number[]> = new Map();//图签\r\n    private _heroAptitudeList: Map<tab.HeroAptitude, number[]> = new Map;//资质\r\n    private _heroPaintingList: Map<tab.HeroClass, number[]> = new Map();//绘卷\r\n    public paintingActive: Map<number, number> = new Map();//已经激活绘卷\r\n    public paintingActiveMaxStar: Map<number, number> = new Map();//已经激活绘卷\r\n\r\n    private _starUpMap: Map<number, HeroInfo[]> = new Map();//一键升星的map\r\n    private _ResolveHerosMap: Map<number, HeroInfo> = new Map();//一键遣散的map\r\n    private _receivedHeroAlbumIds: Map<number, proto.Msg_GetHeroBagRsp.IHeroAlbum> = new Map();//已经领取图签奖励的英雄ids\r\n    private _receivedRecommendTeamIds: Map<number, boolean> = new Map();//已经领取推荐阵容的队伍ids\r\n\r\n    private _heroClassType: tab.HeroClass = tab.HeroClass.HeroClass_Max;//当前背包的职业类型\r\n    private _bookClassType: tab.HeroClass = tab.HeroClass.HeroClass_Max;//当前书签的职业类型\r\n    private _newGetSRHero: Map<number, boolean> = new Map();\r\n    private _replaceHeroMap: Map<number, boolean> = new Map();\r\n    public static get ins() {\r\n        if (null == this._instance) {\r\n            this._instance = new HeroDataControl();\r\n        }\r\n        return this._instance;\r\n    }\r\n    setAwardData(heroAlbumMap, receivedRecommendTeamIds: number[]) {\r\n        this._receivedHeroAlbumIds.clear();\r\n        this._receivedRecommendTeamIds.clear();\r\n        Object.keys(heroAlbumMap).forEach(key => {\r\n            const id = heroAlbumMap[key].id;\r\n            const isReceived = heroAlbumMap[key].isReceived;\r\n            this._receivedHeroAlbumIds.set(id, {\r\n                id: id, isReceived: isReceived\r\n            }\r\n            )\r\n        })\r\n        for (let k = 0; k < receivedRecommendTeamIds.length; k++) {\r\n            this._receivedRecommendTeamIds.set(receivedRecommendTeamIds[k], true)\r\n        }\r\n    }\r\n    // 获取图签已经获得的所有ids\r\n    getBookActiveHeroCount(): number {\r\n        let count = 0\r\n        this._receivedHeroAlbumIds.forEach((value, key) => {\r\n            if (value.isReceived) {\r\n                count++;\r\n            }\r\n        })\r\n        return count;\r\n    }\r\n    // 刷新图签数据\r\n    refreshHeroAlbumIds(heroId: number) {\r\n        this._receivedHeroAlbumIds.set(heroId, {\r\n            id: heroId, isReceived: false\r\n        }\r\n        )\r\n        const heroTab = tab.getData().HeroTableById.getValue(heroId);\r\n        if (heroTab && heroTab.Aptitude === tab.HeroAptitude.HeroAptitude_SR) {\r\n            this._newGetSRHero.set(heroId, true)\r\n        }\r\n    }\r\n    // 获取新获得的sr英雄\r\n    getNewSRHero(heroId: number) {\r\n        return this._newGetSRHero.get(heroId) ? true : false;\r\n    }\r\n    // 移除获得的SR英雄\r\n    deleteNewSRHero(heroId: number) {\r\n        return this._newGetSRHero.delete(heroId)\r\n    }\r\n    getBookReceivedIds(): Map<number, proto.Msg_GetHeroBagRsp.IHeroAlbum> {\r\n        return this._receivedHeroAlbumIds;\r\n    }\r\n    getRecommendTeamIds(): Map<number, boolean> {\r\n        return this._receivedRecommendTeamIds;\r\n    }\r\n    // 最好只初始化一次\r\n    initData(heroAlbumMap, receivedRecommendTeamIds: number[]) {\r\n        // this.initBagHeros();//背包\r\n        this.initBookHeros();//书签\r\n\r\n        this.initPaintingHeros();//绘卷\r\n        this.setAwardData(heroAlbumMap, receivedRecommendTeamIds)\r\n    }\r\n    /* 初始化绘卷的数据并分类 */\r\n    initPaintingHeros() {\r\n        this._heroPaintingList.clear();\r\n        this.paintingActive.clear();\r\n        const paintingArr = [];\r\n        for (let i = 0; i < tab.getData().HeroTable.length; i++) {\r\n            const heroTab = tab.getData().HeroTable[i];\r\n            if (heroTab.Aptitude == tab.HeroAptitude.HeroAptitude_SR || heroTab.Aptitude == tab.HeroAptitude.HeroAptitude_SSR) {\r\n                paintingArr.push(heroTab.Id);\r\n            }\r\n        }\r\n        paintingArr.sort((hero1, hero2) => {\r\n            let itemTab1 = tab.getData().ItemTableById.getValue(hero1);\r\n            let itemTab2 = tab.getData().ItemTableById.getValue(hero2);\r\n            return itemTab2.Sort - itemTab1.Sort;\r\n        })\r\n        for (let k = 0; k < paintingArr.length; k++) {\r\n            const bookHeroTab: tab.HeroTable = tab.getData().HeroTableById.getValue(paintingArr[k]);\r\n            const heroClass = bookHeroTab.Class;\r\n            if (!this._heroPaintingList.get(heroClass)) {\r\n                this._heroPaintingList.set(heroClass, [paintingArr[k]]);\r\n            } else {\r\n                const heroListClassArr = this._heroPaintingList.get(heroClass);\r\n                heroListClassArr.push(paintingArr[k])\r\n            }\r\n        }\r\n\r\n        /* 已经激活的绘卷 */\r\n        this.updatePaintings();\r\n    }\r\n    updatePaintings() {\r\n        let paintingData: proto.IScrollPainting[] = RoleData.ins.paintings;\r\n        for (let j = 0; j < paintingData.length; j++) {\r\n            const painting = paintingData[j];\r\n            if (painting.star) {\r\n                if (painting.unlockStar < painting.star) {\r\n                    painting.unlockStar = painting.star\r\n                }\r\n            }\r\n            if (!this.paintingActive.has(painting.heroItemId)) {\r\n                this.paintingActive.set(painting.heroItemId, painting.star);\r\n            }\r\n            this.paintingActiveMaxStar.set(painting.heroItemId, painting.unlockStar)\r\n        }\r\n    }\r\n    getMaxPaintingStar(itemId: number) {\r\n        return this.paintingActiveMaxStar.get(itemId);\r\n    }\r\n    /* 初始化背包数据并分类 */\r\n    initBagHeros() {\r\n        this._idx = 0;\r\n        this._heroBagList.clear();\r\n        const sortHeros = this.sortHeroList(HeroData.ins.getHeros());\r\n        for (let i = 0; i < sortHeros.length; i++) {\r\n            const heroTab = tab.getData().HeroTableById.getValue(sortHeros[i].itemId);\r\n            const heroClass = heroTab.Class;\r\n            if (!this._heroBagList.get(heroClass)) {\r\n                this._heroBagList.set(heroClass, [sortHeros[i].id]);\r\n            } else {\r\n                const heroListClassArr = this._heroBagList.get(heroClass);\r\n                heroListClassArr.push(sortHeros[i].id)\r\n            }\r\n            if (!this._heroBagList.get(tab.HeroClass.HeroClass_Max)) {\r\n                this._heroBagList.set(tab.HeroClass.HeroClass_Max, [sortHeros[i].id]);\r\n            } else {\r\n                const heroListAllArr = this._heroBagList.get(tab.HeroClass.HeroClass_Max);\r\n                heroListAllArr.push(sortHeros[i].id)\r\n            }\r\n        }\r\n        if (!this.heroId) {\r\n            this.heroId = Number(sortHeros[0].id);\r\n        } else {\r\n            this.refreshBagData(this.heroId);\r\n        }\r\n    }\r\n    /* 初始化图签数据并分类 */\r\n    initBookHeros() {\r\n        if (this._heroBookList.size === 0) {\r\n            this._book_idx = 0;\r\n            const bookArr = [];\r\n            for (let j = 0; j < tab.getData().HeroTable.length; j++) {\r\n                let _bookId = tab.getData().HeroTable[j].Id\r\n                bookArr.push(_bookId);\r\n            }\r\n            bookArr.sort((hero1, hero2) => {\r\n                let itemTab1 = tab.getData().ItemTableById.getValue(hero1);\r\n                let itemTab2 = tab.getData().ItemTableById.getValue(hero2);\r\n                return itemTab2.Sort - itemTab1.Sort;\r\n            })\r\n            for (let k = 0; k < bookArr.length; k++) {\r\n                // 根据职业组合\r\n                const bookHeroTab: tab.HeroTable = tab.getData().HeroTableById.getValue(bookArr[k]);\r\n                const heroClass = bookHeroTab.Class;\r\n                if (!this._heroBookList.has(heroClass)) {\r\n                    this._heroBookList.set(heroClass, [bookArr[k]]);\r\n                } else {\r\n                    const heroListClassArr = this._heroBookList.get(heroClass);\r\n                    heroListClassArr.push(bookArr[k])\r\n                }\r\n\r\n                if (!this._heroBookList.has(tab.HeroClass.HeroClass_Max)) {\r\n                    this._heroBookList.set(tab.HeroClass.HeroClass_Max, [bookArr[k]]);\r\n                } else {\r\n                    const heroListAllArr = this._heroBookList.get(tab.HeroClass.HeroClass_Max);\r\n                    heroListAllArr.push(bookArr[k])\r\n                }\r\n                // 根据资质\r\n                const heroAptitude = bookHeroTab.Aptitude;\r\n                if (!this._heroAptitudeList.has(heroAptitude)) {\r\n                    this._heroAptitudeList.set(heroAptitude, [bookArr[k]]);\r\n                } else {\r\n                    const heroListAptitudeArr = this._heroAptitudeList.get(heroAptitude);\r\n                    heroListAptitudeArr.push(bookArr[k])\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /* 根据资质返回list */\r\n    getHeroListByAptitude(Aptitude: tab.HeroAptitude) {\r\n        return this._heroAptitudeList.get(Aptitude)\r\n    }\r\n    /* 根据职业返回baglist */\r\n    getHeroListByVocation(vocationType: tab.HeroClass, isHeroBagChange: boolean) {\r\n        if (isHeroBagChange) {\r\n            this._heroClassType = vocationType;\r\n        }\r\n        return this._heroBagList.get(vocationType)\r\n    }\r\n    /* 根据职业返回booklist */\r\n    getBookHeroListByVocation(vocationType: tab.HeroClass, isBookBagChange: boolean) {\r\n        if (isBookBagChange) {\r\n            this._bookClassType = vocationType;\r\n        }\r\n        return this._heroBookList.get(vocationType);\r\n    }\r\n    /* 根据职业返回paintinglist */\r\n    getPaintingListByVocation(vocationType: tab.HeroClass) {\r\n        return this._heroPaintingList.get(vocationType);\r\n    }\r\n    // 获取当前职业中星级最高的英雄\r\n    getMaxStarByItemId(itemId: number): HeroInfo {\r\n        let _heroTab = tab.getData().HeroTableById.getValue(itemId);\r\n        let list = this.getHeroListByVocation(_heroTab.Class, false);\r\n        let _list = [];\r\n        for (let i = 0; i < list.length; i++) {\r\n            if (HeroData.ins.getById(list[i]).itemId === itemId) {\r\n                _list.push(HeroData.ins.getById(list[i]));\r\n            }\r\n        }\r\n        let star = 0;\r\n        let heroInfo = null;\r\n        for (let i = 0; i < _list.length; i++) {\r\n            let heroData = _list[i];\r\n            if (heroData.star > star) {\r\n                star = heroData.star;\r\n                heroInfo = heroData;\r\n            }\r\n        }\r\n        return heroInfo;\r\n    }\r\n    refreshBagData(id: number) {\r\n        this.heroId = id;\r\n        const heroListData = this._heroBagList.get(this._heroClassType);\r\n        if (id === 0) {\r\n            this.heroId = heroListData[0];\r\n            this._idx = 0;\r\n            this._heroClassType = tab.HeroClass.HeroClass_Max;\r\n            return;\r\n        }\r\n        for (let i = 0; i < heroListData.length; i++) {\r\n            const heroId = Number(heroListData[i]);\r\n            if (Number(id) === heroId) {\r\n                this._idx = i;\r\n            }\r\n        }\r\n    }\r\n    getHeroIndexById(arr, heroId: number | Long): number {\r\n        const hero_id = Number(heroId);\r\n        for (let i = 0; i < arr.length; i++) {\r\n            let id = arr[i];\r\n            if (Number(id) === hero_id) {\r\n                return i;\r\n            }\r\n        }\r\n        return -1\r\n    }\r\n    /* 上陣英雄互换 */\r\n    refreshTeamBagData(heroId: number | Long) {\r\n        const _heroID = Number(heroId);\r\n        const heroInfo = HeroData.ins.getById(heroId);\r\n        const heroClass = heroInfo.heroTable.Class;\r\n        const allList = this._heroBagList.get(tab.HeroClass.HeroClass_Max);\r\n        const classList = this._heroBagList.get(heroClass);\r\n        let teamInfo = HeroTeamControl.ins.getHeroByClass(heroClass);\r\n        if (!teamInfo) {\r\n            HeroTeamControl.ins.refreshTeam(_heroID);\r\n            teamInfo = HeroTeamControl.ins.getHeroByClass(heroClass);\r\n        }\r\n        /* 转换classList */\r\n        let classIndex = this.getHeroIndexById(classList, heroId);\r\n        let classTemp = classList[0]\r\n        classList[0] = _heroID;\r\n        if (teamInfo.id) {\r\n            classList[classIndex] = classTemp;\r\n        }\r\n        /* 转换AllList */\r\n        let allTeamIndex = this.getHeroIndexById(allList, teamInfo.id);\r\n        let alIndex = this.getHeroIndexById(allList, heroId);\r\n        if (allTeamIndex < 0) {\r\n            let index = heroClass - 1;\r\n            allList[index] = _heroID;\r\n        } else {\r\n            let allTemp = allList[allTeamIndex]\r\n            allList[allTeamIndex] = _heroID;\r\n            allList[alIndex] = allTemp;\r\n        }\r\n    }\r\n    refreshBookData(id: number) {\r\n        this.bookId = id;\r\n        const bookListData = this._heroBookList.get(this._bookClassType);\r\n        for (let i = 0; i < bookListData.length; i++) {\r\n            let bookId = bookListData[i]\r\n            if (bookId == id) {\r\n                this._book_idx = i;\r\n            }\r\n        }\r\n    }\r\n    /* 展示下一个英雄 */\r\n    public NextHero(isTeam: boolean) {\r\n        if (this.bookId) {\r\n            this._book_idx++;\r\n            let classType = this._bookClassType;\r\n            const bookListData = this._heroBookList.get(classType);\r\n            if (this._book_idx > bookListData.length - 1) {\r\n                this._book_idx = 0;\r\n            }\r\n            this.bookId = bookListData[this._book_idx];\r\n        } else {\r\n            if (isTeam) {\r\n                let teamSlots = HeroTeamControl.ins.getTeam();\r\n                let index = HeroTeamControl.ins.getTeamIndexById(this.heroId);\r\n                if (index >= 0) {\r\n                    index++;\r\n                    if (index > teamSlots.length - 1) {\r\n                        index = 0;\r\n                    }\r\n                    this.heroId = Number(teamSlots[index].heroId);\r\n                } else {\r\n                    this.heroId = Number(teamSlots[0].heroId);\r\n                }\r\n            } else {\r\n                let classType = this._heroClassType;\r\n                const heroListData = this._heroBagList.get(classType);\r\n                this._idx++;\r\n                if (this._idx > heroListData.length - 1) {\r\n                    this._idx = 0;\r\n                }\r\n                this.heroId = heroListData[this._idx];\r\n            }\r\n        }\r\n    }\r\n    public LastHero(isTeam: boolean) {\r\n        if (this.bookId) {\r\n            let classType = this._bookClassType;\r\n            this._book_idx--\r\n            const bookListData = this._heroBookList.get(classType);\r\n            if (this._book_idx < 0) {\r\n                this._book_idx = bookListData.length - 1;\r\n            }\r\n            this.bookId = bookListData[this._book_idx];\r\n        } else {\r\n            if (isTeam) {\r\n                let teamSlots = HeroTeamControl.ins.getTeam();\r\n                let index = HeroTeamControl.ins.getTeamIndexById(this.heroId);\r\n                if (index >= 0) {\r\n                    index--;\r\n                    if (index < 0) {\r\n                        index = teamSlots.length - 1;\r\n                    }\r\n                    this.heroId = Number(teamSlots[index].heroId);\r\n                } else {\r\n                    this.heroId = Number(teamSlots[0].heroId);\r\n                }\r\n            } else {\r\n                let classType = this._heroClassType;\r\n                const heroListData = this._heroBagList.get(classType);\r\n                this._idx--;\r\n                if (this._idx < 0) {\r\n                    this._idx = heroListData.length - 1\r\n                }\r\n                this.heroId = heroListData[this._idx];\r\n            }\r\n        }\r\n    }\r\n    /* 英雄背包排序 */\r\n    sortHeroList(heros: HeroInfo[]) {\r\n        // 先判断是否在team里面\r\n        let teamHeros = [];\r\n        let noTeamHeros = [];\r\n        let temaData = HeroTeamControl.ins.getTeam();\r\n        for (let i = 0; i < temaData.length; i++) {\r\n            if (temaData[i].heroId) {\r\n                let teamHeroInfo = HeroData.ins.getById(temaData[i].heroId)\r\n                teamHeros.push(teamHeroInfo);\r\n            }\r\n        }\r\n        for (let i = 0; i < heros.length; i++) {\r\n            let hero: HeroInfo = heros[i];\r\n            if (hero === null) {\r\n                continue;\r\n            }\r\n            if (!HeroTeamControl.ins.heroInTeam(hero.id)) {\r\n                noTeamHeros.push(hero)\r\n            }\r\n        }\r\n        noTeamHeros.sort(this.sortFunc);\r\n        return teamHeros.concat(noTeamHeros);\r\n    }\r\n    /* 根据战斗力排序方法 */\r\n    sortFunc(hero1: proto.Hero, hero2: proto.Hero) {\r\n        let hero1Info = HeroData.ins.getById(hero1.id);\r\n        let hero2Info = HeroData.ins.getById(hero2.id);\r\n        let itemTab1 = hero1Info.itemTable;\r\n        let itemTab2 = hero2Info.itemTable;\r\n        // 星级\r\n        if (hero1Info.star !== hero2Info.star) {\r\n            return hero2Info.star - hero1Info.star;\r\n        }\r\n        // 品质\r\n        if (hero1Info.heroTable.Aptitude !== hero2Info.heroTable.Aptitude) {\r\n            return hero2Info.heroTable.Aptitude - hero1Info.heroTable.Aptitude;\r\n        }\r\n        // 职业\r\n        if (hero1Info.heroTable.Class !== hero2Info.heroTable.Class) {\r\n            return hero1Info.heroTable.Class - hero2Info.heroTable.Class\r\n        }\r\n        if (itemTab1.Sort !== itemTab2.Sort) {\r\n            return itemTab2.Sort - itemTab1.Sort;\r\n        }\r\n\r\n    }\r\n    /* 返回一键升星的列表 */\r\n    getOneClickList(): Map<number, HeroInfo[]> {\r\n        this._starUpMap.clear();\r\n        let allList = HeroData.ins.getHeros();\r\n        /* 可以升星的重组一个数组 条件 只能是优的英雄 */\r\n        let map: Map<number, any> = new Map();\r\n        for (let i = 0; i < allList.length; i++) {\r\n            let heroInfo = allList[i];\r\n            if (map.get(Number(heroInfo.id))) {\r\n                continue;\r\n            }\r\n            if (heroInfo.heroTable.Aptitude === tab.HeroAptitude.HeroAptitude_R) {\r\n                const materialArr: HeroInfo[] = [];\r\n                const sameIdHeros = heroInfo.getHerosByType(tab.HeroStarUpType.HeroStarUpType_SameNameHero, 0, map);\r\n                let needSmaeIdCount = sameIdHeros.needCount;\r\n                map.set(Number(heroInfo.id), true);\r\n                sameIdHeros.map.forEach((value, key) => {\r\n                    if (needSmaeIdCount > 0) {\r\n                        map.set(key, true);\r\n                        materialArr.push(value);\r\n                        needSmaeIdCount--;\r\n                    }\r\n                })\r\n                const sameClassHeros = heroInfo.getHerosByType(tab.HeroStarUpType.HeroStarUpType_SameClassHero, 0, map);\r\n                let needSmaeClassCount = sameClassHeros.needCount;\r\n                sameClassHeros.map.forEach((value, key) => {\r\n                    if (needSmaeClassCount > 0) {\r\n                        map.set(key, true);\r\n                        materialArr.push(value);\r\n                        needSmaeClassCount--;\r\n                    }\r\n                })\r\n                if (sameIdHeros.map.size >= sameIdHeros.needCount && sameClassHeros.map.size >= sameClassHeros.needCount) {\r\n                    if (materialArr.length > 0) {\r\n                        this._starUpMap.set(Number(heroInfo.id), materialArr);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return this._starUpMap;\r\n    }\r\n    /* 返回所有可以遣散的英雄 */\r\n    getAllResolveHeros(): Map<number, HeroInfo> {\r\n        this._ResolveHerosMap.clear();\r\n        let allList = HeroData.ins.getHeros();\r\n        for (let i = 0; i < allList.length; i++) {\r\n            let heroInfo = allList[i];\r\n            if (heroInfo.heroTable.Aptitude === tab.HeroAptitude.HeroAptitude_N && !HeroTeamControl.ins.heroInTeam(heroInfo.id)) {\r\n                this._ResolveHerosMap.set(Number(heroInfo.id), heroInfo);\r\n            }\r\n        }\r\n        return this._ResolveHerosMap;\r\n    }\r\n    /* 通过星级返回其品质 */\r\n    getItemQualityTableByStar(star: number) {\r\n        for (let i = 0; i < tab.getData().ItemQualityTable.length; i++) {\r\n            const dataTab = tab.getData().ItemQualityTable[i];\r\n            for (let j = 0; j < dataTab.HeroStar.length; j++) {\r\n                if (dataTab.HeroStar[j] === star) {\r\n                    return dataTab;\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    /* 英雄背包是否已满 */\r\n    getHeroBagFull(add: number) {\r\n        const curNum = HeroData.ins.getHeros().length;\r\n        /* 最大容量 */\r\n        let heroBagExpansion = tab.getData().GetKeyValue_ConfigTable().HeroBagExpansion;//100钻石升10格子\r\n        const maxCount = tab.getData().GetKeyValue_ConfigTable().HeroBagNum + heroBagExpansion[2] * RoleData.ins.capacityLevel + RoleData.ins.getPrivilegeValue(tab.VipBonus.VipBonus_HeroBagAddCount);\r\n        return curNum + add > maxCount\r\n    }\r\n    /* 获取当前队伍中可以有替换的英雄 */\r\n    setCanReplaceHeros() {\r\n        this._replaceHeroMap.clear();\r\n        let teamSlots = HeroTeamControl.ins.getTeam();\r\n        for (let i = 0; i < teamSlots.length; i++) {\r\n            let v = teamSlots[i];\r\n            let heroInfo = HeroData.ins.getById(v.heroId);\r\n            if (heroInfo && heroInfo.heroTable.Aptitude < 3) {\r\n                const list = this.getHeroListByVocation(heroInfo.heroClassTable.HeroClass, false);\r\n                if (list.length > 1) {\r\n                    const id = this.getMaxAptitudeHero(list);\r\n                    if(id){\r\n                        this._replaceHeroMap.set(id, true);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        RedMgr.refreshEvent(RedDotType.HeroReplace);\r\n    }\r\n    getCanReplaceHeros() {\r\n        return this._replaceHeroMap;\r\n    }\r\n    // 获取列表中资质最高的英雄\r\n    getMaxAptitudeHero(list:number[]){\r\n        let id = -1;\r\n        let aptitude = tab.HeroAptitude.HeroAptitude_None;\r\n        for(let i=1;i<list.length;i++){\r\n            const heroInfo = HeroData.ins.getById(list[i]);\r\n            if(heroInfo.heroTable.Aptitude>aptitude){\r\n                id = list[i];\r\n                aptitude = heroInfo.heroTable.Aptitude;\r\n            }\r\n        }\r\n        if(aptitude>tab.HeroAptitude.HeroAptitude_R){\r\n            return id;\r\n        }\r\n        return 0;\r\n    }\r\n}\r\n\r\n\r\n"]}