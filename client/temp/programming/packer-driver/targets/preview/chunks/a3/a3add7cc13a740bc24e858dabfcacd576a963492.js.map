{"version":3,"sources":["file:///C:/chickenStarClient/client/assets/scripts/logic/fight/base/obj/role/monster/Monster.ts"],"names":["PhysicsSystem","Vec3","_decorator","AbsRole","AbsObjType","AbsStateType","MonsterState2Move","MonsterHunt","MonsterState1Idle","MonsterState3Attack","MonsterState4Dead","MonsterState5Born","MonsterState6Revive","CollisionGroup","MonsterState7SkillCd","MonsterState9BackJump","RoleState10Vertigo","FixedUtil","ccclass","property","tempPos","Monster","objType","enemy","info","aiHunt","commonBeatBack","initMachine","stateMachine","addState","setAbs","avatar","setFlashWhite","setObjInfo","_info","setBounds","configTab","Bounds","setStateAllAnimdId","conf","setStateAnimId","roleIdle","IdleAnimationId","roleMove","WalkAnimationId","roleDead","DeadAnimationId","RoleBorn","BornAnimationId","RoleRevive","RoleVertigo","init","speed","group","PhysicsGroup","monster","initBoby","setTrigger","updateFrame","dt","isReviceBeatBack","updateReviceBeatBack","setReviceBeatBack","bo","beatBackVelocity","x","ReviveDefeatDistance","y","z","setCommonBeatBack","beatBackUpdate","isBeatBack","reviceBeatTime","deltaTimeMovePostion","getPosition","setPosition"],"mappings":"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","sourcesContent":["import { Color, Input, Layers, Node, PhysicsSystem, Prefab, Quat, Vec3, _decorator, sp, v2, v3 } from 'cc';\nimport { AbsRole } from '../AbsRole';\nimport { AbsObj, AbsObjType } from '../../AbsObj';\nimport { AbsStateType } from '../../state/AbsState';\nimport { PlayerControl } from '../role/PlayerControl';\nimport { MonsterState2Move } from './state/MonsterState2Move';\nimport { MonsterHunt } from '../../../ai/MonsterHunt';\nimport { MonsterState1Idle } from './state/MonsterState1Idle';\nimport { MonsterState3Attack } from './state/MonsterState3Attack';\nimport { MonsterState4Dead } from './state/MonsterState4Dead';\nimport { MonsterState5Born } from './state/MonsterState5Born';\nimport { MonsterState6Revive } from './state/MonsterState6Revive';\nimport { MonsterInfo } from './MonsterInfo';\nimport { CollisionGroup } from '../../../../define/FightDefine';\nimport { MonsterState7SkillCd } from './state/MonsterState7SkillCd';\nimport { MonsterState9BackJump } from './state/MonsterState9BackJump';\nimport { RoleState10Vertigo } from '../role/state/RoleState10Vertigo';\nimport { FixedUtil } from '../../../../util/FixedUtil';\nimport { tab } from '../../../../../../Table/table_gen';\n\nconst { ccclass, property } = _decorator;\n\nconst tempPos = new Vec3();\n\n@ccclass('Monster')\nexport class Monster extends AbsRole {\n    objType: AbsObjType = AbsObjType.enemy;\n    info: MonsterInfo\n    aiHunt: MonsterHunt\n    commonBeatBack: Vec3 = new Vec3()\n    initMachine() {\n        super.initMachine()\n\n        this.stateMachine.addState(new MonsterState1Idle())\n        this.stateMachine.addState(new MonsterState2Move())\n        this.stateMachine.addState(new MonsterState3Attack())\n        this.stateMachine.addState(new MonsterState4Dead())\n        this.stateMachine.addState(new MonsterState5Born())\n        this.stateMachine.addState(new MonsterState6Revive())\n        this.stateMachine.addState(new MonsterState7SkillCd())\n        this.stateMachine.addState(new MonsterState9BackJump())\n        this.stateMachine.addState(new RoleState10Vertigo())\n\n\n        this.aiHunt = new MonsterHunt()\n        this.aiHunt.setAbs(this)\n        this.avatar.setFlashWhite(true)\n    }\n\n    setObjInfo(_info: MonsterInfo) {\n        super.setObjInfo(_info)\n\n        this.setBounds(this.info.configTab.Bounds)\n\n        this.setStateAllAnimdId(this.info.configTab)\n    }\n\n    setStateAllAnimdId(conf: tab.MonsterTable) {\n        this.setStateAnimId(AbsStateType.roleIdle, conf.IdleAnimationId)\n        this.setStateAnimId(AbsStateType.roleMove, conf.WalkAnimationId)\n        this.setStateAnimId(AbsStateType.roleDead, conf.DeadAnimationId)\n        this.setStateAnimId(AbsStateType.RoleBorn, conf.BornAnimationId)\n        this.setStateAnimId(AbsStateType.RoleRevive, conf.BornAnimationId)\n        this.setStateAnimId(AbsStateType.RoleVertigo, conf.IdleAnimationId)\n    }\n\n    init() {\n        this.speed = this.info.speed\n        this.group = PhysicsSystem.PhysicsGroup[CollisionGroup.monster]\n\n        this.initBoby()\n        this.setTrigger(true)\n\n    }\n    updateFrame(dt: number): void {\n        super.updateFrame(dt)\n        if (this.isReviceBeatBack) {\n            this.updateReviceBeatBack(dt)\n        }\n    }\n    \n    setReviceBeatBack(bo: boolean) {\n        if (bo) {\n            this.beatBackVelocity.x = this.info.configTab.ReviveDefeatDistance\n            this.beatBackVelocity.y = 0\n            this.beatBackVelocity.z = 500\n        }\n        this.setCommonBeatBack(bo)\n    }\n\n    beatBackUpdate(dt: number) {\n        if (this.isReviceBeatBack) {\n            this.isBeatBack = false\n            return\n        }\n        super.beatBackUpdate(dt)\n    }\n\n    updateReviceBeatBack(dt: number) {\n        this.reviceBeatTime += dt\n        FixedUtil.deltaTimeMovePostion(tempPos, this.getPosition(), this.beatBackVelocity, dt)\n\n        this.setPosition(tempPos);\n        if (this.reviceBeatTime > this.beatBackVelocity.z) {\n            this.setCommonBeatBack(false)\n            return\n        }\n\n    }\n}\n\n"]}