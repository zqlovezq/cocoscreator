{"version":3,"sources":["file:///C:/chickenStarClient/client/assets/scripts/logic/model/hero/herobag/HeroBagDataControl.ts"],"names":["_decorator","tab","HeroData","HeroTeamControl","ccclass","property","HeroBagDataControl","heroId","bookId","_heroList","Map","_bookList","_idx","_book_idx","book_have_count","_starUpMap","_ResolveHerosMap","_receivedHeroAlbumIds","_receivedRecommendTeamIds","_heroClassType","HeroClass","HeroClass_Max","_bookClassType","ins","_instance","setAwardData","receivedHeroAlbumIds","receivedRecommendTeamIds","clear","i","length","set","k","getBookReceivedIds","getRecommendTeamIds","initData","sortHeros","sortHeroList","getHeros","heroTab","getData","HeroTableById","getValue","itemId","heroClass","Class","get","id","heroListClassArr","push","heroListAllArr","bookArr","j","HeroTable","_bookId","Id","getByItemId","sort","hero1","hero2","itemTab1","ItemTableById","itemTab2","Sort","size","bookHeroTab","refreshData","heroListData","equals","getHeroIndexById","arr","refreshTeamBagData","teamSort","heroInfo","getById","heroTable","allList","classList","teamInfo","getHeroByClass","refreshTeam","classIndex","classTemp","allTeamIndex","alIndex","index","indexOf","allTemp","refreshBookData","bookListData","NextHero","isTeam","classType","teamSlots","getTeam","getTeamIndexById","LastHero","heros","teamHeros","noTeamHeros","temaData","teamHeroInfo","hero","heroInTeam","sortFunc","concat","hero1Info","hero2Info","powerScore","getHeroListByVocation","vocationType","getBookHeroListByVocation","getOneClickList","map","Aptitude","HeroAptitude","HeroAptitude_R","materialArr","sameIdHeros","getHerosByType","HeroStarUpType","HeroStarUpType_SameNameHero","forEach","value","key","sameClassHeros","HeroStarUpType_SameClassHero","needCount","getAllResolveHeros","HeroAptitude_N","getItemQualityTableByStar","star","ItemQualityTable","dataTab","HeroStar"],"mappings":"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","sourcesContent":["/*\r\n * @Date: 2024-05-06 13:59:46\r\n * @LastEditors: wzq\r\n * @LastEditTime: 2024-05-23 18:37:52\r\n */\r\n\r\nimport { _decorator, Node } from 'cc';\r\nimport { proto } from 'client_protocol';\r\nimport { tab } from '../../../../Table/table_gen';\r\nimport { HeroData } from '../HeroData';\r\nimport { HeroTeamControl } from '../HeroTeamControl';\r\nimport { HeroInfo } from '../HeroInfo';\r\n\r\nconst { ccclass, property } = _decorator;\r\n@ccclass('HeroBagDataControl')\r\nexport class HeroBagDataControl {\r\n    public heroId: number = 0;\r\n    public bookId: number = 0;\r\n\r\n    private static _instance: HeroBagDataControl;\r\n    private _heroList: Map<tab.HeroClass,number[]> = new Map;\r\n    private _bookList: Map<tab.HeroClass,number[]> = new Map;\r\n    private _idx: number = 0;\r\n    private _book_idx: number = 0;\r\n    public book_have_count:number = 0;\r\n    private _starUpMap: Map<number, HeroInfo[]> = new Map();\r\n    private _ResolveHerosMap: Map<number, HeroInfo> = new Map();\r\n    private _receivedHeroAlbumIds: Map<number, boolean> = new Map();\r\n    private _receivedRecommendTeamIds: Map<number, boolean> = new Map();\r\n    private _heroClassType:tab.HeroClass = tab.HeroClass.HeroClass_Max;\r\n    private _bookClassType:tab.HeroClass = tab.HeroClass.HeroClass_Max;\r\n    public static get ins() {\r\n        if (null == this._instance) {\r\n            this._instance = new HeroBagDataControl();\r\n        }\r\n        return this._instance;\r\n    }\r\n    setAwardData(receivedHeroAlbumIds, receivedRecommendTeamIds) {\r\n        this._receivedHeroAlbumIds.clear();\r\n        this._receivedRecommendTeamIds.clear();\r\n        for (let i = 0; i < receivedHeroAlbumIds.length; i++) {\r\n            this._receivedHeroAlbumIds.set(receivedHeroAlbumIds[i], true)\r\n        }\r\n        for (let k = 0; k < receivedRecommendTeamIds.length; k++) {\r\n            this._receivedRecommendTeamIds.set(receivedRecommendTeamIds[k], true)\r\n        }\r\n    }\r\n    getBookReceivedIds(): Map<number, boolean> {\r\n        return this._receivedHeroAlbumIds;\r\n    }\r\n    getRecommendTeamIds(): Map<number, boolean> {\r\n        return this._receivedRecommendTeamIds;\r\n    }\r\n    initData() {\r\n        this._idx = 0;\r\n        this._book_idx = 0;\r\n        this.book_have_count = 0;\r\n        this._heroList.clear();\r\n        const sortHeros = this.sortHeroList(HeroData.ins.getHeros());\r\n        for(let i=0;i<sortHeros.length;i++){\r\n            const heroTab = tab.getData().HeroTableById.getValue(sortHeros[i].itemId);\r\n            const heroClass = heroTab.Class;\r\n            if(!this._heroList.get(heroClass)){\r\n                this._heroList.set(heroClass,[sortHeros[i].id]);\r\n            }else{\r\n                const heroListClassArr = this._heroList.get(heroClass);\r\n                heroListClassArr.push(sortHeros[i].id)\r\n            }\r\n            if(!this._heroList.get(tab.HeroClass.HeroClass_Max)){\r\n                this._heroList.set(tab.HeroClass.HeroClass_Max,[sortHeros[i].id]);\r\n            }else{\r\n                const heroListAllArr = this._heroList.get(tab.HeroClass.HeroClass_Max);\r\n                heroListAllArr.push(sortHeros[i].id)\r\n            }\r\n        }\r\n\r\n        const bookArr = [];\r\n        for(let j=0;j<tab.getData().HeroTable.length;j++){\r\n            let _bookId = tab.getData().HeroTable[j].Id\r\n            bookArr.push(_bookId);\r\n            if(HeroData.ins.getByItemId(_bookId)){\r\n                this.book_have_count++;\r\n            }\r\n        }\r\n        bookArr.sort((hero1,hero2)=>{\r\n            let itemTab1 = tab.getData().ItemTableById.getValue(hero1);\r\n            let itemTab2 = tab.getData().ItemTableById.getValue(hero2);\r\n            return itemTab2.Sort - itemTab1.Sort;\r\n        })\r\n        if (this._bookList.size === 0) {\r\n            for (let k = 0; k < bookArr.length; k++) {\r\n                const bookHeroTab:tab.HeroTable = tab.getData().HeroTableById.getValue(bookArr[k]);\r\n                const heroClass = bookHeroTab.Class;\r\n                if(!this._bookList.get(heroClass)){\r\n                    this._bookList.set(heroClass,[bookArr[k]]);\r\n                }else{\r\n                    const heroListClassArr = this._bookList.get(heroClass);\r\n                    heroListClassArr.push(bookArr[k])\r\n                }\r\n\r\n                if(!this._bookList.get(tab.HeroClass.HeroClass_Max)){\r\n                    this._bookList.set(tab.HeroClass.HeroClass_Max,[bookArr[k]]);\r\n                }else{\r\n                    const heroListAllArr = this._bookList.get(tab.HeroClass.HeroClass_Max);\r\n                    heroListAllArr.push(bookArr[k])\r\n                }\r\n            }\r\n        }\r\n        if(!this.heroId){\r\n            this.heroId = sortHeros[0].id;\r\n        }else{\r\n            this.refreshData(this.heroId);\r\n        }\r\n    }\r\n    refreshData(id) {\r\n        this.heroId = id;\r\n        const heroListData = this._heroList.get(this._heroClassType);\r\n        if (id === 0) {\r\n            this.heroId = heroListData[0];\r\n            this._idx = 0;\r\n            return;\r\n        }\r\n        for (let i = 0; i < heroListData.length; i++) {\r\n            let heroId = heroListData[i]\r\n            if (id.equals(heroId)) {\r\n                this._idx = i;\r\n            }\r\n        }\r\n    }\r\n    getHeroIndexById(arr,heroId):number{\r\n        for(let i=0;i<arr.length;i++){\r\n            let id = arr[i];\r\n            if(id.equals(heroId)){\r\n                return i;\r\n            }\r\n        }\r\n        return -1\r\n    }\r\n    /* 刷新上陣英雄排序 */\r\n    refreshTeamBagData(heroId:number){\r\n        let teamSort = [2, 1, 4, 3, 5];\r\n        const heroInfo = HeroData.ins.getById(heroId);\r\n        const heroClass = heroInfo.heroTable.Class;\r\n        const allList = this._heroList.get(tab.HeroClass.HeroClass_Max);\r\n        const classList = this._heroList.get(heroClass);\r\n        let teamInfo = HeroTeamControl.ins.getHeroByClass(heroClass);\r\n        if(!teamInfo){\r\n            HeroTeamControl.ins.refreshTeam(heroId);\r\n            teamInfo = HeroTeamControl.ins.getHeroByClass(heroClass);\r\n        }\r\n        /* 转换classList */\r\n        let  classIndex = this.getHeroIndexById(classList,heroId);\r\n        let classTemp = classList[0]\r\n        classList[0] = heroId;\r\n        if(teamInfo.id){\r\n            classList[classIndex] = classTemp;\r\n        }\r\n        /* 转换AllList */\r\n        let allTeamIndex = this.getHeroIndexById(allList,teamInfo.id);\r\n        let alIndex = this.getHeroIndexById(allList,heroId);\r\n        if(allTeamIndex<0){\r\n            let index = teamSort.indexOf(heroClass);\r\n            allList[index] = heroId;\r\n        }else{\r\n            let allTemp = allList[allTeamIndex]\r\n            allList[allTeamIndex] = heroId;\r\n            allList[alIndex] = allTemp;\r\n        }\r\n    }\r\n    refreshBookData(id: number) {\r\n        this.bookId = id;\r\n        const bookListData = this._bookList.get(this._bookClassType);\r\n        for (let i = 0; i < bookListData.length; i++) {\r\n            let bookId = bookListData[i]\r\n            if (bookId == id) {\r\n                this._book_idx = i;\r\n            }\r\n        }\r\n    }\r\n    // /* 获取背包英雄列表数据 */\r\n    // getHeroListDataById(id: number) : proto.Hero{\r\n    //     // const heroListData = \r\n    //     for (let i = 0; i < this._heroList.get.length; i++) {\r\n    //         let heroId = this._heroList[i].id\r\n    //         if (heroId.equals(id)) {\r\n    //             return this._heroList[i];\r\n    //         }\r\n    //     }\r\n    // }\r\n    /* 展示下一个英雄 */\r\n    public NextHero(isTeam: boolean) {\r\n        if (this.bookId) {\r\n            this._book_idx++;\r\n            let classType = this._bookClassType;\r\n            const bookListData = this._bookList.get(classType);\r\n            if (this._book_idx > bookListData.length - 1) {\r\n                this._book_idx = 0;\r\n            }\r\n            this.bookId = bookListData[this._book_idx];\r\n        } else {\r\n            if (isTeam) {\r\n                let teamSlots = HeroTeamControl.ins.getTeam();\r\n                let index = HeroTeamControl.ins.getTeamIndexById(this.heroId);\r\n                index++;\r\n                if (index > teamSlots.length - 1) {\r\n                    index = 0;\r\n                }\r\n                this.heroId = teamSlots[index].heroId;\r\n            } else {\r\n                let classType = this._heroClassType;\r\n                const heroListData = this._heroList.get(classType);\r\n                this._idx++;\r\n                if (this._idx > heroListData.length - 1) {\r\n                    this._idx = 0;\r\n                }\r\n                this.heroId = heroListData[this._idx];\r\n            }\r\n        }\r\n    }\r\n    public LastHero(isTeam: boolean) {\r\n        if (this.bookId) {\r\n            let classType = this._bookClassType;\r\n            this._book_idx--\r\n            const bookListData = this._bookList.get(classType);\r\n            if (this._book_idx < 0) {\r\n                this._book_idx = bookListData.length - 1;\r\n            }\r\n            this.bookId = bookListData[this._book_idx];\r\n        } else {\r\n            if (isTeam) {\r\n                let teamSlots = HeroTeamControl.ins.getTeam();\r\n                let index = HeroTeamControl.ins.getTeamIndexById(this.heroId);\r\n                index--;\r\n                if (index < 0) {\r\n                    index = teamSlots.length - 1;\r\n                }\r\n                this.heroId = teamSlots[index].heroId;\r\n            } else {\r\n                let classType = this._heroClassType;\r\n                const heroListData = this._heroList.get(classType);\r\n                this._idx--;\r\n                if (this._idx < 0) {\r\n                    this._idx = heroListData.length - 1\r\n                }\r\n                this.heroId = heroListData[this._idx];\r\n            }\r\n        }\r\n    }\r\n    /* 英雄排序 */\r\n    sortHeroList(heros: HeroInfo[]) {\r\n        // 先判断是否在team里面\r\n        let teamHeros = [];\r\n        let noTeamHeros = [];\r\n        let temaData = HeroTeamControl.ins.getTeam();\r\n        for(let i=0;i<temaData.length;i++){\r\n            if(temaData[i].heroId){\r\n                let teamHeroInfo = HeroData.ins.getById(temaData[i].heroId)\r\n                teamHeros.push(teamHeroInfo);\r\n            }\r\n        }\r\n        for (let i = 0; i < heros.length; i++) {\r\n            let hero: HeroInfo = heros[i];\r\n            if (hero === null) {\r\n                continue;\r\n            }\r\n            if (HeroTeamControl.ins.heroInTeam(hero.id)) {\r\n                // teamHeros.push(hero)\r\n            } else {\r\n                noTeamHeros.push(hero)\r\n            }\r\n        }\r\n        // teamHeros.sort(this.sortFunc);\r\n        noTeamHeros.sort(this.sortFunc);\r\n        return teamHeros.concat(noTeamHeros);\r\n    }\r\n    /* 排序方法 */\r\n    sortFunc(hero1: proto.Hero, hero2: proto.Hero) {\r\n        let hero1Info = HeroData.ins.getById(hero1.id);\r\n        let hero2Info = HeroData.ins.getById(hero2.id);\r\n        return hero2Info.powerScore-hero1Info.powerScore;\r\n        // if (hero1Info.star !== hero2Info.star) {\r\n        //     return hero1.star - hero2Info.star;\r\n        // }\r\n        // return hero1Info.itemTable.Sort - hero2Info.itemTable.Sort;\r\n    }\r\n    /* 根据职业返回list */\r\n    getHeroListByVocation(vocationType: tab.HeroClass) {\r\n        this._heroClassType = vocationType;\r\n        return this._heroList.get(vocationType)\r\n    }\r\n    /* 根据职业返回list */\r\n    getBookHeroListByVocation(vocationType: tab.HeroClass) {\r\n        this._bookClassType = vocationType;\r\n        return this._bookList.get(vocationType);\r\n    }\r\n    /* 返回一键升星的列表 */\r\n    getOneClickList(): Map<number, HeroInfo[]> {\r\n        this._starUpMap.clear();\r\n        let allList = HeroData.ins.getHeros();\r\n        /* 可以升星的重组一个数组 条件 只能是优的英雄 */\r\n        let map = new Map();\r\n        for (let i = 0; i < allList.length; i++) {\r\n            let heroInfo = allList[i];\r\n            if (map.get(heroInfo.id)) {\r\n                continue;\r\n            }\r\n            if (heroInfo.heroTable.Aptitude === tab.HeroAptitude.HeroAptitude_R) {\r\n                let materialArr: HeroInfo[] = [];\r\n                let sameIdHeros = heroInfo.getHerosByType(tab.HeroStarUpType.HeroStarUpType_SameNameHero);\r\n                map.set(heroInfo.id, true);\r\n                sameIdHeros.map.forEach((value, key) => {\r\n                    map.set(key, true);\r\n                    materialArr.push(value);\r\n                })\r\n                let sameClassHeros = heroInfo.getHerosByType(tab.HeroStarUpType.HeroStarUpType_SameClassHero);\r\n                sameClassHeros.map.forEach((value, key) => {\r\n                    map.set(key, true);\r\n                    materialArr.push(value);\r\n                })\r\n                if (sameIdHeros.map.size >= sameIdHeros.needCount && sameClassHeros.map.size >= sameClassHeros.needCount) {\r\n                    if (materialArr.length > 0) {\r\n                        this._starUpMap.set(heroInfo.id, materialArr);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return this._starUpMap;\r\n    }\r\n    /* 返回所有可以遣散的英雄 */\r\n    getAllResolveHeros(): Map<number, HeroInfo> {\r\n        this._ResolveHerosMap.clear();\r\n        let allList = HeroData.ins.getHeros();\r\n        for (let i = 0; i < allList.length; i++) {\r\n            let heroInfo = allList[i];\r\n            if (heroInfo.heroTable.Aptitude === tab.HeroAptitude.HeroAptitude_N && !HeroTeamControl.ins.heroInTeam(heroInfo.id)) {\r\n                this._ResolveHerosMap.set(heroInfo.id, heroInfo);\r\n            }\r\n        }\r\n        return this._ResolveHerosMap;\r\n    }\r\n    /* 通过星级返回其品质 */\r\n    getItemQualityTableByStar(star:number){\r\n        for(let i=0;i<tab.getData().ItemQualityTable.length;i++){\r\n            const dataTab =  tab.getData().ItemQualityTable[i];\r\n            for(let j=0;j<dataTab.HeroStar.length;j++){\r\n                if(dataTab.HeroStar[j]===star){\r\n                    return dataTab;\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n}\r\n\r\n\r\n"]}