{"version":3,"sources":["file:///C:/chickenStarClient/client/assets/scripts/logic/fight/base/buff/Buff.ts"],"names":["Buff","Vec3","tab","BuffControl","AbsOwner","EffectControl","FightMacro","FightData","tempPos","infinite_num","soleId","addOwner","owner","lifeTime","passTime","triggerTime","ruleNumber","lossHpPer","_valid","buffId","configTab","lockParm","addTime","get","buff","pools","pop","put","reset","push","recycle","setBuffTab","_tab","time","Id","NoOneMemory","copy","index","effectTabs","length","effectTab","random","init","Duration","addObjId","objId","lockAttr","setObjId","isValid","updateFrame","dt","onTimeComplete","Trigger","checkTriggerTime","onTrigger","Effect","ins","onTriggerEffect","isCanRule","Number","isClearByType","clearType","ClearType","indexOf","isBuffType","buffType","BuffType","addRuleNumber","isAddAttr","isCheckAttr","checkAttr","addAttr","disposeRule","Rule","Rule_TimeNoneEffectNone","Rule_TimeRefreshEffectNone","Rule_TimeRefreshEffectadd","Rule_TimeAddEffectNone","_lossHpPer","lastNum","CheckAttr","Math","min","floor","PERCENT","getAttrData","hpPercent","shield","attrChange","lastRule","diff","abs","removeOneAttr","addEffect","removeAttr","removeCount","removeEffect"],"mappings":"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","sourcesContent":["import { Vec3, View, game, size, v2, view } from \"cc\";\nimport { tab } from \"../../../../Table/table_gen\";\nimport { AbsObj } from \"../obj/AbsObj\";\nimport { AbsRole } from \"../obj/role/AbsRole\";\nimport { BuffControl } from \"./BuffControl\";\nimport { BuffTab } from \"../../power/powerTab/BuffTab\";\nimport { AbsOwner } from \"../obj/AbsOwner\";\nimport { EffectControl } from \"../effect/EffectControl\";\nimport { FightMacro } from \"../../define/FightDefine\";\nimport { FightData } from \"../../data/FightData\";\n\nconst tempPos = new Vec3();\nconst infinite_num = -1\nexport class Buff {\n    private static pools: Buff[] = []\n\n    static get() {\n        let buff = Buff.pools.pop()\n        if (buff == null) {\n            buff = new Buff()\n        }\n        return buff\n    }\n\n    static put(buff: Buff) {\n        buff.reset()\n        Buff.pools.push(buff)\n    }\n\n    soleId: number = 0\n\n    /** 添加者（来源） */\n    addOwner: AbsOwner\n    /** 拥有者 */\n    owner: AbsOwner\n\n    public lifeTime: number = 0\n    public passTime: number = 0\n    /** 触发间隔 */\n    public triggerTime: number = 0\n\n    /** 叠加数量 */\n    public ruleNumber: number = 0\n\n    /** 损失血量百分比 */\n    public lossHpPer: number = 0\n    _valid: boolean = false\n\n    buffId: number = 0\n    configTab: BuffTab\n\n    lockParm: any\n    addTime:number = 0\n    recycle() {\n        Buff.put(this)\n    }\n\n    reset() {\n        if (this.owner) {\n            this.owner.recycle()\n            this.owner = null\n        }\n        if (this.addOwner) {\n            this.addOwner.recycle()\n            this.addOwner = null\n        }\n        if (this.lockParm) {\n            this.lockParm.recycle()\n            this.lockParm = null\n        }\n\n        this.buffId = 0\n        this._valid = false\n        this.passTime = 0\n        this.configTab = null\n        this.ruleNumber = 0\n        this.lifeTime = 0\n        this.soleId = 0\n        this.triggerTime = 0\n        this.addTime = 0\n    }\n\n    setBuffTab(_tab: BuffTab) {\n        this.addTime = FightData.time\n        this.buffId = _tab.Id\n        if (_tab.NoOneMemory){\n            this.configTab = _tab\n        }else{\n            this.configTab = _tab.copy()\n        }\n        for (let index = 0; index < this.configTab.effectTabs.length; index++) {\n            const effectTab = this.configTab.effectTabs[index];\n            effectTab.random()\n        }\n    }\n\n    init() {\n        this._valid = true\n        this.lifeTime = this.configTab.Duration\n    }\n\n    addObjId(objId: number) {\n        this.addOwner = AbsOwner.get(objId)\n        this.addOwner.lockAttr()\n    }\n\n    setObjId(objId: number) {\n        this.owner = AbsOwner.get(objId)\n    }\n\n    isValid() {\n        return this._valid\n    }\n\n    updateFrame(dt: number) {\n        if (!this._valid) {\n            return\n        }\n\n        this.passTime = this.passTime + dt\n        if (this.lifeTime != infinite_num && this.passTime >= this.lifeTime) {\n            this.onTimeComplete()\n            return\n        }\n        if (this.configTab.Trigger) {\n            this.triggerTime += dt\n            this.checkTriggerTime()\n        }\n    }\n\n    onTimeComplete() {\n        this._valid = false\n    }\n\n    checkTriggerTime() {\n        if (this.triggerTime >= this.configTab.Trigger) {\n            this.triggerTime = this.triggerTime - this.configTab.Trigger\n            this.onTrigger()\n        }\n    }\n\n    onTrigger() {\n        if (this.configTab.Trigger && this.configTab.Effect) {\n            BuffControl.ins.onTriggerEffect(this)\n        }\n    }\n\n    /** 是否可以叠加 */\n    isCanRule() {\n        if (this.configTab.Number == 0) {\n            return true\n        }\n        return this.configTab.Number > this.ruleNumber\n    }\n\n    /** 是否清除类型 */\n    isClearByType(clearType: tab.ClearType) {\n        return this.configTab.ClearType.indexOf(clearType) >= 0\n    }\n    /** 是否buff类型 */\n    isBuffType(buffType: tab.BuffType) {\n        return this.configTab.BuffType == buffType\n    }\n\n    /** 叠加一层 */\n    addRuleNumber(isAddAttr: boolean) {\n        if (this.configTab.isCheckAttr()) {\n            this.checkAttr()\n            return\n        }\n        this.ruleNumber += 1\n        if (isAddAttr) {\n            this.addAttr()\n        }\n    }\n\n    disposeRule() {\n        //叠加规则\n        switch (this.configTab.Rule) {\n            case tab.Rule.Rule_TimeNoneEffectNone:\n                break\n            case tab.Rule.Rule_TimeRefreshEffectNone:// 时间重置，效果不变 \n                this.lifeTime = this.configTab.Duration\n                this.passTime = 0\n                break\n            case tab.Rule.Rule_TimeRefreshEffectadd:// 时间重置，效果叠加 \n                this.lifeTime = this.configTab.Duration\n                this.passTime = 0\n                this.addAttr()\n                break\n            case tab.Rule.Rule_TimeAddEffectNone: // 时间叠加，效果不变 \n                this.lifeTime += this.configTab.Duration\n                break\n        }\n    }\n\n    checkAttr(_lossHpPer: number = 0) {\n        if (!this.configTab.isCheckAttr()) {\n            return\n        }\n\n        let lastNum = this.ruleNumber//当前层\n\n        //在条件计算最新层\n        if (this.configTab.CheckAttr[0] == 1) { //每损失多少生命值\n            this.ruleNumber = Math.min(Math.floor((FightMacro.PERCENT - this.owner.getAttrData().hpPercent) / this.configTab.CheckAttr[1]), this.configTab.Number)\n        } else if (this.configTab.CheckAttr[0] == 2) { //生命高于多少值\n            this.ruleNumber = this.owner.getAttrData().hpPercent > this.configTab.CheckAttr[1] ? 1 : 0\n        } else if (this.configTab.CheckAttr[0] == 3) {//护盾>0\n            this.ruleNumber = this.owner.getAttrData().shield >= this.configTab.CheckAttr[1] ? 1 : 0\n        } else if (this.configTab.CheckAttr[0] == 4) {//护盾==0\n            this.ruleNumber = this.owner.getAttrData().shield == this.configTab.CheckAttr[1] ? 1 : 0\n        } else if (this.configTab.CheckAttr[0] == 5) {//每累计损失生命值\n            this.lossHpPer += _lossHpPer\n            if (this.lossHpPer >= this.configTab.CheckAttr[1]) {\n                this.lossHpPer -= this.configTab.CheckAttr[1]\n                BuffControl.ins.onTriggerEffect(this)\n            }\n            return\n        } else if (this.configTab.CheckAttr[0] == 6) { //生命低于多少值\n            this.ruleNumber = this.owner.getAttrData().hpPercent < this.configTab.CheckAttr[1] ? 1 : 0\n        }\n        //变更层\n        this.attrChange(lastNum)\n    }\n\n    attrChange(lastRule: number) {\n        let diff = this.ruleNumber - lastRule\n        if (diff == 0) {\n            return\n        }\n        for (let index = 0; index < Math.abs(diff); index++) {\n            if (diff > 0) {\n                this.addAttr()\n            } else {\n                this.removeOneAttr()\n            }\n        }\n    }\n\n    /** 添加属性 */\n    addAttr() {\n        if (this.ruleNumber == 0) {\n            return\n        }\n        for (let index = 0; index < this.configTab.effectTabs.length; index++) {\n            const effectTab = this.configTab.effectTabs[index];\n            EffectControl.ins.addEffect(effectTab, null, this.owner.abs)\n        }\n    }\n    /** 移除属性 */\n    removeAttr() {\n        let removeCount = 1\n\n        //叠加规则\n        switch (this.configTab.Rule) {\n            case tab.Rule.Rule_TimeRefreshEffectadd:// 时间重置，效果叠加 \n                removeCount = this.ruleNumber\n                break\n        }\n        if (this.configTab.isCheckAttr()) {\n            removeCount = this.ruleNumber\n        }\n        //移除效果\n        for (let index = 0; index < removeCount; index++) {\n            this.removeOneAttr()\n        }\n    }\n    //移除1层效果\n    removeOneAttr() {\n        for (let index = 0; index < this.configTab.effectTabs.length; index++) {\n            const effectTab = this.configTab.effectTabs[index];\n            EffectControl.ins.removeEffect(effectTab, this.owner.abs)\n        }\n    }\n}"]}