{"version":3,"sources":["file:///C:/chickenStarClient/client/assets/scripts/logic/model/recruit/RecruitProbabilityPop.ts"],"names":["_decorator","ViewPop","ccclass","property","RecruitProbabilityPop","register","onShow","getBookInfoByAptitude"],"mappings":";;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;;AACAC,MAAAA,O,iBAAAA,O;;;;;;;;;OAQH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBH,U;;uCAGjBI,qB,WADZF,OAAO,CAAC,uBAAD,C,gBAAR,MACaE,qBADb;AAAA;AAAA,8BACmD;AAC/C;AACA;AACA;AACA;AACA;AACA;AACAC,QAAAA,QAAQ,GAAS,CAEhB;;AACDC,QAAAA,MAAM,GAAS,CACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH;;AACDC,QAAAA,qBAAqB,GAAE,CACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH;;AAnE8C,O","sourcesContent":["import { _decorator, Component, instantiate, Node, Prefab } from 'cc';\r\nimport { ViewPop } from '../../../framework/base/ViewPop';\r\nimport { tab } from '../../../Table/table_gen';\r\nimport { sortByVocation } from '../../utils/GameUtil';\r\nimport { HeroDataControl } from '../hero/herobag/HeroDataControl';\r\nimport { RecruitProbabilityItem } from './RecruitProbabilityItem';\r\nimport { RareBookData } from '../rareBook/RareBookData';\r\nimport { RareBookInfo } from '../rareBook/RareBookInfo';\r\nimport { RecruitType } from '../../../Common/script/EnumTypeMgr';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('RecruitProbabilityPop')\r\nexport class RecruitProbabilityPop extends ViewPop {\r\n    // @property(Prefab)\r\n    // ProbabilityItem: Prefab = null;\r\n    // @property(Node)\r\n    // node_content: Node = null;\r\n    // private type: RecruitType = RecruitType.None\r\n    // private _BookMap:Map<number,number[]> = new Map()\r\n    register(): void {\r\n\r\n    }\r\n    onShow(): void {\r\n        // // TipsStrArr = [\"Tips_recruit_hero_4\",\"Tips_recruit_heropiece_5\",\"Tips_recruit_hero_5\"]\r\n        // this.type = this.openData.type;\r\n        // if (this.type !== RecruitType.Vocation) {\r\n        //     if (this.type === RecruitType.SeniorGuarantee) {\r\n        //         const data = sortByVocation(HeroDataControl.ins.getHeroListByAptitude(tab.HeroAptitude.HeroAptitude_SSR));\r\n        //         const item = instantiate(this.ProbabilityItem);\r\n        //         item.parent = this.node_content;\r\n        //         const itemTs = item.getComponent(RecruitProbabilityItem)\r\n        //         itemTs.setHeroData(data, tab.HeroAptitude.HeroAptitude_SSR, this.type);\r\n        //     } else if(this.type === RecruitType.Book){\r\n        //         this.getBookInfoByAptitude();\r\n        //         for (let i = tab.HeroAptitude.HeroAptitude_SR; i >= tab.HeroAptitude.HeroAptitude_N; i--) {\r\n        //             const item = instantiate(this.ProbabilityItem);\r\n        //             item.parent = this.node_content;\r\n        //             const itemTs = item.getComponent(RecruitProbabilityItem)\r\n        //             itemTs.setHeroData(this._BookMap.get(i), i, this.type);\r\n        //         }\r\n        //     }else if(this.type===RecruitType.BookGuarantee){\r\n        //         this.getBookInfoByAptitude();\r\n        //         const item = instantiate(this.ProbabilityItem);\r\n        //         item.parent = this.node_content;\r\n        //         const itemTs = item.getComponent(RecruitProbabilityItem)\r\n        //         itemTs.setHeroData(this._BookMap.get(tab.HeroAptitude.HeroAptitude_SR), tab.HeroAptitude.HeroAptitude_SR, this.type);\r\n        //     }else {\r\n        //         for (let i = tab.HeroAptitude.HeroAptitude_SSR; i >= tab.HeroAptitude.HeroAptitude_N; i--) {\r\n        //             const data = sortByVocation(HeroDataControl.ins.getHeroListByAptitude(i));\r\n        //             const item = instantiate(this.ProbabilityItem);\r\n        //             item.parent = this.node_content;\r\n        //             const itemTs = item.getComponent(RecruitProbabilityItem)\r\n        //             itemTs.setHeroData(data, i, this.type);\r\n        //         }\r\n        //     }\r\n        // } else {\r\n        //     const TipsStrArr = [\"Tips_recruit_hero_5\", \"Tips_recruit_heropiece_5\", \"Tips_recruit_hero_4\"]\r\n        //     for (let i = 0; i < TipsStrArr.length; i++) {\r\n        //         const recruit = this.openData.recruit;\r\n        //         let vocation = (recruit-190)/10\r\n        //         const data = HeroDataControl.ins.getBookHeroListByVocation(vocation,false);\r\n        //         const item = instantiate(this.ProbabilityItem);\r\n        //         item.parent = this.node_content;\r\n        //         const itemTs = item.getComponent(RecruitProbabilityItem)\r\n        //         itemTs.setHeroData(data, i, this.type, TipsStrArr[i]);\r\n        //     }\r\n        // }\r\n    }\r\n    getBookInfoByAptitude(){\r\n        // const bookDatas = RareBookData.ins.getBookInfos(true);\r\n        // for (let i = 0; i < bookDatas.length; i++) {\r\n        //     const bookData = bookDatas[i];\r\n        //     if(this._BookMap.has(bookData.bookTable.Aptitude)){\r\n        //         let arr = this._BookMap.get(bookData.bookTable.Aptitude);\r\n        //         arr.push(bookData.itemId);\r\n        //     }else{\r\n        //         this._BookMap.set(bookData.bookTable.Aptitude, [bookData.itemId]);\r\n        //     }\r\n        // }\r\n    }\r\n}\r\n\r\n\r\n"]}