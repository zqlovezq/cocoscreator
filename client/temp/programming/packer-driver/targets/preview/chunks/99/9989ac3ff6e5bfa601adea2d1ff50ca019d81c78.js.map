{"version":3,"sources":["file:///C:/chickenStarClient/client/assets/scripts/logic/fight/pvp/move/PvpMove.ts"],"names":["PvpMove","PvpMoveLine","PvpMoveCircle","Vec3","FixedUtil","MathAngle","tempPos","tempPos1","abs","setAbs","init","setAbsPos","v3","setPosition","updateFrame","dt","checkRotate","fly","isDead","configTab","Rotate","addAngle","deltaTimeMovePostion","getPosition","velocity","angle","angleVelocity","startPos","nowPos","set","normalize","multiplyScalar","speed","rotatePoint","add"],"mappings":"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","sourcesContent":["import { Vec3 } from \"cc\";\nimport { PvpObj } from \"../obj/PvpObj\";\nimport { FixedUtil } from \"../../util/FixedUtil\";\nimport { PvpBullet } from \"../obj/PvpBullet\";\nimport { MathAngle } from \"../../../../framework/collision/Maths\";\n\nconst tempPos = new Vec3();\nconst tempPos1 = new Vec3();\n/** 移动 （默认就是速率移动） */\nexport class PvpMove {\n    abs: PvpBullet\n\n    setAbs(abs: PvpBullet) {\n        this.abs = abs\n    }\n\n    init() {\n\n    }\n\n    setAbsPos(v3: Vec3) {\n        this.abs.setPosition(v3)\n    }\n\n    updateFrame(dt: number) {\n        this.checkRotate()\n        this.fly(dt)\n    }\n    checkRotate() {\n        if (this.abs == null || this.abs && this.abs.isDead) {\n            return\n        }\n        if (this.abs.configTab.Rotate != 0) {\n            this.abs.addAngle(this.abs.configTab.Rotate)\n        }\n    }\n\n    fly(dt: number) {\n\n    }\n}\n\nexport class PvpMoveLine extends PvpMove {\n    fly(dt: number): void {\n        //计算新位置\n        FixedUtil.deltaTimeMovePostion(tempPos, this.abs.getPosition(), this.abs.velocity, dt)\n        this.setAbsPos(tempPos)\n    }\n}\n\n//离心运动\nexport class PvpMoveCircle extends PvpMove {\n    angle: number = 0\n    angleVelocity: Vec3 = new Vec3()\n    startPos: Vec3 = new Vec3()\n    nowPos: Vec3 = new Vec3()\n    addAngle: number = 0\n\n    init(): void {\n        this.angleVelocity.set(this.abs.velocity)\n        this.angleVelocity.normalize()\n        this.angleVelocity.multiplyScalar(this.abs.speed)\n\n        this.angle = 0\n        this.startPos.set(this.abs.getPosition())\n        this.nowPos.set(0, 0, 0)\n        this.addAngle = 0\n    }\n\n    fly(dt: number): void {\n        this.angle = this.angle + this.addAngle\n\n        //计算新位置\n        FixedUtil.deltaTimeMovePostion(this.nowPos, this.nowPos, this.angleVelocity, dt)\n        MathAngle.rotatePoint(this.nowPos, this.angle, tempPos1)\n        tempPos1.add(this.startPos)\n        this.setAbsPos(tempPos1);\n    }\n}"]}