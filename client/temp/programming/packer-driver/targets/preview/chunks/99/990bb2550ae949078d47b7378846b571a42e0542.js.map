{"version":3,"sources":["file:///C:/chickenStarClient/client/assets/scripts/logic/model/common/ResourceItemNode.ts"],"names":["_decorator","Label","log","Node","Sprite","ItemData","EventMgr","LocalEvent","ItemInfo","tab","UIMgr","ViewName","RoleData","GameUtil","setTextTime_3","proto","ComponentBase","RedComp","RedEventComp","RedDotType","ccclass","property","ResourceItemNode","itemId","itemInfo","lastTimer","staminaTotalTimer","staminaTimerCallBack","Math","floor","Number","ins","staminaInfo","lastRecoverTime","getServerUtcTime","str","timerLab","string","unschedule","register","onLocal","Item_Update","updateResourceNum","onMsg","Ptl","VipBonusPush","setShowNumLab","initItemId","initView","CurrencyType","CurrencyType_Stamina","BuyStaminaRsp","updateStaminaTimer","GetStaminaInfoRsp","com","node","addComponent","redNode","redPoint","evet","event","RedStamina","types","push","addRed","CurrencyType_Gold","GoldBuy","start","getByItemId","initItemData","iconSpr","setTexture","itemTable","Icon","active","jumpTab","getData","ItemClientJumpTableByItemId","getValue","add_node","click_item_node","num","maxStamina","GetKeyValue_ConfigTable","StaminaResumeTime","getPrivilegeValue","VipBonus","VipBonus_StaminaLimit","schedule","getCount","numLab","InitialStaminaMaxCount","convertNumber","itemIds","indexOf","onClickItem","show","viewName","ResourceBuyPop","data","CurrencyType_Diamond","DiamondBuyPop","CurrencyType_Friendship","FriendPop","CurrencyType_FincaFightTicket","ItemBuyPop","name","JumpParam","onDestroy"],"mappings":"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","sourcesContent":["import { _decorator, Component, Label, log, Node, SpringJoint2D, Sprite } from 'cc';\r\nimport { ItemData } from '../item/ItemData';\r\nimport { EventMgr } from '../../mgr/EventMgr';\r\nimport { LocalEvent } from '../../define/LocalEvent';\r\nimport { ItemInfo } from '../item/ItemInfo';\r\nimport { tab } from '../../../Table/table_gen';\r\nimport { UIMgr } from '../../mgr/UIMgr';\r\nimport { ViewName } from '../../define/ViewDefine';\r\nimport { RoleData } from '../role/RoleData';\r\nimport {  GameUtil, setTextTime_3 } from '../../utils/GameUtil';\r\nimport { proto } from 'client_protocol';\r\nimport { ComponentBase } from '../../../framework/base/ComponentBase';\r\nimport RedComp from '../../../Common/component/RedComp';\r\nimport RedEventComp from '../../../Common/component/RedEventComp';\r\nimport { RedDotType } from '../../red/RedDotType';\r\nimport { RoleControl } from '../role/RoleControl';\r\nimport { MALLNAME } from '../../../Common/script/EnumTypeMgr';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('ResourceItemNode')\r\nexport class ResourceItemNode extends ComponentBase {\r\n    @property(Sprite)\r\n    iconSpr: Sprite = null;\r\n    @property(Label)\r\n    numLab: Label = null;\r\n    @property(Node)\r\n    redPoint: Node = null;\r\n    @property(Label)\r\n    timerLab: Label = null;\r\n\r\n    @property(Node)\r\n    add_node:Node = null;\r\n    @property(Node)\r\n    click_item_node:Node = null;\r\n    public itemId: number = 0;\r\n    private itemInfo: ItemInfo;\r\n    private lastTimer: number = 0;\r\n    private staminaTotalTimer:number=0;\r\n\r\n    public register(): void {\r\n      \r\n        EventMgr.onLocal(LocalEvent.Item_Update, this.updateResourceNum, this);\r\n        EventMgr.onMsg(proto.Ptl.VipBonusPush, this.setShowNumLab, this)\r\n    }\r\n    initItemId(itemId: number) {\r\n        this.itemId = itemId;\r\n        if (this.itemId > 0) {\r\n            // this.updateResourceNum();\r\n            this.initView();\r\n\r\n        }\r\n        if (this.itemId == tab.CurrencyType.CurrencyType_Stamina) {\r\n            EventMgr.onMsg(proto.Ptl.BuyStaminaRsp, this.updateStaminaTimer, this)\r\n            EventMgr.onMsg(proto.Ptl.GetStaminaInfoRsp, this.updateStaminaTimer, this)\r\n            let com= this.node.addComponent(RedComp);\r\n            com.redNode=this.redPoint;\r\n            let evet=new RedEventComp();\r\n            evet.event=RedDotType.RedStamina;\r\n            // evet.child = String(tab.AdType.AdType_BuyStamina)\r\n            com.types.push(evet);\r\n            com.addRed();\r\n        }else if(this.itemId == tab.CurrencyType.CurrencyType_Gold){\r\n            let com= this.node.addComponent(RedComp);\r\n            com.redNode=this.redPoint;\r\n            let evet=new RedEventComp();\r\n            evet.event=RedDotType.GoldBuy;\r\n            // evet.child = String(tab.AdType.AdType_BuyGold)\r\n            com.types.push(evet);\r\n            com.addRed();\r\n        }\r\n\r\n    }\r\n    start() {\r\n\r\n\r\n    }\r\n    initView() {\r\n        let itemInfo = ItemData.ins.getByItemId(this.itemId);\r\n        if (!itemInfo) {\r\n            itemInfo = new ItemInfo()\r\n            itemInfo.initItemData(this.itemId, 0);\r\n        }\r\n        this.itemInfo = itemInfo;\r\n      \r\n        this.iconSpr.setTexture(itemInfo.itemTable.Icon);\r\n        this.setShowNumLab();\r\n        if (itemInfo.itemId == tab.CurrencyType.CurrencyType_Stamina) {\r\n          \r\n            this.updateStaminaTimer();\r\n        } else {\r\n        \r\n            this.timerLab.node.active = false;\r\n        }\r\n        const jumpTab = tab.getData().ItemClientJumpTableByItemId.getValue(this.itemId);\r\n        this.add_node.active = jumpTab?true:false;\r\n        this.click_item_node.active = jumpTab?true:false;\r\n    }\r\n    updateStaminaTimer() {\r\n        this.unschedule(this.staminaTimerCallBack);\r\n        if (Number(this.itemInfo.num) >= RoleData.ins.staminaInfo.maxStamina) {\r\n            this.timerLab.node.active = false;\r\n        } else {\r\n            this.timerLab.node.active = true;\r\n            // let total = tab.getData().GetKeyValue_ConfigTable().StaminaResumeTime+RoleData.ins.getPrivilegeValue(tab.VipBonus.VipBonus_StaminaLimit);\r\n            this.staminaTotalTimer= tab.getData().GetKeyValue_ConfigTable().StaminaResumeTime+RoleData.ins.getPrivilegeValue(tab.VipBonus.VipBonus_StaminaLimit);\r\n            this.lastTimer = Math.floor((Number(RoleData.ins.staminaInfo.lastRecoverTime) +  this.staminaTotalTimer - RoleData.ins.getServerUtcTime()));\r\n            // log(\"lasttimer===\",this.lastTimer)\r\n            if(this.lastTimer>0){\r\n                let str = setTextTime_3(this.lastTimer);\r\n                this.timerLab.string = str;\r\n                this.schedule(this.staminaTimerCallBack, 1)\r\n            }else{\r\n                this.timerLab.string = \"00:00\";\r\n            }\r\n        }\r\n    }\r\n    staminaTimerCallBack = () => {\r\n        // let total = 120+RoleData.ins.getPrivilegeValue(tab.VipBonus.VipBonus_StaminaLimit);\r\n        this.lastTimer = Math.floor((Number(RoleData.ins.staminaInfo.lastRecoverTime) +  this.staminaTotalTimer - RoleData.ins.getServerUtcTime()));\r\n        if (this.lastTimer >= 0) {\r\n            let str = setTextTime_3(this.lastTimer);\r\n            this.timerLab.string = str;\r\n        } else {\r\n            log(\"lasttimer===\",this.lastTimer)\r\n            this.unschedule(this.staminaTimerCallBack);\r\n          \r\n            \r\n        }\r\n\r\n\r\n    }\r\n    \r\n    setShowNumLab(){\r\n        let num=ItemData.ins.getCount(this.itemId);\r\n        if (this.itemId == tab.CurrencyType.CurrencyType_Stamina) {\r\n            this.numLab.string=num+\"/\"+(tab.getData().GetKeyValue_ConfigTable().InitialStaminaMaxCount+RoleData.ins.getPrivilegeValue(tab.VipBonus.VipBonus_StaminaLimit));\r\n        }else{\r\n            this.numLab.string =GameUtil.convertNumber(num) + \"\"\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 刷新资源显示数量\r\n     */\r\n    updateResourceNum(itemIds: Array<number>) {\r\n\r\n        if (itemIds.indexOf(this.itemId) > -1) {\r\n            this.setShowNumLab();\r\n            // this.numLab.string = ItemData.ins.getCount(this.itemId) + \"\"\r\n            // let item = ItemData.ins.getByItemId(this.itemId);\r\n            // if (item) {\r\n            //     let num = item.num;\r\n            //     this.numLab.string = num + \"\";\r\n            // } else {\r\n            //     this.numLab.string = \"0\";\r\n            // }\r\n\r\n        }\r\n\r\n    }\r\n    onClickItem() {\r\n        log(\"点击item===============\")\r\n        if (this.itemId == tab.CurrencyType.CurrencyType_Stamina) {\r\n            // UIMgr.ins.cu\r\n            UIMgr.ins.show({ viewName: ViewName.ResourceBuyPop, data: { \"itemId\": this.itemId } })\r\n        }else if(this.itemId===tab.CurrencyType.CurrencyType_Diamond){\r\n            UIMgr.ins.show({ viewName: ViewName.DiamondBuyPop})\r\n        }else if(this.itemId == tab.CurrencyType.CurrencyType_Gold){\r\n            UIMgr.ins.show({ viewName: ViewName.ResourceBuyPop, data: { \"itemId\": this.itemId } })\r\n        }else if(this.itemId == tab.CurrencyType.CurrencyType_Friendship){\r\n            UIMgr.ins.show({ viewName: ViewName.FriendPop})\r\n        }else if(this.itemId == tab.CurrencyType.CurrencyType_FincaFightTicket){\r\n            const jumpTab = tab.getData().ItemClientJumpTableByItemId.getValue(this.itemId);\r\n            UIMgr.ins.show({ viewName: ViewName.ItemBuyPop,data:{name:jumpTab.JumpParam[0]} })\r\n        }\r\n    }\r\n\r\n    protected onDestroy(): void {\r\n        super.onDestroy();\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n"]}