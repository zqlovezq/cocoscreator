{"version":3,"sources":["file:///C:/chickenStarClient/client/assets/scripts/logic/model/role/SettingsManager.ts"],"names":["_decorator","AbsControl","Func","ccclass","property","SettingsManager","settings","bgm_flag","se_flag","shock_flag","damage_flag","isAutoCollect","isAutoSelectRogue","needCheckAssociation","ins","_instance","getInstance","setSetting","key","value","setItem","JSON","stringify","getSetting","loadSettings","getItem","parse"],"mappings":";;;;;;;;;;;;;;;;;;;;AAMSA,MAAAA,U,OAAAA,U;;AACAC,MAAAA,U,iBAAAA,U;;AACAC,MAAAA,I,iBAAAA,I;;;;;;AART;AACA;AACA;AACA;AACA;AACA;;;;;OAOM;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBJ,U;;iCAGjBK,e,WADZF,OAAO,CAAC,iBAAD,C,2BAAR,MACaE,eADb;AAAA;AAAA,oCACgD;AAAA;AAAA;AAAA,eAQpCC,QARoC,GAQF;AACtCC,YAAAA,QAAQ,EAAC,IAD6B;AAEtCC,YAAAA,OAAO,EAAC,IAF8B;AAGtCC,YAAAA,UAAU,EAAC,IAH2B;AAItCC,YAAAA,WAAW,EAAC,IAJ0B;AAKtCC,YAAAA,aAAa,EAAC,KALwB;AAMtCC,YAAAA,iBAAiB,EAAC,KANoB;AAOtCC,YAAAA,oBAAoB,EAAC;AAPiB,WARE;AAAA;;AAEvB,mBAAHC,GAAG,GAAG;AACpB,cAAI,QAAQ,KAAKC,SAAjB,EAA4B;AACxB,iBAAKA,SAAL,GAAiB,IAAIV,eAAJ,EAAjB;AACH;;AACD,iBAAO,KAAKU,SAAZ;AACH;;AAUwB,eAAXC,WAAW,GAAkB;AACvC,iBAAOX,eAAe,CAACU,SAAvB;AACH;;AACME,QAAAA,UAAU,CAACC,GAAD,EAAcC,KAAd,EAA8B;AAC3C,eAAKb,QAAL,CAAcY,GAAd,IAAqBC,KAArB;AACA;AAAA;AAAA,4BAAKC,OAAL,CAAaF,GAAb,EAAkBG,IAAI,CAACC,SAAL,CAAeH,KAAf,CAAlB;AACH;;AACMI,QAAAA,UAAU,CAACL,GAAD,EAAoB;AACjC,iBAAO,KAAKZ,QAAL,CAAcY,GAAd,CAAP;AACH;;AACMM,QAAAA,YAAY,GAAE;AACjB,eAAK,IAAIN,IAAT,IAAgB,KAAKZ,QAArB,EAA+B;AAC3B,gBAAIY,IAAG,IAAI,eAAX,EAA2B;AACvB,mBAAKD,UAAL,CAAgB,eAAhB,EAAgC,IAAhC;AACH,aAFD,CAGA;AACA;AACA;AALA,iBAMI;AACA,kBAAME,KAAK,GAAG;AAAA;AAAA,gCAAKM,OAAL,CAAaP,IAAb,CAAd;;AACA,kBAAIC,KAAK,KAAK,IAAd,EAAoB;AAChB,qBAAKb,QAAL,CAAcY,IAAd,IAAqBG,IAAI,CAACK,KAAL,CAAWP,KAAX,CAArB;AACH;AACJ;AACJ;AACJ;;AA1C2C,O,UAC7BJ,S","sourcesContent":["/*\r\n * @Date: 2024-07-15 09:49:54\r\n * @LastEditors: wzq\r\n * @program:设置界面开关控制管理\r\n * @LastEditTime: 2024-10-31 09:43:16\r\n */\r\nimport { _decorator, Component, Node } from 'cc';\r\nimport { AbsControl } from '../../../framework/base/IAbs';\r\nimport { Func } from '../../utils/Func';\r\nimport { ActivityData } from '../activity/ActivityData';\r\nimport { OpenFunctionMgr } from '../../../Common/component/OpenFunctionMgr';\r\nimport { tab } from '../../../Table/table_gen';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('SettingsManager')\r\nexport class SettingsManager extends AbsControl {\r\n    private static _instance: SettingsManager;\r\n    public static get ins() {\r\n        if (null == this._instance) {\r\n            this._instance = new SettingsManager();\r\n        }\r\n        return this._instance;\r\n    }\r\n    private settings:{[key:string]:boolean} = {\r\n        bgm_flag:true,\r\n        se_flag:true,\r\n        shock_flag:true,\r\n        damage_flag:true,\r\n        isAutoCollect:false,\r\n        isAutoSelectRogue:false,\r\n        needCheckAssociation:false,\r\n    };\r\n    public static getInstance():SettingsManager{\r\n        return SettingsManager._instance;\r\n    }\r\n    public setSetting(key: string, value: boolean) {\r\n        this.settings[key] = value;\r\n        Func.setItem(key, JSON.stringify(value))\r\n    }\r\n    public getSetting(key:string):boolean{\r\n        return this.settings[key]\r\n    }\r\n    public loadSettings(){\r\n        for (let key in this.settings) {\r\n            if (key == \"isAutoCollect\"){\r\n                this.setSetting(\"isAutoCollect\",true)\r\n            }\r\n            // else if(key===\"isAutoSelectRogue\"){\r\n            //     this.setSetting(\"isAutoSelectRogue\",OpenFunctionMgr.ins.checkFunctionIsOpen(tab.OpenFunctionName.OpenFunctionName_AutoSelectRogue))\r\n            // }\r\n            else{\r\n                const value = Func.getItem(key);\r\n                if (value !== null) {\r\n                    this.settings[key] = JSON.parse(value);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\n"]}