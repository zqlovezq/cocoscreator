{"version":3,"sources":["file:///C:/chickenStarClient/client/assets/scripts/framework/collision/CollisionShape.ts"],"names":["CollisionShape","CollisionBox","CollisionSphere","CollisionArc","ShapeTest","shaereArc","a","b","Vec3","subtract","center","getCenter","centerArc","getArcAngle","isSegmentCircleIntersect","x","y","angle","p1","p2","angleToDirection","multiplyScalar","getRaidus","add","polygonCircle","arcAngle","targetAngle","directionToAngle","isAngleBetween","Intersection2D","obbIntersect","sphereAABBDistance","sphereOBBDistance","MathAngle","ShapeType","constructor","type","radius","height","Box","size","z","scale","aabb","updateAABB","world","isIdentity","sx","sy","sz","cx","cy","cz","uX","m00","uY","m01","uZ","m02","vX","m03","vY","m04","vZ","m05","wX","m06","wY","m07","wZ","m08","cX","cY","cZ","absU","Math","abs","absV","absW","Sphere","heading","Arc","center1","center2","ShapeSupport","getHalfSize","getRotMat3","getRotation","lengthSqr","radii","test","raidus","shape"],"mappings":"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","sourcesContent":["import { Mat3, Vec2, Vec3, v2, v3 } from \"cc\";\nimport Intersection2D, { obbIntersect, sphereAABBDistance, sphereOBBDistance } from \"./AILib\";\nimport { CollisionBody } from \"./CollisionBody\";\nimport { MathAngle } from \"./Maths\";\nimport { CircleaArc } from \"./CircleaArc\";\n\n\nexport enum ShapeType {\n    /** 矩形 */\n    Box = 1,\n    /** 圆形 */\n    Sphere = 2,\n    /** 弧形、扇形 */\n    Arc = 4\n};\n\n\nexport abstract class CollisionShape {\n\n    radius = 0;\n    height = 0;\n    type = ShapeType.Box;\n    size = { x: 0, y: 0, z: 0 };\n    scale = { x: 1, y: 1, z: 1 };\n    center = { x: 0, y: 0, z: 0 };\n    aabb: Array<number> = [0, 0, 0, 0, 0, 0];\n\n    constructor(center: Vec3, type: ShapeType) {\n        this.type = type;\n        // this.isDirty = true;\n        this.center.x = center.x;\n        this.center.y = center.y;\n        this.center.z = center.z;\n    }\n\n\n    updateAABB(scale: Vec3, world: Mat3, isIdentity: boolean = true) {\n\n        const size = this.size;\n        const center = this.center;\n        const sx = scale.x, sy = scale.y, sz = scale.z;\n        const cx = center.x, cy = center.y, cz = center.z;\n        let x = size.x * 0.5, y = size.y * 0.5, z = size.z * 0.5;\n\n        const aabb = this.aabb;\n        if (!isIdentity) {\n\n            const uX = world.m00 * sx, uY = world.m01 * sx, uZ = world.m02 * sx;\n            const vX = world.m03 * sy, vY = world.m04 * sy, vZ = world.m05 * sy;\n            const wX = world.m06 * sz, wY = world.m07 * sz, wZ = world.m08 * sz;\n\n            // 计算新的中心点\n            const cX = uX * cx + vX * cy + wX * cz;\n            const cY = uY * cx + vY * cy + wY * cz;\n            const cZ = uZ * cx + vZ * cy + wZ * cz;\n\n            // 计算新的包围盒宽度、高度和深度\n            const absU = Math.abs(uX) * x + Math.abs(vX) * y + Math.abs(wX) * z;\n            const absV = Math.abs(uY) * x + Math.abs(vY) * y + Math.abs(wY) * z;\n            const absW = Math.abs(uZ) * x + Math.abs(vZ) * y + Math.abs(wZ) * z;\n\n            // 计算新的最小和最大顶点\n            aabb[0] = cX - absU, aabb[1] = cY - absV, aabb[2] = cZ - absW;\n            aabb[3] = cX + absU, aabb[4] = cY + absV, aabb[5] = cZ + absW;\n\n        } else {\n\n            x = Math.abs(x * sx);\n            y = Math.abs(y * sy);\n            z = Math.abs(z * sz);\n\n            aabb[0] = cx * sx - x;\n            aabb[1] = cy * sy - y;\n            aabb[2] = cz * sz - z;\n\n            aabb[3] = cx * sx + x;\n            aabb[4] = cy * sy + y;\n            aabb[5] = cz * sz + z;\n\n        }\n\n        return aabb;\n\n    }\n}\n\nexport class CollisionBox extends CollisionShape {\n\n    constructor(center: Vec3, size: Vec3) {\n        super(center, ShapeType.Box);\n\n        this.size.x = size.x;\n        this.size.y = size.y;\n        this.size.z = size.z;\n    }\n}\n\nexport class CollisionSphere extends CollisionShape {\n    constructor(center: Vec3, radius: number) {\n        super(center, ShapeType.Sphere);\n        this.radius = radius;\n\n        this.size.x = radius * 2;\n        this.size.y = radius * 2;\n        this.size.z = radius * 2;\n    }\n}\n\nexport class CollisionArc extends CollisionShape {\n    angle: number //开口角度\n    heading: number //指向\n    constructor(center: Vec3, radius: number, angle: number, heading: number) {\n        super(center, ShapeType.Arc);\n        this.radius = radius;\n\n        this.angle = angle\n        this.heading = heading\n\n        this.size.x = radius * 2;\n        this.size.y = radius * 2;\n        this.size.z = radius * 2;\n    }\n\n    getArcAngle() {\n        return this.angle\n    }\n}\n\n\n\nconst center = new Vec3();\nconst center1 = new Vec3();\nconst center2 = new Vec3();\n\nexport const ShapeSupport: Array<(a: CollisionBody, b: CollisionBody) => boolean> = [];\n\nShapeSupport[ShapeType.Box | ShapeType.Box] = function (a: CollisionBody, b: CollisionBody) {\n\n    //a,b 没有旋转,已进行AABB处理 , 直接返回 true\n    if (a.isIdentity && b.isIdentity) return true;\n\n    return obbIntersect(a.getCenter(), a.getHalfSize(), a.getRotMat3(), b.getCenter(), b.getHalfSize(), b.getRotMat3());\n}\n\nShapeSupport[ShapeType.Box | ShapeType.Sphere] = function (a: CollisionBody, b: CollisionBody) {\n\n    //a没有旋转当AABB处理 \n    if (a.isIdentity) {\n        // 转换到 aabb 坐标系下\n        Vec3.subtract(center, b.getCenter(), a.getCenter());\n        return sphereAABBDistance(center, b.getRaidus(), a.getHalfSize());\n    }\n\n    return sphereOBBDistance(b.getCenter(), b.getRaidus(), a.getCenter(), a.getRotation(), a.getHalfSize());\n}\n\nShapeSupport[ShapeType.Sphere | ShapeType.Sphere] = function (a: CollisionBody, b: CollisionBody) {\n\n    Vec3.subtract(center, b.getCenter(), a.getCenter());\n    let lengthSqr = center.lengthSqr();\n    let radii = a.getRaidus() + b.getRaidus();\n\n    return lengthSqr <= radii * radii;\n}\n\nShapeSupport[ShapeType.Box | ShapeType.Arc] = function (a: CollisionBody, b: CollisionBody) {\n\n    //a没有旋转当AABB处理 \n    if (a.isIdentity) {\n        // 转换到 aabb 坐标系下\n        Vec3.subtract(center, b.getCenter(), a.getCenter());\n        if (sphereAABBDistance(center, b.getRaidus(), a.getHalfSize())) {//和圆重叠\n            return centerArc(center, b.getArcAngle())\n        }\n        return false\n    }\n\n    return sphereOBBDistance(b.getCenter(), b.getRaidus(), a.getCenter(), a.getRotation(), a.getHalfSize());\n}\n\n\nShapeSupport[ShapeType.Sphere | ShapeType.Arc] = function (a: CollisionBody, b: CollisionBody) {\n    if (ShapeSupport[ShapeType.Sphere | ShapeType.Sphere](a, b)) { //先算圆是否重叠\n        return shaereArc(a, b)\n    }\n    return false\n}\n\n\nShapeSupport[ShapeType.Arc | ShapeType.Arc] = function (a: CollisionBody, b: CollisionBody) {\n    //应该不需要实现\n    return false\n}\nfunction shaereArc(a: CollisionBody, b: CollisionBody) {\n    Vec3.subtract(center, b.getCenter(), a.getCenter());\n    if (centerArc(center, b.getArcAngle())) {\n        return true\n    }\n    return isSegmentCircleIntersect(a, b, b.getArcAngle().x) || isSegmentCircleIntersect(a, b, b.getArcAngle().y)\n}\n\nfunction isSegmentCircleIntersect(a: CollisionBody, b: CollisionBody, angle: number): boolean {\n    let p1 = b.getCenter()\n\n    let p2 = MathAngle.angleToDirection(angle)\n    p2.multiplyScalar(b.getRaidus())\n    p2.add(p1)\n\n    return Intersection2D.polygonCircle([p1, p2], a.getCenter(), a.getRaidus());\n}\n\nfunction centerArc(center: Vec3, arcAngle: Vec3) {\n    let targetAngle = MathAngle.directionToAngle(center) + 180 //弧形到圆角度\n    return MathAngle.isAngleBetween(targetAngle, arcAngle.x, arcAngle.y)\n}\n\nexport class ShapeTest {\n    //a为矩形 or 圆形  ,b必定为圆形\n    static test(a: CollisionBody, b: CollisionBody, raidus: number) {\n        if (a.shape.type == ShapeType.Box) {\n            //a没有旋转当AABB处理 \n            if (a.isIdentity) {\n                // 转换到 aabb 坐标系下\n                Vec3.subtract(center, b.getCenter(), a.getCenter());\n                return sphereAABBDistance(center, raidus, a.getHalfSize());\n            }\n            return sphereOBBDistance(b.getCenter(), raidus, a.getCenter(), a.getRotation(), a.getHalfSize());\n        } else {\n            Vec3.subtract(center, b.getCenter(), a.getCenter());\n            let lengthSqr = center.lengthSqr();\n            let radii = a.getRaidus() + raidus\n\n            return lengthSqr <= radii * radii;\n        }\n    }\n}"]}