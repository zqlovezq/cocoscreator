{"version":3,"sources":["file:///C:/chickenStarClient/client/assets/scripts/framework/collision/CollisionBody.ts"],"names":["CollisionBody","Mat3","Quat","Vec3","Dirty","constructor","obj","id","mask","group","shape","object","priority","isDirty","lower","upper","aabb","isRemove","isRetrieve","isIdentity","inCollider","isIgnoreTrigger","raidus","center","rotMat3","halfSize","scale","arcPoint","isAgent","maxNeighbors","neighborDist","maxVelocity","newVelocity","prefVelocity","orcaLines","updateBound","NON","hasChangeDirty","v","velocity","x","y","aabbChange","S","s","getScale","z","R","rot","getRotation","fromQuat","equals","IDENTITY","updateAABB","getRotMat3","AABB","p","getPosition","clear","length","node","worldScale","worldPosition","worldRotation","getCenter","getRaidus","radius","Math","max","getHalfSize","size","getArcAngle","newShape","angle"],"mappings":";;;wGAMaA,a;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AANJC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,I,OAAAA,I;;AACZC,MAAAA,K,iBAAAA,K;;;;;;;;;+BAKIJ,a,GAAN,MAAMA,aAAN,CAAoB;AA0CvBK,QAAAA,WAAW,CAACC,GAAD,EAAuB;AAAA,eAxClCC,EAwCkC,GAxCrB,CAwCqB;AAAA,eAvClCC,IAuCkC,GAvCnB,CAuCmB;AAAA,eAtClCC,KAsCkC,GAtClB,CAsCkB;AAAA,eArClCC,KAqCkC,GArCV,IAqCU;AAAA,eApClCC,MAoCkC,GApCR,IAoCQ;AAAA,eAnClCC,QAmCkC,GAnCf,CAmCe;AAjClC;AAiCkC,eAhClCC,OAgCkC,GAhChB,IAAI,CAAJ,GAAQ,CAgCQ;AA9BlC;AA8BkC,eA7BlCC,KA6BkC,GA7BlB,CA6BkB;AAAA,eA5BlCC,KA4BkC,GA5BlB,CA4BkB;AAAA,eA3BlCC,IA2BkC,GA3BZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,CA2BY;AAzBlC;AAyBkC,eAxBlCC,QAwBkC,GAxBd,KAwBc;AAAA,eAvBlCC,UAuBkC,GAvBZ,IAuBY;AAAA,eAtBlCC,UAsBkC,GAtBZ,IAsBY;AAAA,eArBlCC,UAqBkC,GArBZ,KAqBY;AAAA,eApBlCC,eAoBkC,GApBP,KAoBO;AAlBlC;AAkBkC,eAjBlCC,MAiBkC,GAjBjB,CAiBiB;AAAA,eAhBlCC,MAgBkC,GAhBnB,IAAIpB,IAAJ,EAgBmB;AAAA,eAflCqB,OAekC,GAflB,IAAIvB,IAAJ,EAekB;AAAA,eAdlCwB,QAckC,GAdjB,IAAItB,IAAJ,EAciB;AAAA,eAblCuB,KAakC,GAbpB,IAAIvB,IAAJ,CAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,CAaoB;AAAA,eAZlCwB,QAYkC,GAZjB,IAAIxB,IAAJ,EAYiB;AATlC;AASkC,eARlCyB,OAQkC,GARf,KAQe;AARP;AAQO,eAPlCC,YAOkC,GAPX,CAOW;AAAA,eANlCC,YAMkC,GANX,CAMW;AANR;AAMQ,eALlCC,WAKkC,GALZ,CAKY;AALR;AAKQ,eAJlCC,WAIkC,GAJd,IAAI7B,IAAJ,EAIc;AAAA,eAHlC8B,YAGkC,GAHb,IAAI9B,IAAJ,EAGa;AAAA,eAFlC+B,SAEkC,GAFT,EAES;AAC9B,eAAKvB,MAAL,GAAcL,GAAd;AACH;;AAGD6B,QAAAA,WAAW,CAACtB,OAAD,EAA6B;AAAA,cAA5BA,OAA4B;AAA5BA,YAAAA,OAA4B,GAAX;AAAA;AAAA,gCAAMuB,GAAK;AAAA;;AAEpC,cAAIzB,MAAM,GAAG,KAAKA,MAAlB;AACAE,UAAAA,OAAO,IAAIF,MAAM,CAAC0B,cAAP,EAAX;;AAEA,cAAI,KAAKT,OAAT,EAAkB;AAEd,gBAAIU,CAAC,GAAG3B,MAAM,CAAC4B,QAAf;AACA,iBAAKP,WAAL,CAAiBQ,CAAjB,GAAqBF,CAAC,CAACE,CAAvB;AACA,iBAAKR,WAAL,CAAiBS,CAAjB,GAAqBH,CAAC,CAACG,CAAvB,CAJc,CAMd;AACA;AACA;AACH;;AAED,cAAI5B,OAAO,GAAG,CAAd,EAAiB;AAEb,gBAAI6B,UAAU,GAAG,KAAjB;AACA,gBAAMhC,KAAK,GAAG,KAAKA,KAAnB;;AAEA,gBAAIG,OAAO,GAAG;AAAA;AAAA,gCAAM8B,CAApB,EAAuB;AACnBD,cAAAA,UAAU,GAAG,IAAb;AACA,kBAAIE,CAAC,GAAG,KAAKC,QAAL,EAAR;AACA,mBAAKnB,KAAL,CAAWc,CAAX,GAAgBI,CAAC,CAACJ,CAAF,IAAO,CAAP,GAAWI,CAAC,CAACJ,CAAb,GAAiB,CAACI,CAAC,CAACJ,CAApC;AACA,mBAAKd,KAAL,CAAWe,CAAX,GAAgBG,CAAC,CAACH,CAAF,IAAO,CAAP,GAAWG,CAAC,CAACH,CAAb,GAAiB,CAACG,CAAC,CAACH,CAApC;AACA,mBAAKf,KAAL,CAAWoB,CAAX,GAAgBF,CAAC,CAACE,CAAF,IAAO,CAAP,GAAWF,CAAC,CAACE,CAAb,GAAiB,CAACF,CAAC,CAACE,CAApC;AACH;;AAED,gBAAIjC,OAAO,GAAG;AAAA;AAAA,gCAAMkC,CAApB,EAAuB;AACnB;AACA,mBAAK5B,UAAL,GAAkB,KAAlB;AACA,kBAAI6B,GAAG,GAAG,KAAKC,WAAL,EAAV;AACA,mBAAKzB,OAAL,CAAa0B,QAAb,CAAsBF,GAAtB,EAJmB,CAIS;;AAE5B,kBAAIA,GAAG,CAACG,MAAJ,CAAWjD,IAAI,CAACkD,QAAhB,EAA0B,MAA1B,CAAJ,EAAuC;AACnC,qBAAKjC,UAAL,GAAkB,IAAlB;AACH;;AAEDuB,cAAAA,UAAU,GAAG,IAAb;AACH;;AAED,gBAAIA,UAAJ,EAAgBhC,KAAK,CAAC2C,UAAN,CAAiB,KAAKR,QAAL,EAAjB,EAAkC,KAAKS,UAAL,EAAlC,EAAqD,KAAKnC,UAA1D;AAEhB,gBAAMoC,IAAI,GAAG,KAAKvC,IAAlB,CA5Ba,CA4BU;;AACvB,gBAAMA,IAAI,GAAGN,KAAK,CAACM,IAAnB,CA7Ba,CA6BY;;AACzB,gBAAMwC,CAAC,GAAG,KAAKC,WAAL,EAAV,CA9Ba,CA8BiB;;AAE9BF,YAAAA,IAAI,CAAC,CAAD,CAAJ,GAAUvC,IAAI,CAAC,CAAD,CAAJ,GAAUwC,CAAC,CAAChB,CAAtB;AACAe,YAAAA,IAAI,CAAC,CAAD,CAAJ,GAAUvC,IAAI,CAAC,CAAD,CAAJ,GAAUwC,CAAC,CAACf,CAAtB;AACAc,YAAAA,IAAI,CAAC,CAAD,CAAJ,GAAUvC,IAAI,CAAC,CAAD,CAAJ,GAAUwC,CAAC,CAACV,CAAtB;AAEAS,YAAAA,IAAI,CAAC,CAAD,CAAJ,GAAUvC,IAAI,CAAC,CAAD,CAAJ,GAAUwC,CAAC,CAAChB,CAAtB;AACAe,YAAAA,IAAI,CAAC,CAAD,CAAJ,GAAUvC,IAAI,CAAC,CAAD,CAAJ,GAAUwC,CAAC,CAACf,CAAtB;AACAc,YAAAA,IAAI,CAAC,CAAD,CAAJ,GAAUvC,IAAI,CAAC,CAAD,CAAJ,GAAUwC,CAAC,CAACV,CAAtB;AAEA,iBAAKjC,OAAL,GAAe,IAAI,CAAJ,GAAQ,CAAvB,CAxCa,CAwCa;;AAE1B,mBAAO,IAAP;AACH;;AAED,iBAAO,KAAP;AACH;;AAED6C,QAAAA,KAAK,GAAG;AACJ,eAAKhD,KAAL,GAAa,IAAb;AACA,eAAKC,MAAL,GAAc,IAAd;AACA,eAAKM,QAAL,GAAgB,KAAhB;AACA,eAAKG,UAAL,GAAkB,KAAlB;AACA,eAAKC,eAAL,GAAuB,KAAvB;AACA,eAAKa,SAAL,CAAeyB,MAAf,GAAwB,CAAxB;AACH,SAtHsB,CAyHvB;;;AACAL,QAAAA,UAAU,GAAG;AAAE,iBAAO,KAAK9B,OAAZ;AAAsB,SA1Hd,CA0He;;;AACtCqB,QAAAA,QAAQ,GAAG;AAAE,iBAAO,KAAKlC,MAAL,CAAYiD,IAAZ,CAAiBC,UAAxB;AAAqC,SA3H3B,CA2H4B;;;AACnDJ,QAAAA,WAAW,GAAG;AAAE,iBAAO,KAAK9C,MAAL,CAAYiD,IAAZ,CAAiBE,aAAxB;AAAwC,SA5HjC,CA4HkC;;;AACzDb,QAAAA,WAAW,GAAG;AAAE,iBAAO,KAAKtC,MAAL,CAAYiD,IAAZ,CAAiBG,aAAxB;AAAwC,SA7HjC,CA6HkC;;;AAKzDC,QAAAA,SAAS,GAAG;AAER,cAAI,KAAKnD,OAAL,GAAe,CAAnB,EAAsB;AAClB,iBAAKA,OAAL,IAAiB,CAAC,CAAlB;AAEA,gBAAMG,IAAI,GAAG,KAAKA,IAAlB;AACA,gBAAMO,MAAM,GAAG,KAAKA,MAApB;AACAA,YAAAA,MAAM,CAACiB,CAAP,GAAW,CAACxB,IAAI,CAAC,CAAD,CAAJ,GAAUA,IAAI,CAAC,CAAD,CAAf,IAAsB,GAAjC;AACAO,YAAAA,MAAM,CAACkB,CAAP,GAAW,CAACzB,IAAI,CAAC,CAAD,CAAJ,GAAUA,IAAI,CAAC,CAAD,CAAf,IAAsB,GAAjC;AACAO,YAAAA,MAAM,CAACuB,CAAP,GAAW,CAAC9B,IAAI,CAAC,CAAD,CAAJ,GAAUA,IAAI,CAAC,CAAD,CAAf,IAAsB,GAAjC;AACH;;AAED,iBAAO,KAAKO,MAAZ,CAZQ,CAYY;AACvB;;AAED0C,QAAAA,SAAS,GAAG;AAER,cAAI,KAAKpD,OAAL,GAAe,CAAnB,EAAsB;AAClB,iBAAKA,OAAL,IAAiB,CAAC,CAAlB;AAEA,gBAAMa,KAAK,GAAG,KAAKA,KAAnB;AACA,gBAAMJ,MAAM,GAAG,KAAKZ,KAAL,CAAWwD,MAA1B;AACA,iBAAK5C,MAAL,GAAc6C,IAAI,CAACC,GAAL,CAAS1C,KAAK,CAACc,CAAf,EAAkBd,KAAK,CAACe,CAAxB,EAA2Bf,KAAK,CAACoB,CAAjC,IAAsCxB,MAApD;AAEH;;AAED,iBAAO,KAAKA,MAAZ,CAXQ,CAWY;AACvB;;AAED+C,QAAAA,WAAW,GAAG;AAEV,cAAI,KAAKxD,OAAL,GAAe,CAAnB,EAAsB;AAClB,iBAAKA,OAAL,IAAiB,CAAC,CAAlB;AAEA,gBAAMa,KAAK,GAAG,KAAKA,KAAnB;AACA,gBAAM4C,IAAI,GAAG,KAAK5D,KAAL,CAAW4D,IAAxB;AACA,gBAAM7C,QAAQ,GAAG,KAAKA,QAAtB;AAEAA,YAAAA,QAAQ,CAACe,CAAT,GAAad,KAAK,CAACc,CAAN,GAAU8B,IAAI,CAAC9B,CAAf,GAAmB,GAAhC;AACAf,YAAAA,QAAQ,CAACgB,CAAT,GAAaf,KAAK,CAACe,CAAN,GAAU6B,IAAI,CAAC7B,CAAf,GAAmB,GAAhC;AACAhB,YAAAA,QAAQ,CAACqB,CAAT,GAAapB,KAAK,CAACoB,CAAN,GAAUwB,IAAI,CAACxB,CAAf,GAAmB,GAAhC;AAEH;;AAED,iBAAO,KAAKrB,QAAZ,CAfU,CAeY;AACzB;;AAED8C,QAAAA,WAAW,GAAG;AACV,cAAIC,QAAsB,GAAG,KAAK9D,KAAlC;;AACA,cAAI,KAAKmC,QAAL,GAAgBL,CAAhB,IAAqB,CAAzB,EAA4B;AACxB,iBAAKb,QAAL,CAAca,CAAd,GAAkB,KAAK7B,MAAL,CAAYiD,IAAZ,CAAiBa,KAAnC;AACA,iBAAK9C,QAAL,CAAcc,CAAd,GAAkB,KAAK9B,MAAL,CAAYiD,IAAZ,CAAiBa,KAAjB,GAAyBD,QAAQ,CAACC,KAApD;AACH,WAHD,MAGO;AAAC;AACJ,iBAAK9C,QAAL,CAAca,CAAd,GAAkB,OAAO,KAAK7B,MAAL,CAAYiD,IAAZ,CAAiBa,KAAjB,GAAyBD,QAAQ,CAACC,KAAzC,CAAlB;AACA,iBAAK9C,QAAL,CAAcc,CAAd,GAAkB,MAAM,KAAK9B,MAAL,CAAYiD,IAAZ,CAAiBa,KAAzC;AACH;;AACD,iBAAO,KAAK9C,QAAZ;AACH;;AA3LsB,O","sourcesContent":["import { Mat3, Quat, Vec3 } from \"cc\";\nimport { Dirty, CollisionObject } from \"./CollisionObject\";\nimport { Line } from \"./Maths\";\nimport { CollisionArc, CollisionShape } from \"./CollisionShape\";\n\n\nexport class CollisionBody {\n\n    id: number = 0;\n    mask: number = 0;\n    group: number = 0;\n    shape: CollisionShape = null;\n    object: CollisionObject = null;\n    priority: number = 0;\n\n    //脏区更新标记\n    isDirty: number = 1 | 2 | 4;\n\n    //缓存\n    lower: number = 0;\n    upper: number = 0;\n    aabb: Array<number> = [0, 0, 0, 0, 0, 0];\n\n    //状态\n    isRemove: boolean = false;\n    isRetrieve: boolean = true;\n    isIdentity: boolean = true;\n    inCollider: boolean = false;\n    isIgnoreTrigger: boolean = false\n\n    //缓存\n    raidus: number = 0;\n    center: Vec3 = new Vec3();\n    rotMat3: Mat3 = new Mat3();\n    halfSize: Vec3 = new Vec3();\n    scale: Vec3 = new Vec3(1, 1, 1);\n    arcPoint: Vec3 = new Vec3();\n\n\n    //Agent\n    isAgent: boolean = false;  //Agent 开关\n    maxNeighbors: number = 0;\n    neighborDist: number = 0; //物体半径\n    maxVelocity: number = 0;  //最大速度\n    newVelocity: Vec3 = new Vec3();\n    prefVelocity: Vec3 = new Vec3();\n    orcaLines: Array<Line> = [];\n\n    constructor(obj: CollisionObject) {\n        this.object = obj;\n    }\n\n\n    updateBound(isDirty: Dirty = Dirty.NON) {\n\n        let object = this.object;\n        isDirty |= object.hasChangeDirty();\n\n        if (this.isAgent) {\n\n            let v = object.velocity;\n            this.newVelocity.x = v.x;\n            this.newVelocity.y = v.y;\n\n            // let pv = this.prefVelocity;\n            // pv.x+= (v.x - pv.x)*0.75;\n            // pv.y+= (v.y - pv.y)*0.75;\n        }\n\n        if (isDirty > 0) {\n\n            let aabbChange = false;\n            const shape = this.shape;\n\n            if (isDirty & Dirty.S) {\n                aabbChange = true;\n                let s = this.getScale();\n                this.scale.x = (s.x >= 0 ? s.x : -s.x);\n                this.scale.y = (s.y >= 0 ? s.y : -s.y);\n                this.scale.z = (s.z >= 0 ? s.z : -s.z);\n            }\n\n            if (isDirty & Dirty.R) {\n                //旋转更新aabb\n                this.isIdentity = false;\n                let rot = this.getRotation();\n                this.rotMat3.fromQuat(rot); //计算缓存Mat3\n\n                if (rot.equals(Quat.IDENTITY, 0.0001)) {\n                    this.isIdentity = true;\n                }\n\n                aabbChange = true;\n            }\n\n            if (aabbChange) shape.updateAABB(this.getScale(), this.getRotMat3(), this.isIdentity);\n\n            const AABB = this.aabb;// world aabb\n            const aabb = shape.aabb; //local aabb\n            const p = this.getPosition(); //world postion\n\n            AABB[0] = aabb[0] + p.x;\n            AABB[1] = aabb[1] + p.y;\n            AABB[2] = aabb[2] + p.z;\n\n            AABB[3] = aabb[3] + p.x;\n            AABB[4] = aabb[4] + p.y;\n            AABB[5] = aabb[5] + p.z;\n\n            this.isDirty = 1 | 2 | 4; //设置脏区标记\n\n            return true;\n        }\n\n        return false;\n    }\n\n    clear() {\n        this.shape = null;\n        this.object = null;\n        this.isRemove = false;\n        this.inCollider = false;\n        this.isIgnoreTrigger = false\n        this.orcaLines.length = 0;\n    }\n\n\n    //body 坐标统一使用世界数据进行计算\n    getRotMat3() { return this.rotMat3; } //world rotate mat3\n    getScale() { return this.object.node.worldScale; } // world scale \n    getPosition() { return this.object.node.worldPosition; } //wold position\n    getRotation() { return this.object.node.worldRotation; } //world rotation\n\n\n\n\n    getCenter() {\n\n        if (this.isDirty & 1) {\n            this.isDirty &= (~1);\n\n            const aabb = this.aabb;\n            const center = this.center;\n            center.x = (aabb[0] + aabb[3]) * 0.5;\n            center.y = (aabb[1] + aabb[4]) * 0.5;\n            center.z = (aabb[2] + aabb[5]) * 0.5;\n        }\n\n        return this.center; //world center\n    }\n\n    getRaidus() {\n\n        if (this.isDirty & 2) {\n            this.isDirty &= (~2);\n\n            const scale = this.scale;\n            const raidus = this.shape.radius;\n            this.raidus = Math.max(scale.x, scale.y, scale.z) * raidus;\n\n        }\n\n        return this.raidus; //world raidus\n    }\n\n    getHalfSize() {\n\n        if (this.isDirty & 4) {\n            this.isDirty &= (~4);\n\n            const scale = this.scale;\n            const size = this.shape.size;\n            const halfSize = this.halfSize;\n\n            halfSize.x = scale.x * size.x * 0.5;\n            halfSize.y = scale.y * size.y * 0.5;\n            halfSize.z = scale.z * size.z * 0.5;\n\n        }\n\n        return this.halfSize; //world halfsize\n    }\n\n    getArcAngle() {\n        let newShape: CollisionArc = this.shape as CollisionArc;\n        if (this.getScale().x >= 0) {\n            this.arcPoint.x = this.object.node.angle\n            this.arcPoint.y = this.object.node.angle + newShape.angle\n        } else {//弧形翻转\n            this.arcPoint.x = 180 - (this.object.node.angle + newShape.angle)\n            this.arcPoint.y = 180 - this.object.node.angle\n        }\n        return this.arcPoint\n    }\n\n}\n"]}