{"version":3,"sources":["file:///C:/chickenStarClient/client/assets/scripts/logic/model/hero/HeroTeamControl.ts"],"names":["_decorator","HeroData","tab","RoleData","ccclass","property","HeroTeamControl","teamSlots","teamResonanceLevel","teamResonanceStar","_extraAttrMap","Map","_paintingAttrMap","_elixirAttrMap","_elixirCountMap","ins","_instance","initTeam","teamData","levelResonance","starResonance","i","length","data","heroClass","heroId","level","initPaintingAttr","setTeamExtraAttr","initElixirData","getElixirCountById","id","get","getElixirAttrByType","type","getElixirAttr","clear","elixir","has","count","set","forEach","value","key","ElixirTab","getData","ElixirTableById","getValue","k","AttrType","attrType","AttrValue","paintingData","paintings","heroItemId","star","addPaintingAttr","addAttr","heroTab","HeroTableById","aptitude","Aptitude","attrData","getPaintingAttr","SPAttrTypes","types","addAttrTypes","addAttrValus","values","j","obj","ScrollPaintingTable","HeroStar","SPAttrValue","getPaintingAttrGap","attrLast","attrNow","_types","_values","val1","push","setTeamResonanceLevel","lv","setTeamResonanceStar","getTeam","heroInTeam","_id","Number","inTeam","slot","getTeamIndexById","index","teamSlot","getHeroByClass","teamHeroInfo","getById","heroTable","Class","refreshTeam","newLevel","info","refreshBaseAttrMap","getMinTeamLevel","heroInfo","isSelf","heroClassTable","HeroClass","getMaxTeamLevel","getMinTeamStar","getClassTeamData","getResonanceLevelTab","next","HeroLevelResonanceTableById","getResonanceStarTab","HeroStarResonanceTableById","getResonanceAttrByType","isLevel","attr","AttrTypes","_type","getPaintingAttrByType","getPaintingAttrMap","getExtraAttr","_heroStarUpTable","heroStarUpTable","ExtraAttrTarget","ExtraAttrList","_attrTab","HeroAttrTableById","ExtraAttrTarget_All","HeroAttrType","_value","HeroAttrValue","mapValue"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;;AAEAC,MAAAA,Q,iBAAAA,Q;;AACAC,MAAAA,G,iBAAAA,G;;AAEAC,MAAAA,Q,iBAAAA,Q;;;;;;;;;OAIH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBL,U;;iCAGjBM,e,WADZF,OAAO,CAAC,iBAAD,C,2BAAR,MACaE,eADb,CAC6B;AAAA;AAAA,eACjBC,SADiB,GACc,EADd;AAAA,eAElBC,kBAFkB,GAEW,CAFX;AAEa;AAFb,eAGlBC,iBAHkB,GAGU,CAHV;AAGY;AAHZ,eAIjBC,aAJiB,GAI0B,IAAIC,GAAJ,EAJ1B;AAImC;AAJnC,eAKjBC,gBALiB,GAK6B,IAAID,GAAJ,EAL7B;AAKuC;AALvC,eAMjBE,cANiB,GAM2B,IAAIF,GAAJ,EAN3B;AAMqC;AANrC,eAOjBG,eAPiB,GAOsB,IAAIH,GAAJ,EAPtB;AAAA;;AASJ,mBAAHI,GAAG,GAAG;AACpB,cAAI,QAAQ,KAAKC,SAAjB,EAA4B;AACxB,iBAAKA,SAAL,GAAiB,IAAIV,eAAJ,EAAjB;AACH;;AACD,iBAAO,KAAKU,SAAZ;AACH;;AACMC,QAAAA,QAAQ,CAACC,QAAD,EAA8BC,cAA9B,EAAsDC,aAAtD,EAA6E;AACxF,eAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,QAAQ,CAACI,MAA7B,EAAqCD,CAAC,EAAtC,EAA0C;AACtC,gBAAIE,IAAqB,GAAGL,QAAQ,CAACG,CAAD,CAApC;;AACA,gBAAI,CAACE,IAAI,CAACC,SAAV,EAAqB;AACjBD,cAAAA,IAAI,CAACC,SAAL,GAAiBH,CAAC,GAAG,CAArB;AACAE,cAAAA,IAAI,CAACE,MAAL,GAAc,CAAd;AACAF,cAAAA,IAAI,CAACG,KAAL,GAAa,CAAb;AACH;;AACD,iBAAKnB,SAAL,CAAec,CAAf,IAAoBE,IAApB;AACH;;AACD,eAAKf,kBAAL,GAA0BW,cAA1B;AACA,eAAKV,iBAAL,GAAyBW,aAAzB;AACA,eAAKO,gBAAL;AACA,eAAKC,gBAAL;AACA,eAAKC,cAAL;AACH;;AACDC,QAAAA,kBAAkB,CAACC,EAAD,EAAa;AAC3B,iBAAO,KAAKjB,eAAL,CAAqBkB,GAArB,CAAyBD,EAAzB,IAA+B,KAAKjB,eAAL,CAAqBkB,GAArB,CAAyBD,EAAzB,CAA/B,GAA8D,CAArE;AACH;;AACDE,QAAAA,mBAAmB,CAACC,IAAD,EAAqB;AACpC,iBAAO,KAAKrB,cAAL,CAAoBmB,GAApB,CAAwBE,IAAxB,IAAgC,KAAKrB,cAAL,CAAoBmB,GAApB,CAAwBE,IAAxB,CAAhC,GAAgE,CAAvE;AACH,SApCwB,CAqCzB;;;AACAC,QAAAA,aAAa,GAAG;AACZ,iBAAO,KAAKtB,cAAZ;AACH;;AACDgB,QAAAA,cAAc,GAAG;AACb,eAAKf,eAAL,CAAqBsB,KAArB;;AACA,eAAKvB,cAAL,CAAoBuB,KAApB;;AACA,eAAK,IAAIf,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG;AAAA;AAAA,oCAASN,GAAT,CAAasB,MAAb,CAAoBd,IAApB,CAAyBD,MAA7C,EAAqDD,CAAC,EAAtD,EAA0D;AACtD,gBAAME,IAAuB,GAAG;AAAA;AAAA,sCAASR,GAAT,CAAasB,MAAb,CAAoBd,IAApB,CAAyBF,CAAzB,CAAhC;;AACA,gBAAG,KAAKP,eAAL,CAAqBwB,GAArB,CAAyBf,IAAI,CAACQ,EAA9B,CAAH,EAAqC;AACjC,kBAAGR,IAAI,CAACgB,KAAL,GAAW,KAAKzB,eAAL,CAAqBkB,GAArB,CAAyBT,IAAI,CAACQ,EAA9B,CAAd,EAAgD;AAC5C,qBAAKjB,eAAL,CAAqB0B,GAArB,CAAyBjB,IAAI,CAACQ,EAA9B,EAAkCR,IAAI,CAACgB,KAAvC;AACH;AACJ,aAJD,MAIK;AACD,mBAAKzB,eAAL,CAAqB0B,GAArB,CAAyBjB,IAAI,CAACQ,EAA9B,EAAkCR,IAAI,CAACgB,KAAvC;AACH;AACJ;;AACD,eAAKzB,eAAL,CAAqB2B,OAArB,CAA6B,CAACC,KAAD,EAAQC,GAAR,KAAgB;AACzC;AACA,gBAAMC,SAAS,GAAG;AAAA;AAAA,4BAAIC,OAAJ,GAAcC,eAAd,CAA8BC,QAA9B,CAAuCJ,GAAvC,CAAlB;;AACA,iBAAK,IAAIK,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,SAAS,CAACK,QAAV,CAAmB3B,MAAvC,EAA+C0B,CAAC,EAAhD,EAAoD;AAChD,kBAAME,QAAQ,GAAGN,SAAS,CAACK,QAAV,CAAmBD,CAAnB,CAAjB;;AACA,kBAAI,KAAKnC,cAAL,CAAoByB,GAApB,CAAwBY,QAAxB,CAAJ,EAAuC;AACnC,qBAAKrC,cAAL,CAAoB2B,GAApB,CAAwBU,QAAxB,EAAkC,KAAKrC,cAAL,CAAoBmB,GAApB,CAAwBkB,QAAxB,IAAoCR,KAAK,GAAGE,SAAS,CAACO,SAAV,CAAoBH,CAApB,CAA9E;AACH,eAFD,MAEO;AACH,qBAAKnC,cAAL,CAAoB2B,GAApB,CAAwBU,QAAxB,EAAkCR,KAAK,GAAGE,SAAS,CAACO,SAAV,CAAoBH,CAApB,CAA1C;AACH;AACJ;AACJ,WAXD;AAYH;AACD;;;AACArB,QAAAA,gBAAgB,GAAG;AACf,cAAIyB,YAAqC,GAAG;AAAA;AAAA,oCAASrC,GAAT,CAAasC,SAAzD;;AACA,eAAK,IAAIhC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG+B,YAAY,CAAC9B,MAAjC,EAAyCD,CAAC,EAA1C,EAA8C;AAC1C,gBAAMI,MAAM,GAAG2B,YAAY,CAAC/B,CAAD,CAAZ,CAAgBiC,UAA/B;AACA,gBAAMC,IAAI,GAAGH,YAAY,CAAC/B,CAAD,CAAZ,CAAgBkC,IAA7B;;AACA,gBAAGA,IAAH,EAAQ;AACJ,mBAAKC,eAAL,CAAqB/B,MAArB,EAA6B8B,IAA7B;AACH;AACJ;AACJ,SA7EwB,CA8EzB;;;AACAC,QAAAA,eAAe,CAAC/B,MAAD,EAAiB8B,IAAjB,EAA8BE,OAA9B,EAA4C;AACvD,cAAMC,OAAsB,GAAG;AAAA;AAAA,0BAAIb,OAAJ,GAAcc,aAAd,CAA4BZ,QAA5B,CAAqCtB,MAArC,CAA/B,CADuD,CAEvD;;AACA,cAAMmC,QAAQ,GAAGF,OAAO,CAACG,QAAzB;AACA,cAAMC,QAAQ,GAAG,KAAKC,eAAL,CAAqBH,QAArB,EAA+BL,IAA/B,CAAjB;AACA,cAAMS,WAAW,GAAGF,QAAQ,CAACG,KAA7B;;AACA,cAAGR,OAAH,EAAW;AACP,gBAAMS,YAAY,GAAGT,OAAO,CAACQ,KAA7B;AACA,gBAAME,YAAY,GAAGV,OAAO,CAACW,MAA7B;;AACA,iBAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,YAAY,CAAC5C,MAAjC,EAAyC+C,CAAC,EAA1C,EAA8C;AAC1C,kBAAMnC,IAAI,GAAGgC,YAAY,CAACG,CAAD,CAAzB;;AACA,kBAAI,KAAKzD,gBAAL,CAAsB0B,GAAtB,CAA0BJ,IAA1B,CAAJ,EAAqC;AACjC,qBAAKtB,gBAAL,CAAsB4B,GAAtB,CAA0BN,IAA1B,EAAgCiC,YAAY,CAACE,CAAD,CAAZ,GAAkB,KAAKzD,gBAAL,CAAsBoB,GAAtB,CAA0BE,IAA1B,CAAlD;AACH,eAFD,MAEO;AACH,qBAAKtB,gBAAL,CAAsB4B,GAAtB,CAA0BN,IAA1B,EAAgCiC,YAAY,CAACE,CAAD,CAA5C;AACH;AACJ;AACJ,WAXD,MAWK;AACD,iBAAK,IAAIA,EAAC,GAAG,CAAb,EAAgBA,EAAC,GAAGL,WAAW,CAAC1C,MAAhC,EAAwC+C,EAAC,EAAzC,EAA6C;AACzC,kBAAMnC,MAAI,GAAG8B,WAAW,CAACK,EAAD,CAAxB;;AACA,kBAAI,KAAKzD,gBAAL,CAAsB0B,GAAtB,CAA0BJ,MAA1B,CAAJ,EAAqC;AACjC,qBAAKtB,gBAAL,CAAsB4B,GAAtB,CAA0BN,MAA1B,EAAgC4B,QAAQ,CAACM,MAAT,CAAgBC,EAAhB,IAAqB,KAAKzD,gBAAL,CAAsBoB,GAAtB,CAA0BE,MAA1B,CAArD;AACH,eAFD,MAEO;AACH,qBAAKtB,gBAAL,CAAsB4B,GAAtB,CAA0BN,MAA1B,EAAgC4B,QAAQ,CAACM,MAAT,CAAgBC,EAAhB,CAAhC;AACH;AACJ;AACJ;AACJ;AACD;;;AACAN,QAAAA,eAAe,CAACH,QAAD,EAA6BL,IAA7B,EAA2C;AACtD,cAAKe,GAAG,GAAG,IAAX;;AACA,eAAK,IAAIjD,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG;AAAA;AAAA,0BAAIwB,OAAJ,GAAc0B,mBAAd,CAAkCjD,MAAtD,EAA8DD,CAAC,EAA/D,EAAmE;AAC/D,gBAAI+B,YAAqC,GAAG;AAAA;AAAA,4BAAIP,OAAJ,GAAc0B,mBAAd,CAAkClD,CAAlC,CAA5C;;AACA,gBAAIuC,QAAQ,KAAKR,YAAY,CAACS,QAA1B,IAAsCN,IAAI,KAAKH,YAAY,CAACoB,QAAhE,EAA0E;AACtEF,cAAAA,GAAG,GAAI;AACHL,gBAAAA,KAAK,EAAEb,YAAY,CAACY,WADjB;AAEHI,gBAAAA,MAAM,EAAEhB,YAAY,CAACqB;AAFlB,eAAP;AAIA;AACH;AACJ;;AACD,iBAAOH,GAAP;AACH;;AACDI,QAAAA,kBAAkB,CAACjD,MAAD,EAAiB8B,IAAjB,EAA8B;AAC5C,cAAMG,OAAsB,GAAG;AAAA;AAAA,0BAAIb,OAAJ,GAAcc,aAAd,CAA4BZ,QAA5B,CAAqCtB,MAArC,CAA/B,CAD4C,CAE5C;;AACA,cAAMmC,QAAQ,GAAGF,OAAO,CAACG,QAAzB;AACA,cAAMc,QAAQ,GAAGrE,eAAe,CAACS,GAAhB,CAAoBgD,eAApB,CAAoCH,QAApC,EAA8CL,IAAI,GAAC,CAAnD,CAAjB;AACA,cAAMqB,OAAO,GAAGtE,eAAe,CAACS,GAAhB,CAAoBgD,eAApB,CAAoCH,QAApC,EAA8CL,IAA9C,CAAhB;AACA,cAAMsB,MAAM,GAAG,EAAf;AACA,cAAMC,OAAO,GAAG,EAAhB;;AACA,eAAI,IAAIzD,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACuD,OAAO,CAACX,KAAR,CAAc3C,MAA5B,EAAmCD,CAAC,EAApC,EAAuC;AACnC,gBAAMa,IAAI,GAAG0C,OAAO,CAACX,KAAR,CAAc5C,CAAd,CAAb;AACA,gBAAM0D,IAAI,GAAGH,OAAO,CAACR,MAAR,CAAe/C,CAAf,CAAb;;AACA,gBAAGsD,QAAQ,CAACV,KAAT,CAAe5C,CAAf,CAAH,EAAqB;AACjBwD,cAAAA,MAAM,CAACG,IAAP,CAAY9C,IAAZ;;AACA4C,cAAAA,OAAO,CAACE,IAAR,CAAaD,IAAI,GAACJ,QAAQ,CAACP,MAAT,CAAgB/C,CAAhB,CAAlB;AACH,aAHD,MAGK;AACDwD,cAAAA,MAAM,CAACG,IAAP,CAAY9C,IAAZ;;AACA4C,cAAAA,OAAO,CAACE,IAAR,CAAaD,IAAb;AACH;AACJ;;AACD,cAAMT,GAAG,GAAI;AACTL,YAAAA,KAAK,EAAEY,MADE;AAETT,YAAAA,MAAM,EAAEU;AAFC,WAAb;AAIA,iBAAOR,GAAP;AACH;AACD;;;AACAW,QAAAA,qBAAqB,CAACC,EAAD,EAAa;AAC9B,eAAK1E,kBAAL,GAA0B0E,EAA1B;AACH;AACD;;;AACAC,QAAAA,oBAAoB,CAAC5B,IAAD,EAAe;AAC/B,eAAK9C,iBAAL,GAAyB8C,IAAzB;AACH;;AACM6B,QAAAA,OAAO,GAAG;AACb,iBAAO,KAAK7E,SAAZ;AACH;;AACM8E,QAAAA,UAAU,CAACtD,EAAD,EAAmC;AAChD,cAAMuD,GAAG,GAAGC,MAAM,CAACxD,EAAD,CAAlB;;AACA,cAAIyD,MAAM,GAAG,IAAb;;AACA,eAAK,IAAInE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKd,SAAL,CAAee,MAAnC,EAA2CD,CAAC,EAA5C,EAAgD;AAC5C,gBAAIoE,IAAI,GAAG,KAAKlF,SAAL,CAAec,CAAf,CAAX;;AACA,gBAAIoE,IAAI,CAAChE,MAAL,IAAe8D,MAAM,CAACE,IAAI,CAAChE,MAAN,CAAN,KAAsB6D,GAAzC,EAA8C;AAC1CE,cAAAA,MAAM,GAAGC,IAAT;AACA,qBAAOD,MAAP;AACH;AACJ;;AACD,iBAAOA,MAAP;AACH;;AACME,QAAAA,gBAAgB,CAAC3D,EAAD,EAAa;AAChC,cAAMuD,GAAG,GAAGC,MAAM,CAACxD,EAAD,CAAlB;;AACA,cAAI4D,KAAK,GAAG,CAAC,CAAb;;AACA,eAAK,IAAItE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKd,SAAL,CAAee,MAAnC,EAA2CD,CAAC,EAA5C,EAAgD;AAC5C,gBAAIuE,QAAQ,GAAG,KAAKrF,SAAL,CAAec,CAAf,CAAf;;AACA,gBAAIuE,QAAQ,CAACnE,MAAT,IAAmB8D,MAAM,CAACK,QAAQ,CAACnE,MAAV,CAAN,KAA0B6D,GAAjD,EAAsD;AAClDK,cAAAA,KAAK,GAAGtE,CAAR;AACA;AACH;AACJ;;AACD,iBAAOsE,KAAP;AACH;;AACME,QAAAA,cAAc,CAACrE,SAAD,EAAqC;AACtD,eAAK,IAAIH,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKd,SAAL,CAAee,MAAnC,EAA2CD,CAAC,EAA5C,EAAgD;AAC5C,gBAAIyE,YAAY,GAAG;AAAA;AAAA,sCAAS/E,GAAT,CAAagF,OAAb,CAAqB,KAAKxF,SAAL,CAAec,CAAf,EAAkBI,MAAvC,CAAnB;;AACA,gBAAI,CAACqE,YAAL,EAAmB;AACf;AACH;;AACD,gBAAIA,YAAY,CAACE,SAAb,CAAuBC,KAAvB,KAAiCzE,SAArC,EAAgD;AAC5C,qBAAOsE,YAAP;AACH;AACJ;AACJ;;AACMI,QAAAA,WAAW,CAACzE,MAAD,EAAsB0E,QAAtB,EAAyC;AACvD,cAAIC,IAAI,GAAG;AAAA;AAAA,oCAASrF,GAAT,CAAagF,OAAb,CAAqBtE,MAArB,CAAX;;AACA,cAAI,CAAC2E,IAAL,EAAW;AACP;AACH;;AACD,cAAI5E,SAAS,GAAG4E,IAAI,CAACJ,SAAL,CAAeC,KAA/B;;AACA,eAAK,IAAI5E,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKd,SAAL,CAAee,MAAnC,EAA2CD,CAAC,EAA5C,EAAgD;AAC5C,gBAAIyE,YAAY,GAAG;AAAA;AAAA,sCAAS/E,GAAT,CAAagF,OAAb,CAAqB,KAAKxF,SAAL,CAAec,CAAf,EAAkBI,MAAvC,CAAnB;;AACA,gBAAI,CAACqE,YAAL,EAAmB;AACf,mBAAKvF,SAAL,CAAec,CAAf,EAAkBI,MAAlB,GAA2B,CAA3B;AACA,mBAAKlB,SAAL,CAAec,CAAf,EAAkBK,KAAlB,GAA0B,CAA1B;AACA,mBAAKnB,SAAL,CAAec,CAAf,EAAkBG,SAAlB,GAA8BA,SAA9B;AACH,aAJD,MAIO;AACH,kBAAIsE,YAAY,CAACE,SAAb,CAAuBC,KAAvB,KAAiCzE,SAArC,EAAgD;AAC5C,qBAAKjB,SAAL,CAAec,CAAf,EAAkBI,MAAlB,GAA2B8D,MAAM,CAAC9D,MAAD,CAAjC;;AACA,oBAAI0E,QAAJ,EAAc;AACV,uBAAK5F,SAAL,CAAec,CAAf,EAAkBK,KAAlB,GAA0ByE,QAA1B;AACA;AAAA;AAAA,4CAASpF,GAAT,CAAagF,OAAb,CAAqBtE,MAArB,EAA6B4E,kBAA7B;AACH;AACJ;AACJ;AACJ;AACD;;;AACA,eAAKzE,gBAAL;AACH;AACD;;;AACO0E,QAAAA,eAAe,CAACC,QAAD,EAA6B;AAC/C,cAAI7E,KAAK,GAAG,GAAZ;;AACA,eAAK,IAAIL,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKd,SAAL,CAAee,MAAnC,EAA2CD,CAAC,EAA5C,EAAgD;AAC5C,gBAAIoE,IAAI,GAAG,KAAKlF,SAAL,CAAec,CAAf,CAAX;AACA,gBAAImF,MAAM,GAAG,KAAb;;AACA,gBAAGD,QAAH,EAAY;AACRC,cAAAA,MAAM,GAAGf,IAAI,CAACjE,SAAL,KAAiB+E,QAAQ,CAACE,cAAT,CAAwBC,SAAlD;AACH;;AACD,gBAAIjB,IAAI,CAAC/D,KAAL,GAAaA,KAAb,IAAoB,CAAC8E,MAAzB,EAAiC;AAC7B9E,cAAAA,KAAK,GAAG+D,IAAI,CAAC/D,KAAb;AACH;AACJ;;AACD,iBAAOA,KAAP;AACH;AACD;;;AACOiF,QAAAA,eAAe,GAAS;AAC3B,cAAIjF,KAAK,GAAG,CAAC,CAAb;;AACA,eAAK,IAAIL,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKd,SAAL,CAAee,MAAnC,EAA2CD,CAAC,EAA5C,EAAgD;AAC5C,gBAAIoE,IAAI,GAAG,KAAKlF,SAAL,CAAec,CAAf,CAAX;;AACA,gBAAIoE,IAAI,CAAC/D,KAAL,GAAaA,KAAjB,EAAwB;AACpBA,cAAAA,KAAK,GAAG+D,IAAI,CAAC/D,KAAb;AACH;AACJ;;AACD,iBAAOA,KAAP;AACH;AACD;;;AACOkF,QAAAA,cAAc,GAAW;AAC5B,cAAIrD,IAAI,GAAG,GAAX;;AACA,eAAK,IAAIlC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKd,SAAL,CAAee,MAAnC,EAA2CD,CAAC,EAA5C,EAAgD;AAC5C,gBAAIoE,IAAI,GAAG,KAAKlF,SAAL,CAAec,CAAf,CAAX;AACA,gBAAIkF,QAAQ,GAAG;AAAA;AAAA,sCAASxF,GAAT,CAAagF,OAAb,CAAqBN,IAAI,CAAChE,MAA1B,CAAf;;AACA,gBAAI8E,QAAQ,IAAIA,QAAQ,CAAChD,IAAT,GAAgBA,IAAhC,EAAsC;AAClCA,cAAAA,IAAI,GAAGgD,QAAQ,CAAChD,IAAhB;AACH;AACJ;;AACD,iBAAOA,IAAP;AACH;AACD;;;AACOsD,QAAAA,gBAAgB,CAACrF,SAAD,EAA4C;AAC/D,eAAK,IAAIH,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKd,SAAL,CAAee,MAAnC,EAA2CD,CAAC,EAA5C,EAAgD;AAC5C,gBAAIoE,IAAI,GAAG,KAAKlF,SAAL,CAAec,CAAf,CAAX;;AACA,gBAAIoE,IAAI,CAACjE,SAAL,KAAmBA,SAAvB,EAAkC;AAC9B,qBAAOiE,IAAP;AACH;AACJ;AACJ;AAGD;;;AACOqB,QAAAA,oBAAoB,CAACC,IAAD,EAAiB;AACxC,cAAIhF,EAAE,GAAGgF,IAAI,GAAG,KAAKvG,kBAAL,GAA0B,CAA7B,GAAiC,KAAKA,kBAAnD;AACA,iBAAO;AAAA;AAAA,0BAAIqC,OAAJ,GAAcmE,2BAAd,CAA0CjE,QAA1C,CAAmDhB,EAAnD,CAAP;AACH;AACD;;;AACOkF,QAAAA,mBAAmB,CAACF,IAAD,EAAiB;AACvC,cAAIhF,EAAE,GAAGgF,IAAI,GAAG,KAAKtG,iBAAL,GAAyB,CAA5B,GAAgC,KAAKA,iBAAlD;AACA,iBAAO;AAAA;AAAA,0BAAIoC,OAAJ,GAAcqE,0BAAd,CAAyCnE,QAAzC,CAAkDhB,EAAlD,CAAP;AACH;AACD;;AACA;;;AACOoF,QAAAA,sBAAsB,CAACjF,IAAD,EAAqBkF,OAArB,EAAuC;AAChE,cAAIC,IAAI,GAAGD,OAAO,GAAG,KAAKN,oBAAL,EAAH,GAAiC,KAAKG,mBAAL,EAAnD;;AACA,eAAK,IAAI5F,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGgG,IAAI,CAACC,SAAL,CAAehG,MAAnC,EAA2CD,CAAC,EAA5C,EAAgD;AAC5C,gBAAIkG,KAAK,GAAGF,IAAI,CAACC,SAAL,CAAejG,CAAf,CAAZ;;AACA,gBAAIkG,KAAK,IAAIrF,IAAb,EAAmB;AACf,qBAAOmF,IAAI,CAAClE,SAAL,CAAe9B,CAAf,CAAP;AACH;AACJ;AACJ;AACD;;;AACOmG,QAAAA,qBAAqB,CAACtF,IAAD,EAAqB;AAC7C,iBAAO,KAAKtB,gBAAL,CAAsBoB,GAAtB,CAA0BE,IAA1B,CAAP;AACH;AACD;;;AACOuF,QAAAA,kBAAkB,GAA6B;AAClD,iBAAO,KAAK7G,gBAAZ;AACH;AACD;;AACA;;;AACO8G,QAAAA,YAAY,GAAG;AAClB,iBAAO,KAAKhH,aAAZ;AACH;;AACMkB,QAAAA,gBAAgB,GAAG;AACtB,eAAKlB,aAAL,CAAmB0B,KAAnB;;AACA,eAAK,IAAIf,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKd,SAAL,CAAee,MAAnC,EAA2CD,CAAC,EAA5C,EAAgD;AAC5C,gBAAIkF,QAAQ,GAAG;AAAA;AAAA,sCAASxF,GAAT,CAAagF,OAAb,CAAqB,KAAKxF,SAAL,CAAec,CAAf,EAAkBI,MAAvC,CAAf;;AACA,gBAAI,CAAC8E,QAAL,EAAe;AACX;AACH;;AACD,gBAAIoB,gBAAgB,GAAGpB,QAAQ,CAACqB,eAAhC;;AACA,gBAAID,gBAAgB,CAACE,eAAjB,CAAiCvG,MAAjC,GAA0C,CAA9C,EAAiD;AAC7C,mBAAK,IAAID,EAAC,GAAG,CAAb,EAAgBA,EAAC,GAAGsG,gBAAgB,CAACE,eAAjB,CAAiCvG,MAArD,EAA6DD,EAAC,EAA9D,EAAkE;AAC9D,oBAAIa,IAAI,GAAGyF,gBAAgB,CAACE,eAAjB,CAAiCxG,EAAjC,CAAX;AACA,oBAAIqB,KAAK,GAAGiF,gBAAgB,CAACG,aAAjB,CAA+BzG,EAA/B,CAAZ;;AACA,oBAAI0G,QAAQ,GAAG;AAAA;AAAA,gCAAIlF,OAAJ,GAAcmF,iBAAd,CAAgCjF,QAAhC,CAAyCL,KAAzC,CAAf;;AACA,oBAAIR,IAAJ,EAAU;AACN,sBAAIA,IAAI,KAAK;AAAA;AAAA,kCAAI2F,eAAJ,CAAoBI,mBAAjC,EAAsD;AAClD,yBAAK,IAAIjF,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG+E,QAAQ,CAACG,YAAT,CAAsB5G,MAA1C,EAAkD0B,CAAC,EAAnD,EAAuD;AACnD,0BAAIuE,KAAK,GAAGQ,QAAQ,CAACG,YAAT,CAAsBlF,CAAtB,CAAZ;AACA,0BAAImF,MAAM,GAAGJ,QAAQ,CAACK,aAAT,CAAuBpF,CAAvB,CAAb;;AACA,0BAAI,KAAKtC,aAAL,CAAmB4B,GAAnB,CAAuBiF,KAAvB,CAAJ,EAAmC;AAC/B,4BAAIc,QAAQ,GAAG,KAAK3H,aAAL,CAAmBsB,GAAnB,CAAuBuF,KAAvB,CAAf;;AACA,4BAAIc,QAAJ,EAAc;AACV,+BAAK3H,aAAL,CAAmB8B,GAAnB,CAAuB+E,KAAvB,EAA8Bc,QAAQ,GAAGF,MAAzC;AACH;AACJ,uBALD,MAKO;AACH,6BAAKzH,aAAL,CAAmB8B,GAAnB,CAAuB+E,KAAvB,EAA8BY,MAA9B;AACH;AACJ;AACJ;AACJ;AACJ;AACJ;AACJ;AACJ;;AA7UwB,O,UAQVnH,S","sourcesContent":["import { _decorator } from 'cc';\r\nimport { proto } from 'client_protocol';\r\nimport { HeroData } from './HeroData';\r\nimport { tab } from '../../../Table/table_gen';\r\nimport { HeroInfo } from './HeroInfo';\r\nimport { RoleData } from '../role/RoleData';\r\nimport { Long } from 'protobufjs';\r\n\r\n\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('HeroTeamControl')\r\nexport class HeroTeamControl {\r\n    private teamSlots: proto.ITeamSlot[] = [];\r\n    public teamResonanceLevel: number = 0;//共鸣等级\r\n    public teamResonanceStar: number = 0;//共鸣星级\r\n    private _extraAttrMap: Map<tab.AttrType, number> = new Map()//英雄升星额外属性\r\n    private _paintingAttrMap: Map<tab.AttrType, number> = new Map();//绘卷属性\r\n    private _elixirAttrMap: Map<tab.AttrType, number> = new Map();//丹药属性\r\n    private _elixirCountMap: Map<number, number> = new Map();\r\n    private static _instance: HeroTeamControl;\r\n    public static get ins() {\r\n        if (null == this._instance) {\r\n            this._instance = new HeroTeamControl();\r\n        }\r\n        return this._instance;\r\n    }\r\n    public initTeam(teamData: proto.ITeamSlot[], levelResonance: number, starResonance: number) {\r\n        for (let i = 0; i < teamData.length; i++) {\r\n            let data: proto.ITeamSlot = teamData[i];\r\n            if (!data.heroClass) {\r\n                data.heroClass = i + 1;\r\n                data.heroId = 0;\r\n                data.level = 1;\r\n            }\r\n            this.teamSlots[i] = data;\r\n        }\r\n        this.teamResonanceLevel = levelResonance;\r\n        this.teamResonanceStar = starResonance;\r\n        this.initPaintingAttr();\r\n        this.setTeamExtraAttr();\r\n        this.initElixirData();\r\n    }\r\n    getElixirCountById(id: number) {\r\n        return this._elixirCountMap.get(id) ? this._elixirCountMap.get(id) : 0;\r\n    }\r\n    getElixirAttrByType(type: tab.AttrType) {\r\n        return this._elixirAttrMap.get(type) ? this._elixirAttrMap.get(type) : 0;\r\n    }\r\n    // 获取所有丹药属性\r\n    getElixirAttr() {\r\n        return this._elixirAttrMap;\r\n    }\r\n    initElixirData() {\r\n        this._elixirCountMap.clear();\r\n        this._elixirAttrMap.clear();\r\n        for (let i = 0; i < RoleData.ins.elixir.data.length; i++) {\r\n            const data: proto.IElixirData = RoleData.ins.elixir.data[i];\r\n            if(this._elixirCountMap.has(data.id)){\r\n                if(data.count>this._elixirCountMap.get(data.id)){\r\n                    this._elixirCountMap.set(data.id, data.count);\r\n                }\r\n            }else{\r\n                this._elixirCountMap.set(data.id, data.count);\r\n            }\r\n        }\r\n        this._elixirCountMap.forEach((value, key) => {\r\n            // 判断当前数量的丹药增加的属性\r\n            const ElixirTab = tab.getData().ElixirTableById.getValue(key);\r\n            for (let k = 0; k < ElixirTab.AttrType.length; k++) {\r\n                const attrType = ElixirTab.AttrType[k];\r\n                if (this._elixirAttrMap.has(attrType)) {\r\n                    this._elixirAttrMap.set(attrType, this._elixirAttrMap.get(attrType) + value * ElixirTab.AttrValue[k])\r\n                } else {\r\n                    this._elixirAttrMap.set(attrType, value * ElixirTab.AttrValue[k])\r\n                }\r\n            }\r\n        })\r\n    }\r\n    /* 初始化计算绘卷属性 */\r\n    initPaintingAttr() {\r\n        let paintingData: proto.IScrollPainting[] = RoleData.ins.paintings;\r\n        for (let i = 0; i < paintingData.length; i++) {\r\n            const heroId = paintingData[i].heroItemId;\r\n            const star = paintingData[i].star;\r\n            if(star){\r\n                this.addPaintingAttr(heroId, star);\r\n            }\r\n        }\r\n    }\r\n    // 添加绘卷属性\r\n    addPaintingAttr(heroId: number, star: number,addAttr?:any) {\r\n        const heroTab: tab.HeroTable = tab.getData().HeroTableById.getValue(heroId);\r\n        // 资质\r\n        const aptitude = heroTab.Aptitude;\r\n        const attrData = this.getPaintingAttr(aptitude, star);\r\n        const SPAttrTypes = attrData.types;\r\n        if(addAttr){\r\n            const addAttrTypes = addAttr.types;\r\n            const addAttrValus = addAttr.values;\r\n            for (let j = 0; j < addAttrTypes.length; j++) {\r\n                const type = addAttrTypes[j];\r\n                if (this._paintingAttrMap.has(type)) {\r\n                    this._paintingAttrMap.set(type, addAttrValus[j] + this._paintingAttrMap.get(type))\r\n                } else {\r\n                    this._paintingAttrMap.set(type, addAttrValus[j])\r\n                }\r\n            }\r\n        }else{\r\n            for (let j = 0; j < SPAttrTypes.length; j++) {\r\n                const type = SPAttrTypes[j];\r\n                if (this._paintingAttrMap.has(type)) {\r\n                    this._paintingAttrMap.set(type, attrData.values[j] + this._paintingAttrMap.get(type))\r\n                } else {\r\n                    this._paintingAttrMap.set(type, attrData.values[j])\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /* 通过资质|star查找绘卷id */\r\n    getPaintingAttr(aptitude: tab.HeroAptitude, star: number) {\r\n        let  obj = null;\r\n        for (let i = 0; i < tab.getData().ScrollPaintingTable.length; i++) {\r\n            let paintingData: tab.ScrollPaintingTable = tab.getData().ScrollPaintingTable[i];\r\n            if (aptitude === paintingData.Aptitude && star === paintingData.HeroStar) {\r\n                obj =  {\r\n                    types: paintingData.SPAttrTypes,\r\n                    values: paintingData.SPAttrValue\r\n                }\r\n                break;\r\n            }\r\n        }\r\n        return obj;\r\n    }\r\n    getPaintingAttrGap(heroId: number, star: number){\r\n        const heroTab: tab.HeroTable = tab.getData().HeroTableById.getValue(heroId);\r\n        // 资质\r\n        const aptitude = heroTab.Aptitude;\r\n        const attrLast = HeroTeamControl.ins.getPaintingAttr(aptitude, star-1);\r\n        const attrNow = HeroTeamControl.ins.getPaintingAttr(aptitude, star);\r\n        const _types = [];\r\n        const _values = [];\r\n        for(let i=0;i<attrNow.types.length;i++){\r\n            const type = attrNow.types[i];\r\n            const val1 = attrNow.values[i];\r\n            if(attrLast.types[i]){\r\n                _types.push(type);\r\n                _values.push(val1-attrLast.values[i]);\r\n            }else{\r\n                _types.push(type);\r\n                _values.push(val1);\r\n            }\r\n        }\r\n        const obj =  {\r\n            types: _types,\r\n            values: _values\r\n        }\r\n        return obj;\r\n    }\r\n    /* 设置共鸣等级 */\r\n    setTeamResonanceLevel(lv: number) {\r\n        this.teamResonanceLevel = lv;\r\n    }\r\n    /* 设置共鸣星级 */\r\n    setTeamResonanceStar(star: number) {\r\n        this.teamResonanceStar = star;\r\n    }\r\n    public getTeam() {\r\n        return this.teamSlots;\r\n    }\r\n    public heroInTeam(id: number|Long): proto.ITeamSlot {\r\n        const _id = Number(id)\r\n        let inTeam = null;\r\n        for (let i = 0; i < this.teamSlots.length; i++) {\r\n            let slot = this.teamSlots[i];\r\n            if (slot.heroId && Number(slot.heroId)===_id) {\r\n                inTeam = slot;\r\n                return inTeam\r\n            }\r\n        }\r\n        return inTeam\r\n    }\r\n    public getTeamIndexById(id: number) {\r\n        const _id = Number(id)\r\n        let index = -1;\r\n        for (let i = 0; i < this.teamSlots.length; i++) {\r\n            let teamSlot = this.teamSlots[i];\r\n            if (teamSlot.heroId && Number(teamSlot.heroId)===_id) {\r\n                index = i;\r\n                break;\r\n            }\r\n        }\r\n        return index\r\n    }\r\n    public getHeroByClass(heroClass: tab.HeroClass): HeroInfo {\r\n        for (let i = 0; i < this.teamSlots.length; i++) {\r\n            let teamHeroInfo = HeroData.ins.getById(this.teamSlots[i].heroId);\r\n            if (!teamHeroInfo) {\r\n                continue;\r\n            }\r\n            if (teamHeroInfo.heroTable.Class === heroClass) {\r\n                return teamHeroInfo;\r\n            }\r\n        }\r\n    }\r\n    public refreshTeam(heroId: number|Long, newLevel?: number) {\r\n        let info = HeroData.ins.getById(heroId);\r\n        if (!info) {\r\n            return;\r\n        }\r\n        let heroClass = info.heroTable.Class;\r\n        for (let i = 0; i < this.teamSlots.length; i++) {\r\n            let teamHeroInfo = HeroData.ins.getById(this.teamSlots[i].heroId);\r\n            if (!teamHeroInfo) {\r\n                this.teamSlots[i].heroId = 0;\r\n                this.teamSlots[i].level = 1;\r\n                this.teamSlots[i].heroClass = heroClass;\r\n            } else {\r\n                if (teamHeroInfo.heroTable.Class === heroClass) {\r\n                    this.teamSlots[i].heroId = Number(heroId);\r\n                    if (newLevel) {\r\n                        this.teamSlots[i].level = newLevel;\r\n                        HeroData.ins.getById(heroId).refreshBaseAttrMap();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        /* 刷新队伍的同时 刷新全体属性 */\r\n        this.setTeamExtraAttr();\r\n    }\r\n    /* 队伍的共鸣等级 */\r\n    public getMinTeamLevel(heroInfo?:HeroInfo): number {\r\n        let level = 999;\r\n        for (let i = 0; i < this.teamSlots.length; i++) {\r\n            let slot = this.teamSlots[i];\r\n            let isSelf = false;\r\n            if(heroInfo){\r\n                isSelf = slot.heroClass===heroInfo.heroClassTable.HeroClass;\r\n            }\r\n            if (slot.level < level&&!isSelf) {\r\n                level = slot.level;\r\n            }\r\n        }\r\n        return level\r\n    }\r\n    /* 队伍的最大等级 */\r\n    public getMaxTeamLevel():number{\r\n        let level = -1;\r\n        for (let i = 0; i < this.teamSlots.length; i++) {\r\n            let slot = this.teamSlots[i];\r\n            if (slot.level > level) {\r\n                level = slot.level;\r\n            }\r\n        }\r\n        return level\r\n    }\r\n    /* 队伍的共鸣星级 */\r\n    public getMinTeamStar(): number {\r\n        let star = 999;\r\n        for (let i = 0; i < this.teamSlots.length; i++) {\r\n            let slot = this.teamSlots[i];\r\n            let heroInfo = HeroData.ins.getById(slot.heroId);\r\n            if (heroInfo && heroInfo.star < star) {\r\n                star = heroInfo.star;\r\n            }\r\n        }\r\n        return star;\r\n    }\r\n    /* 获取职业等级 */\r\n    public getClassTeamData(heroClass: tab.HeroClass): proto.ITeamSlot {\r\n        for (let i = 0; i < this.teamSlots.length; i++) {\r\n            let slot = this.teamSlots[i];\r\n            if (slot.heroClass === heroClass) {\r\n                return slot\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    /* 队伍共鸣等级tab*/\r\n    public getResonanceLevelTab(next?: boolean) {\r\n        let id = next ? this.teamResonanceLevel + 1 : this.teamResonanceLevel;\r\n        return tab.getData().HeroLevelResonanceTableById.getValue(id);\r\n    }\r\n    /* 队伍共鸣星级tab */\r\n    public getResonanceStarTab(next?: boolean) {\r\n        let id = next ? this.teamResonanceStar + 1 : this.teamResonanceStar;\r\n        return tab.getData().HeroStarResonanceTableById.getValue(id);\r\n    }\r\n    /* 团队固定属性S */\r\n    /* 共鸣属性 */\r\n    public getResonanceAttrByType(type: tab.AttrType, isLevel: boolean) {\r\n        let attr = isLevel ? this.getResonanceLevelTab() : this.getResonanceStarTab();\r\n        for (let i = 0; i < attr.AttrTypes.length; i++) {\r\n            let _type = attr.AttrTypes[i];\r\n            if (_type == type) {\r\n                return attr.AttrValue[i];\r\n            }\r\n        }\r\n    }\r\n    /* 绘卷增加的全体固定属性 */\r\n    public getPaintingAttrByType(type: tab.AttrType) {\r\n        return this._paintingAttrMap.get(type);\r\n    }\r\n    /* 获得绘卷增加的固定属性 */\r\n    public getPaintingAttrMap():Map<tab.AttrType, number> {\r\n        return this._paintingAttrMap;\r\n    }\r\n    /* 团队固定属性E */\r\n    /* 英雄升星额外属性中增加的全体属性 */\r\n    public getExtraAttr() {\r\n        return this._extraAttrMap;\r\n    }\r\n    public setTeamExtraAttr() {\r\n        this._extraAttrMap.clear();\r\n        for (let i = 0; i < this.teamSlots.length; i++) {\r\n            let heroInfo = HeroData.ins.getById(this.teamSlots[i].heroId);\r\n            if (!heroInfo) {\r\n                continue;\r\n            }\r\n            let _heroStarUpTable = heroInfo.heroStarUpTable;\r\n            if (_heroStarUpTable.ExtraAttrTarget.length > 0) {\r\n                for (let i = 0; i < _heroStarUpTable.ExtraAttrTarget.length; i++) {\r\n                    let type = _heroStarUpTable.ExtraAttrTarget[i];\r\n                    let value = _heroStarUpTable.ExtraAttrList[i];\r\n                    let _attrTab = tab.getData().HeroAttrTableById.getValue(value);\r\n                    if (type) {\r\n                        if (type === tab.ExtraAttrTarget.ExtraAttrTarget_All) {\r\n                            for (let k = 0; k < _attrTab.HeroAttrType.length; k++) {\r\n                                let _type = _attrTab.HeroAttrType[k];\r\n                                let _value = _attrTab.HeroAttrValue[k];\r\n                                if (this._extraAttrMap.has(_type)) {\r\n                                    let mapValue = this._extraAttrMap.get(_type)\r\n                                    if (mapValue) {\r\n                                        this._extraAttrMap.set(_type, mapValue + _value);\r\n                                    }\r\n                                } else {\r\n                                    this._extraAttrMap.set(_type, _value);\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\n"]}