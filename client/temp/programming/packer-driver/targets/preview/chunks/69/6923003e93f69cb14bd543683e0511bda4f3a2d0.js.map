{"version":3,"sources":["file:///C:/chickenStarClient/client/assets/scripts/logic/model/activity/signGift/NewPlayerSignInPop.ts"],"names":["_decorator","error","ViewPop","EventMgr","proto","SignInRewardItem","ActivityControl","UIMgr","ViewName","tab","ActivityData","LocalEvent","ccclass","property","NewPlayerSignInPop","tabs","msg","curDay","onTouchItem","day","ins","requestGetDailyReward","id","onShow","getDailyRewardMsgByType","DailyRewardType","DailyRewardType_NewServer","getDailyRewrdItemsById","i","signItems","length","Index","index","activatedList","indexOf","state","rewardList","initView","register","onMsg","Ptl","GetDailyRewardRsp","on_s2c_GetDailyRewardRsp","unRegister","onDestroy","onClose","emitLocal","LocalMsg_QueueUI_deleteUI","updateView","updateState","code","CommonErrorCode","Succeed","data","show","viewName","CongratulationPop","rewards"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAuBC,MAAAA,K,OAAAA,K;;AACvBC,MAAAA,O,iBAAAA,O;;AACAC,MAAAA,Q,iBAAAA,Q;;AACAC,MAAAA,K,oBAAAA,K;;AACAC,MAAAA,gB,iBAAAA,gB;;AACAC,MAAAA,e,iBAAAA,e;;AACAC,MAAAA,K,iBAAAA,K;;AACAC,MAAAA,Q,iBAAAA,Q;;AAEAC,MAAAA,G,iBAAAA,G;;AACAC,MAAAA,Y,iBAAAA,Y;;AACAC,MAAAA,U,kBAAAA,U;;;;;;;;;OACH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBb,U;;oCAGjBc,kB,WADZF,OAAO,CAAC,oBAAD,C,UAEHC,QAAQ,CAAC;AAAA;AAAA,+CAAD,C,2BAFb,MACaC,kBADb;AAAA;AAAA,8BACgD;AAAA;AAAA;;AAAA;;AAAA,eAGpCC,IAHoC;AAAA,eAIpCC,GAJoC;AAAA,eAKpCC,MALoC,GAKpB,CALoB;;AAAA,eA4D5CC,WA5D4C,GA4D/BC,GAAD,IAAc;AACtB;AAAA;AAAA,oDAAgBC,GAAhB,CAAoBC,qBAApB,CAA0C,KAAKL,GAAL,CAASM,EAAnD,EAAsDH,GAAtD;AAEH,WA/D2C;AAAA;;AAM5CI,QAAAA,MAAM,GAAS;AACX,eAAKP,GAAL,GAAW;AAAA;AAAA,4CAAaI,GAAb,CAAiBI,uBAAjB,CAAyC;AAAA;AAAA,0BAAIC,eAAJ,CAAoBC,yBAA7D,CAAX;;AACA,cAAI,CAAC,KAAKV,GAAV,EAAe;AACXf,YAAAA,KAAK,CAAC,UAAD,EAAa;AAAA;AAAA,4BAAIwB,eAAJ,CAAoBC,yBAAjC,CAAL;AACA;AACH;;AACD,eAAKX,IAAL,GAAY;AAAA;AAAA,4CAAaK,GAAb,CAAiBO,sBAAjB,CAAwC,KAAKX,GAAL,CAASM,EAAjD,CAAZ;;AACA,eAAK,IAAIM,CAAS,GAAG,CAArB,EAAwBA,CAAC,GAAG,KAAKC,SAAL,CAAeC,MAA3C,EAAmDF,CAAC,EAApD,EAAwD;AACpD,gBAAIT,GAAG,GAAG,KAAKJ,IAAL,CAAUa,CAAV,EAAaG,KAAvB;AACA,gBAAIC,KAAK,GAAG,KAAKhB,GAAL,CAASiB,aAAT,CAAuBC,OAAvB,CAA+Bf,GAA/B,CAAZ;AACA,gBAAIgB,KAAK,GAAG,CAAZ;;AACA,gBAAIH,KAAK,IAAI,CAAb,EAAgB;AACZG,cAAAA,KAAK,GAAG,CAAR;AACH,aAFD,MAEO;AACHH,cAAAA,KAAK,GAAG,KAAKhB,GAAL,CAASoB,UAAT,CAAoBF,OAApB,CAA4Bf,GAA5B,CAAR;;AACA,kBAAIa,KAAK,IAAI,CAAb,EAAgB;AACZG,gBAAAA,KAAK,GAAG,CAAR;AACH;AACJ;;AACD,iBAAKN,SAAL,CAAeD,CAAf,EAAkBS,QAAlB,CAA2B,KAAKtB,IAAL,CAAUa,CAAV,CAA3B,EAAyCO,KAAzC,EAA+C,KAAKjB,WAApD;AAEH;AACJ;;AACDoB,QAAAA,QAAQ,GAAS;AACb;AAAA;AAAA,oCAASC,KAAT,CAAe;AAAA;AAAA,8BAAMC,GAAN,CAAUC,iBAAzB,EAA4C,KAAKC,wBAAjD,EAA2E,IAA3E;AACH;;AACDC,QAAAA,UAAU,GAAS;AACf,gBAAMA,UAAN;AACH;;AACSC,QAAAA,SAAS,GAAS;AACxB,gBAAMA,SAAN;AACH;;AACDC,QAAAA,OAAO,GAAS;AACZ,gBAAMA,OAAN;AACA;AAAA;AAAA,oCAASC,SAAT,CAAmB;AAAA;AAAA,wCAAWC,yBAA9B;AACH;;AACDC,QAAAA,UAAU,GAAG;AACT,eAAKhC,GAAL,GAAW;AAAA;AAAA,4CAAaI,GAAb,CAAiBI,uBAAjB,CAAyC;AAAA;AAAA,0BAAIC,eAAJ,CAAoBC,yBAA7D,CAAX;;AACA,eAAK,IAAIE,CAAS,GAAG,CAArB,EAAwBA,CAAC,GAAG,KAAKC,SAAL,CAAeC,MAA3C,EAAmDF,CAAC,EAApD,EAAwD;AACpD,gBAAIT,GAAG,GAAG,KAAKJ,IAAL,CAAUa,CAAV,EAAaG,KAAvB;AACA,gBAAIC,KAAK,GAAG,KAAKhB,GAAL,CAASiB,aAAT,CAAuBC,OAAvB,CAA+Bf,GAA/B,CAAZ;AACA,gBAAIgB,KAAK,GAAG,CAAZ;;AACA,gBAAIH,KAAK,IAAI,CAAb,EAAgB;AACZG,cAAAA,KAAK,GAAG,CAAR;AACH,aAFD,MAEO;AACHH,cAAAA,KAAK,GAAG,KAAKhB,GAAL,CAASoB,UAAT,CAAoBF,OAApB,CAA4Bf,GAA5B,CAAR;;AACA,kBAAIa,KAAK,IAAI,CAAb,EAAgB;AACZG,gBAAAA,KAAK,GAAG,CAAR;AACH;AACJ;;AACD,iBAAKN,SAAL,CAAeD,CAAf,EAAkBqB,WAAlB,CAA8Bd,KAA9B;AAEH;AACJ;;AAKD;AACAO,QAAAA,wBAAwB,CAAC1B,GAAD,EAAmC;AACvD,cAAI,CAACA,GAAG,CAACf,KAAL,IAAce,GAAG,CAACf,KAAJ,CAAUiD,IAAV,IAAkB;AAAA;AAAA,8BAAMC,eAAN,CAAsBC,OAA1D,EAAmE;AAC/D,gBAAGpC,GAAG,CAACqC,IAAJ,CAAS/B,EAAT,IAAa,KAAKN,GAAL,CAASM,EAAzB,EAA4B;AACxB;AAAA;AAAA,kCAAMF,GAAN,CAAUkC,IAAV,CAAe;AAAEC,gBAAAA,QAAQ,EAAE;AAAA;AAAA,0CAASC,iBAArB;AAAwCH,gBAAAA,IAAI,EAAErC,GAAG,CAACyC;AAAlD,eAAf;AACA,mBAAKT,UAAL;AACH;AAEJ;AACJ;;AAzE2C,O;;;;;iBAEP,E","sourcesContent":["import { _decorator, Component, error, Node } from 'cc';\r\nimport { ViewPop } from '../../../../framework/base/ViewPop';\r\nimport { EventMgr } from '../../../mgr/EventMgr';\r\nimport { proto } from 'client_protocol';\r\nimport { SignInRewardItem } from '../signIn/SignInRewardItem';\r\nimport { ActivityControl } from '../ActivityControl';\r\nimport { UIMgr } from '../../../mgr/UIMgr';\r\nimport { ViewName } from '../../../define/ViewDefine';\r\nimport { HeroDataControl } from '../../hero/herobag/HeroDataControl';\r\nimport { tab } from '../../../../Table/table_gen';\r\nimport { ActivityData } from '../ActivityData';\r\nimport { LocalEvent } from '../../../define/LocalEvent';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('NewPlayerSignInPop')\r\nexport class NewPlayerSignInPop extends ViewPop {\r\n    @property([SignInRewardItem])\r\n    signItems: Array<SignInRewardItem> = [];\r\n    private tabs: Array<tab.DailyRewardItemTable>;\r\n    private msg: proto.Msg_DailyRewardPush;\r\n    private curDay:number = 0;\r\n    onShow(): void {\r\n        this.msg = ActivityData.ins.getDailyRewardMsgByType(tab.DailyRewardType.DailyRewardType_NewServer);\r\n        if (!this.msg) {\r\n            error(\"签到数据错误==\", tab.DailyRewardType.DailyRewardType_NewServer)\r\n            return;\r\n        }\r\n        this.tabs = ActivityData.ins.getDailyRewrdItemsById(this.msg.id);\r\n        for (let i: number = 0; i < this.signItems.length; i++) {\r\n            let day = this.tabs[i].Index;\r\n            let index = this.msg.activatedList.indexOf(day);\r\n            let state = 0;\r\n            if (index >= 0) {\r\n                state = 1;\r\n            } else {\r\n                index = this.msg.rewardList.indexOf(day);\r\n                if (index >= 0) {\r\n                    state = 2;\r\n                }\r\n            }\r\n            this.signItems[i].initView(this.tabs[i], state,this.onTouchItem);\r\n\r\n        }\r\n    }\r\n    register(): void {\r\n        EventMgr.onMsg(proto.Ptl.GetDailyRewardRsp, this.on_s2c_GetDailyRewardRsp, this)\r\n    }\r\n    unRegister(): void {\r\n        super.unRegister();\r\n    }\r\n    protected onDestroy(): void {\r\n        super.onDestroy();\r\n    }\r\n    onClose(): void {\r\n        super.onClose();\r\n        EventMgr.emitLocal(LocalEvent.LocalMsg_QueueUI_deleteUI);\r\n    }\r\n    updateView() {\r\n        this.msg = ActivityData.ins.getDailyRewardMsgByType(tab.DailyRewardType.DailyRewardType_NewServer);\r\n        for (let i: number = 0; i < this.signItems.length; i++) {\r\n            let day = this.tabs[i].Index;\r\n            let index = this.msg.activatedList.indexOf(day);\r\n            let state = 0;\r\n            if (index >= 0) {\r\n                state = 1;\r\n            } else {\r\n                index = this.msg.rewardList.indexOf(day);\r\n                if (index >= 0) {\r\n                    state = 2;\r\n                }\r\n            }\r\n            this.signItems[i].updateState(state);\r\n\r\n        }\r\n    }\r\n    onTouchItem=(day:number)=>{\r\n        ActivityControl.ins.requestGetDailyReward(this.msg.id,day)\r\n\r\n    }\r\n    // 领取每日奖励\r\n    on_s2c_GetDailyRewardRsp(msg: proto.Msg_GetDailyRewardRsp) {\r\n        if (!msg.error || msg.error.code == proto.CommonErrorCode.Succeed) {\r\n            if(msg.data.id==this.msg.id){\r\n                UIMgr.ins.show({ viewName: ViewName.CongratulationPop, data: msg.rewards })\r\n                this.updateView();\r\n            }\r\n             \r\n        }\r\n    }\r\n}\r\n\r\n\r\n"]}