{"version":3,"sources":["file:///C:/chickenStarClient/client/assets/scripts/logic/model/equip/EquipmentView.ts"],"names":["_decorator","Color","error","instantiate","Label","log","Node","Prefab","Sprite","Toggle","ResourceItem","ViewScreen","EquipmentViewItem","HeroBagPainting","EquipData","ItemPoolMgr","EventMgr","proto","tab","GameUtil","EquipControl","ItemData","ShowItemNotEnoughTips","ShowTips","UIMgr","ViewName","LangMgr","EquipmentGrowthMaxItem","EquipmentItem","LocalEvent","RedMgr","RedDotType","ccclass","property","EquipmentView","currTag","currHeroClass","currEquipDatas","currEquipType","bagEquipNodes","heroPainting","currWearEquipInfo","currStrengthItemNode","currForgeItemNode","clickEquipSlot","type","initStrengthView","initForgeView","updateBagEquipByType","updateHero","heroClass","updateBagEquipByHeroClass","start","initView","register","onMsg","Ptl","ChangeEquipRsp","on_s2c_ChangeEquipRsp","EnhanceEquipRsp","on_s2c_EnhanceEquipRsp","RefineEquipRsp","on_s2c_RefineEquipRsp","onLocal","Item_Update","itemChange","EquipType","EquipType_Gloves","openData","equip","equipTable","Class","Type","HeroClass","HeroClass_Assassin","initHeroInfo","toggleNode","children","getComponent","isChecked","updateViewState","node","heroPaintingPrefab","parent","heroNode","com","initEquipView","onClickToggle","event","Number","bagNode","active","strengthNode","forgeNode","initBagView","getWearEquipByType","RefineLimit","ins","createEquipItem","forgeComItemParent","initData","isRefineLimit","forgeMaxNode","forgeNormalNode","forgeEquipViewItem2","forgeEquipViewItem","updateForgeCost","forgeEquipNode","notforgeEquipNode","cantforgeNode","node_red_strength","isRed","Equip_Strengthen","String","strengthComItemParent","strengthEquipNode","notStrengthEquipNode","isEnhanceLimit","strengthMaxNode","strengthNormalNode","strengthEquipViewItem2","strengthEquipViewItem","updateStrengthCost","moneys","enhanceUpgradeTable","Moneys","materials","Materials","moneysCount","getCount","materialCount","strengthCostGoldLab","string","convertNumber","color","fromHEX","getData","GetKeyValue_ConfigTable","InterfaceTxtRed","strengthCostGoldSpr","setTexture","ItemTableById","getValue","Icon","strengthCostStoneLab","strengthCostStoneSpr","forgeCostItemNode","removeAllChildren","refineUpgradeTable","length","forgeCostGoldLab","itemTab","forgeCostGoldSpr","forgeProbabilityLab","Odds","rewards","convertItemInfosByList","key","createItem","getEquipBagByHeroClass","heroClassTab","HeroClassTableByHeroClass","proSpr","proLab","getLab","removeBagEquipItem","bagInfos","push","sort","a","b","score","bagContentNode","noEquipNode","putEquipItem","onClickWearEquip","reqOnekeyEquips","onClickResolveEquip","show","viewName","EquipResolvePop","onClickMaster","EquipMasterPop","data","onClickForgetBtn","items","concat","isItemsEnough","reqRefineEquips","checkGoldMaterial","isGold","notEnoughtItemId","i","totalMaterialCount","itemId","num","CurrencyType","CurrencyType_Gold","ResourceBuyPop","onClickStrengthenBtn","strengthenOneEquip","currEquip","reqEnhanceEquips","onClickOnekeyStrengthen","currEquips","list","currWearEquipDatas","EquipType_Feather","isEqual","minLevel","enhanceLv","types","totals","itemsAddItems","msg","code","CommonErrorCode","Succeed","updateEquipSlot","onDisable","putItem","putCommonItem","indexOf","onDestroy","unTarget"],"mappings":"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","sourcesContent":["import { _decorator, Color, Component, error, instantiate, Label, log, Node, Prefab, profiler, Sprite, Toggle } from 'cc';\r\nimport { ResourceItem } from '../common/ResourceItem';\r\nimport { ViewScreen } from '../../../framework/base/ViewScreen';\r\nimport { EquipmentViewItem } from './EquipmentViewItem';\r\nimport { EquipInfo } from './EquipInfo';\r\nimport { HeroBagPainting } from '../hero/herobag/HeroBagPainting';\r\nimport { EquipData } from './EquipData';\r\nimport { ItemPoolMgr } from '../item/ItemPoolMgr';\r\nimport { CommonItem } from '../item/CommonItem';\r\nimport { EventMgr } from '../../mgr/EventMgr';\r\nimport { proto } from 'client_protocol';\r\nimport { tab } from '../../../Table/table_gen';\r\nimport { GameUtil } from '../../utils/GameUtil';\r\nimport { EquipControl } from './EquipControl';\r\nimport { ItemData } from '../item/ItemData';\r\nimport { ShowItemNotEnoughTips, ShowTips, UIMgr } from '../../mgr/UIMgr';\r\nimport { ViewName } from '../../define/ViewDefine';\r\nimport { LangMgr } from '../../mgr/LangMgr';\r\nimport { EquipmentGrowthMaxItem } from './EquipmentGrowthMaxItem';\r\nimport { EquipmentItem } from '../item/EquipmentItem';\r\nimport { LocalEvent } from '../../define/LocalEvent';\r\nimport { RedMgr } from '../../mgr/RedMgr';\r\nimport { RedDotType } from '../../red/RedDotType';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('EquipmentView')\r\nexport class EquipmentView extends ViewScreen {\r\n    @property(Node)\r\n    bagNode: Node = null;\r\n    @property(Node)\r\n    forgeNode: Node = null;\r\n    @property(Node)\r\n    strengthNode: Node = null;\r\n    @property(Label)\r\n    proLab: Label = null;\r\n    @property(Sprite)\r\n    proSpr: Sprite = null;\r\n    @property(Node)\r\n    noEquipNode: Node = null;\r\n    @property(Node)\r\n    bagContentNode: Node = null;\r\n    @property(ResourceItem)\r\n    resourceItem: ResourceItem = null;\r\n    @property(Sprite)\r\n    strengthCostGoldSpr: Sprite = null;\r\n    @property(Sprite)\r\n    strengthCostStoneSpr: Sprite = null;\r\n    @property(Label)\r\n    strengthCostGoldLab: Label = null;\r\n    @property(Label)\r\n    strengthCostStoneLab: Label = null;\r\n    @property(EquipmentViewItem)\r\n    strengthEquipViewItem: EquipmentViewItem = null;\r\n    @property(EquipmentGrowthMaxItem)\r\n    strengthEquipViewItem2: EquipmentGrowthMaxItem = null;\r\n    @property(Node)\r\n    strengthComItemParent: Node = null;\r\n    @property(Node)\r\n    notStrengthEquipNode: Node = null;\r\n    @property(Node)\r\n    strengthEquipNode: Node = null;\r\n\r\n\r\n    @property(Node)\r\n    forgeCostItemNode: Node = null;\r\n    @property(Label)\r\n    forgeCostGoldLab: Label = null;\r\n    @property(Sprite)\r\n    forgeCostGoldSpr: Sprite = null;\r\n    @property(Label)\r\n    forgeProbabilityLab: Label = null;\r\n    @property(EquipmentViewItem)\r\n    forgeEquipViewItem: EquipmentViewItem = null;\r\n    @property(EquipmentGrowthMaxItem)\r\n    forgeEquipViewItem2: EquipmentGrowthMaxItem = null;\r\n    @property(Node)\r\n    toggleNode: Node = null;\r\n    @property(Node)\r\n    forgeComItemParent: Node = null;\r\n    @property(Node)\r\n    notforgeEquipNode: Node = null;\r\n    @property(Node)\r\n    forgeEquipNode: Node = null;\r\n    @property(Node)\r\n    heroNode: Node = null;\r\n    @property(Prefab)\r\n    heroPaintingPrefab: Prefab = null;\r\n\r\n    @property(Node)\r\n    strengthMaxNode: Node = null;\r\n    @property(Node)\r\n    strengthNormalNode: Node = null;\r\n\r\n    @property(Node)\r\n    forgeMaxNode: Node = null;\r\n    @property(Node)\r\n    forgeNormalNode: Node = null;\r\n    @property(Node)\r\n    cantforgeNode: Node = null;\r\n    @property(Node)\r\n    node_red_strength:Node = null;\r\n    private currTag: number = 1;\r\n    private currHeroClass: number;\r\n    private currEquipDatas: Array<EquipInfo>;\r\n    private currEquipType: number;\r\n    private bagEquipNodes: Array<Node>;\r\n    private heroPainting: HeroBagPainting;\r\n    public currWearEquipInfo: EquipInfo;\r\n    private currStrengthItemNode: EquipmentItem;\r\n    private currForgeItemNode: EquipmentItem;\r\n\r\n\r\n\r\n\r\n    start() {\r\n        this.initView();\r\n    }\r\n    register() {\r\n        EventMgr.onMsg(proto.Ptl.ChangeEquipRsp, this.on_s2c_ChangeEquipRsp, this);\r\n        EventMgr.onMsg(proto.Ptl.EnhanceEquipRsp, this.on_s2c_EnhanceEquipRsp, this);\r\n        EventMgr.onMsg(proto.Ptl.RefineEquipRsp, this.on_s2c_RefineEquipRsp, this);\r\n        EventMgr.onLocal(LocalEvent.Item_Update, this.itemChange, this);\r\n    }\r\n    initView() {\r\n        this.currEquipType = tab.EquipType.EquipType_Gloves;\r\n        if (this.openData) {\r\n            if (this.openData[\"type\"]) {\r\n                this.currTag = this.openData['type'];\r\n                // this.updateViewState();\r\n            }\r\n            if (this.openData[\"equipInfo\"]) {\r\n                let equip: EquipInfo = this.openData[\"equipInfo\"];\r\n                this.currHeroClass = equip.equipTable.Class;\r\n                this.currEquipType = equip.equipTable.Type;\r\n            }\r\n            if (this.openData[\"heroClass\"]) {\r\n                this.currHeroClass = this.openData[\"heroClass\"];\r\n            }\r\n            if (this.openData[\"equipType\"]) {\r\n                this.currEquipType = this.openData[\"equipType\"];\r\n            }\r\n            //   UIMgr.ins.show({viewName:ViewName.EquipmentView,data:{\"type\":3,\"equipInfo\":this.euqipInfo}});\r\n        }\r\n        if (!this.currHeroClass) {\r\n            this.currHeroClass = tab.HeroClass.HeroClass_Assassin;\r\n        }\r\n        this.initHeroInfo();\r\n        this.toggleNode.children[this.currTag - 1].getComponent(Toggle).isChecked = true;\r\n\r\n        this.updateViewState();\r\n    }\r\n    initHeroInfo() {\r\n        let node: Node = instantiate(this.heroPaintingPrefab);\r\n        node.parent = this.heroNode;\r\n        let com = node.getComponent(HeroBagPainting);\r\n        com.initEquipView(this.currHeroClass, this.currEquipType, this.updateHero, this.clickEquipSlot);\r\n        this.heroPainting = com;\r\n\r\n    }\r\n\r\n    onClickToggle(event, type) {\r\n        this.currTag = Number(type);\r\n        this.updateViewState();\r\n\r\n    }\r\n    updateViewState() {\r\n        if (this.currTag == 1) {\r\n            //强化\r\n            this.bagNode.active = false;\r\n            this.strengthNode.active = true;\r\n            this.forgeNode.active = false;\r\n            this.initStrengthView();\r\n        } else if (this.currTag == 2) {\r\n            //淬炼\r\n            this.bagNode.active = false;\r\n            this.strengthNode.active = false;\r\n            this.forgeNode.active = true;\r\n            this.initForgeView();\r\n        } else if (this.currTag == 3) {\r\n            //背包\r\n            this.bagNode.active = true;\r\n            this.strengthNode.active = false;\r\n            this.forgeNode.active = false;\r\n\r\n            this.initBagView();\r\n        }\r\n    }\r\n\r\n    initBagView() {\r\n        this.updateBagEquipByHeroClass();\r\n\r\n    }\r\n\r\n    initForgeView() {\r\n        this.currWearEquipInfo = this.heroPainting.getWearEquipByType(this.currEquipType);\r\n        if (this.currWearEquipInfo) {\r\n            if (this.currWearEquipInfo.equipTable.RefineLimit > 0) {\r\n                if (!this.currForgeItemNode) {\r\n                    let node: Node = ItemPoolMgr.ins.createEquipItem(this.currWearEquipInfo, this.forgeComItemParent, false);\r\n                    this.currForgeItemNode = node.getComponent(EquipmentItem);\r\n                } else {\r\n                    this.currForgeItemNode.initData(this.currWearEquipInfo, false);\r\n                }\r\n                if (this.currWearEquipInfo.isRefineLimit()) {\r\n                    this.forgeMaxNode.active = true;\r\n                    this.forgeNormalNode.active = false;\r\n                    this.forgeEquipViewItem2.initData(this.currWearEquipInfo, 2);\r\n\r\n                } else {\r\n                    this.forgeMaxNode.active = false;\r\n                    this.forgeNormalNode.active = true;\r\n                    this.forgeEquipViewItem.initData(this.currWearEquipInfo, 2);\r\n                    this.updateForgeCost();\r\n                }\r\n\r\n                this.forgeEquipNode.active = true;\r\n                this.notforgeEquipNode.active = false;\r\n                this.cantforgeNode.active = false;\r\n            } else {\r\n                this.forgeEquipNode.active = false;\r\n                this.notforgeEquipNode.active = false;\r\n                this.cantforgeNode.active = true;\r\n            }\r\n\r\n\r\n        } else {\r\n\r\n            this.forgeEquipNode.active = false;\r\n            this.notforgeEquipNode.active = true;\r\n            this.cantforgeNode.active = false;\r\n        }\r\n\r\n    }\r\n    initStrengthView() {\r\n        this.node_red_strength.active = RedMgr.ins.isRed(RedDotType.Equip_Strengthen, String(this.currHeroClass))\r\n        this.currWearEquipInfo = this.heroPainting.getWearEquipByType(this.currEquipType);\r\n        if (this.currWearEquipInfo) {\r\n            if (!this.currStrengthItemNode) {\r\n                let node: Node = ItemPoolMgr.ins.createEquipItem(this.currWearEquipInfo, this.strengthComItemParent, false);\r\n                this.currStrengthItemNode = node.getComponent(EquipmentItem);\r\n                // node.getComponent(CommonItem).setIsTouchItem(false);\r\n            } else {\r\n                this.currStrengthItemNode.initData(this.currWearEquipInfo);\r\n            }\r\n            this.strengthEquipNode.active = true;\r\n            this.notStrengthEquipNode.active = false;\r\n\r\n\r\n            if (this.currWearEquipInfo.isEnhanceLimit()) {\r\n                this.strengthMaxNode.active = true;\r\n                this.strengthNormalNode.active = false;\r\n                this.strengthEquipViewItem2.initData(this.currWearEquipInfo, 1)\r\n            } else {\r\n                this.strengthMaxNode.active = false;\r\n                this.strengthNormalNode.active = true;\r\n                this.strengthEquipViewItem.initData(this.currWearEquipInfo, 1);\r\n                this.updateStrengthCost();\r\n\r\n            }\r\n\r\n\r\n        } else {\r\n            this.strengthEquipNode.active = false;\r\n            this.notStrengthEquipNode.active = true;\r\n\r\n        }\r\n\r\n    }\r\n    /**\r\n     * 刷新强化花费\r\n     */\r\n    updateStrengthCost() {\r\n        let moneys = this.currWearEquipInfo.enhanceUpgradeTable.Moneys;\r\n        let materials = this.currWearEquipInfo.enhanceUpgradeTable.Materials;\r\n\r\n        let moneysCount = ItemData.ins.getCount(moneys[0])\r\n        let materialCount = ItemData.ins.getCount(materials[0]);\r\n\r\n        this.strengthCostGoldLab.string = GameUtil.convertNumber(moneysCount) + \"/\" + GameUtil.convertNumber(moneys[1], true);\r\n        if (moneysCount >= moneys[1]) {\r\n            this.strengthCostGoldLab.color = new Color().fromHEX(\"#ffffff\");\r\n        } else {\r\n            this.strengthCostGoldLab.color = new Color().fromHEX(tab.getData().GetKeyValue_ConfigTable().InterfaceTxtRed);\r\n        }\r\n\r\n        this.strengthCostGoldSpr.setTexture(tab.getData().ItemTableById.getValue(moneys[0]).Icon);\r\n        this.strengthCostStoneLab.string = GameUtil.convertNumber(materialCount) + \"/\" + GameUtil.convertNumber(materials[1], true);\r\n        if (materialCount >= materials[1]) {\r\n            this.strengthCostStoneLab.color = new Color().fromHEX(\"#ffffff\");\r\n        } else {\r\n            this.strengthCostStoneLab.color = new Color().fromHEX(tab.getData().GetKeyValue_ConfigTable().InterfaceTxtRed);\r\n        }\r\n\r\n        this.strengthCostStoneSpr.setTexture(tab.getData().ItemTableById.getValue(materials[0]).Icon)\r\n\r\n    }\r\n\r\n    updateForgeCost() {\r\n        this.forgeCostItemNode.removeAllChildren();\r\n        let moneys = this.currWearEquipInfo.refineUpgradeTable.Moneys;\r\n        let materials = this.currWearEquipInfo.refineUpgradeTable.Materials;\r\n\r\n        if (moneys.length > 0) {\r\n            let moneysCount = ItemData.ins.getCount(moneys[0])\r\n            this.forgeCostGoldLab.string = GameUtil.convertNumber(moneysCount) + \"/\" + moneys[1];\r\n\r\n            if (moneysCount >= moneys[1]) {\r\n                this.forgeCostGoldLab.color = new Color().fromHEX(\"#ffffff\");\r\n            } else {\r\n                this.forgeCostGoldLab.color = new Color().fromHEX(tab.getData().GetKeyValue_ConfigTable().InterfaceTxtRed);\r\n            }\r\n\r\n            let itemTab = tab.getData().ItemTableById.getValue(moneys[0]);\r\n            if (itemTab) {\r\n                this.forgeCostGoldSpr.setTexture(itemTab.Icon);\r\n            } else {\r\n                error(\"item找不到id\", moneys)\r\n            }\r\n            this.forgeCostGoldSpr.node.active = true;\r\n            this.forgeCostGoldLab.node.active = true;\r\n        } else {\r\n            this.forgeCostGoldSpr.node.active = false;\r\n            this.forgeCostGoldLab.node.active = false;\r\n        }\r\n\r\n\r\n        this.forgeProbabilityLab.string = (this.currWearEquipInfo.refineUpgradeTable.Odds / 10000 * 100) + \"\"\r\n        let rewards = GameUtil.convertItemInfosByList(materials);\r\n        for (let key in rewards) {\r\n            ItemPoolMgr.ins.createItem(rewards[key], this.forgeCostItemNode);\r\n        }\r\n    }\r\n\r\n    updateBagEquipByHeroClass() {\r\n        this.currEquipDatas = EquipData.ins.getEquipBagByHeroClass(this.currHeroClass);\r\n        this.updateBagEquipByType();\r\n        let heroClassTab = tab.getData().HeroClassTableByHeroClass.getValue(this.currHeroClass)\r\n        this.proSpr.setTexture(heroClassTab.Icon);\r\n        this.proLab.string = LangMgr.getLab(tab.HeroClass[this.currHeroClass])\r\n\r\n    }\r\n    updateBagEquipByType() {\r\n        this.removeBagEquipItem();\r\n        let bagInfos: Array<EquipInfo> = [];\r\n        for (let key in this.currEquipDatas) {\r\n            if (this.currEquipDatas[key].equipTable.Type == this.currEquipType) {\r\n                bagInfos.push(this.currEquipDatas[key]);\r\n                // let node = ItemPoolMgr.ins.createEquipItem(this.currEquipDatas[key],this.bagContentNode);\r\n                // this.bagEquipNodes.push(node);\r\n            }\r\n        }\r\n        bagInfos.sort((a, b) => {\r\n            return b.score - a.score;\r\n        });\r\n        for (let key in bagInfos) {\r\n            let node = ItemPoolMgr.ins.createEquipItem(bagInfos[key], this.bagContentNode);\r\n            this.bagEquipNodes.push(node);\r\n        }\r\n\r\n        this.noEquipNode.active = this.bagEquipNodes.length == 0;\r\n\r\n\r\n    }\r\n    removeBagEquipItem() {\r\n        if (this.bagEquipNodes) {\r\n            for (let key in this.bagEquipNodes) {\r\n                ItemPoolMgr.ins.putEquipItem(this.bagEquipNodes[key]);\r\n            }\r\n        }\r\n        this.bagEquipNodes = [];\r\n    }\r\n\r\n\r\n    /**\r\n     * 点击穿戴装备\r\n     */\r\n    onClickWearEquip() {\r\n        EquipControl.ins.reqOnekeyEquips(this.currHeroClass);\r\n\r\n    }\r\n    /**\r\n     * 点击分解装备\r\n     */\r\n    onClickResolveEquip() {\r\n        UIMgr.ins.show({ viewName: ViewName.EquipResolvePop })\r\n    }\r\n    /**\r\n     * 点击强化大师\r\n     */\r\n    onClickMaster() {\r\n        // UIMgr.ins.show({viewName:ViewName.EquipFettersPop,data:{\"type\":2,\"level\":2}})\r\n        UIMgr.ins.show({ viewName: ViewName.EquipMasterPop, data: { \"heroClass\": this.currHeroClass, \"type\": 2 } });\r\n    }\r\n\r\n    /**\r\n     * 点击淬炼按钮\r\n     */\r\n    onClickForgetBtn() {\r\n        if (this.currWearEquipInfo) {\r\n\r\n            let items = GameUtil.convertItemInfosByList(this.currWearEquipInfo.refineUpgradeTable.Moneys);\r\n            items = items.concat(GameUtil.convertItemInfosByList(this.currWearEquipInfo.refineUpgradeTable.Materials));\r\n            if (ItemData.ins.isItemsEnough(items)) {\r\n                EquipControl.ins.reqRefineEquips(this.currHeroClass, this.currWearEquipInfo.equipTable.Type);\r\n            } else {\r\n                this.checkGoldMaterial(items);\r\n            }\r\n        }\r\n    }\r\n    checkGoldMaterial(items) {\r\n        let isGold = false;\r\n        let notEnoughtItemId = 0;\r\n        for (let i = 0; i < items.length; i++) {\r\n            let totalMaterialCount = ItemData.ins.getCount(items[i].itemId);\r\n            if (totalMaterialCount < items[i].num) {\r\n                if (items[i].itemId === tab.CurrencyType.CurrencyType_Gold) {\r\n                    isGold = true;\r\n                }else{\r\n                    notEnoughtItemId = items[i].itemId;\r\n                }\r\n            }\r\n        }\r\n        if (isGold) {\r\n            ShowItemNotEnoughTips(tab.CurrencyType.CurrencyType_Gold);\r\n            UIMgr.ins.show({ viewName: ViewName.ResourceBuyPop, data: { \"itemId\": tab.CurrencyType.CurrencyType_Gold } })\r\n        } else {\r\n            ShowItemNotEnoughTips(notEnoughtItemId);\r\n        }\r\n    }\r\n    /**\r\n     * 点击强化按钮\r\n     */\r\n    onClickStrengthenBtn() {\r\n        if (this.currWearEquipInfo) {\r\n            this.strengthenOneEquip(this.currWearEquipInfo);\r\n        }\r\n\r\n    }\r\n    private strengthenOneEquip(currEquip: EquipInfo) {\r\n        if (!currEquip.isEnhanceLimit()) {\r\n            let items = GameUtil.convertItemInfosByList(currEquip.enhanceUpgradeTable.Moneys);\r\n            items = items.concat(GameUtil.convertItemInfosByList(currEquip.enhanceUpgradeTable.Materials));\r\n            if (ItemData.ins.isItemsEnough(items)) {\r\n                EquipControl.ins.reqEnhanceEquips(this.currHeroClass, [currEquip.equipTable.Type]);\r\n            } else {\r\n                this.checkGoldMaterial(items);\r\n            }\r\n        } else {\r\n            log(\"强化超过改装备上线\");\r\n            //ShowTips(\"强化以达到上限\");\r\n            ShowTips(LangMgr.getLab(\"ui_equip_29\"))\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * 点击一键强化按钮\r\n     */\r\n    onClickOnekeyStrengthen() {\r\n        let currEquips = [];\r\n        let list = this.heroPainting.currWearEquipDatas;\r\n\r\n        for (let i: number = 0; i < list.length; i++) {\r\n            if (i < tab.EquipType.EquipType_Feather) {\r\n                currEquips.push(list[i]);\r\n            }\r\n        }\r\n        let isEqual = true;\r\n        let minLevel = -1;\r\n        for (let key in currEquips) {\r\n            if (currEquips[key] && !currEquips[key].isEnhanceLimit()) {\r\n                if (minLevel < 0) {\r\n                    minLevel = currEquips[key].enhanceLv;\r\n                } else if (currEquips[key].enhanceLv < minLevel) {\r\n                    minLevel = currEquips[key].enhanceLv;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (minLevel >= 0) {\r\n            let types = [];\r\n            let totals = [];\r\n            for (let key in currEquips) {\r\n                let currEquip = currEquips[key];\r\n                if (currEquip && !currEquip.isEnhanceLimit() && currEquip.enhanceLv == minLevel) {\r\n                    let items = GameUtil.convertItemInfosByList(currEquip.enhanceUpgradeTable.Moneys);\r\n                    items = items.concat(GameUtil.convertItemInfosByList(currEquip.enhanceUpgradeTable.Materials));\r\n                    totals = GameUtil.itemsAddItems(totals, items);\r\n                    if (ItemData.ins.isItemsEnough(totals)) {\r\n                        types.push(currEquip.equipTable.Type);\r\n                    } else {\r\n                        continue;\r\n                    }\r\n                }\r\n            }\r\n            if (types.length > 0) {\r\n                EquipControl.ins.reqEnhanceEquips(this.currHeroClass, types);\r\n            } else {\r\n                //ShowTips(\"一键没有可强化的装备\")\r\n                ShowTips(LangMgr.getLab(\"ui_equip_30\"))\r\n            }\r\n        } else {\r\n            ShowTips(LangMgr.getLab(\"ui_equip_30\"))\r\n        }\r\n    }\r\n\r\n\r\n    clickEquipSlot = (type: number) => {\r\n        this.currEquipType = type;\r\n        if (this.currTag == 1) {\r\n            this.initStrengthView();\r\n        } else if (this.currTag == 2) {\r\n            this.initForgeView();\r\n        } else {\r\n            this.updateBagEquipByType();\r\n        }\r\n\r\n    }\r\n    updateHero = (heroClass: number) => {\r\n        this.currHeroClass = heroClass;\r\n        this.updateBagEquipByHeroClass();\r\n\r\n    }\r\n\r\n    /**\r\n     * 替换装备成功\r\n     * @param msg \r\n     */\r\n    on_s2c_ChangeEquipRsp(msg: proto.Msg_ChangeEquipRsp) {\r\n        if (msg.error.code == proto.CommonErrorCode.Succeed) {\r\n            this.updateBagEquipByHeroClass();\r\n            this.heroPainting.updateEquipSlot();\r\n        }\r\n    }\r\n    /**\r\n    * 强化装备成功\r\n    * @param msg \r\n    */\r\n    on_s2c_EnhanceEquipRsp(msg: proto.Msg_EnhanceEquipRsp) {\r\n        if (msg.error.code == proto.CommonErrorCode.Succeed) {\r\n            this.heroPainting.updateEquipSlot();\r\n            this.initStrengthView();\r\n\r\n        }\r\n    }\r\n    on_s2c_RefineEquipRsp(msg: proto.Msg_RefineEquipRsp) {\r\n        if (msg.error.code == proto.CommonErrorCode.Succeed) {\r\n            this.heroPainting.updateEquipSlot();\r\n            this.initForgeView();\r\n\r\n        }\r\n    }\r\n    protected onDisable(): void {\r\n        this.removeBagEquipItem();\r\n        if (this.currForgeItemNode) {\r\n            this.currForgeItemNode.putItem();\r\n        }\r\n        if (this.currStrengthItemNode) {\r\n            this.currStrengthItemNode.putItem();\r\n        }\r\n        this.currForgeItemNode = null;\r\n        this.currStrengthItemNode = null;\r\n        for (let node of this.forgeCostItemNode.children) {\r\n            ItemPoolMgr.ins.putCommonItem(node);\r\n        }\r\n    }\r\n    itemChange(items: Array<number>) {\r\n        if (this.currTag == 1) {\r\n\r\n            let moneys = this.currWearEquipInfo.enhanceUpgradeTable.Moneys;\r\n            let materials = this.currWearEquipInfo.enhanceUpgradeTable.Materials;\r\n            if (items.indexOf(moneys[0]) > -1 || items.indexOf(materials[0]) > -1) {\r\n                this.updateStrengthCost();\r\n            }\r\n\r\n\r\n\r\n        }\r\n    }\r\n    protected onDestroy(): void {\r\n        EventMgr.unTarget(this);\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n"]}