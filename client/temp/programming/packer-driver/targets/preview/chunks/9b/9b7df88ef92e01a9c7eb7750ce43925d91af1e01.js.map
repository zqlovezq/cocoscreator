{"version":3,"sources":["file:///C:/chickenStarClient/client/assets/scripts/logic/fight/pvp/obj/PvpObj.ts"],"names":["_decorator","Component","UITransform","Vec3","MathAngle","Avatar","EventMgr","FightEvent","tab","ccclass","property","PvpObjType","tempPos","PvpObj","objId","objType","default","velocity","voAngle","speed","isRecycle","isDead","center","configTab","avatar","_animationId","onLoad","node","addComponent","recycle","emitFight","Pvp_recycle","reset","set","ZERO","setBounds","ids","bound","getData","BoundTableById","getValue","Type","BoundType","BoundType_Circle","x","Parameters","y","BoundType_Rectangle","setPosition","position","setAngle","angle","addAngle","setScale","scale","getRotation","rotation","getPosition","getScale","traceDirection","tmpstartPos","tmptargetPos","subtract","normalize","setVelocity","init","create","addChild","onDestroy","unscheduleAllCallbacks","getVoAngle","ve","directionToAngle","multiplyScalar","setVelocityAngle","angleToDirection","playAnim","animId","fb","setCb","setAnimationId","updateFrame","dt"],"mappings":"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","sourcesContent":["import { _decorator, ccenum, Component, UITransform, v3, Vec3, view } from 'cc';\nimport { MathAngle } from '../../../../framework/collision/Maths';\nimport { AbsMove } from '../../base/move/AbsMove';\nimport { Avatar } from '../../animation/Avatar';\nimport { EventMgr } from '../../../mgr/EventMgr';\nimport { FightEvent } from '../../define/FightEvent';\nimport { ShapeType } from '../../../../framework/collision/CollisionShape';\nimport { tab } from '../../../../Table/table_gen';\nconst { ccclass, property } = _decorator;\n\n/** 战斗对象类型 */\nexport enum PvpObjType {\n    /** 空 */\n    default = 0,\n    /** 角色 */\n    role = 1,\n    /** 子弹 */\n    bullet = 2,\n}\nconst tempPos = new Vec3()\n\n@ccclass('PvpObj')\nexport class PvpObj extends Component {\n    objId: number = 0\n    objType: PvpObjType = PvpObjType.default\n    velocity: Vec3 = new Vec3(); //当前速度\n    voAngle: number = 0 //vo角度\n    speed: number = 0\n    isRecycle: boolean = false\n    isDead: boolean = false\n    center: Vec3 = new Vec3()\n    configTab: any\n    avatar: Avatar\n    _animationId: number = 0\n\n    onLoad() {\n        this.node.addComponent(UITransform)\n\n    }\n    /** 回收 */\n    recycle() {\n        EventMgr.emitFight(FightEvent.Pvp_recycle, this)\n    }\n    reset() {\n        this.avatar.recycle()\n        this.avatar = null\n        this._animationId = 0\n        this.isDead = false\n        this.velocity.set(Vec3.ZERO)\n        this.voAngle = 0\n        this.objId = 0\n        this.center.set(Vec3.ZERO)\n    }\n\n    setBounds(ids: number[]) {\n        let bound = tab.getData().BoundTableById.getValue(ids[0] || 1)\n        if (bound.Type == tab.BoundType.BoundType_Circle) {\n            this.center.x = bound.Parameters[0]\n            this.center.y = bound.Parameters[1]\n        } else if (bound.Type == tab.BoundType.BoundType_Rectangle) {\n            this.center.x = bound.Parameters[0]\n            this.center.y = bound.Parameters[1]\n\n        }\n    }\n\n\n    //同步位置到body\n    setPosition(position: Vec3) {\n        this.node.position = position;\n    }\n\n\n    setAngle(angle: number) {\n        this.node.angle = angle\n    }\n\n    addAngle(angle: number) {\n        this.setAngle(this.node.angle + angle)\n    }\n\n    //同步缩放到body\n    setScale(scale: Vec3) {\n        this.node.scale = scale;\n    }\n\n    getRotation() { return this.node.rotation; }\n    getPosition() { return this.node.position; }\n    getScale() { return this.node.scale; }\n\n    traceDirection(tmpstartPos: Vec3, tmptargetPos: Vec3) {\n        Vec3.subtract(tempPos, tmptargetPos, tmpstartPos);\n        tempPos.normalize()\n        this.setVelocity(tempPos)\n    }\n\n    init() {\n        this.avatar = Avatar.create()\n        this.node.addChild(this.avatar.node)\n    }\n\n    onDestroy() {\n        this.unscheduleAllCallbacks();\n    }\n\n    getVoAngle(): number {\n        return this.voAngle\n    }\n\n    setVelocity(ve: Vec3) {\n        this.voAngle = MathAngle.directionToAngle(ve)\n        ve.multiplyScalar(this.speed)\n        this.velocity.set(ve)\n    }\n\n    setVelocityAngle(angle: number) {\n        this.voAngle = angle\n        MathAngle.angleToDirection(angle, this.velocity)\n        this.velocity.multiplyScalar(this.speed)\n    }\n\n    playAnim(animId: number, fb?: Function) {\n        if (this._animationId == animId) {\n            return\n        }\n        this._animationId = animId\n        if (animId == 0) {\n            fb && fb()\n            return\n        }\n        this.avatar.setCb(fb)\n        this.avatar.setAnimationId(animId)\n    }\n\n    updateFrame(dt: number) {\n\n    }\n}\n\n"]}