{"version":3,"sources":["file:///C:/chickenStarClient/client/assets/scripts/logic/model/equip/EquipFettersPop.ts"],"names":["_decorator","instantiate","Label","Node","Prefab","Sprite","ViewPop","LangMgr","EquipData","tab","RareBookStarUpItem","ccclass","property","EquipFettersPop","register","onShow","openData","type","level","titleIconName","tilteKey","table","ins","getHeroMasterTableByTypeAndLevel","lastTable","titleSpr","setTexture","titleLab2","string","getLab","titleLab1","lastlevelLab","getCombineString","currlevelLab","attrMaps","Map","atts","AttrList","key","item","getData","EquipAttrTableById","getValue","info","get","AttrType","next","Base","set","value","forEach","vlaue","itemPrefab","parent","layoutNode","getComponent","initView"],"mappings":"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","sourcesContent":["import { _decorator, Component, instantiate, Label, Node, Prefab, Sprite } from 'cc';\r\nimport { ViewPop } from '../../../framework/base/ViewPop';\r\nimport { LangMgr } from '../../mgr/LangMgr';\r\nimport { EquipData } from './EquipData';\r\nimport { tab } from '../../../Table/table_gen';\r\nimport { RareBookStarUpItem } from '../rareBook/RareBookStarUpItem';\r\nconst { ccclass, property } = _decorator;\r\n\r\n/**\r\n * \r\n * EquipFettersPop\r\n * zhudingchao\r\n * Thu Jul 18 2024 17:07:27 GMT+0800 (中国标准时间)\r\n * db://assets/scripts/logic/model/equip/EquipFettersPop.ts\r\n *\r\n */\r\n\r\n@ccclass('EquipFettersPop')\r\nexport class EquipFettersPop extends ViewPop {\r\n    @property(Sprite)\r\n    titleSpr: Sprite = null;\r\n    @property(Label)\r\n    titleLab1: Label = null;\r\n    @property(Label)\r\n    titleLab2: Label = null;\r\n    @property(Label)\r\n    lastlevelLab: Label = null;\r\n    @property(Label)\r\n    currlevelLab: Label = null;\r\n    @property(Node)\r\n    layoutNode: Node = null;\r\n    @property(Prefab)\r\n    itemPrefab: Prefab = null;\r\n\r\n    register(): void {\r\n\r\n    }\r\n    onShow(): void {\r\n        if (this.openData) {\r\n            let type = this.openData[\"type\"];\r\n            let level = this.openData[\"level\"];\r\n            let titleIconName = \"\";\r\n            let tilteKey = \"\"\r\n            let table: tab.HeroMasterTable = EquipData.ins.getHeroMasterTableByTypeAndLevel(type, level);\r\n            let lastTable = EquipData.ins.getHeroMasterTableByTypeAndLevel(type, level - 1);\r\n\r\n            if (type == 1) {\r\n                //品质大师\r\n                titleIconName = \"shengXingDaShiTitle\";\r\n                tilteKey = \"ui_hero_26\"\r\n\r\n            } else if (type == 2) {\r\n                titleIconName = \"qiangHuaDaShiTitle\";\r\n                tilteKey = \"ui_hero_27\"\r\n            } else if (type == 3) {\r\n                titleIconName = \"cuiLianDaShiTitle\";\r\n                tilteKey = \"ui_hero_28\"\r\n            }\r\n            this.titleSpr.setTexture(\"lang/world_lang_cn/hero/\"+titleIconName);\r\n            this.titleLab2.string = LangMgr.getLab(tilteKey);\r\n            this.titleLab1.string = LangMgr.getLab(tilteKey);\r\n            this.lastlevelLab.string=LangMgr.getCombineString(\"ui_heroresonancepop_3\",[level-1])\r\n            this.currlevelLab.string=LangMgr.getCombineString(\"ui_heroresonancepop_3\",[level])\r\n\r\n            let attrMaps: Map<number, any> = new Map();\r\n            if (table) {\r\n                let atts = table.AttrList;\r\n                for (let key in atts) {\r\n                    let item = tab.getData().EquipAttrTableById.getValue(atts[key]);\r\n                    let info = attrMaps.get(item.AttrType);\r\n                    if (info) {\r\n                        info.next += item.Base;\r\n                    } else {\r\n                        info = { \"next\": item.Base, \"value\": 0 }\r\n                        attrMaps.set(item.AttrType, info);\r\n                    }\r\n                }\r\n            }\r\n            if (lastTable) {\r\n                let atts = lastTable.AttrList;\r\n                for (let key in atts) {\r\n                    let item = tab.getData().EquipAttrTableById.getValue(atts[key]);\r\n                    let info = attrMaps.get(item.AttrType);\r\n                    if (info) {\r\n                        info.value += item.Base;\r\n                    } else {\r\n                        info = { \"next\": 0, \"value\": item.Base }\r\n                        attrMaps.set(item.AttrType, info);\r\n                    }\r\n                }\r\n            }\r\n\r\n            attrMaps.forEach((vlaue, key) => {\r\n                let item=instantiate(this.itemPrefab);\r\n                item.parent=this.layoutNode;\r\n                item.getComponent(RareBookStarUpItem).initView(key,vlaue.value,vlaue.next);\r\n             \r\n            });\r\n        }\r\n\r\n    }\r\n}"]}