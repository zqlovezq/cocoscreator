{"version":3,"sources":["file:///C:/chickenStarClient/client/assets/scripts/logic/model/jianghu/GameplayViewItem.ts"],"names":["_decorator","Button","Component","Label","Node","Sprite","tab","LangMgr","ItemInfo","ItemPoolMgr","UIMgr","RedComp","RedEventComp","RedDotType","RedMgr","OpenFunctionMgr","ccclass","property","GameplayViewItem","_data","opName","Module","Module_Unknown","openFunc","OpenFunctionName","OpenFunctionName_None","setData","data","JumpUI","sp_icon","setTexture","Background","lbl_name","string","getLab","Name","node_layout","destroyAllChildren","setOpenFunc","Id","isOpen","ins","checkFunctionIsOpen","lock_node","active","addRedEvent","node_red","i","ShowItemId","length","itemInfo","itemId","num","createItem","id","OpenFunctionName_Challenge","OpenFunctionName_DailyChallenge","OpenFunctionName_WorldBoss","OpenFunctionName_ClimbTower","OpenFunctionName_FincaFight","redCompTs","addComponent","redNode","type1","event","ChallengeDailyFreeTimes","type2","ChallengeDailyAward","types","addRed","refreshEvent","ClimbingTowerDailyReward","type3","ClimbingTowerStageReward","type4","Battle_Pass","child","ClimbingTowerChallenge","EveryDayChallengeFreeNum","EveryDayChallengeUpReward","EveryDayChallengeBoxReward","TopWarChallengeFreeNum","node","getComponent","enabled","Free_Fight_Token","onClickBtn","showFunctionTips","jumpLayer"],"mappings":"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","sourcesContent":["import { _decorator, Button, Component, EventTouch, Label, Node, Sprite } from 'cc';\r\nimport { tab } from '../../../Table/table_gen';\r\nimport { LangMgr } from '../../mgr/LangMgr';\r\nimport { ItemInfo } from '../item/ItemInfo';\r\nimport { ItemPoolMgr } from '../item/ItemPoolMgr';\r\nimport { UIMgr } from '../../mgr/UIMgr';\r\nimport { ViewName } from '../../define/ViewDefine';\r\nimport { ModuleUtil } from '../../../Common/ModuleUtil';\r\nimport RedComp from '../../../Common/component/RedComp';\r\nimport RedEventComp from '../../../Common/component/RedEventComp';\r\nimport { RedDotType } from '../../red/RedDotType';\r\nimport { RedMgr } from '../../mgr/RedMgr';\r\nimport { OpenFunctionMgr } from '../../../Common/component/OpenFunctionMgr';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('GameplayViewItem')\r\nexport class GameplayViewItem extends Component {\r\n    @property(Label)\r\n    lbl_name: Label = null;\r\n    @property(Sprite)\r\n    sp_icon: Sprite = null;\r\n    @property(Node)\r\n    node_layout: Node = null;\r\n    @property(Node)\r\n    node_red: Node = null;\r\n    @property(Node)\r\n    lock_node: Node = null\r\n    private _data: tab.ChallengeButtonTable = null;\r\n    private opName: tab.Module = tab.Module.Module_Unknown;\r\n    private openFunc: tab.OpenFunctionName = tab.OpenFunctionName.OpenFunctionName_None\r\n    setData(data: tab.ChallengeButtonTable) {\r\n        this._data = data;\r\n        this.opName = data.JumpUI;\r\n        this.sp_icon.setTexture(data.Background);\r\n        this.lbl_name.string = LangMgr.getLab(data.Name);\r\n        this.node_layout.destroyAllChildren();\r\n        this.setOpenFunc(data.Id);\r\n        const isOpen = OpenFunctionMgr.ins.checkFunctionIsOpen(this.openFunc);\r\n        this.lock_node.active = !isOpen;\r\n        if (isOpen) {\r\n            // 添加红点逻辑\r\n            this.addRedEvent(data.Id)\r\n        } else {\r\n            this.node_red.active = false;\r\n        }\r\n        for (let i = 0; i < data.ShowItemId.length; i++) {\r\n            const itemInfo = new ItemInfo();\r\n            itemInfo.itemId = data.ShowItemId[i];\r\n            itemInfo.num = 0;\r\n            ItemPoolMgr.ins.createItem(itemInfo, this.node_layout);\r\n        }\r\n    }\r\n    // 获取openFunc\r\n    setOpenFunc(id: number) {\r\n        switch (id) {\r\n            case 1:\r\n                this.openFunc = tab.OpenFunctionName.OpenFunctionName_Challenge;\r\n                break;\r\n            case 2:\r\n                this.openFunc = tab.OpenFunctionName.OpenFunctionName_DailyChallenge\r\n                break;\r\n            case 3:\r\n                this.openFunc = tab.OpenFunctionName.OpenFunctionName_WorldBoss\r\n                break;\r\n            case 4:\r\n                this.openFunc = tab.OpenFunctionName.OpenFunctionName_ClimbTower\r\n                break;\r\n            case 5:\r\n                this.openFunc = tab.OpenFunctionName.OpenFunctionName_FincaFight\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    addRedEvent(id: number) {\r\n        if (id === 1) {\r\n            const redCompTs = this.addComponent(RedComp);\r\n            redCompTs.redNode = this.node_red;\r\n            const type1: RedEventComp = new RedEventComp();\r\n            type1.event = RedDotType.ChallengeDailyFreeTimes;\r\n            const type2: RedEventComp = new RedEventComp();\r\n            type2.event = RedDotType.ChallengeDailyAward;\r\n            redCompTs.types = [type1, type2];\r\n\r\n            redCompTs.addRed();\r\n            RedMgr.refreshEvent(RedDotType.ChallengeDailyFreeTimes);\r\n            RedMgr.refreshEvent(RedDotType.ChallengeDailyAward);\r\n        } else if (id == 4) {\r\n            const redCompTs = this.addComponent(RedComp);\r\n            redCompTs.redNode = this.node_red;\r\n            // const type1: RedEventComp = new RedEventComp();\r\n            // type1.event = RedDotType.ClimbingTowerChallenge;\r\n            const type2: RedEventComp = new RedEventComp();\r\n            type2.event = RedDotType.ClimbingTowerDailyReward;\r\n            const type3: RedEventComp = new RedEventComp();\r\n            type3.event = RedDotType.ClimbingTowerStageReward;\r\n            const type4: RedEventComp = new RedEventComp();\r\n            type4.event = RedDotType.Battle_Pass;\r\n            type4.child = \"5\";\r\n            redCompTs.types = [type2, type3, type4];\r\n            redCompTs.addRed();\r\n            RedMgr.refreshEvent(RedDotType.ClimbingTowerChallenge);\r\n            RedMgr.refreshEvent(RedDotType.ClimbingTowerDailyReward);\r\n            RedMgr.refreshEvent(RedDotType.ClimbingTowerStageReward);\r\n            RedMgr.refreshEvent(RedDotType.Battle_Pass);\r\n        } else if (id == 2) {\r\n            const redCompTs = this.addComponent(RedComp);\r\n            redCompTs.redNode = this.node_red;\r\n            const type1: RedEventComp = new RedEventComp();\r\n            type1.event = RedDotType.EveryDayChallengeFreeNum;\r\n            const type2: RedEventComp = new RedEventComp();\r\n            type2.event = RedDotType.EveryDayChallengeUpReward;\r\n            const type3: RedEventComp = new RedEventComp();\r\n            type3.event = RedDotType.EveryDayChallengeBoxReward;\r\n\r\n            redCompTs.types = [type1, type2, type3];\r\n            redCompTs.addRed();\r\n            RedMgr.refreshEvent(RedDotType.EveryDayChallengeFreeNum);\r\n            RedMgr.refreshEvent(RedDotType.EveryDayChallengeUpReward);\r\n            RedMgr.refreshEvent(RedDotType.EveryDayChallengeBoxReward);\r\n        } else if (id == 3) {\r\n            const redCompTs = this.addComponent(RedComp);\r\n            redCompTs.redNode = this.node_red;\r\n            const type1: RedEventComp = new RedEventComp();\r\n            type1.event = RedDotType.TopWarChallengeFreeNum;\r\n\r\n            redCompTs.types = [type1];\r\n            redCompTs.addRed();\r\n            RedMgr.refreshEvent(RedDotType.TopWarChallengeFreeNum);\r\n        } else if (id === 99) {\r\n            this.node.getComponent(Button).enabled = false;\r\n        }else if(id===5){\r\n            const redCompTs = this.addComponent(RedComp);\r\n            redCompTs.redNode = this.node_red;\r\n            const type1: RedEventComp = new RedEventComp();\r\n            type1.event = RedDotType.Free_Fight_Token;\r\n\r\n            redCompTs.types = [type1];\r\n            redCompTs.addRed();\r\n            RedMgr.refreshEvent(RedDotType.Free_Fight_Token);\r\n        }\r\n    }\r\n    onClickBtn() {\r\n        const isOpen = OpenFunctionMgr.ins.checkFunctionIsOpen(this.openFunc);\r\n        if (!isOpen) {\r\n            OpenFunctionMgr.ins.showFunctionTips(this.openFunc);\r\n            return;\r\n        }\r\n        if (this.opName) {\r\n            UIMgr.ins.jumpLayer(this.opName)\r\n        }\r\n    }\r\n}\r\n\r\n\r\n"]}