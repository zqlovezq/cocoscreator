{"version":3,"sources":["file:///C:/chickenStarClient/client/node_modules/@protobufjs/utf8/index.js"],"names":["_cjsLoader","__cjsMetaURL","url","define","exports","require","module","__filename","__dirname","utf8","length","utf8_length","string","len","c","i","charCodeAt","read","utf8_read","buffer","start","end","parts","chunk","t","push","String","fromCharCode","apply","slice","join","write","utf8_write","offset","c1","c2","_cjsExports"],"mappings":"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","sourcesContent":["import _cjsLoader from 'cce:/internal/ml/cjs-loader.mjs';\nlet _cjsExports;\nconst __cjsMetaURL = import.meta.url;\n_cjsLoader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {\n// #region ORIGINAL CODE\n\n\n \"use strict\";\r\n\r\n /**\r\n  * A minimal UTF8 implementation for number arrays.\r\n  * @memberof util\r\n  * @namespace\r\n  */\r\n var utf8 = exports;\r\n\r\n /**\r\n  * Calculates the UTF8 byte length of a string.\r\n  * @param {string} string String\r\n  * @returns {number} Byte length\r\n  */\r\n utf8.length = function utf8_length(string) {\r\n     var len = 0,\r\n         c = 0;\r\n     for (var i = 0; i < string.length; ++i) {\r\n         c = string.charCodeAt(i);\r\n         if (c < 128)\r\n             len += 1;\r\n         else if (c < 2048)\r\n             len += 2;\r\n         else if ((c & 0xFC00) === 0xD800 && (string.charCodeAt(i + 1) & 0xFC00) === 0xDC00) {\r\n             ++i;\r\n             len += 4;\r\n         } else\r\n             len += 3;\r\n     }\r\n     return len;\r\n };\r\n\r\n /**\r\n  * Reads UTF8 bytes as a string.\r\n  * @param {Uint8Array} buffer Source buffer\r\n  * @param {number} start Source start\r\n  * @param {number} end Source end\r\n  * @returns {string} String read\r\n  */\r\n utf8.read = function utf8_read(buffer, start, end) {\r\n     var len = end - start;\r\n     if (len < 1)\r\n         return \"\";\r\n     var parts = null,\r\n         chunk = [],\r\n         i = 0, // char offset\r\n         t;     // temporary\r\n     while (start < end) {\r\n         t = buffer[start++];\r\n         if (t < 128)\r\n             chunk[i++] = t;\r\n         else if (t > 191 && t < 224)\r\n             chunk[i++] = (t & 31) << 6 | buffer[start++] & 63;\r\n         else if (t > 239 && t < 365) {\r\n             t = ((t & 7) << 18 | (buffer[start++] & 63) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63) - 0x10000;\r\n             chunk[i++] = 0xD800 + (t >> 10);\r\n             chunk[i++] = 0xDC00 + (t & 1023);\r\n         } else\r\n             chunk[i++] = (t & 15) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63;\r\n         if (i > 8191) {\r\n             (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n             i = 0;\r\n         }\r\n     }\r\n     if (parts) {\r\n         if (i)\r\n             parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n         return parts.join(\"\");\r\n     }\r\n     return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n };\r\n\r\n /**\r\n  * Writes a string as UTF8 bytes.\r\n  * @param {string} string Source string\r\n  * @param {Uint8Array} buffer Destination buffer\r\n  * @param {number} offset Destination offset\r\n  * @returns {number} Bytes written\r\n  */\r\n utf8.write = function utf8_write(string, buffer, offset) {\r\n     var start = offset,\r\n         c1, // character 1\r\n         c2; // character 2\r\n     for (var i = 0; i < string.length; ++i) {\r\n         c1 = string.charCodeAt(i);\r\n         if (c1 < 128) {\r\n             buffer[offset++] = c1;\r\n         } else if (c1 < 2048) {\r\n             buffer[offset++] = c1 >> 6       | 192;\r\n             buffer[offset++] = c1       & 63 | 128;\r\n         } else if ((c1 & 0xFC00) === 0xD800 && ((c2 = string.charCodeAt(i + 1)) & 0xFC00) === 0xDC00) {\r\n             c1 = 0x10000 + ((c1 & 0x03FF) << 10) + (c2 & 0x03FF);\r\n             ++i;\r\n             buffer[offset++] = c1 >> 18      | 240;\r\n             buffer[offset++] = c1 >> 12 & 63 | 128;\r\n             buffer[offset++] = c1 >> 6  & 63 | 128;\r\n             buffer[offset++] = c1       & 63 | 128;\r\n         } else {\r\n             buffer[offset++] = c1 >> 12      | 224;\r\n             buffer[offset++] = c1 >> 6  & 63 | 128;\r\n             buffer[offset++] = c1       & 63 | 128;\r\n         }\r\n     }\r\n     return offset - start;\r\n };\r\n\n\n// #endregion ORIGINAL CODE\n\n_cjsExports = module.exports;\n\n\n}, {});\nexport { _cjsExports as default };\nexport { __cjsMetaURL }\n"]}