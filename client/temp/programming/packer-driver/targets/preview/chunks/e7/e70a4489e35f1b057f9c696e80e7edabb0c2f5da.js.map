{"version":3,"sources":["file:///C:/chickenStarClient/client/assets/scripts/logic/fight/base/cd/CDTime.ts"],"names":["CDTime","lifeTime","passTime","_valid","cb","typeKey","speed","isValid","kill","reset","setTypeKey","key","setLiftTime","time","fb","Math","max","setSpeed","updateFrame","dt","onTimeComplete","getProgress"],"mappings":";;;iBACaA,M;;;;;;;;;;;;;wBAAAA,M,GAAN,MAAMA,MAAN,CAAa;AAAA;AAAA,eACNC,QADM,GACa,CADb;AAAA,eAENC,QAFM,GAEa,CAFb;AAAA,eAGNC,MAHM,GAGY,KAHZ;AAAA,eAINC,EAJM;AAAA,eAKNC,OALM;AAAA,eAMNC,KANM,GAMU,CANV;AAAA;;AAOhBC,QAAAA,OAAO,GAAG;AACN,iBAAO,KAAKJ,MAAZ;AACH;;AACDK,QAAAA,IAAI,GAAE;AACF,eAAKC,KAAL;AACA,eAAKN,MAAL,GAAc,KAAd;AACH;;AAEDM,QAAAA,KAAK,GAAG;AACJ,eAAKN,MAAL,GAAc,IAAd;AACA,eAAKC,EAAL,GAAU,IAAV;AACA,eAAKF,QAAL,GAAgB,CAAhB;AACA,eAAKG,OAAL,GAAe,EAAf;AACA,eAAKC,KAAL,GAAa,CAAb;AACH;;AACDI,QAAAA,UAAU,CAACC,GAAD,EAAc;AACpB,eAAKN,OAAL,GAAeM,GAAf;AACH;;AAEDC,QAAAA,WAAW,CAACC,IAAD,EAAeC,EAAf,EAA6B;AACpC,eAAKb,QAAL,GAAgBc,IAAI,CAACC,GAAL,CAASH,IAAT,EAAe,CAAf,CAAhB;AACA,eAAKT,EAAL,GAAUU,EAAV;AACA,eAAKZ,QAAL,GAAgB,CAAhB;AACA,eAAKI,KAAL,GAAa,CAAb;AACH;;AAEDW,QAAAA,QAAQ,CAACX,KAAD,EAAgB;AACpB,eAAKA,KAAL,GAAaA,KAAb;AACH;;AAEDY,QAAAA,WAAW,CAACC,EAAD,EAAa;AACpB,cAAI,CAAC,KAAKhB,MAAV,EAAkB;AACd;AACH;;AACD,eAAKD,QAAL,GAAgB,KAAKA,QAAL,GAAgBiB,EAAE,GAAG,KAAKb,KAA1C;;AACA,cAAI,KAAKJ,QAAL,IAAiB,KAAKD,QAA1B,EAAoC;AAChC,iBAAKmB,cAAL;AACA;AACH;AACJ;;AAEDA,QAAAA,cAAc,GAAG;AACb,eAAKjB,MAAL,GAAc,KAAd;AACA,eAAKC,EAAL,IAAW,KAAKA,EAAL,CAAQ,KAAKC,OAAb,CAAX;AACH;;AAEDgB,QAAAA,WAAW,GAAG;AACV,iBAAO,KAAKnB,QAAL,GAAgB,KAAKD,QAA5B;AACH;;AAvDe,O","sourcesContent":["\nexport class CDTime {\n    protected lifeTime: number = 0\n    protected passTime: number = 0\n    protected _valid: boolean = false\n    protected cb: Function\n    protected typeKey: string\n    protected speed: number = 1\n    isValid() {\n        return this._valid\n    }\n    kill(){\n        this.reset()\n        this._valid = false\n    }\n\n    reset() {\n        this._valid = true\n        this.cb = null\n        this.passTime = 0\n        this.typeKey = \"\"\n        this.speed = 1\n    }\n    setTypeKey(key: string) {\n        this.typeKey = key\n    }\n\n    setLiftTime(time: number, fb: Function) {\n        this.lifeTime = Math.max(time, 0)\n        this.cb = fb\n        this.passTime = 0\n        this.speed = 1\n    }\n\n    setSpeed(speed: number) {\n        this.speed = speed\n    }\n\n    updateFrame(dt: number) {\n        if (!this._valid) {\n            return\n        }\n        this.passTime = this.passTime + dt * this.speed\n        if (this.passTime >= this.lifeTime) {\n            this.onTimeComplete()\n            return\n        }\n    }\n\n    onTimeComplete() {\n        this._valid = false\n        this.cb && this.cb(this.typeKey)\n    }\n\n    getProgress() {\n        return this.passTime / this.lifeTime\n    }\n}"]}