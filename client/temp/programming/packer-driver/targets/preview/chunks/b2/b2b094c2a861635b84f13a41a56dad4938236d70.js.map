{"version":3,"sources":["file:///C:/chickenStarClient/client/assets/scripts/logic/model/Reconnect.ts"],"names":["_decorator","director","Node","ViewPop","LoginControl","UIMgr","EventMgr","SceneMgr","ScenesName","ViewName","LocalEvent","ccclass","property","Reconnect","create","ins","show","viewName","hide","hideView","register","onLocal","LoginProcessComplete","on_local_LoginProcessComplete","onShow","reset","node","active","confirm_node","reconnecting_node","onClickOk","console","log","connect","onClickCancel","isFightScene","emitLocal","quitFight","loadScene","login","onClose","warn","isLoginScene","enterMain","toSceneName","main","isSceneByName","loading","preloadScene"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAuBC,MAAAA,Q,OAAAA,Q;AAAuBC,MAAAA,I,OAAAA,I;;AAC9CC,MAAAA,O,iBAAAA,O;;AACAC,MAAAA,Y,iBAAAA,Y;;AACAC,MAAAA,K,iBAAAA,K;;AACAC,MAAAA,Q,iBAAAA,Q;;AACAC,MAAAA,Q,iBAAAA,Q;AAAUC,MAAAA,U,iBAAAA,U;;AAEVC,MAAAA,Q,iBAAAA,Q;;AACAC,MAAAA,U,iBAAAA,U;;;;;;;;;OACH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBZ,U;;2BAGjBa,S,WADZF,OAAO,CAAC,WAAD,C,UAWHC,QAAQ,CAACV,IAAD,C,UAERU,QAAQ,CAACV,IAAD,C,2BAbb,MACaW,SADb;AAAA;AAAA,8BACuC;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAEtB,eAANC,MAAM,GAAG;AACZ;AAAA;AAAA,8BAAMC,GAAN,CAAUC,IAAV,CAAe;AAAEC,YAAAA,QAAQ,EAAE;AAAA;AAAA,sCAASJ;AAArB,WAAf;AACH;;AAEU,eAAJK,IAAI,GAAG;AACV;AAAA;AAAA,8BAAMH,GAAN,CAAUI,QAAV,CAAmB;AAAA;AAAA,oCAASN,SAA5B;AACH;;AAODO,QAAAA,QAAQ,GAAS;AACb;AAAA;AAAA,oCAASC,OAAT,CAAiB;AAAA;AAAA,wCAAWC,oBAA5B,EAAkD,KAAKC,6BAAvD,EAAsF,IAAtF;AACH;;AAEDC,QAAAA,MAAM,GAAS;AACX,eAAKC,KAAL;AACA,eAAKC,IAAL,CAAUC,MAAV,GAAmB,IAAnB;AACH;;AAEDF,QAAAA,KAAK,GAAG;AACJ,eAAKG,YAAL,CAAkBD,MAAlB,GAA2B,IAA3B;AACA,eAAKE,iBAAL,CAAuBF,MAAvB,GAAgC,KAAhC;AACH;;AAEDG,QAAAA,SAAS,GAAG;AACRC,UAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACA;AAAA;AAAA,4CAAajB,GAAb,CAAiBkB,OAAjB;AAEA,eAAKL,YAAL,CAAkBD,MAAlB,GAA2B,KAA3B;AACA,eAAKE,iBAAL,CAAuBF,MAAvB,GAAgC,IAAhC;AACH;;AAEDO,QAAAA,aAAa,GAAG;AACZH,UAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;;AACA,cAAI;AAAA;AAAA,oCAASG,YAAT,EAAJ,EAA6B;AACzB;AACA;AAAA;AAAA,sCAASC,SAAT,CAAmB;AAAA;AAAA,0CAAWC,SAA9B;AACH,WAHD,MAGO;AACH;AACA;AAAA;AAAA,sCAAStB,GAAT,CAAauB,SAAb,CAAuB;AAAA;AAAA,0CAAWC,KAAlC;AACH;;AACD1B,UAAAA,SAAS,CAACK,IAAV;AACH;;AAEDsB,QAAAA,OAAO,GAAS;AACZT,UAAAA,OAAO,CAACU,IAAR,CAAa,IAAb;AACA,eAAKf,IAAL,CAAUC,MAAV,GAAmB,KAAnB;AACH;;AAEDJ,QAAAA,6BAA6B,GAAG;AAC5B,cAAI;AAAA;AAAA,oCAASmB,YAAT,MAA2B;AAAA;AAAA,oCAASP,YAAT,EAA/B,EAAwD;AACpD;AACH;;AACD,eAAKQ,SAAL;AACH;;AAEDA,QAAAA,SAAS,GAAG;AACR,cAAIC,WAAW,GAAG;AAAA;AAAA,wCAAWC,IAA7B;;AAEA,cAAI;AAAA;AAAA,oCAASC,aAAT,CAAuB;AAAA;AAAA,wCAAWC,OAAlC,CAAJ,EAAgD;AAC5C;AAAA;AAAA,sCAAShC,GAAT,CAAauB,SAAb,CAAuBM,WAAvB;AACA;AACH;;AACD;AAAA;AAAA,oCAAS7B,GAAT,CAAauB,SAAb,CAAuB;AAAA;AAAA,wCAAWS,OAAlC,EAA2C,MAAM;AAC7C9C,YAAAA,QAAQ,CAAC+C,YAAT,CAAsBJ,WAAtB,EAAmC,MAAM;AACrC;AAAA;AAAA,wCAAS7B,GAAT,CAAauB,SAAb,CAAuBM,WAAvB;AACH,aAFD;AAGH,WAJD;AAKH;;AAzEkC,O;;;;;iBAWd,I;;;;;;;iBAEK,I","sourcesContent":["import { _decorator, Component, director, instantiate, Node, Prefab, ResolutionPolicy, Scene, view } from 'cc';\nimport { ViewPop } from '../../framework/base/ViewPop';\nimport { LoginControl } from './login/LoginControl';\nimport { UIMgr } from '../mgr/UIMgr';\nimport { EventMgr } from '../mgr/EventMgr';\nimport { SceneMgr, ScenesName } from '../mgr/SceneMgr';\nimport { proto } from 'client_protocol';\nimport { ViewName } from '../define/ViewDefine';\nimport { LocalEvent } from '../define/LocalEvent';\nconst { ccclass, property } = _decorator;\n\n@ccclass('Reconnect')\nexport class Reconnect extends ViewPop {\n\n    static create() {\n        UIMgr.ins.show({ viewName: ViewName.Reconnect })\n    }\n\n    static hide() {\n        UIMgr.ins.hideView(ViewName.Reconnect)\n    }\n\n    @property(Node)\n    confirm_node: Node = null\n    @property(Node)\n    reconnecting_node: Node = null\n\n    register(): void {\n        EventMgr.onLocal(LocalEvent.LoginProcessComplete, this.on_local_LoginProcessComplete, this)\n    }\n\n    onShow(): void {\n        this.reset()\n        this.node.active = true\n    }\n\n    reset() {\n        this.confirm_node.active = true\n        this.reconnecting_node.active = false\n    }\n\n    onClickOk() {\n        console.log(\"onClickOk\")\n        LoginControl.ins.connect()\n\n        this.confirm_node.active = false\n        this.reconnecting_node.active = true\n    }\n\n    onClickCancel() {\n        console.log(\"onClickCancel\")\n        if (SceneMgr.isFightScene()) {\n            // 如果是战斗场景，则直接退出游戏\n            EventMgr.emitLocal(LocalEvent.quitFight)\n        } else {\n            // 如果是其他场景，则直接返回登录场景\n            SceneMgr.ins.loadScene(ScenesName.login)\n        }\n        Reconnect.hide()\n    }\n\n    onClose(): void {\n        console.warn(\"隐藏\")\n        this.node.active = false\n    }\n\n    on_local_LoginProcessComplete() {\n        if (SceneMgr.isLoginScene() || SceneMgr.isFightScene()) {\n            return\n        }\n        this.enterMain()\n    }\n\n    enterMain() {\n        let toSceneName = ScenesName.main\n\n        if (SceneMgr.isSceneByName(ScenesName.loading)) {\n            SceneMgr.ins.loadScene(toSceneName)\n            return\n        }\n        SceneMgr.ins.loadScene(ScenesName.loading, () => {\n            director.preloadScene(toSceneName, () => {\n                SceneMgr.ins.loadScene(toSceneName)\n            })\n        })\n    }\n}\n\n"]}