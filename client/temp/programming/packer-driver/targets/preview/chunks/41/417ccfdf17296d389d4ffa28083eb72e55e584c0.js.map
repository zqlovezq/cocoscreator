{"version":3,"sources":["file:///C:/chickenStarClient/client/assets/scripts/logic/fight/table/Leveljson.ts"],"names":["Leveljson","LevelPhase","LevelPhaseTime","resources","JsonAsset","PhaseclearType","defaultAddTime","drop","phaseList","levelPhase","nowTimeIndex","nowTime","create","path","json","get","dd","initData","i","length","phase","phaseclearcondition","phaseTime","phasetime","times","push","j","time","lt","key","init","phaseOverTime","console","log","getTotalTime","total","index","v","setNowPhase","hasPhase","phaseIndex","monsterId","count","isRand","cycles","attack","hp","def","resistcritical","damrefix","spe","exp","position","warning","inTime","nowCount","dt","isMonster","undefined","isWarning","overTime","Math","ceil","isCyclesOver","updateTime","_dt"],"mappings":"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","sourcesContent":["import { resources, JsonAsset } from \"cc\"\n\nexport enum PhaseclearType {\n    /** 时间 */\n    time = 1,\n    /** boss死亡 */\n    bossDead = 2,\n    /** 全部死亡 */\n    allDead = 3\n}\nconst defaultAddTime = 1\n\n/** 关卡配置 */\nexport class Leveljson {\n    static create(path: string) {\n        let json: JsonAsset = resources.get(\"leveljson/\" + path, JsonAsset)\n\n        let dd = new Leveljson()\n        dd.initData(json.json)\n        return dd\n    }\n\n    initData(json: any) {\n        this.drop = json.drop\n        for (let i = 0; i < json.phaseList.length; i++) {\n            let dd = new LevelPhase()\n            dd.phase = json.phaseList[i].phase\n            dd.phaseclearcondition = json.phaseList[i].phaseclearcondition\n            dd.phaseTime = json.phaseList[i].phasetime\n            dd.times = []\n            this.phaseList.push(dd)\n            for (let j = 0; j < json.phaseList[i].times.length; j++) {\n                let time = json.phaseList[i].times[j]\n                let lt = new LevelPhaseTime()\n                for (const key in time) {\n                    lt[key] = time[key];\n                }\n                lt.init()\n                dd.times.push(lt)\n                lt.time += defaultAddTime\n            }\n            dd.phaseOverTime = dd.phaseTime\n            if (dd.phaseOverTime == 0) {\n                if (dd.times.length) {\n                    dd.phaseOverTime = dd.times[dd.times.length - 1].time + 1\n                }\n            }\n            dd.phaseOverTime += 1\n        }\n\n        console.log(\"aa\", this)\n    }\n\n    getTotalTime() {\n        let total = 0\n        for (let index = 0; index < this.phaseList.length; index++) {\n            const v = this.phaseList[index];\n            total += v.phaseTime\n        }\n        return total\n    }\n\n    drop: number[] = []\n    phaseList: LevelPhase[] = []\n\n    levelPhase: LevelPhase //当前阶段\n\n    nowTimeIndex: number\n    nowTime: LevelPhaseTime\n\n    setNowPhase(phase: number) {\n        this.levelPhase = this.phaseList[phase]\n        this.nowTimeIndex = 0\n        this.nowTime = null\n    }\n\n    hasPhase(phaseIndex: number) {\n        return this.phaseList[phaseIndex]\n    }\n\n}\n\nexport class LevelPhase {\n    phase: number\n    phaseclearcondition: PhaseclearType\n    phaseTime: number\n    times: LevelPhaseTime[]\n    phaseOverTime: number\n}\n\nexport class LevelPhaseTime {\n    /** 时间 */\n    time: number\n    /** 怪物id */\n    monsterId: number\n    /** 出现次数 */\n    count: number\n    /** 是否块内随机 */\n    isRand: number\n    /** 出现间隔 */\n    cycles: number\n    /** 攻击 */\n    attack: number\n    /** 血量 */\n    hp: number\n    /** 防御 */\n    def: number\n    /** 抗暴 */\n    resistcritical: number\n    /** 减伤系数修正 */\n    damrefix = 66\n    /** 速度 */\n    spe: number\n    /** 经验 */\n    exp: number\n    /** 掉落 */\n    drop: number\n    /** 出现位置块 */\n    position: number[]\n    /** 警告：1.怪潮、2.BOSS */\n    warning: number\n\n    init() {\n        this.cycles = this.cycles || 0\n        if (this.isMonster()) {\n            this.cycles = this.cycles * 1000\n        }\n    }\n\n    inTime: boolean = false //是否进入时间\n\n    isMonster() {\n        return this.monsterId != undefined\n    }\n\n    isWarning() {\n        return this.warning != undefined\n    }\n\n    /** 结束时间 */\n    overTime() {\n        if (this.cycles && this.count) {\n            return this.time + Math.ceil(this.cycles * this.count / 1000)\n        }\n        return this.time\n    }\n    /** 当前次数 */\n    nowCount: number = 1\n\n    isCyclesOver() {\n        if (this.cycles == 0) {\n            return true\n        }\n        return this.nowCount >= this.count\n    }\n\n    dt: number = 0\n    updateTime(_dt: number) {\n        if (this.inTime && this.count && this.count != this.nowCount) {\n            this.dt += _dt\n            if (this.dt >= this.cycles) {\n                this.dt -= this.cycles\n                this.nowCount += 1\n                return true\n            }\n        }\n\n        return false\n    }\n}\n"]}