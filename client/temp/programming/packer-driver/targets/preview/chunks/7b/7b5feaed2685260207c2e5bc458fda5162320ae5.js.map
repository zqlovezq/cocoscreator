{"version":3,"sources":["file:///C:/chickenStarClient/client/assets/scripts/logic/model/mail/MailControl.ts"],"names":["_decorator","AbsControl","proto","Net","EventMgr","MailData","RedMgr","RedDotType","ccclass","property","MailControl","ins","_instance","register","onMsg","Ptl","GetMailsRsp","on_s2c_GetMailsRsp","ReceiveMailsRewardRsp","on_s2c_ReceiveMailsRewardRsp","DeleteMailsRsp","on_s2c_DeleteMailsRsp","NewMailsPush","on_s2c_NewMailsPushp","registerCalculateFb","Mail","on_getRedPoint","requestGetMails","msg","Msg_GetMailsReq","Send","GetMailsReq","requestReceiveMailsReward","mailIds","Msg_ReceiveMailsRewardReq","ids","ReceiveMailsRewardReq","requestDeleteMails","Msg_DeleteMailsReq","DeleteMailsReq","initMaillData","mails","refreshEvent","error","code","CommonErrorCode","Succeed","length","receiveMailsRewardSucc","deleteMails","getMails","key","isCanReceived","isRead"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node } from 'cc';\r\nimport { AbsControl } from '../../../framework/base/IAbs';\r\nimport { proto } from 'client_protocol';\r\nimport { Net } from '../../net/Net';\r\nimport { EventMgr } from '../../mgr/EventMgr';\r\nimport { MailData } from './MailData';\r\nimport { RedMgr } from '../../mgr/RedMgr';\r\nimport { RedDotType } from '../../red/RedDotType';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('MaillControl')\r\nexport class MailControl extends AbsControl {\r\n    private static _instance: MailControl;\r\n    public static get ins() {\r\n        if (null == this._instance) {\r\n            this._instance = new MailControl();\r\n        }\r\n        return this._instance;\r\n    }\r\n    register(): void {\r\n        EventMgr.onMsg(proto.Ptl.GetMailsRsp, this.on_s2c_GetMailsRsp, this);\r\n        EventMgr.onMsg(proto.Ptl.ReceiveMailsRewardRsp, this.on_s2c_ReceiveMailsRewardRsp, this);\r\n        EventMgr.onMsg(proto.Ptl.DeleteMailsRsp, this.on_s2c_DeleteMailsRsp, this);\r\n        EventMgr.onMsg(proto.Ptl.NewMailsPush, this.on_s2c_NewMailsPushp, this);\r\n        RedMgr.ins.registerCalculateFb(RedDotType.Mail, this.on_getRedPoint, this);\r\n\r\n    }\r\n    requestGetMails() {\r\n        let msg = new proto.Msg_GetMailsReq();\r\n        Net.Send(proto.Ptl.GetMailsReq, msg)\r\n\r\n    }\r\n    requestReceiveMailsReward(mailIds: number[]) {\r\n        let msg = new proto.Msg_ReceiveMailsRewardReq();\r\n        msg.ids = mailIds;\r\n        Net.Send(proto.Ptl.ReceiveMailsRewardReq, msg)\r\n    }\r\n    requestDeleteMails(mailIds: number[]) {\r\n        let msg = new proto.Msg_DeleteMailsReq();\r\n        msg.ids = mailIds;\r\n        Net.Send(proto.Ptl.DeleteMailsReq, msg)\r\n    }\r\n    /**\r\n    * 请求邮件\r\n    * @param msg \r\n    */\r\n    on_s2c_GetMailsRsp(msg: proto.Msg_GetMailsRsp) {\r\n\r\n        MailData.ins.initMaillData(msg.mails as proto.Mail[]);\r\n        RedMgr.refreshEvent(RedDotType.Mail);\r\n    }\r\n    /**\r\n    * 请求领取\r\n    * @param msg \r\n    */\r\n    on_s2c_ReceiveMailsRewardRsp(msg: proto.Msg_ReceiveMailsRewardRsp) {\r\n        if (msg.error && msg.error.code != proto.CommonErrorCode.Succeed) return;\r\n        \r\n        if (msg.ids && msg.ids.length > 0) {\r\n            MailData.ins.receiveMailsRewardSucc(msg.ids);\r\n            RedMgr.refreshEvent(RedDotType.Mail);\r\n        }\r\n\r\n\r\n\r\n    }\r\n    /**\r\n   * 请求领取\r\n   * @param msg \r\n   */\r\n    on_s2c_DeleteMailsRsp(msg: proto.Msg_DeleteMailsRsp) {\r\n        if (msg.error && msg.error.code != proto.CommonErrorCode.Succeed) return;\r\n        if (msg.ids && msg.ids.length > 0) {\r\n            MailData.ins.deleteMails(msg.ids);\r\n        }\r\n    }\r\n    /**\r\n    * 有新邮件\r\n    * @param msg \r\n    */\r\n    on_s2c_NewMailsPushp(msg: proto.Msg_NewMailsPush) {\r\n        this.requestGetMails();\r\n    }\r\n    on_getRedPoint(){\r\n        \r\n        let mails=MailData.ins.getMails();\r\n        if(!mails){\r\n            return false;\r\n        }\r\n        for(let key in mails){\r\n            if(mails[key].isCanReceived||!mails[key].isRead){\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n}\r\n\r\n\r\n"]}