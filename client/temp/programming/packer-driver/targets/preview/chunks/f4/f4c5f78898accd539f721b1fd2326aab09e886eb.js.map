{"version":3,"sources":["file:///C:/chickenStarClient/client/assets/scripts/logic/fight/base/Joystick.ts"],"names":["Component","Input","Node","UITransform","Vec3","_decorator","input","ccclass","property","Joystick","joystickCB","touchID","onLoad","show","isStatic","round","on","EventType","TOUCH_START","touchStart","TOUCH_MOVE","touchMove","TOUCH_END","touchEnd","TOUCH_CANCEL","init","cb","flag","active","innerPosition","pos","data","type","angle","ratio","ui","getComponent","s","convertToNodeSpaceAR","x","y","z","length","maxRadius","activeRange","inner","position","isDiretion","normalize","multiplyScalar","Math","atan2","event","getID","getUILocation","node","setWorldPosition"],"mappings":"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","sourcesContent":["import { Component, EventTouch, Input, Node, UITransform, Vec2, Vec3, _decorator, input } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\n\r\n\r\n@ccclass('Joystick')\r\nexport class Joystick extends Component {\r\n\r\n    @property(Node)\r\n    round!: Node;//摇杆背景\r\n\r\n    @property(Node)\r\n    inner!: Node;//摇杆 也就是中心点\r\n\r\n    @property\r\n    isStatic: boolean = true; //固定罗盘不隐藏\r\n\r\n    @property\r\n    isDiretion: boolean = false; //是否为方向模式(中心指示点拉尽)\r\n\r\n    @property\r\n    maxRadius: number = 128;\r\n\r\n    @property\r\n    activeRange: number = 0.1; //摇杆触发范围比例（0-1）\r\n\r\n    private joystickCB: Function | null = null;\r\n\r\n    public touchID: number | null = -1;\r\n\r\n\r\n    onLoad() {\r\n\r\n        this.show(this.isStatic);\r\n        if (this.isStatic) {\r\n            this.round.on(Node.EventType.TOUCH_START, this.touchStart, this);\r\n            this.round.on(Node.EventType.TOUCH_MOVE, this.touchMove, this);\r\n            this.round.on(Node.EventType.TOUCH_END, this.touchEnd, this);\r\n            this.round.on(Node.EventType.TOUCH_CANCEL, this.touchEnd, this);\r\n        } else {\r\n            input.on(Input.EventType.TOUCH_START, this.touchStart, this);\r\n            input.on(Input.EventType.TOUCH_MOVE, this.touchMove, this);\r\n            input.on(Input.EventType.TOUCH_END, this.touchEnd, this);\r\n            input.on(Input.EventType.TOUCH_CANCEL, this.touchEnd, this);\r\n        }\r\n\r\n    }\r\n\r\n    init(cb: Function) {\r\n        this.joystickCB = cb;\r\n    }\r\n\r\n    show(flag: boolean) {\r\n        this.round.active = flag;\r\n    }\r\n\r\n    innerPosition(pos: Vec2) {\r\n\r\n        let data = { type: null, active: true, angle: 0, ratio: 0 }\r\n\r\n        let ui = this.round.getComponent(UITransform);\r\n        let s = ui!.convertToNodeSpaceAR(new Vec3(pos.x, pos.y));\r\n        s.z = 0;\r\n\r\n        //触发范围\r\n        if (s.length() <= this.maxRadius * this.activeRange) {\r\n            this.inner.position = new Vec3();\r\n            data.active = false;\r\n            return data;\r\n        }\r\n\r\n        //限制范围\r\n        if (s.length() > this.maxRadius || this.isDiretion) {\r\n            s = s.normalize();\r\n            s = s.multiplyScalar(this.maxRadius);\r\n        }\r\n        this.inner.position = new Vec3(s); //修正位置\r\n\r\n        //实际数据\r\n        data.active = true;\r\n        data.angle = Math.atan2(s.y, s.x);\r\n        data.ratio = s.length() / this.maxRadius; // (s.length()-this.maxRadius*this.activeRange)/(this.maxRadius*(1.0 - this.activeRange)); //\r\n\r\n\r\n        return data;\r\n    }\r\n\r\n\r\n    touchStart(event: EventTouch) {\r\n        if (this.touchID == -1) {\r\n            this.touchID = event.getID();\r\n\r\n            if (!this.isStatic) {\r\n                this.show(true);\r\n                let pos = event.getUILocation();\r\n                this.node.setWorldPosition(new Vec3(pos.x, pos.y, 0));\r\n            }\r\n        }\r\n\r\n\r\n        if (this.touchID != event.getID()) return false;\r\n        let data: any = this.innerPosition(event.getUILocation());\r\n        data.type = Input.EventType.TOUCH_START;\r\n        this.joystickCB && this.joystickCB(data);\r\n\r\n        return true;\r\n    }\r\n\r\n    touchMove(event: EventTouch) {\r\n        if (this.touchID != event.getID()) return false;\r\n        let data: any = this.innerPosition(event.getUILocation());\r\n        data.type = Input.EventType.TOUCH_MOVE;\r\n        this.joystickCB && this.joystickCB(data);\r\n\r\n        return true;\r\n    }\r\n\r\n\r\n    touchEnd(event: EventTouch) {//摇杆弹回原位置\r\n        if (this.touchID != event.getID()) return false;\r\n\r\n        this.touchID = -1;\r\n        this.show(this.isStatic);\r\n\r\n        this.inner.position = new Vec3();\r\n        let data = { type: Input.EventType.TOUCH_END, active: false, angle: 0, ratio: 0 }\r\n        this.joystickCB && this.joystickCB(data);\r\n\r\n        return true;\r\n    }\r\n\r\n}"]}