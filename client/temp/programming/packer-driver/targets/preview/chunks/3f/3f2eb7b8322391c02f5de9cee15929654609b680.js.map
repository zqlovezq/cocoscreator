{"version":3,"sources":["file:///C:/chickenStarClient/client/assets/scripts/logic/fight/power/powerTab/BuffTab.ts"],"names":["_decorator","tab","PowerBase","PowerTabFactory","ccclass","property","BuffTab","powerType","PowerType","PowerType_BuffTable","configTab","Id","BuffType","VFXID","Duration","Effect","TriggerTable","Trigger","Addbuff","BuffGroup","Rule","CheckAttr","Number","ClearType","NoOneMemory","effectTabs","addBuffTabs","addBuffObjType","setConfigId","id","console","error","index","length","skillPowers","push","createTypeAnyId","PowerType_EffectTable","data","createType","v","isBuffGroup","buffGroup","isCheckAttr"],"mappings":"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","sourcesContent":["import { _decorator, Component } from \"cc\";\nimport { tab } from \"../../../../Table/table_gen\";\nimport { PowerBase } from \"./PowerBase\";\nimport { EffectTab } from \"./EffectTab\";\nimport { PowerTabFactory } from \"../PowerTabFactory\";\nimport { TaskView } from \"../../../model/task/TaskView\";\nimport { Buff } from \"../../base/buff/Buff\";\nimport { Func } from \"../../../utils/Func\";\n\nconst { ccclass, property } = _decorator;\n\n@ccclass('BuffTab')\nexport class BuffTab extends PowerBase {\n    powerType: tab.PowerType = tab.PowerType.PowerType_BuffTable\n    configTab: tab.BuffTable\n    //---------------------配置字段-------------------\n    Id: number // ID \n    BuffType: tab.BuffType // buff类型 \n    VFXID: number // 特效id \n    Duration: number // 持续时间 \n    Effect: number[] // 效果 \n    TriggerTable: number // 触发器 \n    Trigger: number // 持续时间内触发间隔 \n    Addbuff: number[] // 加buff \n    BuffGroup: tab.BuffGroup // buff分组 \n    Rule: tab.Rule // 叠加规则 \n    CheckAttr: number[] // 属性检测 \n    Number: number // 叠加数量 \n    ClearType: tab.ClearType[] // 清除buff的条件  \n    NoOneMemory : boolean // 非独立内存 \n    //---------------------自有字段-------------------\n    effectTabs: EffectTab[] = []\n    addBuffTabs: BuffTab[] = []\n    addBuffObjType: number\n    setConfigId(id: number) {\n        super.setConfigId(id)\n        if (this.Id == null) {\n            console.error(\"未找到buffid\", id)\n            return\n        }\n        //效果配置\n        for (let index = 0; index < this.Effect.length; index++) {\n            if (this.skillPowers) {\n                this.effectTabs.push(this.skillPowers.createTypeAnyId(tab.PowerType.PowerType_EffectTable, this.Effect[index]) as EffectTab)\n            } else {\n                let data = PowerTabFactory.createType(tab.PowerType.PowerType_EffectTable)\n                data.setConfigId(this.Effect[index])\n                this.effectTabs.push(data as EffectTab)\n            }\n        }\n        if (this.Addbuff) {\n            this.addBuffObjType = this.Addbuff[0]\n            for (let index = 1; index < this.Addbuff.length; index++) {\n                const v = this.Addbuff[index];\n                if (this.skillPowers) {\n                    this.addBuffTabs.push(this.skillPowers.createTypeAnyId(tab.PowerType.PowerType_BuffTable, this.Addbuff[index]) as BuffTab)\n                } else {\n                    let data = PowerTabFactory.createType(tab.PowerType.PowerType_BuffTable)\n                    data.setConfigId(id)\n                    this.addBuffTabs.push(data as BuffTab)\n                }\n            }\n\n        }\n    }\n\n    isBuffGroup(buffGroup: tab.BuffGroup) {\n        return this.BuffGroup == buffGroup\n    }\n\n    /** 是否检测属性 （主要针对生命变更） */\n    isCheckAttr() {\n        return this.CheckAttr.length > 0\n    }\n\n}"]}