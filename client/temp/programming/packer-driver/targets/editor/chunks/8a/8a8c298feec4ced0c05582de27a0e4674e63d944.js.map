{"version":3,"sources":["file:///C:/chickenStarClient/client/assets/scripts/logic/mgr/RedMgr.ts"],"names":["RedMgr","Node","Sprite","UITransform","v3","RedDotType","ins","instance","constructor","observersNodes","states","calculateFbs","key","registerCalculateFb","event","fb","target","refreshEvent","state","stateToChange","targetFb","call","console","error","undefined","judge","add","args","child","obs","getHasObs","node","redNode","transform","getRedNode","eventNames","nodeParent","push","isActive","index","length","v","isValid","toAdd","isRed","child2","v1","active","eventState","stateKey","remove","self","splice","tmpNode","getChildByName","uitrans","addComponent","anchorX","anchorY","pos","x","width","y","height","scale","offset","position","spr","image","spriteFrame","setTexture","addChild"],"mappings":"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","sourcesContent":["\n/**\n * 红点管理类\n * 定义RedDotType枚举，RedMgr.add(RedData) 注册红点节点， 通过 refreshEvent 计算红点数据并同步UI\n */\n\nimport { Node, Sprite, UITransform, Vec2, macro, v3 } from \"cc\"\nimport { RedDotType } from \"../red/RedDotType\"\n\n/**\n * 红点观察者结构\n */\nexport interface RedObserver {\n    eventNames: any\n    nodeParent: Node\n    redNode: Node\n}\n\nexport interface RedData {\n    /**\n     * 节点\n     */\n    node: Node\n    /**\n     * 红点事件\n     */\n    event: RedDotType\n    /**\n     * 事件结构子key 默认值all, 只要当前事件结构有一个为true， 就显示红点\n     */\n    child?: String\n    /**\n     * 事件结构子key 默认值all, 只要当前事件结构有一个为true， 就显示红点\n     */\n    child1?: String\n    /**\n     * 节点的一些属性（缩放、偏移（原始位置在节点右上角））\n     */\n    transform?: { redNode: Node, scale?: number, offset?: Vec2 }\n}\n\n/**\n * 红点事件,最高2层结构 引用 RedDotType\n */\n\n/**\n * 红点管理\n */\nexport class RedMgr {\n    private static instance: RedMgr = null;\n\n    public static get ins() {\n        if (this.instance == null) {\n            this.instance = new RedMgr();\n        }\n        return this.instance;\n    }\n\n    observersNodes: RedObserver[] //一个红点对应N个事件\n    states: any[] //事件对应的红点数据\n    calculateFbs: any[] //红点计算函数\n    private constructor() {\n        this.observersNodes = []\n        this.states = []\n        this.calculateFbs = []\n        for (const key in RedDotType) {\n            this.states[RedDotType[key]] = {}\n        }\n    }\n\n    registerCalculateFb(event: RedDotType, fb: Function, target: any) {\n        this.calculateFbs[event] = { target: target, fb: fb }\n    }\n\n    /**\n     * 刷新红点\n     * @param event 事件名\n     */\n    static refreshEvent(event: RedDotType, state?: any) {\n        var stateToChange = RedMgr.ins.states[event]\n        //todo 红点结构最高2层 stateToChange = bool 、{key1:bool,key2:bool}\n        let targetFb: any = RedMgr.ins.calculateFbs[event]\n        if (targetFb) {\n            stateToChange = targetFb.fb.call(targetFb.target, stateToChange);\n        } else {\n            console.error('未找到红点计算函数,请先注册计算函数,RedDotType:' + RedDotType[event])\n        }\n\n        if (state != undefined) {\n            stateToChange = state\n        }\n\n        RedMgr.ins.states[event] = stateToChange\n        RedMgr.ins.judge(event)\n    }\n\n    /**\n     * 注册红点\n     * @param args \n     */\n    static add(args: RedData) {\n        args.child = args.child || \"all\"\n\n        var obs = RedMgr.ins.getHasObs(args.node)\n        if (obs == null) {\n            var redNode = args.transform.redNode || RedMgr.ins.getRedNode(args.node, args.transform)\n            obs = { eventNames: {}, nodeParent: args.node, redNode: redNode }\n            RedMgr.ins.observersNodes.push(obs)\n        }\n        obs.eventNames[args.event] = { child: args.child, isActive: false }\n        RedMgr.ins.judge(args.event)\n    }\n\n    judge(event: RedDotType) {\n        for (let index = 0; index < this.observersNodes.length; index++) {\n            const v = this.observersNodes[index];\n            if (!(v.redNode && v.redNode.isValid)) {\n                continue;\n            }\n            if (v.eventNames[event]) {\n                let toAdd = this.isRed(event, v.eventNames[event].child, v.eventNames[event].child2)\n\n\n                v.eventNames[event].isActive = toAdd\n\n                var isActive = false\n                for (const key in v.eventNames) {\n                    const v1 = v.eventNames[key];\n                    if (v1.isActive) {\n                        isActive = true\n                    }\n                }\n                v.redNode.active = isActive\n            }\n        }\n    }\n\n    isRed(key: RedDotType, child: string = \"all\", child2: string = \"all\") {\n        let eventState = this.states[key]\n        var toAdd = false\n        if (typeof eventState == \"boolean\") {\n            toAdd = eventState\n        } else {\n            if (child == \"all\") {\n                for (const key in eventState) {\n                    if (eventState[key]) {\n                        if (typeof (eventState[key]) == \"object\") {\n                            for (const stateKey in eventState[key]) {\n                                if (eventState[key][stateKey]) {\n                                    toAdd = true\n                                    break\n                                }\n                            }\n                        } else {\n                            toAdd = true\n                            break\n                        }\n                    }\n                }\n            } else {\n                if (eventState[child]) {\n                    if (typeof (eventState[child]) == \"object\") {\n                        if (child2 == \"all\") {\n                            for (const key in eventState[child]) {\n                                if (eventState[child][key]) {\n                                    toAdd = true\n                                    break\n                                }\n                            }\n                        } else {\n                            toAdd = eventState[child][child2]\n                        }\n                    } else {\n                        toAdd = true\n                    }\n                }\n            }\n        }\n        return toAdd\n    }\n\n    static remove(node: Node) {\n        var self = RedMgr.ins\n        for (let index = self.observersNodes.length - 1; index >= 0; index--) {\n            const v = self.observersNodes[index];\n            if (v.nodeParent == node) {\n                self.observersNodes.splice(index, 1)\n            }\n        }\n    }\n\n    getHasObs(node: Node): RedObserver {\n        for (let index = 0; index < this.observersNodes.length; index++) {\n            const v = this.observersNodes[index];\n            if (v.nodeParent == node) {\n                return v\n            }\n        }\n        return null\n    }\n\n    getRedNode(node: Node, transform: any) {\n        var tmpNode = node.getChildByName(\"red_azhe\")\n        if (tmpNode == null) {\n            tmpNode = new Node(\"red_azhe\")\n            let uitrans = tmpNode.addComponent(UITransform)\n            uitrans.anchorX = uitrans.anchorY = 0.5\n\n            var pos = v3()\n\n            if (uitrans.anchorX == 0) {\n                pos.x = uitrans.width\n            } else {\n                pos.x = uitrans.width / 2\n            }\n\n            if (uitrans.anchorY == 1) {\n                pos.y = 0\n            } else if (uitrans.anchorY == 0) {\n                pos.y = uitrans.height\n            } else {\n                pos.y = uitrans.height / 2\n            }\n\n            if (transform.scale) {\n                tmpNode.scale = transform.scale\n            }\n            if (transform.offset) {\n                pos.x = pos.x + transform.offset.x\n                pos.y = pos.y + transform.offset.y\n            }\n            tmpNode.position = pos\n            let spr = tmpNode.addComponent(Sprite)\n            if (transform.image) {\n                spr.spriteFrame = transform.image\n            } else {\n                spr.setTexture(\"Chess/UI/Common/dot\")\n            }\n            node.addChild(tmpNode)\n        }\n        return tmpNode\n    }\n}\n"]}