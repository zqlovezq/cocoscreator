{"version":3,"sources":["file:///C:/chickenStarClient/client/assets/scripts/logic/model/hero/herobag/HeroResolvePop.ts"],"names":["_decorator","Node","Prefab","Toggle","proto","Net","ViewPop","HeroDataControl","ItemPoolMgr","HeroItem","tab","ItemInfo","RoleData","EventMgr","ccclass","property","HeroResolvePop","_ResolveHeros","Map","_totalNum","_isCheck","_canClick","register","onMsg","Ptl","SetAutoDisbandRsp","on_s2c_SetAutoDisbandRsp","onShow","ins","autoDisband","toggle_auto","isChecked","node_toggle_label","active","herosMap","getAllResolveHeros","size","node_content","destroyAllChildren","forEach","value","key","heroInfo","item","createHeroItem","ts","getComponent","UpdateContent","setTouchCallBack","get","Number","id","delete","set","setAllHerosSelect","sendMsg","msg","Msg_DisbandHeroesReq","heroIds","push","length","refreshBagData","Send","DisbandHeroesReq","clickAllResolve","clear","node_resolve_content","removeAllChildren","i","children","setSelect","data","getData","GetKeyValue_ConfigTable","HeroRecycleReward","itemId","num","node","createItem","clickAutoResolve","Msg_SetAutoDisbandReq","SetAutoDisbandReq","error","code","CommonErrorCode","Succeed"],"mappings":"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","sourcesContent":["/*\r\n * @Date: 2024-05-07 15:03:58\r\n * @LastEditors: wzq\r\n * @LastEditTime: 2024-11-14 17:29:31\r\n */\r\n\r\nimport { _decorator, Node, Prefab, Toggle } from 'cc';\r\nimport { proto } from 'client_protocol';\r\nimport { Net } from '../../../net/Net';\r\nimport { ViewPop } from '../../../../framework/base/ViewPop';\r\nimport { HeroDataControl } from './HeroDataControl';\r\nimport { ItemPoolMgr } from '../../item/ItemPoolMgr';\r\nimport { HeroItem } from '../../item/HeroItem';\r\nimport { HeroInfo } from '../HeroInfo';\r\nimport { tab } from '../../../../Table/table_gen';\r\nimport { ItemInfo } from '../../item/ItemInfo';\r\nimport { RoleData } from '../../role/RoleData';\r\nimport { EventMgr } from '../../../mgr/EventMgr';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('HeroResolvePop')\r\nexport class HeroResolvePop extends ViewPop {\r\n    @property(Prefab)\r\n    pfb_hero_item:Prefab = null;\r\n    @property(Prefab)\r\n    pfb_material_item:Prefab = null;\r\n    \r\n    @property(Node)\r\n    node_content: Node = null;\r\n    @property(Node)\r\n    node_resolve_content: Node = null;\r\n\r\n    @property(Toggle)\r\n    toggle_auto:Toggle = null;\r\n    @property(Node)\r\n    node_toggle_label:Node = null;\r\n    \r\n    private _ResolveHeros: Map<number, HeroInfo> = new Map();\r\n    private _totalNum:number = 0;\r\n    private _isCheck:boolean = true;\r\n    private _canClick:boolean = true;\r\n    register(): void {\r\n        EventMgr.onMsg(proto.Ptl.SetAutoDisbandRsp, this.on_s2c_SetAutoDisbandRsp, this)\r\n    }\r\n   \r\n    onShow(): void {\r\n        /* 获取可以遣散的所有英雄 */\r\n        this._canClick = true;\r\n        this._isCheck = RoleData.ins.autoDisband;\r\n        this.toggle_auto.isChecked = RoleData.ins.autoDisband;\r\n        this.node_toggle_label.active = RoleData.ins.autoDisband;\r\n\r\n        let herosMap = HeroDataControl.ins.getAllResolveHeros();\r\n        this._totalNum = herosMap.size;\r\n        this.node_content.destroyAllChildren()\r\n        herosMap.forEach((value,key)=>{\r\n            let heroInfo = value;\r\n            let item = ItemPoolMgr.ins.createHeroItem(heroInfo,this.node_content);\r\n            // item.parent = this.node_content;\r\n            let ts: HeroItem = item.getComponent(HeroItem)\r\n            ts.UpdateContent(heroInfo);\r\n\r\n            ts.setTouchCallBack(() => {\r\n                if(this._ResolveHeros.get(Number(heroInfo.id))){\r\n                    this._ResolveHeros.delete(Number(heroInfo.id))\r\n                }else{\r\n                    this._ResolveHeros.set(Number(heroInfo.id),heroInfo)\r\n                }\r\n                this.setAllHerosSelect();\r\n            })\r\n        })\r\n        this.setAllHerosSelect();\r\n    }\r\n    /* 遣散英雄 */\r\n    sendMsg() {\r\n        let msg = new proto.Msg_DisbandHeroesReq()\r\n        const heroIds = [];\r\n        this._ResolveHeros.forEach((value,key)=>{\r\n            heroIds.push(key);\r\n        })\r\n        if(heroIds.length===0){\r\n            return;\r\n        }\r\n        msg.heroIds = heroIds;\r\n        HeroDataControl.ins.refreshBagData(0);\r\n        Net.Send(proto.Ptl.DisbandHeroesReq, msg)\r\n    }\r\n    /* 一键选择所有遣散的英雄 */\r\n    clickAllResolve() {\r\n        if (this._ResolveHeros.size >= this._totalNum) {\r\n            this._ResolveHeros.clear();\r\n        } else {\r\n            this._ResolveHeros = HeroDataControl.ins.getAllResolveHeros();\r\n        }\r\n        this.setAllHerosSelect();\r\n    }\r\n    setAllHerosSelect(){\r\n        this.node_resolve_content.removeAllChildren();\r\n        for(let i=0;i<this.node_content.children.length;i++){\r\n            let item = this.node_content.children[i];\r\n            let ts: HeroItem = item.getComponent(HeroItem)\r\n            let heroInfo = this._ResolveHeros.get(Number(ts.heroInfo.id))\r\n            ts.setSelect(heroInfo?true:false);\r\n        }\r\n        let data = new ItemInfo();\r\n        let item = tab.getData().GetKeyValue_ConfigTable().HeroRecycleReward;\r\n        data.itemId = item[0]\r\n        data.num =item[1]*this._ResolveHeros.size;\r\n        let node = ItemPoolMgr.ins.createItem(data,this.node_resolve_content);\r\n        node.active = data.num>0;\r\n    }\r\n    /* 点击自动遣散 */\r\n    clickAutoResolve(){\r\n        if(this._canClick){\r\n            this._canClick = false;\r\n            let msg = new proto.Msg_SetAutoDisbandReq();\r\n            msg.autoDisband = !RoleData.ins.autoDisband;\r\n            Net.Send(proto.Ptl.SetAutoDisbandReq , msg)\r\n        }\r\n    }\r\n    on_s2c_SetAutoDisbandRsp(msg:proto.Msg_SetAutoDisbandRsp){\r\n        this._canClick = true;\r\n        if (msg.error && msg.error.code != proto.CommonErrorCode.Succeed) return;\r\n        RoleData.ins.autoDisband = msg.autoDisband;\r\n        this._isCheck = RoleData.ins.autoDisband;\r\n        this.toggle_auto.isChecked = RoleData.ins.autoDisband;\r\n        this.node_toggle_label.active = RoleData.ins.autoDisband;\r\n    }\r\n}\r\n\r\n\r\n"]}