{"version":3,"sources":["file:///C:/chickenStarClient/client/assets/scripts/logic/model/activity/rookieTask/RookieTaskMgr.ts"],"names":["_decorator","AbsControl","TaskData","tab","TRIALLAYER","TRIALTASK","MallDataMgr","ccclass","property","RookieTaskMgr","_taskMap","Map","_mallMap","stateToChange","ins","_instance","initTask","msg","taskMap","newPlayerTrialMap","Object","keys","forEach","key","set","id","i","getData","ActivityNewPlayerTaskTable","length","mallId","MallId","k","MallItemTabe","itemTab","has","get","push","initTrialTasks","getMallTabs","getTrialTask","handleTask","ID","view","day","layer","opName1","OpenFunctionName","OpenFunctionName_ActivityNewPlayerTask","opName2","OpenFunctionName_ActivityNewPlayerTask2","trialInfo1","trialInfo2","cur_day","ROOKIE","unlockedDays","ELITE","newPlayerData","ActivityNewPlayerTaskTableById","getValue","GIFT","taskArr","taskData","getTrialTaskInfo","isCanReceived","arr","mallItemId","Id","maxCount","LimitCount","boughtCount","getFixedShopData","checkIsRed","data","isRed","obj","TASK1","TASK2","red_trialRed","red_score_red","type","openName1","openName2","openName","scoreTab","ActivityNewPlayerTaskScoreTableById","newPlayerTaskTab","newPlayertrial","Group","socre","score","receiveIds","receivedScoreIds","isGot","indexOf","Score"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node } from 'cc';\r\nimport { AbsControl } from '../../../../framework/base/IAbs';\r\nimport { proto } from 'client_protocol';\r\nimport { TaskData } from '../../task/TaskData';\r\nimport { tab } from '../../../../Table/table_gen';\r\nimport { TRIALLAYER, TRIALTASK } from '../../../../Common/script/EnumTypeMgr';\r\nimport { MallDataMgr } from '../../shop/MallDataMgr';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('RookieTaskMgr')\r\nexport class RookieTaskMgr extends AbsControl {\r\n    private _taskMap: Map<number, proto.NewPlayerTrial> = new Map();\r\n    private _mallMap: Map<number, tab.MallItemTabe[]> = new Map();\r\n    private stateToChange = {};\r\n    private static _instance: RookieTaskMgr;\r\n    public static get ins() {\r\n        if (null == this._instance) {\r\n            this._instance = new RookieTaskMgr();\r\n        }\r\n        return this._instance;\r\n    }\r\n    initTask(msg: proto.Msg_GetNewPlayerTrialMapRsp) {\r\n        const taskMap = msg.newPlayerTrialMap;\r\n        Object.keys(taskMap).forEach(key => {\r\n            this._taskMap.set(taskMap[key].id, taskMap[key] as proto.NewPlayerTrial);\r\n        })\r\n\r\n        // 初始化商品信息\r\n        for (let i = 0; i < tab.getData().ActivityNewPlayerTaskTable.length; i++) {\r\n            const mallId = tab.getData().ActivityNewPlayerTaskTable[i].MallId;\r\n            this._mallMap.set(mallId, []);\r\n        }\r\n        for (let k = 0; k < tab.getData().MallItemTabe.length; k++) {\r\n            const itemTab = tab.getData().MallItemTabe[k];\r\n            if (this._mallMap.has(itemTab.MallId)) {\r\n                this._mallMap.get(itemTab.MallId).push(itemTab);\r\n            }\r\n        }\r\n\r\n        TaskData.ins.initTrialTasks(this._taskMap);\r\n    }\r\n    getMallTabs(id: number) {\r\n        return this._mallMap.get(id);\r\n    }\r\n    getTrialTask(id: tab.OpenFunctionName) {\r\n        return this._taskMap.get(id);\r\n    }\r\n    // 设置试炼红点数据\r\n    // 检测id数据里面是否有可领取的数据\r\n    handleTask(ID: number, view: TRIALTASK, day: number, layer: number) {\r\n        const opName1 = tab.OpenFunctionName.OpenFunctionName_ActivityNewPlayerTask;\r\n        const opName2 = tab.OpenFunctionName.OpenFunctionName_ActivityNewPlayerTask2;\r\n        let trialInfo1 = RookieTaskMgr.ins.getTrialTask(opName1);\r\n        let trialInfo2 = RookieTaskMgr.ins.getTrialTask(opName2);\r\n        let cur_day = -1;\r\n        if(layer==TRIALLAYER.ROOKIE&&trialInfo1){\r\n            cur_day = trialInfo1.unlockedDays\r\n        }\r\n        if(layer==TRIALLAYER.ELITE&&trialInfo2){\r\n            cur_day = trialInfo2.unlockedDays\r\n        }\r\n        const newPlayerData = tab.getData().ActivityNewPlayerTaskTableById.getValue(ID);\r\n        // 未解锁返回false\r\n        if (day > (cur_day - (layer - 1) * 7)) {\r\n            return false\r\n        }\r\n        if (view < TRIALTASK.GIFT) {\r\n            const taskArr = newPlayerData['TaskIds' + view]\r\n            for (let i = 0; i < taskArr.length; i++) {\r\n                const taskData = TaskData.ins.getTrialTaskInfo(taskArr[i]);\r\n                if (taskData && taskData.isCanReceived) {\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        } else {\r\n            const arr = this._mallMap.get(newPlayerData.MallId);\r\n            const mallItemId = arr[0].Id;\r\n            const maxCount = arr[0].LimitCount;\r\n            const boughtCount = MallDataMgr.ins.getFixedShopData(newPlayerData.MallId).get(mallItemId);\r\n            return boughtCount < maxCount;\r\n        }\r\n    }\r\n    checkIsRed(layer: number, day?: number, view?: number) {\r\n        const data = this.stateToChange[layer] ?? {};\r\n        let isRed = false;\r\n        for (let i = 1; i <= 7; i++) {\r\n            const obj = data[i];\r\n            if (!obj) {\r\n                continue;\r\n            }\r\n            if (view) {\r\n                if (day === i) {\r\n                    isRed = obj[view];\r\n                    break;\r\n                }\r\n            } else {\r\n                if (day) {\r\n                    if (day === i) {\r\n                        isRed = obj[TRIALTASK.TASK1] || obj[TRIALTASK.TASK2] || obj[TRIALTASK.GIFT];\r\n                        break;\r\n                    }\r\n                } else {\r\n                    if (obj[TRIALTASK.TASK1] || obj[TRIALTASK.TASK2] || obj[TRIALTASK.GIFT]) {\r\n                        isRed = true;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return isRed;\r\n    }\r\n    red_trialRed() {\r\n        for (let k = 1; k <= 2; k++) {\r\n            this.stateToChange[k] = {};\r\n            for (let i = 1; i <= 7; i++) {\r\n                const obj = {};\r\n                this.stateToChange[k][i] = obj;\r\n                const ID = k * 100 + i;\r\n                obj[TRIALTASK.TASK1] = this.handleTask(ID, TRIALTASK.TASK1, i, k);\r\n                obj[TRIALTASK.TASK2] = this.handleTask(ID, TRIALTASK.TASK2, i, k);\r\n                obj[TRIALTASK.GIFT] = this.handleTask(ID, TRIALTASK.GIFT, i, k);\r\n            }\r\n        }\r\n    }\r\n    // 是否有可领取的积分奖励\r\n    red_score_red(type: TRIALLAYER) {\r\n        let isRed:boolean = false;\r\n        const openName1 = tab.OpenFunctionName.OpenFunctionName_ActivityNewPlayerTask;\r\n        const openName2 = tab.OpenFunctionName.OpenFunctionName_ActivityNewPlayerTask2;\r\n        let openName = -1\r\n        if(type===TRIALLAYER.ROOKIE){\r\n            openName = openName1\r\n        }else if(type===TRIALLAYER.ELITE){\r\n            openName = openName2\r\n        }\r\n        if(openName<0){\r\n            return false\r\n        }\r\n        const data = RookieTaskMgr.ins.getTrialTask(openName);\r\n        if(!data){\r\n            return false\r\n        }\r\n        for (let i = 0; i < 6; i++) {\r\n            const id = type * 100 + (6 - i);\r\n            const scoreTab = tab.getData().ActivityNewPlayerTaskScoreTableById.getValue(id);\r\n            const newPlayerTaskTab = tab.getData().ActivityNewPlayerTaskTableById.getValue(scoreTab.Id);\r\n            const newPlayertrial = this.getTrialTask(newPlayerTaskTab.Group);\r\n            const socre = newPlayertrial.score;\r\n            const receiveIds = newPlayertrial.receivedScoreIds;\r\n            const isGot = receiveIds.indexOf(scoreTab.Id)>-1;\r\n            isRed = !isGot&&socre>=scoreTab.Score;\r\n            if(isRed){\r\n                break\r\n            }\r\n        }\r\n        return isRed;\r\n    }\r\n}\r\n\r\n\r\n"]}