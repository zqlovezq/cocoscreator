{"version":3,"sources":["file:///C:/chickenStarClient/client/assets/scripts/Common/script/HeroAttrMgr.ts"],"names":["HeroAttr","HeroAttrMgr","tab","FightMacro","RoleData","HeroData","HeroTeamControl","RareBookData","EquipData","PrestigeData","AssociationData","powerScore","attr","Map","init","heroId","heroInfo","ins","getById","heroSkills","getHeroAttrAndSkills","getHeroPowerScore","console","log","addAttr","type","value","AttrType","AttrType_EquipSkill","oldVal","get","set","getAttr","getHeroInfoAttr","heroAttr","getHeroTotalAttack","atk","AttrType_Attack","per1","AttrType_DamagePer1","per2","AttrType_DamagePer2","per3","AttrType_DamagePer3","Math","floor","MAX_CHANCE","getHeroTotalDefence","def","AttrType_Defence","AttrType_DefencePer1","AttrType_DefencePer2","AttrType_DefencePer3","getHeroTotalHp","hp","AttrType_Hp","per","AttrType_HpPer","getHeroAttrs","teamSlot","getTeam","heroLevel","slot","find","a","heroClass","heroTable","Class","id","level","getMinTeamLevel","getHeroStarUpTableByStar","star","MaxLevel","getHeroBaseAttr","i","length","starUpCfg","getHeroExtraAllAttrsByType","ExtraAttrTarget","ExtraAttrTarget_All","getHeroStarStepAttrsByType","baseAttr","heroAttrTable","HeroAttrType","HeroAttrValue","AttrPerLevel","attrCfg","getData","HeroAttrTableById","getValue","ExtraAttrTarget_Mine","target","attrId","ExtraAttrList","finshedStarSteps","stepConfig","HeroStarStepTableById","getHeadAndFrameAttrs","avatarInfo","headFrames","frameTab","HeadFramTableById","itemId","k","AttrTypes","AttrValue","j","headIcons","headTab","HeadTableById","v","getHeroResonanceAttrs","lvTab","getResonanceLevelTab","starTab","getResonanceStarTab","getHeroPrestigeAttrs","prestigeAttr","attrMap","forEach","val","key","heroInTeam","getBookAttrAndSkills","getBookSerialAttrs","getScrollPaintAttrs","getGeneAttrAndSkills","getElixirAttrs","getEquipAttrAndSkills","getEquipResonanceAttrs","getGuildtAttrs","AttrType_TotalAttack","AttrType_TotalDefence","AttrType_TotalHp","bookList","getBookInfosByHeroClass","bookInfo","startCfg","bookStarTable","levelRatio","bookLevelTable","Ratio","ExtraAttrType","ExtraAttrValue","isWear","push","SkillId","BookSeriesTable","cfg","serialIfno","getSerieInfoById","Id","isComplete","getPaintingAttrMap","getInGuild","getGuildAttr","smallLevel","gene","smallGeneLevel","bigLevel","bigGeneLevel","GeneLevelTable","geneTab","Type","GeneType","GeneType_SmallGene","Level","GeneType_BigGene","elixirAttrs","getElixirAttr","container","getEquipContainerDataByHeroClass","slotData","getEquipAttr","enhanceLv","refineLv","equipInfo","getEquipInfoById","equipId","equipTable","EnhanceLimit","RefineLimit","EquipAttrTableById","Base","Growth","extraAttr","skillList","masterTab","masteInfo","qualityTable","AttrList","enhanceTable","refineTable","initHeroStarPSMap","m_heroPreCalcAttrMap","has","calcHeroPowerScore","calcSkillPowerScore","m_heroStarPSMap","HeroPowerScore","AttrType_HeroStar","Args","m_heroSkillPSMap","m_heroAttrPSMap","add","getHeroStarPowerScore","score","Score","Set"],"mappings":"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","sourcesContent":["// 此脚本由后端维护，遇到错误或需要变更需要同时修正后端代码\r\nimport { Long } from 'protobufjs';\r\nimport { tab } from \"../../Table/table_gen\";\r\nimport { proto } from \"client_protocol\";\r\nimport { FightMacro } from '../../logic/fight/define/FightDefine';\r\nimport { RoleData } from '../../logic/model/role/RoleData';\r\nimport { HeroData } from \"../../logic/model/hero/HeroData\";\r\nimport { HeroInfo } from \"../../logic/model/hero/HeroInfo\";\r\nimport { HeroTeamControl } from \"../../logic/model/hero/HeroTeamControl\";\r\nimport { RareBookData } from '../../logic/model/rareBook/RareBookData';\r\nimport { RareBookInfo } from '../../logic/model/rareBook/RareBookInfo';\r\nimport { EquipData } from '../../logic/model/equip/EquipData';\r\nimport { EquipInfo } from '../../logic/model/equip/EquipInfo';\r\nimport { EquipContainerInfo } from '../../logic/model/equip/EquipContainerInfo';\r\nimport { PrestigeData } from '../../logic/model/prestige/PrestigeData';\r\nimport { AssociationData } from '../../logic/model/association/AssociationData';\r\n\r\nexport class HeroAttr {\r\n    powerScore: number = 0;                         // 英雄战力\r\n    attr: Map<tab.AttrType, number> = new Map();    // 英雄数据集\r\n\r\n    // 初始化数据\r\n    init(heroId: number | Long) {\r\n        // 获得要计算的英雄数据集\r\n        let heroInfo = HeroData.ins.getById(heroId);\r\n        if (heroInfo == null) { return; }\r\n        // 获得英雄属性及技能\r\n        let heroSkills: number[] = []\r\n        HeroAttrMgr.getHeroAttrAndSkills(this, heroInfo, heroSkills);\r\n        // 计算英雄战力\r\n        HeroAttrMgr.getHeroPowerScore(this, heroInfo, heroSkills);\r\n        console.log(this)\r\n    }\r\n\r\n    // 增加属性\r\n    addAttr(type: tab.AttrType, value: number) {\r\n        if (type == tab.AttrType.AttrType_EquipSkill) { return; }\r\n        let oldVal = this.attr.get(type) ?? 0;\r\n        this.attr.set(type, oldVal + value);\r\n    }\r\n\r\n    // 获得属性\r\n    getAttr(type: tab.AttrType): number {\r\n        return this.attr.get(type) ?? 0\r\n    }\r\n}\r\n\r\nexport class HeroAttrMgr {\r\n    // 获得英雄战力及属性集\r\n    public static getHeroInfoAttr(heroId: number | Long): HeroAttr {\r\n        let heroAttr = new HeroAttr;\r\n        heroAttr.init(heroId);\r\n        return heroAttr;\r\n    }\r\n\r\n    // 计算英雄整体攻击力\r\n    // [backend]rps.getHeroTotalAttack\r\n    public static getHeroTotalAttack(heroAttr: HeroAttr): number {\r\n        let atk = heroAttr.getAttr(tab.AttrType.AttrType_Attack);\r\n        let per1 = heroAttr.getAttr(tab.AttrType.AttrType_DamagePer1);\r\n        let per2 = heroAttr.getAttr(tab.AttrType.AttrType_DamagePer2);\r\n        let per3 = heroAttr.getAttr(tab.AttrType.AttrType_DamagePer3);\r\n        atk = Math.floor(atk * (FightMacro.MAX_CHANCE + per1) / FightMacro.MAX_CHANCE)\r\n        atk = Math.floor(atk * (FightMacro.MAX_CHANCE + per2) / FightMacro.MAX_CHANCE)\r\n        atk = Math.floor(atk * (FightMacro.MAX_CHANCE + per3) / FightMacro.MAX_CHANCE)\r\n        return atk\r\n    }\r\n\r\n    // 计算英雄整体防御力\r\n    // [backend]rps.getHeroTotalDefence\r\n    public static getHeroTotalDefence(heroAttr: HeroAttr): number {\r\n        let def = heroAttr.getAttr(tab.AttrType.AttrType_Defence);\r\n        let per1 = heroAttr.getAttr(tab.AttrType.AttrType_DefencePer1);\r\n        let per2 = heroAttr.getAttr(tab.AttrType.AttrType_DefencePer2);\r\n        let per3 = heroAttr.getAttr(tab.AttrType.AttrType_DefencePer3);\r\n        def = Math.floor(def * (FightMacro.MAX_CHANCE + per1) / FightMacro.MAX_CHANCE)\r\n        def = Math.floor(def * (FightMacro.MAX_CHANCE + per2) / FightMacro.MAX_CHANCE)\r\n        def = Math.floor(def * (FightMacro.MAX_CHANCE + per3) / FightMacro.MAX_CHANCE)\r\n        return def\r\n    }\r\n\r\n    // 计算英雄整体血量\r\n    // [backend]rps.getHeroTotalHp\r\n    public static getHeroTotalHp(heroAttr: HeroAttr): number {\r\n        let hp = heroAttr.getAttr(tab.AttrType.AttrType_Hp);\r\n        let per = heroAttr.getAttr(tab.AttrType.AttrType_HpPer);\r\n        return Math.floor(hp * (FightMacro.MAX_CHANCE + per) / FightMacro.MAX_CHANCE)\r\n    }\r\n\r\n    /****************************************************************/\r\n    // 获得英雄属\r\n    // [backend]Hero.GetHeroAttrs\r\n    private static getHeroAttrs(heroAttr: HeroAttr, heroInfo: HeroInfo) {\r\n        // 获得上阵数据\r\n        let teamSlot: proto.ITeamSlot[] = HeroTeamControl.ins.getTeam();\r\n        // 获得英雄等级\r\n        let heroLevel = 1;\r\n        let slot = teamSlot.find(a => a.heroClass == heroInfo.heroTable.Class);\r\n        if (slot && slot.heroId == heroInfo.id) {\r\n            heroLevel = slot.level\r\n        } else {\r\n            heroLevel = HeroTeamControl.ins.getMinTeamLevel()\r\n        }\r\n\r\n        // 检查等级限制\r\n        if (heroLevel > heroInfo.getHeroStarUpTableByStar(heroInfo.star).MaxLevel) {\r\n            heroLevel = heroInfo.getHeroStarUpTableByStar(heroInfo.star).MaxLevel;\r\n        }\r\n\r\n        // 获得基础属性\r\n        HeroAttrMgr.getHeroBaseAttr(heroAttr, heroInfo, heroLevel - 1);\r\n\r\n        // 获得额外全体属性加成\r\n        for (let i = 0; i < teamSlot.length; ++i) {\r\n            let slot = teamSlot[i];\r\n            if (slot == null) { continue; }\r\n            let heroInfo = HeroData.ins.getById(slot.heroId);\r\n            if (heroInfo == null) { continue; }\r\n            // 获得星级属性配置\r\n            let starUpCfg = heroInfo.getHeroStarUpTableByStar(heroInfo.star);\r\n            if (starUpCfg == null) { continue; }\r\n            // 获得全体附加属性\r\n            HeroAttrMgr.getHeroExtraAllAttrsByType(heroAttr, heroInfo, tab.ExtraAttrTarget.ExtraAttrTarget_All)\r\n            // 获得星级阶段属性\r\n            HeroAttrMgr.getHeroStarStepAttrsByType(heroAttr, heroInfo, tab.ExtraAttrTarget.ExtraAttrTarget_All)\r\n        }\r\n    }\r\n\r\n    // 获得英雄基础属性\r\n    // [backend]Hero.GetAttrs\r\n    private static getHeroBaseAttr(heroAttr: HeroAttr, heroInfo: HeroInfo, level: number) {\r\n        // 获得基础属性\r\n        let baseAttr = heroInfo.heroAttrTable;\r\n        if (baseAttr) {\r\n            for (let i = 0; i < baseAttr.HeroAttrType.length; ++i) {\r\n                heroAttr.addAttr(baseAttr.HeroAttrType[i], baseAttr.HeroAttrValue[i]);\r\n            }\r\n        }\r\n        // 获得等级提升属性\r\n        let starUpCfg = heroInfo.getHeroStarUpTableByStar(heroInfo.star);\r\n        if (starUpCfg == null) { return; }\r\n        if (starUpCfg.AttrPerLevel != 0) {\r\n            let attrCfg = tab.getData().HeroAttrTableById.getValue(starUpCfg.AttrPerLevel);\r\n            if (attrCfg) {\r\n                for (let i = 0; i < attrCfg.HeroAttrType.length; ++i) {\r\n                    heroAttr.addAttr(attrCfg.HeroAttrType[i], attrCfg.HeroAttrValue[i] * level);\r\n                }\r\n            }\r\n        }\r\n        // 获得附加属性\r\n        HeroAttrMgr.getHeroExtraAllAttrsByType(heroAttr, heroInfo, tab.ExtraAttrTarget.ExtraAttrTarget_Mine)\r\n        // 获得星级阶段属性\r\n        HeroAttrMgr.getHeroStarStepAttrsByType(heroAttr, heroInfo, tab.ExtraAttrTarget.ExtraAttrTarget_Mine)\r\n    }\r\n\r\n    // 获得额外属性加成\r\n    // [backend]Hero.getExtraAllAttrsByType\r\n    public static getHeroExtraAllAttrsByType(heroAttr: HeroAttr, heroInfo: HeroInfo, target:tab.ExtraAttrTarget) {\r\n        let starUpCfg = heroInfo.getHeroStarUpTableByStar(heroInfo.star);\r\n        if (starUpCfg == null) { return; }\r\n        for (let i = 0; i < starUpCfg.ExtraAttrTarget.length; ++i) {\r\n            if (starUpCfg.ExtraAttrTarget[i] == target) {\r\n                let attrId = starUpCfg.ExtraAttrList[i];\r\n                let attrCfg = tab.getData().HeroAttrTableById.getValue(attrId);\r\n                if (attrCfg) {\r\n                    for (let i = 0; i < attrCfg.HeroAttrType.length; ++i) {\r\n                        heroAttr.addAttr(attrCfg.HeroAttrType[i], attrCfg.HeroAttrValue[i]);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    // 获得星级阶段升级带来得属性加成\r\n    // [backend]Hero.getStarStepAttrsByType\r\n    public static getHeroStarStepAttrsByType(heroAttr: HeroAttr, heroInfo: HeroInfo, target:tab.ExtraAttrTarget) {\r\n        for (let i = 0; i < heroInfo.finshedStarSteps.length; i++) {\r\n            let stepConfig = tab.getData().HeroStarStepTableById.getValue(heroInfo.finshedStarSteps[i]);\r\n            if (stepConfig == null) { continue; }\r\n            for (let i = 0; i < stepConfig.ExtraAttrTarget.length; ++i) {\r\n                if (stepConfig.ExtraAttrTarget[i] == target) {\r\n                    let attrId = stepConfig.ExtraAttrList[i];\r\n                    let attrCfg = tab.getData().HeroAttrTableById.getValue(attrId);\r\n                    if (attrCfg) {\r\n                        for (let i = 0; i < attrCfg.HeroAttrType.length; ++i) {\r\n                            heroAttr.addAttr(attrCfg.HeroAttrType[i], attrCfg.HeroAttrValue[i]);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // 获取头像 头像框 属性加成\r\n    // [backend]AvatarManager.GetAttrs\r\n    public static getHeadAndFrameAttrs(heroAttr: HeroAttr){\r\n        for(let i=0;i<RoleData.ins.avatarInfo.headFrames.length;i++){\r\n            const frameTab = tab.getData().HeadFramTableById.getValue(RoleData.ins.avatarInfo.headFrames[i].itemId);\r\n            for (let k = 0; k < frameTab.AttrTypes.length; k++) {\r\n                heroAttr.addAttr(frameTab.AttrTypes[k], frameTab.AttrValue[k]);\r\n            }\r\n        }\r\n\r\n        for(let j=0;j<RoleData.ins.avatarInfo.headIcons.length;j++){\r\n            const headTab = tab.getData().HeadTableById.getValue(RoleData.ins.avatarInfo.headIcons[j].itemId);\r\n            for (let v = 0; v < headTab.AttrTypes.length; v++) {\r\n                heroAttr.addAttr(headTab.AttrTypes[v], headTab.AttrValue[v]);\r\n            }\r\n        }\r\n    }\r\n    // 获得英雄共鸣属性加成\r\n    // [backend]HeroManager.GetResonanceAttrs\r\n    public static getHeroResonanceAttrs(heroAttr: HeroAttr) {\r\n        // 获得等级共鸣配置\r\n        let lvTab = HeroTeamControl.ins.getResonanceLevelTab();\r\n        if (lvTab) {\r\n            for (let i = 0; i < lvTab.AttrTypes.length; i++) {\r\n                heroAttr.addAttr(lvTab.AttrTypes[i], lvTab.AttrValue[i]);\r\n            }\r\n        }\r\n\r\n        // 获得星级共鸣配置\r\n        let starTab = HeroTeamControl.ins.getResonanceStarTab();\r\n        if (starTab) {\r\n            for (let i = 0; i < starTab.AttrTypes.length; i++) {\r\n                heroAttr.addAttr(starTab.AttrTypes[i], starTab.AttrValue[i]);\r\n            }\r\n        }\r\n    }\r\n    // 成就属性加成\r\n    public static getHeroPrestigeAttrs(heroAttr: HeroAttr){\r\n        const prestigeAttr = PrestigeData.ins.attrMap;\r\n        prestigeAttr.forEach((val,key)=>{\r\n            heroAttr.addAttr(key, val);\r\n        })\r\n    }\r\n    // 获得英雄总属性\r\n    // [backend]RPSManager.GetHeroAttrAndSkills\r\n    public static getHeroAttrAndSkills(heroAttr: HeroAttr, heroInfo: HeroInfo, heroSkills: number[]) {\r\n        // 获得英雄属性\r\n        HeroAttrMgr.getHeroAttrs(heroAttr, heroInfo);\r\n        // 检查英雄是否在队伍中\r\n        if (HeroTeamControl.ins.heroInTeam(heroInfo.id)) {\r\n            // 获得秘籍属性技能加成\r\n            HeroAttrMgr.getBookAttrAndSkills(heroAttr, heroInfo, heroSkills);\r\n            // 获得秘籍套装属性加成\r\n            HeroAttrMgr.getBookSerialAttrs(heroAttr);\r\n            // 获得绘卷属性加成\r\n            HeroAttrMgr.getScrollPaintAttrs(heroAttr, heroInfo);\r\n            // 获得基因属性技能加成\r\n            HeroAttrMgr.getGeneAttrAndSkills(heroAttr, heroInfo, heroSkills);\r\n            // 获得丹药属性加成\r\n            HeroAttrMgr.getElixirAttrs(heroAttr, heroInfo);\r\n            // 获得装备属性技能加成\r\n            HeroAttrMgr.getEquipAttrAndSkills(heroAttr, heroInfo, heroSkills);\r\n            // 获得英雄共鸣属性加成\r\n            HeroAttrMgr.getHeroResonanceAttrs(heroAttr);\r\n            // 获得装备共鸣属性加成\r\n            HeroAttrMgr.getEquipResonanceAttrs(heroAttr, heroInfo);\r\n            HeroAttrMgr.getHeroPrestigeAttrs(heroAttr);\r\n            // 头像头像框属性加成\r\n            HeroAttrMgr.getHeadAndFrameAttrs(heroAttr);\r\n            // 帮会属性加成\r\n            HeroAttrMgr.getGuildtAttrs(heroAttr,heroInfo);\r\n        }\r\n        // 填充最终属性\r\n        heroAttr.attr.set(tab.AttrType.AttrType_TotalAttack,HeroAttrMgr.getHeroTotalAttack(heroAttr))\r\n        heroAttr.attr.set(tab.AttrType.AttrType_TotalDefence,HeroAttrMgr.getHeroTotalDefence(heroAttr))\r\n        heroAttr.attr.set(tab.AttrType.AttrType_TotalHp,HeroAttrMgr.getHeroTotalHp(heroAttr))\r\n    }\r\n    /****************************************************************/\r\n    // 获得秘籍属性加成\r\n    // [backend]BookManager.GetAttrs\r\n    private static getBookAttrAndSkills(heroAttr: HeroAttr, heroInfo: HeroInfo, heroSkills: number[]) {\r\n        // 通过英雄类型获得全部秘籍\r\n        let bookList = RareBookData.ins.getBookInfosByHeroClass(heroInfo.heroTable.Class);\r\n        if (!bookList) { return; }\r\n        for (let i = 0; i < bookList.length; ++i) {\r\n            let bookInfo: RareBookInfo = bookList[i];\r\n            let startCfg: tab.BookStarTable = bookInfo.bookStarTable\r\n            let levelRatio = 1;\r\n            if (bookInfo.bookLevelTable) {\r\n                levelRatio = bookInfo.bookLevelTable.Ratio;\r\n            }\r\n\r\n            for (let i = 0; i < startCfg.AttrType.length; ++i) {\r\n                let val = Math.floor(startCfg.AttrValue[i] * (FightMacro.MAX_CHANCE + levelRatio /** bookInfo.level*/) / FightMacro.MAX_CHANCE)\r\n                heroAttr.addAttr(startCfg.AttrType[i], val);\r\n            }\r\n\r\n            for (let i = 0; i < startCfg.ExtraAttrType.length; ++i) {\r\n                heroAttr.addAttr(startCfg.ExtraAttrType[i], startCfg.ExtraAttrValue[i]);\r\n            }\r\n\r\n            // 已穿戴的情况把技能也加上\r\n            if (bookInfo.isWear) {\r\n                heroSkills.push(...startCfg.SkillId);\r\n            }\r\n        }\r\n    }\r\n    // 获得秘籍套装属性加成\r\n    // [backend]BookManager.GetSerialAttrs\r\n    private static getBookSerialAttrs(heroAttr: HeroAttr) {\r\n        for (let i = 0; i < tab.getData().BookSeriesTable.length; ++i) {\r\n            let cfg = tab.getData().BookSeriesTable[i];\r\n            if (!cfg) { continue; }\r\n            let serialIfno = RareBookData.ins.getSerieInfoById(cfg.Id);\r\n            if (serialIfno != null && serialIfno.isComplete()) {\r\n                for (let i = 0; i < cfg.AttrType.length; ++i) {\r\n                    heroAttr.addAttr(cfg.AttrType[i], cfg.AttrValue[i]);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /****************************************************************/\r\n    // 获得绘卷属性加成\r\n    // [backend]ScrollPaintingManager.GetAttrs\r\n    private static getScrollPaintAttrs(heroAttr: HeroAttr, heroInfo: HeroInfo) {\r\n        let attrMap = HeroTeamControl.ins.getPaintingAttrMap();\r\n        attrMap.forEach((val, type) => {\r\n            heroAttr.addAttr(type, val);\r\n        });\r\n    }\r\n     /****************************************************************/\r\n    // 获得帮会属性技能加成\r\n    // [backend]GeneManager.GetAttr\r\n    /****************************************************************/\r\n    private static getGuildtAttrs(heroAttr: HeroAttr,heroInfo: HeroInfo) {\r\n        if(AssociationData.ins.getInGuild()){\r\n            let attrMap = AssociationData.ins.getGuildAttr(heroInfo.heroTable.Class);\r\n            attrMap.forEach((val, type) => {\r\n                heroAttr.addAttr(type, val);\r\n            });\r\n        }\r\n    }\r\n    // 获得基因属性技能加成\r\n    // [backend]GeneManager.GetAttr\r\n    private static getGeneAttrAndSkills(heroAttr: HeroAttr, heroInfo: HeroInfo, heroSkills: number[]) {\r\n        let smallLevel = RoleData.ins.gene.smallGeneLevel;\r\n        let bigLevel = RoleData.ins.gene.bigGeneLevel;\r\n        for (let i = 0; i < tab.getData().GeneLevelTable.length; i++) {\r\n            let geneTab = tab.getData().GeneLevelTable[i];\r\n            if ((geneTab.Type == tab.GeneType.GeneType_SmallGene && geneTab.Level <= smallLevel) ||\r\n                (geneTab.Type == tab.GeneType.GeneType_BigGene && geneTab.Level <= bigLevel)) {\r\n                if (geneTab.AttrType == tab.AttrType.AttrType_EquipSkill) {\r\n                    heroSkills.push(geneTab.AttrValue)\r\n                } else {\r\n                    heroAttr.addAttr(geneTab.AttrType, geneTab.AttrValue);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /****************************************************************/\r\n    // 获得丹药属性加成\r\n    // [backend]ElixirManager.GetAttr\r\n    private static getElixirAttrs(heroAttr: HeroAttr, heroInfo: HeroInfo) {\r\n        let elixirAttrs:Map<tab.AttrType, number> = HeroTeamControl.ins.getElixirAttr();\r\n        if (elixirAttrs) {\r\n            elixirAttrs.forEach((val, type) => {\r\n                heroAttr.addAttr(type, val);\r\n            });\r\n        }\r\n    }\r\n    /****************************************************************/\r\n    // 获得装备属性技能加成\r\n    private static getEquipAttrAndSkills(heroAttr: HeroAttr, heroInfo: HeroInfo, heroSkills: number[]) {\r\n        // 获得装备槽位\r\n        let container: EquipContainerInfo = EquipData.ins.getEquipContainerDataByHeroClass(heroInfo.heroTable.Class);\r\n        if (!container) { return; }\r\n        for (let i = 0; i < container.slotData.length; ++i) {\r\n            HeroAttrMgr.getEquipAttr(heroAttr, container.slotData[i], heroSkills)\r\n        }\r\n    }\r\n    // 获得装备属性加成\r\n    // [backend]Equip.GetAttr\r\n    private static getEquipAttr(heroAttr: HeroAttr, slot: proto.IEquipSlotData, heroSkills: number[]) {\r\n        if (!slot) { return; }\r\n\r\n        // 获得强化等级\r\n        let enhanceLv = slot.enhanceLv ?? 0;\r\n        // 获得精炼等级\r\n        let refineLv = slot.refineLv ?? 0;\r\n\r\n        let equipInfo: EquipInfo = EquipData.ins.getEquipInfoById(slot.equipId);\r\n        if (!equipInfo) { return; }\r\n\r\n        // 检查强化等级是否超过武器上限\r\n        if (enhanceLv > equipInfo.equipTable.EnhanceLimit) {\r\n            enhanceLv = equipInfo.equipTable.EnhanceLimit;\r\n        }\r\n        \r\n        // 检查淬炼等级是否超过武器上限\r\n        if (refineLv > equipInfo.equipTable.RefineLimit) {\r\n            refineLv = equipInfo.equipTable.RefineLimit;\r\n        }\r\n\r\n        // 基础属性\r\n        for (let i = 0; i < equipInfo.baseAttr.length; ++i) {\r\n            let attrId = equipInfo.baseAttr[i];\r\n            let cfg = tab.getData().EquipAttrTableById.getValue(attrId);\r\n            if (!cfg) { continue; }\r\n            let val = cfg.Base + Math.floor(cfg.Base * enhanceLv * cfg.Growth / FightMacro.MAX_CHANCE);\r\n            heroAttr.addAttr(cfg.AttrType, val);\r\n        }\r\n\r\n        // 附加属性\r\n        for (let i = 0; i < equipInfo.extraAttr.length; ++i) {\r\n            let attrId = equipInfo.extraAttr[i];\r\n            let cfg = tab.getData().EquipAttrTableById.getValue(attrId);\r\n            if (!cfg) { continue; }\r\n            let val = cfg.Base + Math.floor(cfg.Base * refineLv * cfg.Growth / FightMacro.MAX_CHANCE);\r\n            heroAttr.addAttr(cfg.AttrType, val);\r\n        }\r\n\r\n        // 设置技能\r\n        if (equipInfo.skillList.length > 0) {\r\n            heroSkills.push(...equipInfo.skillList);\r\n        }\r\n    }\r\n    // 获得装备共鸣属性加成\r\n    // [backend]EquipManager.GetResonanceAttrs\r\n    private static getEquipResonanceAttrs(heroAttr: HeroAttr, heroInfo: HeroInfo) {\r\n        let container = EquipData.ins.getEquipContainerDataByHeroClass(heroInfo.heroTable.Class);\r\n        if (!container) { return; }\r\n        // 品质共鸣\r\n        let masterTab:tab.HeroMasterTable = container.masteInfo.qualityTable;\r\n        if (masterTab) {\r\n            for (let i = 0; i < masterTab.AttrList.length; i++) {\r\n                let attrCfg = tab.getData().EquipAttrTableById.getValue(masterTab.AttrList[i]);\r\n                if (attrCfg) {\r\n                    heroAttr.addAttr(attrCfg.AttrType, attrCfg.Base);\r\n                }\r\n            }\r\n        }\r\n        // 强化共鸣\r\n        masterTab = container.masteInfo.enhanceTable;\r\n        if (masterTab) {\r\n            for (let i = 0; i < masterTab.AttrList.length; i++) {\r\n                let attrCfg = tab.getData().EquipAttrTableById.getValue(masterTab.AttrList[i]);\r\n                if (attrCfg) {\r\n                    heroAttr.addAttr(attrCfg.AttrType, attrCfg.Base);\r\n                }\r\n            }\r\n        }\r\n        // 淬炼共鸣\r\n        masterTab = container.masteInfo.refineTable;\r\n        if (masterTab) {\r\n            for (let i = 0; i < masterTab.AttrList.length; i++) {\r\n                let attrCfg = tab.getData().EquipAttrTableById.getValue(masterTab.AttrList[i]);\r\n                if (attrCfg) {\r\n                    heroAttr.addAttr(attrCfg.AttrType, attrCfg.Base);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /****************************************************************/\r\n    // 计算英雄战力\r\n    public static getHeroPowerScore(heroAttr: HeroAttr, heroInfo: HeroInfo, heroSkills: number[]) {\r\n        HeroAttrMgr.initHeroStarPSMap();\r\n        // 计算英雄星级战力加成\r\n        //heroAttr.powerScore = HeroAttrMgr.getHeroStarPowerScore(heroInfo);\r\n        // 计算英雄属性战力\r\n        heroAttr.attr.forEach((val, type) => {\r\n            if (HeroAttrMgr.m_heroPreCalcAttrMap.has(type)) { return; }\r\n            heroAttr.powerScore += HeroAttrMgr.calcHeroPowerScore(type, val);\r\n        });\r\n        // 计算攻击力\r\n        heroAttr.powerScore += HeroAttrMgr.calcHeroPowerScore(tab.AttrType.AttrType_Attack, heroAttr.getAttr(tab.AttrType.AttrType_TotalAttack));\r\n        // 计算防御力\r\n        heroAttr.powerScore += HeroAttrMgr.calcHeroPowerScore(tab.AttrType.AttrType_Defence, heroAttr.getAttr(tab.AttrType.AttrType_TotalDefence));\r\n        // 计算血量\r\n        heroAttr.powerScore += HeroAttrMgr.calcHeroPowerScore(tab.AttrType.AttrType_Hp, heroAttr.getAttr(tab.AttrType.AttrType_TotalHp));\r\n        // 计算技能战力\r\n        heroAttr.powerScore += HeroAttrMgr.calcSkillPowerScore(heroSkills);\r\n    }\r\n    // 预解析战力表\r\n    private static m_heroStarPSMap: Map<tab.AttrType, tab.HeroPowerScore> = null;\r\n    private static m_heroAttrPSMap: Map<tab.AttrType, tab.HeroPowerScore> = new Map();\r\n    private static m_heroSkillPSMap: Map<tab.AttrType, tab.HeroPowerScore> = new Map();\r\n    private static m_heroPreCalcAttrMap: Set<tab.AttrType> = new Set();\r\n    private static initHeroStarPSMap() {\r\n        if (HeroAttrMgr.m_heroStarPSMap) { return; }\r\n        HeroAttrMgr.m_heroStarPSMap = new Map();\r\n        for (let i = 0; i < tab.getData().HeroPowerScore.length; ++i) {\r\n            let cfg = tab.getData().HeroPowerScore[i];\r\n            if (cfg.Type == tab.AttrType.AttrType_HeroStar) {\r\n                HeroAttrMgr.m_heroStarPSMap.set(cfg.Args, cfg);\r\n            } else if (cfg.Type == tab.AttrType.AttrType_EquipSkill) {\r\n                HeroAttrMgr.m_heroSkillPSMap.set(cfg.Args, cfg);\r\n            } else {\r\n                HeroAttrMgr.m_heroAttrPSMap.set(cfg.Type, cfg);\r\n            }\r\n        }\r\n\r\n        HeroAttrMgr.m_heroPreCalcAttrMap.add(tab.AttrType.AttrType_Attack);\r\n        HeroAttrMgr.m_heroPreCalcAttrMap.add(tab.AttrType.AttrType_DamagePer1);\r\n        HeroAttrMgr.m_heroPreCalcAttrMap.add(tab.AttrType.AttrType_DamagePer2);\r\n        HeroAttrMgr.m_heroPreCalcAttrMap.add(tab.AttrType.AttrType_DamagePer3);\r\n        HeroAttrMgr.m_heroPreCalcAttrMap.add(tab.AttrType.AttrType_Hp);\r\n        HeroAttrMgr.m_heroPreCalcAttrMap.add(tab.AttrType.AttrType_HpPer);\r\n        HeroAttrMgr.m_heroPreCalcAttrMap.add(tab.AttrType.AttrType_Defence);\r\n        HeroAttrMgr.m_heroPreCalcAttrMap.add(tab.AttrType.AttrType_DefencePer1);\r\n        HeroAttrMgr.m_heroPreCalcAttrMap.add(tab.AttrType.AttrType_DefencePer2);\r\n        HeroAttrMgr.m_heroPreCalcAttrMap.add(tab.AttrType.AttrType_DefencePer3);\r\n    }\r\n    // 计算英雄星级战力加成\r\n    private static getHeroStarPowerScore(heroInfo: HeroInfo): number {\r\n        if (HeroAttrMgr.m_heroStarPSMap.has(heroInfo.itemId)) {\r\n            let score = HeroAttrMgr.m_heroStarPSMap.get(heroInfo.itemId).Score;\r\n            return Math.floor(score * heroInfo.star / FightMacro.MAX_CHANCE);\r\n        }\r\n        return 0;\r\n    }\r\n    // 计算属性战力\r\n    private static calcHeroPowerScore(type: tab.AttrType, val: number): number {\r\n        if (HeroAttrMgr.m_heroAttrPSMap.has(type)) {\r\n            return Math.floor(HeroAttrMgr.m_heroAttrPSMap.get(type).Score * val / FightMacro.MAX_CHANCE);\r\n        }\r\n        return 0;\r\n    }\r\n    // 计算技能战力\r\n    private static calcSkillPowerScore(skillList: number[]): number {\r\n        let powerScore = 0;\r\n        for (let i = 0; i < skillList.length; ++i) {\r\n            let id = skillList[i];\r\n            if (HeroAttrMgr.m_heroSkillPSMap.has(id)) {\r\n                powerScore += HeroAttrMgr.m_heroSkillPSMap.get(id).Score;\r\n            }\r\n        }\r\n        return powerScore;\r\n    }\r\n}"]}