{"version":3,"sources":["file:///C:/chickenStarClient/client/assets/scripts/logic/fight/base/obj/role/monster/MonsterControl.ts"],"names":["_decorator","Vec3","AbsControl","AbsObjFactory","AbsObjType","FightRootControl","tab","Random","PlayerControl","FightMacro","EventMgr","FightEvent","GuideController","LocalEvent","AbsStateType","ViewSize","ccclass","property","tempPos","MonsterControl","ins","_instance","init","register","onFight","Fight_Start","onFightStart","addMonsterByLevelPhaseTime","data","getLeader","monsterInfo","getData","enemy","setConfigId","monsterId","speed","spe","setAttrList","type","AttrType","AttrType_Attack","value","attack","AttrType_Hp","hp","AttrType_Defence","def","AttrType_ResistCriticalPoint","resistcritical","AttrType_DamageReduceCoefficientFix","damrefix","exp","drop","isRand","rand","getRandomInt","position","length","randomPos","addMonster","randPos","out","pos","blockTab","MapBlockById","getValue","x","CoordinateX","Long","y","CoordinateY","High","z","summon","noumenon","argument","index","v","conf","SkillSummonTableBySummonId","Summon","info","attrData","getAttr","AttrType_TotalAttack","PERCENT","getPosition","onReplaceMonsterAnimation","monster","MonsterTableById","setStateAllAnimdId","initPos","getMonster","getRootView","objects","halfSize","width","height","Math","abs","setPosition","useAllPassiveSkill","emitFight","checkAbsRoleGainBuff","changeState","RoleBorn","isBoss","Boss_Enter","isInFightGuiding","setTimeout","emitLocal","ShowMonster"],"mappings":"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","sourcesContent":["import { _decorator, CCInteger, Color, Component, instantiate, Label, Node, Prefab, Quat, Rect, Size, sp, Sprite, tween, UITransform, Vec2, Vec3, view } from 'cc';\nimport { AbsControl } from '../../../../../../framework/base/IAbs';\nimport { LevelPhaseTime } from '../../../../table/Leveljson';\nimport { AbsObjFactory } from '../../AbsObjFactory';\nimport { AbsObjType } from '../../AbsObj';\nimport { MonsterInfo } from './MonsterInfo';\nimport { FightRootControl } from '../../../../FightRootControl';\nimport { Monster } from './Monster';\nimport { Func } from '../../../../../utils/Func';\nimport { tab } from '../../../../../../Table/table_gen';\nimport { Random } from '../../../../util/Random';\nimport { FrameControl } from '../../../frame/FrameControl';\nimport { PlayerControl } from '../role/PlayerControl';\nimport { FightMacro } from '../../../../define/FightDefine';\nimport { EventMgr } from '../../../../../mgr/EventMgr';\nimport { FightEvent } from '../../../../define/FightEvent';\nimport { GuideController } from '../../../../../guide/GuideController';\nimport { LocalEvent } from '../../../../../define/LocalEvent';\nimport { AbsStateType } from '../../state/AbsState';\nimport { ViewSize } from '../../../../../define/ViewDefine';\n\n\nconst { ccclass, property } = _decorator;\n\nconst tempPos = new Vec3(0, 0, 0);\n@ccclass('MonsterControl')\nexport class MonsterControl extends AbsControl {\n    private static _instance: MonsterControl;\n    public static get ins() {\n        if (null == this._instance) {\n            this._instance = new MonsterControl();\n            this._instance.init();\n        }\n        return this._instance;\n    }\n\n    init(): void {\n        this.register()\n    }\n\n    register(): void {\n        EventMgr.onFight(FightEvent.Fight_Start, this.onFightStart, this)\n    }\n\n    onFightStart() {\n\n    }\n\n    addMonsterByLevelPhaseTime(data: LevelPhaseTime) {\n        if (PlayerControl.ins.getLeader() == null) {\n            return\n        }\n\n        let monsterInfo = AbsObjFactory.getData(AbsObjType.enemy) as MonsterInfo\n        monsterInfo.setConfigId(data.monsterId)\n        monsterInfo.speed = data.spe\n        monsterInfo.setAttrList([\n            { type: tab.AttrType.AttrType_Attack, value: data.attack },\n            { type: tab.AttrType.AttrType_Hp, value: data.hp },\n            { type: tab.AttrType.AttrType_Defence, value: data.def },\n            { type: tab.AttrType.AttrType_ResistCriticalPoint, value: data.resistcritical },\n            { type: tab.AttrType.AttrType_DamageReduceCoefficientFix, value: data.damrefix },\n        ])\n        monsterInfo.exp = data.exp\n        monsterInfo.drop = data.drop\n        monsterInfo.init()\n\n        if (data.isRand) {\n            let rand = Random.getRandomInt(0, data.position.length)\n            this.randomPos(data, rand, tempPos)\n        } else {\n            this.randomPos(data, 0, tempPos)\n        }\n\n        this.addMonster(monsterInfo, tempPos)\n    }\n\n    randomPos(data: LevelPhaseTime, randPos: number, out: Vec3) {\n        let pos = data.position[randPos]\n        let blockTab = tab.getData().MapBlockById.getValue(pos)\n        if (blockTab) {\n            if (data.isRand) {\n                out.x = Random.getRandomInt(blockTab.CoordinateX - blockTab.Long * 0.5, blockTab.CoordinateX + blockTab.Long * 0.5)\n                out.y = Random.getRandomInt(blockTab.CoordinateY - blockTab.High * 0.5, blockTab.CoordinateY + blockTab.High * 0.5)\n            } else {\n                out.x = blockTab.CoordinateX\n                out.y = blockTab.CoordinateY\n            }\n        } else {\n            out.x = out.y = out.z = 0;\n        }\n        out.z = 0\n    }\n\n    /** 召唤 */\n    summon(noumenon: Monster, argument: number[]) {\n        for (let index = 0; index < argument.length; index++) {\n            const v = argument[index];\n            let conf = tab.getData().SkillSummonTableBySummonId.getValue(v)\n\n            let monsterInfo = AbsObjFactory.getData(AbsObjType.enemy) as MonsterInfo\n            monsterInfo.setConfigId(conf.Summon[0])\n\n            monsterInfo.setAttrList([\n                { type: tab.AttrType.AttrType_Attack, value: noumenon.info.attrData.getAttr(tab.AttrType.AttrType_TotalAttack) / FightMacro.PERCENT * conf.Summon[1] },\n                { type: tab.AttrType.AttrType_Hp, value: noumenon.info.attrData.getAttr(tab.AttrType.AttrType_Hp) / FightMacro.PERCENT * conf.Summon[2] },\n                { type: tab.AttrType.AttrType_Defence, value: noumenon.info.attrData.getAttr(tab.AttrType.AttrType_Defence) / FightMacro.PERCENT * conf.Summon[3] },\n                { type: tab.AttrType.AttrType_ResistCriticalPoint, value: noumenon.info.attrData.getAttr(tab.AttrType.AttrType_ResistCriticalPoint) / FightMacro.PERCENT * conf.Summon[4] },\n                { type: tab.AttrType.AttrType_DamageReduceCoefficientFix, value: noumenon.info.attrData.getAttr(tab.AttrType.AttrType_DamageReduceCoefficientFix) / FightMacro.PERCENT * conf.Summon[5] },\n            ])\n            monsterInfo.speed = noumenon.speed / FightMacro.PERCENT * conf.Summon[6]\n            monsterInfo.exp = 0\n            monsterInfo.drop = 0\n            monsterInfo.init()\n\n            tempPos.x = noumenon.getPosition().x + conf.Summon[7]\n            tempPos.y = noumenon.getPosition().y + conf.Summon[8]\n            this.addMonster(monsterInfo, tempPos)\n        }\n    }\n\n    onReplaceMonsterAnimation(monster: Monster, monsterId: number) {\n        let conf = tab.getData().MonsterTableById.getValue(monsterId)\n        monster.setStateAllAnimdId(conf)\n    }\n\n    addMonster(info: MonsterInfo, initPos: Vec3) {\n        let enemy: Monster = AbsObjFactory.getMonster(info, FightRootControl.ins.getRootView().objects);\n\n        if (initPos.x > ViewSize.halfSize.width) {\n            initPos.x = ViewSize.halfSize.width\n        }\n        if (initPos.y > ViewSize.halfSize.height) {\n            initPos.y = ViewSize.halfSize.height\n        } else if (initPos.x < 0 && Math.abs(initPos.y) > ViewSize.halfSize.height) {\n            initPos.y = - ViewSize.halfSize.height\n        }\n\n        enemy.setPosition(initPos);\n        enemy.info.useAllPassiveSkill()\n        EventMgr.emitFight(FightEvent.checkAbsRoleGainBuff, enemy)\n\n        enemy.changeState(AbsStateType.RoleBorn)\n        if (enemy.info.isBoss) {\n            EventMgr.emitFight(FightEvent.Boss_Enter, enemy)\n        }\n        // 发送怪物出现的事件\n        if(GuideController.ins.isInFightGuiding()){\n            setTimeout(()=>{\n                EventMgr.emitLocal(LocalEvent.ShowMonster);\n            },500)\n        }\n    }\n\n}\n\n"]}