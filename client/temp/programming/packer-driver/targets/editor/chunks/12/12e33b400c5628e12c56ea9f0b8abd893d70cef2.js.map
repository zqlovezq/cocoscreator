{"version":3,"sources":["file:///C:/chickenStarClient/client/assets/scripts/logic/model/association/AssociationControl.ts"],"names":["_decorator","log","AbsControl","EventMgr","proto","Net","ShowTips","UIMgr","ViewName","SettingsManager","AssociationData","tab","RoleData","LangMgr","RedMgr","RedDotType","GuildPermission","OpenFunctionMgr","ccclass","property","AssociationControl","isRegister","ins","_instance","register","onMsg","Ptl","ApplyJoinGuildOneClickRsp","on_s2c_ApplyJoinGuildOneClickRsp","ApplyJoinGuildRsp","on_s2c_ApplyJoinGuildRsp","KickGuildMemberRsp","on_s2c_KickGuildMemberRsp","SetGuildNameAndFlagRsp","on_s2c_SetGuildNameAndFlagRsp","SetGuildNoticeRsp","on_s2c_SetGuildNoticeRsp","SetGuildMemberJobRsp","on_s2c_SetGuildMemberJobRsp","SignGuildRsp","on_s2c_SignGuildRsp","BuyGuildGiftRsp","on_s2c_BuyGuildGiftRsp","UpgradeGuildSkillRsp","on_s2c_UpgradeGuildSkillRsp","ResetGuildSkillRsp","on_s2c_ResetGuildSkillRsp","SetGuildNeedCheckRsp","on_s2c_SetGuildNeedCheckRsp","GetGuildBossRankRsp","on_s2c_GetGuildBossRankRsp","QuickFinGuildBossRsp","on_s2c_QuickFinGuildBossRsp","reqImpeachGuildLeader","msg","Msg_ImpeachGuildLeaderReq","Send","ImpeachGuildLeaderReq","reqCreateGuild","name","flagId","notice","needCheck","Msg_CreateGuildReq","CreateGuildReq","setSetting","reqGetRecommendGuilds","Msg_GetRecommendGuildsReq","GetRecommendGuildsReq","reqJoinGuild","guildId","curTime","getServerUtcTime","getAssocitionInfo","notAllowJoinTime","str","getCombineString","getData","GetKeyValue_ConfigTable","GuildJoinCd","Msg_ApplyJoinGuildReq","ApplyJoinGuildReq","error","code","CommonErrorCode","Succeed","addGuildRequests","reqQuitGuild","Msg_QuitGuildReq","QuitGuildReq","reqGetJoinGuildRequests","condition","isGuildOpen","checkFunctionIsOpen","OpenFunctionName","OpenFunctionName_Association","memberData","getMemberData","id","guildPositionTab","GuildPositionTableByPosition","getValue","job","Proces","Msg_GetJoinGuildRequestsReq","GetJoinGuildRequestsReq","reqKickGuildMember","roleId","checkRolePromission","KickOutMember","Msg_KickGuildMemberReq","KickGuildMemberReq","refreshMemberInfo","reqSetGuildNameAndFlag","GuildSetting","Msg_SetGuildNameAndFlagReq","SetGuildNameAndFlagReq","refreshGuildInfo","reqSetGuildNotice","setNotice","Msg_SetGuildNoticeReq","SetGuildNoticeReq","refreshGuildNotice","reqSetGuildMemberJob","SetJob","count","getJobInMemberCount","maxCount","MaxCount","GuildPosition","GuildPosition_President","getLab","Msg_SetGuildMemberJobReq","SetGuildMemberJobReq","reqSignGuild","times","Msg_SignGuildReq","signTimes","SignGuildReq","show","viewName","CongratulationPop","data","rewards","refreshEvent","Guild_Skill","Guild_Sign","reqBargainGuild","giftId","Msg_BargainGuildReq","BargainGuildReq","reqBuyGuildGift","Msg_BuyGuildGiftReq","BuyGuildGiftReq","reqUpgradeGuildSkill","heroClass","Msg_UpgradeGuildSkillReq","UpgradeGuildSkillReq","addSkill","reqResetGuildSkill","Msg_ResetGuildSkillReq","ResetGuildSkillReq","resetSkill","reqSetGuildNeedCheck","Msg_SetGuildNeedCheckReq","SetGuildNeedCheckReq","reqProcessGuildApply","agree","ProcessApply","Msg_ProcessGuildApplyReq","applyReqId","ProcessGuildApplyReq","reqGetGuildRank","rankId","Msg_GetGuildRankReq","GetGuildRankReq","reqGetGuildRankInfo","Msg_GetGuildRankInfoReq","GetGuildRankInfoReq","reqGetGuildDesc","Msg_QueryGuildInfoReq","QueryGuildInfoReq","reqGetGuildBossRank","Msg_GetGuildBossRankReq","roleRankId","guildRankId","GetGuildBossRankReq","initRank","reqQuickSweepBoss","Msg_QuickFinGuildBossReq","QuickFinGuildBossReq","i","guildIds","length","reqRejectAllGuildApply","Msg_RejectAllGuildApplyReq","RejectAllGuildApplyReq"],"mappings":"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","sourcesContent":["/*\r\n * @Date: 2024-08-30 16:59:07\r\n * @LastEditors: wzq\r\n * @LastEditTime: 2024-10-31 09:45:01\r\n */\r\n\r\nimport { _decorator, log } from 'cc';\r\nimport { AbsControl } from '../../../framework/base/IAbs';\r\nimport { EventMgr } from '../../mgr/EventMgr';\r\nimport { proto } from 'client_protocol';\r\nimport { Net } from '../../net/Net';\r\nimport { ShowTips, UIMgr } from '../../mgr/UIMgr';\r\nimport { ViewName } from '../../define/ViewDefine';\r\nimport { SettingsManager } from '../role/SettingsManager';\r\nimport { AssociationData } from './AssociationData';\r\nimport { tab } from '../../../Table/table_gen';\r\nimport { RoleData } from '../role/RoleData';\r\nimport { LangMgr } from '../../mgr/LangMgr';\r\nimport { RedMgr } from '../../mgr/RedMgr';\r\nimport { RedDotType } from '../../red/RedDotType';\r\nimport { GuildPermission, RANKING_TYPE } from '../../../Common/script/EnumTypeMgr';\r\nimport { OpenFunctionMgr } from '../../../Common/component/OpenFunctionMgr';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('AssociationControl')\r\nexport class AssociationControl extends AbsControl {\r\n    private static _instance: AssociationControl = null;\r\n    public isRegister: boolean = false\r\n    public static get ins() {\r\n        if (null == this._instance) {\r\n            this._instance = new AssociationControl();\r\n        }\r\n        return this._instance;\r\n    }\r\n    register(): void {\r\n        /* 一键申请公会 */\r\n        EventMgr.onMsg(proto.Ptl.ApplyJoinGuildOneClickRsp, this.on_s2c_ApplyJoinGuildOneClickRsp, this);\r\n        /* 监听申请加入公会信息 */\r\n        EventMgr.onMsg(proto.Ptl.ApplyJoinGuildRsp, this.on_s2c_ApplyJoinGuildRsp, this);\r\n        /* 监听踢出公会 */\r\n        EventMgr.onMsg(proto.Ptl.KickGuildMemberRsp, this.on_s2c_KickGuildMemberRsp, this);\r\n        /* 监听设置公会名字和旗帜 */\r\n        EventMgr.onMsg(proto.Ptl.SetGuildNameAndFlagRsp, this.on_s2c_SetGuildNameAndFlagRsp, this);\r\n        /* 监听设置公会公告 */\r\n        EventMgr.onMsg(proto.Ptl.SetGuildNoticeRsp, this.on_s2c_SetGuildNoticeRsp, this);\r\n        /* 监听设置公会成员职位 */\r\n        EventMgr.onMsg(proto.Ptl.SetGuildMemberJobRsp, this.on_s2c_SetGuildMemberJobRsp, this);\r\n        /* 监听公会签到 */\r\n        EventMgr.onMsg(proto.Ptl.SignGuildRsp, this.on_s2c_SignGuildRsp, this);\r\n        /* 监听购买公会礼包 */\r\n        EventMgr.onMsg(proto.Ptl.BuyGuildGiftRsp, this.on_s2c_BuyGuildGiftRsp, this);\r\n        /* 监听升级公会技能 */\r\n        EventMgr.onMsg(proto.Ptl.UpgradeGuildSkillRsp, this.on_s2c_UpgradeGuildSkillRsp, this);\r\n        /* 监听重置公会技能 */\r\n        EventMgr.onMsg(proto.Ptl.ResetGuildSkillRsp, this.on_s2c_ResetGuildSkillRsp, this);\r\n        /* 监听设置公会加入是否需要审核 */\r\n        EventMgr.onMsg(proto.Ptl.SetGuildNeedCheckRsp, this.on_s2c_SetGuildNeedCheckRsp, this);\r\n        /* 获取公会boss排行榜 */\r\n        EventMgr.onMsg(proto.Ptl.GetGuildBossRankRsp, this.on_s2c_GetGuildBossRankRsp, this);\r\n        /* 快速扫荡 */\r\n        EventMgr.onMsg(proto.Ptl.QuickFinGuildBossRsp, this.on_s2c_QuickFinGuildBossRsp, this);\r\n        this.isRegister = true;\r\n    }\r\n    /* 弹劾会长 */\r\n    reqImpeachGuildLeader() {\r\n        let msg = new proto.Msg_ImpeachGuildLeaderReq();\r\n        Net.Send(proto.Ptl.ImpeachGuildLeaderReq, msg);\r\n    }\r\n    /* 发送创建公会 */\r\n    reqCreateGuild(name: string, flagId: number, notice: string = \"\", needCheck: boolean) {\r\n        let msg = new proto.Msg_CreateGuildReq();\r\n        msg.name = name;\r\n        msg.flagId = flagId;\r\n        msg.notice = notice;\r\n        msg.needCheck = needCheck;\r\n        Net.Send(proto.Ptl.CreateGuildReq, msg);\r\n        SettingsManager.ins.setSetting(\"needCheckAssociation\", msg.needCheck);\r\n    }\r\n    /* 获取可以申请的公会 */\r\n    reqGetRecommendGuilds() {\r\n        let msg = new proto.Msg_GetRecommendGuildsReq();\r\n        Net.Send(proto.Ptl.GetRecommendGuildsReq, msg);\r\n    }\r\n    /* 申请加入公会 */\r\n    reqJoinGuild(guildId: string) {\r\n        const curTime = RoleData.ins.getServerUtcTime();\r\n        if (AssociationData.ins.getAssocitionInfo() && curTime < AssociationData.ins.getAssocitionInfo().notAllowJoinTime) {\r\n            const str = LangMgr.getCombineString(\"Tips_association_4\", [tab.getData().GetKeyValue_ConfigTable().GuildJoinCd / 60]);\r\n            ShowTips(str);\r\n            return;\r\n        }\r\n        let msg = new proto.Msg_ApplyJoinGuildReq();\r\n        msg.guildId = guildId;\r\n        Net.Send(proto.Ptl.ApplyJoinGuildReq, msg);\r\n    }\r\n    /* 接收申请加入公会的信息 */\r\n    on_s2c_ApplyJoinGuildRsp(msg: proto.Msg_ApplyJoinGuildRsp) {\r\n        if (msg.error && msg.error.code != proto.CommonErrorCode.Succeed) return;\r\n        AssociationData.ins.addGuildRequests(msg.guildId);\r\n        log(\"cocos 申请加入公会成功\")\r\n    }\r\n    /* 退出公会 */\r\n    reqQuitGuild() {\r\n        let msg = new proto.Msg_QuitGuildReq();\r\n        Net.Send(proto.Ptl.QuitGuildReq, msg);\r\n    }\r\n    /* 获取申请公会信息 */\r\n    reqGetJoinGuildRequests(condition: number) {\r\n        const isGuildOpen = OpenFunctionMgr.ins.checkFunctionIsOpen(tab.OpenFunctionName.OpenFunctionName_Association);\r\n        if (!isGuildOpen) {\r\n            return;\r\n        }\r\n        const memberData = AssociationData.ins.getMemberData(RoleData.ins.id);\r\n        if (memberData) {\r\n            const guildPositionTab = tab.getData().GuildPositionTableByPosition.getValue(memberData.job);\r\n            // 拥有公会申请权限\r\n            if (guildPositionTab.Proces) {\r\n                let msg = new proto.Msg_GetJoinGuildRequestsReq();\r\n                // 0玩家所属公会的申请 1玩家自己的申请\r\n                msg.condition = condition\r\n                Net.Send(proto.Ptl.GetJoinGuildRequestsReq, msg);\r\n            }\r\n        }\r\n    }\r\n    /* 踢出公会 */\r\n    reqKickGuildMember(roleId: string) {\r\n        if (AssociationData.ins.checkRolePromission(GuildPermission.KickOutMember)) {\r\n            let msg = new proto.Msg_KickGuildMemberReq();\r\n            msg.roleId = roleId;\r\n            Net.Send(proto.Ptl.KickGuildMemberReq, msg);\r\n        }\r\n    }\r\n    /* 接收踢出公会信息 */\r\n    on_s2c_KickGuildMemberRsp(msg: proto.Msg_KickGuildMemberRsp) {\r\n        if (msg.error && msg.error.code != proto.CommonErrorCode.Succeed) return;\r\n        log(\"cocos 踢出公会成功\")\r\n        AssociationData.ins.refreshMemberInfo(msg.roleId, null, true);\r\n    }\r\n    /* 设置公会名字和旗帜 */\r\n    reqSetGuildNameAndFlag(name: string, flagId: number) {\r\n        if (AssociationData.ins.checkRolePromission(GuildPermission.GuildSetting)) {\r\n            let msg = new proto.Msg_SetGuildNameAndFlagReq();\r\n            msg.name = name;\r\n            msg.flagId = flagId;\r\n            Net.Send(proto.Ptl.SetGuildNameAndFlagReq, msg);\r\n        }\r\n    }\r\n    /* 接收设置公会公告和旗帜信息 */\r\n    on_s2c_SetGuildNameAndFlagRsp(msg: proto.Msg_SetGuildNameAndFlagRsp) {\r\n        if (msg.error && msg.error.code != proto.CommonErrorCode.Succeed) return;\r\n        log(\"cocos 设置公会公告和旗帜成功\");\r\n        AssociationData.ins.refreshGuildInfo(msg.name, msg.flagId);\r\n    }\r\n    /* 设置公会公告 */\r\n    reqSetGuildNotice(notice: string) {\r\n        if (AssociationData.ins.checkRolePromission(GuildPermission.setNotice)) {\r\n            let msg = new proto.Msg_SetGuildNoticeReq();\r\n            msg.notice = notice;\r\n            Net.Send(proto.Ptl.SetGuildNoticeReq, msg);\r\n        }\r\n    }\r\n    /* 接收设置公会公告 */\r\n    on_s2c_SetGuildNoticeRsp(msg: proto.Msg_SetGuildNoticeRsp) {\r\n        if (msg.error && msg.error.code != proto.CommonErrorCode.Succeed) return;\r\n        log(\"cocos 设置公会公告成功\")\r\n        AssociationData.ins.refreshGuildNotice(msg.notice);\r\n    }\r\n    /* 设置公会成员职位 */\r\n    reqSetGuildMemberJob(roleId: string, job: number) {\r\n        // 判断当前职务是不是已经是最大数量 如果是最大数量不发送\r\n        if (AssociationData.ins.checkRolePromission(GuildPermission.SetJob)) {\r\n            const count = AssociationData.ins.getJobInMemberCount(job);\r\n            const maxCount = tab.getData().GuildPositionTableByPosition.getValue(job).MaxCount;\r\n            if (count >= maxCount && job !== tab.GuildPosition.GuildPosition_President) {\r\n                ShowTips(LangMgr.getLab(\"ui_association_67\"))\r\n                return;\r\n            }\r\n            let msg = new proto.Msg_SetGuildMemberJobReq();\r\n            msg.roleId = roleId;\r\n            msg.job = job;\r\n            Net.Send(proto.Ptl.SetGuildMemberJobReq, msg);\r\n        }\r\n    }\r\n    /* 接收设置设置公会成员职位信息 */\r\n    on_s2c_SetGuildMemberJobRsp(msg: proto.Msg_SetGuildMemberJobRsp) {\r\n        if (msg.error && msg.error.code != proto.CommonErrorCode.Succeed) return;\r\n        log(\"cocos 设置公会成员职位成功\")\r\n        AssociationData.ins.refreshMemberInfo(msg.roleId, msg.job);\r\n    }\r\n    /* 公会签到 */\r\n    reqSignGuild(times: number) {\r\n        let msg = new proto.Msg_SignGuildReq();\r\n        msg.signTimes = times;\r\n        Net.Send(proto.Ptl.SignGuildReq, msg);\r\n    }\r\n    /* 接收公会签到信息 */\r\n    on_s2c_SignGuildRsp(msg: proto.Msg_SignGuildRsp) {\r\n        if (msg.error && msg.error.code != proto.CommonErrorCode.Succeed) return;\r\n        // 展示奖励\r\n        UIMgr.ins.show({ viewName: ViewName.CongratulationPop, data: msg.rewards })\r\n        AssociationData.ins.getAssocitionInfo().signTimes += msg.signTimes;\r\n        RedMgr.refreshEvent(RedDotType.Guild_Skill);\r\n        RedMgr.refreshEvent(RedDotType.Guild_Sign);\r\n        log(\"cocos 公会签到成功\")\r\n    }\r\n    /* 公会砍价 */\r\n    reqBargainGuild(giftId: number) {\r\n        let msg = new proto.Msg_BargainGuildReq();\r\n        msg.giftId = giftId;\r\n        Net.Send(proto.Ptl.BargainGuildReq, msg);\r\n    }\r\n    /* 购买公会礼包 */\r\n    reqBuyGuildGift(giftId: number) {\r\n        let msg = new proto.Msg_BuyGuildGiftReq();\r\n        msg.giftId = giftId;\r\n        Net.Send(proto.Ptl.BuyGuildGiftReq, msg);\r\n    }\r\n    /* 接收购买公会礼包 */\r\n    on_s2c_BuyGuildGiftRsp(msg: proto.Msg_BuyGuildGiftRsp) {\r\n        if (msg.error && msg.error.code != proto.CommonErrorCode.Succeed) return;\r\n        // 展示奖励\r\n        UIMgr.ins.show({ viewName: ViewName.CongratulationPop, data: msg.rewards })\r\n        log(\"cocos 购买公会礼包成功\")\r\n    }\r\n    /* 升级公会技能 */\r\n    reqUpgradeGuildSkill(heroClass: tab.HeroClass) {\r\n        let msg = new proto.Msg_UpgradeGuildSkillReq();\r\n        msg.heroClass = heroClass;\r\n        Net.Send(proto.Ptl.UpgradeGuildSkillReq, msg);\r\n    }\r\n    /* 接收升级公会技能 */\r\n    on_s2c_UpgradeGuildSkillRsp(msg: proto.Msg_UpgradeGuildSkillRsp) {\r\n        if (msg.error && msg.error.code != proto.CommonErrorCode.Succeed) return;\r\n        log(\"cocos 升级公会技能成功\")\r\n        AssociationData.ins.addSkill(msg.heroClass);\r\n        RedMgr.refreshEvent(RedDotType.Guild_Skill);\r\n    }\r\n    /* 重置公会技能 */\r\n    reqResetGuildSkill(heroClass: tab.HeroClass) {\r\n        let msg = new proto.Msg_ResetGuildSkillReq();\r\n        msg.heroClass = heroClass;\r\n        Net.Send(proto.Ptl.ResetGuildSkillReq, msg);\r\n    }\r\n    /* 接收重置公会技能 */\r\n    on_s2c_ResetGuildSkillRsp(msg: proto.Msg_ResetGuildSkillRsp) {\r\n        if (msg.error && msg.error.code != proto.CommonErrorCode.Succeed) return;\r\n        UIMgr.ins.show({ viewName: ViewName.CongratulationPop, data: msg.rewards })\r\n        AssociationData.ins.resetSkill(msg.heroClass);\r\n        log(\"cocos 重置公会技能成功\")\r\n    }\r\n    /* 设置公会加入是否需要审核 */\r\n    reqSetGuildNeedCheck(needCheck: boolean) {\r\n        let msg = new proto.Msg_SetGuildNeedCheckReq();\r\n        msg.needCheck = needCheck;\r\n        Net.Send(proto.Ptl.SetGuildNeedCheckReq, msg);\r\n    }\r\n    /* 设置公会加入是否需要审核 */\r\n    on_s2c_SetGuildNeedCheckRsp(msg: proto.Msg_SetGuildNeedCheckRsp) {\r\n        if (msg.error && msg.error.code != proto.CommonErrorCode.Succeed) return;\r\n        SettingsManager.ins.setSetting(\"needCheckAssociation\", msg.needCheck);\r\n        log(\"cocos  设置公会加入是否需要审核=\", msg.needCheck)\r\n    }\r\n    /* 设置接受还是拒绝申请 */\r\n    reqProcessGuildApply(roleId: string, agree: boolean) {\r\n        if (AssociationData.ins.checkRolePromission(GuildPermission.ProcessApply)) {\r\n            let msg = new proto.Msg_ProcessGuildApplyReq();\r\n            msg.agree = agree;\r\n            msg.applyReqId = roleId;\r\n            Net.Send(proto.Ptl.ProcessGuildApplyReq, msg);\r\n        }\r\n    }\r\n    /* 获得公会排行榜 */\r\n    reqGetGuildRank(rankId: number) {\r\n        let msg = new proto.Msg_GetGuildRankReq();\r\n        msg.rankId = rankId;\r\n        Net.Send(proto.Ptl.GetGuildRankReq, msg);\r\n    }\r\n    /* 获得公会排行榜当前公会信息 */\r\n    reqGetGuildRankInfo(rankId: number, guildId: string) {\r\n        let msg = new proto.Msg_GetGuildRankInfoReq();\r\n        msg.rankId = rankId;\r\n        msg.guildId = guildId;\r\n        Net.Send(proto.Ptl.GetGuildRankInfoReq, msg);\r\n    }\r\n    /* 获取公会详情 */\r\n    reqGetGuildDesc( guildId: string){\r\n        let msg = new proto.Msg_QueryGuildInfoReq ();\r\n        msg.guildId = guildId;\r\n        Net.Send(proto.Ptl.QueryGuildInfoReq , msg);\r\n    }\r\n    reqGetGuildBossRank() {\r\n        let msg = new proto.Msg_GetGuildBossRankReq();\r\n        msg.roleRankId = 16;\r\n        msg.guildRankId = 15;\r\n        Net.Send(proto.Ptl.GetGuildBossRankReq, msg);\r\n    }\r\n    /* 获得公会boss排行榜返回 */\r\n    on_s2c_GetGuildBossRankRsp(msg: proto.Msg_GetGuildBossRankRsp) {\r\n        AssociationData.ins.initRank(msg);\r\n    }\r\n    /* 公会扫荡 */\r\n    reqQuickSweepBoss() {\r\n        let msg = new proto.Msg_QuickFinGuildBossReq();\r\n        Net.Send(proto.Ptl.QuickFinGuildBossReq, msg);\r\n    }\r\n    on_s2c_QuickFinGuildBossRsp(msg: proto.Msg_QuickFinGuildBossRsp) {\r\n        if (!msg.error || msg.error.code == proto.CommonErrorCode.Succeed) {\r\n            UIMgr.ins.show({ viewName: ViewName.CongratulationPop, data: msg.rewards})\r\n        }\r\n    }\r\n    // 一键申请公会\r\n    on_s2c_ApplyJoinGuildOneClickRsp(msg: proto.Msg_ApplyJoinGuildOneClickRsp) {\r\n        if (msg.error && msg.error.code != proto.CommonErrorCode.Succeed) return;\r\n        for (let i = 0; i < msg.guildIds.length; i++) {\r\n            AssociationData.ins.addGuildRequests(msg.guildIds[i]);\r\n        }\r\n    }\r\n    // 一键拒绝申请请求\r\n    reqRejectAllGuildApply() {\r\n        let msg = new proto.Msg_RejectAllGuildApplyReq();\r\n        Net.Send(proto.Ptl.RejectAllGuildApplyReq, msg);\r\n    }\r\n}\r\n\r\n\r\n"]}