{"version":3,"sources":["file:///C:/chickenStarClient/client/assets/scripts/logic/fight/base/obj/AbsObj.ts"],"names":["Quat","UITransform","Vec3","_decorator","CollisionObject","FightRootControl","StateMachine","tab","ShapeType","Avatar","ccclass","property","tempPos","tempRot","AbsObjType","AbsObj","tooltip","objType","default","objId","_isActive","configId","_isDead","isDeadComplete","avatar","_animationId","stateMachine","stateAnims","endDamegeObj","move","info","childObj","onLoad","node","addComponent","getBodyId","body","id","addChildObj","obj","push","getObjTypeZh","isMonster","enemy","isRole","role","initMachine","setAbs","run","create","addChild","setCb","animName","avatarPlayComplete","setStateAnimId","state","animId","set","changeState","sateType","isState","animationId","reset","setAnimationId","avatarUpdate","isActive","bo","setTrigger","updateActive","isDead","trigger","bool","setObjInfo","_info","Map","recycle","addAnimation","trackIndex","loop","setAnimation","updateFrame","dt","insertFrame","ins","addObj","removeFrame","removeObj","onHitRole","defanseAbs","onDetectorToEnemy","abss","onMoveComplete","setBounds","ids","bound","getData","BoundTableById","getValue","Type","BoundType","BoundType_Circle","type","Sphere","center","x","Parameters","y","radius","BoundType_Rectangle","Box","size","traceDirection","tmpstartPos","tmptargetPos","subtract","normalize","setVelocityAndRatio","initGraphics","isBound","bobyGraphics","clear","isCollisionInterval"],"mappings":"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","sourcesContent":["import { Input, Layers, Node, PhysicsSystem, Prefab, Quat, UITransform, Vec3, _decorator, sp, v3 } from 'cc';\nimport { CollisionObject, Trigger } from '../../../../framework/collision/CollisionObject';\nimport { FightRootControl } from '../../FightRootControl';\nimport { StateMachine } from './state/StateMachine';\nimport { AbsStateType, DefaultState } from './state/AbsState';\nimport { Func } from '../../../utils/Func';\nimport { AbsMove } from '../move/AbsMove';\nimport Fixed from '../../../../framework/collision/Fixed';\nimport { tab } from '../../../../Table/table_gen';\nimport { ShapeType } from '../../../../framework/collision/CollisionShape';\nimport { Avatar } from '../../animation/Avatar';\nimport { AbsObjInfo } from './AbsObjInfo';\n\nconst { ccclass, property } = _decorator;\n\nconst tempPos = new Vec3();\nconst tempRot = new Quat();\n\n/** 战斗对象类型 */\nexport enum AbsObjType {\n    /** 空 */\n    default = 0,\n    /** 角色 */\n    role = 1,\n    /** 敌人 */\n    enemy = 2,\n    /** 子弹 */\n    bullet = 3,\n}\n\n/**战斗对象 地图上 角色、怪物、子弹、掉落、障碍*/\n@ccclass('AbsObj')\nexport class AbsObj extends CollisionObject {\n    objType: AbsObjType = AbsObjType.default;\n\n    objId: number = 0\n\n    @property({ tooltip: '是否是预制体' })\n    isPrefab: boolean = false\n\n    @property({ tooltip: '是否使用预制体属性' })\n    isPrefabProperty: boolean = false\n\n    _isActive: boolean = true\n    configId: number = 0;\n    _isDead: boolean = false\n    isDeadComplete: boolean = false\n\n    avatar: Avatar\n    _animationId: number = 0\n    /** 状态机 */\n    stateMachine: StateMachine\n    /** 状态机对应的动画id */\n    stateAnims: Map<AbsStateType, number>\n\n\n\n    /** 最后伤害的角色 */\n    endDamegeObj: AbsObj = null\n\n    move: AbsMove\n    info: AbsObjInfo\n\n    /** 子对象数组 */\n    childObj: AbsObj[] = []\n    onLoad(): void {\n        this.node.addComponent(UITransform)\n    }\n\n    getBodyId() {\n        return this.body.id\n    }\n\n\n    addChildObj(obj: AbsObj) {\n        this.childObj.push(obj)\n    }\n\n    getObjTypeZh() {\n        return AbsObjType[this.objType]\n    }\n\n    isMonster() {\n        return this.objType == AbsObjType.enemy\n    }\n    isRole() {\n        return this.objType == AbsObjType.role\n    }\n\n    /** 初始化状态机 */\n    initMachine() {\n        if (this.stateMachine == null) {\n            this.stateMachine = new StateMachine()\n        }\n        this.stateMachine.setAbs(this)\n        this.stateMachine.run()\n\n        this.avatar = Avatar.create()\n        this.node.addChild(this.avatar.node)\n        this.avatar.setCb((animName: string) => {\n            this.avatarPlayComplete(animName)\n        })\n    }\n\n    setStateAnimId(state: AbsStateType, animId: number) {\n        this.stateAnims.set(state, animId)\n    }\n\n    changeState(sateType: AbsStateType) {\n        this.stateMachine.changeState(sateType)\n    }\n\n    isState(state: AbsStateType) {\n        return this.stateMachine.isState(state)\n    }\n\n\n    set animationId(id) {\n        if (this._animationId == id) {\n            return\n        }\n        this._animationId = id\n        if (id == 0) {\n            if (this.avatar) {\n                this.avatar.reset()\n            }\n            return\n        }\n        this.avatar.setAnimationId(id)\n        this.avatarUpdate()\n    }\n\n    avatarUpdate() {\n\n    }\n\n    get animationId() {\n        return this._animationId\n    }\n\n    get isActive() {\n        return this._isActive\n    }\n\n    set isActive(bo: boolean) {\n        if (this._isActive == bo) {\n            return\n        }\n        this._isActive = bo\n        this.setTrigger(this._isActive)\n        this.updateActive()\n    }\n\n    get isDead() {\n        return this._isDead\n    }\n\n    set isDead(bo: boolean) {\n        this._isDead = bo\n        this.isDeadComplete = false\n    }\n\n    setTrigger(trigger: boolean) {\n        super.setTrigger(trigger)\n    }\n    updateActive(bool?: boolean) {\n\n    }\n\n\n    setObjInfo(_info: AbsObjInfo) {\n        this.info = _info\n        this.info.setAbs(this)\n        this.isDead = false\n        this.stateAnims = new Map<AbsStateType, number>()\n    }\n\n    /** 回收 */\n    recycle() {\n        this.isDead = true\n        super.recycle()\n    }\n    reset() {\n        this.avatar.recycle()\n        this.info.recycle()\n        this.info = null\n        this.avatar = null\n        this.animationId = 0\n        this.endDamegeObj = null\n        super.reset()\n    }\n\n    addAnimation(trackIndex: number, animName: string, loop?: boolean): void {\n        // this.avatar.addAnimation(trackIndex, animName, loop)\n    }\n    setAnimation(trackIndex: number, animName: string, loop?: boolean): void {\n        // if (this.avatar.animation == animName) {\n        //     return\n        // }\n        // this.avatar.setAnimation(trackIndex, animName, loop)\n    }\n\n    avatarPlayComplete(animName: string) {\n        this.stateMachine.avatarPlayComplete(animName)\n    }\n\n    updateFrame(dt: number): void {\n        this.info && this.info.updateFrame(dt)\n        this.stateMachine.updateFrame(dt)\n    }\n\n    insertFrame() {\n        FightRootControl.ins.addObj(this)\n    }\n    removeFrame(): void {\n        FightRootControl.ins.removeObj(this)\n    }\n\n    onHitRole(defanseAbs: AbsObj) {\n        // console.log(this.getObjTypeZh(), \"onHitRole\", defanseAbs.getObjTypeZh())\n    }\n\n    onDetectorToEnemy(abss: AbsObj[]) {\n\n    }\n\n    /** 移动完成 */\n    onMoveComplete() {\n\n    }\n\n    setBounds(ids: number[]) {\n        let bound = tab.getData().BoundTableById.getValue(ids[0] || 1)\n        if (bound.Type == tab.BoundType.BoundType_Circle) {\n            this.type = ShapeType.Sphere\n            this.center.x = bound.Parameters[0]\n            this.center.y = bound.Parameters[1]\n            this.radius = bound.Parameters[2]\n        } else if (bound.Type == tab.BoundType.BoundType_Rectangle) {\n            this.type = ShapeType.Box\n            this.center.x = bound.Parameters[0]\n            this.center.y = bound.Parameters[1]\n            this.size.x = bound.Parameters[2]\n            this.size.y = bound.Parameters[3]\n        }\n    }\n\n    traceDirection(tmpstartPos: Vec3, tmptargetPos: Vec3) {\n        Vec3.subtract(tempPos, tmptargetPos, tmpstartPos);\n        tempPos.normalize()\n        this.setVelocityAndRatio(tempPos, 1)\n    }\n\n    initGraphics(): void {\n        if (!FightRootControl.ins.isBound) {\n            if (this.bobyGraphics) {\n                this.bobyGraphics.clear()\n            }\n            return\n        }\n        if (this.isActive) {\n            super.initGraphics()\n        }\n    }\n\n\n    isCollisionInterval() {\n        return false\n    }\n\n}\n"]}