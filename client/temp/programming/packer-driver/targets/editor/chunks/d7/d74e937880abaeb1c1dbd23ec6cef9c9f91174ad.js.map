{"version":3,"sources":["file:///C:/chickenStarClient/client/assets/scripts/logic/model/jianghu/GameplayView.ts"],"names":["_decorator","instantiate","Node","Prefab","ViewPop","tab","GameplayViewItem","GameplayControl","ccclass","property","GameplayView","register","onShow","ins","requestGetClimbTowerInfo","showViewList","node_content","destroyAllChildren","i","getData","ChallengeButtonTable","length","item","pfb_item","parent","itemTs","getComponent","setData","onDestroy"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOSA,MAAAA,U,OAAAA,U;AAAuBC,MAAAA,W,OAAAA,W;AAAaC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,M,OAAAA,M;;AAC1CC,MAAAA,O,iBAAAA,O;;AAKAC,MAAAA,G,iBAAAA,G;;AACAC,MAAAA,gB,iBAAAA,gB;;AAKAC,MAAAA,e,iBAAAA,e;;;;;;AAnBT;AACA;AACA;AACA;AACA;AACA;;;;;OAeM;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBT,U;;8BAGjBU,Y,WADZF,OAAO,CAAC,cAAD,C,UAEHC,QAAQ,CAACN,MAAD,C,UAERM,QAAQ,CAACP,IAAD,C,2BAJb,MACaQ,YADb;AAAA;AAAA,8BAC0C;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAKtCC,QAAAA,QAAQ,GAAS,CAEhB;;AACDC,QAAAA,MAAM,GAAS;AACX;AAAA;AAAA,kDAAgBC,GAAhB,CAAoBC,wBAApB;AACA,eAAKC,YAAL;AACH;;AACDA,QAAAA,YAAY,GAAE;AACV,eAAKC,YAAL,CAAkBC,kBAAlB;;AACA,eAAI,IAAIC,CAAC,GAAC,CAAV,EAAYA,CAAC,GAAC;AAAA;AAAA,0BAAIC,OAAJ,GAAcC,oBAAd,CAAmCC,MAAjD,EAAwDH,CAAC,EAAzD,EAA4D;AACxD,kBAAMI,IAAI,GAAGrB,WAAW,CAAC,KAAKsB,QAAN,CAAxB;AACAD,YAAAA,IAAI,CAACE,MAAL,GAAc,KAAKR,YAAnB;AACA,kBAAMS,MAAM,GAAGH,IAAI,CAACI,YAAL;AAAA;AAAA,qDAAf;AACAD,YAAAA,MAAM,CAACE,OAAP,CAAe;AAAA;AAAA,4BAAIR,OAAJ,GAAcC,oBAAd,CAAmCF,CAAnC,CAAf;AACH;AACJ;;AACSU,QAAAA,SAAS,GAAS;AACxB,gBAAMA,SAAN;AACH;;AAvBqC,O;;;;;iBAEpB,I;;;;;;;iBAEE,I","sourcesContent":["/*\r\n * @Date: 2024-06-20 13:52:50\r\n * @LastEditors: wzq\r\n * @program:江湖\r\n * @LastEditTime: 2024-07-23 09:57:08\r\n */\r\n\r\nimport { _decorator, Component, instantiate, Node, Prefab } from 'cc';\r\nimport { ViewPop } from '../../../framework/base/ViewPop';\r\nimport { proto } from 'client_protocol';\r\nimport { Net } from '../../net/Net';\r\nimport { EventMgr } from '../../mgr/EventMgr';\r\nimport { GameplayViewDataMgr } from './GameplayViewDataMgr';\r\nimport { tab } from '../../../Table/table_gen';\r\nimport { GameplayViewItem } from './GameplayViewItem';\r\nimport { UIMgr } from '../../mgr/UIMgr';\r\nimport { ViewName } from '../../define/ViewDefine';\r\nimport { RedMgr } from '../../mgr/RedMgr';\r\nimport { RedDotType } from '../../red/RedDotType';\r\nimport { GameplayControl } from './GameplayControl';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('GameplayView')\r\nexport class GameplayView extends ViewPop {\r\n    @property(Prefab)\r\n    pfb_item:Prefab = null;\r\n    @property(Node)\r\n    node_content:Node = null;\r\n    register(): void {\r\n        \r\n    }\r\n    onShow(): void {\r\n        GameplayControl.ins.requestGetClimbTowerInfo();\r\n        this.showViewList();\r\n    }\r\n    showViewList(){\r\n        this.node_content.destroyAllChildren();\r\n        for(let i=0;i<tab.getData().ChallengeButtonTable.length;i++){\r\n            const item = instantiate(this.pfb_item);\r\n            item.parent = this.node_content;\r\n            const itemTs = item.getComponent(GameplayViewItem);\r\n            itemTs.setData(tab.getData().ChallengeButtonTable[i])\r\n        }\r\n    }\r\n    protected onDestroy(): void {\r\n        super.onDestroy();\r\n    }\r\n}\r\n\r\n\r\n"]}