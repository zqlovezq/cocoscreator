{"version":3,"sources":["file:///C:/chickenStarClient/client/assets/scripts/logic/model/fincaFight/FincaFightControl.ts"],"names":["_decorator","AbsControl","proto","EventMgr","Net","MALLNAME","RANKING_TYPE","FincaFightData","tab","UIMgr","ItemData","ViewName","RedMgr","RedDotType","ccclass","property","FincaFightControl","ins","_instance","register","onMsg","Ptl","FincaBattleFightRsp","on_s2c_FincaBattleFightRsp","SetFincaBattleHeroIdsRsp","on_s2c_SetFincaBattleHeroIdsRsp","SetFincaBattleBookIdsRsp","on_s2c_SetFincaBattleBookIdsRsp","GetFincaBattleOpponentsRsp","on_s2c_GetFincaBattleOpponentsRsp","GetFincaBattleFightRecordsRsp","on_s2c_GetFincaBattleFightRecordsRsp","reqFincaBattleFight","opponentRoleId","isSweep","sendMsg","msg","Msg_FincaBattleFightReq","isSweepPvp","Send","FincaBattleFightReq","freeTimes","getCount","show","viewName","ItemBuyPop","data","name","PvpToken","error","code","CommonErrorCode","Succeed","getData","GetKeyValue_ConfigTable","FincaFightFreeTimes","freeFightTimes","refreshEvent","Free_Fight_Token","reqSetFincaBattleHeroIds","heroIds","checkHeroIdsOk","Msg_SetFincaBattleHeroIdsReq","SetFincaBattleHeroIdsReq","PVP_Fight_Team","reqSetFincaBattleBookIds","bookIds","Msg_SetFincaBattleBookIdsReq","bookItemIds","SetFincaBattleBookIdsReq","reqGetFincaBattleOpponents","Msg_GetFincaBattleOpponentsReq","isRefresh","GetFincaBattleOpponentsReq","reqGetFincaBattleFightRecords","Msg_GetFincaBattleFightRecordsReq","GetFincaBattleFightRecordsReq","reqGetRank","Msg_GetSimpleRankReq","rankId","Fight","pageIndex","pageSize","GetSimpleRankReq"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node } from 'cc';\r\nimport { AbsControl } from '../../../framework/base/IAbs';\r\nimport { proto } from 'client_protocol';\r\nimport { EventMgr } from '../../mgr/EventMgr';\r\nimport { Net } from '../../net/Net';\r\nimport { MALLNAME, RANKING_TYPE } from '../../../Common/script/EnumTypeMgr';\r\nimport { FincaFightData } from './FincaFightData';\r\nimport { tab } from '../../../Table/table_gen';\r\nimport { LangMgr } from '../../mgr/LangMgr';\r\nimport { ShowTips, UIMgr } from '../../mgr/UIMgr';\r\nimport { ItemData } from '../item/ItemData';\r\nimport { ViewName } from '../../define/ViewDefine';\r\nimport { RedMgr } from '../../mgr/RedMgr';\r\nimport { RedDotType } from '../../red/RedDotType';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('FincaFightControl')\r\nexport class FincaFightControl extends AbsControl {\r\n    public static isSweepPvp:boolean = false;\r\n    private static _instance: FincaFightControl = null;\r\n    public static get ins() {\r\n        if (null == this._instance) {\r\n            this._instance = new FincaFightControl();\r\n        }\r\n        return this._instance;\r\n    }\r\n    register(): void {\r\n        EventMgr.onMsg(proto.Ptl.FincaBattleFightRsp, this.on_s2c_FincaBattleFightRsp, this);\r\n        EventMgr.onMsg(proto.Ptl.SetFincaBattleHeroIdsRsp, this.on_s2c_SetFincaBattleHeroIdsRsp, this);\r\n        EventMgr.onMsg(proto.Ptl.SetFincaBattleBookIdsRsp, this.on_s2c_SetFincaBattleBookIdsRsp, this);\r\n        EventMgr.onMsg(proto.Ptl.GetFincaBattleOpponentsRsp, this.on_s2c_GetFincaBattleOpponentsRsp, this);\r\n        EventMgr.onMsg(proto.Ptl.GetFincaBattleFightRecordsRsp, this.on_s2c_GetFincaBattleFightRecordsRsp, this);\r\n    }\r\n    /* -------------------------------------------------------------------------------------------- */\r\n    // 发起庄园战挑战\r\n    reqFincaBattleFight(opponentRoleId: string, isSweep: boolean) {\r\n        let sendMsg = (() => {\r\n            let msg = new proto.Msg_FincaBattleFightReq();\r\n            FincaFightControl.isSweepPvp = isSweep;\r\n            msg.isSweep = isSweep;\r\n            msg.opponentRoleId = opponentRoleId;\r\n            Net.Send(proto.Ptl.FincaBattleFightReq, msg);\r\n        })\r\n        // 判断当前次数\r\n        if (FincaFightData.ins.freeTimes > 0 || ItemData.ins.getCount(85) > 0) {\r\n            sendMsg();\r\n        } else {\r\n            UIMgr.ins.show({ viewName: ViewName.ItemBuyPop, data: { name: MALLNAME.PvpToken } })\r\n        }\r\n    }\r\n    on_s2c_FincaBattleFightRsp(msg: proto.Msg_FincaBattleFightRsp) {\r\n        if (msg.error && msg.error.code != proto.CommonErrorCode.Succeed) return;\r\n        FincaFightData.ins.freeTimes = tab.getData().GetKeyValue_ConfigTable().FincaFightFreeTimes-msg.freeFightTimes;\r\n        RedMgr.refreshEvent(RedDotType.Free_Fight_Token);\r\n    }\r\n    /* -------------------------------------------------------------------------------------------- */\r\n    // 设置庄园战英雄\r\n    reqSetFincaBattleHeroIds(heroIds: number[]) {\r\n        // 检测一下首个必须是战士还有职业不能重复\r\n        if(FincaFightData.ins.checkHeroIdsOk()){\r\n            let msg = new proto.Msg_SetFincaBattleHeroIdsReq();\r\n            msg.heroIds = heroIds;\r\n            Net.Send(proto.Ptl.SetFincaBattleHeroIdsReq, msg);\r\n        }\r\n    }\r\n    on_s2c_SetFincaBattleHeroIdsRsp(msg: proto.Msg_SetFincaBattleHeroIdsRsp) {\r\n        if (msg.error && msg.error.code != proto.CommonErrorCode.Succeed) return;\r\n        // 保存成功\r\n        RedMgr.refreshEvent(RedDotType.PVP_Fight_Team);\r\n    }\r\n    /* -------------------------------------------------------------------------------------------- */\r\n    // 设置庄园战秘籍\r\n    reqSetFincaBattleBookIds(bookIds: number[]) {\r\n        let msg = new proto.Msg_SetFincaBattleBookIdsReq();\r\n        msg.bookItemIds = bookIds;\r\n        Net.Send(proto.Ptl.SetFincaBattleBookIdsReq, msg);\r\n    }\r\n    on_s2c_SetFincaBattleBookIdsRsp(msg: proto.Msg_SetFincaBattleBookIdsRsp) {\r\n        if (msg.error && msg.error.code != proto.CommonErrorCode.Succeed) return;\r\n        // 保存成功\r\n        RedMgr.refreshEvent(RedDotType.PVP_Fight_Team);\r\n    }\r\n    /* -------------------------------------------------------------------------------------------- */\r\n    // 获取庄园战对手\r\n    reqGetFincaBattleOpponents() {\r\n        let msg = new proto.Msg_GetFincaBattleOpponentsReq();\r\n        msg.isRefresh = true;\r\n        Net.Send(proto.Ptl.GetFincaBattleOpponentsReq, msg);\r\n    }\r\n    on_s2c_GetFincaBattleOpponentsRsp(msg: proto.Msg_GetFincaBattleOpponentsRsp) {\r\n        if (msg.error && msg.error.code != proto.CommonErrorCode.Succeed) return;\r\n    }\r\n    /* -------------------------------------------------------------------------------------------- */\r\n    // 获取庄园战战斗记录\r\n    reqGetFincaBattleFightRecords() {\r\n        let msg = new proto.Msg_GetFincaBattleFightRecordsReq();\r\n        Net.Send(proto.Ptl.GetFincaBattleFightRecordsReq, msg);\r\n    }\r\n    on_s2c_GetFincaBattleFightRecordsRsp(msg: proto.Msg_GetFincaBattleFightRecordsRsp) {\r\n        if (msg.error && msg.error.code != proto.CommonErrorCode.Succeed) return;\r\n    }\r\n    reqGetRank() {\r\n        let msg = new proto.Msg_GetSimpleRankReq();\r\n        msg.rankId = RANKING_TYPE.Fight;\r\n        msg.pageIndex = 0;\r\n        msg.pageSize = 3;\r\n        Net.Send(proto.Ptl.GetSimpleRankReq, msg)\r\n    }\r\n}\r\n\r\n\r\n"]}