{"version":3,"sources":["file:///C:/chickenStarClient/client/assets/scripts/framework/collision/AILib.ts"],"names":["Intersection2D","sphereAABBDistance","center","radius","size","maxDist","x","Math","max","min","y","z","Vec3","subtract","distSqr","dot","sphereOBBDistance","sphereCenter","obbCenter","obbQuaternion","obbHalfExtents","localCenter","Quat","conjugate","obbToLocal","transformQuat","localP","lineLine","a1","a2","b1","b2","ua_t","ub_t","u_b","ua","ub","lineRect","b","r0","tempR1","set","r1","tempR2","yMax","r2","tempR3","xMax","r3","tempR4","linePolygon","length","i","rectRect","a","a_min_x","a_min_y","a_max_x","width","a_max_y","height","b_min_x","b_min_y","b_max_x","b_max_y","rectPolygon","l","contains","pointInPolygon","polygonPolygon","circleCircle","c1p","c1r","c2p","c2r","distance","Vec2","polygonCircle","polygon","cp","cr","position","start","end","pointLineDistance","rectCircle","rect","cx","cy","rx","ry","rw","rh","testX","testY","distX","distY","sqrt","point","inside","j","xi","yi","xj","yj","intersect","isSegment","dx","dy","d","t","p","w","obbIntersect","centerA","halfA","rotA","centerB","halfB","rotB","ae0","ae1","ae2","au00","m00","au01","m01","au02","m02","au10","m03","au11","m04","au12","m05","au20","m06","au21","m07","au22","m08","be0","be1","be2","bu00","bu01","bu02","bu10","bu11","bu12","bu20","bu21","bu22","R00","R01","R02","R10","R11","R12","R20","R21","R22","v0","v1","v2","t0","t1","t2","ra","rb","abs","epsilon","Number","EPSILON","A00","A01","A02","A10","A11","A12","A20","A21","A22"],"mappings":"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","sourcesContent":["import { Quat, Rect, Vec2, Vec3 } from \"cc\";\n\nconst localP = { x: 0, y: 0, z: 0 };\nconst maxDist = { x: 0, y: 0, z: 0 };\nconst localCenter = { x: 0, y: 0, z: 0 };\nconst obbToLocal = { x: 0, y: 0, z: 0, w: 1.0 };\n\n// 计算球体到 AABB 的 SDF 距离\nexport function sphereAABBDistance(center: any, radius: any, size: any): boolean {\n\n    // 计算离包围盒最近的点\n    maxDist.x = Math.max(-size.x, Math.min(center.x, size.x));\n    maxDist.y = Math.max(-size.y, Math.min(center.y, size.y));\n    maxDist.z = Math.max(-size.z, Math.min(center.z, size.z));\n\n    Vec3.subtract(maxDist, maxDist, center);\n\n    const distSqr = Vec3.dot(maxDist, maxDist);\n\n    return distSqr <= radius * radius;\n\n}\n\n\n// 计算球体到 OBB 的 SDF 距离\nexport function sphereOBBDistance(\n    sphereCenter: Vec3, // 球体中心点坐标\n    radius: number, // 球体半径\n    obbCenter: Vec3, // OBB 中心点坐标\n    obbQuaternion: Quat, // OBB 旋转四元数\n    obbHalfExtents: Vec3 // OBB 半扩展尺寸\n): boolean {\n\n    Vec3.subtract(localCenter, sphereCenter, obbCenter);\n\n    Quat.conjugate(obbToLocal, obbQuaternion);\n\n    Vec3.transformQuat(localP, localCenter, obbToLocal);\n\n    return sphereAABBDistance(localP, radius, obbHalfExtents);\n}\n\n\nexport const obbIntersect = function (centerA: any, halfA: any, rotA: any, centerB: any, halfB: any, rotB: any) {\n\n    let ae0 = halfA.x, ae1 = halfA.y, ae2 = halfA.z,\n        au00 = rotA.m00, au01 = rotA.m01, au02 = rotA.m02,\n        au10 = rotA.m03, au11 = rotA.m04, au12 = rotA.m05,\n        au20 = rotA.m06, au21 = rotA.m07, au22 = rotA.m08;\n\n    let be0 = halfB.x, be1 = halfB.y, be2 = halfB.z,\n        bu00 = rotB.m00, bu01 = rotB.m01, bu02 = rotB.m02,\n        bu10 = rotB.m03, bu11 = rotB.m04, bu12 = rotB.m05,\n        bu20 = rotB.m06, bu21 = rotB.m07, bu22 = rotB.m08;\n\n    let R00 = au00 * bu00 + au01 * bu01 + au02 * bu02;\n    let R01 = au00 * bu10 + au01 * bu11 + au02 * bu12;\n    let R02 = au00 * bu20 + au01 * bu21 + au02 * bu22;\n    let R10 = au10 * bu00 + au11 * bu01 + au12 * bu02;\n    let R11 = au10 * bu10 + au11 * bu11 + au12 * bu12;\n    let R12 = au10 * bu20 + au11 * bu21 + au12 * bu22;\n    let R20 = au20 * bu00 + au21 * bu01 + au22 * bu02;\n    let R21 = au20 * bu10 + au21 * bu11 + au22 * bu12;\n    let R22 = au20 * bu20 + au21 * bu21 + au22 * bu22;\n\n\n    let v0 = centerB.x - centerA.x,\n        v1 = centerB.y - centerA.y,\n        v2 = centerB.z - centerA.z;\n\n\n    let t0 = v0 * au00 + v1 * au01 + v2 * au02;\n    let t1 = v0 * au10 + v1 * au11 + v2 * au12;\n    let t2 = v0 * au20 + v1 * au21 + v2 * au22;\n\n\n    let ra, rb, abs;\n    let epsilon = Number.EPSILON;\n\n    let A00 = (R00 >= 0 ? R00 : -R00) + epsilon, A01 = (R01 >= 0 ? R01 : -R01) + epsilon, A02 = (R02 >= 0 ? R02 : -R02) + epsilon;\n    let A10 = (R10 >= 0 ? R10 : -R10) + epsilon, A11 = (R11 >= 0 ? R11 : -R11) + epsilon, A12 = (R12 >= 0 ? R12 : -R12) + epsilon;\n    let A20 = (R20 >= 0 ? R20 : -R20) + epsilon, A21 = (R21 >= 0 ? R21 : -R21) + epsilon, A22 = (R22 >= 0 ? R22 : -R22) + epsilon;\n\n\n    ra = ae0;\n    rb = be0 * A00 + be1 * A01 + be2 * A02;\n    if ((t0 >= 0 ? t0 : -t0) > ra + rb) return false;\n\n    ra = ae1;\n    rb = be0 * A10 + be1 * A11 + be2 * A12;\n    if ((t1 >= 0 ? t1 : -t1) > ra + rb) return false;\n\n    ra = ae2;\n    rb = be0 * A20 + be1 * A21 + be2 * A22;\n    if ((t2 >= 0 ? t2 : -t2) > ra + rb) return false;\n\n\n    rb = be0;\n    ra = ae0 * A00 + ae1 * A10 + ae2 * A20;\n    abs = t0 * R00 + t1 * R10 + t2 * R20;\n    if ((abs >= 0 ? abs : -abs) > ra + rb) return false;\n\n    rb = be1;\n    ra = ae0 * A01 + ae1 * A11 + ae2 * A21;\n    abs = t0 * R01 + t1 * R11 + t2 * R21;\n    if ((abs >= 0 ? abs : -abs) > ra + rb) return false;\n\n    rb = be2;\n    ra = ae0 * A02 + ae1 * A12 + ae2 * A22;\n    abs = t0 * R02 + t1 * R12 + t2 * R22;\n    if ((abs >= 0 ? abs : -abs) > ra + rb) return false;\n\n    // test axis L = A0 x B0\n    ra = ae1 * A20 + ae2 * A10;\n    rb = be1 * A02 + be2 * A01;\n    abs = t2 * R10 - t1 * R20;\n    if ((abs >= 0 ? abs : -abs) > ra + rb) return false;\n\n    // test axis L = A0 x B1\n    ra = ae1 * A21 + ae2 * A11;\n    rb = be0 * A02 + be2 * A00;\n    abs = t2 * R11 - t1 * R21;\n    if ((abs >= 0 ? abs : -abs) > ra + rb) return false;\n\n    // test axis L = A0 x B2\n    ra = ae1 * A22 + ae2 * A12;\n    rb = be0 * A01 + be1 * A00;\n    abs = t2 * R12 - t1 * R22;\n    if ((abs >= 0 ? abs : -abs) > ra + rb) return false;\n\n    // test axis L = A1 x B0\n    ra = ae0 * A20 + ae2 * A00;\n    rb = be1 * A12 + be2 * A11;\n    abs = t0 * R20 - t2 * R00;\n    if ((abs >= 0 ? abs : -abs) > ra + rb) return false;\n\n    // test axis L = A1 x B1\n    ra = ae0 * A21 + ae2 * A01;\n    rb = be0 * A12 + be2 * A10;\n    abs = t0 * R21 - t2 * R01;\n    if ((abs >= 0 ? abs : -abs) > ra + rb) return false;\n\n    // test axis L = A1 x B2\n    ra = ae0 * A22 + ae2 * A02;\n    rb = be0 * A11 + be1 * A10;\n    abs = t0 * R22 - t2 * R02;\n    if ((abs >= 0 ? abs : -abs) > ra + rb) return false;\n\n    // test axis L = A2 x B0\n\n    ra = ae0 * A10 + ae1 * A00;\n    rb = be1 * A22 + be2 * A21;\n    abs = t1 * R00 - t0 * R10;\n    if ((abs >= 0 ? abs : -abs) > ra + rb) return false;\n\n    // test axis L = A2 x B1\n    ra = ae0 * A11 + ae1 * A01;\n    rb = be0 * A22 + be2 * A20;\n    abs = t1 * R01 - t0 * R11;\n    if ((abs >= 0 ? abs : -abs) > ra + rb) return false;\n\n    // test axis L = A2 x B2\n    ra = ae0 * A12 + ae1 * A02;\n    rb = be0 * A21 + be1 * A20;\n    abs = t1 * R02 - t0 * R12;\n    if ((abs >= 0 ? abs : -abs) > ra + rb) return false;\n\n\n    return true;\n\n}\n\n\n\n\n/**\n * @en Test line and line\n * @zh 测试线段与线段是否相交\n */\nfunction lineLine(a1: Vec2 | Vec3, a2: Vec2 | Vec3, b1: Vec2 | Vec3, b2: Vec2 | Vec3): boolean {\n    // jshint camelcase:false\n\n    const ua_t = (b2.x - b1.x) * (a1.y - b1.y) - (b2.y - b1.y) * (a1.x - b1.x);\n    const ub_t = (a2.x - a1.x) * (a1.y - b1.y) - (a2.y - a1.y) * (a1.x - b1.x);\n    const u_b = (b2.y - b1.y) * (a2.x - a1.x) - (b2.x - b1.x) * (a2.y - a1.y);\n\n    if (u_b !== 0) {\n        const ua = ua_t / u_b;\n        const ub = ub_t / u_b;\n\n        if (ua >= 0 && ua <= 1 && ub >= 0 && ub <= 1) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nconst tempR1 = new Vec2();\nconst tempR2 = new Vec2();\nconst tempR3 = new Vec2();\nconst tempR4 = new Vec2();\n\n/**\n * @en Test line and rect\n * @zh 测试线段与矩形是否相交\n */\nfunction lineRect(a1: Vec2 | Vec3, a2: Vec2 | Vec3, b: Rect): boolean {\n    const r0 = tempR1.set(b.x, b.y);\n    const r1 = tempR2.set(b.x, b.yMax);\n    const r2 = tempR3.set(b.xMax, b.yMax);\n    const r3 = tempR4.set(b.xMax, b.y);\n\n    if (lineLine(a1, a2, r0, r1)) return true;\n\n    if (lineLine(a1, a2, r1, r2)) return true;\n\n    if (lineLine(a1, a2, r2, r3)) return true;\n\n    if (lineLine(a1, a2, r3, r0)) return true;\n\n    return false;\n}\n\n/**\n * @en Test line and polygon\n * @zh 测试线段与多边形是否相交\n */\nfunction linePolygon(a1: Vec2 | Vec3, a2: Vec2 | Vec3, b: Vec2[] | Vec3[]): boolean {\n    const length = b.length;\n\n    for (let i = 0; i < length; ++i) {\n        const b1 = b[i];\n        const b2 = b[(i + 1) % length];\n\n        if (lineLine(a1, a2, b1, b2)) return true;\n    }\n\n    return false;\n}\n\n/**\n * @en Test rect and rect\n * @zh 测试矩形与矩形是否相交\n */\nfunction rectRect(a: Rect, b: Rect): boolean {\n    // jshint camelcase:false\n\n    const a_min_x = a.x;\n    const a_min_y = a.y;\n    const a_max_x = a.x + a.width;\n    const a_max_y = a.y + a.height;\n\n    const b_min_x = b.x;\n    const b_min_y = b.y;\n    const b_max_x = b.x + b.width;\n    const b_max_y = b.y + b.height;\n\n    return a_min_x <= b_max_x\n        && a_max_x >= b_min_x\n        && a_min_y <= b_max_y\n        && a_max_y >= b_min_y;\n}\n\n/**\n * @en Test rect and polygon\n * @zh 测试矩形与多边形是否相交\n */\nfunction rectPolygon(a: Rect, b: Vec2[] | Vec3[]): boolean {\n    const r0 = tempR1.set(a.x, a.y);\n    const r1 = tempR2.set(a.x, a.yMax);\n    const r2 = tempR3.set(a.xMax, a.yMax);\n    const r3 = tempR4.set(a.xMax, a.y);\n\n    // intersection check\n    if (linePolygon(r0, r1, b)) return true;\n\n    if (linePolygon(r1, r2, b)) return true;\n\n    if (linePolygon(r2, r3, b)) return true;\n\n    if (linePolygon(r3, r0, b)) return true;\n\n    // check if a contains b\n    for (let i = 0, l = b.length; i < l; ++i) {\n        if (a.contains(b[i] as Vec2)) return true;\n    }\n\n    // check if b contains a\n    if (pointInPolygon(r0, b)) return true;\n\n    if (pointInPolygon(r1, b)) return true;\n\n    if (pointInPolygon(r2, b)) return true;\n\n    if (pointInPolygon(r3, b)) return true;\n\n    return false;\n}\n\n/**\n * @en Test polygon and polygon\n * @zh 测试多边形与多边形是否相交\n */\nfunction polygonPolygon(a: Vec2[] | Vec3[], b: Vec2[] | Vec3[]): boolean {\n    let i; let l;\n\n    // check if a intersects b\n    for (i = 0, l = a.length; i < l; ++i) {\n        const a1 = a[i];\n        const a2 = a[(i + 1) % l];\n\n        if (linePolygon(a1, a2, b)) return true;\n    }\n\n    // check if a contains b\n    for (i = 0, l = b.length; i < l; ++i) {\n        if (pointInPolygon(b[i], a)) return true;\n    }\n\n    // check if b contains a\n    for (i = 0, l = a.length; i < l; ++i) {\n        if (pointInPolygon(a[i], b)) return true;\n    }\n\n    return false;\n}\n\n/**\n * @en Test circle and circle\n * @zh 测试圆形与圆形是否相交\n */\nfunction circleCircle(c1p: Vec2 | Vec3, c1r: number, c2p: Vec2 | Vec3, c2r: number): boolean {\n    const distance = Vec2.distance(c1p, c2p);\n    return distance < (c1r + c2r);\n}\n\n/**\n * @en Test polygon and circle\n * @zh 测试多边形与圆形是否相交\n */\nfunction polygonCircle(polygon: Vec2[] | Vec3[], cp: Vec2 | Vec3, cr: number): boolean {\n    const position = cp;\n    if (pointInPolygon(position, polygon)) {\n        return true;\n    }\n\n    for (let i = 0, l = polygon.length; i < l; i++) {\n        const start = i === 0 ? polygon[polygon.length - 1] : polygon[i - 1];\n        const end = polygon[i];\n\n        if (pointLineDistance(position, start, end, true) < cr) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\n/**\n * @en Test rect and circle\n * @zh 测试矩形与圆形是否相交\n */\nfunction rectCircle(rect: Rect, cp: Vec2 | Vec3, cr: number): boolean {\n    const cx = cp.x;\n    const cy = cp.y;\n\n    const rx = rect.x;\n    const ry = rect.y;\n    const rw = rect.width;\n    const rh = rect.height;\n\n    // temporary variables to set edges for testing\n    let testX = cx;\n    let testY = cy;\n\n    // which edge is closest?\n    if (cx < rx) testX = rx;      // test left edge\n    else if (cx > rx + rw) testX = rx + rw;   // right edge\n    if (cy < ry) testY = ry;      // top edge\n    else if (cy > ry + rh) testY = ry + rh;   // bottom edge\n\n    // get distance from closest edges\n    const distX = cx - testX;\n    const distY = cy - testY;\n    const distance = Math.sqrt((distX * distX) + (distY * distY));\n\n    // if the distance is less than the radius, collision!\n    if (distance <= cr) {\n        return true;\n    }\n    return false;\n}\n\n/**\n * @en Test whether the point is in the polygon\n * @zh 测试一个点是否在一个多边形中\n */\nfunction pointInPolygon(point: Vec2 | Vec3, polygon: Vec2[] | Vec3[]): boolean {\n    let inside = false;\n    const x = point.x;\n    const y = point.y;\n\n    // use some raycasting to test hits\n    // https://github.com/substack/point-in-polygon/blob/master/index.js\n    const length = polygon.length;\n\n    for (let i = 0, j = length - 1; i < length; j = i++) {\n        const xi = polygon[i].x; const yi = polygon[i].y;\n        const xj = polygon[j].x; const yj = polygon[j].y;\n        const intersect = ((yi > y) !== (yj > y)) && (x < (xj - xi) * (y - yi) / (yj - yi) + xi);\n\n        if (intersect) inside = !inside;\n    }\n\n    return inside;\n}\n\n/**\n * @en Calculate the distance of point to line.\n * @zh 计算点到直线的距离。如果这是一条线段并且垂足不在线段内，则会计算点到线段端点的距离。\n */\nfunction pointLineDistance(point: Vec2 | Vec3, start: Vec2 | Vec3, end: Vec2 | Vec3, isSegment: boolean): number {\n    let dx = end.x - start.x;\n    let dy = end.y - start.y;\n    const d = dx * dx + dy * dy;\n    const t = ((point.x - start.x) * dx + (point.y - start.y) * dy) / d;\n    let p;\n\n    if (!isSegment) {\n        p = tempR1.set(start.x + t * dx, start.y + t * dy);\n    } else if (d) {\n        if (t < 0) p = start;\n        else if (t > 1) p = end;\n        else p = tempR1.set(start.x + t * dx, start.y + t * dy);\n    } else {\n        p = start;\n    }\n\n    dx = point.x - p.x;\n    dy = point.y - p.y;\n    return Math.sqrt(dx * dx + dy * dy);\n}\n\n/**\n * @en Intersection2D helper class\n * @zh 辅助类，用于测试形状与形状是否相交\n * @class Intersection2D\n */\nexport default class Intersection2D {\n    static lineLine = lineLine;\n    static lineRect = lineRect;\n    static linePolygon = linePolygon;\n    static rectRect = rectRect;\n    static rectPolygon = rectPolygon;\n    static rectCircle = rectCircle;\n    static polygonPolygon = polygonPolygon;\n    static circleCircle = circleCircle;\n    static polygonCircle = polygonCircle;\n    static pointInPolygon = pointInPolygon;\n    static pointLineDistance = pointLineDistance;\n}\n"]}