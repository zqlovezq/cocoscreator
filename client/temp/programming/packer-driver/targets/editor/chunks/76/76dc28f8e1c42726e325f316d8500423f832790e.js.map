{"version":3,"sources":["file:///C:/chickenStarClient/client/assets/scripts/logic/model/hero/herobag/HeroRed.ts"],"names":["HeroRed","OpenFunctionMgr","JIANGHU_TYPE","tab","RedMgr","RedDotType","AdMgr","AssociationData","EquipData","FengyunRankData","BattleMainDataControl","ItemData","GameplayViewDataMgr","PayData","RoleData","HeroData","HeroTeamControl","HeroDataControl","SettingRedManager","SignInGiftData","ActivityData","BattlePassDataMgr","GameUtil","FincaFightData","ChannelMgr","initHeroRed","ins","instance","init","registerCalculateFb","HeroResolve","red_one_click_Resolve","HeroAutoAscend","red_one_click_up_star","HeroupLevel","red_one_hero_level_up","HeroupStar","red_one_hero_star_up","HeroResonanceLevel","red_one_hero_resonance_level","HeroresonanceStar","red_one_hero_resonance_star","HeroPainting","red_painting_up","HeroDrug","red_drug_up","HeroGene","red_Gene_up","HeroGacha","red_Gacha_up","GachaAds","red_ads_up","TenGacha","red_ten_gacha","TenBookGacha","red_ten_book_gacha","HeroRecommend","red_hero_recommend_up","HeroBook","red_hero_book_up","GoldBuy","red_GoldBuy","ChallengeDailyFreeTimes","red_ChallengeDailyFreeTimes","ChallengeDailyAward","red_ChallengeDailyAward","ChapterAward","red_chapterAward","Hand_book","red_Hand_book","First_Recharge","red_first_recharge","Seven_Gift_Pack","red_seven_gift_pack","Wear_Jade","red_wear_jade","Wear_Equip","red_wear_equip","Equip_Strengthen","red_equip_strengthen","Feng_Yun_Rank","red_feng_yun_rank","Head_Icon_Red","red_head_icon","Guild_Skill","red_guild_skill","Guild_Apply","red_guild_apply","Guild_Sign","red_guild_sign","Guild_Activity","red_guild_activity","SignGiftRed","red_sign_gift","Combine_Pass","red_combine_pass","Combine_Grow","red_combine_grow","Combine_Shop","red_combine_shop","Combine_Recharge","red_combine_charge","HeroReplace","red_hero_replace","Free_Fight_Token","red_free_fight_token","PVP_Fight_Team","red_pvp_fight_team","refreshHeroRedData","refreshEvent","stateToChange","checkFunctionIsOpen","OpenFunctionName","OpenFunctionName_FincaFight","getHeroEmptyIndex","getBookEmptyIndex","freeTimes","canReceive","getInGuild","OpenFunctionName_Association","isBargin","isMinPrice","i","str","getIsCanBargain","getIsMinPrice","guildInfo","getAssocitionInfo","signTimes","memberData","getMemberData","id","guildPositionTab","getData","GuildPositionTableByPosition","getValue","job","guildRequests","length","Proces","HeroClass","HeroClass_Assassin","HeroClass_Warrior","isMaterialEnough","isEnough","newDate","Date","createTime","tomorrow","getFullYear","getMonth","getDate","times","getServerUtcTime","getTime","nowDay","Math","ceil","clientData","SevenGiftPack","Number","Boolean","isOpen","OpenFunctionName_FirstRecharge","openFirstRecharge","isNaN","String","rechargeData","getFirstRechargeTable","Id","isRed","tabs","OpenFunctionTable","showTabs","openTab","ShowType","push","listItem","funcData","getOpenFunctionData","Name","isReceivedRewards","clearIds","getStageClearIds","FirstRewardIds","getReceiveFirstRewardIds","map","Map","k","has","stageId","arr","get","index","set","haveAward","_arr","OpenFunctionName_Challenge","Object","keys","forEach","key","_key","NONE","curExportInfo","getExportInfo","clearedStageIds","sweepInfo","getSweepInfo","fightId","pveTab","PveClearStageTableByStageId","receivedFirstRewardStageIds","indexOf","HeroTable","heroTab","itemId","awardMap","getBookReceivedIds","awardObj","isReceived","RecommendTeamTable","_tab","_haveCount","HeroIdList","heroInfo","getByItemId","getRecommendTeamIds","countEnough","isGot","_canRecive","AdType","AdType_None","AdType_Gacha1001","OpenFunctionName_GachaBook","addAdState","AdType_BuyDailyShop","OpenFunctionName_DailyShop","AdType_SpecialGiftDaily","OpenFunctionName_SpecialGiftDaily","AdType_SpecialGiftWeekly","OpenFunctionName_SpecialGiftWeekly","AdType_SpecialGiftMonthly","OpenFunctionName_SpecialGiftMonthly","curCount","getAdCountByType","maxCount","getAdCountMaxByType","isClosePop","AdType_Gacha101","AdType_Gacha301","getSetting","itemArr","OpenFunctionName_GachaBookSR","havaCount","getCount","OpenFunctionName_GachaHeroSSR","getAllResolveHeros","size","getOneClickList","teamSlots","getTeam","v","getById","heroId","checkLevelUp","getHeroLevel","smallLevel","gene","smallGeneLevel","bigLevel","bigGeneLevel","nextSmallGenTab","GeneLevelTableById","nextBigGenTab","level","smallNeedId","MaterialIdList","smallNeedCount","MaterialCountList","haveSmallCount","UnlockArgs","bigNeedId","bigNeedCount","haveBigCount","OpenFunctionName_Drug","ElixirTable","elixirTab","elixirId","elixirCount","useCount","getElixirCountById","playLevel","PlayerLv","MaxCount","isNotFull","checkStarUpMaterialEnough","getCanReplaceHeros","value","OpenFunctionName_HeroLevelResonance","Leveltab","getResonanceLevelTab","NeedLv","getMinTeamLevel","OpenFunctionName_HeroStarResonanceTable","startab","getResonanceStarTab","NeedStar","getMinTeamStar","teamSort","list","getPaintingListByVocation","OpenFunctionName_ScrollPainting","activeStar","paintingActive","maxStar","getMaxPaintingStar","star","teams","OpenFunctionName_Jade","getJadeEquipInfos","maxQulity","currInfo","heroClass","equipData","heroTable","Class","isWear","quality","OpenFunctionName_Equipment","getNewEquip","materialEnoughtFourEquip","equipList","getWearEquipInfosByHeroClass","currEquips","EquipType","EquipType_Feather","minLevel","isEnhanceLimit","enhanceLv","types","totals","currEquip","items","convertItemInfosByList","enhanceUpgradeTable","Moneys","concat","Materials","itemsAddItems","isItemsEnough","equipTable","Type","getEquipBagByHeroClass","EquipType_Gloves","EquipType_Clothing","EquipType_Cloak","EquipType_Hat","slots","getEquipContainerDataByHeroClass","slotData","ids","type","slot","equipId","equipInfo","getEquipInfoById","score","getMapData","honorRollData","endTime","activityEndTime","lastTimer","tasks","taskData","taskTab","TaskTableById","taskTabId","progress","FinishParam1","newHeadIconArr","split","newHeadFrameArr","groups","getAllActivityGroup","info","activityTable","ActivityIds","activityInfo","ActivityTableByActivityId","heroGrowData","getHeroGrowData","OpenFunctionName_ActivityHeroGrow","Param1","receiveLen","receivedFreeRewardStars","TabId","OpenFunctionName_BattlePassSignIn1","passId","getAllReceiveTaskId","OpenFunctionName_ActivityMall","mallId","listData","getMallItemTabsById","adType","maxAdTimes","curAdTimes","OpenFunctionName_ActivityCumulativeRecharge","acitivityId","Tabs","getAllTabsByRechageId","serverData","getRechargeServerData","getPayType","tabData","payAmount","receivedRewardIds","IndexId","checkWearEquip","data","isInTeam","heroInTeam","checkWearJade","payType","channelTab","Currency"],"mappings":"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","sourcesContent":["/*\r\n * @Date: 2024-05-16 10:40:15\r\n * @计算英雄红点逻辑\r\n * @LastEditors: wzq\r\n * @LastEditTime: 2024-11-20 13:53:37\r\n */\r\n\r\nimport { proto } from \"client_protocol\";\r\nimport { OpenFunctionMgr } from \"../../../../Common/component/OpenFunctionMgr\";\r\nimport { JIANGHU_TYPE } from \"../../../../Common/script/EnumTypeMgr\";\r\nimport { tab } from \"../../../../Table/table_gen\";\r\nimport { Role } from \"../../../fight/base/obj/role/role/Role\";\r\nimport { RedMgr } from \"../../../mgr/RedMgr\";\r\nimport { RedDotType } from \"../../../red/RedDotType\";\r\nimport { AdMgr } from \"../../AdMgr\";\r\nimport { AssociationData } from \"../../association/AssociationData\";\r\nimport { EquipData } from \"../../equip/EquipData\";\r\nimport { EquipInfo } from \"../../equip/EquipInfo\";\r\nimport { FengyunRankData } from \"../../fengyunRanking/FengyunRankData\";\r\nimport { BattleMainDataControl } from \"../../home/battle/BattleMainDataControl\";\r\nimport { ItemData } from \"../../item/ItemData\";\r\nimport { GameplayViewDataMgr } from \"../../jianghu/GameplayViewDataMgr\";\r\nimport { PayData } from \"../../pay/PayData\";\r\nimport { RoleData } from \"../../role/RoleData\";\r\nimport { HeroData } from \"../HeroData\";\r\nimport { HeroTeamControl } from \"../HeroTeamControl\";\r\nimport { HeroDataControl } from \"./HeroDataControl\";\r\nimport { SettingRedManager } from \"../../role/SettingRedManager\";\r\nimport { SignInGiftData } from \"../../activity/signGift/SignInGiftData\";\r\nimport { ActivityData } from \"../../activity/ActivityData\";\r\nimport { BattlePassDataMgr } from \"../../activity/battlePass/BattlePassDataMgr\";\r\nimport { GameUtil } from \"../../../utils/GameUtil\";\r\nimport { FincaFightData } from \"../../fincaFight/FincaFightData\";\r\nimport { HeroInfo } from \"../HeroInfo\";\r\nimport { ChannelMgr } from \"../../../../channel/ChannelMgr\";\r\nexport class HeroRed {\r\n    private initHeroRed: boolean = false;\r\n    private static instance: HeroRed = null;\r\n\r\n    public static get ins() {\r\n        if (this.instance == null) {\r\n            this.instance = new HeroRed();\r\n        }\r\n        return this.instance;\r\n    }\r\n    init() {\r\n        this.initHeroRed = true;\r\n        RedMgr.ins.registerCalculateFb(RedDotType.HeroResolve, this.red_one_click_Resolve, this);\r\n        RedMgr.ins.registerCalculateFb(RedDotType.HeroAutoAscend, this.red_one_click_up_star, this);\r\n        RedMgr.ins.registerCalculateFb(RedDotType.HeroupLevel, this.red_one_hero_level_up, this);\r\n        RedMgr.ins.registerCalculateFb(RedDotType.HeroupStar, this.red_one_hero_star_up, this);\r\n        RedMgr.ins.registerCalculateFb(RedDotType.HeroResonanceLevel, this.red_one_hero_resonance_level, this);\r\n        RedMgr.ins.registerCalculateFb(RedDotType.HeroresonanceStar, this.red_one_hero_resonance_star, this);\r\n        RedMgr.ins.registerCalculateFb(RedDotType.HeroPainting, this.red_painting_up, this);\r\n        RedMgr.ins.registerCalculateFb(RedDotType.HeroDrug, this.red_drug_up, this);\r\n        RedMgr.ins.registerCalculateFb(RedDotType.HeroGene, this.red_Gene_up, this);\r\n        RedMgr.ins.registerCalculateFb(RedDotType.HeroGacha, this.red_Gacha_up, this);\r\n        RedMgr.ins.registerCalculateFb(RedDotType.GachaAds, this.red_ads_up, this);\r\n        RedMgr.ins.registerCalculateFb(RedDotType.TenGacha, this.red_ten_gacha, this);\r\n        RedMgr.ins.registerCalculateFb(RedDotType.TenBookGacha, this.red_ten_book_gacha, this);\r\n        RedMgr.ins.registerCalculateFb(RedDotType.HeroRecommend, this.red_hero_recommend_up, this);\r\n        RedMgr.ins.registerCalculateFb(RedDotType.HeroBook, this.red_hero_book_up, this);\r\n        RedMgr.ins.registerCalculateFb(RedDotType.GoldBuy, this.red_GoldBuy, this);\r\n        RedMgr.ins.registerCalculateFb(RedDotType.ChallengeDailyFreeTimes, this.red_ChallengeDailyFreeTimes, this);\r\n        RedMgr.ins.registerCalculateFb(RedDotType.ChallengeDailyAward, this.red_ChallengeDailyAward, this);\r\n        RedMgr.ins.registerCalculateFb(RedDotType.ChapterAward, this.red_chapterAward, this);\r\n        RedMgr.ins.registerCalculateFb(RedDotType.Hand_book, this.red_Hand_book, this);\r\n        RedMgr.ins.registerCalculateFb(RedDotType.First_Recharge, this.red_first_recharge, this);\r\n        RedMgr.ins.registerCalculateFb(RedDotType.Seven_Gift_Pack, this.red_seven_gift_pack, this);\r\n        RedMgr.ins.registerCalculateFb(RedDotType.Wear_Jade, this.red_wear_jade, this);\r\n        RedMgr.ins.registerCalculateFb(RedDotType.Wear_Equip, this.red_wear_equip, this);\r\n        RedMgr.ins.registerCalculateFb(RedDotType.Equip_Strengthen, this.red_equip_strengthen, this);\r\n        RedMgr.ins.registerCalculateFb(RedDotType.Feng_Yun_Rank, this.red_feng_yun_rank, this);\r\n        RedMgr.ins.registerCalculateFb(RedDotType.Head_Icon_Red, this.red_head_icon, this);\r\n        RedMgr.ins.registerCalculateFb(RedDotType.Guild_Skill, this.red_guild_skill, this);\r\n        RedMgr.ins.registerCalculateFb(RedDotType.Guild_Apply, this.red_guild_apply, this);\r\n        RedMgr.ins.registerCalculateFb(RedDotType.Guild_Sign, this.red_guild_sign, this);\r\n        RedMgr.ins.registerCalculateFb(RedDotType.Guild_Activity, this.red_guild_activity, this);\r\n        RedMgr.ins.registerCalculateFb(RedDotType.SignGiftRed, this.red_sign_gift, this);\r\n\r\n        RedMgr.ins.registerCalculateFb(RedDotType.Combine_Pass, this.red_combine_pass, this);\r\n        RedMgr.ins.registerCalculateFb(RedDotType.Combine_Grow, this.red_combine_grow, this);\r\n        RedMgr.ins.registerCalculateFb(RedDotType.Combine_Shop, this.red_combine_shop, this);\r\n        RedMgr.ins.registerCalculateFb(RedDotType.Combine_Recharge, this.red_combine_charge, this);\r\n        RedMgr.ins.registerCalculateFb(RedDotType.HeroReplace, this.red_hero_replace, this);\r\n        RedMgr.ins.registerCalculateFb(RedDotType.Free_Fight_Token, this.red_free_fight_token, this);\r\n        RedMgr.ins.registerCalculateFb(RedDotType.PVP_Fight_Team, this.red_pvp_fight_team, this);\r\n\r\n        this.refreshHeroRedData();\r\n    }\r\n    /* 刷新英雄红点数据 */\r\n    refreshHeroRedData() {\r\n        if (!this.initHeroRed) {\r\n            return;\r\n        }\r\n        RedMgr.refreshEvent(RedDotType.HeroupLevel);\r\n        RedMgr.refreshEvent(RedDotType.HeroupStar);\r\n        RedMgr.refreshEvent(RedDotType.HeroDrug);\r\n        RedMgr.refreshEvent(RedDotType.HeroGene);\r\n        RedMgr.refreshEvent(RedDotType.HeroGacha);\r\n        RedMgr.refreshEvent(RedDotType.GachaAds);\r\n        RedMgr.refreshEvent(RedDotType.TenGacha);\r\n        RedMgr.refreshEvent(RedDotType.TenBookGacha);\r\n\r\n        RedMgr.refreshEvent(RedDotType.HeroResolve);\r\n        RedMgr.refreshEvent(RedDotType.HeroAutoAscend);\r\n        RedMgr.refreshEvent(RedDotType.HeroResonanceLevel);\r\n        RedMgr.refreshEvent(RedDotType.HeroresonanceStar);\r\n        RedMgr.refreshEvent(RedDotType.HeroPainting);\r\n        RedMgr.refreshEvent(RedDotType.HeroRecommend);\r\n        RedMgr.refreshEvent(RedDotType.HeroBook);\r\n        RedMgr.refreshEvent(RedDotType.GoldBuy);\r\n        RedMgr.refreshEvent(RedDotType.Hand_book);\r\n        RedMgr.refreshEvent(RedDotType.Wear_Equip);\r\n        RedMgr.refreshEvent(RedDotType.Wear_Jade);\r\n        RedMgr.refreshEvent(RedDotType.Equip_Strengthen);\r\n        RedMgr.refreshEvent(RedDotType.Head_Icon_Red);\r\n    }\r\n    red_pvp_fight_team(){\r\n        let stateToChange = {};\r\n        if (!OpenFunctionMgr.ins.checkFunctionIsOpen(tab.OpenFunctionName.OpenFunctionName_FincaFight)) {\r\n            return false;\r\n        }\r\n        stateToChange[1] = FincaFightData.ins.getHeroEmptyIndex()!==0;\r\n        stateToChange[2] = FincaFightData.ins.getBookEmptyIndex()!==0;\r\n        return stateToChange;\r\n    }\r\n    red_free_fight_token(){\r\n        if (!OpenFunctionMgr.ins.checkFunctionIsOpen(tab.OpenFunctionName.OpenFunctionName_FincaFight)) {\r\n            return false;\r\n        }\r\n        return FincaFightData.ins.freeTimes>0 \r\n    }\r\n    red_sign_gift() {\r\n        return SignInGiftData.ins.canReceive();\r\n    }\r\n    red_guild_activity() {\r\n        if (!AssociationData.ins.getInGuild()) {\r\n            return false\r\n        }\r\n        if (!OpenFunctionMgr.ins.checkFunctionIsOpen(tab.OpenFunctionName.OpenFunctionName_Association)) {\r\n            return false;\r\n        }\r\n        let stateToChange = {};\r\n        let isBargin = false;\r\n        let isMinPrice = false;\r\n        for (let i = 0; i < 3; i++) {\r\n            const str = \"gift_btn\" + (i + 1);\r\n            isBargin = AssociationData.ins.getIsCanBargain(str);//是否可以拼多多\r\n            isMinPrice = AssociationData.ins.getIsMinPrice(str);//是否是最低价\r\n            stateToChange[str] = isBargin || isMinPrice;\r\n        }\r\n        return stateToChange;\r\n    }\r\n    red_guild_sign() {\r\n        if (!AssociationData.ins.getInGuild()) {\r\n            return false\r\n        }\r\n        if (!OpenFunctionMgr.ins.checkFunctionIsOpen(tab.OpenFunctionName.OpenFunctionName_Association)) {\r\n            return false;\r\n        }\r\n        const guildInfo = AssociationData.ins.getAssocitionInfo();\r\n        // const guildSignTab = tab.getData().GuildSignInTableById.getValue(guildInfo.signTimes + 1);\r\n        // if (guildSignTab) {\r\n        //     const costDiamond = guildSignTab.SignInCostDiamond;\r\n        //     if (RoleData.ins.diamond >= costDiamond) {\r\n        //         return true\r\n        //     }\r\n        // }\r\n        return guildInfo.signTimes < 1;\r\n    }\r\n    red_guild_apply() {\r\n        if (!AssociationData.ins.getInGuild()) {\r\n            return false\r\n        }\r\n        if (!OpenFunctionMgr.ins.checkFunctionIsOpen(tab.OpenFunctionName.OpenFunctionName_Association)) {\r\n            return false;\r\n        }\r\n        const memberData = AssociationData.ins.getMemberData(RoleData.ins.id);\r\n        const guildPositionTab = tab.getData().GuildPositionTableByPosition.getValue(memberData.job);\r\n        return RoleData.ins.guildRequests.length > 0 && guildPositionTab.Proces;\r\n    }\r\n    red_guild_skill() {\r\n        if (!OpenFunctionMgr.ins.checkFunctionIsOpen(tab.OpenFunctionName.OpenFunctionName_Association)) {\r\n            return false;\r\n        }\r\n        if (!AssociationData.ins.getInGuild()) {\r\n            return false\r\n        }\r\n        let stateToChange = {};\r\n        for (let i = tab.HeroClass.HeroClass_Assassin; i <= tab.HeroClass.HeroClass_Warrior; i++) {\r\n            stateToChange[i] = AssociationData.ins.isMaterialEnough(i).isEnough;\r\n        }\r\n        return stateToChange;\r\n    }\r\n    red_seven_gift_pack() {\r\n        const newDate = new Date(RoleData.ins.createTime * 1000);\r\n        const tomorrow = new Date(newDate.getFullYear(), newDate.getMonth(), newDate.getDate() + 1);\r\n        const times = RoleData.ins.getServerUtcTime() - tomorrow.getTime() / 1000;\r\n        let nowDay = 1;\r\n        if (times > 0) {\r\n            nowDay = Math.ceil((RoleData.ins.getServerUtcTime() - tomorrow.getTime() / 1000) / 86400) + 1;\r\n        }\r\n        if (nowDay > 7) {\r\n            if (RoleData.ins.clientData.SevenGiftPack) {\r\n                return Number(RoleData.ins.clientData.SevenGiftPack) < 2;\r\n            }\r\n        } else {\r\n            if (RoleData.ins.clientData.SevenGiftPack) {\r\n                return Number(RoleData.ins.clientData.SevenGiftPack) < 1;\r\n            } else {\r\n                return Number(Boolean(RoleData.ins.clientData.SevenGiftPack)) < 1\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    red_first_recharge() {\r\n        const isOpen = OpenFunctionMgr.ins.checkFunctionIsOpen(tab.OpenFunctionName.OpenFunctionName_FirstRecharge);\r\n\r\n        if (!RoleData.ins.clientData.openFirstRecharge) {\r\n            RoleData.ins.clientData.openFirstRecharge = \"0\"\r\n        } else {\r\n            if (isNaN(Number(RoleData.ins.clientData.openFirstRecharge))) {\r\n                RoleData.ins.clientData.openFirstRecharge = String(Number(Boolean(RoleData.ins.clientData.openFirstRecharge)))\r\n            }\r\n        }\r\n\r\n        const openFirstRecharge = Number(RoleData.ins.clientData.openFirstRecharge);\r\n        let rechargeData = PayData.ins.getFirstRechargeTable();\r\n        if (rechargeData) {\r\n            return isOpen && openFirstRecharge < rechargeData.Id;\r\n        }\r\n        return false;\r\n    }\r\n    red_Hand_book() {\r\n        let isRed = false;\r\n        const tabs = tab.getData().OpenFunctionTable;\r\n        const showTabs = [];\r\n        for (let i = 0; i < tabs.length; i++) {\r\n            const openTab = tabs[i];\r\n            if (openTab.ShowType === 0) {\r\n                continue;\r\n            }\r\n            showTabs.push(openTab);\r\n        }\r\n        for (let i = 0; i < showTabs.length; i++) {\r\n            let listItem: tab.OpenFunctionTable = showTabs[i];\r\n            const funcData = OpenFunctionMgr.ins.getOpenFunctionData(listItem.Name);\r\n            if (funcData && !funcData.isReceivedRewards && funcData.isOpen && listItem.ShowType === 1) {\r\n                isRed = true;\r\n                break;\r\n            }\r\n        }\r\n        return isRed;\r\n    }\r\n    red_chapterAward() {\r\n        const clearIds = BattleMainDataControl.ins.getStageClearIds();\r\n        const FirstRewardIds = BattleMainDataControl.ins.getReceiveFirstRewardIds();\r\n        let map = new Map();;\r\n        for (let k = 0; k < FirstRewardIds.length; k++) {\r\n            if (map.has(FirstRewardIds[k].stageId)) {\r\n                const arr = map.get(FirstRewardIds[k].stageId);\r\n                arr.push(FirstRewardIds[k].index);\r\n            } else {\r\n                map.set(FirstRewardIds[k].stageId, [FirstRewardIds[k].index]);\r\n            }\r\n        }\r\n        let haveAward = false;\r\n        if (clearIds.length > 0) {\r\n            for (let i = 0; i < clearIds.length; i++) {\r\n                if (!map.has(clearIds[i])) {\r\n                    haveAward = true;\r\n                    break;\r\n                } else {\r\n                    const _arr = map.get(clearIds[i]);\r\n                    if (_arr.length < 3) {\r\n                        haveAward = true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return haveAward\r\n    }\r\n    red_ChallengeDailyFreeTimes() {\r\n        if (!OpenFunctionMgr.ins.checkFunctionIsOpen(tab.OpenFunctionName.OpenFunctionName_Challenge)) {\r\n            return false;\r\n        }\r\n        let stateToChange = {};\r\n        Object.keys(JIANGHU_TYPE).forEach(key => {\r\n            const _key = Number(key)\r\n            if (!isNaN(_key) && _key !== JIANGHU_TYPE.NONE) {\r\n                const curExportInfo = GameplayViewDataMgr.ins.getExportInfo(_key);\r\n                if (curExportInfo.clearedStageIds.length === 0) {\r\n                    stateToChange[_key] = false;\r\n                } else {\r\n                    const sweepInfo = GameplayViewDataMgr.ins.getSweepInfo(_key);\r\n                    stateToChange[_key] = sweepInfo.freeTimes > 0\r\n                }\r\n            }\r\n        })\r\n        return stateToChange;\r\n    }\r\n    red_ChallengeDailyAward() {\r\n        if (!OpenFunctionMgr.ins.checkFunctionIsOpen(tab.OpenFunctionName.OpenFunctionName_Challenge)) {\r\n            return false;\r\n        }\r\n\r\n        let stateToChange = {};\r\n        Object.keys(JIANGHU_TYPE).forEach(key => {\r\n            const _key = Number(key)\r\n            if (!isNaN(_key) && _key !== JIANGHU_TYPE.NONE) {\r\n                const curExportInfo = GameplayViewDataMgr.ins.getExportInfo(_key);\r\n                if (curExportInfo.clearedStageIds.length === 0) {\r\n                    stateToChange[_key] = false;\r\n                } else {\r\n                    const curExportInfo = GameplayViewDataMgr.ins.getExportInfo(_key);\r\n                    stateToChange[_key] = false\r\n                    for (let i = 0; i < curExportInfo.clearedStageIds.length; i++) {\r\n                        const fightId = curExportInfo.clearedStageIds[i];\r\n                        const pveTab = tab.getData().PveClearStageTableByStageId.getValue(fightId);\r\n                        if (pveTab && curExportInfo.receivedFirstRewardStageIds.indexOf(fightId) === -1) {\r\n                            stateToChange[_key] = true\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        })\r\n        return stateToChange;\r\n    }\r\n    // 购买金币红点功能关闭\r\n    red_GoldBuy() {\r\n        // 是否功能开启\r\n        return false\r\n        // const isOpen = OpenFunctionMgr.ins.checkFunctionIsOpen(tab.OpenFunctionName.OpenFunctionName_BuyGold)\r\n        // const curAdTimes = AdMgr.ins.getAdCountByType(tab.AdType.AdType_BuyGold);\r\n        // const maxAdTimes = AdMgr.ins.getAdCountMaxByType(tab.AdType.AdType_BuyGold);\r\n        // const isCloseBuyPop = SettingRedManager.ins.getSetting(\"GoldBuy\");\r\n        // return maxAdTimes > curAdTimes && !isCloseBuyPop && isOpen;\r\n    }\r\n    /* 图签可领取奖励红点 */\r\n    red_hero_book_up() {\r\n        let stateToChange = {};\r\n        for (let i = 0; i < tab.getData().HeroTable.length; i++) {\r\n            const heroTab = tab.getData().HeroTable[i];\r\n            const itemId = heroTab.Id;\r\n            const awardMap = HeroDataControl.ins.getBookReceivedIds();\r\n            const awardObj = awardMap.get(itemId);\r\n            stateToChange[itemId] = awardObj && !awardObj.isReceived;\r\n        }\r\n        return stateToChange;\r\n    }\r\n    /* 推荐阵容红点 */\r\n    red_hero_recommend_up() {\r\n        let stateToChange = {};\r\n        for (let i = 0; i < tab.getData().RecommendTeamTable.length; i++) {\r\n            const _tab = tab.getData().RecommendTeamTable[i];\r\n            let _haveCount = 0;\r\n            for (let i = 0; i < _tab.HeroIdList.length; i++) {\r\n                let itemId = _tab.HeroIdList[i];\r\n                let heroInfo = HeroData.ins.getByItemId(itemId);\r\n                if (heroInfo) {\r\n                    _haveCount++;\r\n                }\r\n            }\r\n            const map = HeroDataControl.ins.getRecommendTeamIds();\r\n            const countEnough = _haveCount >= _tab.HeroIdList.length;\r\n            const isGot = map.get(_tab.Id)\r\n            const _canRecive = countEnough && !isGot;\r\n            stateToChange[_tab.Id] = _canRecive;\r\n        }\r\n        return stateToChange;\r\n    }\r\n    /* 广告红点逻辑 */\r\n    red_ads_up() {\r\n        let stateToChange = {};\r\n        Object.keys(tab.AdType).forEach(key => {\r\n            const _key = Number(key)\r\n            if (!isNaN(_key) && _key !== tab.AdType.AdType_None) {\r\n                if (_key == tab.AdType.AdType_Gacha1001) {\r\n                    if (OpenFunctionMgr.ins.checkFunctionIsOpen(tab.OpenFunctionName.OpenFunctionName_GachaBook)) {\r\n                        this.addAdState(stateToChange, _key)\r\n                    } else {\r\n                        stateToChange[_key] = false;\r\n                    }\r\n                } else if (_key == tab.AdType.AdType_BuyDailyShop) {\r\n                    if (OpenFunctionMgr.ins.checkFunctionIsOpen(tab.OpenFunctionName.OpenFunctionName_DailyShop)) {\r\n                        this.addAdState(stateToChange, _key)\r\n                    } else {\r\n                        stateToChange[_key] = false;\r\n                    }\r\n                } else if (_key == tab.AdType.AdType_SpecialGiftDaily) {\r\n                    if (OpenFunctionMgr.ins.checkFunctionIsOpen(tab.OpenFunctionName.OpenFunctionName_SpecialGiftDaily)) {\r\n                        this.addAdState(stateToChange, _key)\r\n                    } else {\r\n                        stateToChange[_key] = false;\r\n                    }\r\n                } else if (_key == tab.AdType.AdType_SpecialGiftWeekly) {\r\n                    if (OpenFunctionMgr.ins.checkFunctionIsOpen(tab.OpenFunctionName.OpenFunctionName_SpecialGiftWeekly)) {\r\n                        this.addAdState(stateToChange, _key)\r\n                    } else {\r\n                        stateToChange[_key] = false;\r\n                    }\r\n                } else if (_key == tab.AdType.AdType_SpecialGiftMonthly) {\r\n                    if (OpenFunctionMgr.ins.checkFunctionIsOpen(tab.OpenFunctionName.OpenFunctionName_SpecialGiftMonthly)) {\r\n                        this.addAdState(stateToChange, _key)\r\n                    } else {\r\n                        stateToChange[_key] = false;\r\n                    }\r\n                } else {\r\n                    this.addAdState(stateToChange, _key)\r\n                }\r\n\r\n            }\r\n        })\r\n        return stateToChange;\r\n    }\r\n    addAdState(stateToChange, key: tab.AdType) {\r\n        const curCount = AdMgr.ins.getAdCountByType(key);\r\n        const maxCount = AdMgr.ins.getAdCountMaxByType(key);\r\n        let isClosePop = false;\r\n        if (key == tab.AdType.AdType_Gacha101 || key == tab.AdType.AdType_Gacha301) {\r\n            isClosePop = SettingRedManager.ins.getSetting(\"GachaAds\");\r\n        }\r\n        stateToChange[key] = maxCount > curCount && !isClosePop;\r\n    }\r\n    /* 保底抽红点 */\r\n    red_Gacha_up() {\r\n        let stateToChange = {}\r\n        const itemArr = [51, 81, 82];\r\n        for (let i = 0; i < itemArr.length; i++) {\r\n            if (i == 2) {\r\n                if (OpenFunctionMgr.ins.checkFunctionIsOpen(tab.OpenFunctionName.OpenFunctionName_GachaBookSR)) {\r\n                    const havaCount = ItemData.ins.getCount(itemArr[i]);\r\n                    stateToChange[i + 1] = havaCount >= 1000;\r\n                } else {\r\n                    stateToChange[i + 1] = false;\r\n                }\r\n            } else if (i == 0) {\r\n                if (OpenFunctionMgr.ins.checkFunctionIsOpen(tab.OpenFunctionName.OpenFunctionName_GachaHeroSSR)) {\r\n                    const havaCount = ItemData.ins.getCount(itemArr[i]);\r\n                    stateToChange[i + 1] = havaCount >= 1000;\r\n                } else {\r\n                    stateToChange[i + 1] = false;\r\n                }\r\n            } else {\r\n                const havaCount = ItemData.ins.getCount(itemArr[i]);\r\n                stateToChange[i + 1] = havaCount >= 1000;\r\n            }\r\n\r\n        }\r\n        return stateToChange;\r\n    }\r\n    /* 十连抽红点 */\r\n    red_ten_gacha() {\r\n        let stateToChange = {}\r\n        let isClosePop = SettingRedManager.ins.getSetting(\"TenGacha\");\r\n        const itemArr = [101, 102, 103];\r\n        for (let i = 0; i < itemArr.length; i++) {\r\n            const id = itemArr[i];\r\n            const havaCount = ItemData.ins.getCount(id);\r\n            stateToChange[id] = havaCount >= 10 && !isClosePop;\r\n        }\r\n        return stateToChange;\r\n    }\r\n    /* 十连武器抽红点 */\r\n    red_ten_book_gacha() {\r\n        const isOpen = OpenFunctionMgr.ins.checkFunctionIsOpen(tab.OpenFunctionName.OpenFunctionName_GachaBook)\r\n        if (isOpen) {\r\n            let stateToChange = {}\r\n            let isClosePop = SettingRedManager.ins.getSetting(\"TenBookGacha\");\r\n            const id = 111;\r\n            const havaCount = ItemData.ins.getCount(id);\r\n            stateToChange[id] = havaCount >= 10 && !isClosePop;\r\n            return stateToChange;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n    /* 检测一键遣散 */\r\n    red_one_click_Resolve() {\r\n        return HeroDataControl.ins.getAllResolveHeros().size > 0\r\n    }\r\n    /* 检测一键升星 */\r\n    red_one_click_up_star() {\r\n        return HeroDataControl.ins.getOneClickList().size > 0\r\n    }\r\n    /* 检测上阵英雄是否可以升级 */\r\n    red_one_hero_level_up() {\r\n        let stateToChange = {}\r\n        let teamSlots = HeroTeamControl.ins.getTeam();\r\n        for (let i = 0; i < teamSlots.length; i++) {\r\n            let v = teamSlots[i];\r\n            let heroInfo = HeroData.ins.getById(v.heroId);\r\n            if (heroInfo) {\r\n                stateToChange[String(v.heroId)] = heroInfo.checkLevelUp() > heroInfo.getHeroLevel();\r\n            }\r\n        }\r\n        return stateToChange;\r\n    }\r\n    /* 基因红点 */\r\n    red_Gene_up() {\r\n        const smallLevel = RoleData.ins.gene.smallGeneLevel;\r\n        const bigLevel = RoleData.ins.gene.bigGeneLevel;\r\n        const nextSmallGenTab = tab.getData().GeneLevelTableById.getValue(smallLevel + 1);\r\n        const nextBigGenTab = tab.getData().GeneLevelTableById.getValue(bigLevel + 10001);\r\n        const level = RoleData.ins.level;\r\n        if (nextSmallGenTab) {\r\n            const smallNeedId = nextSmallGenTab.MaterialIdList[0];\r\n            const smallNeedCount = nextSmallGenTab.MaterialCountList[0];\r\n            const haveSmallCount = ItemData.ins.getCount(smallNeedId);\r\n            if (level >= nextSmallGenTab.UnlockArgs && haveSmallCount >= smallNeedCount) {\r\n                return true;\r\n            }\r\n        }\r\n        if (nextBigGenTab) {\r\n            const bigNeedId = nextBigGenTab.MaterialIdList[0];\r\n            const bigNeedCount = nextBigGenTab.MaterialCountList[0];\r\n            const haveBigCount = ItemData.ins.getCount(bigNeedId);\r\n            if (smallLevel >= nextBigGenTab.UnlockArgs && haveBigCount >= bigNeedCount) {\r\n                return true;\r\n            }\r\n        }\r\n        if (!nextSmallGenTab && !nextBigGenTab) {\r\n            return false;\r\n        }\r\n        return false;\r\n    }\r\n    /* 捕虫红点 */\r\n    red_drug_up() {\r\n        let stateToChange = {};\r\n        const isOpen = OpenFunctionMgr.ins.checkFunctionIsOpen(tab.OpenFunctionName.OpenFunctionName_Drug)\r\n        for (let i = 0; i < tab.getData().ElixirTable.length; i++) {\r\n            const elixirTab = tab.getData().ElixirTable[i];\r\n            const elixirId = elixirTab.Id;\r\n            const elixirCount = ItemData.ins.getCount(elixirId);\r\n            const useCount = HeroTeamControl.ins.getElixirCountById(elixirId);\r\n\r\n            const playLevel = RoleData.ins.level;\r\n            let maxCount = 0;\r\n            for (let k = elixirTab.PlayerLv.length - 1; k >= 0; k--) {\r\n                const level = elixirTab.PlayerLv[k];\r\n                if (playLevel > level) {\r\n                    maxCount = elixirTab.MaxCount[k];\r\n                    break;\r\n                }\r\n            }\r\n            const isNotFull = useCount < maxCount;\r\n\r\n            stateToChange[elixirId] = elixirCount > 0 && isNotFull && isOpen\r\n        }\r\n        return stateToChange;\r\n    }\r\n    /* 检测上阵英雄是否可以升星 */\r\n    red_one_hero_star_up() {\r\n        let stateToChange = {}\r\n        let teamSlots = HeroTeamControl.ins.getTeam();\r\n        for (let i = 0; i < teamSlots.length; i++) {\r\n            let v = teamSlots[i];\r\n            let heroInfo = HeroData.ins.getById(v.heroId);\r\n            if (heroInfo) {\r\n                stateToChange[String(v.heroId)] = heroInfo.checkStarUpMaterialEnough();\r\n            }\r\n        }\r\n        return stateToChange;\r\n    }\r\n    /* 检测当前上阵英雄是否有可替换英雄 */\r\n    red_hero_replace() {\r\n        let stateToChange = {}\r\n        const map = HeroDataControl.ins.getCanReplaceHeros();\r\n        map.forEach((value: boolean, key: number) => {\r\n            stateToChange[key] = true;\r\n        })\r\n        return stateToChange;\r\n    }\r\n    /* 检测等级共鸣 */\r\n    red_one_hero_resonance_level() {\r\n        // 开启条件\r\n        const isOpen = OpenFunctionMgr.ins.checkFunctionIsOpen(tab.OpenFunctionName.OpenFunctionName_HeroLevelResonance)\r\n        if (!isOpen) {\r\n            return false;\r\n        }\r\n        let Leveltab = HeroTeamControl.ins.getResonanceLevelTab();\r\n        if (Leveltab.NeedLv === 0) {\r\n            return false\r\n        }\r\n        return HeroTeamControl.ins.getMinTeamLevel() >= Leveltab.NeedLv\r\n    }\r\n    /* 检测星级共鸣 */\r\n    red_one_hero_resonance_star() {\r\n        const isOpen = OpenFunctionMgr.ins.checkFunctionIsOpen(tab.OpenFunctionName.OpenFunctionName_HeroStarResonanceTable)\r\n        if (!isOpen) {\r\n            return false;\r\n        }\r\n        let startab = HeroTeamControl.ins.getResonanceStarTab();\r\n        if (startab.NeedStar === 0) {\r\n            return false\r\n        }\r\n        return HeroTeamControl.ins.getMinTeamStar() >= startab.NeedStar\r\n    }\r\n    /* 检测绘卷 */\r\n    red_painting_up() {\r\n        const stateToChange = {}\r\n        const teamSort = [1, 2, 3, 4, 5];//射手-刺客-法师-牧师-战士\r\n        for (let i = 0; i < teamSort.length; i++) {\r\n            stateToChange[teamSort[i]] = {};\r\n            const list = HeroDataControl.ins.getPaintingListByVocation(teamSort[i]);\r\n            const isOpen = OpenFunctionMgr.ins.checkFunctionIsOpen(tab.OpenFunctionName.OpenFunctionName_ScrollPainting)\r\n            for (let k = 0; k < list.length; k++) {\r\n                const heroId = list[k];\r\n                const activeStar = HeroDataControl.ins.paintingActive.get(heroId);\r\n                const maxStar = HeroDataControl.ins.getMaxPaintingStar(heroId);\r\n                let star = activeStar ? activeStar : 0;\r\n                let isRed = false;\r\n                if (maxStar && maxStar > star && isOpen) {\r\n                    isRed = true;\r\n                }\r\n                stateToChange[teamSort[i]][heroId] = isRed\r\n            }\r\n        }\r\n        return stateToChange;\r\n    }\r\n    red_wear_jade() {\r\n        let stateToChange = {}\r\n        const teams = HeroTeamControl.ins.getTeam()\r\n        const isOpen = OpenFunctionMgr.ins.checkFunctionIsOpen(tab.OpenFunctionName.OpenFunctionName_Jade);\r\n        if (!isOpen) {\r\n            return false;\r\n        }\r\n        const list = EquipData.ins.getJadeEquipInfos();\r\n        for (let i = 0; i < teams.length; i++) {\r\n            let maxQulity = 0;\r\n            let currInfo: EquipInfo = null;\r\n            const heroClass = teams[i].heroClass;\r\n            const heroInfo = HeroData.ins.getById(teams[i].heroId);\r\n            for (let k = 0; k < list.length; k++) {\r\n                const equipData = list[k];\r\n                if (equipData.heroClass === heroInfo.heroTable.Class) {\r\n                    currInfo = equipData\r\n                }\r\n                if (!equipData.isWear && equipData.quality > maxQulity) {\r\n                    maxQulity = equipData.quality\r\n                }\r\n            }\r\n            if (maxQulity) {\r\n                if (currInfo) {\r\n                    stateToChange[String(heroClass)] = (maxQulity - currInfo.quality) > 0;\r\n                } else {\r\n                    stateToChange[String(heroClass)] = true\r\n                }\r\n            } else {\r\n                stateToChange[String(heroClass)] = false\r\n            }\r\n        }\r\n        return stateToChange\r\n    }\r\n    red_wear_equip() {\r\n        let stateToChange = {}\r\n        const teams = HeroTeamControl.ins.getTeam()\r\n        const isOpen = OpenFunctionMgr.ins.checkFunctionIsOpen(tab.OpenFunctionName.OpenFunctionName_Equipment)\r\n        for (let i = 0; i < teams.length; i++) {\r\n            const heroClass = teams[i].heroClass;\r\n            stateToChange[String(heroClass)] = this.getNewEquip(heroClass) && isOpen;\r\n        }\r\n        return stateToChange\r\n    }\r\n    red_equip_strengthen(){\r\n        let stateToChange = {}\r\n        const teams = HeroTeamControl.ins.getTeam()\r\n        const isOpen = OpenFunctionMgr.ins.checkFunctionIsOpen(tab.OpenFunctionName.OpenFunctionName_Equipment)\r\n        for (let i = 0; i < teams.length; i++) {\r\n            const heroClass = teams[i].heroClass;\r\n            stateToChange[String(heroClass)] = this.materialEnoughtFourEquip(heroClass) && isOpen;\r\n        }\r\n        return stateToChange\r\n    }\r\n    // 装备可以一键升级\r\n    materialEnoughtFourEquip(heroClass: tab.HeroClass) {\r\n        let equipList = EquipData.ins.getWearEquipInfosByHeroClass(heroClass);\r\n        let currEquips = [];\r\n        for (let i: number = 0; i < equipList.length; i++) {\r\n            if (i < tab.EquipType.EquipType_Feather) {\r\n                currEquips.push(equipList[i]);\r\n            }\r\n        }\r\n        if(currEquips.length<4){\r\n            return false;\r\n        }\r\n        let minLevel = -1;\r\n        for (let key in currEquips) {\r\n            if (currEquips[key] && !currEquips[key].isEnhanceLimit()) {\r\n                if (minLevel < 0) {\r\n                    minLevel = currEquips[key].enhanceLv;\r\n                } else if (currEquips[key].enhanceLv < minLevel) {\r\n                    minLevel = currEquips[key].enhanceLv;\r\n                }\r\n            }\r\n        }\r\n        if (minLevel >= 0) {\r\n            let types = [];\r\n            let totals = [];\r\n            for (let key in currEquips) {\r\n                let currEquip = currEquips[key];\r\n                if (currEquip && !currEquip.isEnhanceLimit() && currEquip.enhanceLv == minLevel) {\r\n                    let items = GameUtil.convertItemInfosByList(currEquip.enhanceUpgradeTable.Moneys);\r\n                    items = items.concat(GameUtil.convertItemInfosByList(currEquip.enhanceUpgradeTable.Materials));\r\n                    totals = GameUtil.itemsAddItems(totals, items);\r\n                    if (ItemData.ins.isItemsEnough(totals)) {\r\n                        types.push(currEquip.equipTable.Type);\r\n                    } else {\r\n                        continue;\r\n                    }\r\n                }\r\n            }\r\n            if (types.length===4) {\r\n                return true;\r\n            } else {\r\n                return false\r\n            }\r\n        }else{\r\n            return false\r\n        }\r\n    }\r\n    getNewEquip(heroClass: tab.HeroClass) {\r\n        let equipList = EquipData.ins.getEquipBagByHeroClass(heroClass);\r\n        let types = [tab.EquipType.EquipType_Gloves, tab.EquipType.EquipType_Clothing, tab.EquipType.EquipType_Cloak, tab.EquipType.EquipType_Hat]\r\n        let slots = EquipData.ins.getEquipContainerDataByHeroClass(heroClass).slotData;\r\n        let ids = [];\r\n        for (let key in types) {\r\n            let type = types[key];\r\n            let slot = slots[type];\r\n            if (slot && slot.equipId != 0) {\r\n                let equipInfo = EquipData.ins.getEquipInfoById(slot.equipId);\r\n                let currInfo = null;\r\n                for (let value of equipList) {\r\n                    if (value.equipTable.Type == type) {\r\n                        if (value.score > equipInfo.score) {\r\n                            if (currInfo) {\r\n                                if (value.score > currInfo.score) {\r\n                                    currInfo = value;\r\n                                }\r\n                            } else {\r\n                                currInfo = value;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                if (currInfo) {\r\n                    ids.push(currInfo.id);\r\n                }\r\n            } else {\r\n                let currInfo = null;\r\n                for (let value of equipList) {\r\n                    if (value.equipTable.Type == type) {\r\n                        if (currInfo) {\r\n                            if (value.score > currInfo.score) {\r\n                                currInfo = value;\r\n                            }\r\n                        } else {\r\n                            currInfo = value;\r\n                        }\r\n                    }\r\n\r\n                }\r\n                if (currInfo) {\r\n                    ids.push(currInfo.id);\r\n                }\r\n            }\r\n        }\r\n        return ids.length > 0\r\n    }\r\n    red_feng_yun_rank() {\r\n        let stateToChange = {}\r\n        const map = FengyunRankData.ins.getMapData();\r\n        if (map) {\r\n            Object.keys(map).forEach((key, value) => {\r\n                const honorRollData = map[key];\r\n                const endTime = honorRollData.activityEndTime;\r\n                const lastTimer = Number(endTime) - RoleData.ins.getServerUtcTime()\r\n                stateToChange[key] = {};\r\n                for (let i = 0; i < honorRollData.tasks.length; i++) {\r\n                    const taskData = honorRollData.tasks[i]\r\n                    const taskTab = tab.getData().TaskTableById.getValue(taskData.taskTabId);\r\n                    stateToChange[key][taskData.id] = !taskData.isReceived && taskData.progress >= taskTab.FinishParam1 && lastTimer > 0;\r\n                }\r\n            })\r\n        }\r\n        return stateToChange\r\n    }\r\n    red_head_icon() {\r\n        let stateToChange = {}\r\n        for (let i = 0; i <= 1; i++) {\r\n            if (i === 0) {\r\n                if (RoleData.ins.clientData[\"newHeadIcon\"]) {\r\n                    stateToChange[0] = {};\r\n                    const newHeadIconArr = RoleData.ins.clientData[\"newHeadIcon\"].split(\",\");\r\n                    for (let k = 0; k < newHeadIconArr.length; k++) {\r\n                        stateToChange[0][newHeadIconArr[k]] = true\r\n                    }\r\n                } else {\r\n                    stateToChange[0] = false;\r\n                }\r\n            }\r\n\r\n            if (i === 1) {\r\n                if (RoleData.ins.clientData[\"newHeadFrame\"]) {\r\n                    stateToChange[1] = {};\r\n                    const newHeadFrameArr = RoleData.ins.clientData[\"newHeadFrame\"].split(\",\");\r\n                    for (let k = 0; k < newHeadFrameArr.length; k++) {\r\n                        stateToChange[1][newHeadFrameArr[k]] = true\r\n                    }\r\n                } else {\r\n                    stateToChange[1] = false;\r\n                }\r\n            }\r\n        }\r\n        return stateToChange\r\n    }\r\n    red_combine_grow() {\r\n        let stateToChange = {};\r\n        const groups = ActivityData.ins.getAllActivityGroup();\r\n        for (let i = 0; i < groups.length; i++) {\r\n            const info = groups[i];\r\n            for (let k = 0; k < info.activityTable.ActivityIds.length; k++) {\r\n                const id = info.activityTable.ActivityIds[k];\r\n                const activityInfo = tab.getData().ActivityTableByActivityId.getValue(id);\r\n                const heroGrowData = ActivityData.ins.getHeroGrowData(id);\r\n                if (heroGrowData && activityInfo.Type === tab.OpenFunctionName.OpenFunctionName_ActivityHeroGrow) {\r\n                    const heroId = activityInfo.Param1;\r\n                    const maxStar = HeroDataControl.ins.getMaxPaintingStar(heroId);\r\n                    const receiveLen = heroGrowData.receivedFreeRewardStars.length;\r\n                    stateToChange[info.TabId] = receiveLen <= (maxStar - 5)\r\n                }\r\n            }\r\n        }\r\n        return stateToChange\r\n    }\r\n    red_combine_pass() {\r\n        let stateToChange = {};\r\n        const groups = ActivityData.ins.getAllActivityGroup();\r\n        for (let i = 0; i < groups.length; i++) {\r\n            const info = groups[i];\r\n            for (let k = 0; k < info.activityTable.ActivityIds.length; k++) {\r\n                const id = info.activityTable.ActivityIds[k];\r\n                const activityInfo = tab.getData().ActivityTableByActivityId.getValue(id);\r\n                if (activityInfo.Type === tab.OpenFunctionName.OpenFunctionName_BattlePassSignIn1) {\r\n                    const passId = activityInfo.Param1;\r\n                    stateToChange[info.TabId] = BattlePassDataMgr.ins.getAllReceiveTaskId(passId).length > 0;\r\n                }\r\n            }\r\n        }\r\n        return stateToChange\r\n    }\r\n    red_combine_shop() {\r\n        let stateToChange = {};\r\n        const groups = ActivityData.ins.getAllActivityGroup();\r\n        for (let i = 0; i < groups.length; i++) {\r\n            const info = groups[i];\r\n            for (let k = 0; k < info.activityTable.ActivityIds.length; k++) {\r\n                const id = info.activityTable.ActivityIds[k];\r\n                const activityInfo = tab.getData().ActivityTableByActivityId.getValue(id);\r\n                if (activityInfo.Type === tab.OpenFunctionName.OpenFunctionName_ActivityMall) {\r\n                    const mallId = activityInfo.Param1;\r\n                    let listData = ActivityData.ins.getMallItemTabsById(mallId);\r\n                    if (listData.length > 0) {\r\n                        const adType = listData[0].AdType;\r\n                        const maxAdTimes = AdMgr.ins.getAdCountMaxByType(adType);\r\n                        const curAdTimes = AdMgr.ins.getAdCountByType(adType);\r\n                        stateToChange[info.TabId] = curAdTimes < maxAdTimes\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return stateToChange\r\n    }\r\n    red_combine_charge(){\r\n        let stateToChange = {};\r\n        const groups = ActivityData.ins.getAllActivityGroup();\r\n        for (let i = 0; i < groups.length; i++) {\r\n            const info = groups[i];\r\n            for (let k = 0; k < info.activityTable.ActivityIds.length; k++) {\r\n                const id = info.activityTable.ActivityIds[k];\r\n                const activityInfo = tab.getData().ActivityTableByActivityId.getValue(id);\r\n                if (activityInfo.Type === tab.OpenFunctionName.OpenFunctionName_ActivityCumulativeRecharge) {\r\n                    const acitivityId = activityInfo.Param1;\r\n                    const Tabs = ActivityData.ins.getAllTabsByRechageId(acitivityId);\r\n                    const serverData = ActivityData.ins.getRechargeServerData(acitivityId);\r\n                    if(serverData){\r\n                        const type = this.getPayType();\r\n                        for (let i = 0; i < Tabs.length; i++) {\r\n                            const tabData = Tabs[i]\r\n                            if(serverData.payAmount >= tabData[type]){\r\n                                if (serverData.receivedRewardIds.indexOf(tabData.IndexId) === -1) {\r\n                                    stateToChange[info.TabId] = true\r\n                                } \r\n                            }\r\n                        }\r\n                    }else{\r\n                        stateToChange[info.TabId] = false\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return stateToChange\r\n    }\r\n    checkWearEquip(data:HeroInfo){\r\n        const isInTeam = HeroTeamControl.ins.heroInTeam(data.id);\r\n        return RedMgr.ins.isRed(RedDotType.Wear_Equip, String(data.heroTable.Class))&&Boolean(isInTeam)\r\n    }\r\n    checkWearJade(data:HeroInfo){\r\n        const isInTeam = HeroTeamControl.ins.heroInTeam(data.id);\r\n        return RedMgr.ins.isRed(RedDotType.Wear_Jade, String(data.heroTable.Class))&&Boolean(isInTeam)\r\n    }\r\n    getPayType(): string {\r\n        // 判断当前的货币类型\r\n        const payType = ChannelMgr.channelTab.Currency;\r\n        if (payType === \"Price\") {\r\n            // 人民币\r\n            return \"Total\";\r\n        } else if (payType === \"PriceDollar\") {\r\n            // 美元\r\n            return \"TotalDollar\";\r\n        } else if (payType === \"PriceJPY\") {\r\n            // 日元\r\n            return \"TotalJPY\";\r\n        }\r\n    }\r\n}\r\n\r\n\r\n"]}