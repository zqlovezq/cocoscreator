{"version":3,"sources":["file:///C:/chickenStarClient/client/assets/scripts/logic/model/equip/EquipData.ts"],"names":["EquipData","_decorator","error","log","EquipInfo","RoleData","proto","tab","EquipContainerInfo","UIMgr","ViewName","EventMgr","LocalEvent","ccclass","property","equipMap","equip","heroMasterTableMap","containerInfoMap","equipUpgradeMap","ins","_instance","purge","clear","initEquipData","Map","list","equipList","key","info","merge","setEquipInfoById","id","containerList","conInfo","slotDatas","slotData","value","getEquipInfoById","equipId","isWear","slotInfo","equipTable","Type","EquipType","EquipType_Feather","heroClass","set","classs","HeroClass","HeroClass_Assassin","HeroClass_Archer","HeroClass_Priest","HeroClass_Caster","HeroClass_Warrior","get","creatorNull","initHeroMasterTableMap","tabs","getData","HeroMasterTable","Level","initEquipUpgradeMap","EquipUpgradeTable","Number","getEquips","Array","from","values","remove","delete","toString","removeEquipByIds","ids","getEquipContainerDataByHeroClass","getWearEquipInfosByHeroClass","data","infos","push","adds","equips","changeEquip","slotId","equData","slot","EquipSlotData","enhanceLv","refineLv","initTotalAttrMap","lastInfo","updateEquipSlotData","equipType","refreshRefineEquipUpgradeTable","refreshEquipUpgradeTable","updateTotalAttr","emitLocal","Equip_Chang","updateEquipMasterData","masterData","qualityLv","masteInfo","qualityMasterLevel","enhanceMasterLevel","refineMasterLevel","show","viewName","EquipFettersPop","getEquipBagByHeroClass","forEach","Class","getEquipSlotByHeroClassAndType","type","getMasterInfoByHeroClass","getHeroMasterTableByTypeAndLevel","level","getJadeEquipInfos","itemTable","BagType","BagType_Jade","getEquipUpgradeTab","updateEquipInfo","updateData","switchEquip","id1","id2","heroClass1","heroClass2","equip1","cont","equip2","cont2","undressEquip","euqipId","lockEquip","state","locked","getEquipBagFull","num","total","GetKeyValue_ConfigTable","EquipMaxNum","currNum","BagType_Equip"],"mappings":"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","sourcesContent":["import { Node, Prefab, _decorator, error, log } from \"cc\";\nimport { IClear } from \"../../../framework/base/IAbs\";\nimport { EquipInfo } from \"./EquipInfo\";\nimport { RoleData } from \"../role/RoleData\";\nimport { proto } from \"client_protocol\";\nimport { tab } from \"../../../Table/table_gen\";\nimport { Long, Type } from \"protobufjs\";\nimport { EquipMasterInfo } from \"./EquipMasterInfo\";\nimport { EquipContainerInfo } from \"./EquipContainerInfo\";\nimport { UIMgr } from \"../../mgr/UIMgr\";\nimport { ViewName } from \"../../define/ViewDefine\";\nimport { EventMgr } from \"../../mgr/EventMgr\";\nimport { LocalEvent } from \"../../define/LocalEvent\";\n\n\nconst { ccclass, property } = _decorator;\n\n/** 装备数据 */\nexport class EquipData implements IClear {\n    private static _instance: EquipData;\n    public static get ins() {\n        if (null == this._instance) {\n            this._instance = new EquipData();\n        }\n        return this._instance;\n    }\n\n    private equipMap: Map<number, EquipInfo>;\n    private equip: proto.IEquipPbData;\n    // private masterInfoMap: Map<number, EquipMasterInfo>;\n    private heroMasterTableMap:Map<string,tab.HeroMasterTable>;\n    private containerInfoMap:Map<number,EquipContainerInfo>;\n    private equipUpgradeMap:Map<string,tab.EquipUpgradeTable>;\n   \n    purge(): void {\n        this.equipMap.clear();\n    }\n    initEquipData() {\n        this.equipMap = new Map();\n        this.equip = RoleData.ins.equip;\n        let list = this.equip.equipList;\n        for (let key in list) {\n            let info = new EquipInfo();\n            info.merge(list[key])\n            this.setEquipInfoById(info.id, info);\n        }\n        let containerList = this.equip.containerList;\n        this.containerInfoMap = new Map();\n        for (let key in containerList) {\n            let conInfo=new EquipContainerInfo();\n            conInfo.merge(containerList[key]);\n            let slotDatas = conInfo.slotData;\n            for (let value of slotDatas) {\n                let info = this.getEquipInfoById(value.equipId);\n                if (info) {\n                    info.isWear = true;\n                    info.slotInfo = value;\n                if(info.equipTable.Type==tab.EquipType.EquipType_Feather)\n                    info.heroClass=containerList[key].heroClass;\n                }\n            }\n            this.containerInfoMap.set(conInfo.heroClass,conInfo);\n            // let masterData = conInfo.masterData;\n            // if (masterData) {\n            //     masterData = new proto.HeroMasterData();\n            //     masterData.enhanceLv = 0;\n            //     masterData.qualityLv = 0;\n            //     masterData.refineLv = 0;\n            //     conInfo.masterData=masterData;\n            // }\n            // let master = new EquipMasterInfo();\n            // master.merge(containerList[key].masterData);\n            // this.masterInfoMap.set(containerList[key].heroClass, master);\n        }\n        //----------后端有些数据不写默认数据，前端补全默认数据-------------\n        let classs=[tab.HeroClass.HeroClass_Assassin,tab.HeroClass.HeroClass_Archer,tab.HeroClass.HeroClass_Priest,tab.HeroClass.HeroClass_Caster,tab.HeroClass.HeroClass_Warrior]\n        for(let key in classs){\n            if(!this.containerInfoMap.get(classs[key])){\n                let info=new EquipContainerInfo();\n                info.creatorNull(classs[key]);\n                this.containerInfoMap.set(classs[key],info);\n            }\n        }\n    }\n    private initHeroMasterTableMap(){\n        this.heroMasterTableMap=new Map();\n        let tabs=tab.getData().HeroMasterTable;\n        for(let key in tabs){\n            this.heroMasterTableMap.set(tabs[key].Type+\"_\"+tabs[key].Level,tabs[key]);\n        }\n    }\n\n    private initEquipUpgradeMap(){\n        this.equipUpgradeMap=new Map();\n        let list=tab.getData().EquipUpgradeTable;\n        for(let key in list){\n            this.equipUpgradeMap.set(list[key].Type+\"_\"+list[key].Level,list[key]);\n        }\n    }\n    getEquipInfoById(id: number|Long) {\n        return this.equipMap.get(Number(id));\n    }\n    setEquipInfoById(id: number|Long, info: EquipInfo) {\n        this.equipMap.set(Number(id), info);\n    }\n\n    getEquips() {\n        return Array.from(this.equipMap.values());\n    }\n\n    remove(id: number|Long) {\n        const equipId = Number(id);\n        this.equipMap.delete(equipId);\n        log(\"删除装备===\", id.toString())\n        // Func.removeBy(this.equips, \"id\", id)\n    }\n    removeEquipByIds(ids: Array<number>) {\n        for (let key in ids) {\n            this.equipMap.delete(Number(ids[key]));\n        }\n    }\n    getEquipContainerDataByHeroClass(heroClass: number) {\n        return this.containerInfoMap.get(heroClass);\n    }\n\n    getWearEquipInfosByHeroClass(heroClass: number) {\n        let data = this.getEquipContainerDataByHeroClass(heroClass);\n        if (!data) {\n            return [null, null, null, null, null, null];\n        }\n        let infos:Array<EquipInfo> = [];\n        for (let value of data.slotData) {  \n            if (value && value.equipId) {\n                infos.push(this.getEquipInfoById(value.equipId))\n            } else {\n                infos.push(null);\n            }\n        }\n        return infos;\n\n    }\n    adds(equips: proto.EquipData[]) {\n        for (let key in equips) {\n            let info = this.getEquipInfoById(equips[key].id);\n            if (!info) {\n                info = new EquipInfo();\n                this.setEquipInfoById(equips[key].id, info);\n            }\n            info.merge(equips[key]);\n        }\n    }\n    /**装备替换 */\n    changeEquip(ids: Array<number|Long>,heroClass:number=-1) {\n        for (let key in ids) {\n            let info = this.getEquipInfoById(ids[key]);\n            let slotId = info.equipTable.Type;\n            if(heroClass<=0){\n                heroClass=info.heroClass;\n            }\n            if(slotId==tab.EquipType.EquipType_Feather){\n                let equData;\n                if(info.heroClass>0){\n                     equData = this.getEquipContainerDataByHeroClass(info.heroClass);\n                    if(equData){\n                        if(equData.slotData[slotId]){\n                            equData.slotData[slotId].equipId=0;\n                        }\n                    }\n                }\n                equData = this.getEquipContainerDataByHeroClass(heroClass);\n                if(equData){\n                    let slotDatas = equData.slotData;\n                    if(slotDatas[slotId]){\n                        slotDatas[slotId].equipId=info.id;\n                    }else{\n                        let slot = new proto.EquipSlotData();\n                        slot.equipId = Number(ids[key]);\n                        slot.enhanceLv = 0;\n                        slot.refineLv = 0;\n                        slotDatas[slotId] = slot;\n                        info.slotInfo = slotDatas[slotId]\n                    }\n                    info.isWear = true;\n                    info.heroClass=equData.heroClass;\n                    equData.initTotalAttrMap();\n                }\n            }else{\n                let equData = this.getEquipContainerDataByHeroClass(heroClass);\n                if (equData) {\n                    let slotDatas = equData.slotData;\n                    if (slotDatas[slotId]) {\n                        let lastInfo = this.getEquipInfoById(slotDatas[slotId].equipId);\n                        if (lastInfo != info) {\n                            if (lastInfo) {\n                                lastInfo.isWear = false;\n                                lastInfo.slotInfo = null;\n                            }\n                            info.isWear = true;\n                            info.slotInfo = slotDatas[slotId]\n                        }\n                        slotDatas[slotId].equipId = Number(ids[key]);\n                    } else {\n                        info.isWear = true;\n                        let slot = new proto.EquipSlotData();\n                        slot.equipId = Number(ids[key]);\n                        slot.enhanceLv = 0;\n                        slot.refineLv = 0;\n                        slotDatas[slotId] = slot;\n                        info.slotInfo = slotDatas[slotId]\n    \n                    }\n                    equData.initTotalAttrMap();\n                } \n            }\n\n        }\n        log(\"处理穿戴数据\")\n    }\n   \n    /**\n     * 更新装备槽数据\n     */\n    updateEquipSlotData(heroClass: tab.HeroClass, slotDatas: proto.IUpdateEquipSlotData[]) {\n        if (!heroClass) {\n            let info = this.getEquipInfoById(slotDatas[0].slotData.equipId);\n            heroClass = info.heroClass;\n        }\n        if (!heroClass) {\n            error(\"更新装备Slot数据\")\n            return;\n        }\n       \n        let equData = this.getEquipContainerDataByHeroClass(heroClass);\n        if (equData) {\n            for (let value of slotDatas) {\n                equData.slotData[value.equipType] = value.slotData;\n                let info = this.getEquipInfoById(value.slotData.equipId);\n                if (info) {\n                    info.slotInfo = value.slotData;\n                    info.refreshRefineEquipUpgradeTable();\n                    info.refreshEquipUpgradeTable();\n                    info.updateTotalAttr();\n                }\n            }\n            equData.initTotalAttrMap();\n            EventMgr.emitLocal(LocalEvent.Equip_Chang,heroClass);\n        } else {\n            error(\"更新装备Slot数据 equData 错误\")\n        }\n\n    }\n    /**\n     * 更新装备大师数据\n     * @param heroClass \n     * @param masterData \n     */\n    updateEquipMasterData(heroClass: tab.HeroClass, masterData: proto.IHeroMasterData) {\n        let equData = this.getEquipContainerDataByHeroClass(heroClass);\n        let qualityLv=equData.masteInfo.qualityMasterLevel;\n        let enhanceLv=equData.masteInfo.enhanceMasterLevel;\n        let refineLv=equData.masteInfo.refineMasterLevel;\n        equData.masteInfo.merge(masterData as proto.HeroMasterData);\n        if(qualityLv<equData.masteInfo.qualityMasterLevel){\n            UIMgr.ins.show({viewName:ViewName.EquipFettersPop,data:{\"type\":1,\"level\":equData.masteInfo.qualityMasterLevel}})\n        }else if(enhanceLv<equData.masteInfo.enhanceMasterLevel){\n            UIMgr.ins.show({viewName:ViewName.EquipFettersPop,data:{\"type\":2,\"level\":equData.masteInfo.enhanceMasterLevel}})\n        }else if(refineLv<equData.masteInfo.refineMasterLevel){\n            UIMgr.ins.show({viewName:ViewName.EquipFettersPop,data:{\"type\":3,\"level\":equData.masteInfo.refineMasterLevel}})\n        }\n    }\n    /**\n     * 根据英雄职业获取可穿戴的背包装备列表\n     */\n\n    getEquipBagByHeroClass(heroClass: number) {\n        let list:Array<EquipInfo>= [];\n        this.equipMap.forEach((value) => {\n            if (!value.isWear && heroClass == value.equipTable.Class) {\n                list.push(value);\n            }\n        })\n        return list;\n    }\n    /**\n     * 获取装备槽信息\n     * @param heroClass \n     * @param type \n     * @returns \n     */\n    getEquipSlotByHeroClassAndType(heroClass: number, type: number) {\n        let equData = this.getEquipContainerDataByHeroClass(heroClass);\n        if (equData) {\n            return equData.slotData[type];\n        }\n        return null;\n    }\n    getMasterInfoByHeroClass(heroClass: number) {\n        let info = this.containerInfoMap.get(heroClass);\n        return info.masteInfo; \n    }\n\n    getHeroMasterTableByTypeAndLevel(type:tab.MasterType,level:number){\n        if(!this.heroMasterTableMap){\n            this.initHeroMasterTableMap();\n        }\n        return this.heroMasterTableMap.get(type+\"_\"+level);\n\n    }\n    getJadeEquipInfos(){\n        let list:EquipInfo[]=[];\n        this.equipMap.forEach((value,key)=>{\n            if(value.itemTable.BagType==tab.BagType.BagType_Jade){\n                list.push(value);\n            }\n        })\n        return list;\n\n    }\n    getEquipUpgradeTab(type:tab.EquipUpgradeType,level:number){\n        if(!this.equipUpgradeMap){\n            this.initEquipUpgradeMap();\n        }\n        return this.equipUpgradeMap.get(type+\"_\"+level);\n    }\n\n    updateEquipInfo(data:proto.EquipData){\n        let info=this.getEquipInfoById(data.id);\n        if(info){\n            info.updateData(data);\n        }else{\n          \n            this.adds([data])\n        }\n\n    }\n    switchEquip(id1:number|Long,id2:number|Long,heroClass1:number,heroClass2:number){\n        let equip1=this.getEquipInfoById(id1);\n        if(equip1){\n            equip1.heroClass=heroClass1;\n            let cont=this.getEquipContainerDataByHeroClass(heroClass1);\n            if(!cont.slotData[equip1.equipTable.Type]){\n                const data = new proto.EquipSlotData();\n                data.equipId = 0;\n                data.enhanceLv = 0;\n                data.refineLv = 0;\n                cont.slotData[equip1.equipTable.Type] = data;\n            }\n            cont.slotData[equip1.equipTable.Type].equipId=Number(id1);\n            cont.initTotalAttrMap();\n        }\n        let equip2=this.getEquipInfoById(id2);\n        if(equip2){\n            equip2.heroClass=heroClass2;\n            let cont2=this.getEquipContainerDataByHeroClass(heroClass2);\n            cont2.slotData[equip2.equipTable.Type].equipId=Number(id2);\n        }\n\n        if(!equip1&&equip2){\n            let cont2=this.getEquipContainerDataByHeroClass(heroClass1);\n            cont2.slotData[equip2.equipTable.Type].equipId=0;\n        }\n\n        \n        if(!equip2&&equip1){\n            let cont2=this.getEquipContainerDataByHeroClass(heroClass2);\n            cont2.slotData[equip1.equipTable.Type].equipId=0;\n        }\n      \n    }\n    undressEquip(euqipId:number|Long,heroClass:number){\n        let equip1=this.getEquipInfoById(euqipId);\n        equip1.heroClass=0;\n        equip1.slotInfo=null;\n        equip1.isWear=false;\n        let cont2=this.getEquipContainerDataByHeroClass(heroClass);\n        cont2.slotData[equip1.equipTable.Type].equipId=0;\n        cont2.initTotalAttrMap();\n    }\n    lockEquip(euqipId:number|Long,state:boolean){\n        let equip1=this.getEquipInfoById(euqipId);\n        equip1.locked=state;\n    }\n    // getContainerInfoByHoreClass(hero){\n\n    // }\n    getEquipBagFull(num:number){\n        let total= tab.getData().GetKeyValue_ConfigTable().EquipMaxNum;\n        let currNum=0;\n        let equips=this.getEquips();\n        for(let key in equips){\n            if(!equips[key].isWear&&equips[key].itemTable.BagType == tab.BagType.BagType_Equip){\n                currNum++;\n            }\n        }\n        if(currNum+num>total){\n            return true;\n        }else{\n            return false;\n        }\n    }\n\n}"]}