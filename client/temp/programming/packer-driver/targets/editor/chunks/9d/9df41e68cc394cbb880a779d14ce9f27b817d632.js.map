{"version":3,"sources":["file:///C:/chickenStarClient/client/assets/scripts/logic/model/mutation/DrugView.ts"],"names":["_decorator","instantiate","Label","Node","Prefab","sp","Sprite","ViewPop","tab","DrugScrollItem","RoleData","HeroTeamControl","proto","Net","ItemData","EventMgr","ShowTips","LangMgr","ccclass","property","DrugView","Skeleton","elixirArrData","onShow","playLevel","ins","level","node_content","destroyAllChildren","i","getData","ElixirTable","length","elixirTab","item","pfb_item","parent","itemTs","getComponent","setData","usedItemCount","getElixirCountById","Id","elixirId","elixirCount","getCount","maxCount","k","PlayerLv","MaxCount","useCount","obj","id","count","push","attrDatas","getElixirAttr","node_nothing","active","size","node_attr","children","attrItem","key","value","entries","console","log","attrType","iconPath","HeroAttrClientTableByType","getValue","Icon","icon_img","getChildByName","setTexture","num_txt","string","String","spineAction","getRandomValue","spine_hero","setAnimation","setCompleteListener","listener","register","onMsg","Ptl","UseElixirRsp","on_s2c_UseElixirRsp","msg","error","code","CommonErrorCode","Succeed","elixir","data","concat","initElixirData","unRegister","onDestroy","clickAutoUse","Msg_UseElixirReq","items","Send","UseElixirReq","getLab","randomNumber","Math","random"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAuBC,MAAAA,W,OAAAA,W;AAAaC,MAAAA,K,OAAAA,K;AAAOC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,M,OAAAA,M;AAAQC,MAAAA,E,OAAAA,E;AAAIC,MAAAA,M,OAAAA,M;;AAC7DC,MAAAA,O,iBAAAA,O;;AACAC,MAAAA,G,iBAAAA,G;;AACAC,MAAAA,c,iBAAAA,c;;AACAC,MAAAA,Q,iBAAAA,Q;;AACAC,MAAAA,e,iBAAAA,e;;AACAC,MAAAA,K,oBAAAA,K;;AACAC,MAAAA,G,iBAAAA,G;;AACAC,MAAAA,Q,iBAAAA,Q;;AACAC,MAAAA,Q,iBAAAA,Q;;AAGAC,MAAAA,Q,kBAAAA,Q;;AACAC,MAAAA,O,kBAAAA,O;;;;;;;;;OACH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBnB,U;;0BAGjBoB,Q,WADZF,OAAO,CAAC,UAAD,C,UAEHC,QAAQ,CAACd,EAAE,CAACgB,QAAJ,C,UAERF,QAAQ,CAAChB,IAAD,C,UAERgB,QAAQ,CAACf,MAAD,C,UAERe,QAAQ,CAAChB,IAAD,C,UAERgB,QAAQ,CAAChB,IAAD,C,2BAVb,MACaiB,QADb;AAAA;AAAA,8BACsC;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA,eAW1BE,aAX0B,GAWV,EAXU;AAAA;;AAYlCC,QAAAA,MAAM,GAAS;AACX;AACA,gBAAMC,SAAS,GAAG;AAAA;AAAA,oCAASC,GAAT,CAAaC,KAA/B;AACA,eAAKC,YAAL,CAAkBC,kBAAlB;;AACA,eAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG;AAAA;AAAA,0BAAIC,OAAJ,GAAcC,WAAd,CAA0BC,MAA9C,EAAsDH,CAAC,EAAvD,EAA2D;AACvD,kBAAMI,SAAS,GAAG;AAAA;AAAA,4BAAIH,OAAJ,GAAcC,WAAd,CAA0BF,CAA1B,CAAlB;AACA,kBAAMK,IAAI,GAAGjC,WAAW,CAAC,KAAKkC,QAAN,CAAxB;AACAD,YAAAA,IAAI,CAACE,MAAL,GAAc,KAAKT,YAAnB;AACA,kBAAMU,MAAM,GAAGH,IAAI,CAACI,YAAL;AAAA;AAAA,iDAAf;AACAD,YAAAA,MAAM,CAACE,OAAP,CAAeN,SAAf;AAEA,kBAAMO,aAAa,GAAG;AAAA;AAAA,oDAAgBf,GAAhB,CAAoBgB,kBAApB,CAAuCR,SAAS,CAACS,EAAjD,CAAtB;AACA,kBAAMC,QAAQ,GAAGV,SAAS,CAACS,EAA3B;AACA,kBAAME,WAAW,GAAG;AAAA;AAAA,sCAASnB,GAAT,CAAaoB,QAAb,CAAsBF,QAAtB,CAApB;AACA,gBAAIG,QAAQ,GAAG,CAAf;;AACA,iBAAI,IAAIC,CAAC,GAACd,SAAS,CAACe,QAAV,CAAmBhB,MAAnB,GAA0B,CAApC,EAAsCe,CAAC,IAAE,CAAzC,EAA2CA,CAAC,EAA5C,EAA+C;AAC3C,oBAAMrB,KAAK,GAAGO,SAAS,CAACe,QAAV,CAAmBD,CAAnB,CAAd;;AACA,kBAAGvB,SAAS,GAACE,KAAb,EAAmB;AACfoB,gBAAAA,QAAQ,GAAGb,SAAS,CAACgB,QAAV,CAAmBF,CAAC,GAAC,CAArB,IAAyBd,SAAS,CAACgB,QAAV,CAAmBF,CAAC,GAAC,CAArB,CAAzB,GAAiDd,SAAS,CAACgB,QAAV,CAAmBF,CAAnB,CAA5D;AACA;AACH;AACJ;;AACD,gBAAIG,QAAQ,GAAG,CAAf;;AACA,gBAAGV,aAAa,GAACI,WAAd,GAA0BE,QAA7B,EAAsC;AAClCI,cAAAA,QAAQ,GAAGJ,QAAQ,GAACN,aAAT,GAAuB,CAAvB,GAAyBM,QAAQ,GAACN,aAAlC,GAAgD,CAA3D;AACH,aAFD,MAEK;AACDU,cAAAA,QAAQ,GAAGN,WAAX;AACH;;AAED,gBAAGA,WAAW,GAAC,CAAf,EAAiB;AACb,kBAAIO,GAAqB,GAAG;AACxBC,gBAAAA,EAAE,EAACT,QADqB;AAExBU,gBAAAA,KAAK,EAACH;AAFkB,eAA5B;;AAIA,kBAAGA,QAAQ,GAAC,CAAZ,EAAc;AACV,qBAAK5B,aAAL,CAAmBgC,IAAnB,CAAwBH,GAAxB;AACH;AACJ;AACJ;;AAED,gBAAMI,SAAS,GAAG;AAAA;AAAA,kDAAgB9B,GAAhB,CAAoB+B,aAApB,EAAlB;AACA,eAAKC,YAAL,CAAkBC,MAAlB,GAA2BH,SAAS,CAACI,IAAV,KAAmB,CAA9C;AACA,eAAKC,SAAL,CAAeF,MAAf,GAAwBH,SAAS,CAACI,IAAV,KAAmB,CAA3C;;AACA,cAAIJ,SAAS,CAACI,IAAV,KAAmB,CAAvB,EAA0B;AACtB,iBAAKC,SAAL,CAAeF,MAAf,GAAwB,IAAxB;AACA,kBAAMG,QAAQ,GAAG,KAAKD,SAAL,CAAeC,QAAhC;;AACA,iBAAK,IAAId,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGc,QAAQ,CAAC7B,MAA7B,EAAqCe,CAAC,EAAtC,EAA0C;AACtC,oBAAMe,QAAQ,GAAGD,QAAQ,CAACd,CAAD,CAAzB;AACAe,cAAAA,QAAQ,CAACJ,MAAT,GAAkB,KAAlB;AACH;;AACD,gBAAIL,KAAK,GAAG,CAAZ;;AACA,iBAAK,MAAM,CAACU,GAAD,EAAMC,KAAN,CAAX,IAA2BT,SAAS,CAACU,OAAV,EAA3B,EAAgD;AAC5CC,cAAAA,OAAO,CAACC,GAAR,CAAa,YAAWJ,GAAI,KAAIC,KAAM,EAAtC;AACA,oBAAMF,QAAQ,GAAGD,QAAQ,CAACR,KAAD,CAAzB;AACAS,cAAAA,QAAQ,CAACJ,MAAT,GAAkB,IAAlB;AACA,oBAAMU,QAAQ,GAAGL,GAAjB;AACA,oBAAMM,QAAQ,GAAG;AAAA;AAAA,8BAAIvC,OAAJ,GAAcwC,yBAAd,CAAwCC,QAAxC,CAAiDH,QAAjD,EAA2DI,IAA5E;AACA,oBAAMC,QAAQ,GAAGX,QAAQ,CAACY,cAAT,CAAwB,UAAxB,EAAoCpC,YAApC,CAAiDhC,MAAjD,CAAjB;AACAmE,cAAAA,QAAQ,CAACE,UAAT,CAAoBN,QAApB;AACA,oBAAMO,OAAO,GAAGd,QAAQ,CAACY,cAAT,CAAwB,SAAxB,EAAmCpC,YAAnC,CAAgDpC,KAAhD,CAAhB;AACA0E,cAAAA,OAAO,CAACC,MAAR,GAAiBC,MAAM,CAACd,KAAD,CAAvB;AACAX,cAAAA,KAAK;AACR;AACJ;;AAED,cAAI0B,WAAW,GAAG,KAAKC,cAAL,EAAlB;AACA,eAAKC,UAAL,CAAgBC,YAAhB,CAA6B,CAA7B,EAAgCH,WAAhC,EAA6C,KAA7C;AACA,eAAKE,UAAL,CAAgBE,mBAAhB,CAAqCC,QAAD,IAAc;AAC9C,gBAAIL,WAAW,GAAG,KAAKC,cAAL,EAAlB;AACA,iBAAKC,UAAL,CAAgBC,YAAhB,CAA6B,CAA7B,EAAgCH,WAAhC,EAA6C,KAA7C;AACH,WAHD;AAKH;;AACDM,QAAAA,QAAQ,GAAS;AACb;AAAA;AAAA,oCAASC,KAAT,CAAe;AAAA;AAAA,8BAAMC,GAAN,CAAUC,YAAzB,EAAuC,KAAKC,mBAA5C,EAAiE,IAAjE;AACH;;AACDA,QAAAA,mBAAmB,CAACC,GAAD,EAA4B;AAC3C,cAAIA,GAAG,CAACC,KAAJ,IAAaD,GAAG,CAACC,KAAJ,CAAUC,IAAV,IAAkB;AAAA;AAAA,8BAAMC,eAAN,CAAsBC,OAAzD,EAAkE;AAClE;AAAA;AAAA,oCAASrE,GAAT,CAAasE,MAAb,CAAoBC,IAApB,GAA2B;AAAA;AAAA,oCAASvE,GAAT,CAAasE,MAAb,CAAoBC,IAApB,CAA0BC,MAA1B,CAAiCP,GAAG,CAACM,IAArC,CAA3B;AACA;AAAA;AAAA,kDAAgBvE,GAAhB,CAAoByE,cAApB;AACA,eAAK5E,aAAL,GAAqB,EAArB;AACA,eAAKC,MAAL;AACH;;AACD4E,QAAAA,UAAU,GAAS;AACf,gBAAMA,UAAN;AACH;;AACSC,QAAAA,SAAS,GAAS;AACxB,gBAAMA,SAAN;AACH;;AACDC,QAAAA,YAAY,GAAE;AACV,cAAG,KAAK/E,aAAL,CAAmBU,MAAnB,GAA0B,CAA7B,EAA+B;AAC3B,gBAAI0D,GAAG,GAAG,IAAI;AAAA;AAAA,gCAAMY,gBAAV,EAAV;AACAZ,YAAAA,GAAG,CAACa,KAAJ,GAAY,KAAKjF,aAAjB;AACA;AAAA;AAAA,4BAAIkF,IAAJ,CAAS;AAAA;AAAA,gCAAMjB,GAAN,CAAUkB,YAAnB,EAAkCf,GAAlC;AACH,WAJD,MAIK;AACD;AAAA;AAAA,sCAAS;AAAA;AAAA,oCAAQgB,MAAR,CAAe,aAAf,CAAT;AACH;AACJ;;AACD1B,QAAAA,cAAc,GAAW;AACrB,gBAAM2B,YAAY,GAAGC,IAAI,CAACC,MAAL,EAArB,CADqB,CACe;;AACpC,cAAIF,YAAY,GAAG,GAAnB,EAAwB;AACpB,mBAAO,gBAAP,CADoB,CACK;AAC5B,WAFD,MAEO;AACH,mBAAO,aAAP,CADG,CACmB;AACzB;AACJ;;AArHiC,O;;;;;iBAET,I;;;;;;;iBAEJ,I;;;;;;;iBAEF,I;;;;;;;iBAED,I;;;;;;;iBAEG,I","sourcesContent":["import { _decorator, Component, instantiate, Label, Node, Prefab, sp, Sprite } from 'cc';\r\nimport { ViewPop } from '../../../framework/base/ViewPop';\r\nimport { tab } from '../../../Table/table_gen';\r\nimport { DrugScrollItem } from './DrugScrollItem';\r\nimport { RoleData } from '../role/RoleData';\r\nimport { HeroTeamControl } from '../hero/HeroTeamControl';\r\nimport { proto } from 'client_protocol';\r\nimport { Net } from '../../net/Net';\r\nimport { ItemData } from '../item/ItemData';\r\nimport { EventMgr } from '../../mgr/EventMgr';\r\nimport { RedMgr } from '../../mgr/RedMgr';\r\nimport { RedDotType } from '../../red/RedDotType';\r\nimport { ShowTips } from '../../mgr/UIMgr';\r\nimport { LangMgr } from '../../mgr/LangMgr';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('DrugView')\r\nexport class DrugView extends ViewPop {\r\n    @property(sp.Skeleton)\r\n    spine_hero:sp.Skeleton = null;\r\n    @property(Node)\r\n    node_content: Node = null;\r\n    @property(Prefab)\r\n    pfb_item: Prefab = null;\r\n    @property(Node)\r\n    node_attr: Node = null;\r\n    @property(Node)\r\n    node_nothing: Node = null;\r\n    private elixirArrData = [];\r\n    onShow(): void {\r\n        // 设置丹药列表\r\n        const playLevel = RoleData.ins.level;\r\n        this.node_content.destroyAllChildren();\r\n        for (let i = 0; i < tab.getData().ElixirTable.length; i++) {\r\n            const elixirTab = tab.getData().ElixirTable[i];\r\n            const item = instantiate(this.pfb_item);\r\n            item.parent = this.node_content;\r\n            const itemTs = item.getComponent(DrugScrollItem);\r\n            itemTs.setData(elixirTab);\r\n\r\n            const usedItemCount = HeroTeamControl.ins.getElixirCountById(elixirTab.Id)\r\n            const elixirId = elixirTab.Id;\r\n            const elixirCount = ItemData.ins.getCount(elixirId);\r\n            let maxCount = 0;\r\n            for(let k=elixirTab.PlayerLv.length-1;k>=0;k--){\r\n                const level = elixirTab.PlayerLv[k];\r\n                if(playLevel>level){\r\n                    maxCount = elixirTab.MaxCount[k+1]? elixirTab.MaxCount[k+1]:elixirTab.MaxCount[k];\r\n                    break;\r\n                }\r\n            }\r\n            let useCount = 0;\r\n            if(usedItemCount+elixirCount>maxCount){\r\n                useCount = maxCount-usedItemCount>0?maxCount-usedItemCount:0;\r\n            }else{\r\n                useCount = elixirCount\r\n            }\r\n            \r\n            if(elixirCount>0){\r\n                let obj:proto.IElixirItem = {\r\n                    id:elixirId,\r\n                    count:useCount\r\n                }\r\n                if(useCount>0){\r\n                    this.elixirArrData.push(obj);\r\n                }\r\n            }\r\n        }\r\n\r\n        const attrDatas = HeroTeamControl.ins.getElixirAttr();\r\n        this.node_nothing.active = attrDatas.size === 0\r\n        this.node_attr.active = attrDatas.size !== 0\r\n        if (attrDatas.size !== 0) {\r\n            this.node_attr.active = true;\r\n            const children = this.node_attr.children;\r\n            for (let k = 0; k < children.length; k++) {\r\n                const attrItem = children[k];\r\n                attrItem.active = false;\r\n            }\r\n            let count = 0;\r\n            for (const [key, value] of attrDatas.entries()) {\r\n                console.log(`entries: ${key}: ${value}`);\r\n                const attrItem = children[count];\r\n                attrItem.active = true;\r\n                const attrType = key;\r\n                const iconPath = tab.getData().HeroAttrClientTableByType.getValue(attrType).Icon;\r\n                const icon_img = attrItem.getChildByName(\"icon_img\").getComponent(Sprite);\r\n                icon_img.setTexture(iconPath);\r\n                const num_txt = attrItem.getChildByName(\"num_txt\").getComponent(Label);\r\n                num_txt.string = String(value);\r\n                count++;\r\n            }\r\n        }\r\n\r\n        let spineAction = this.getRandomValue();\r\n        this.spine_hero.setAnimation(0, spineAction, false);\r\n        this.spine_hero.setCompleteListener((listener) => {\r\n            let spineAction = this.getRandomValue();\r\n            this.spine_hero.setAnimation(0, spineAction, false);\r\n        })\r\n\r\n    }\r\n    register(): void {\r\n        EventMgr.onMsg(proto.Ptl.UseElixirRsp, this.on_s2c_UseElixirRsp, this)\r\n    }\r\n    on_s2c_UseElixirRsp(msg:proto.Msg_UseElixirRsp){\r\n        if (msg.error && msg.error.code != proto.CommonErrorCode.Succeed) return;\r\n        RoleData.ins.elixir.data = RoleData.ins.elixir.data .concat(msg.data);\r\n        HeroTeamControl.ins.initElixirData();\r\n        this.elixirArrData = [];\r\n        this.onShow();\r\n    }\r\n    unRegister(): void {\r\n        super.unRegister()\r\n    }\r\n    protected onDestroy(): void {\r\n        super.onDestroy()\r\n    }\r\n    clickAutoUse(){\r\n        if(this.elixirArrData.length>0){\r\n            let msg = new proto.Msg_UseElixirReq();\r\n            msg.items = this.elixirArrData\r\n            Net.Send(proto.Ptl.UseElixirReq , msg)\r\n        }else{\r\n            ShowTips(LangMgr.getLab(\"Tips_drug_1\"));\r\n        }\r\n    }\r\n    getRandomValue(): string {\r\n        const randomNumber = Math.random(); // 生成一个 [0, 1) 之间的随机数\r\n        if (randomNumber < 0.5) {\r\n            return \"action_attack3\"; // 50%的概率返回1\r\n        } else {\r\n            return \"action_move\"; // 50%的概率返回2\r\n        }\r\n    }\r\n}\r\n\r\n\r\n"]}