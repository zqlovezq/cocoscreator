{"version":3,"sources":["file:///C:/chickenStarClient/client/assets/scripts/logic/fight/power/SkillPowers.ts"],"names":["_decorator","tab","PowerTabFactory","FightData","ccclass","property","SkillPowers","skillGroups","skills","buffs","effects","bullets","triggers","insertItem","powerBase","list","getData","powerType","push","addPower","_data","find","dd","getDataById","PowerType","PowerId","ins","skillPowers","insertData","type","data","PowerType_SkillGroupTable","PowerType_SkillTable","PowerType_BuffTable","PowerType_EffectTable","PowerType_BulletTable","PowerType_TriggerTable","id","len","length","v","index","configId","createTypeAnyId","createType","setParentPowers","setConfigId","clear"],"mappings":"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","sourcesContent":["import { _decorator, Component } from \"cc\";\nimport { SkillGroupTab } from \"./powerTab/SkillGroupTab\";\nimport { SkillTab } from \"./powerTab/SkillTab\";\nimport { BuffTab } from \"./powerTab/BuffTab\";\nimport { EffectTab } from \"./powerTab/EffectTab\";\nimport { BulletTab } from \"./powerTab/BulletTab\";\nimport { SkillTriggerTab } from \"./powerTab/SkillTriggerTab\";\nimport { tab } from \"../../../Table/table_gen\";\nimport { PowerBase } from \"./powerTab/PowerBase\";\nimport { AbsRoleInfo } from \"../base/obj/role/AbsRoleInfo\";\nimport { PowerTabFactory } from \"./PowerTabFactory\";\nimport { FightData } from \"../data/FightData\";\n\nconst { ccclass, property } = _decorator;\n\n/** 技能增强存储 \n * 进入战场时，会把英雄身上所有可能产生增强的都存储下来\n * 具体xxxTab会是同一份数据， 引用传递\n * \n * 全局技能、rogue都放在FightRoot内\n*/\n@ccclass('SkillPowers')\nexport class SkillPowers {\n\n    skillGroups: SkillGroupTab[] = [];// 技能组 \n    skills: SkillTab[] = []// 技能 \n    buffs: BuffTab[] = [] // buff \n    effects: EffectTab[] = []// 效果 \n    bullets: BulletTab[] = []// 子弹 \n    triggers: SkillTriggerTab[] = []// 触发器 \n\n    insertItem(powerBase: PowerBase) {\n        let list = this.getData(powerBase.powerType)\n        list.push(powerBase as any)\n    }\n\n    addPower(_data: tab.SkillPowerTable, find: boolean) {\n        let dd = this.getDataById(_data.PowerType, _data.PowerId)\n        if (dd == null && find) {\n            dd = FightData.ins.skillPowers.getDataById(_data.PowerType, _data.PowerId)\n        }\n        if (dd) {\n            dd.addPower(_data)\n        }\n    }\n\n    insertData(type: tab.PowerType, data: any) {\n        switch (type) {\n            case tab.PowerType.PowerType_SkillGroupTable:\n                this.skillGroups.push(data)\n                break\n            case tab.PowerType.PowerType_SkillTable:\n                this.skills.push(data)\n                break\n            case tab.PowerType.PowerType_BuffTable:\n                this.buffs.push(data)\n                break\n            case tab.PowerType.PowerType_EffectTable:\n                this.effects.push(data)\n                break\n            case tab.PowerType.PowerType_BulletTable:\n                this.bullets.push(data)\n                break\n            case tab.PowerType.PowerType_TriggerTable:\n                this.triggers.push(data)\n                break\n        }\n    }\n\n    getData(type: tab.PowerType) {\n        switch (type) {\n            case tab.PowerType.PowerType_SkillGroupTable:\n                return this.skillGroups\n            case tab.PowerType.PowerType_SkillTable:\n                return this.skills\n            case tab.PowerType.PowerType_BuffTable:\n                return this.buffs\n            case tab.PowerType.PowerType_EffectTable:\n                return this.effects\n            case tab.PowerType.PowerType_BulletTable:\n                return this.bullets\n            case tab.PowerType.PowerType_TriggerTable:\n                return this.triggers\n        }\n        return []\n    }\n\n    getDataById(powerType: tab.PowerType, id: number) {\n        let list = this.getData(powerType)\n        let len = list.length\n        let v: PowerBase\n        for (let index = 0; index < len; index++) {\n            v = list[index];\n            if (v.configId == id) {\n                return v\n            }\n        }\n        return null\n    }\n\n    createTypeAnyId(powerType: tab.PowerType, id: number) {\n        let data = this.getDataById(powerType, id)\n        if (data == null) {\n            data = PowerTabFactory.createType(powerType)\n            data.setParentPowers(this)\n            data.setConfigId(id)\n        }\n        return data\n    }\n\n    clear() {\n        this.skillGroups.length = 0\n        this.skills.length = 0\n        this.buffs.length = 0\n        this.effects.length = 0\n        this.bullets.length = 0\n        this.triggers.length = 0\n    }\n\n}"]}