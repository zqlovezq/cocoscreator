{"version":3,"sources":["file:///C:/chickenStarClient/client/assets/scripts/logic/model/activity/wonderfulActivity/NewHandGiftView.ts"],"names":["_decorator","instantiate","Label","Prefab","ComponentBase","EventMgr","proto","InfiniteList","MallLayoutCell","tab","MALLNAME","OpenFunctionMgr","UIMgr","MallDataMgr","setTextTime","ActivityMainView","ccclass","property","NewHandGiftView","_shop_view","Map","_view_name","NONE","_view_type","MallTab","MallTab_None","_list","_countDown","register","onMsg","Ptl","BuyFixedShopCommodityRsp","on_s2c_BuyFixedShopCommodityRsp","onShow","mallId","clear","k","getData","MallItemTabe","length","mallTab","MallId","OpenFunction","isOpen","ins","checkFunctionIsOpen","has","arr","get","set","concat","NewPlayerMall","MallTab_NewPlayerMall","MallTab_NewPlayerMall2","initView","getFixedShopExpireTime","updateTime","unschedule","schedule","onDestroy","isInit","groupData","groupListData","data","list_view","Init","getCellNumber","getCellCount","bind","getCellSize","getCellHeight","getCellIdentifer","getCellView","getCellData","GetCellData","Reload","pfb_item","getComponent","idx","view","viewName","splitCount","result","listData","i","push","slice","name","msg","error","code","CommonErrorCode","Succeed","Refresh","getView","refreshHandGiftRed","lbl_time","string"],"mappings":"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","sourcesContent":["import { _decorator, Component, instantiate, Label, log, Node, Prefab } from 'cc';\r\nimport { ComponentBase } from '../../../../framework/base/ComponentBase';\r\nimport { EventMgr } from '../../../mgr/EventMgr';\r\nimport { proto } from 'client_protocol';\r\nimport InfiniteList from '../../../../Common/InfiniteList/InfiniteList';\r\nimport { MallLayoutCell } from '../../shop/MallLayoutCell';\r\nimport { tab } from '../../../../Table/table_gen';\r\nimport { MALLNAME } from '../../../../Common/script/EnumTypeMgr';\r\nimport { OpenFunctionMgr } from '../../../../Common/component/OpenFunctionMgr';\r\nimport { ViewName } from '../../../define/ViewDefine';\r\nimport { UIMgr } from '../../../mgr/UIMgr';\r\nimport { MallDataMgr } from '../../shop/MallDataMgr';\r\nimport {setTextTime } from '../../../utils/GameUtil';\r\nimport { ActivityMainView } from './ActivityMainView';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('NewHandGiftView')\r\nexport class NewHandGiftView extends ComponentBase {\r\n    @property(Prefab)\r\n    pfb_item: Prefab = null;\r\n    @property(InfiniteList)\r\n    list_view: InfiniteList = null;\r\n    @property(Label)\r\n    lbl_time:Label = null;\r\n    private _shop_view: Map<MALLNAME, tab.MallItemTabe[]> = new Map();\r\n    private _view_name: MALLNAME = MALLNAME.NONE;\r\n    private _view_type: tab.MallTab = tab.MallTab.MallTab_None;\r\n    private _list = [];\r\n    private _countDown: number = 0;\r\n    register(): void {\r\n        // 购买固定商品\r\n        EventMgr.onMsg(proto.Ptl.BuyFixedShopCommodityRsp, this.on_s2c_BuyFixedShopCommodityRsp, this);\r\n    }\r\n    onShow(mallId:number): void {\r\n        this._view_name = mallId;\r\n        this._shop_view.clear();\r\n        for (let k = 0; k < tab.getData().MallItemTabe.length; k++) {\r\n            const mallTab = tab.getData().MallItemTabe[k];\r\n            if (mallTab.MallId === mallId) {\r\n                // 判定开启条件\r\n                if (mallTab.OpenFunction) {\r\n                    const isOpen = OpenFunctionMgr.ins.checkFunctionIsOpen(mallTab.OpenFunction);\r\n                    if (!isOpen) {\r\n                        continue;\r\n                    }\r\n                }\r\n                if (this._shop_view.has(mallId)) {\r\n                    const arr = this._shop_view.get(mallId);\r\n                    this._shop_view.set(mallId, arr.concat(mallTab))\r\n                } else {\r\n                    this._shop_view.set(mallId, [mallTab]);\r\n                }\r\n            }\r\n        }\r\n        this._view_type = mallId==MALLNAME.NewPlayerMall?tab.MallTab.MallTab_NewPlayerMall:tab.MallTab.MallTab_NewPlayerMall2\r\n        this.initView(true);\r\n\r\n        this._countDown = MallDataMgr.ins.getFixedShopExpireTime(mallId)\r\n        this.updateTime();\r\n        this.unschedule(this.updateTime);\r\n        this.schedule(this.updateTime, 1);\r\n    }\r\n    protected onDestroy(): void {\r\n        super.onDestroy();\r\n    }\r\n\r\n    initView(isInit: boolean) {\r\n        const groupData = this.groupListData();\r\n        this._list = groupData.data;\r\n        if (isInit) {\r\n            this.list_view.Init({\r\n                getCellNumber: this.getCellCount.bind(this),\r\n                getCellSize: this.getCellHeight.bind(this),\r\n                getCellIdentifer: this.getCellIdentifer.bind(this),\r\n                getCellView: this.getCellView.bind(this),\r\n                getCellData: this.GetCellData.bind(this),\r\n            })\r\n        } else {\r\n            this.list_view.Reload(false, true)\r\n        }\r\n    }\r\n    getCellCount() {\r\n        return this._list.length;\r\n    }\r\n    getCellHeight() {\r\n        return 330;\r\n    }\r\n    getCellIdentifer() {\r\n        return \"MallLayoutCell\";\r\n    }\r\n    getCellView() {\r\n        return instantiate(this.pfb_item).getComponent(MallLayoutCell);\r\n    }\r\n    GetCellData(idx: number) {\r\n        return { data: this._list[idx], view: this._view_type, viewName: this._view_name }\r\n    }\r\n    groupListData() {\r\n        const splitCount = 4;\r\n        const result = [];\r\n        let listData = this._shop_view.get(this._view_name);\r\n        for (let i = 0; i < listData.length; i += splitCount) {\r\n            result.push(listData.slice(i, i + splitCount));\r\n        }\r\n        return { data: result, name: this._view_name };\r\n    }\r\n    on_s2c_BuyFixedShopCommodityRsp(msg: proto.Msg_BuyFixedShopCommodityRsp) {\r\n        if (msg.error && msg.error.code != proto.CommonErrorCode.Succeed) return;\r\n        this.list_view.Refresh();\r\n\r\n        const view = UIMgr.ins.getView('ActivityMainView');\r\n        view.getComponent(ActivityMainView).refreshHandGiftRed();\r\n    }\r\n    updateTime() {\r\n        // 获取刷新周期\r\n        this._countDown--;\r\n        if (this._countDown <= 0) {\r\n            this._countDown = 0;\r\n            this.unschedule(this.updateTime);\r\n        } else {\r\n            this.lbl_time.string = setTextTime(this._countDown);\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\n"]}