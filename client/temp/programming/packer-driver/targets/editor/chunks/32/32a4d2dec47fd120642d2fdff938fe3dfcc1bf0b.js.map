{"version":3,"sources":["file:///C:/chickenStarClient/client/assets/scripts/logic/fight/base/obj/role/AbsRoleInfo.ts"],"names":["_decorator","AbsObjInfo","AbsObjInfoAttr","AbsStateType","tab","BulletControl","SkillControl","SkillTriggerControl","AbsObjType","BuffControl","SearchEnemy","EventMgr","FightEvent","SkillPowers","SkillTriggerMap","FightAttrData","DamageSource","FightMacro","FrameControl","SkillTimePush","ccclass","property","AbsRoleInfo","constructor","objType","role","abs","isAudo","isLeader","takeSkills","skillGroupMap","Map","_normalGroup","_weaponeGroup","buffs","checkBuffs","attrData","skillPowers","triggerMap","levelEffects","skillTimePush","changeCallback","attrChange","bind","init","setAbsInfo","setAudo","audo","reset","clear","removeBuffAll","length","setAttrList","list","index","v","num","value","toNumber","addAttr","type","attrType","AttrType","AttrType_Stealth","checkStealth","AttrType_Vertigo","checkVertigo","AttrType_TotalHp","AttrType_ShieldLimit","updateHP","beHitFront","bullet","onSkillTrigger","Triggertype","Triggertype_BeHitFront","onHitDamage","data","getAttr","AttrType_Invincible","damage","lossHpPer","isDamage","subHp","isSelfDamage","shield","hp","Math","floor","maxHp","PERCENT","isShield","max","min","isPerSubHeal","addObjAttr","EverylHpLostPe","totalLossHpPer","Triggertype_TotalLostHp","checkAttrBuff","onInjured","checkDeak","source","emitFight","Injured","param","sourceObjId","sourceRole","ins","getObjById","isDead","otherAbsInfo","info","Triggertype_BeHit","checkRemoveBuff","ClearType","ClearType_BeDamaged","beHitBack","checkHitEffect","checkBulletAddBuff","owner","Triggertype_BeHitBack","onDead","onRevice","normalFillUp","fullHp","createSkillGroup","id","skillGroup","createTypeAnyId","PowerType","PowerType_SkillGroupTable","clearAttrData","addTakeSkill","skill","isUse","mutualExclusionBySkill","push","usePassiveSkill","console","log","Id","mutualType","tmpSkill","SkillConflict","splice","initTriggerMap","useAllPassiveSkill","useSkillGroupPassive","normalGroup","skills","initCd","isPassiveSkill","isTimePush","useSkillAndBullet","addSkill","get","AttackType","AttackType_Attack","weaponeGroup","AttackType_ActionAttack","removeNowSkillGroup","delete","switchSkillGroup","set","addWeaponSkillGroup","Role_Add_Weapon_SkillGroup","getNowSkill","nowSkill","fillUp","subNormalAttack","count","subAttackByType","addNormalAttackCount","addAttackCount","getNormalAttackAnimId","checkNormalCd","checkSkillCd","skillType","subAttack","checkSkillCD","refreshHoldTime","setObjAttr","holdTime","updateFrame","dt","updateFrameBuff","isActive","check","parms","Triggertype_PreAttack","nextNormalSkill","isValid","removeBuff","checkAttr","getBuff","buffId","addObjId","addOwner","objId","getBuffByGroup","buffGroup","configTab","BuffGroup","getBuffGroupTotalCount","ruleNumber","getBuffIdTotalCount","clearType","isClearByType","checkRemoveBuffType","buffType","isBuffType","removeBuffId","showTransferDamageUI","pushBuff","buff","isCheckAttr","spliceBuff","checkIndex","findIndex","addBuff","setObjId","addRuleNumber","addBuffEffectUI","onTrigger","removeBuffEffectUI","isRecycle","Triggertype_BuffExpiration","removeAttr","recycle","findBuffByBuffGroup","isBuffGroup","isNegativeBuffImmunity","AttrType_NegativeBuffImmunity","checkSkillGroupUse","atkType","isInCD","checkSkillEffectUnit","checSkillBulletEffectUnit","isHasEnemy","EffectUnit","bulletTab","useWeaponSkill","targetPos","addEffect","effectTab","EffectType","parm","removeEffect","setStealth","bool","isVertigo","isState","RoleVertigo","RoleSkillCd","changeState","roleIdle","onBorn","Triggertype_Born","isInvincible","getLevel","isBoss"],"mappings":"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","sourcesContent":["import { _decorator, Component, Vec3 } from \"cc\";\nimport { AbsObjInfo, AbsObjInfoAttr } from \"../AbsObjInfo\";\nimport { AbsRoleState, AbsStateType } from \"../state/AbsState\";\nimport { SkillGroupTab } from \"../../../power/powerTab/SkillGroupTab\";\nimport { tab } from \"../../../../../Table/table_gen\";\nimport { SkillTab } from \"../../../power/powerTab/SkillTab\";\nimport { Bullet } from \"../bullet/Bullet\";\nimport { DamageLab } from \"../../damage/DamageLab\";\nimport { AbsRole } from \"./AbsRole\";\nimport { BulletControl } from \"../bullet/BulletControl\";\nimport { SkillControl } from \"../../skill/SkillControl\";\nimport { SkillTriggerControl, TriggerParms } from \"../../skill/SkillTriggerControl\";\nimport { AbsObjType } from \"../AbsObj\";\nimport { BuffControl } from \"../../buff/BuffControl\";\nimport { Buff } from \"../../buff/Buff\";\nimport { SearchEnemy } from \"../../ai/SearchEnemy\";\nimport { EventMgr } from \"../../../../mgr/EventMgr\";\nimport { FightEvent } from \"../../../define/FightEvent\";\nimport { proto } from \"client_protocol\";\nimport { FightAttrCalculate } from \"../../../data/FightAttrCalculate\";\nimport { SkillPowers } from \"../../../power/SkillPowers\";\nimport { EffectTab } from \"../../../power/powerTab/EffectTab\";\nimport { SkillPowerControl } from \"../../skill/SkillPowerControl\";\nimport { SkillTriggerMap } from \"../../skill/SkillTriggerMap\";\nimport { FightAttrData } from \"../../../data/FightAttrData\";\nimport { DamageData, DamageSource } from \"../../damage/DamageData\";\nimport { FightMacro } from \"../../../define/FightDefine\";\nimport { FightData } from \"../../../data/FightData\";\nimport { CDTime } from \"../../cd/CDTime\";\nimport Sound from \"../../../../utils/Sound\";\nimport { DamageCalculation } from \"../../damage/DamageCalculation\";\nimport { FrameControl } from \"../../frame/FrameControl\";\nimport { SkillTimePush } from \"../../skill/SkillTimePush\";\n\nconst { ccclass, property } = _decorator;\n\n\n@ccclass('AbsRoleInfo')\nexport class AbsRoleInfo extends AbsObjInfo {\n    objType: AbsObjType = AbsObjType.role;\n    abs: AbsRole\n    /** 自动战斗 */\n    isAudo: boolean = true\n    isLeader: boolean = false\n    /** 携带的技能 */\n    takeSkills: SkillTab[] = []\n\n    skillGroupMap: Map<tab.AttackType, SkillGroupTab> = new Map()\n\n    /** 普通技能 */\n    _normalGroup: SkillGroupTab\n    /** 武器技能（肉鸽招式） */\n    _weaponeGroup: SkillGroupTab\n\n    /** buff相关 */\n    buffs: Buff[] = []\n    /** buff检测 （生命变更） */\n    checkBuffs: Buff[] = []\n    /** 战斗属性 */\n    attrData: FightAttrData = new FightAttrData()\n\n    skillPowers: SkillPowers\n    triggerMap: SkillTriggerMap\n\n    levelEffects: EffectTab[] = []\n\n    skillTimePush: SkillTimePush = new SkillTimePush()\n\n    constructor() {\n        super();\n        this.attrData.changeCallback(this.attrChange.bind(this))\n        this.skillPowers = new SkillPowers()\n        this.triggerMap = new SkillTriggerMap()\n    }\n\n\n    init(): void {\n        this.attrData.init()\n        this.skillTimePush.setAbsInfo(this)\n    }\n\n    setAudo(audo: boolean) {\n        this.isAudo = audo\n    }\n\n    reset() {\n        this.skillTimePush.clear()\n        this.attrData.clear()\n        this.skillPowers.clear()\n        this.triggerMap.clear()\n        this.removeBuffAll()\n        this.buffs.length = 0\n        this.checkBuffs.length = 0\n        this.levelEffects.length = 0\n        this.takeSkills.length = 0\n\n        super.reset()\n    }\n\n    //---------------属性相关-------------------\n    setAttrList(list: proto.FightAttrData[]) {\n        for (let index = 0; index < list.length; index++) {\n            const v = list[index];\n            let num\n            if (typeof (v.value) == \"number\") {\n                num = v.value\n            } else {\n                num = v.value.toNumber()\n            }\n            this.attrData.addAttr(v.type, num)\n        }\n    }\n\n    attrChange(attrType: tab.AttrType, value: number) {\n        if (attrType == tab.AttrType.AttrType_Stealth) {\n            this.checkStealth()\n        }\n        if (attrType == tab.AttrType.AttrType_Vertigo) {\n            this.checkVertigo()\n        }\n        if (attrType == tab.AttrType.AttrType_TotalHp || attrType == tab.AttrType.AttrType_ShieldLimit) {\n            if(this.abs){\n                this.abs.updateHP()\n            }\n        }\n    }\n\n    /** 被命中 受到伤害前 */\n    beHitFront(bullet: Bullet) {\n        this.onSkillTrigger(tab.Triggertype.Triggertype_BeHitFront)\n    }\n\n    /** 被命中 命中伤害 */\n    onHitDamage(data: DamageData) {\n        if (this.attrData.getAttr(tab.AttrType.AttrType_Invincible)) {\n            // console.log(\"无敌中0\")\n            return\n        }\n        if (data.damage == 0) {\n            return\n        }\n        let lossHpPer = 0\n        if (data.isDamage()) {\n            let subHp = 0\n            if (data.isSelfDamage) { //自损\n                subHp = data.damage\n            } else {\n                if (this.attrData.shield >= data.damage) {//护盾足够\n                    this.attrData.shield -= data.damage\n                } else {\n                    subHp = data.damage - this.attrData.shield\n                    this.attrData.shield = 0 //护盾清零\n                }\n            }\n\n            this.attrData.hp -= subHp\n            lossHpPer = Math.floor((data.damage / this.attrData.maxHp) * FightMacro.PERCENT)\n        } else {\n            if (data.isShield) {\n                //增加护盾值\n                this.attrData.shield += data.damage\n            } else {\n                this.attrData.hp += data.damage\n            }\n        }\n\n        //百分比掉血， 不允许掉死\n        this.attrData.hp = Math.max(Math.min(this.attrData.hp, this.attrData.maxHp), data.isPerSubHeal ? 1 : 0)\n\n        this.abs.updateHP()\n\n        this.addObjAttr(AbsObjInfoAttr.EverylHpLostPe, lossHpPer)\n        this.addObjAttr(AbsObjInfoAttr.totalLossHpPer, lossHpPer)\n        this.onSkillTrigger(tab.Triggertype.Triggertype_TotalLostHp, { lossHpPer: lossHpPer })\n        this.checkAttrBuff(lossHpPer)\n\n\n        if (data.isDamage() && data.damage > 0) {\n            this.onInjured(data)\n        }\n\n        this.checkDeak()\n    }\n\n    /** 受伤 */\n    onInjured(data: DamageData) {\n        if (data.source == DamageSource.bullet) {\n            EventMgr.emitFight(FightEvent.Injured, data, this)\n            let param: TriggerParms = {}\n            if (data.sourceObjId) {\n                let sourceRole = FrameControl.ins.getObjById(data.sourceObjId) as AbsRole\n                if (sourceRole && !sourceRole.isDead) {\n                    param.otherAbsInfo = sourceRole.info\n                }\n            }\n            this.onSkillTrigger(tab.Triggertype.Triggertype_BeHit, param, true)\n            this.checkRemoveBuff(tab.ClearType.ClearType_BeDamaged)\n        }\n    }\n\n    /** 被命中  受到伤害后 */\n    beHitBack(bullet: Bullet) {\n        BulletControl.ins.checkHitEffect(bullet, this.abs)\n        if (!this.abs.isDead) {\n            BuffControl.ins.checkBulletAddBuff(bullet, bullet.owner, this.abs)\n        }\n\n        this.onSkillTrigger(tab.Triggertype.Triggertype_BeHitBack)\n    }\n\n    checkDeak() {\n        if (this.attrData.hp <= 0) {\n            this.abs.onDead()\n        }\n    }\n\n    onRevice() {\n        this.normalFillUp()\n        this.attrData.fullHp()\n    }\n\n\n    //---------------技能相关-------------------\n    createSkillGroup(id: number) {\n        let skillGroup = this.skillPowers.createTypeAnyId(tab.PowerType.PowerType_SkillGroupTable, id) as SkillGroupTab\n        skillGroup.clearAttrData()\n\n        return skillGroup\n    }\n\n    addTakeSkill(skill: SkillTab, isUse?: boolean) {\n        if (this.mutualExclusionBySkill(skill) != 1) {\n            this.takeSkills.push(skill)\n            if (isUse) {\n                this.usePassiveSkill(skill)\n            }\n            return true\n        } else {\n            console.log(\"添加技能---互斥，丢弃\", skill.Id)\n            return false\n        }\n    }\n\n    /** 根据技能获取是否互斥 */\n    mutualExclusionBySkill(skill: SkillTab) {\n        let mutualType: number = 0 //1互斥 skill丢弃，  2优先 skill放入\n        for (let index = this.takeSkills.length - 1; index >= 0; index--) {\n            const tmpSkill = this.takeSkills[index]\n            if (tmpSkill.SkillConflict[0] && skill.SkillConflict[0] == tmpSkill.SkillConflict[0]) {\n                if (skill.SkillConflict[1] > tmpSkill.SkillConflict[1]) {\n                    mutualType = 2\n                    this.takeSkills.splice(index, 1)\n                } else {\n                    if (mutualType == 0) {\n                        mutualType = 1\n                    }\n                }\n            }\n        }\n\n        return mutualType\n    }\n\n    initTriggerMap() {\n        this.triggerMap.clear()\n        this.useAllPassiveSkill()\n    }\n\n    /** 释放所有被动技能 (被动技能在初始化完成后直接释放) */\n    useAllPassiveSkill() {\n        for (let index = 0; index < this.takeSkills.length; index++) {\n            const v = this.takeSkills[index];\n            this.usePassiveSkill(v)\n        }\n        this.useSkillGroupPassive(this.normalGroup)\n    }\n\n    useSkillGroupPassive(skillGroup: SkillGroupTab) {\n        if (!skillGroup) {\n            return\n        }\n        for (let index = 0; index < skillGroup.skills.length; index++) {\n            const v = skillGroup.skills[index];\n            this.usePassiveSkill(v)\n        }\n    }\n\n    usePassiveSkill(skill: SkillTab) {\n        skill.initCd()\n        if (skill.isPassiveSkill() || skill.isTimePush()) {\n            SkillControl.ins.useSkillAndBullet(skill, this.abs)\n            if (skill.isTimePush()) {\n                this.skillTimePush.addSkill(skill)\n            }\n        }\n    }\n    /** 普通技能组 */\n    get normalGroup() {\n        if (this._normalGroup == null) {\n            this._normalGroup = this.skillGroupMap.get(tab.AttackType.AttackType_Attack)\n        }\n        return this._normalGroup\n    }\n    /** 武器技能组（肉鸽招式） */\n    get weaponeGroup() {\n        if (this._weaponeGroup == null) {\n            this._weaponeGroup = this.skillGroupMap.get(tab.AttackType.AttackType_ActionAttack)\n        }\n        return this._weaponeGroup\n    }\n\n    /** 删除当前技能组 */\n    removeNowSkillGroup() {\n        if (this.normalGroup) {\n            this.normalGroup.clearAttrData()\n        }\n        this._normalGroup = null\n        this.skillGroupMap.delete(tab.AttackType.AttackType_Attack)\n    }\n\n    /** 切换技能组 */\n    switchSkillGroup(skillGroup: SkillGroupTab) {\n        this.removeNowSkillGroup()\n        this.skillGroupMap.set(tab.AttackType.AttackType_Attack, skillGroup)\n        this.normalGroup.clearAttrData()\n\n        this.useSkillGroupPassive(this.normalGroup)\n    }\n\n    /** 添加武器技能组（招式) */\n    addWeaponSkillGroup(skillGroup: SkillGroupTab) {\n        this.skillGroupMap.set(tab.AttackType.AttackType_ActionAttack, skillGroup)\n        this._weaponeGroup = skillGroup\n        skillGroup.clearAttrData()\n        EventMgr.emitFight(FightEvent.Role_Add_Weapon_SkillGroup, this, skillGroup.Id)\n        this.useSkillGroupPassive(skillGroup)\n    }\n\n    getNowSkill() {\n        if (this.normalGroup) {\n            return this.normalGroup.nowSkill\n        }\n    }\n\n    normalFillUp() {\n        if (this.normalGroup) {\n            this.normalGroup.fillUp()\n        }\n    }\n\n    /** 减去普通攻击次数 */\n    subNormalAttack(count: number) {\n        this.subAttackByType(tab.AttackType.AttackType_Attack, count)\n    }\n    addNormalAttackCount(count: number) {\n        this.normalGroup.addAttackCount(count)\n    }\n\n    getNormalAttackAnimId() {\n\n    }\n\n    /** 检测普通攻击是否cd */\n    checkNormalCd() {\n        return this.checkSkillCd(tab.AttackType.AttackType_Attack)\n    }\n\n    subAttackByType(skillType: tab.AttackType, count: number) {\n        if (skillType == tab.AttackType.AttackType_Attack) {\n            this.normalGroup.subAttack(count)\n        } else {\n            this.weaponeGroup.subAttack(count)\n        }\n    }\n\n    checkSkillCd(skillType: tab.AttackType) {\n        if (skillType == tab.AttackType.AttackType_Attack) {\n            return this.normalGroup.checkSkillCD()\n        } else {\n            return this.weaponeGroup && this.weaponeGroup.checkSkillCD()\n        }\n    }\n    /** 刷新蓄力时间 */\n    refreshHoldTime() {\n        this.setObjAttr(AbsObjInfoAttr.holdTime)\n    }\n\n    updateFrame(dt: number) {\n\n        this.updateFrameBuff(dt)\n        if (this.abs && this.abs.isActive && !this.abs.isDead) {\n            this.skillTimePush.check()\n        }\n    }\n\n    //---------------技能触发器相关 主要处理都在SkillControll-------------------\n    /** 技能触发器 */\n    onSkillTrigger(type: tab.Triggertype, parms?: TriggerParms, checkDeak?: boolean) {\n        if (type == tab.Triggertype.Triggertype_PreAttack) {\n            this.normalGroup.nextNormalSkill()\n        }\n        if (checkDeak && this.abs.isDead) {\n            return\n        }\n        SkillTriggerControl.ins.onSkillTrigger(this, type, parms)\n    }\n\n    //---------------BUFF相关-------------------\n    updateFrameBuff(dt: number) {\n        for (let index = this.buffs.length - 1; index >= 0; index--) {\n            const v = this.buffs[index];\n            if (v == null) {\n                this.buffs.splice(index, 1)\n                continue\n            }\n            if (!v.isValid()) {\n                this.removeBuff(v, index)\n                continue\n            }\n            v.updateFrame(dt)\n        }\n    }\n\n    /** 检测属性buff */\n    checkAttrBuff(lossHpPer: number) {\n        for (let index = 0; index < this.checkBuffs.length; index++) {\n            const v = this.checkBuffs[index];\n            v.checkAttr(lossHpPer)\n        }\n    }\n\n    /** 根据id和添加者id获取buff */\n    getBuff(buffId: number, addObjId: number) {\n        for (let index = 0; index < this.buffs.length; index++) {\n            const v = this.buffs[index];\n            if (v.buffId == buffId && v.addOwner.objId == addObjId) {\n                return v\n            }\n        }\n        return null\n    }\n\n    /** 根据buff组获取buff */\n    getBuffByGroup(buffGroup: tab.BuffGroup) {\n        for (let index = 0; index < this.buffs.length; index++) {\n            const v = this.buffs[index];\n            if (buffGroup && v.configTab.BuffGroup == buffGroup) {\n                return v\n            }\n        }\n        return null\n    }\n\n    /** 获取buff组层数 */\n    getBuffGroupTotalCount(buffGroup: number) {\n        let count = 0\n        for (let index = 0; index < this.buffs.length; index++) {\n            const v = this.buffs[index];\n            if (buffGroup && v.configTab.BuffGroup == buffGroup) {\n                count += v.ruleNumber\n            }\n        }\n        return count\n    }\n\n    /** 获取buffId层数 */\n    getBuffIdTotalCount(buffId: number) {\n        let count = 0\n        for (let index = 0; index < this.buffs.length; index++) {\n            const v = this.buffs[index];\n            if (v.buffId == buffId) {\n                count += v.ruleNumber\n            }\n        }\n        return count\n    }\n\n\n    /** 根据清除类型检测清除buff */\n    checkRemoveBuff(clearType: tab.ClearType) {\n        for (let index = this.buffs.length - 1; index >= 0; index--) {\n            const v = this.buffs[index];\n            if (v.isClearByType(clearType)) {\n                this.removeBuff(v, index)\n            }\n        }\n    }\n\n    //** 根据buff类型清除buff */\n    checkRemoveBuffType(buffType: tab.BuffType) {\n        for (let index = this.buffs.length - 1; index >= 0; index--) {\n            const v = this.buffs[index];\n            if (v.isBuffType(buffType)) {\n                this.removeBuff(v, index)\n            }\n        }\n    }\n\n    removeBuffId(buffId: number) {\n        for (let index = this.buffs.length - 1; index >= 0; index--) {\n            const v = this.buffs[index];\n            if (v.buffId == buffId) {\n                this.removeBuff(v, index)\n            }\n        }\n    }\n\n    removeBuffAll() {\n        for (let index = this.buffs.length - 1; index >= 0; index--) {\n            const v = this.buffs[index];\n            this.removeBuff(v, index)\n        }\n        this.buffs.length = 0\n        BuffControl.ins.showTransferDamageUI()\n    }\n\n    pushBuff(buff: Buff) {\n        this.buffs.push(buff)\n        if (buff.configTab.isCheckAttr()) {\n            this.checkBuffs.push(buff)\n        }\n    }\n\n    spliceBuff(buff: Buff, index: number) {\n        this.buffs.splice(index, 1)\n        if (buff.configTab.isCheckAttr()) {\n            let checkIndex = this.checkBuffs.findIndex(v => buff)\n            if (checkIndex >= 0) {\n                this.checkBuffs.splice(checkIndex, 1)\n            }\n        }\n    }\n\n    addBuff(buff: Buff) {\n        buff.setObjId(this.abs.objId)\n        this.pushBuff(buff)\n        buff.addRuleNumber(true)\n        BuffControl.ins.addBuffEffectUI(buff, this.abs)\n        /** 先放进去， 在触发第一次 */\n        buff.onTrigger()\n    }\n\n    removeBuff(buff: Buff, index: number) {\n        this.spliceBuff(buff, index)\n        // console.log(this.abs.getBodyId(), \"移除buff\", buff.buffId)\n        BuffControl.ins.removeBuffEffectUI(buff, this.abs)\n        if (!buff.isValid() && !this.isRecycle) {\n            this.onSkillTrigger(tab.Triggertype.Triggertype_BuffExpiration, { buff: buff })\n        }\n        buff.removeAttr()\n        buff.recycle()\n    }\n\n    /** 查找指定属性类型的buff */\n    findBuffByBuffGroup(buffGroup: tab.BuffGroup) {\n        for (let index = 0; index < this.buffs.length; index++) {\n            const v = this.buffs[index];\n            if (v.configTab.isBuffGroup(buffGroup)) {\n                return true\n            }\n        }\n        return false\n    }\n    /** 是否 负面buff免疫  */\n    isNegativeBuffImmunity() {\n        return this.attrData.getAttr(tab.AttrType.AttrType_NegativeBuffImmunity) > 0\n    }\n\n    //---------------其他-------------------\n    checkSkillGroupUse(atkType: tab.AttackType) {\n        let skill\n        if (atkType == tab.AttackType.AttackType_Attack) {\n            skill = this.getNowSkill()\n        } else {\n            skill = this.weaponeGroup.nowSkill\n        }\n        if (skill && !skill.isInCD(this.attrData)) {\n            if (this.checkSkillEffectUnit(skill) || this.checSkillBulletEffectUnit(skill)) {\n                return true\n            }\n        }\n        return false\n    }\n\n\n    /** 检测技能作用到位 作用目标*/\n    checkSkillEffectUnit(skill: SkillTab) {\n        return SearchEnemy.isHasEnemy(this.abs, this.abs.objType, skill.EffectUnit)\n    }\n    /** 检测技能子弹 作用目标 */\n    checSkillBulletEffectUnit(skill: SkillTab) {\n        if (skill.bulletTab) {\n            return SearchEnemy.isHasEnemy(this.abs, this.abs.objType, skill.bulletTab.EffectUnit)\n        }\n        return false\n    }\n\n    useWeaponSkill(targetPos: Vec3) {\n\n    }\n\n    //---------------effect属性增加-------------------\n    addEffect(effectTab: EffectTab) {\n        this.attrData.addAttr(effectTab.EffectType, effectTab.parm)\n    }\n\n    removeEffect(effectTab: EffectTab) {\n        this.attrData.addAttr(effectTab.EffectType, -effectTab.parm)\n    }\n    checkStealth() {\n        if (this.abs && !this.abs.isDead) {\n            this.abs.setStealth(this.attrData.getAttr(tab.AttrType.AttrType_Stealth) > 0)\n        }\n    }\n\n    checkVertigo() {\n        if (this.abs && !this.abs.isDead) {\n            let bool = this.isVertigo()\n            if (bool) {\n                if (!this.abs.isState(AbsStateType.RoleVertigo)) {\n                    if (this.abs.isState(AbsStateType.RoleSkillCd)) { //调息状态， 不切换到眩晕状态\n                        return\n                    }\n                    this.abs.changeState(AbsStateType.RoleVertigo)\n                }\n            } else {\n                if (this.abs.isState(AbsStateType.RoleVertigo)) {\n                    this.abs.changeState(AbsStateType.roleIdle)\n                }\n            }\n        }\n    }\n\n    onBorn() {\n        this.attrData.fullHp()\n        this.refreshHoldTime()\n        this.onSkillTrigger(tab.Triggertype.Triggertype_Born)\n    }\n\n    //是否无敌\n    isInvincible() {\n        if (this.attrData.getAttr(tab.AttrType.AttrType_Invincible)) {\n            // console.log(\"无敌中0\")\n            return true\n        }\n        return false\n\n    }\n    /** 是否眩晕 */\n    isVertigo() {\n        return this.attrData.getAttr(tab.AttrType.AttrType_Vertigo) > 0\n    }\n\n    getLevel() {\n        return 1\n    }\n\n    /** boss怪 */\n    get isBoss() {\n        return false\n    }\n}"]}