{"version":3,"sources":["file:///C:/chickenStarClient/client/assets/scripts/logic/model/activity/monthlyCard/MonthlyCardView.ts"],"names":["_decorator","Node","ComponentBase","MonthlyCardItem","tab","ItemPoolMgr","ItemInfo","ActivityData","EventMgr","proto","UIMgr","ViewName","ActivityControl","RoleData","ccclass","property","MonthlyCardView","register","onMsg","Ptl","GetPrivilegeInfoRsp","on_s2c_GetMonthlyPassInfoRsp","ReceivePrivilegeDailyRewardsRsp","on_s2c_ReceiveMonthlyPassDailyRewardsRsp","ReceiveMonthlyPassAdditionalRewardsRsp","on_s2c_ReceiveMonthlyPassAllBoughtRewardsRsp","initView","table1","getData","MonthlyPassTableByType","getValue","PrivilegedType","PrivilegedType_MonthlyPass","cardItem1","table2","PrivilegedType_PremiumMonthlyPass","cardItem2","rewards","GetKeyValue_ConfigTable","MonthlyPassBothRewardItemIds","nums","MonthlyPassBothRewardItemNum","key","info","initItemData","ins","createRewadItem","extraRewardNode","updateView","msg","monthlyPassInfo","isMonthlyPass","PrivilegeMap","privileged","getServerUtcTime","expireTime","stage","isDailyReceived","isPremiumMonthlyPass","isReceivedMonthlyPassAddtional","extraNode","active","isReach","notreachBtnNode","reachBtnNode","onClickReachBtn","requestReceiveMonthlyPassAllBoughtRewards","error","code","CommonErrorCode","Succeed","show","viewName","CongratulationPop","data"],"mappings":"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","sourcesContent":["import { _decorator, Component, ForwardFlow, Node } from 'cc';\r\nimport { ComponentBase } from '../../../../framework/base/ComponentBase';\r\nimport { MonthlyCardItem } from './MonthlyCardItem';\r\nimport { tab } from '../../../../Table/table_gen';\r\nimport { ItemPoolMgr } from '../../item/ItemPoolMgr';\r\nimport { ItemInfo } from '../../item/ItemInfo';\r\nimport { ActivityData } from '../ActivityData';\r\nimport { EventMgr } from '../../../mgr/EventMgr';\r\nimport { proto } from 'client_protocol';\r\nimport { UIMgr } from '../../../mgr/UIMgr';\r\nimport { ViewName } from '../../../define/ViewDefine';\r\nimport { ActivityControl } from '../ActivityControl';\r\nimport { RoleData } from '../../role/RoleData';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('MonthlyCardView')\r\nexport class MonthlyCardView extends ComponentBase {\r\n    @property(MonthlyCardItem)\r\n    cardItem1: MonthlyCardItem = null;\r\n    @property(MonthlyCardItem)\r\n    cardItem2: MonthlyCardItem = null;\r\n    @property(Node)\r\n    extraNode: Node = null;\r\n    @property(Node)\r\n    extraRewardNode: Node = null;\r\n    @property(Node)\r\n    reachBtnNode: Node = null;\r\n    @property(Node)\r\n    notreachBtnNode: Node = null;\r\n\r\n    register(): void {\r\n        EventMgr.onMsg(proto.Ptl.GetPrivilegeInfoRsp, this.on_s2c_GetMonthlyPassInfoRsp, this)\r\n        EventMgr.onMsg(proto.Ptl.ReceivePrivilegeDailyRewardsRsp, this.on_s2c_ReceiveMonthlyPassDailyRewardsRsp, this)\r\n        EventMgr.onMsg(proto.Ptl.ReceiveMonthlyPassAdditionalRewardsRsp, this.on_s2c_ReceiveMonthlyPassAllBoughtRewardsRsp, this)\r\n    \r\n    }\r\n    initView() {\r\n        let table1 = tab.getData().MonthlyPassTableByType.getValue(tab.PrivilegedType.PrivilegedType_MonthlyPass);\r\n        this.cardItem1.initView(table1);\r\n\r\n        let table2 = tab.getData().MonthlyPassTableByType.getValue(tab.PrivilegedType.PrivilegedType_PremiumMonthlyPass);\r\n        this.cardItem2.initView(table2);\r\n        let rewards = tab.getData().GetKeyValue_ConfigTable().MonthlyPassBothRewardItemIds;\r\n        let nums = tab.getData().GetKeyValue_ConfigTable().MonthlyPassBothRewardItemNum;\r\n        for (let key in rewards) {\r\n            let info = new ItemInfo();\r\n            info.initItemData(rewards[key], nums[key]);\r\n            ItemPoolMgr.ins.createRewadItem(info, this.extraRewardNode);\r\n        }\r\n        this.updateView();\r\n\r\n\r\n    }\r\n\r\n    updateView() {\r\n        let msg = ActivityData.ins.monthlyPassInfo;\r\n\r\n\r\n        let isMonthlyPass=false;\r\n        if (msg.PrivilegeMap && msg.PrivilegeMap[tab.PrivilegedType.PrivilegedType_MonthlyPass]) {\r\n            let privileged= msg.PrivilegeMap[tab.PrivilegedType.PrivilegedType_MonthlyPass];\r\n            if(RoleData.ins.getServerUtcTime()<privileged.expireTime){\r\n                let stage =privileged.isDailyReceived ? 2 : 1;\r\n                this.cardItem1.updateView(stage,privileged.expireTime);\r\n                isMonthlyPass=true;\r\n            }else{\r\n                this.cardItem1.updateView(0);\r\n            }\r\n           \r\n         \r\n        } else {\r\n            this.cardItem1.updateView(0);\r\n        }\r\n        let isPremiumMonthlyPass=false;\r\n        if (msg.PrivilegeMap && msg.PrivilegeMap[tab.PrivilegedType.PrivilegedType_PremiumMonthlyPass]) {\r\n            let privileged=msg.PrivilegeMap[tab.PrivilegedType.PrivilegedType_PremiumMonthlyPass];\r\n            if(RoleData.ins.getServerUtcTime()<privileged.expireTime){\r\n                let stage =privileged.isDailyReceived ? 2 : 1;\r\n                this.cardItem2.updateView(stage,privileged.expireTime);\r\n                isPremiumMonthlyPass=true;\r\n            }else{\r\n                this.cardItem2.updateView(0);\r\n            }\r\n          \r\n        } else {\r\n            this.cardItem2.updateView(0);\r\n        }\r\n        if (msg.isReceivedMonthlyPassAddtional) {\r\n            this.extraNode.active = false;\r\n        } else {\r\n            let isReach = false;\r\n            if (msg.PrivilegeMap &&isMonthlyPass&&isPremiumMonthlyPass) {\r\n                isReach = true;\r\n            }\r\n            this.notreachBtnNode.active = !isReach;\r\n            this.reachBtnNode.active = isReach;\r\n        }\r\n\r\n    }\r\n    onClickReachBtn() {\r\n        ActivityControl.ins.requestReceiveMonthlyPassAllBoughtRewards();\r\n    }\r\n\r\n    /**月卡信息 */\r\n    on_s2c_GetMonthlyPassInfoRsp(msg: proto.Msg_GetPrivilegeInfoRsp) {\r\n        this.updateView();\r\n    }\r\n    // 领取月卡每日奖励\r\n    on_s2c_ReceiveMonthlyPassDailyRewardsRsp(msg: proto.Msg_ReceivePrivilegeDailyRewardsRsp) {\r\n        if (!msg.error || msg.error.code == proto.CommonErrorCode.Succeed) {\r\n            this.updateView();\r\n            UIMgr.ins.show({ viewName: ViewName.CongratulationPop, data: msg.rewards })\r\n        }\r\n    }\r\n    // 领取月卡加码奖励\r\n    on_s2c_ReceiveMonthlyPassAllBoughtRewardsRsp(msg: proto.Msg_ReceiveMonthlyPassAdditionalRewardsRsp) {\r\n        if (!msg.error || msg.error.code == proto.CommonErrorCode.Succeed) {\r\n            this.updateView();\r\n            UIMgr.ins.show({ viewName: ViewName.CongratulationPop, data: msg.rewards })\r\n        }\r\n    }\r\n\r\n}\r\n\r\n\r\n"]}