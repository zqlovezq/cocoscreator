{"version":3,"sources":["file:///C:/chickenStarClient/client/node_modules/protobufjs/src/root.js"],"names":["_cjsLoader","_req","__cjsMetaURL","_req0","_req1","_req2","_req3","url","define","exports","require","module","__filename","__dirname","Root","Namespace","prototype","Object","create","constructor","className","Field","Enum","OneOf","util","Type","parse","common","options","call","deferred","files","fromJSON","json","root","setOptions","addJSON","nested","resolvePath","path","resolve","fetch","SYNC","load","filename","callback","undefined","self","asPromise","sync","finish","err","cb","getBundledFileName","idx","lastIndexOf","altname","substring","process","source","isString","charAt","JSON","parsed","resolved","i","imports","length","weakImports","queued","weak","indexOf","push","setTimeout","fs","readFileSync","toString","loadSync","isNode","Error","resolveAll","map","field","extend","parent","fullName","join","exposeRe","tryHandleExtension","extendedType","lookup","sisterField","id","type","rule","get","name","declaringField","extensionField","add","_handleAdd","object","test","values","splice","j","nestedArray","_nestedArray","_handleRemove","remove","index","_configure","Type_","parse_","common_","_cjsExports"],"mappings":"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","sourcesContent":["import _cjsLoader from 'cce:/internal/ml/cjs-loader.mjs';\nimport { __cjsMetaURL as _req} from './namespace';\nimport { __cjsMetaURL as _req0} from './field';\nimport { __cjsMetaURL as _req1} from './enum';\nimport { __cjsMetaURL as _req2} from './oneof';\nimport { __cjsMetaURL as _req3} from './util';\nlet _cjsExports;\nconst __cjsMetaURL = import.meta.url;\n_cjsLoader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {\n// #region ORIGINAL CODE\n\n\n \"use strict\";\n module.exports = Root;\n\n // extends Namespace\n var Namespace = require(\"./namespace\");\n ((Root.prototype = Object.create(Namespace.prototype)).constructor = Root).className = \"Root\";\n\n var Field   = require(\"./field\"),\n     Enum    = require(\"./enum\"),\n     OneOf   = require(\"./oneof\"),\n     util    = require(\"./util\");\n\n var Type,   // cyclic\n     parse,  // might be excluded\n     common; // \"\n\n /**\n  * Constructs a new root namespace instance.\n  * @classdesc Root namespace wrapping all types, enums, services, sub-namespaces etc. that belong together.\n  * @extends NamespaceBase\n  * @constructor\n  * @param {Object.<string,*>} [options] Top level options\n  */\n function Root(options) {\n     Namespace.call(this, \"\", options);\n\n     /**\n      * Deferred extension fields.\n      * @type {Field[]}\n      */\n     this.deferred = [];\n\n     /**\n      * Resolved file names of loaded files.\n      * @type {string[]}\n      */\n     this.files = [];\n }\n\n /**\n  * Loads a namespace descriptor into a root namespace.\n  * @param {INamespace} json Nameespace descriptor\n  * @param {Root} [root] Root namespace, defaults to create a new one if omitted\n  * @returns {Root} Root namespace\n  */\n Root.fromJSON = function fromJSON(json, root) {\n     if (!root)\n         root = new Root();\n     if (json.options)\n         root.setOptions(json.options);\n     return root.addJSON(json.nested);\n };\n\n /**\n  * Resolves the path of an imported file, relative to the importing origin.\n  * This method exists so you can override it with your own logic in case your imports are scattered over multiple directories.\n  * @function\n  * @param {string} origin The file name of the importing file\n  * @param {string} target The file name being imported\n  * @returns {string|null} Resolved path to `target` or `null` to skip the file\n  */\n Root.prototype.resolvePath = util.path.resolve;\n\n /**\n  * Fetch content from file path or url\n  * This method exists so you can override it with your own logic.\n  * @function\n  * @param {string} path File path or url\n  * @param {FetchCallback} callback Callback function\n  * @returns {undefined}\n  */\n Root.prototype.fetch = util.fetch;\n\n // A symbol-like function to safely signal synchronous loading\n /* istanbul ignore next */\n function SYNC() {} // eslint-disable-line no-empty-function\n\n /**\n  * Loads one or multiple .proto or preprocessed .json files into this root namespace and calls the callback.\n  * @param {string|string[]} filename Names of one or multiple files to load\n  * @param {IParseOptions} options Parse options\n  * @param {LoadCallback} callback Callback function\n  * @returns {undefined}\n  */\n Root.prototype.load = function load(filename, options, callback) {\n     if (typeof options === \"function\") {\n         callback = options;\n         options = undefined;\n     }\n     var self = this;\n     if (!callback)\n         return util.asPromise(load, self, filename, options);\n\n     var sync = callback === SYNC; // undocumented\n\n     // Finishes loading by calling the callback (exactly once)\n     function finish(err, root) {\n         /* istanbul ignore if */\n         if (!callback)\n             return;\n         if (sync)\n             throw err;\n         var cb = callback;\n         callback = null;\n         cb(err, root);\n     }\n\n     // Bundled definition existence checking\n     function getBundledFileName(filename) {\n         var idx = filename.lastIndexOf(\"google/protobuf/\");\n         if (idx > -1) {\n             var altname = filename.substring(idx);\n             if (altname in common) return altname;\n         }\n         return null;\n     }\n\n     // Processes a single file\n     function process(filename, source) {\n         try {\n             if (util.isString(source) && source.charAt(0) === \"{\")\n                 source = JSON.parse(source);\n             if (!util.isString(source))\n                 self.setOptions(source.options).addJSON(source.nested);\n             else {\n                 parse.filename = filename;\n                 var parsed = parse(source, self, options),\n                     resolved,\n                     i = 0;\n                 if (parsed.imports)\n                     for (; i < parsed.imports.length; ++i)\n                         if (resolved = getBundledFileName(parsed.imports[i]) || self.resolvePath(filename, parsed.imports[i]))\n                             fetch(resolved);\n                 if (parsed.weakImports)\n                     for (i = 0; i < parsed.weakImports.length; ++i)\n                         if (resolved = getBundledFileName(parsed.weakImports[i]) || self.resolvePath(filename, parsed.weakImports[i]))\n                             fetch(resolved, true);\n             }\n         } catch (err) {\n             finish(err);\n         }\n         if (!sync && !queued)\n             finish(null, self); // only once anyway\n     }\n\n     // Fetches a single file\n     function fetch(filename, weak) {\n         filename = getBundledFileName(filename) || filename;\n\n         // Skip if already loaded / attempted\n         if (self.files.indexOf(filename) > -1)\n             return;\n         self.files.push(filename);\n\n         // Shortcut bundled definitions\n         if (filename in common) {\n             if (sync)\n                 process(filename, common[filename]);\n             else {\n                 ++queued;\n                 setTimeout(function() {\n                     --queued;\n                     process(filename, common[filename]);\n                 });\n             }\n             return;\n         }\n\n         // Otherwise fetch from disk or network\n         if (sync) {\n             var source;\n             try {\n                 source = util.fs.readFileSync(filename).toString(\"utf8\");\n             } catch (err) {\n                 if (!weak)\n                     finish(err);\n                 return;\n             }\n             process(filename, source);\n         } else {\n             ++queued;\n             self.fetch(filename, function(err, source) {\n                 --queued;\n                 /* istanbul ignore if */\n                 if (!callback)\n                     return; // terminated meanwhile\n                 if (err) {\n                     /* istanbul ignore else */\n                     if (!weak)\n                         finish(err);\n                     else if (!queued) // can't be covered reliably\n                         finish(null, self);\n                     return;\n                 }\n                 process(filename, source);\n             });\n         }\n     }\n     var queued = 0;\n\n     // Assembling the root namespace doesn't require working type\n     // references anymore, so we can load everything in parallel\n     if (util.isString(filename))\n         filename = [ filename ];\n     for (var i = 0, resolved; i < filename.length; ++i)\n         if (resolved = self.resolvePath(\"\", filename[i]))\n             fetch(resolved);\n\n     if (sync)\n         return self;\n     if (!queued)\n         finish(null, self);\n     return undefined;\n };\n // function load(filename:string, options:IParseOptions, callback:LoadCallback):undefined\n\n /**\n  * Loads one or multiple .proto or preprocessed .json files into this root namespace and calls the callback.\n  * @function Root#load\n  * @param {string|string[]} filename Names of one or multiple files to load\n  * @param {LoadCallback} callback Callback function\n  * @returns {undefined}\n  * @variation 2\n  */\n // function load(filename:string, callback:LoadCallback):undefined\n\n /**\n  * Loads one or multiple .proto or preprocessed .json files into this root namespace and returns a promise.\n  * @function Root#load\n  * @param {string|string[]} filename Names of one or multiple files to load\n  * @param {IParseOptions} [options] Parse options. Defaults to {@link parse.defaults} when omitted.\n  * @returns {Promise<Root>} Promise\n  * @variation 3\n  */\n // function load(filename:string, [options:IParseOptions]):Promise<Root>\n\n /**\n  * Synchronously loads one or multiple .proto or preprocessed .json files into this root namespace (node only).\n  * @function Root#loadSync\n  * @param {string|string[]} filename Names of one or multiple files to load\n  * @param {IParseOptions} [options] Parse options. Defaults to {@link parse.defaults} when omitted.\n  * @returns {Root} Root namespace\n  * @throws {Error} If synchronous fetching is not supported (i.e. in browsers) or if a file's syntax is invalid\n  */\n Root.prototype.loadSync = function loadSync(filename, options) {\n     if (!util.isNode)\n         throw Error(\"not supported\");\n     return this.load(filename, options, SYNC);\n };\n\n /**\n  * @override\n  */\n Root.prototype.resolveAll = function resolveAll() {\n     if (this.deferred.length)\n         throw Error(\"unresolvable extensions: \" + this.deferred.map(function(field) {\n             return \"'extend \" + field.extend + \"' in \" + field.parent.fullName;\n         }).join(\", \"));\n     return Namespace.prototype.resolveAll.call(this);\n };\n\n // only uppercased (and thus conflict-free) children are exposed, see below\n var exposeRe = /^[A-Z]/;\n\n /**\n  * Handles a deferred declaring extension field by creating a sister field to represent it within its extended type.\n  * @param {Root} root Root instance\n  * @param {Field} field Declaring extension field witin the declaring type\n  * @returns {boolean} `true` if successfully added to the extended type, `false` otherwise\n  * @inner\n  * @ignore\n  */\n function tryHandleExtension(root, field) {\n     var extendedType = field.parent.lookup(field.extend);\n     if (extendedType) {\n         var sisterField = new Field(field.fullName, field.id, field.type, field.rule, undefined, field.options);\n         //do not allow to extend same field twice to prevent the error\n         if (extendedType.get(sisterField.name)) {\n             return true;\n         }\n         sisterField.declaringField = field;\n         field.extensionField = sisterField;\n         extendedType.add(sisterField);\n         return true;\n     }\n     return false;\n }\n\n /**\n  * Called when any object is added to this root or its sub-namespaces.\n  * @param {ReflectionObject} object Object added\n  * @returns {undefined}\n  * @private\n  */\n Root.prototype._handleAdd = function _handleAdd(object) {\n     if (object instanceof Field) {\n\n         if (/* an extension field (implies not part of a oneof) */ object.extend !== undefined && /* not already handled */ !object.extensionField)\n             if (!tryHandleExtension(this, object))\n                 this.deferred.push(object);\n\n     } else if (object instanceof Enum) {\n\n         if (exposeRe.test(object.name))\n             object.parent[object.name] = object.values; // expose enum values as property of its parent\n\n     } else if (!(object instanceof OneOf)) /* everything else is a namespace */ {\n\n         if (object instanceof Type) // Try to handle any deferred extensions\n             for (var i = 0; i < this.deferred.length;)\n                 if (tryHandleExtension(this, this.deferred[i]))\n                     this.deferred.splice(i, 1);\n                 else\n                     ++i;\n         for (var j = 0; j < /* initializes */ object.nestedArray.length; ++j) // recurse into the namespace\n             this._handleAdd(object._nestedArray[j]);\n         if (exposeRe.test(object.name))\n             object.parent[object.name] = object; // expose namespace as property of its parent\n     }\n\n     // The above also adds uppercased (and thus conflict-free) nested types, services and enums as\n     // properties of namespaces just like static code does. This allows using a .d.ts generated for\n     // a static module with reflection-based solutions where the condition is met.\n };\n\n /**\n  * Called when any object is removed from this root or its sub-namespaces.\n  * @param {ReflectionObject} object Object removed\n  * @returns {undefined}\n  * @private\n  */\n Root.prototype._handleRemove = function _handleRemove(object) {\n     if (object instanceof Field) {\n\n         if (/* an extension field */ object.extend !== undefined) {\n             if (/* already handled */ object.extensionField) { // remove its sister field\n                 object.extensionField.parent.remove(object.extensionField);\n                 object.extensionField = null;\n             } else { // cancel the extension\n                 var index = this.deferred.indexOf(object);\n                 /* istanbul ignore else */\n                 if (index > -1)\n                     this.deferred.splice(index, 1);\n             }\n         }\n\n     } else if (object instanceof Enum) {\n\n         if (exposeRe.test(object.name))\n             delete object.parent[object.name]; // unexpose enum values\n\n     } else if (object instanceof Namespace) {\n\n         for (var i = 0; i < /* initializes */ object.nestedArray.length; ++i) // recurse into the namespace\n             this._handleRemove(object._nestedArray[i]);\n\n         if (exposeRe.test(object.name))\n             delete object.parent[object.name]; // unexpose namespaces\n\n     }\n };\n\n // Sets up cyclic dependencies (called in index-light)\n Root._configure = function(Type_, parse_, common_) {\n     Type   = Type_;\n     parse  = parse_;\n     common = common_;\n };\n\n\n// #endregion ORIGINAL CODE\n\n_cjsExports = module.exports;\n\n\n}, () => ({\n  './namespace': _req,\n  './field': _req0,\n  './enum': _req1,\n  './oneof': _req2,\n  './util': _req3,\n}));\nexport { _cjsExports as default };\nexport { __cjsMetaURL }\n"]}