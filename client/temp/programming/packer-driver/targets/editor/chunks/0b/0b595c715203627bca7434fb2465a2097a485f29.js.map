{"version":3,"sources":["file:///C:/chickenStarClient/client/assets/scripts/logic/fight/base/damage/DamageStatisticsData.ts"],"names":["DamageStatisticsInfo","DamageStatisticsData","AbsObjType","RevoltCheatControl","roleId","damage","secDamage","heal","shield","beDamage","kill","ins","_instance","constructor","roleMap","Map","totalKill","bossKill","purge","clear","console","warn","init","nextSec","iterator","getRoleById","id","has","set","get","addBulletDamage","bullet","attack","defanse","damageData","addDamage","addBuffDamage","buff","addBuffTransferDamage","objType","role","atkRole","info","heroFightInfo","isDamage","isShield","defRole","addKill","isBoss"],"mappings":"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","sourcesContent":["import { Vec3, View, game, size, v2, view } from \"cc\";\nimport { AbsRole } from \"../obj/role/AbsRole\";\nimport { AbsObj, AbsObjType } from \"../obj/AbsObj\";\nimport { AbsStateType } from \"../obj/state/AbsState\";\nimport { IClear } from \"../../../../framework/base/IAbs\";\nimport { DamageData } from \"./DamageData\";\nimport { Bullet } from \"../obj/bullet/Bullet\";\nimport { Buff } from \"../buff/Buff\";\nimport { RoleInfo } from \"../obj/role/role/RoleInfo\";\nimport { FightData } from \"../../data/FightData\";\nimport { RevoltCheatControl } from \"../../cheat/RevoltCheatControl\";\n\nexport class DamageStatisticsInfo {\n    roleId: number\n    damage: number = 0//伤害\n    secDamage: number = 0//每秒伤害\n    heal: number = 0 //治疗\n    shield: number = 0//护盾\n    beDamage: number = 0//受伤\n    kill: number = 0//击杀\n}\n\n/** \n * 伤害统计\n *\n */\nexport class DamageStatisticsData implements IClear {\n    private static _instance: DamageStatisticsData;\n    public static get ins() {\n        if (null == this._instance) {\n            this._instance = new DamageStatisticsData();\n        }\n        return this._instance;\n    }\n\n    constructor() {\n\n    }\n    roleMap: Map<number, DamageStatisticsInfo> = new Map()\n    totalKill: number = 0\n    bossKill: number = 0\n\n    purge(): void {\n        this.roleMap.clear()\n        this.totalKill = 0\n        this.bossKill = 0\n        console.warn(\"销毁\")\n    }\n    init() {\n        this.purge()\n    }\n\n    nextSec() {\n        for (const iterator of this.roleMap) {\n            iterator[1].secDamage = 0\n        }\n    }\n\n    getRoleById(id: number) {\n        if (!this.roleMap.has(id)) {\n            this.roleMap.set(id, new DamageStatisticsInfo())\n        }\n        return this.roleMap.get(id)\n    }\n\n    addBulletDamage(bullet: Bullet, attack: AbsRole, defanse: AbsRole, damageData: DamageData) {\n        RevoltCheatControl.ins.addBulletDamage(bullet,attack, defanse, damageData)\n        this.addDamage(attack, defanse, damageData)\n    }\n\n    addBuffDamage(buff: Buff, attack: AbsRole, defanse: AbsRole, damageData: DamageData) {\n        this.addDamage(attack, defanse, damageData)\n    }\n\n    addBuffTransferDamage(defanse: AbsRole, damageData: DamageData) {\n        this.addDamage(null, defanse, damageData)\n    }\n\n    addDamage(attack: AbsRole, defanse: AbsRole, damageData: DamageData) {\n        //记录伤害\n        if (attack && attack.objType == AbsObjType.role) {\n            let atkRole = this.getRoleById((attack.info as RoleInfo).heroFightInfo.id)\n            if (atkRole) {\n                if (damageData.isDamage()) {\n                    atkRole.damage += damageData.damage\n                    atkRole.secDamage += damageData.damage\n                } else {\n                    if (damageData.isShield) {\n                        atkRole.shield += damageData.damage\n                    } else {\n                        atkRole.heal += damageData.damage\n                    }\n\n                }\n            }\n        }\n\n        //记录受伤\n        if (defanse && defanse.objType == AbsObjType.role) {\n            let defRole = this.getRoleById((defanse.info as RoleInfo).heroFightInfo.id)\n            if (defRole) {\n                if (damageData.isDamage()) {\n                    defRole.beDamage += damageData.damage\n                }\n            }\n        }\n    }\n\n    /** 添加击杀 */\n    addKill(attack: AbsRole, defanse: AbsRole) {\n        if (attack && attack.objType == AbsObjType.role) {\n            let atkRole = this.getRoleById((attack.info as RoleInfo).heroFightInfo.id)\n            if (atkRole) {\n                atkRole.kill += 1\n                this.totalKill += 1\n                if (defanse && defanse.info && defanse.info.isBoss) {\n                    this.bossKill += 1\n                }\n            }\n        }\n    }\n\n\n}"]}