{"version":3,"sources":["file:///C:/chickenStarClient/client/assets/scripts/logic/model/hero/herobag/HeroResetPop.ts"],"names":["_decorator","Button","instantiate","Label","Node","Prefab","Sprite","Toggle","ViewPop","proto","Net","HeroDataControl","HeroBagItem","HeroTeamControl","HeroData","ItemPoolMgr","ItemInfo","tab","HeroInfo","CommonItem","HeroItem","ShowTips","ItemData","LangMgr","ccclass","property","VIEW_TYPE","HeroResetPop","_heroId","_view_type","LEVEL","register","onShow","ins","heroId","node","pfb_item","itemTs","getComponent","UpdateContent","getById","setRed","parent","node_hero","switchView","String","toggle_level","isChecked","e","type","view_type","Number","inTeam","Boolean","heroInTeam","node_star_reset","active","STAR","node_level_reset","node_level_title","node_star_title","node_res_node","node_material","node_material_content","destroyAllChildren","heroInfo","showBtn","getHeroLevel","btn_reset","materiaLevellMap","getMaterialByLevel","map","forEach","value","itemId","itemInfo","num","createItem","toggle_star","star","_showBtn","heroStarUpTable","ResetCostItem","resetItemData","getData","ItemTableById","getValue","node_res_sp","setTexture","Icon","getByItemId","node_res_lbl","string","ResetCostNum","materialStarMap","getMaterialByStar","id","itemTab","commonTs","StarUpTab","HeroStarUpTableById","HeroId","HeroStar","level","item","createHeroItem","heroTs","setLevel","setSelect","sendMsg","msg","Msg_ResetTeamSlotLevelReq","heroClass","heroTable","Class","Send","Ptl","ResetTeamSlotLevelReq","starUpTab","materialItem","MaterialNum","ItemTabData","getCount","getCombineString","getLab","Name","Msg_ResetHeroStarReq","ResetHeroStarReq"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMSA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,M,OAAAA,M;AAAoBC,MAAAA,W,OAAAA,W;AAAaC,MAAAA,K,OAAAA,K;AAAOC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,M,OAAAA,M;AAAQC,MAAAA,M,OAAAA,M;AAAQC,MAAAA,M,OAAAA,M;;AAC1EC,MAAAA,O,iBAAAA,O;;AACAC,MAAAA,K,oBAAAA,K;;AACAC,MAAAA,G,iBAAAA,G;;AACAC,MAAAA,e,iBAAAA,e;;AACAC,MAAAA,W,iBAAAA,W;;AACAC,MAAAA,e,iBAAAA,e;;AACAC,MAAAA,Q,iBAAAA,Q;;AACAC,MAAAA,W,iBAAAA,W;;AACAC,MAAAA,Q,iBAAAA,Q;;AACAC,MAAAA,G,kBAAAA,G;;AACAC,MAAAA,Q,kBAAAA,Q;;AACAC,MAAAA,U,kBAAAA,U;;AACAC,MAAAA,Q,kBAAAA,Q;;AACAC,MAAAA,Q,kBAAAA,Q;;AACAC,MAAAA,Q,kBAAAA,Q;;AACAC,MAAAA,O,kBAAAA,O;;;;;;AAtBT;AACA;AACA;AACA;AACA;;;;;OAmBM;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBzB,U;;AACzB0B,MAAAA,S,0BAAAA,S;AAAAA,QAAAA,S,CAAAA,S;AAAAA,QAAAA,S,CAAAA,S;eAAAA,S;QAAAA,S;;8BAKQC,Y,WADZH,OAAO,CAAC,cAAD,C,UAEHC,QAAQ,CAACrB,IAAD,C,UAERqB,QAAQ,CAACrB,IAAD,C,UAGRqB,QAAQ,CAACrB,IAAD,C,UAERqB,QAAQ,CAACrB,IAAD,C,UAGRqB,QAAQ,CAACrB,IAAD,C,UAERqB,QAAQ,CAACrB,IAAD,C,UAERqB,QAAQ,CAACrB,IAAD,C,UAGRqB,QAAQ,CAACpB,MAAD,C,WAERoB,QAAQ,CAACpB,MAAD,C,WAGRoB,QAAQ,CAAClB,MAAD,C,WAERkB,QAAQ,CAAClB,MAAD,C,WAGRkB,QAAQ,CAACxB,MAAD,C,WAERwB,QAAQ,CAACrB,IAAD,C,WAGRqB,QAAQ,CAACnB,MAAD,C,WAERmB,QAAQ,CAACtB,KAAD,C,2BApCb,MACawB,YADb;AAAA;AAAA,8BAC0C;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA,eAsC9BC,OAtC8B,GAsCZ,CAtCY;AAAA,eAuC9BC,UAvC8B,GAuCNH,SAAS,CAACI,KAvCJ;AAAA;;AAwCtCC,QAAAA,QAAQ,GAAS,CAEhB;;AAEDC,QAAAA,MAAM,GAAS;AACX,eAAKH,UAAL,GAAkBH,SAAS,CAACI,KAA5B;AACA,eAAKF,OAAL,GAAe;AAAA;AAAA,kDAAgBK,GAAhB,CAAoBC,MAAnC;AACA,cAAIC,IAAI,GAAGjC,WAAW,CAAC,KAAKkC,QAAN,CAAtB;AACA,cAAIC,MAAM,GAAGF,IAAI,CAACG,YAAL;AAAA;AAAA,yCAAb;AACAD,UAAAA,MAAM,CAACE,aAAP,CAAqB;AAAA;AAAA,oCAASN,GAAT,CAAaO,OAAb,CAAqB,KAAKZ,OAA1B,CAArB;AACAS,UAAAA,MAAM,CAACI,MAAP,CAAc,KAAd;AACAN,UAAAA,IAAI,CAACO,MAAL,GAAc,KAAKC,SAAnB;AAEA,eAAKC,UAAL,CAAgB,IAAhB,EAAsBC,MAAM,CAAC,KAAKhB,UAAN,CAA5B;AACA,eAAKiB,YAAL,CAAkBC,SAAlB,GAA8B,IAA9B;AACH;;AACDH,QAAAA,UAAU,CAACI,CAAD,EAAgBC,IAAhB,EAA8B;AACpC,cAAIC,SAAS,GAAGC,MAAM,CAACF,IAAD,CAAtB;AACA,eAAKpB,UAAL,GAAkBqB,SAAlB;AACA;;AACA,cAAIE,MAAe,GAAGC,OAAO,CAAC;AAAA;AAAA,kDAAgBpB,GAAhB,CAAoBqB,UAApB,CAA+B,KAAK1B,OAApC,CAAD,CAA7B;AACA,eAAK2B,eAAL,CAAqBC,MAArB,GAA8B,CAACJ,MAAD,IAAWF,SAAS,KAAKxB,SAAS,CAAC+B,IAAjE;AACA,eAAKC,gBAAL,CAAsBF,MAAtB,GAA+B,CAACJ,MAAD,IAAWF,SAAS,KAAKxB,SAAS,CAACI,KAAlE;AACA,eAAK6B,gBAAL,CAAsBH,MAAtB,GAA+BN,SAAS,KAAKxB,SAAS,CAACI,KAAvD;AACA,eAAK8B,eAAL,CAAqBJ,MAArB,GAA8BN,SAAS,KAAKxB,SAAS,CAAC+B,IAAtD;AACA,eAAKI,aAAL,CAAmBL,MAAnB,GAA4BN,SAAS,KAAKxB,SAAS,CAAC+B,IAApD;AACA,eAAKK,aAAL,CAAmBN,MAAnB,GAA4B,CAACJ,MAA7B;AACA,eAAKW,qBAAL,CAA2BC,kBAA3B;AACA,cAAIC,QAAQ,GAAG;AAAA;AAAA,oCAAShC,GAAT,CAAaO,OAAb,CAAqB,KAAKZ,OAA1B,CAAf;;AACA,kBAAQsB,SAAR;AACI,iBAAKxB,SAAS,CAACI,KAAf;AACI;AACA,kBAAIoC,OAAO,GAAGd,MAAM,IAAIa,QAAQ,CAACE,YAAT,KAA0B,CAAlD;AACA,mBAAKC,SAAL,CAAejC,IAAf,CAAoBqB,MAApB,GAA6BU,OAA7B;;AACA,kBAAId,MAAJ,EAAY;AACR,qBAAKU,aAAL,CAAmBN,MAAnB,GAA4B,IAA5B;AACA,qBAAKV,YAAL,CAAkBC,SAAlB,GAA8B,IAA9B;AACA,sBAAMsB,gBAAgB,GAAGJ,QAAQ,CAACK,kBAAT,CAA4B,CAA5B,EAA+BL,QAAQ,CAACE,YAAT,EAA/B,EAAwDI,GAAjF;AACAF,gBAAAA,gBAAgB,CAACG,OAAjB,CAAyB,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACxC;AACA,sBAAIC,QAAQ,GAAG;AAAA;AAAA,6CAAf;AACAA,kBAAAA,QAAQ,CAACD,MAAT,GAAkBA,MAAlB;AACAC,kBAAAA,QAAQ,CAACC,GAAT,GAAeH,KAAf;AACA,sBAAItC,IAAI,GAAG;AAAA;AAAA,kDAAYF,GAAZ,CAAgB4C,UAAhB,CAA2BF,QAA3B,EAAoC,KAAKZ,qBAAzC,CAAX;AACH,iBAND;AAOH;;AACD;;AACJ,iBAAKrC,SAAS,CAAC+B,IAAf;AACI;AACA,mBAAKqB,WAAL,CAAiB/B,SAAjB,GAA6B,IAA7B;AACA,kBAAIgC,IAAI,GAAGd,QAAQ,CAACc,IAApB;AACA,mBAAKxB,eAAL,CAAqBC,MAArB,GAA8B,KAA9B;AACA,mBAAKM,aAAL,CAAmBN,MAAnB,GAA4B,KAA5B;;AACA,kBAAIwB,QAAQ,GAAGD,IAAI,IAAI,CAAvB;;AACA,mBAAKX,SAAL,CAAejC,IAAf,CAAoBqB,MAApB,GAA6BwB,QAA7B;;AAEA,kBAAID,IAAI,GAAG,CAAX,EAAc;AACV,qBAAKxB,eAAL,CAAqBC,MAArB,GAA8B,IAA9B;AACA,qBAAKM,aAAL,CAAmBN,MAAnB,GAA4B,KAA5B;AACH,eAHD,MAGO;AACH,qBAAKM,aAAL,CAAmBN,MAAnB,GAA4B,IAA5B,CADG,CAEH;;AACA,qBAAKK,aAAL,CAAmBL,MAAnB,GAA4BS,QAAQ,CAACgB,eAAT,CAAyBC,aAAzB,GAAuC,CAAnE;;AACA,oBAAIjB,QAAQ,CAACgB,eAAT,CAAyBC,aAA7B,EAA4C;AACxC,wBAAMC,aAAa,GAAG;AAAA;AAAA,kCAAIC,OAAJ,GAAcC,aAAd,CAA4BC,QAA5B,CAAqCrB,QAAQ,CAACgB,eAAT,CAAyBC,aAA9D,CAAtB;AACA,uBAAKK,WAAL,CAAiBC,UAAjB,CAA4BL,aAAa,CAACM,IAA1C;AACA,wBAAMd,QAAQ,GAAG;AAAA;AAAA,4CAAS1C,GAAT,CAAayD,WAAb,CAAyBzB,QAAQ,CAACgB,eAAT,CAAyBC,aAAlD,CAAjB;AACA,uBAAKS,YAAL,CAAkBC,MAAlB,GAA2B,CAACjB,QAAQ,GAACA,QAAQ,CAACC,GAAV,GAAc,CAAvB,IAA4B,GAA5B,GAAkCX,QAAQ,CAACgB,eAAT,CAAyBY,YAAtF;AACH;;AACD,sBAAMC,eAAe,GAAG7B,QAAQ,CAAC8B,iBAAT,EAAxB;AACAD,gBAAAA,eAAe,CAACtB,OAAhB,CAAwB,CAACC,KAAD,EAAQuB,EAAR,KAAe;AACnC;;AACA;AACA,sBAAIC,OAAO,GAAG;AAAA;AAAA,kCAAIb,OAAJ,GAAcC,aAAd,CAA4BC,QAA5B,CAAqCU,EAArC,CAAd;;AACA,sBAAIC,OAAJ,EAAa;AACT,wBAAItB,QAAQ,GAAG;AAAA;AAAA,+CAAf;AACAA,oBAAAA,QAAQ,CAACD,MAAT,GAAkBsB,EAAlB;AACArB,oBAAAA,QAAQ,CAACC,GAAT,GAAeH,KAAf;AACA,wBAAItC,IAAI,GAAG;AAAA;AAAA,oDAAYF,GAAZ,CAAgB4C,UAAhB,CAA2BF,QAA3B,EAAoC,KAAKZ,qBAAzC,CAAX;AACA,wBAAImC,QAAoB,GAAG/D,IAAI,CAACG,YAAL;AAAA;AAAA,iDAA3B;AACA;AACA;AACA;AACH,mBATD,MASO;AACH,wBAAI6D,SAAS,GAAG;AAAA;AAAA,oCAAIf,OAAJ,GAAcgB,mBAAd,CAAkCd,QAAlC,CAA2CU,EAA3C,CAAhB;AACA/B,oBAAAA,QAAQ,GAAG;AAAA;AAAA,+CAAX;AACAA,oBAAAA,QAAQ,CAACS,MAAT,GAAkByB,SAAS,CAACE,MAA5B;AACApC,oBAAAA,QAAQ,CAAC+B,EAAT,GAAc,CAAd;AACA/B,oBAAAA,QAAQ,CAACc,IAAT,GAAgBoB,SAAS,CAACG,QAA1B;AACArC,oBAAAA,QAAQ,CAACsC,KAAT,GAAiB,CAAjB;AACA,wBAAIC,IAAI,GAAG;AAAA;AAAA,oDAAYvE,GAAZ,CAAgBwE,cAAhB,CAA+BxC,QAA/B,EAAyC,KAAKF,qBAA9C,CAAX;AACA,wBAAI2C,MAAgB,GAAGF,IAAI,CAAClE,YAAL;AAAA;AAAA,6CAAvB;AACAoE,oBAAAA,MAAM,CAACC,QAAP,CAAgBlC,KAAhB;AACAiC,oBAAAA,MAAM,CAACE,SAAP,CAAiB,KAAjB;AACH;AACJ,iBAzBD;AA0BH;;AACD;;AACJ;AACI;AAtER;AAwEH;;AACDC,QAAAA,OAAO,GAAG;AACN,cAAI,KAAKhF,UAAL,KAAoBH,SAAS,CAACI,KAAlC,EAAyC;AACrC,gBAAIgF,GAAG,GAAG,IAAI;AAAA;AAAA,gCAAMC,yBAAV,EAAV;AACAD,YAAAA,GAAG,CAACE,SAAJ,GAAgB;AAAA;AAAA,sCAAS/E,GAAT,CAAaO,OAAb,CAAqB,KAAKZ,OAA1B,EAAmCqF,SAAnC,CAA6CC,KAA7D;AACA;AAAA;AAAA,4BAAIC,IAAJ,CAAS;AAAA;AAAA,gCAAMC,GAAN,CAAUC,qBAAnB,EAA0CP,GAA1C;AACH,WAJD,MAIO;AACH;AACA,iBAAKlF,OAAL,GAAe;AAAA;AAAA,oDAAgBK,GAAhB,CAAoBC,MAAnC;AACA,gBAAIoF,SAAS,GAAG;AAAA;AAAA,sCAASrF,GAAT,CAAaO,OAAb,CAAqB,KAAKZ,OAA1B,EAAmCqD,eAAnD;AACA,gBAAIsC,YAAY,GAAGD,SAAS,CAACpC,aAA7B;AACA,gBAAIsC,WAAW,GAAGF,SAAS,CAACzB,YAA5B;AACA,gBAAI4B,WAAW,GAAG;AAAA;AAAA,4BAAIrC,OAAJ,GAAcC,aAAd,CAA4BC,QAA5B,CAAqCiC,YAArC,CAAlB;;AACA,gBAAGA,YAAY,IAAE;AAAA;AAAA,sCAAStF,GAAT,CAAayF,QAAb,CAAsBH,YAAtB,IAAoCC,WAArD,EAAiE;AAC7D;AACA;AACA;AAAA;AAAA,wCAAS;AAAA;AAAA,sCAAQG,gBAAR,CAAyB,mBAAzB,EAA8C,CAAC;AAAA;AAAA,sCAAQC,MAAR,CAAeH,WAAW,CAACI,IAA3B,CAAD,CAA9C,CAAT;AACA;AACH;;AACD,gBAAIf,GAAG,GAAG,IAAI;AAAA;AAAA,gCAAMgB,oBAAV,EAAV;AACAhB,YAAAA,GAAG,CAAC5E,MAAJ,GAAa;AAAA;AAAA,oDAAgBD,GAAhB,CAAoBC,MAAjC;AACA;AAAA;AAAA,4BAAIiF,IAAJ,CAAS;AAAA;AAAA,gCAAMC,GAAN,CAAUW,gBAAnB,EAAqCjB,GAArC;AACH;AACJ;;AApKqC,O;;;;;iBAEb,I;;;;;;;iBAED,I;;;;;;;iBAGC,I;;;;;;;iBAED,I;;;;;;;iBAGF,I;;;;;;;iBAEJ,I;;;;;;;iBAEY,I;;;;;;;iBAGX,I;;;;;;;iBAEI,I;;;;;;;iBAGA,I;;;;;;;iBAED,I;;;;;;;iBAGF,I;;;;;;;iBAEE,I;;;;;;;iBAGA,I;;;;;;;iBAEA,I","sourcesContent":["/*\r\n * @Date: 2024-05-14 09:50:32\r\n * @LastEditors: wzq\r\n * @LastEditTime: 2024-11-22 15:49:37\r\n */\r\n\r\nimport { _decorator, Button, EventTouch, instantiate, Label, Node, Prefab, Sprite, Toggle } from 'cc';\r\nimport { ViewPop } from '../../../../framework/base/ViewPop';\r\nimport { proto } from 'client_protocol';\r\nimport { Net } from '../../../net/Net';\r\nimport { HeroDataControl } from './HeroDataControl';\r\nimport { HeroBagItem } from './HeroBagItem';\r\nimport { HeroTeamControl } from '../HeroTeamControl';\r\nimport { HeroData } from '../HeroData';\r\nimport { ItemPoolMgr } from '../../item/ItemPoolMgr';\r\nimport { ItemInfo } from '../../item/ItemInfo';\r\nimport { tab } from '../../../../Table/table_gen';\r\nimport { HeroInfo } from '../HeroInfo';\r\nimport { CommonItem } from '../../item/CommonItem';\r\nimport { HeroItem } from '../../item/HeroItem';\r\nimport { ShowTips } from '../../../mgr/UIMgr';\r\nimport { ItemData } from '../../item/ItemData';\r\nimport { LangMgr } from '../../../mgr/LangMgr';\r\nconst { ccclass, property } = _decorator;\r\nenum VIEW_TYPE {\r\n    LEVEL = 1,\r\n    STAR\r\n}\r\n@ccclass('HeroResetPop')\r\nexport class HeroResetPop extends ViewPop {\r\n    @property(Node)\r\n    node_level_reset: Node = null;\r\n    @property(Node)\r\n    node_star_reset: Node = null;\r\n\r\n    @property(Node)\r\n    node_level_title: Node = null;\r\n    @property(Node)\r\n    node_star_title: Node = null;\r\n\r\n    @property(Node)\r\n    node_material: Node = null;\r\n    @property(Node)\r\n    node_hero: Node = null;\r\n    @property(Node)\r\n    node_material_content: Node = null;\r\n\r\n    @property(Prefab)\r\n    pfb_item: Prefab = null;\r\n    @property(Prefab)\r\n    pfb_material: Prefab = null;\r\n\r\n    @property(Toggle)\r\n    toggle_level: Toggle = null;\r\n    @property(Toggle)\r\n    toggle_star: Toggle = null;\r\n\r\n    @property(Button)\r\n    btn_reset: Button = null;\r\n    @property(Node)\r\n    node_res_node: Node = null;\r\n\r\n    @property(Sprite)\r\n    node_res_sp: Sprite = null;\r\n    @property(Label)\r\n    node_res_lbl: Label = null;\r\n\r\n    private _heroId: number = 0;\r\n    private _view_type: VIEW_TYPE = VIEW_TYPE.LEVEL;\r\n    register(): void {\r\n\r\n    }\r\n   \r\n    onShow(): void {\r\n        this._view_type = VIEW_TYPE.LEVEL;\r\n        this._heroId = HeroDataControl.ins.heroId;\r\n        let node = instantiate(this.pfb_item);\r\n        let itemTs = node.getComponent(HeroBagItem);\r\n        itemTs.UpdateContent(HeroData.ins.getById(this._heroId));\r\n        itemTs.setRed(false);\r\n        node.parent = this.node_hero;\r\n\r\n        this.switchView(null, String(this._view_type));\r\n        this.toggle_level.isChecked = true;\r\n    }\r\n    switchView(e: EventTouch, type: String) {\r\n        let view_type = Number(type);\r\n        this._view_type = view_type;\r\n        /* 是否在队伍中 */\r\n        let inTeam: boolean = Boolean(HeroTeamControl.ins.heroInTeam(this._heroId))\r\n        this.node_star_reset.active = !inTeam && view_type === VIEW_TYPE.STAR;\r\n        this.node_level_reset.active = !inTeam && view_type === VIEW_TYPE.LEVEL;\r\n        this.node_level_title.active = view_type === VIEW_TYPE.LEVEL;\r\n        this.node_star_title.active = view_type === VIEW_TYPE.STAR;\r\n        this.node_res_node.active = view_type === VIEW_TYPE.STAR;\r\n        this.node_material.active = !inTeam\r\n        this.node_material_content.destroyAllChildren();\r\n        let heroInfo = HeroData.ins.getById(this._heroId);\r\n        switch (view_type) {\r\n            case VIEW_TYPE.LEVEL:\r\n                /* 显示英雄等级重置之后的材料 */\r\n                let showBtn = inTeam && heroInfo.getHeroLevel() > 1;\r\n                this.btn_reset.node.active = showBtn\r\n                if (inTeam) {\r\n                    this.node_material.active = true;\r\n                    this.toggle_level.isChecked = true;\r\n                    const materiaLevellMap = heroInfo.getMaterialByLevel(1, heroInfo.getHeroLevel()).map;\r\n                    materiaLevellMap.forEach((value, itemId) => {\r\n                        /* 创建材料 */\r\n                        let itemInfo = new ItemInfo();\r\n                        itemInfo.itemId = itemId;\r\n                        itemInfo.num = value;\r\n                        let node = ItemPoolMgr.ins.createItem(itemInfo,this.node_material_content);\r\n                    })\r\n                }\r\n                break;\r\n            case VIEW_TYPE.STAR:\r\n                /* 6星以上才可以重置 */\r\n                this.toggle_star.isChecked = true;\r\n                let star = heroInfo.star;\r\n                this.node_star_reset.active = false;\r\n                this.node_material.active = false;\r\n                let _showBtn = star >= 6;\r\n                this.btn_reset.node.active = _showBtn\r\n\r\n                if (star < 6) {\r\n                    this.node_star_reset.active = true;\r\n                    this.node_material.active = false;\r\n                } else {\r\n                    this.node_material.active = true;\r\n                    // 显示星级重置之后的材料\r\n                    this.node_res_node.active = heroInfo.heroStarUpTable.ResetCostItem>0\r\n                    if (heroInfo.heroStarUpTable.ResetCostItem) {\r\n                        const resetItemData = tab.getData().ItemTableById.getValue(heroInfo.heroStarUpTable.ResetCostItem);\r\n                        this.node_res_sp.setTexture(resetItemData.Icon);\r\n                        const itemInfo = ItemData.ins.getByItemId(heroInfo.heroStarUpTable.ResetCostItem);\r\n                        this.node_res_lbl.string = (itemInfo?itemInfo.num:0) + \"/\" + heroInfo.heroStarUpTable.ResetCostNum\r\n                    }\r\n                    const materialStarMap = heroInfo.getMaterialByStar();\r\n                    materialStarMap.forEach((value, id) => {\r\n                        /* 创建材料 */\r\n                        /* 判断是否是英雄 */\r\n                        let itemTab = tab.getData().ItemTableById.getValue(id);\r\n                        if (itemTab) {\r\n                            let itemInfo = new ItemInfo();\r\n                            itemInfo.itemId = id;\r\n                            itemInfo.num = value;\r\n                            let node = ItemPoolMgr.ins.createItem(itemInfo,this.node_material_content);\r\n                            let commonTs: CommonItem = node.getComponent(CommonItem);\r\n                            /* 蛋仔星级 */\r\n                            // let commonCostTab = tab.getData().HeroCommonCostTableById.getValue(id);\r\n                            // commonTs.setStar(commonCostTab.HeroStar);\r\n                        } else {\r\n                            let StarUpTab = tab.getData().HeroStarUpTableById.getValue(id)\r\n                            heroInfo = new HeroInfo();\r\n                            heroInfo.itemId = StarUpTab.HeroId;\r\n                            heroInfo.id = 0;\r\n                            heroInfo.star = StarUpTab.HeroStar;\r\n                            heroInfo.level = 1;\r\n                            let item = ItemPoolMgr.ins.createHeroItem(heroInfo, this.node_material_content);\r\n                            let heroTs: HeroItem = item.getComponent(HeroItem);\r\n                            heroTs.setLevel(value);\r\n                            heroTs.setSelect(false);\r\n                        }\r\n                    })\r\n                }\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    sendMsg() {\r\n        if (this._view_type === VIEW_TYPE.LEVEL) {\r\n            let msg = new proto.Msg_ResetTeamSlotLevelReq()\r\n            msg.heroClass = HeroData.ins.getById(this._heroId).heroTable.Class;\r\n            Net.Send(proto.Ptl.ResetTeamSlotLevelReq, msg)\r\n        } else {\r\n            /* 重置需要消耗道具 */\r\n            this._heroId = HeroDataControl.ins.heroId;\r\n            let starUpTab = HeroData.ins.getById(this._heroId).heroStarUpTable;\r\n            let materialItem = starUpTab.ResetCostItem;\r\n            let MaterialNum = starUpTab.ResetCostNum;\r\n            let ItemTabData = tab.getData().ItemTableById.getValue(materialItem)\r\n            if(materialItem&&ItemData.ins.getCount(materialItem)<MaterialNum){\r\n                //let str = `重置需要消耗的材料为 ${LangMgr.getLab(ItemTabData.Name)} 当前拥有的数量不足`\r\n                //ShowTips(str);\r\n                ShowTips(LangMgr.getCombineString(\"Tips_itemshortage\", [LangMgr.getLab(ItemTabData.Name)]));\r\n                return;\r\n            }\r\n            let msg = new proto.Msg_ResetHeroStarReq()\r\n            msg.heroId = HeroDataControl.ins.heroId;\r\n            Net.Send(proto.Ptl.ResetHeroStarReq, msg)\r\n        }\r\n    }\r\n}\r\n\r\n\r\n"]}