{"version":3,"sources":["file:///C:/chickenStarClient/client/assets/scripts/logic/fight/base/obj/AbsOwner.ts"],"names":["AbsOwner","_decorator","FightAttrData","FrameControl","ccclass","property","get","objId","owner","pool","length","pop","setObjId","put","obj","reset","push","destroy","constructor","objType","isLock","attrData","abs","id","getObj","setOwner","attrCopy","attr","copy","lockAttr","info","getAttrData","clear","recycle","ins","getObjById"],"mappings":"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","sourcesContent":["import { Vec3, _decorator } from \"cc\";\nimport { FightAttrData } from \"../../data/FightAttrData\";\nimport { AbsObj, AbsObjType } from \"./AbsObj\";\nimport { FrameControl } from \"../frame/FrameControl\";\nimport { AbsRole } from \"./role/AbsRole\";\n\nconst { ccclass, property } = _decorator;\n\n/** 归属\n * 子弹、buff，记录来源\n */\nexport class AbsOwner {\n\n    static pool: AbsOwner[] = []\n\n    static get(objId: number): AbsOwner {\n        let owner\n        if (this.pool.length > 0) {\n            owner = this.pool.pop()\n        } else {\n            owner = new AbsOwner()\n        }\n        owner.setObjId(objId)\n        return owner\n    }\n\n    static put(obj: AbsOwner) {\n        obj.reset()\n        this.pool.push(obj)\n    }\n\n    static destroy() {\n        this.pool.length = 0\n    }\n\n\n    objId: number\n    objType: AbsObjType\n    isLock: boolean = false //锁定\n    private attrData: FightAttrData\n\n    abs: AbsRole\n\n    constructor() {\n    }\n\n    setObjId(id: number) {\n        this.objId = id\n        this.isLock = false\n        this.getObj()\n        if (this.abs) {\n            //初始化属性\n            this.objType = this.abs.objType\n        }\n    }\n    setOwner(owner: AbsOwner) {\n        this.objId = owner.objId\n        this.objType = owner.objType\n        this.isLock = true\n        this.attrCopy(owner.attrData)\n    }\n    attrCopy(attr: FightAttrData) {\n        if (this.attrData == null) {\n            this.attrData = new FightAttrData()\n        }\n        this.attrData.copy(attr)\n    }\n\n    lockAttr() {\n        if (this.isLock) {\n            return\n        }\n        this.isLock = true\n        this.attrCopy(this.abs.info.attrData)\n        this.abs = null\n    }\n\n    getAttrData() {\n        if (this.isLock) {\n            return this.attrData\n        }\n        if (this.abs) {\n            return this.abs.info.attrData\n        }\n    }\n\n    reset() {\n        this.objId = 0\n        this.objType = 0\n        this.isLock = false\n        this.abs = null\n        if (this.attrData) {\n            this.attrData.clear()\n        }\n    }\n\n    recycle() {\n        AbsOwner.put(this)\n    }\n\n    getObj() {\n        if (this.abs == null) {\n            this.abs = FrameControl.ins.getObjById(this.objId) as AbsRole\n        }\n        return this.abs\n    }\n\n\n}"]}