{"version":3,"sources":["file:///C:/chickenStarClient/client/assets/scripts/logic/net/Net.ts"],"names":["Net","sys","log","error","resources","assetManager","DataViewWriter","DataViewReader","LocalEvent","NetStateEvent","EventMgr","proto","Global","ChannelMgr","Func","PREVIEW","MSG_ID_LEN","Connect","url","m_Url","Reconnect","Disconnect","_isReconnect","_isQuit","m_Ws","isReconnect","isQuit","close","isNative","startsWith","WebSocket","getWssCacert","binaryType","onopen","onOpen","bind","onclose","onClose","onerror","onError","onmessage","onMessage","Send","ptl","message","readyState","OPEN","Ptl","console","JSON","stringify","isDebug","isDevChannel","str","getItem","parse","push","setItem","buf","constructor","encode","finish","writer","ArrayBuffer","length","setUint16","i","setInt8","markEnd","FinishStageReq","getLen","send","getArrayBuffer","ev","emitNetState","CONNCET","reason","CLOSE","reader","data","getUint16","undefined","packagaLen","unit8","Uint8Array","getBuffer","getOffset","getPos","pb","decode","code","toNumber52","emitMsg","emitLocal","LocalEvent_Common_Net_ErrorCode","m_RecvCallback","pbData","key","valueType","toNumber","RecvCallback","callback","uuid","getInfoWithPath","utils","getUrlWithUuid","nativeExt","isConnect"],"mappings":"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","sourcesContent":["import { DataViewWriter, DataViewReader } from \"./DataViewRW\";\r\nimport { LocalEvent, NetStateEvent } from \"../define/LocalEvent\";\r\nimport { sys, log, director, error, resources, assetManager } from \"cc\";\r\nimport { EventMgr } from \"../mgr/EventMgr\";\r\nimport { proto } from \"client_protocol\";\r\nimport { Global } from \"../../Global\";\r\nimport { ChannelMgr } from \"../../channel/ChannelMgr\";\r\nimport { Func } from \"../utils/Func\";\r\nimport { PREVIEW } from \"cc/env\";\r\nconst MSG_ID_LEN = 2;\r\n\r\ndeclare let WebSocket: WebSocket & any;\r\n\r\n\r\nexport class Net {\r\n    protected static m_Ws: WebSocket = null;\r\n    protected static m_Url: string = null;\r\n\r\n    protected static m_RecvCallback: (ptl: number) => void;\r\n    static isReconnect: boolean = false\r\n    static isQuit: boolean = false\r\n    public static Connect(url: string): boolean {\r\n        Net.m_Url = url;\r\n        return Net.Reconnect();\r\n    }\r\n\r\n    public static Disconnect(_isReconnect?: boolean, _isQuit?: boolean) {\r\n        if (Net.m_Ws !== null) {\r\n            Net.isReconnect = _isReconnect\r\n            Net.isQuit = _isQuit\r\n            Net.m_Ws.close();\r\n            Net.m_Ws = null;\r\n        }\r\n    }\r\n\r\n    public static Reconnect(): boolean {\r\n        if (Net.m_Url === null) {\r\n            return false;\r\n        }\r\n\r\n        Net.Disconnect();\r\n        if (sys.isNative && Net.m_Url.startsWith(\"wss\")) {\r\n            // We should pass the cacert to libwebsockets used in native platform, otherwise the wss connection would be closed.\\\r\n            Net.m_Ws = new WebSocket(Net.m_Url, [], Net.getWssCacert());\r\n        } else {\r\n            Net.m_Ws = new WebSocket(Net.m_Url);\r\n        }\r\n\r\n        Net.m_Ws.binaryType = 'arraybuffer';\r\n        Net.m_Ws.onopen = Net.onOpen.bind(this);\r\n        Net.m_Ws.onclose = Net.onClose.bind(this);\r\n        Net.m_Ws.onerror = Net.onError.bind(this);\r\n        Net.m_Ws.onmessage = Net.onMessage.bind(this);\r\n        return true;\r\n    }\r\n\r\n    public static Send(ptl: number, message?: any) {\r\n        if (!Net.m_Ws || Net.m_Ws.readyState !== WebSocket.OPEN) {\r\n            return;\r\n        }\r\n        if (message == null) {\r\n            message = new proto[\"Msg_\" + (proto.Ptl[ptl])]()\r\n        }\r\n\r\n        console.log(`===>>> 发送协议=${proto.Ptl[ptl]},参数为=${JSON.stringify(message)}`)\r\n        \r\n        if (Global.isDebug && ChannelMgr.isDevChannel) {\r\n            let str = Func.getItem(\"test_message\")\r\n            if (str == null || str == \"\") {\r\n                str = []\r\n            } else {\r\n                str = JSON.parse(str)\r\n            }\r\n            str.push({ ptl: ptl, message: JSON.stringify(message) })\r\n            Func.setItem(\"test_message\", JSON.stringify(str))\r\n        }\r\n\r\n        //encode\r\n        let buf = message.constructor.encode(message).finish();\r\n\r\n        let writer = new DataViewWriter(new ArrayBuffer(buf.length + MSG_ID_LEN));\r\n        writer.setUint16(ptl); //协议号\r\n\r\n        //协议内容\r\n        for (var i = 0; i < buf.length; ++i) {\r\n            writer.setInt8(buf[i])\r\n        }\r\n        writer.markEnd();\r\n        if (ptl == proto.Ptl.FinishStageReq && PREVIEW){\r\n            console.error(\"---------FinishStageReq len\",writer.getLen())\r\n        }\r\n\r\n        Net.m_Ws.send(writer.getArrayBuffer());\r\n    }\r\n\r\n    protected static onOpen(ev: Event) {\r\n        log(\"onOpen~~~~~\" + Net.m_Ws.readyState);\r\n        if (Net.m_Ws.readyState == WebSocket.OPEN) {\r\n            EventMgr.emitNetState(NetStateEvent.CONNCET, NetStateEvent.CONNCET)\r\n        }\r\n    }\r\n\r\n    protected static onClose(ev: CloseEvent) {\r\n        log(\"onClose~~~~~\" + ev.reason);\r\n        if (Net.isQuit) {\r\n            Net.isQuit = false\r\n            return\r\n        }\r\n        if (Net.isReconnect) {\r\n            Net.isReconnect = false\r\n            Net.Reconnect()\r\n            return\r\n        }\r\n        // Net.stopSendPing();\r\n        EventMgr.emitNetState(NetStateEvent.CLOSE)\r\n    }\r\n\r\n    protected static onError(ev: Event) {\r\n        log(\"onError~~~~~\", ev);\r\n    }\r\n\r\n    protected static onMessage(ev: MessageEvent) {\r\n        let reader = new DataViewReader(ev.data)\r\n        if (reader.getLen() < MSG_ID_LEN) {\r\n            //包太小\r\n            error(\"msg len Error!!!\")\r\n            Net.Disconnect();\r\n            return\r\n        }\r\n\r\n        let ptl = reader.getUint16();\r\n        if ((proto.Ptl[ptl]) == undefined) {\r\n            console.log(\"ptl 无法解析\", ptl)\r\n            return\r\n        }\r\n        let packagaLen = reader.getLen() - MSG_ID_LEN\r\n        let unit8 = new Uint8Array(reader.getBuffer(), reader.getOffset() + reader.getPos(), packagaLen)\r\n        let pb = proto[\"Msg_\" + (proto.Ptl[ptl])].decode(unit8)\r\n        pb.error = pb.error || { code: 0}\r\n        if (Global.isDebug) {\r\n            // console.log(`<<<=== 收到协议=${proto.Ptl[ptl]} 参数为=`, JSON.stringify(pb))\r\n            console.log(`<<<=== 收到协议=${proto.Ptl[ptl]} 参数为=`, pb)\r\n        }\r\n\r\n        Net.toNumber52(pb)\r\n\r\n        EventMgr.emitMsg(ptl, pb)\r\n        EventMgr.emitLocal(LocalEvent.LocalEvent_Common_Net_ErrorCode, pb, ptl)\r\n\r\n        if (Net.m_RecvCallback) {\r\n            Net.m_RecvCallback(ptl)\r\n        }\r\n    }\r\n\r\n    static valueType\r\n    static toNumber52(pbData: any) {\r\n        for (const key in pbData) {\r\n            Net.valueType = typeof pbData[key]\r\n            if (Net.valueType == \"object\") {\r\n                if (pbData[key]) {\r\n                    if (pbData[key][\"__isLong__\"]) {\r\n                        pbData[key] = pbData[key].toNumber()\r\n                    } else {\r\n                        Net.toNumber52(pbData[key])\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public static set RecvCallback(callback: (ptl: number) => void) {\r\n        Net.m_RecvCallback = callback;\r\n    }\r\n\r\n    private static getWssCacert() {\r\n        let uuid = resources.getInfoWithPath('cacert').uuid;\r\n        return assetManager.utils.getUrlWithUuid(uuid, { isNative: true, nativeExt: '.pem' });\r\n    }\r\n\r\n    /**\r\n     * 是否为链接状态\r\n     * @returns \r\n     */\r\n    public static isConnect() {\r\n        if (!Net.m_Ws || Net.m_Ws.readyState !== WebSocket.OPEN) {\r\n            return false\r\n        }\r\n        return true\r\n    }\r\n}"]}