{"version":3,"sources":["file:///C:/chickenStarClient/client/assets/scripts/logic/model/role/roleInfo/RoleInfoNoticePop.ts"],"names":["_decorator","Label","ViewPop","Http","LoginData","Func","RedMgr","RedDotType","RoleControl","ccclass","property","RoleInfoNoticePop","register","onShow","addr","ins","loginServerTab","NoticeAddr","request","host","method","reqParam","cb","responseJson","length","notices","sort","a","b","created_at","newNotice","initView","notice","wordLab","string","content","setItem","noticeRed","refreshEvent"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAuBC,MAAAA,K,OAAAA,K;;AACvBC,MAAAA,O,iBAAAA,O;;AACFC,MAAAA,I;;AACEC,MAAAA,S,iBAAAA,S;;AACAC,MAAAA,I,iBAAAA,I;;AACAC,MAAAA,M,iBAAAA,M;;AACAC,MAAAA,U,iBAAAA,U;;AACAC,MAAAA,W,iBAAAA,W;;;;;;;;;OACH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBV,U;AAE9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;mCAGaW,iB,WADZF,OAAO,CAAC,mBAAD,C,UAEHC,QAAQ,CAACT,KAAD,C,2BAFb,MACaU,iBADb;AAAA;AAAA,8BAC+C;AAAA;AAAA;;AAAA;AAAA;;AAG3CC,QAAAA,QAAQ,GAAS,CAEhB;;AACDC,QAAAA,MAAM,GAAS;AACX,cAAIC,IAAI,GAAG;AAAA;AAAA,sCAAUC,GAAV,CAAcC,cAAd,CAA6BC,UAAxC;AACA;AAAA;AAAA,4BAAKC,OAAL,CAAa;AACTC,YAAAA,IAAI,EAAEL,IADG;AAETM,YAAAA,MAAM,EAAE,KAFC;AAGTC,YAAAA,QAAQ,EAAE,EAHD;AAITC,YAAAA,EAAE,EAAGC,YAAD,IAAkB;AAClB;AACA,kBAAIA,YAAY,IAAEA,YAAY,CAACC,MAAb,GAAoB,CAAtC,EAAyC;AACrC,oBAAIC,OAAkB,GAACF,YAAvB;AAEAE,gBAAAA,OAAO,CAACC,IAAR,CAAa,CAACC,CAAD,EAAGC,CAAH,KAAO;AAChB,yBAAOA,CAAC,CAACC,UAAF,GAAaF,CAAC,CAACE,UAAtB;AACH,iBAFD;AAIA,oBAAIC,SAAS,GAACL,OAAO,CAAC,CAAD,CAArB;AACA,qBAAKM,QAAL,CAAcD,SAAd,EARqC,CASrC;AACA;AACA;AAEH;AAEJ;AArBQ,WAAb;AAuBH;;AACDC,QAAAA,QAAQ,CAACC,MAAD,EAAY;AAChB,eAAKC,OAAL,CAAaC,MAAb,GAAoBF,MAAM,CAACG,OAA3B;AACA;AAAA;AAAA,4BAAKC,OAAL,CAAa,mBAAb,EAAiCJ,MAAM,CAACH,UAAxC;AACA;AAAA;AAAA,0CAAYd,GAAZ,CAAgBsB,SAAhB,GAA0B,KAA1B;AACA;AAAA;AAAA,gCAAOC,YAAP,CAAoB;AAAA;AAAA,wCAAWN,MAA/B;AACH;;AArC0C,O;;;;;iBAE7B,I","sourcesContent":["import { _decorator, Component, Label, Node } from 'cc';\r\nimport { ViewPop } from '../../../../framework/base/ViewPop';\r\nimport Http from '../../../net/Http';\r\nimport { LoginData } from '../../login/LoginData';\r\nimport { Func } from '../../../utils/Func';\r\nimport { RedMgr } from '../../../mgr/RedMgr';\r\nimport { RedDotType } from '../../../red/RedDotType';\r\nimport { RoleControl } from '../RoleControl';\r\nconst { ccclass, property } = _decorator;\r\n\r\n/**\r\n * \r\n * RoleInfoNoticePop\r\n * zhudingchao\r\n * Tue Aug 20 2024 14:11:24 GMT+0800 (中国标准时间)\r\n * db://assets/scripts/logic/model/role/roleInfo/RoleInfoNoticePop.ts\r\n *\r\n */\r\n\r\n@ccclass('RoleInfoNoticePop')\r\nexport class RoleInfoNoticePop extends ViewPop {\r\n    @property(Label)\r\n    wordLab:Label=null;\r\n    register(): void {\r\n        \r\n    }\r\n    onShow(): void {\r\n        let addr = LoginData.ins.loginServerTab.NoticeAddr;\r\n        Http.request({\r\n            host: addr,\r\n            method: \"GET\",\r\n            reqParam: \"\",\r\n            cb: (responseJson) => {\r\n                // console.log(responseJson)\r\n                if (responseJson&&responseJson.length>0) {\r\n                    let notices:Array<any>=responseJson;\r\n                    \r\n                    notices.sort((a,b)=>{\r\n                        return b.created_at-a.created_at;\r\n                    })\r\n\r\n                    let newNotice=notices[0];\r\n                    this.initView(newNotice);\r\n                    // if (responseJson.ret == 0 && responseJson.data) {\r\n                    //     console.log(\"公告 \",responseJson.data)\r\n                    // }\r\n                     \r\n                }\r\n               \r\n            }\r\n        })\r\n    }\r\n    initView(notice:any){\r\n        this.wordLab.string=notice.content;\r\n        Func.setItem(\"notice_created_at\",notice.created_at);\r\n        RoleControl.ins.noticeRed=false;\r\n        RedMgr.refreshEvent(RedDotType.notice);\r\n    }\r\n \r\n}"]}