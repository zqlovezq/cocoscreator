{"version":3,"sources":["file:///C:/chickenStarClient/client/assets/scripts/logic/fight/FightUIView.ts"],"names":["_decorator","Font","instantiate","js","Label","Node","Prefab","ProgressBar","Tween","tween","UIOpacity","UITransform","ViewScreen","EventMgr","FightEvent","WaveTimeControl","FightUITeam","PlayerControl","Func","FightData","ShowTips","UIMgr","ViewName","FightPausePop","FightRootControl","setTextTime_3","FightBarItem","tab","FightBossBar","OpenFunctionMgr","LangMgr","FightMsgControl","ccclass","property","TimeScale","FightUIView","speedIdx","isCheckedAudo","GuideDropTime","onLoad","timeLabel","string","timePerLabel","timeBar","progress","schedule","updateTime","Number","getItem","open","ins","checkFunctionIsOpen","OpenFunctionName","OpenFunctionName_FightAuto","isAudoRed","autoRedPoint","active","autoLock","setAudoShow","buffBtnNode","fightInfo","bufferList","length","forEach","element","pveBuffTable","getData","PveStageBuffTableById","getValue","ShowIcon","onShow","audoToggle","getChildByName","register","onFight","Fight_Skill_Cding","on_fight_Fight_Skill_Cding","Fight_Start","on_Fight_Start","onFightResLoadComplete","onClickShowBullet","onClickBorder","isFight","nowTime","nowTotalTime","totalTime","isWorldAndGuildBoss","per","Math","floor","isNaN","formatStr","uiPos","opa","skillCd","getComponent","opacity","stopAllByTarget","spacePos","parent","convertToNodeSpaceAR","setPosition","to","call","start","getRoleHead","createRoleHead","roleInfo","roleHead","team","getFree","setRoleInfo","createBarItem","barItem","barItemPfb","barNode","addChild","onAudoToggle","eventTouch","isTest","setItem","openTab","OpenFunctionTableByName","Level","BattleLv","tip1","getCombineString","setAudo","idx","checkInt","max","checkSpeedOpen","checkFightSpeedRedPoint","setSpeedIdx","red","multiplayRedPoint","onSpeedClick","event","data","index","speedNodeParent","children","timeScale","GetKeyValue_ConfigTable","onPauseClick","create","onDamageClick","show","viewName","FightDamageRankPop","istips","OpenFunctionName_FightSpeed2","PlayerLv","key","OpenFunctionName_FightSpeed3","getLab","onBuffClick","EveryDayBuffPop","showTapTipsTimes","node","unschedule","hideTapTipsTimes","scheduleOnce"],"mappings":"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","sourcesContent":["\nimport { _decorator, director, EditBox, EventTouch, Font, game, instantiate, js, Label, Layers, Node, Prefab, ProgressBar, Size, Sprite, SpriteFrame, Toggle, Tween, tween, UIOpacity, UITransform, v2, v3, Vec3, view } from 'cc';\nimport { ViewScreen } from '../../framework/base/ViewScreen';\nimport { EventMgr } from '../mgr/EventMgr';\nimport { FightEvent } from './define/FightEvent';\nimport { RoleInfo } from './base/obj/role/role/RoleInfo';\nimport { WaveTimeControl } from './wave/WaveTimeControl';\nimport { FightUITeam } from './view/common/FightUITeam';\nimport { PlayerControl } from './base/obj/role/role/PlayerControl';\nimport { Func } from '../utils/Func';\nimport { FightData } from './data/FightData';\nimport { ShowTips, UIMgr } from '../mgr/UIMgr';\nimport { ViewName } from '../define/ViewDefine';\nimport { FightPausePop } from './view/FightPausePop';\nimport Fixed from '../../framework/collision/Fixed';\nimport { FightRootControl } from './FightRootControl';\nimport { setTextTime_3 } from '../utils/GameUtil';\nimport { FightBarItem } from './view/common/FightBarItem';\nimport { tab } from '../../Table/table_gen';\nimport { FightBossBar } from './view/common/FightBossBar';\nimport ModuleInJumpComp from '../../Common/component/ModuleInJumpComp';\nimport { OpenFunctionMgr } from '../../Common/component/OpenFunctionMgr';\nimport { LangMgr } from '../mgr/LangMgr';\nimport { GuideController } from '../guide/GuideController';\nimport { DropControl } from './drop/DropControl';\nimport { FightMsgControl } from './FightMsgControl';\nconst { ccclass, property } = _decorator;\n\nconst TimeScale = [\n    1, 1, 1.3, 1.6\n]\n\n@ccclass('FightUIView')\nexport class FightUIView extends ViewScreen {\n    @property(Node)\n    skillCd: Node = null\n\n    @property(Node)\n    barNode: Node = null\n    @property(Prefab)\n    barItemPfb: Prefab = null\n\n    @property(FightBossBar)\n    bossBar: FightBossBar = null\n\n    @property(FightUITeam)\n    team: FightUITeam = null\n\n    @property(Label)\n    timeLabel: Label = null;\n\n    @property(Label)\n    timePerLabel: Label = null;\n\n    @property(ProgressBar)\n    timeBar: ProgressBar = null\n\n    @property(Node)\n    audoToggle: Node = null\n\n    @property(Node)\n    speedNodeParent: Node = null\n\n    @property([Font])\n    fonts: Font[] = []\n    @property(Node)\n    multiplayRedPoint: Node = null;\n    @property(Node)\n    autoRedPoint: Node = null;\n    @property(Node)\n    autoLock: Node = null;\n    @property(Node)\n    buffBtnNode: Node = null;\n    speedIdx: number = 1\n    private isCheckedAudo = false;\n    private GuideDropTime: number = 0;\n    protected onLoad(): void {\n        super.onLoad()\n\n        this.timeLabel.string = \"00:00\"\n        this.timePerLabel.string = \"0%\"\n        this.timeBar.progress = 0\n        this.schedule(() => {\n            this.updateTime()\n        }, 1)\n\n\n        // if (Func.getItem(\"isCheckedAudo\") == null) {//默认开启\n        //     Func.setItem(\"isCheckedAudo\", 1);\n        // }\n        let isCheckedAudo = Number(Func.getItem(\"isCheckedAudo\"));\n        let open = OpenFunctionMgr.ins.checkFunctionIsOpen(tab.OpenFunctionName.OpenFunctionName_FightAuto);\n        if (isCheckedAudo && isCheckedAudo == 1) {\n            if (open) {\n                this.isCheckedAudo = true;\n            } else {\n                this.isCheckedAudo = false;\n            }\n\n        } else {\n            this.isCheckedAudo = false;\n        }\n        if (open) {\n            let isAudoRed = Number(Func.getItem(\"isShowAudoRedPoint\"));\n            if (!isAudoRed) {\n                this.autoRedPoint.active = true;\n            } else {\n                this.autoRedPoint.active = false;\n            }\n            this.autoLock.active = false;\n        } else {\n            this.autoRedPoint.active = false;\n            this.autoLock.active = true;\n        }\n        this.setAudoShow();\n\n        this.buffBtnNode.active = false\n        if (FightData.ins.fightInfo.bufferList && FightData.ins.fightInfo.bufferList.length > 0) {\n            FightData.ins.fightInfo.bufferList.forEach(element => {\n                let pveBuffTable = tab.getData().PveStageBuffTableById.getValue(element);\n                if (pveBuffTable.ShowIcon != \"\") {\n                    this.buffBtnNode.active = true\n                }\n            });\n        }\n        this.buffBtnNode.active = FightData.ins.fightInfo.bufferList && FightData.ins.fightInfo.bufferList.length > 0;\n\n    }\n    onShow(): void {\n        this.audoToggle.getChildByName(\"txt\").active = !this.isCheckedAudo;\n        this.audoToggle.getChildByName(\"txt2\").active = this.isCheckedAudo;\n    }\n\n    register(): void {\n        EventMgr.onFight(FightEvent.Fight_Skill_Cding, this.on_fight_Fight_Skill_Cding, this)\n        EventMgr.onFight(FightEvent.Fight_Start, this.on_Fight_Start, this)\n\n    }\n    onFightResLoadComplete() {\n\n    }\n\n    onClickShowBullet() {\n    }\n\n    onClickBorder() {\n    }\n    updateTime() {\n        if (FightRootControl.ins.isFight()) {\n            let nowTime = WaveTimeControl.ins.nowTotalTime\n            let totalTime = WaveTimeControl.ins.totalTime\n            if (FightData.ins.isWorldAndGuildBoss()) {\n                nowTime = totalTime - nowTime\n            }\n            this.timeLabel.string = setTextTime_3(nowTime)\n            this.timeBar.progress = nowTime / totalTime\n\n            let per = Math.floor(nowTime * 100 / totalTime)\n            if (isNaN(per)) {\n                per = 0\n            }\n            this.timePerLabel.string = js.formatStr(\"%s%\", per)\n\n            // if (GuideController.ins.isInFightGuiding() && GuideController.ins.isGuiding()) {\n            //     if (nowTime == 51 && GuideController.ins.dropCount === 3 && this.GuideDropTime !== nowTime) {\n            //         DropControl.ins.addDrop([1002]);\n            //     }\n            //     if (nowTime == 52 && GuideController.ins.dropCount === 4 && this.GuideDropTime !== nowTime) {\n            //         DropControl.ins.addDrop([1002]);\n            //     }\n            //     if (nowTime == 53 && GuideController.ins.dropCount === 5 && this.GuideDropTime !== nowTime) {\n            //         DropControl.ins.addDrop([1002]);\n            //     }\n            //     if (this.GuideDropTime !== nowTime) {\n            //         this.GuideDropTime = nowTime\n            //     }\n            // }\n        }\n    }\n\n    on_fight_Fight_Skill_Cding(uiPos: Vec3) {\n        let opa = this.skillCd.getComponent(UIOpacity)\n        opa.opacity = 255\n        Tween.stopAllByTarget(opa)\n        let spacePos = this.skillCd.parent.getComponent(UITransform).convertToNodeSpaceAR(uiPos)\n        this.skillCd.active = true\n        this.skillCd.setPosition(spacePos)\n        tween(opa)\n            .to(1, { opacity: 0 })\n            .call(() => {\n                this.skillCd.active = false\n            })\n            .start()\n    }\n\n    getRoleHead() {\n\n    }\n\n    createRoleHead(roleInfo: RoleInfo) {\n        let roleHead = this.team.getFree()\n        roleHead.setRoleInfo(roleInfo)\n        return roleHead\n    }\n    createBarItem(roleInfo: RoleInfo) {\n        let barItem = instantiate(this.barItemPfb)\n        this.barNode.addChild(barItem)\n        return barItem.getComponent(FightBarItem)\n    }\n\n    onAudoToggle(eventTouch: EventTouch) {\n        let open = OpenFunctionMgr.ins.checkFunctionIsOpen(tab.OpenFunctionName.OpenFunctionName_FightAuto) || FightMsgControl.ins.isTest;\n        if (open) {\n            this.isCheckedAudo = !this.isCheckedAudo;\n            this.setAudoShow();\n            Func.setItem(\"isCheckedAudo\", this.isCheckedAudo ? 1 : 0);\n            if (this.autoRedPoint.active) {\n                this.autoRedPoint.active = false;\n                Func.setItem(\"isShowAudoRedPoint\", 1);\n            }\n        } else {\n            let openTab = tab.getData().OpenFunctionTableByName.getValue(tab.OpenFunctionName.OpenFunctionName_FightAuto);\n            let Level = openTab.BattleLv;\n            let tip1 = Math.floor(Level / 100) + \"-\" + Level % 100;\n\n            ShowTips(LangMgr.getCombineString(\"ui_fight_18\", [tip1]));\n            // OpenFunctionMgr.ins.showFunctionTips(tab.OpenFunctionName.OpenFunctionName_FightAuto);\n        }\n\n\n    }\n    setAudoShow() {\n        this.audoToggle.getChildByName(\"txt\").active = !this.isCheckedAudo;\n        this.audoToggle.getChildByName(\"txt2\").active = this.isCheckedAudo;\n        PlayerControl.ins.setAudo(this.isCheckedAudo);\n    }\n\n    on_Fight_Start() {\n        let idx = Func.checkInt(Func.getItem(\"FightSpeedIdx\"))\n        idx = Math.max(idx, 1)\n        let open = this.checkSpeedOpen(idx);\n        this.checkFightSpeedRedPoint();\n        if (!open) {\n            if (idx == 3) {\n                idx = 2;\n            } else {\n                idx = 1;\n            }\n\n        }\n        this.setSpeedIdx(idx)\n    }\n    checkFightSpeedRedPoint() {\n        let red = Number(Func.getItem(\"FightSpeedRedPoint\"))\n        let open = this.checkSpeedOpen(2+red);\n        if (open) {\n            if (red<2) {\n                this.multiplayRedPoint.active = true;\n            } else {\n                this.multiplayRedPoint.active = false;\n            }\n        } else {\n            this.multiplayRedPoint.active = false;\n        }\n    }\n\n\n    onSpeedClick(event: EventTouch, data: any) {\n        let idx = Func.checkInt(data);\n        if (this.checkSpeedOpen(idx + 1, true)) {\n            idx = idx + 1\n            this.setSpeedIdx(idx)\n            if (this.multiplayRedPoint.active) {\n                this.multiplayRedPoint.active = false;\n                Func.setItem(\"FightSpeedRedPoint\", idx-1);\n\n            }\n        } else {\n            if (idx + 1 >= 3) {\n                this.setSpeedIdx(1);\n            }\n        }\n\n\n    }\n\n    setSpeedIdx(idx: number) {\n        if (idx > 3) {\n            idx = 1\n        }\n        this.speedIdx = idx\n        Func.setItem(\"FightSpeedIdx\", idx)\n\n        for (let index = 0; index < this.speedNodeParent.children.length; index++) {\n            const element = this.speedNodeParent.children[index];\n            element.active = (idx - 1 == index)\n        }\n\n        FightData.ins.timeScale = Math.max(Func.checkInt(tab.getData().GetKeyValue_ConfigTable().TimeScale[this.speedIdx - 1]), 0.8)\n    }\n\n    onPauseClick() {\n        FightPausePop.create()\n    }\n\n    onDamageClick(event: EventTouch) {\n        UIMgr.ins.show({ viewName: ViewName.FightDamageRankPop, data: { event: event } })\n    }\n    checkSpeedOpen(index: number, istips: boolean = false) {\n        if (FightMsgControl.ins.isTest) {\n            return true\n        }\n        if (index == 1) {\n            return true;\n        } else if (index == 2) {\n            if (OpenFunctionMgr.ins.checkFunctionIsOpen(tab.OpenFunctionName.OpenFunctionName_FightSpeed2)) {\n                return true;\n            } else {\n                if (istips) {\n                    let openTab = tab.getData().OpenFunctionTableByName.getValue(tab.OpenFunctionName.OpenFunctionName_FightSpeed2);\n                    let PlayerLv = openTab.PlayerLv;\n                    let key = \"ui_fight_16\"\n                    ShowTips(LangMgr.getCombineString(key, [PlayerLv]));\n                }\n                return false;\n            }\n\n        } else if (index == 3) {\n            if (OpenFunctionMgr.ins.checkFunctionIsOpen(tab.OpenFunctionName.OpenFunctionName_FightSpeed3)) {\n                return true;\n            } else {\n                if (istips) {\n                    ShowTips(LangMgr.getLab(\"ui_fight_17\"));\n                }\n\n                return false;\n            }\n        } else {\n            return true;\n        }\n    }\n    onBuffClick() {\n        UIMgr.ins.show({ viewName: ViewName.EveryDayBuffPop })\n    }\n    showTapTipsTimes() {\n        if (this.node.getChildByName(\"taptips_node\").active) {\n            return;\n        }\n        this.node.getChildByName(\"taptips_node\").active = true;\n        this.unschedule(this.hideTapTipsTimes)\n        this.scheduleOnce(this.hideTapTipsTimes, 3)\n    }\n    hideTapTipsTimes() {\n        this.node.getChildByName(\"taptips_node\").active = false;\n    }\n}\n\n"]}