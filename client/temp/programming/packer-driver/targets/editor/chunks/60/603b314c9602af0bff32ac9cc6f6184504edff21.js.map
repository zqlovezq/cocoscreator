{"version":3,"sources":["file:///C:/chickenStarClient/client/assets/scripts/logic/guide/GuideController.ts"],"names":["_decorator","Component","director","error","log","Mask","Node","sys","UITransform","Vec3","view","Animation","GuideTrigger","tab","EventMgr","LocalEvent","DisableGuideController","DisableTouchMask","GuideCommand","IsInFightScene","Locator","RoleData","FightData","CommonTipsPop","LangMgr","BattleMainDataControl","FightEvent","stepBranchGuide","ccclass","property","GuideController","_fingerRect","_fingerNode","dropCount","showMonster","blockButton","JadeTimeCount","roleIdleTimeCount","roleIdleState","rewards","canHideHeroPop","setTimeOutCount","_targetNode","_dispatchEvent","_task","_recordSteps","runningCB","runningGuideData","ins","_ins","value","isNative","nodeGuangQuan","name","node","addChild","Release","tri","getComponent","removeListens","TargetNode","off","EventType","TOUCH_END","left","right","top","bottom","targetOff","removePersistRootNode","destroy","undefined","setRewards","gerRewards","isGuiding","isInFightGuiding","getStageClearIds","length","stageId","IsGuideFinished","isGuidingTask","taskName","file","isDebug","debug","onLoad","onLocal","JadeDropFinger","beginCheckJade","beginCheckRole","init","registerGuildeSelectLeader","unFight","Select_leader","onSelect_leader","onFight","console","clearTimeout","setTimeout","setContentSize","getVisibleSize","finger","active","touchMask","pos","getData","GetKeyValue_ConfigTable","WanDaoLocation","node_create_bullet","setPosition","resetTouchMask","runTask","task","taskid","callback","run","clearTask","setGuideRunning","triggerTaskError","cb","Error","resetTouchMaskDebugColor","async","eachSeries","steps","step","CancelRunningGuide","skip_cmd","_processStep","err","desc","unLocal","message","realThis","mask","series","stepStart","onStart","call","stepCommand","scheduleOnce","_processStepCommand","delayTime","taskEnd","onEnd","holeMask","enabled","command","Array","isArray","each","_processCommand","cmd","args","cmdFunc","getFunc","find","root","getScene","locateNode","fingerToNode","fingerActive","holeActive","isCircle","isScale","type","Type","GRAPHICS_ELLIPSE","GRAPHICS_RECT","focusToNode","rect","GetBoundingBoxToWorld","equals","play","parent","convertToNodeSpaceAR","center","x","y","setHoleMask","width","height","xLength","yLength","w","h","_h","_w","scaleCount","transform","getBoundingBoxToWorld","getBoundingBox","JumpGuide","setData","getLab","clickJumpGuide","setClientData","String","pause","hideTips","state","schedule","updateCheckRole","stopCheckRole","searchFingerNode","unschedule","updateCheckJade","stopCheckJade","onDestroy"],"mappings":"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","sourcesContent":["import { _decorator, Component, director, error, log, Mask, Node, Rect, Sprite, sys, UITransform, Vec3, view, Animation } from 'cc';\r\nimport { GuideTrigger } from './GuideTrigger';\r\nimport { tab } from '../../Table/table_gen';\r\nimport { EventMgr } from '../mgr/EventMgr';\r\nimport { LocalEvent } from '../define/LocalEvent';\r\nimport { DisableGuideController, DisableTouchMask, GuideCommand, IsInFightScene } from './GuideCommand';\r\nimport { Locator } from './Locator';\r\nimport { RoleData } from '../model/role/RoleData';\r\nimport { FightData } from '../fight/data/FightData';\r\nimport { CommonTipsPop } from '../model/common/CommonTipsPop';\r\nimport { LangMgr } from '../mgr/LangMgr';\r\nimport { BattleMainDataControl } from '../model/home/battle/BattleMainDataControl';\r\nimport { proto } from 'client_protocol';\r\nimport { FightEvent } from '../fight/define/FightEvent';\r\nimport { stepBranchGuide } from './GuideTask';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('GuideController')\r\nexport class GuideController extends Component {\r\n    @property(Node)\r\n    touchMask: Node = null;\r\n    @property(Node)\r\n    left: Node = null;\r\n    @property(Node)\r\n    right: Node = null;\r\n    @property(Node)\r\n    top: Node = null;\r\n    @property(Node)\r\n    bottom: Node = null;\r\n\r\n    @property(Mask)\r\n    holeMask: Mask = null;\r\n    @property(Node)\r\n    finger: Node = null;\r\n    @property(CommonTipsPop)\r\n    CommonTipsPop: CommonTipsPop = null;\r\n    @property(Node)\r\n    node_jump: Node = null;\r\n    @property(Node)\r\n    node_create_bullet:Node = null;\r\n    private _fingerRect: Rect;\r\n    private _fingerNode: Node; //点击指向的节点\r\n    public dropCount: number = 1;\r\n    public showMonster: boolean = false;\r\n    public blockButton:boolean = false;\r\n\r\n    private JadeTimeCount: number = 0;\r\n    private roleIdleTimeCount: number = 0;\r\n    private roleIdleState: boolean = false;\r\n    private rewards:proto.IItem[] = [];\r\n    public canHideHeroPop:boolean = false;\r\n    public setTimeOutCount:number = 0;\r\n\r\n    private static _ins: GuideController;\r\n    public static get ins() { return GuideController._ins }\r\n    public static set ins(value: GuideController) {\r\n        if (GuideController._ins) {\r\n            if (!sys.isNative) {\r\n                throw 'GuideController is already created';\r\n            }\r\n        }\r\n        GuideController._ins = value;\r\n        const nodeGuangQuan = new Node();\r\n        nodeGuangQuan.name = \"guideGQNode\";\r\n        value.node.addChild(nodeGuangQuan);\r\n    }\r\n    public static Release() {\r\n        if (GuideController._ins) {\r\n            const tri = GuideController._ins.getComponent(GuideTrigger);\r\n            if (tri) {\r\n                tri.removeListens();\r\n            }\r\n            if (GuideController._ins.TargetNode) {\r\n                GuideController._ins.TargetNode.off(Node.EventType.TOUCH_END)\r\n            }\r\n            GuideController._ins.left.off(Node.EventType.TOUCH_END);\r\n            GuideController._ins.right.off(Node.EventType.TOUCH_END);\r\n            GuideController._ins.top.off(Node.EventType.TOUCH_END);\r\n            GuideController._ins.bottom.off(Node.EventType.TOUCH_END);\r\n            director.targetOff(GuideController._ins.node);\r\n            director.removePersistRootNode(GuideController._ins.node);\r\n            GuideController._ins.node.destroy();\r\n            GuideController._ins = undefined;\r\n        }\r\n    }\r\n\r\n    private _targetNode: Node;\r\n    private _dispatchEvent: any;\r\n    private _task: any = null;\r\n    private _recordSteps: any[];\r\n\r\n    public runningCB = null;   // 正在执行中的步骤的回调函数，用于跳过步骤使用\r\n    public runningGuideData: tab.GuideTable = null; // 正在执行的强制引导数据\r\n\r\n    get TargetNode() { return this._targetNode; }\r\n    set TargetNode(node: Node) { this._targetNode = node; }\r\n    /* 保存一下引导的结算奖励 */\r\n    setRewards(rewards:proto.IItem[]){\r\n        this.rewards = rewards\r\n    }\r\n    gerRewards(){\r\n        return this.rewards;\r\n    }\r\n    /**\r\n     * 是否正在进行新手引导\r\n    */\r\n    public isGuiding(): boolean {\r\n        return this._task !== null\r\n    }\r\n    /* 是否在战斗中的新手引导 */\r\n    public isInFightGuiding(): boolean {\r\n        if (BattleMainDataControl.ins.getStageClearIds().length === 0 && (FightData.ins.stageId === 101||FightData.ins.stageId===1)&&!RoleData.ins.IsGuideFinished()) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n    // 是否在进行某个新手引导\r\n    public isGuidingTask(taskName: string): boolean {\r\n        return this._task && this._task.file && this._task.file == taskName;\r\n    }\r\n    isDebug(): boolean {\r\n        //return true;\r\n        return this._task && this._task.debug\r\n    }\r\n    onLoad() {\r\n        EventMgr.onLocal(LocalEvent.JadeDropFinger, this.beginCheckJade, this);\r\n        EventMgr.onLocal(LocalEvent.roleIdleState, this.beginCheckRole, this);\r\n        this.init();\r\n    }\r\n    registerGuildeSelectLeader(){\r\n        EventMgr.unFight(FightEvent.Select_leader, this.onSelect_leader, this)\r\n        EventMgr.onFight(FightEvent.Select_leader, this.onSelect_leader, this)\r\n    }\r\n    onSelect_leader(){\r\n        console.log(\"cocos 选择队长\");\r\n        if(FightData.ins.stageId===103){\r\n            clearTimeout(this.setTimeOutCount);\r\n            this.setTimeOutCount = setTimeout(() => {\r\n                stepBranchGuide(502);\r\n            }, 30000)\r\n        }\r\n    }\r\n    init() {\r\n        this.node.getComponent(UITransform).setContentSize(view.getVisibleSize());\r\n        this.dropCount = 1;\r\n        this.TargetNode = null;\r\n\r\n        this.finger.active = false;\r\n        this._fingerNode = undefined;\r\n        this._fingerRect = undefined;\r\n        this.showMonster = false;\r\n        this.CommonTipsPop.node.active = false;\r\n        this.touchMask.active = false;\r\n        const pos = tab.getData().GetKeyValue_ConfigTable().WanDaoLocation;\r\n        this.node_create_bullet.setPosition(new Vec3(pos[0],pos[1],0));\r\n\r\n        this.resetTouchMask();\r\n    }\r\n    runTask(task: object, taskid: number, callback?: Function) {\r\n        if (this._task) {\r\n            return;\r\n        }\r\n        this._task = task;\r\n        this.run(taskid, callback);\r\n    }\r\n    public clearTask() {\r\n        this._task = null;\r\n        const tri = GuideController._ins.getComponent(GuideTrigger);\r\n        tri.setGuideRunning(false);\r\n    }\r\n    triggerTaskError(cb: Function) {\r\n        if (this._task) {\r\n            cb(new Error(\"Guide Cancelled\"))\r\n        }\r\n    }\r\n    protected run(taskid: number, callback?: Function) {\r\n        if (!this._task) {\r\n            return;\r\n        }\r\n        this.resetTouchMaskDebugColor();\r\n        async.eachSeries(this._task.steps, (step: any, cb) => {\r\n            EventMgr.onLocal(LocalEvent.CancelRunningGuide, this.triggerTaskError, this, true)\r\n            step.skip_cmd = false;\r\n            this._processStep(step, err => {\r\n                if (this._task) {\r\n                    if (taskid !== undefined && step.desc != undefined) {\r\n                        log(`~~~~~ guide step complete ${taskid}_${step.desc}`)\r\n                    }\r\n                    EventMgr.unLocal(LocalEvent.CancelRunningGuide, this.triggerTaskError, this)\r\n                    try {\r\n                        cb(err)\r\n                    } catch (error) {\r\n                    }\r\n                }\r\n            });\r\n        }, (error: Error | string) => {\r\n            if (error) {\r\n                if (error instanceof (Error)) {\r\n                    log(`task [${this._task.name}] error: ${error.message}`);\r\n                } else {\r\n                    log(`task [${this._task.name}] error: ${error}`);\r\n                }\r\n            }\r\n            else {\r\n                log(`task [${this._task.name}] complete`);\r\n            }\r\n            this.clearTask();\r\n\r\n            this.touchMask.active = false;\r\n            if (this.finger) {\r\n                this.finger.active = false;\r\n                this._fingerNode = undefined;\r\n                this._fingerRect = undefined;\r\n            }\r\n            if (callback) {\r\n                callback(error);\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    protected resetTouchMaskDebugColor() {\r\n        let isDebug = false;\r\n        // this.left.getComponent(Sprite).enabled = isDebug;\r\n        // this.right.getComponent(Sprite).enabled = isDebug;\r\n        // this.top.getComponent(Sprite).enabled = isDebug;\r\n        // this.bottom.getComponent(Sprite).enabled = isDebug;\r\n    }\r\n\r\n    _processStep(step, callback) {\r\n        let realThis = this;\r\n        realThis.touchMask.active = realThis._task.mask\r\n        realThis.resetTouchMask();\r\n\r\n        async.series({\r\n            //任务开始\r\n            stepStart: (cb) => {\r\n                realThis.runningCB = cb;\r\n                if (step.onStart) {\r\n                    log(`step [${step.desc}] onStart`);\r\n                    step.onStart.call(step, cb);\r\n                } else {\r\n                    cb();\r\n                    realThis.runningCB = null;\r\n                }\r\n            },\r\n\r\n            //任务指令\r\n            stepCommand: (cb) => {\r\n                if (step.skip_cmd) {\r\n                    //跳过指令\r\n                    cb();\r\n                    return;\r\n                }\r\n                realThis.scheduleOnce(() => {\r\n                    realThis._processStepCommand(step, cb);\r\n                }, step.delayTime || 0);\r\n            },\r\n\r\n            //任务结束\r\n            taskEnd: (cb) => {\r\n                realThis.runningCB = cb;\r\n                realThis.finger.active = false;\r\n                realThis._fingerNode = undefined;\r\n                realThis._fingerRect = undefined;\r\n                if (step.onEnd) {\r\n                    // realThis.log(`step [${step.desc}] onEnd`);\r\n                    step.onEnd.call(step, cb);\r\n                } else {\r\n                    cb();\r\n                    realThis.runningCB = null;\r\n                }\r\n            },\r\n        }, (error) => {\r\n            realThis.resetTouchMask()\r\n            if (error) {\r\n                log(`step [${step.desc}] error: ${error}`);\r\n            }\r\n            else {\r\n                log(`step [${step.desc}] complete`);\r\n            }\r\n            callback(error);\r\n        })\r\n    }\r\n    resetTouchMask() {\r\n        this.left.setPosition(new Vec3(0, 0, 0))\r\n        this.right.setPosition(new Vec3(0, 0, 0))\r\n        this.top.setPosition(new Vec3(0, 0, 0))\r\n        this.bottom.setPosition(new Vec3(0, 0, 0))\r\n        this.holeMask.node.active = false;\r\n        this.holeMask.enabled = false;\r\n    }\r\n    /**\r\n     * 处理步骤指令\r\n     * @param {*} step \r\n     * @param {*} cb \r\n     */\r\n    protected _processStepCommand(step, cb) {\r\n        log(`step [${step.desc}] begin`);\r\n\r\n        if (!!!step.command) {\r\n            //没有command\r\n            cb()\r\n            return;\r\n        }\r\n\r\n        if (Array.isArray(step.command)) {\r\n            //并行执行command\r\n            async.each(step.command, (command: any, callback) => {\r\n                this._processCommand(command.cmd, command.args, callback)\r\n            }, err => {\r\n                if (err) {\r\n                    error(`step [${step.desc}] failed! [${err}]`)\r\n                }\r\n                else {\r\n                    log(`step [${step.desc}] complete`);\r\n                }\r\n                cb(err);\r\n            });\r\n        }\r\n        else {\r\n            this._processCommand(step.command.cmd, step.command.args, err => {\r\n                log(`step [${step.desc}] complete`);\r\n                cb(err)\r\n            })\r\n        }\r\n    }\r\n    _processCommand(cmd, args, cb) {\r\n        this.runningCB = cb;\r\n        let cmdFunc = GuideCommand.getFunc(cmd);\r\n        if (cmdFunc) {\r\n            cmdFunc(this, args, err => {\r\n                this.runningCB = null;\r\n                cb(err);\r\n            });\r\n        } else {\r\n            this.runningCB = null;\r\n            cb(new Error(`cmd [${cmd}] not exist`));\r\n        }\r\n    }\r\n    find(value, cb: Function) {\r\n        let root = director.getScene();\r\n        Locator.locateNode(root, value, (error, node) => {\r\n            if (error) {\r\n                cb(null, error);//找不到， 回调错误\r\n                return;\r\n            }\r\n            log('find succeed');\r\n            cb(node);\r\n        });\r\n    }\r\n    /**\r\n     * 手指动画\r\n     */\r\n    fingerToNode(node, fingerActive: boolean = true, holeActive = true, isCircle?: boolean,isScale?:number) {\r\n        this._fingerNode = node\r\n        this.finger.active = fingerActive;\r\n        this.holeMask.node.active = holeActive;\r\n        this.holeMask.enabled = holeActive;\r\n        if (isCircle) {\r\n            this.holeMask.type = Mask.Type.GRAPHICS_ELLIPSE;\r\n        } else {\r\n            this.holeMask.type = Mask.Type.GRAPHICS_RECT;\r\n        }\r\n        this.focusToNode(node, isCircle,isScale);\r\n    }\r\n    private focusToNode(node: Node, isCircle: boolean,isScale:number) {\r\n        //设置点击屏蔽遮罩\r\n        let rect: Rect = this.GetBoundingBoxToWorld(node)\r\n        if (this._fingerRect && this._fingerRect.equals(rect)) {\r\n            //rect没有发生改变\r\n            return\r\n        }\r\n        this._fingerRect = rect;\r\n\r\n        if (this.finger.active) {\r\n            this.finger.getComponent(Animation).play(\"guideFinger\")\r\n            this.finger.setPosition(this.finger.parent.getComponent(UITransform).convertToNodeSpaceAR(new Vec3(rect.center.x + 60, rect.center.y - 30, 0)));\r\n        }\r\n\r\n        let pos = this.touchMask.getComponent(UITransform).convertToNodeSpaceAR(new Vec3(rect.center.x, rect.center.y, 0))\r\n        if (this.holeMask.enabled) {\r\n            this.setHoleMask(pos.x, pos.y, rect.width, rect.height, isCircle,isScale)\r\n        }\r\n\r\n        let xLength = rect.width / 2;\r\n        let yLength = rect.height / 2;\r\n        this.left.setPosition(new Vec3(pos.x - xLength, 0, 0))\r\n        this.right.setPosition(new Vec3(pos.x + xLength, 0, 0))\r\n        this.top.setPosition(new Vec3(0, pos.y + yLength, 0))\r\n        this.bottom.setPosition(new Vec3(0, pos.y - yLength, 0))\r\n\r\n        console.log(director.getScene());\r\n    }\r\n    setHoleMask(x: number, y: number, w: number, h: number, isCircle: boolean,isScale:number) {\r\n        this.holeMask.enabled = true;\r\n        if (isCircle) {\r\n            this.holeMask.node.setPosition(new Vec3(x, y + 15, 0));\r\n        } else {\r\n            this.holeMask.node.setPosition(new Vec3(x, y, 0));\r\n        }\r\n        let _h = 0;\r\n        let _w = 0;\r\n\r\n        let scaleCount = 1.1;\r\n        if(isScale){\r\n            scaleCount = isScale;\r\n        }\r\n        if (IsInFightScene()) {\r\n            _h = isCircle ? h : h * scaleCount;\r\n            _w = isCircle ? w : w * scaleCount;\r\n        } else {\r\n            _h = h;\r\n            _w = w;\r\n        }\r\n        this.holeMask.node.getComponent(UITransform).setContentSize(_w, _h)\r\n    }\r\n    /**\r\n    * 返回节点在世界坐标系下的对齐轴向的包围盒（AABB）\r\n    * 该边框不包含自身和已激活的子节点的世界边框。\r\n    */\r\n    GetBoundingBoxToWorld(node: Node): Rect {\r\n        const transform: UITransform = node.getComponent(UITransform);\r\n        if (node.parent) {\r\n            return transform.getBoundingBoxToWorld()\r\n        } else {\r\n            return transform.getBoundingBox();\r\n        }\r\n    }\r\n    JumpGuide() {\r\n        this.CommonTipsPop.node.active = true;\r\n        this.CommonTipsPop.setData(LangMgr.getLab(\"ui_guide_1\"))\r\n    }\r\n    clickJumpGuide() {\r\n        DisableGuideController();\r\n        DisableTouchMask();\r\n        RoleData.ins.setClientData(\"guideTrunk\", String(500));\r\n        RoleData.ins.setClientData(\"equipGuildOver\",\"true\");\r\n        RoleData.ins.setClientData(\"jadeGuildOver\",\"true\");\r\n        this.clearTask();\r\n        if(GuideController.ins.dropCount>1){\r\n            GuideController.ins.dropCount -= 1;\r\n        }else{\r\n            GuideController.ins.dropCount = 1;\r\n        }\r\n        if (IsInFightScene()) {\r\n            FightData.ins.pause = false;\r\n            // EventMgr.emitFight(FightEvent.ReviveByItemid, 1401);\r\n            // EventMgr.emitFight(FightEvent.ReviveByItemid, 1101);\r\n            // EventMgr.emitFight(FightEvent.ReviveByItemid, 1301);\r\n            // EventMgr.emitFight(FightEvent.ReviveByItemid, 1201);\r\n            // EventMgr.emitFight(FightEvent.ReviveByItemid, 1501);\r\n        }\r\n    }\r\n    hideTips() {\r\n        this.CommonTipsPop.node.active = false;\r\n    }\r\n    beginCheckRole(state: boolean) {\r\n        if (state && this.roleIdleTimeCount === 0) {\r\n            this.schedule(this.updateCheckRole, 1)\r\n        } else {\r\n            this.stopCheckRole()\r\n        }\r\n    }\r\n    updateCheckRole() {\r\n        if (FightData.ins.pause) {\r\n            this.stopCheckRole();\r\n            return;\r\n        }\r\n        if (!IsInFightScene()) {\r\n            this.stopCheckRole();\r\n            return;\r\n        }\r\n        if (this.JadeTimeCount >= 5) {\r\n            this.stopCheckRole();\r\n            return;\r\n        }\r\n\r\n        if (this.roleIdleTimeCount >= 3) {\r\n            if (this.roleIdleTimeCount === 3) {\r\n                if (!this.finger.active) {\r\n                    this.searchFingerNode('FightRootView/rootNode/objects/Monster')\r\n                }\r\n            }\r\n        } else {\r\n            this.roleIdleTimeCount++;\r\n        }\r\n    }\r\n    stopCheckRole() {\r\n        this.roleIdleTimeCount = 0;\r\n        if (this.finger.active && !this.touchMask.active && this.JadeTimeCount < 5) {\r\n            this.finger.active = false;\r\n            this._fingerNode = undefined;\r\n            this._fingerRect = undefined;\r\n        }\r\n        this.unschedule(this.updateCheckRole);\r\n    }\r\n    // 开始每秒检测小手\r\n    beginCheckJade() {\r\n        if (this.JadeTimeCount === 0) {\r\n            this.schedule(this.updateCheckJade, 1)\r\n        }\r\n    }\r\n    updateCheckJade() {\r\n        if (FightData.ins.pause) {\r\n            this.stopCheckJade();\r\n            return;\r\n        }\r\n        if (!IsInFightScene()) {\r\n            this.stopCheckJade();\r\n            return;\r\n        }\r\n        if (this.JadeTimeCount >= 5) {\r\n            if (this.JadeTimeCount === 5) {\r\n                if (!this.touchMask.active) {\r\n                    this.searchFingerNode('FightRootView/rootNode/dropNode/dropNode')\r\n                }\r\n            }\r\n        } else {\r\n            this.JadeTimeCount++;\r\n        }\r\n    }\r\n    // 停止检测小手\r\n    stopCheckJade() {\r\n        this.JadeTimeCount = 0;\r\n        if (this.finger.active && !this.touchMask.active) {\r\n            this.finger.active = false;\r\n            this._fingerNode = undefined;\r\n            this._fingerRect = undefined;\r\n        }\r\n        this.unschedule(this.updateCheckJade);\r\n    }\r\n    searchFingerNode(args: string) {\r\n        this.find(args, (node: Node, error) => {\r\n            if (error) {\r\n                return;\r\n            }\r\n            this.fingerToNode(node, true, false, false)\r\n        });\r\n    }\r\n    protected onDestroy(): void {\r\n        EventMgr.unLocal(LocalEvent.JadeDropFinger);\r\n        EventMgr.unLocal(LocalEvent.roleIdleState);\r\n    }\r\n}\r\n\r\n"]}