{"version":3,"sources":["file:///C:/chickenStarClient/client/assets/scripts/logic/fight/base/move/bullet/BulletMoveLine.ts"],"names":["BulletMoveLine","Vec3","AbsMoveType","BorderType","BulletMove","ScreenUtil","FixedUtil","tempPos","tempPos1","constructor","bulletMoveLine","init","updateFrame","dt","fly","deltaTimeMovePostion","abs","getPosition","velocity","setAbsPos","info","isScreenBounce","checkNextBorder","updateNextPos","type","getOutOfScreenType","empty","leftRight","x","upDown","y","normalize","setVelocity","addScreenBounceCount"],"mappings":";;;iJAYaA,c;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAZEC,MAAAA,I,OAAAA,I;;AACNC,MAAAA,W,iBAAAA,W;AAAaC,MAAAA,U,iBAAAA,U;AAAYC,MAAAA,U,iBAAAA,U;AAAYC,MAAAA,U,iBAAAA,U;;AAGrCC,MAAAA,S,iBAAAA,S;;;;;;;;;AAKHC,MAAAA,O,GAAU,IAAIN,IAAJ,E;AACVO,MAAAA,Q,GAAW,IAAIP,IAAJ,E;AACjB;;gCACaD,c,GAAN,MAAMA,cAAN;AAAA;AAAA,oCAAwC;AAC3CS,QAAAA,WAAW,GAAG;AACV,gBAAM;AAAA;AAAA,0CAAYC,cAAlB;AACH;;AAEDC,QAAAA,IAAI,GAAS,CAGZ;;AAEDC,QAAAA,WAAW,CAACC,EAAD,EAAmB;AAC1B,gBAAMD,WAAN,CAAkBC,EAAlB;AACH;;AAEDC,QAAAA,GAAG,CAACD,EAAD,EAAa;AACZ;AACA;AAAA;AAAA,sCAAUE,oBAAV,CAA+BR,OAA/B,EAAwC,KAAKS,GAAL,CAASC,WAAT,EAAxC,EAAgE,KAAKD,GAAL,CAASE,QAAzE,EAAmFL,EAAnF;AAEA,eAAKM,SAAL,CAAeZ,OAAf;;AAEA,cAAI,KAAKS,GAAL,CAASI,IAAT,CAAcC,cAAd,EAAJ,EAAoC;AAChC,iBAAKC,eAAL,CAAqBT,EAArB;AACH;AACJ;;AAEDU,QAAAA,aAAa,CAACV,EAAD,EAAa;AACtB;AAAA;AAAA,sCAAUE,oBAAV,CAA+BR,OAA/B,EAAwC,KAAKS,GAAL,CAASC,WAAT,EAAxC,EAAgE,KAAKD,GAAL,CAASE,QAAzE,EAAmFL,EAAnF;AACH;;AAEDS,QAAAA,eAAe,CAACT,EAAD,EAAa;AACxB,eAAKU,aAAL,CAAmBV,EAAnB;AACA,cAAIW,IAAI,GAAG;AAAA;AAAA,wCAAWC,kBAAX,CAA8BlB,OAA9B,CAAX;;AACA,cAAIiB,IAAI,IAAI;AAAA;AAAA,wCAAWE,KAAvB,EAA8B;AAC1B;AACA,gBAAIF,IAAI,IAAI;AAAA;AAAA,0CAAWG,SAAvB,EAAkC;AAC9B,mBAAKX,GAAL,CAASE,QAAT,CAAkBU,CAAlB,GAAsB,CAAC,KAAKZ,GAAL,CAASE,QAAT,CAAkBU,CAAzC;AACH,aAFD,MAEO,IAAIJ,IAAI,IAAI;AAAA;AAAA,0CAAWK,MAAvB,EAA+B;AAClC,mBAAKb,GAAL,CAASE,QAAT,CAAkBY,CAAlB,GAAsB,CAAC,KAAKd,GAAL,CAASE,QAAT,CAAkBY,CAAzC;AACH;;AACD,iBAAKd,GAAL,CAASE,QAAT,CAAkBa,SAAlB;AACA,iBAAKf,GAAL,CAASgB,WAAT,CAAqB,KAAKhB,GAAL,CAASE,QAA9B;AACA,iBAAKF,GAAL,CAASI,IAAT,CAAca,oBAAd,GAT0B,CAU1B;AACA;AACH;AACJ;;AA7C0C,O","sourcesContent":["import { Size, Vec3, game, math, v2, v3, view } from \"cc\";\nimport { AbsMoveType, BorderType, BulletMove, ScreenUtil } from \"../AbsMove\";\nimport { MathAngle } from \"../../../../../framework/collision/Maths\";\nimport { FightRootControl } from \"../../../FightRootControl\";\nimport { FixedUtil } from \"../../../util/FixedUtil\";\nimport { BulletTargetType } from \"../../obj/bullet/BulletControl\";\n\n\n\nconst tempPos = new Vec3();\nconst tempPos1 = new Vec3();\n/** 移动--直线 */\nexport class BulletMoveLine extends BulletMove {\n    constructor() {\n        super(AbsMoveType.bulletMoveLine)\n    }\n\n    init(): void {\n       \n\n    }\n\n    updateFrame(dt: number): void {\n        super.updateFrame(dt)\n    }\n\n    fly(dt: number) {\n        //计算新位置\n        FixedUtil.deltaTimeMovePostion(tempPos, this.abs.getPosition(), this.abs.velocity, dt)\n\n        this.setAbsPos(tempPos);\n\n        if (this.abs.info.isScreenBounce()) {\n            this.checkNextBorder(dt)\n        }\n    }\n\n    updateNextPos(dt: number) {\n        FixedUtil.deltaTimeMovePostion(tempPos, this.abs.getPosition(), this.abs.velocity, dt)\n    }\n\n    checkNextBorder(dt: number) {\n        this.updateNextPos(dt)\n        let type = ScreenUtil.getOutOfScreenType(tempPos)\n        if (type != BorderType.empty) {\n            //下一帧超出范围\n            if (type == BorderType.leftRight) {\n                this.abs.velocity.x = -this.abs.velocity.x\n            } else if (type == BorderType.upDown) {\n                this.abs.velocity.y = -this.abs.velocity.y\n            }\n            this.abs.velocity.normalize()\n            this.abs.setVelocity(this.abs.velocity)\n            this.abs.info.addScreenBounceCount()\n            // FixedUtil.deltaTimeMovePostion(tempPos1, tempPos, this.abs.velocity, dt)\n            // this.abs.setAngle(this.abs.skillTab.baseAngle + MathAngle.posToAngle(tempPos, tempPos1))\n        }\n    }\n}\n\n\n"]}