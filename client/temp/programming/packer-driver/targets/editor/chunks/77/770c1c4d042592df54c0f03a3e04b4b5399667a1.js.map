{"version":3,"sources":["file:///C:/chickenStarClient/client/assets/scripts/logic/model/home/battle/BattleMainRecordPop.ts"],"names":["_decorator","js","Label","Node","ProgressBar","ToggleContainer","ViewPop","FightRoleTeam","FightWeaponTeam","HeroFightInfo","Func","PlayerHeadItem","SimpleRoleInfo","tab","LangMgr","GameUtil","ccclass","property","BattleMainRecordPop","msg","register","onShow","openData","top3Records","sort","a","b","role","powerScore","gate_txt","string","getLab","getData","PveStageTableByStageId","getValue","stageId","StageName","onSelect","onToggle","dd","index","toggleContainer","toggleItems","length","v","console","log","updateRole","firstRecord","info_node","active","no_node","playerInfo","merge","headItem","initHeadInfo","roleInfo","name_txt","name","power_txt","convertNumber","totalDamage","heros","heroes","damage","hero","intoIndex","itemId","heroItemId","level","star","forBy","push","i","fightDamageBarNodes","children","getChildByName","getComponent","progress","Math","floor","formatStr","toString","fightTeam","setHeros","fightWeapon","setRogueIds","weaponIds"],"mappings":"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","sourcesContent":["import { _decorator, Component, instantiate, js, Label, Node, Prefab, ProgressBar, Toggle, ToggleContainer, tween, Vec3 } from 'cc';\nimport { ViewPop } from '../../../../framework/base/ViewPop';\nimport { proto } from 'client_protocol';\nimport { FightRoleTeam } from '../../../fight/view/common/FightRoleTeam';\nimport { FightWeaponTeam } from '../../../fight/view/common/FightWeaponTeam';\nimport { FightHeroInfo } from '../../../fight/data/FightHeroInfo';\nimport { HeroFightInfo } from '../../../fight/data/HeroFightInfo';\nimport { Func } from '../../../utils/Func';\nimport { HeroRoadItem } from '../../activity/heroRoad/HeroRoadItem';\nimport { PlayerHeadItem } from '../../common/PlayerHeadItem';\nimport { SimpleRoleInfo } from '../../friends/SimpleRoleInfo';\nimport { tab } from '../../../../Table/table_gen';\nimport { LangMgr } from '../../../mgr/LangMgr';\nimport { GameUtil } from '../../../utils/GameUtil';\n\nconst { ccclass, property } = _decorator;\n@ccclass('BattleMainRecordPop')\nexport class BattleMainRecordPop extends ViewPop {\n    @property(ToggleContainer)\n    toggleContainer: ToggleContainer = null\n\n    @property(Node)\n    info_node: Node = null\n\n    @property(PlayerHeadItem)\n    headItem: PlayerHeadItem = null\n\n    @property(Label)\n    name_txt: Label = null\n    @property(Label)\n    power_txt: Label = null\n\n    @property(Label)\n    gate_txt: Label = null\n\n\n\n    @property(FightRoleTeam)\n    fightTeam: FightRoleTeam = null\n    @property(FightWeaponTeam)\n    fightWeapon: FightWeaponTeam = null\n    @property(Node)\n    fightDamageBarNodes: Node = null\n\n\n    @property(Node)\n    no_node: Node = null\n\n\n    msg: proto.Msg_GetMainStageCleardRecordsRsp\n\n\n\n    register(): void {\n\n    }\n    onShow(): void {\n        this.msg = this.openData\n        this.msg.top3Records.sort((a, b) => {\n            return (a.role && a.role.powerScore) - (b.role && b.role.powerScore)\n        })\n\n        this.gate_txt.string = LangMgr.getLab(tab.getData().PveStageTableByStageId.getValue(this.msg.stageId).StageName)\n        this.onSelect(0)\n    }\n\n    onToggle(dd: Toggle) {\n        for (let index = 0; index < this.toggleContainer.toggleItems.length; index++) {\n            const v = this.toggleContainer.toggleItems[index];\n            if (v == dd) {\n                this.onSelect(index)\n            }\n        }\n    }\n\n    onSelect(index: number) {\n        console.log(index)\n        if (index == 0) {\n            this.updateRole(this.msg.firstRecord)\n        } else {\n            this.updateRole(this.msg.top3Records[index - 1])\n        }\n    }\n\n    updateRole(role: proto.IMainStageCleardRecord) {\n        console.log(role)\n        if (role == null || role.role == null) {\n            this.info_node.active = false\n            this.no_node.active = true\n            return\n        }\n        this.info_node.active = true\n        this.no_node.active = false\n\n        const playerInfo = new SimpleRoleInfo();\n        playerInfo.merge(role.role);\n\n        this.headItem.initHeadInfo({ roleInfo: playerInfo });\n\n        this.name_txt.string = role.role.name\n        this.power_txt.string = GameUtil.convertNumber(role.role.powerScore) \n\n        let totalDamage = 0\n        let heros = []\n        for (let index = 0; index < role.heroes.length; index++) {\n            const v = role.heroes[index];\n            totalDamage += v.damage\n\n            let hero = new HeroFightInfo()\n            hero.intoIndex = index + 1\n            hero.itemId = v.heroItemId\n            hero.level = v.level\n\n            hero.star = (Func.forBy(role.role.heroes, \"itemId\", hero.itemId) as proto.SimpleHero).star\n            heros.push(hero)\n        }\n\n        for (let i = 0; i < this.fightDamageBarNodes.children.length; i++) {\n            const v = this.fightDamageBarNodes.children[i];\n            let damage = role.heroes[i].damage || 0\n            v.getChildByName(\"damage_bar\").getComponent(ProgressBar).progress = Math.floor(damage * 100 / totalDamage) / 100\n            v.getChildByName(\"percent_txt\").getComponent(Label).string = js.formatStr(\"%s%\", Math.floor(damage * 100 / totalDamage).toString())\n        }\n\n\n        this.fightTeam.setHeros(heros, true)\n        this.fightWeapon.setRogueIds(role.weaponIds)\n    }\n\n}\n\n\n"]}