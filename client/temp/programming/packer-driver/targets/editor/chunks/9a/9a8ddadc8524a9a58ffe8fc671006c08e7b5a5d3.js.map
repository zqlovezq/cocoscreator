{"version":3,"sources":["file:///C:/chickenStarClient/client/assets/scripts/logic/fight/pvp/PvpControl.ts"],"names":["PvpLineData","PvpControl","_decorator","Mask","Node","UITransform","Vec3","view","AbsControl","tab","EventMgr","FightEvent","FightMacro","FightRootControl","FightState","PvpObjType","proto","FightData","Func","PvpObjFactory","BuffUI","DamageData","DamageLab","PvpDrawLine","PvpMoveCircle","FightMsgControl","ViewName","UIMgr","ccclass","property","tempPos","owner","abs","target","ownerBullet","maxDelayTime","constructor","timestamp","points","push","allAbsObj","Map","absAllMap","delayTime","time","executeEvIndex","fightFlow","dataPause","pvpLine","lineList","lineListIdx","ins","_instance","purge","length","set","role","bullet","init","isPvp","register","fightPvp","lineMap","i","flow","ev","FEDrawLine","data","get","drawLine","sort","a","b","onFight","Pvp_recycle","Pause","onPause","Time_Scale","onTime_Scale","start","setParent","getRootView","setState","ing","emitFight","Pvp_start","isTest","iFightUpdate","dt","forEach","v","k","len","index","v1","updateFrame","recycle","p","show","totalLen","executeEv","onNextFrame","onNextStep","removeObj","put","pause","list","avatar","updatePause","updateTimeScale","addObj","objList","getObjList","objType","objId","delete","splice","getObjById","getRoleById","getBulletById","getHerosByGroup","group","newList","recycleAll","isRecycle","clear","destory","fl","console","log","Event","FECreateHero","createHero","fightInfo","getPvpFightInfoByGroup","hero","forBy","heroData","serial","getRole","objects","id","setGroup","setHero","barItem","getUIView","createBarItem","setAttrData","attrData","isActive","x","y","z","serverPostion","setPosition","FEUpdateHP","updateHP","setData","FECreateBullet","createBullet","configTab","getData","BulletTableById","getValue","bulletId","walkAnimId","bulletParent","getBulletNode","isEffectShowBelow","CommonShow","CommonShow_LaunchMask","maskNode","uiComp","addComponent","anchorX","height","getVisibleSize","width","parent","angle","getBullet","setFl","run","FERemoveObject","removeObject","FEAddBuffer","addBuffer","buffs","addBuffEffect","bufferId","FEUpdateBuffer","updateBuffer","buff","getBuffByIndex","layer","removeBy","removeBuffEffect","buffId","BuffTableById","VFXID","buffUI","getBuffUI","roleDown","addChild","node","setPvpBuff","addBuffUI","addCount","subCount","buffUis","totalCount","FEUseSkill","useSkill","attacker","playSkill","actionId","setOtherSpeedScale","Math","max","attackSpeed","FEObjectDead","objectDead","hp","onDead","FEObjectRevive","objectRevive","onRevive","FEDamage","damage","onDamage","dd","isCritical","isFatalAtk","isCriticalPoint","isTear","isDivulse","shieldDamage","pos","getPosition","center","showDamageNum","bulletSerial","hitEffect","Hit_Effect_Add","startPos","getHitPos","FEBufferHeal","heal","onHeal","buf","bufferIndex","isHeal","healHp","FEStartRest","startRest","onSkillCD","restTime","FEEndRest","endRest","skillCdEnd","FEMoveTo","moveTo","setStartPos","dx","dy","speed","setVelocity","FEMoveLineCircle","moveLineCircle","move","addAngle","FEEndFight","endFight","end","result","viewName","FightWinPop","fincaBattleFightRsp","rewards","FightLosePop","FEUpdateHoldTime","updateHoldTime","showHoldTime","holdTime"],"mappings":"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","sourcesContent":["import { _decorator, ccenum, Mask, Node, UITransform, v3, Vec3, view } from \"cc\";\nimport { AbsControl, IClear } from \"../../../framework/base/IAbs\";\nimport { tab } from \"../../../Table/table_gen\";\nimport { EventMgr } from \"../../mgr/EventMgr\";\nimport { FightEvent } from \"../define/FightEvent\";\nimport { FightMacro, IFightUpdate } from \"../define/FightDefine\";\nimport { FightRootControl, FightState } from \"../FightRootControl\";\nimport { PvpObj, PvpObjType } from \"./obj/PvpObj\";\nimport { proto } from \"client_protocol\";\nimport { PvpRole } from \"./obj/PvpRole\";\nimport { FightData } from \"../data/FightData\";\nimport { Func } from \"../../utils/Func\";\nimport { PvpObjFactory } from \"./obj/PvpObjFactory\";\nimport { BuffUI } from \"../base/buff/BuffUI\";\nimport { PvpBullet } from \"./obj/PvpBullet\";\nimport { DamageData } from \"../base/damage/DamageData\";\nimport { DamageLab } from \"../base/damage/DamageLab\";\nimport { ConfirmPop } from \"../../model/confirm/ConfirmPop\";\nimport { LangMgr } from \"../../mgr/LangMgr\";\nimport { CommonTipsPop } from \"../../model/common/CommonTipsPop\";\nimport { PvpDrawLine } from \"./PvpDrawLine\";\nimport { PvpMoveCircle, PvpMoveLine } from \"./move/PvpMove\";\nimport { FightMsgControl } from \"../FightMsgControl\";\nimport { ViewName } from \"../../define/ViewDefine\";\nimport { UIMgr } from \"../../mgr/UIMgr\";\n\nconst { ccclass, property } = _decorator;\n\nconst tempPos = new Vec3()\nconst owner: { abs: PvpRole, target: PvpRole } = { abs: null, target: null }\nconst ownerBullet: { abs: PvpBullet } = { abs: null }\nconst maxDelayTime = 2000\n\nclass PvpLineData {\n    public timestamp: number = 0\n    public points: Array<number[]> = []\n    constructor(timestamp: number, points: number[]) {\n        this.timestamp = timestamp\n        this.points = []\n        this.points.push(points)\n    }\n}\n\n/** PVP控制器 */\nexport class PvpControl extends AbsControl implements IClear, IFightUpdate {\n\n    private static _instance: PvpControl;\n    public static get ins() {\n        if (null == this._instance) {\n            this._instance = new PvpControl();\n        }\n        return this._instance;\n    }\n\n    private allAbsObj: Map<number, PvpObj[]> = new Map<number, PvpObj[]>()\n    /** 根据唯一id记录 */\n    private absAllMap: Map<number, PvpObj> = new Map<number, PvpObj>()\n    delayTime: number = 0\n    time: number = 0\n    executeEvIndex: number = 0\n    fightFlow: proto.FightFlow[] = []\n    dataPause: boolean = true\n    pvpLine: PvpDrawLine = new PvpDrawLine()\n\n    private lineList: PvpLineData[] = []\n    private lineListIdx: number = 0\n\n    purge(): void {\n        this.dataPause = true\n        this.time = 0\n        this.delayTime = 0\n        this.executeEvIndex = 0\n        this.fightFlow.length = 0\n        this.allAbsObj.set(PvpObjType.role, [])\n        this.allAbsObj.set(PvpObjType.bullet, [])\n    }\n\n    init() {\n        this.purge()\n        if (!FightData.ins.isPvp) {\n            return\n        }\n        this.register()\n        this.fightFlow = FightData.ins.fightPvp.fightFlow as proto.FightFlow[]\n        // 整理线条消息\n        let lineMap = new Map<number, PvpLineData>()\n        for (let i = 0; i < this.fightFlow.length; ++i) {\n            const flow = this.fightFlow[i];\n            if (flow.ev == proto.FightEvent.FEDrawLine) {\n                let data = lineMap.get(flow.timestamp)\n                if (data == null) {\n                    data = new PvpLineData(flow.timestamp, flow.drawLine.points);\n                    lineMap.set(flow.timestamp, data);\n                    this.lineList.push(data)\n                } else {\n                    data.points.push(flow.drawLine.points);\n                }\n            }\n        }\n        this.lineList.sort(function (a, b) { return a.timestamp - b.timestamp; })\n    }\n\n    register() {\n        EventMgr.onFight(FightEvent.Pvp_recycle, this.Pvp_recycle, this)\n        EventMgr.onFight(FightEvent.Pause, this.onPause, this)\n        EventMgr.onFight(FightEvent.Time_Scale, this.onTime_Scale, this)\n    }\n\n    start() {\n        this.pvpLine.setParent(FightRootControl.ins.getRootView().drawLine)\n        FightRootControl.ins.setState(FightState.ing)\n        EventMgr.emitFight(FightEvent.Pvp_start)\n        this.dataPause = FightMsgControl.ins.isTest\n    }\n\n    iFightUpdate(dt: number): void {\n        if (this.dataPause) {\n            return\n        }\n        this.delayTime += dt\n        if (this.delayTime < maxDelayTime) {\n            return\n        }\n\n        this.time += dt\n        this.allAbsObj.forEach((v, k) => {\n            let len = v.length\n            for (let index = 0; index < len; index++) {\n                const v1 = v[index];\n                v1 && v1.updateFrame(dt)\n            }\n        })\n\n        if (this.lineListIdx < this.lineList.length) {\n            const data = this.lineList[this.lineListIdx]\n            if (data.timestamp <= this.time) {\n                this.pvpLine.recycle()\n                for (let p of data.points) {\n                    this.pvpLine.show(p)\n                }\n                ++this.lineListIdx;\n            }\n        }\n\n        let totalLen = this.fightFlow.length\n        if (this.executeEvIndex < totalLen) {\n            for (let index = this.executeEvIndex; index < totalLen; index++) {\n                const v = this.fightFlow[index];\n                if (this.time < v.timestamp) {\n                    break\n                }\n                this.executeEv(v)\n                this.executeEvIndex += 1\n            }\n        }\n    }\n    onNextFrame() {\n        this.dataPause = false\n        this.iFightUpdate(16)\n        this.dataPause = true\n    }\n    onNextStep() {\n        let totalLen = this.fightFlow.length\n        if (this.executeEvIndex < totalLen) {\n            for (let index = this.executeEvIndex; index < totalLen; index++) {\n                const v = this.fightFlow[index];\n                this.executeEv(v)\n                this.executeEvIndex += 1\n                break\n            }\n        }\n    }\n\n    //-----------------obj相关---------------\n    Pvp_recycle(abs: PvpObj) {\n        this.removeObj(abs)\n        PvpObjFactory.put(abs)\n    }\n    onPause(pause: boolean) {\n        this.allAbsObj.forEach((list, k) => {\n            let len = list.length\n\n            for (let index = 0; index < len; index++) {\n                const v = list[index];\n                if (v && v.avatar) {\n                    v.avatar.updatePause(pause)\n                }\n            }\n        })\n    }\n    onTime_Scale() {\n        this.allAbsObj.forEach((list, k) => {\n            let len = list.length\n            for (let index = 0; index < len; index++) {\n                const v = list[index];\n                if (v && v.avatar) {\n                    v.avatar.updateTimeScale()\n                }\n            }\n        })\n    }\n\n\n    addObj(abs: PvpObj) {\n        let objList = this.getObjList(abs.objType)\n        objList.push(abs)\n        this.absAllMap.set(abs.objId, abs)\n    }\n\n    removeObj(abs: PvpObj) {\n        let objList = this.getObjList(abs.objType)\n        let len = objList.length\n        this.absAllMap.delete(abs.objId)\n        for (let index = 0; index < len; index++) {\n            const v = objList[index];\n            if (v == abs) {\n                objList.splice(index, 1)\n                return true\n            }\n        }\n        return false\n    }\n\n    getObjList(objType: PvpObjType) {\n        return this.allAbsObj.get(objType)\n    }\n\n    getObjById(objId: number) {\n        return this.absAllMap.get(objId)\n    }\n\n    getRoleById(objId: number): PvpRole {\n        return this.getObjById(objId) as PvpRole\n    }\n    getBulletById(objId: number): PvpBullet {\n        return this.getObjById(objId) as PvpBullet\n    }\n\n    getHerosByGroup(group: number) {\n        let list = this.allAbsObj.get(PvpObjType.role) as PvpRole[]\n        let newList = []\n        for (let index = 0; index < list.length; index++) {\n            const v = list[index];\n            if (v.group == group) {\n                newList.push(v)\n            }\n        }\n        return newList\n    }\n    recycleAll() {\n        this.allAbsObj.forEach((v, k) => {\n            let len = v.length\n            for (let index = len - 1; index >= 0; index--) {\n                const v1 = v[index];\n                !v1.isRecycle && v1.recycle()\n            }\n        })\n        this.absAllMap.clear()\n        this.pvpLine.destory()\n    }\n\n    //------------执行相关----------------\n    executeEv(fl: proto.FightFlow) {\n        if (proto.FightEvent[fl.ev] != proto.FightEvent[proto.FightEvent.FEDrawLine]) {\n            console.log(proto.FightEvent[fl.ev], fl)\n        }\n        if (this[proto.FightEvent[fl.ev]]) {\n            this[proto.FightEvent[fl.ev]](fl[fl.Event])\n        }\n    }\n    FECreateHero(createHero: proto.FightFlowCreateHero) {\n\n        let fightInfo = FightData.ins.getPvpFightInfoByGroup(createHero.group)\n        let hero = Func.forBy(fightInfo.fightInfo.heroData, \"id\", createHero.serial) as proto.HeroFightData\n        if (hero == null) {\n            console.log(\"创建英雄-未找到英雄id,\")\n            return\n        }\n        owner.abs = PvpObjFactory.getRole(FightRootControl.ins.getRootView().objects)\n        owner.abs.objId = hero.id\n        owner.abs.setGroup(createHero.group)\n        owner.abs.setHero(hero)\n        owner.abs.barItem = FightRootControl.ins.getUIView().createBarItem(null)\n        owner.abs.barItem.setAttrData(owner.abs.attrData)\n        owner.abs.barItem.isActive = true\n        owner.abs.init()\n\n        tempPos.x = createHero.x\n        tempPos.y = createHero.y\n        tempPos.z = 0\n        FightMacro.serverPostion(tempPos)\n        owner.abs.setPosition(tempPos)\n        this.addObj(owner.abs)\n    }\n    FEUpdateHP(updateHP: proto.IFightFlowUpdateHP) {\n        owner.abs = this.getRoleById(updateHP.serial)\n        if (owner.abs) {\n            owner.abs.attrData.setData(updateHP)\n            owner.abs.updateHP()\n        }\n    }\n    FECreateBullet(createBullet: proto.FightFlowCreateBullet) {\n        let configTab = tab.getData().BulletTableById.getValue(createBullet.bulletId)\n        if (!configTab || (createBullet.walkAnimId == 0)) {\n            console.log(\"子弹配置为null or walkAnimId为0\")\n            return\n        }\n\n        let bulletParent = FightRootControl.ins.getBulletNode(FightMacro.isEffectShowBelow(createBullet.walkAnimId))\n        if (configTab.CommonShow == tab.CommonShow.CommonShow_LaunchMask) {\n            let maskNode = new Node(\"BulletLaunchMask\")\n            let uiComp = maskNode.addComponent(UITransform)\n            uiComp.anchorX = 0\n            uiComp.height = view.getVisibleSize().height\n            uiComp.width = view.getVisibleSize().width\n            maskNode.addComponent(Mask)\n\n            maskNode.parent = bulletParent\n            bulletParent = maskNode\n            if (createBullet.group == 1) {\n                maskNode.angle = 180\n            }\n        }\n        ownerBullet.abs = PvpObjFactory.getBullet(bulletParent)\n        ownerBullet.abs.objId = createBullet.serial\n        ownerBullet.abs.setFl(createBullet)\n        ownerBullet.abs.init()\n        this.addObj(ownerBullet.abs)\n        ownerBullet.abs.run()\n    }\n    FERemoveObject(removeObject: proto.FightFlowRemoveObject) {\n        owner.abs = this.getRoleById(removeObject.serial)\n        if (owner.abs) {\n            owner.abs.recycle()\n        }\n    }\n\n    FEAddBuffer(addBuffer: proto.FightFlowAddBuffer) {\n        owner.abs = this.getRoleById(addBuffer.owner)\n        if (owner.abs) {\n            owner.abs.buffs.push(addBuffer)\n            this.addBuffEffect(owner.abs, addBuffer.bufferId)\n        }\n    }\n\n\n    FEUpdateBuffer(updateBuffer: proto.FightFlowUpdateBuffer) {\n        owner.abs = this.getRoleById(updateBuffer.owner)\n        if (owner.abs) {\n            let buff = owner.abs.getBuffByIndex(updateBuffer.index)\n            if (buff) {\n                if (updateBuffer.layer == 0) {\n                    Func.removeBy(owner.abs.buffs, \"index\", updateBuffer.index)\n                    this.removeBuffEffect(owner.abs, buff.bufferId)\n                } else {\n                    buff.layer = updateBuffer.layer\n                }\n            }\n        }\n    }\n\n    addBuffEffect(abs: PvpRole, buffId: number) {\n        let buff = tab.getData().BuffTableById.getValue(buffId)\n        if (buff && buff.VFXID) {\n            let buffUI = abs.getBuffUI(buffId)\n            if (buffUI == null) {\n                buffUI = BuffUI.get()\n                if (FightMacro.isEffectShowBelow(buff.VFXID)) {\n                    FightRootControl.ins.getRootView().roleDown.addChild(buffUI.node)\n                } else {\n                    abs.node.addChild(buffUI.node)\n                }\n\n                buffUI.setPvpBuff(buffId, abs)\n                abs.addBuffUI(buffUI)\n            }\n            buffUI.addCount()\n        }\n\n    }\n    removeBuffEffect(abs: PvpRole, buffId: number) {\n        let buff = tab.getData().BuffTableById.getValue(buffId)\n        if (buff && buff.VFXID) {\n            let buffUI = abs.getBuffUI(buffId)\n            if (buffUI) {\n                buffUI.subCount()\n                for (let index = 0; index < abs.buffUis.length; index++) {\n                    const v = abs.buffUis[index];\n                    if (v.buffId == buffUI.buffId) {\n                        if (v.totalCount <= 0) {\n                            v.recycle()\n                            abs.buffUis.splice(index, 1)\n                            break\n                        }\n                    }\n                }\n            }\n        }\n\n    }\n\n\n    FEUseSkill(useSkill: proto.FightFlowUseSkill) {\n        owner.abs = this.getRoleById(useSkill.attacker)\n        if (owner.abs) {\n            owner.abs.playSkill(useSkill.actionId)\n            owner.abs.avatar.setOtherSpeedScale(Math.max(useSkill.attackSpeed, -9000))\n        }\n    }\n\n    FEObjectDead(objectDead: proto.FightFlowObjectDead) {\n        owner.abs = this.getRoleById(objectDead.hp.serial)\n        if (owner.abs) {\n            owner.abs.onDead()\n            this.FEUpdateHP(objectDead.hp)\n        }\n    }\n\n    FEObjectRevive(objectRevive: proto.FightFlowObjectRevive) {\n        owner.abs = this.getRoleById(objectRevive.hp.serial)\n        if (owner.abs) {\n            owner.abs.onRevive()\n            this.FEUpdateHP(objectRevive.hp)\n        }\n    }\n    FEDamage(damage: proto.FightFlowDamage) {\n        // console.log(\"FEDamage\", damage)\n        owner.abs = this.getRoleById(damage.target)\n        if (owner.abs) {\n            owner.abs.onDamage(damage)\n            let dd = DamageData.get()\n            dd.isCritical = damage.isFatalAtk\n            dd.isCriticalPoint = damage.isCritical\n            dd.isTear = damage.isDivulse\n            dd.damage = damage.damage + damage.shieldDamage\n            dd.pos.x = owner.abs.getPosition().x + owner.abs.center.x\n            dd.pos.y = owner.abs.getPosition().y + owner.abs.center.y\n            DamageLab.showDamageNum(dd)\n\n\n            //命中特效\n            owner.target = this.getRoleById(damage.target)\n            ownerBullet.abs = this.getBulletById(damage.bulletSerial)\n            if (owner.target && ownerBullet.abs) {\n                if (ownerBullet.abs.fl.hitEffect.length) {\n                    EventMgr.emitFight(FightEvent.Hit_Effect_Add, ownerBullet.abs.fl.hitEffect, ownerBullet.abs.startPos, owner.target.getHitPos())\n                }\n            }\n        }\n\n    }\n    FEBufferHeal(heal: proto.FightFlowBufferHeal) {\n        owner.abs = this.getRoleById(heal.serial)\n        if (owner.abs) {\n            owner.abs.onHeal(heal)\n            let buf = owner.abs.getBuffByIndex(heal.bufferIndex)\n            if (buf) {\n                let dd = DamageData.get()\n                dd.isHeal = true\n                dd.damage = heal.healHp\n                dd.pos.x = owner.abs.getPosition().x + owner.abs.center.x\n                dd.pos.y = owner.abs.getPosition().y + owner.abs.center.y\n                DamageLab.showDamageNum(dd)\n            }\n        }\n    }\n    FEStartRest(startRest: proto.FightFlowStartRest) {\n        owner.abs = this.getRoleById(startRest.serial)\n        if (owner.abs) {\n            owner.abs.onSkillCD(startRest.restTime)\n        }\n    }\n\n    FEEndRest(endRest: proto.FightFlowEndRest) {\n        owner.abs = this.getRoleById(endRest.serial)\n        if (owner.abs) {\n            owner.abs.skillCdEnd()\n        }\n    }\n\n    FEMoveTo(moveTo: proto.FightFlowMoveTo) {\n        ownerBullet.abs = this.getBulletById(moveTo.serial)\n        if (ownerBullet.abs) {\n            tempPos.x = moveTo.x\n            tempPos.y = moveTo.y\n            tempPos.z = 0\n            FightMacro.serverPostion(tempPos)\n            ownerBullet.abs.setStartPos(tempPos)\n\n            tempPos.x = moveTo.dx\n            tempPos.y = moveTo.dy\n            ownerBullet.abs.speed = moveTo.speed\n            ownerBullet.abs.setVelocity(tempPos)\n        }\n    }\n\n    FEMoveLineCircle(moveLineCircle: proto.FightFlowMoveLineCircle) {\n        ownerBullet.abs = this.getBulletById(moveLineCircle.serial)\n        if (ownerBullet.abs) {\n            tempPos.x = moveLineCircle.x\n            tempPos.y = moveLineCircle.y\n            tempPos.z = 0\n            FightMacro.serverPostion(tempPos)\n            ownerBullet.abs.setStartPos(tempPos)\n\n            tempPos.x = moveLineCircle.dx\n            tempPos.y = moveLineCircle.dy\n            ownerBullet.abs.speed = moveLineCircle.speed\n            ownerBullet.abs.setVelocity(tempPos)\n            if (!(ownerBullet.abs.move instanceof PvpMoveCircle)) {\n                return\n            }\n            ownerBullet.abs.move.init();\n            (ownerBullet.abs.move as PvpMoveCircle).addAngle = moveLineCircle.angle\n        }\n    }\n\n    FEEndFight(endFight: proto.FightFlowEndFight) {\n        FightRootControl.ins.setState(FightState.end)\n        if (endFight.result == 0) {\n            UIMgr.ins.show({ viewName: ViewName.FightWinPop, data: FightData.ins.fincaBattleFightRsp.rewards })\n        } else if (endFight.result) {\n            UIMgr.ins.show({ viewName: ViewName.FightLosePop, data: FightData.ins.fincaBattleFightRsp.rewards })\n        }\n        // CommonTipsPop.create(LangMgr.getLab(\"战斗结束,\" + endFight.result), () => {\n        //     FightRootControl.ins.pvpEnd()\n        // })\n    }\n\n    FEUpdateHoldTime(updateHoldTime: proto.FightFlowUpdateHoldTime) {\n        owner.abs = this.getRoleById(updateHoldTime.serial)\n        if (owner.abs) {\n            owner.abs.showHoldTime(updateHoldTime.holdTime)\n        }\n    }\n\n\n\n    // FESetBulletSpeed(setBulletSpeed: proto.FightFlowSetBulletSpeed) {\n    //     let bullet = this.getBulletById(setBulletSpeed.serial)\n    //     if (bullet) {\n    //         bullet.speed = setBulletSpeed.speed\n    //         bullet.setVelocityAngle(bullet.getVoAngle())\n    //     }\n    // }\n\n\n\n    // FEDrawLine(drawLine: proto.FightFlowDrawLine){\n    //     console.log(drawLine)\n    //     this.pvpLine.show(drawLine.points)\n    // }\n\n}"]}