{"version":3,"sources":["file:///C:/chickenStarClient/client/assets/scripts/logic/fight/pvp/obj/PvpBullet.ts"],"names":["_decorator","Vec3","PvpObj","PvpObjType","tab","PvpMove","PvpMoveCircle","PvpMoveLine","FightMacro","ccclass","property","tempPos","PvpBullet","objType","bullet","configTab","startPos","fl","move","reset","set","ZERO","isMaskParent","parent","node","removeFromParent","destroy","setFl","isDead","getData","BulletTableById","getValue","bulletId","speed","x","y","z","serverPostion","setStartPos","init","playAnim","walkAnimId","name","pos","position","setPosition","updateFrame","dt","setVelocity","ve","checkNodeAngle","setVelocityAngle","angle","Trajectory","Trajectory_StraightLine","Trajectory_Laser","Trajectory_Trajectory","setAngle","voAngle","run","getMove","moveType","absMove","Centrifugation","length","setAbs","getLiveTime","total","LiveTime","forEach","v"],"mappings":"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","sourcesContent":["import { _decorator, Component, Vec3 } from \"cc\";\nimport { PvpObj, PvpObjType } from \"./PvpObj\";\nimport { tab } from \"../../../../Table/table_gen\";\nimport { proto } from \"client_protocol\";\nimport { AbsMove } from \"../../base/move/AbsMove\";\nimport { PvpMove, PvpMoveCircle, PvpMoveLine } from \"../move/PvpMove\";\nimport { BulletMoveLine } from \"../../base/move/bullet/BulletMoveLine\";\nimport { FightMacro } from \"../../define/FightDefine\";\nconst { ccclass, property } = _decorator;\nconst tempPos = new Vec3()\n\n@ccclass('PvpBullet')\nexport class PvpBullet extends PvpObj {\n    objType: PvpObjType = PvpObjType.bullet\n    configTab: tab.BulletTable\n    /** 开始位置 */\n    startPos: Vec3 = new Vec3()\n    fl: proto.FightFlowCreateBullet\n    move: PvpMove\n    reset(): void {\n        super.reset()\n        this.fl = null\n        this.move = null\n        this.startPos.set(Vec3.ZERO)\n        if (this.isMaskParent()) {\n            let parent = this.node.parent\n            this.node.removeFromParent()\n            parent.destroy()\n        }\n    }\n\n\n    setFl(fl: proto.FightFlowCreateBullet) {\n        this.isDead = true\n        this.fl = fl\n        this.configTab = tab.getData().BulletTableById.getValue(fl.bulletId)\n        // this.speed = this.configTab.Speed\n        this.speed = 0\n\n        tempPos.x = this.fl.x\n        tempPos.y = this.fl.y\n        tempPos.z = 0\n        FightMacro.serverPostion(tempPos)\n        this.setStartPos(tempPos)\n        // this.setVelocityAngle(this.fl.angle)\n    }\n\n    init(): void {\n        super.init();\n        this.playAnim(this.fl.walkAnimId)\n\n    }\n\n    isMaskParent() {\n        return this.node && this.node.parent && this.node.parent.name == \"BulletLaunchMask\"\n    }\n\n    setStartPos(pos: Vec3) {\n        this.startPos.set(pos)\n        if (this.isMaskParent()) {\n            this.node.parent.position = pos\n            tempPos.set(Vec3.ZERO)\n            this.setPosition(tempPos)\n        } else {\n            this.setPosition(pos)\n        }\n    }\n\n    updateFrame(dt: number): void {\n        if (this.isDead) {\n            return\n        }\n        super.updateFrame(dt)\n        this.move && this.move.updateFrame(dt)\n    }\n\n    setVelocity(ve: Vec3) {\n        super.setVelocity(ve)\n        this.checkNodeAngle()\n    }\n\n    setVelocityAngle(angle: number) {\n        super.setVelocityAngle(angle)\n        this.checkNodeAngle()\n    }\n    checkNodeAngle() {\n        if (this.isMaskParent() || this.configTab.Trajectory == tab.Trajectory.Trajectory_StraightLine || this.configTab.Trajectory == tab.Trajectory.Trajectory_Laser || this.configTab.Trajectory == tab.Trajectory.Trajectory_Trajectory) {\n            this.setAngle(this.voAngle)\n        }\n    }\n\n    run() {\n        this.move = this.getMove(this.configTab.Trajectory)\n        this.isDead = false\n    }\n\n    getMove(moveType: tab.Trajectory) {\n        let absMove: PvpMove\n        if (moveType == tab.Trajectory.Trajectory_StraightLine) {\n\n            if (this.configTab.Centrifugation.length > 0) {\n                absMove = new PvpMoveCircle()\n            } else {\n                absMove = new PvpMoveLine()\n            }\n        } else {\n            absMove = new PvpMove()\n        }\n        absMove.setAbs(this)\n        absMove.init()\n        return absMove\n    }\n\n    getLiveTime() {\n        if (this.configTab.Trajectory == tab.Trajectory.Trajectory_Trajectory) {\n            let total = 0\n            this.configTab.LiveTime.forEach(v => {\n                total += v\n            })\n            return total\n        }\n        return this.configTab.LiveTime[0]\n    }\n}"]}