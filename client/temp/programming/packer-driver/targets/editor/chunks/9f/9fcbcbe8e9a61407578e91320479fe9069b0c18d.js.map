{"version":3,"sources":["file:///C:/chickenStarClient/client/assets/scripts/logic/fight/base/skill/SkillGroup.ts"],"names":["_decorator","tab","Skill","ccclass","property","SkillGroup","configId","configTab","skills","normalSkills","nowSkill","nowSkillIndex","isWeapen","_attackCount","realAttackCount","triggerAttackCount","first","setConfigId","id","getData","SkillGroupTableById","getValue","length","index","NormalAttack","element","addSkill","clearAttrData","setDefaultNormalSkill","skill","push","isNormalAttack","isMovesAttack","nextNormalSkill","isNormalSkill","isWeapenSkill","fillUp","subAttack","count","clearTriggerAttackCount","checkSkillCD","getCanAttackCount","getAttackSum","AttackCount"],"mappings":"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","sourcesContent":["import { _decorator, Component } from \"cc\";\nimport { tab } from \"../../../../Table/table_gen\";\nimport { Skill } from \"./Skill\";\nimport { EventMgr } from \"../../../mgr/EventMgr\";\nimport { FightEvent } from \"../../define/FightEvent\";\n\nconst { ccclass, property } = _decorator;\n\n@ccclass('SkillGroup')\nexport class SkillGroup {\n    configId: number\n    configTab: tab.SkillGroupTable\n\n    skills: Skill[] = []\n    normalSkills: Skill[] = []\n\n    nowSkill: Skill\n    nowSkillIndex: number = 0 //普通攻击依次替换\n    isWeapen: boolean = false //是否是武器招式\n\n    //----------切换技能组需要清除的属性\n    _attackCount: number = 0 //攻击次数（减免时不增加次数）\n    realAttackCount: number = 0 //实际的攻击次数\n    triggerAttackCount: number = 0 //触发器攻击次数（触发器成功时， 会清零）\n    first: boolean = false\n\n    setConfigId(id: number) {\n        this.configId = id\n        this.configTab = tab.getData().SkillGroupTableById.getValue(id)\n\n        this.skills.length = 0\n        this.normalSkills.length = 0\n        for (let index = 0; index < this.configTab.NormalAttack.length; index++) {\n            const element = this.configTab.NormalAttack[index];\n            this.addSkill(element)\n        }\n\n    }\n\n    clearAttrData() {\n        this._attackCount = 0\n        this.realAttackCount = 0\n        this.triggerAttackCount = 0\n        this.setDefaultNormalSkill()\n    }\n\n    addSkill(id: number) {\n        let skill = new Skill()\n        skill.setConfigId(id)\n        this.skills.push(skill)\n        if (skill.isNormalAttack()) {\n            this.normalSkills.push(skill)\n        }\n        if (skill.isMovesAttack()) {\n            this.isWeapen = true\n            this.normalSkills.push(skill)\n        }\n    }\n\n    setDefaultNormalSkill() {\n        this.first = true\n        this.nowSkillIndex = 0\n        this.nowSkill = this.normalSkills[this.nowSkillIndex]\n\n    }\n\n    nextNormalSkill() {\n        if (this.first) {\n            this.nowSkillIndex = 0\n        } else {\n            this.nowSkillIndex += 1\n        }\n\n        if (this.nowSkillIndex >= this.normalSkills.length) {\n            this.nowSkillIndex = 0\n        }\n        this.nowSkill = this.normalSkills[this.nowSkillIndex]\n    }\n\n    /** 是否为普通技能 */\n    isNormalSkill() {\n        return this.normalSkills.length > 0\n    }\n    /** 是否为武器招式 */\n    isWeapenSkill() {\n        return this.isWeapen\n    }\n\n    fillUp() {\n        this._attackCount = 0\n        this.realAttackCount = 0\n    }\n\n    subAttack(count: number) {\n        count = count || 1\n        this._attackCount += count\n        this.realAttackCount += count\n        this.triggerAttackCount += count\n    }\n    clearTriggerAttackCount() {\n        this.triggerAttackCount = 0\n    }\n\n    checkSkillCD() {\n        return this.getCanAttackCount() <= 0\n    }\n\n    /** 获取可出手次数 */\n    getCanAttackCount() {\n        return this.getAttackSum() - this._attackCount\n    }\n\n    getAttackSum() {\n        return this.configTab.AttackCount\n    }\n}"]}