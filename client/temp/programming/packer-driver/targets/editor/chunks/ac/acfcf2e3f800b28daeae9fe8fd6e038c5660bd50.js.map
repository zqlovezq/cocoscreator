{"version":3,"sources":["file:///C:/chickenStarClient/client/node_modules/protobufjs/src/rpc.js"],"names":["_cjsLoader","_req","__cjsMetaURL","url","define","exports","require","module","__filename","__dirname","rpc","Service","_cjsExports"],"mappings":";;;;;;;;;AAAOA,MAAAA,U;;AACkBC,MAAAA,I,iBAAhBC,Y;;;8BAEHA,Y,GAAe,cAAYC,G;;AACjCH,MAAAA,UAAU,CAACI,MAAX,CAAkBF,YAAlB,EAAgC,UAAUG,OAAV,EAAmBC,OAAnB,EAA4BC,MAA5B,EAAoCC,UAApC,EAAgDC,SAAhD,EAA2D;AAC3F;AAGC;AAEA;AACD;AACA;AACA;;AACC,YAAIC,GAAG,GAAGL,OAAV;AAEA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;;AAECK,QAAAA,GAAG,CAACC,OAAJ,GAAcL,OAAO,CAAC,eAAD,CAArB,CAvC0F,CA0C3F;;AAEA,2BAAAM,WAAW,GAAGL,MAAM,CAACF,OAArB;AAGC,OA/CD,EA+CG,OAAO;AACR,yBAAiBJ;AADT,OAAP,CA/CH","sourcesContent":["import _cjsLoader from 'cce:/internal/ml/cjs-loader.mjs';\nimport { __cjsMetaURL as _req} from './rpc/service';\nlet _cjsExports;\nconst __cjsMetaURL = import.meta.url;\n_cjsLoader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {\n// #region ORIGINAL CODE\n\n\n \"use strict\";\n\n /**\n  * Streaming RPC helpers.\n  * @namespace\n  */\n var rpc = exports;\n\n /**\n  * RPC implementation passed to {@link Service#create} performing a service request on network level, i.e. by utilizing http requests or websockets.\n  * @typedef RPCImpl\n  * @type {function}\n  * @param {Method|rpc.ServiceMethod<Message<{}>,Message<{}>>} method Reflected or static method being called\n  * @param {Uint8Array} requestData Request data\n  * @param {RPCImplCallback} callback Callback function\n  * @returns {undefined}\n  * @example\n  * function rpcImpl(method, requestData, callback) {\n  *     if (protobuf.util.lcFirst(method.name) !== \"myMethod\") // compatible with static code\n  *         throw Error(\"no such method\");\n  *     asynchronouslyObtainAResponse(requestData, function(err, responseData) {\n  *         callback(err, responseData);\n  *     });\n  * }\n  */\n\n /**\n  * Node-style callback as used by {@link RPCImpl}.\n  * @typedef RPCImplCallback\n  * @type {function}\n  * @param {Error|null} error Error, if any, otherwise `null`\n  * @param {Uint8Array|null} [response] Response data or `null` to signal end of stream, if there hasn't been an error\n  * @returns {undefined}\n  */\n\n rpc.Service = require(\"./rpc/service\");\n\n\n// #endregion ORIGINAL CODE\n\n_cjsExports = module.exports;\n\n\n}, () => ({\n  './rpc/service': _req,\n}));\nexport { _cjsExports as default };\nexport { __cjsMetaURL }\n"]}