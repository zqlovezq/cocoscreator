{"version":3,"sources":["file:///C:/chickenStarClient/client/assets/scripts/logic/fight/base/damage/DamageCalculation.ts"],"names":["DamageCalculation","_decorator","FightMacro","DamageLab","tab","PrdType","Random","Fixed","DamageData","DamageSource","DamageStatisticsData","PowerTabFactory","ccclass","property","testList","triggerConditions","init","a","getData","GetKeyValue_ConfigTable","FightDefConstant","b","FightDefHeroLevelConstant","c","FightDefHeroStarConstant","x","FightCriticalPointTop","y","FightCriticalCurvature","z","FightCriticalInflection","kDamege","FightBaseThumpDamage","vertigoBuffId","FightBaseVertigo","splitConfig","ins","bullet_damageCalculate","bullet","defanseAbs","damageAmount","isDead","bulletTab","info","configTab","attack","owner","abs","attackAttrData","getAttrData","defanseAttrData","attrData","console","log","toStrong","isCritical","isSuccess","calculateCritical","isCriticalPoint","calculateCriticalPointPer","clearPrdCount","CriticalEffect","addPrdCount","CriticalPerEffect","setAttr","AttrType","AttrType_CriticalEffect","AttrType_CriticalPerEffect","AttrType_BeCriticalEffect","AttrType_BeCriticalPerEffect","onSkillTrigger","Triggertype","Triggertype_HarmTest","otherAbsInfo","atk","getAttr","AttrType_TotalAttack","deduceDamage","calculateDeduceDamage","bulletDamageScale","calculatebulletDamageScale","baseDamage","PERCENT","AttrType_CriticalDamageAdd","calculateCriticalPointDamage","calculateDamageadd","length","push","TriggerCondition","TriggerCondition_HpLostPer","lossHpPer","Math","floor","maxHp","conditions","damage","AttrType_FinalDamage","AttrType_FinalDamageReduce","calculateDamageResult","SameLow","checkBulletDamageGroup","groupId","clearAttrByType","addDamegeGroupId","addHavaDamageObjId","objId","max","toFixed","damageData","get","source","sourceObjId","isVertigo","AttrType_VertigoPer","addBuffTab","skillPowers","createTypeAnyId","PowerType","PowerType_BuffTable","vertigoBuffTab","buffTab","createType","setConfigId","checkRemoveBuff","ClearType","ClearType_BulletMadeDamage","ClearType_DeadlyDamage","ClearType_CriticalDamage","addBulletDamage","bullet_damageCalculate1","bulletInfo","num","DamageScale","AttrType_BulletSpeed","print","AttrType_Critical","bulletAdd","index","addEffectTab","v","EffectType","Parameters","newNum","AttrType_CriticalTimes","CFromP","getPrdCount","aSubb","AttrType_CriticalPoint","AttrType_ResistCriticalPoint","parm1","AttrType_CriticalPer","ModifyLogicParameter","Triggertype_CriticalPer","AttrType_CriticalDamage","AttrType_ResistCriticalDamage","damageAdd","AttrType_DamageAdd","isBoss","AttrType_BossDamageAdd","Triggertype_DamageAdd","DamageReduce","AttrType_DamageReduce","Triggertype_DamageReduce","calculateHpPerDamageAdd","DamageResult","AttrType_DamageResult","Triggertype_DamageResult","DamageResultReduce","AttrType_DamageResultReduce","Triggertype_DamageResultReduce","absRole","baseNum","triggerType","dd","targetHpDamageAdd","AttrType_TargetHpDamageAdd","Triggertype_TargetHpDamageAdd","hp","defanse","AttrType_TotalDefence","AttrType_BreakDefenceFixed","AttrType_BreakDefencePer","AttrType_Block","AttrType_IgnorePer","level","star","AttrType_DamageReduceCoefficientFix","buff_AttackHeal","buff","effect","addHp","addOwner","parm","AttrType_HealDeep","data","isHeal","addBuffDamage","onHitDamage","HpHealShield","addShowDamageNum","buff_BigHpHeal","lockParm","isHealPer","copy","hpDamageData","absRoleInfo","AttrType_HpHealShieldPer","AttrType_ShieldDeep","isShield","buff_NowHpSubHeal","nowHp","isPerSubHeal","isSelfDamage","buff_BigHpSubHeal","buff_TearEffect","tearPer","AttrType_AttackTear","AttrType_TearCoe","tearAdd","AttrType_TearDeep","isTear","buff_AttackShield","buff_BigHpShield","args"],"mappings":"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","sourcesContent":["import { Node, _decorator, js, math, sys } from \"cc\";\nimport { AbsControl } from \"../../../../framework/base/IAbs\";\nimport { Bullet } from \"../obj/bullet/Bullet\";\nimport { AbsRole } from \"../obj/role/AbsRole\";\nimport { Buff } from \"../buff/Buff\";\nimport { FightMacro } from \"../../define/FightDefine\";\nimport { DamageLab } from \"./DamageLab\";\nimport { EffectTab } from \"../../power/powerTab/EffectTab\";\nimport { tab } from \"../../../../Table/table_gen\";\nimport { FightAttrData, PrdType } from \"../../data/FightAttrData\";\nimport { Random } from \"../../util/Random\";\nimport Fixed from \"../../../../framework/collision/Fixed\";\nimport { BulletTab } from \"../../power/powerTab/BulletTab\";\nimport { DamageData, DamageSource } from \"./DamageData\";\nimport { DamageStatisticsData } from \"./DamageStatisticsData\";\nimport { BuffTab } from \"../../power/powerTab/BuffTab\";\nimport { PowerTabFactory } from \"../../power/PowerTabFactory\";\nimport { BulletInfo } from \"../obj/bullet/BulletInfo\";\nimport { AbsRoleInfo } from \"../obj/role/AbsRoleInfo\";\nconst { ccclass, property } = _decorator;\n\nconst testList = []\nconst triggerConditions = []\n/** 伤害计算 */\nexport class DamageCalculation {\n    /** 战斗公式文档内， 4个常数 */\n    static a: number\n    static b: number\n    static c: number\n\n    static x: number\n    static y: number\n    static z: number\n    static kDamege: number //会心伤害\n    static vertigoBuffId: number\n    static vertigoBuffTab: BuffTab\n    static init() {\n        this.a = tab.getData().GetKeyValue_ConfigTable().FightDefConstant\n        this.b = tab.getData().GetKeyValue_ConfigTable().FightDefHeroLevelConstant\n        this.c = tab.getData().GetKeyValue_ConfigTable().FightDefHeroStarConstant\n\n        this.x = tab.getData().GetKeyValue_ConfigTable().FightCriticalPointTop\n        this.y = tab.getData().GetKeyValue_ConfigTable().FightCriticalCurvature\n        this.z = tab.getData().GetKeyValue_ConfigTable().FightCriticalInflection\n\n        this.kDamege = tab.getData().GetKeyValue_ConfigTable().FightBaseThumpDamage\n        this.vertigoBuffId = tab.getData().GetKeyValue_ConfigTable().FightBaseVertigo\n        DamageData.splitConfig()\n        DamageStatisticsData.ins.init()\n    }\n    //-------------------伤害计算--------------\n\n    /**\n     * 伤害计算\n     * @param bullet 子弹\n     * @param defanseAbs 防御者\n     */\n    static bullet_damageCalculate(bullet: Bullet, defanseAbs: AbsRole, damageAmount: number) {\n        if (defanseAbs.isDead) {\n            return\n        }\n        let bulletTab = bullet.info.configTab\n        let attack = bullet.owner.abs\n        let attackAttrData = bullet.owner.getAttrData()\n        let defanseAttrData = defanseAbs.info.attrData\n        if (attackAttrData == null) {\n            console.log(\"子弹来源为空\", bullet, bullet.owner)\n        }\n        if (defanseAttrData == null) {\n            console.log(\"子弹命中角色属性为空\", defanseAbs, bullet)\n        }\n        attackAttrData.toStrong()\n        defanseAttrData.toStrong()\n\n        //是否会心\n        let isCritical = Random.isSuccess(this.calculateCritical(attackAttrData, bullet))\n        //是否暴击\n        let isCriticalPoint = Random.isSuccess(this.calculateCriticalPointPer(attackAttrData, defanseAttrData, attack, defanseAbs))\n        if (isCritical) {\n            attackAttrData.clearPrdCount(PrdType.CriticalEffect)\n        } else {\n            attackAttrData.addPrdCount(PrdType.CriticalEffect)\n        }\n        if (isCriticalPoint) {\n            attackAttrData.clearPrdCount(PrdType.CriticalPerEffect)\n        } else {\n            attackAttrData.addPrdCount(PrdType.CriticalPerEffect)\n        }\n        //设置人物属性，会心、暴击\n        attackAttrData.setAttr(tab.AttrType.AttrType_CriticalEffect, isCritical ? 1 : 0)\n        attackAttrData.setAttr(tab.AttrType.AttrType_CriticalPerEffect, isCriticalPoint ? 1 : 0)\n\n        //设置人物属性，被会心、被暴击\n        defanseAttrData.setAttr(tab.AttrType.AttrType_BeCriticalEffect, isCritical ? 1 : 0)\n        defanseAttrData.setAttr(tab.AttrType.AttrType_BeCriticalPerEffect, isCriticalPoint ? 1 : 0)\n\n        //攻击者 伤害计算 触发器\n        if (attack && attack.info) {\n            attack.info.onSkillTrigger(tab.Triggertype.Triggertype_HarmTest, { otherAbsInfo: defanseAbs.info })\n        }\n\n        //被攻击者 伤害计算 触发器\n        defanseAbs.info.onSkillTrigger(tab.Triggertype.Triggertype_HarmTest, { otherAbsInfo: attack && attack.info })\n\n\n        let atk: number = attackAttrData.getAttr(tab.AttrType.AttrType_TotalAttack)\n        let deduceDamage: number = this.calculateDeduceDamage(attackAttrData, defanseAttrData)\n        let bulletDamageScale: number = this.calculatebulletDamageScale(attackAttrData, bullet.info)\n\n\n        let baseDamage = atk * (1 - deduceDamage) * bulletDamageScale / FightMacro.PERCENT\n        // DamageCalculation.print(\"基础伤害后\", baseDamage, \"---\", atk, deduceDamage, bulletDamageScale)\n        if (isCritical) {\n            baseDamage = baseDamage * (this.kDamege + attackAttrData.getAttr(tab.AttrType.AttrType_CriticalDamageAdd)) / FightMacro.PERCENT\n            // DamageCalculation.print(\"会心伤害后\", baseDamage, \"---\", attackAttrData.getAttr(tab.AttrType.AttrType_CriticalDamageAdd))\n        }\n        if (isCriticalPoint) {\n            baseDamage = baseDamage * (this.calculateCriticalPointDamage(attackAttrData, defanseAttrData)) / FightMacro.PERCENT\n            // DamageCalculation.print(\"暴击伤害后\", baseDamage, \"---\", this.calculateCriticalPointDamage(attackAttrData, defanseAttrData))\n        }\n        baseDamage = baseDamage * this.calculateDamageadd(attackAttrData, defanseAttrData, attack, defanseAbs, bullet) / FightMacro.PERCENT\n        // DamageCalculation.print(\"伤害加成后\", baseDamage, \"---\", this.calculateDamageadd(attackAttrData, defanseAttrData,attack, defanseAbs) / FightMacro.PERCENT)\n\n        //伤害计算-损失生命比例 触发器\n        triggerConditions.length = 0\n        triggerConditions.push(tab.TriggerCondition.TriggerCondition_HpLostPer)\n        let lossHpPer = Math.floor((baseDamage / defanseAttrData.maxHp) * FightMacro.PERCENT)\n        defanseAbs.info.onSkillTrigger(tab.Triggertype.Triggertype_HarmTest, { conditions: triggerConditions, otherAbsInfo: attack && attack.info, damage: baseDamage, lossHpPer: lossHpPer })\n\n        baseDamage = baseDamage * (FightMacro.PERCENT + attackAttrData.getAttr(tab.AttrType.AttrType_FinalDamage) - defanseAttrData.getAttr(tab.AttrType.AttrType_FinalDamageReduce)) / FightMacro.PERCENT\n        // DamageCalculation.print(\"最终伤害后\", baseDamage, \"---\", attackAttrData.getAttr(tab.AttrType.AttrType_FinalDamage), defanseAttrData.getAttr(tab.AttrType.AttrType_FinalDamageReduce))\n        baseDamage = baseDamage * this.calculateDamageResult(attackAttrData, defanseAttrData, attack, defanseAbs) / FightMacro.PERCENT\n\n        if (bulletTab.SameLow) {//同组子弹伤害衰减\n            if (defanseAbs.checkBulletDamageGroup(bullet.info.groupId)) {\n                baseDamage = baseDamage * bulletTab.SameLow / FightMacro.PERCENT\n            }\n        }\n\n        //清除会心、暴击标记\n        attackAttrData.clearAttrByType(tab.AttrType.AttrType_CriticalEffect)\n        attackAttrData.clearAttrByType(tab.AttrType.AttrType_BeCriticalEffect)\n\n        defanseAttrData.clearAttrByType(tab.AttrType.AttrType_CriticalPerEffect)\n        defanseAttrData.clearAttrByType(tab.AttrType.AttrType_BeCriticalPerEffect)\n\n\n        defanseAbs.addDamegeGroupId(bullet.info.groupId)\n        bullet.addHavaDamageObjId(defanseAbs.objId)\n        baseDamage = Math.max(Fixed.toFixed(baseDamage), 0)\n\n        let damageData = DamageData.get()\n        damageData.source = DamageSource.bullet\n        damageData.damage = baseDamage\n        damageData.isCritical = isCritical\n        damageData.isCriticalPoint = isCriticalPoint\n        damageData.sourceObjId = bullet.owner.objId\n\n        if (damageAmount == 0) {//计算眩晕\n            let isVertigo = Random.isSuccess(attackAttrData.getAttr(tab.AttrType.AttrType_VertigoPer))\n            if (isVertigo) {\n                if (attack) {\n                    damageData.addBuffTab = attack.info.skillPowers.createTypeAnyId(tab.PowerType.PowerType_BuffTable, this.vertigoBuffId) as BuffTab\n                } else {\n                    if (this.vertigoBuffTab == null) {\n                        let buffTab = PowerTabFactory.createType(tab.PowerType.PowerType_BuffTable) as BuffTab\n                        buffTab.setConfigId(tab.getData().GetKeyValue_ConfigTable().FightBaseVertigo)\n                        this.vertigoBuffTab = buffTab\n                    }\n                    damageData.addBuffTab = this.vertigoBuffTab\n                }\n            }\n        }\n\n        //移除buff\n        if (attack && attack.info) {\n            attack.info.checkRemoveBuff(tab.ClearType.ClearType_BulletMadeDamage)\n            damageData.isCritical && attack.info.checkRemoveBuff(tab.ClearType.ClearType_DeadlyDamage)\n            damageData.isCriticalPoint && attack.info.checkRemoveBuff(tab.ClearType.ClearType_CriticalDamage)\n\n        }\n\n        DamageStatisticsData.ins.addBulletDamage(bullet, attack, defanseAbs, damageData)\n        return damageData\n    }\n\n    /**\n     * 伤害计算\n     * @param bullet 子弹\n     * @param defanseAbs 防御者\n     */\n    static bullet_damageCalculate1(bullet: Bullet, defanseAbs: AbsRole) {\n        if (defanseAbs.isDead) {\n            return\n        }\n    }\n\n    /** 计算子弹系数 */\n    static calculatebulletDamageScale(attackAttrData: FightAttrData, bulletInfo: BulletInfo) {\n        let num = bulletInfo.DamageScale * (FightMacro.PERCENT + attackAttrData.getAttr(tab.AttrType.AttrType_BulletSpeed)) / FightMacro.PERCENT\n        DamageCalculation.print(\"计算子弹系数\", num, \"---\", bulletInfo.DamageScale, attackAttrData.getAttr(tab.AttrType.AttrType_BulletSpeed))\n        return num\n    }\n\n    /** 计算会心率 */\n    static calculateCritical(attackAttrData: FightAttrData, bullet: Bullet) {\n        let num = attackAttrData.getAttr(tab.AttrType.AttrType_Critical)\n        let bulletAdd = 0\n        for (let index = 0; index < bullet.info.configTab.addEffectTab.length; index++) {\n            const v = bullet.info.configTab.addEffectTab[index];\n            if (v.EffectType == tab.AttrType.AttrType_Critical) {\n                bulletAdd += v.Parameters[0] || 0\n            }\n        }\n\n        DamageCalculation.print(\"计算暴击率\", num, \"---\", attackAttrData.getAttr(tab.AttrType.AttrType_Critical), bulletAdd)\n        let newNum = num * (attackAttrData.getAttr(tab.AttrType.AttrType_CriticalTimes) + FightMacro.PERCENT) / FightMacro.PERCENT + bulletAdd\n        // console.log(\"会心率\",newNum,attackAttrData.getPrdCount(PrdType.CriticalEffect),Random.CFromP(newNum) * attackAttrData.getPrdCount(PrdType.CriticalEffect))\n        return Random.CFromP(newNum) * attackAttrData.getPrdCount(PrdType.CriticalEffect)\n    }\n\n    /** 计算暴击率 */\n    static calculateCriticalPointPer(attackAttrData: FightAttrData, defanseAttrData: FightAttrData, attack: AbsRole, defanseAbs: AbsRole) {\n        // let num = (attackAttrData.getAttr(tab.AttrType.AttrType_CriticalPoint) - defanseAttrData.getAttr(tab.AttrType.AttrType_ResistCriticalPoint)) / this.k * 100 + attackAttrData.getAttr(tab.AttrType.AttrType_CriticalPer)\n\n        let aSubb = (attackAttrData.getAttr(tab.AttrType.AttrType_CriticalPoint) - defanseAttrData.getAttr(tab.AttrType.AttrType_ResistCriticalPoint))\n        let parm1 = (this.x * this.y * aSubb) / (this.y * aSubb + this.z) * 100 + attackAttrData.getAttr(tab.AttrType.AttrType_CriticalPer)\n\n        parm1 = this.ModifyLogicParameter(attack, parm1, tab.Triggertype.Triggertype_CriticalPer, defanseAbs)\n        return parm1\n        // DamageCalculation.print(\"计算暴击率\", num, \"---\", attackAttrData.getAttr(tab.AttrType.AttrType_CriticalPoint), defanseAttrData.getAttr(tab.AttrType.AttrType_ResistCriticalPoint), attackAttrData.getAttr(tab.AttrType.AttrType_CriticalPer))\n        // console.log(\"计算暴击率\",parm1,attackAttrData.getPrdCount(PrdType.CriticalPerEffect),Random.CFromP(parm1) * attackAttrData.getPrdCount(PrdType.CriticalPerEffect))\n        // return Random.CFromP(parm1) * attackAttrData.getPrdCount(PrdType.CriticalPerEffect)\n    }\n\n    /** 计算暴击伤害 */\n    static calculateCriticalPointDamage(attackAttrData: FightAttrData, defanseAttrData: FightAttrData) {\n        //10000 + 伤害增加（攻） + 目标生命比例增伤（攻） - 伤害减少（防）\n        let num = attackAttrData.getAttr(tab.AttrType.AttrType_CriticalDamage) - defanseAttrData.getAttr(tab.AttrType.AttrType_ResistCriticalDamage)\n        // DamageCalculation.print(\"计算暴击伤害\", num, \"---\", attackAttrData.getAttr(tab.AttrType.AttrType_CriticalDamage), defanseAttrData.getAttr(tab.AttrType.AttrType_ResistCriticalDamage))\n        return num\n    }\n\n    /** 计算伤害加成 */\n    static calculateDamageadd(attackAttrData: FightAttrData, defanseAttrData: FightAttrData, attack: AbsRole, defanseAbs: AbsRole, bullet: Bullet) {\n        let damageAdd = FightMacro.PERCENT + attackAttrData.getAttr(tab.AttrType.AttrType_DamageAdd)\n        if (defanseAbs && defanseAbs.info.isBoss) {\n            damageAdd += attackAttrData.getAttr(tab.AttrType.AttrType_BossDamageAdd)\n        }\n        let bulletAdd = 0\n        for (let index = 0; index < bullet.info.configTab.addEffectTab.length; index++) {\n            const v = bullet.info.configTab.addEffectTab[index];\n            if (v.EffectType == tab.AttrType.AttrType_DamageAdd) {\n                bulletAdd += v.Parameters[0] || 0\n            }\n        }\n        damageAdd += bulletAdd\n\n        damageAdd = this.ModifyLogicParameter(attack, damageAdd, tab.Triggertype.Triggertype_DamageAdd, defanseAbs)\n\n        let DamageReduce = defanseAttrData.getAttr(tab.AttrType.AttrType_DamageReduce)\n        DamageReduce = this.ModifyLogicParameter(defanseAbs, DamageReduce, tab.Triggertype.Triggertype_DamageReduce, null)\n\n        let num = damageAdd + this.calculateHpPerDamageAdd(attackAttrData, defanseAttrData, attack, defanseAbs) - DamageReduce\n\n        // DamageCalculation.print(\"计算伤害加成\", num, \"---\", attackAttrData.getAttr(tab.AttrType.AttrType_DamageAdd), this.calculateHpPerDamageAdd(attackAttrData, defanseAttrData), defanseAttrData.getAttr(tab.AttrType.AttrType_DamageReduce))\n        return num\n    }\n\n    /** 计算伤害结果  */\n    static calculateDamageResult(attackAttrData: FightAttrData, defanseAttrData: FightAttrData, attack: AbsRole, defanseAbs: AbsRole) {\n        let DamageResult = attackAttrData.getAttr(tab.AttrType.AttrType_DamageResult)\n        DamageResult = this.ModifyLogicParameter(attack, DamageResult, tab.Triggertype.Triggertype_DamageResult, defanseAbs)\n\n        let DamageResultReduce = defanseAttrData.getAttr(tab.AttrType.AttrType_DamageResultReduce)\n        DamageResultReduce = this.ModifyLogicParameter(defanseAbs, DamageResultReduce, tab.Triggertype.Triggertype_DamageResultReduce, null)\n\n        let num = ((FightMacro.PERCENT + DamageResult - DamageResultReduce))\n\n        return num\n    }\n\n    /** 触发器， 参数计算变更 */\n    static ModifyLogicParameter(absRole: AbsRole, baseNum: number, triggerType: tab.Triggertype, defanseAbs: AbsRole) {\n        if (absRole && absRole.info) {\n            let dd = { otherAbsInfo: defanseAbs && defanseAbs.info, baseNum: baseNum }\n            absRole.info.onSkillTrigger(triggerType, dd)\n            if (baseNum != dd.baseNum) {\n                // console.log(triggerType, \"触发器，公式增加变更---old:\", baseNum, \"new:\", dd.baseNum)\n                baseNum = dd.baseNum\n            }\n        }\n        return baseNum\n    }\n\n\n\n    /** 计算生命比例伤害增加 */\n    static calculateHpPerDamageAdd(attackAttrData: FightAttrData, defanseAttrData: FightAttrData, attack: AbsRole, defanseAbs: AbsRole) {\n        let targetHpDamageAdd = attackAttrData.getAttr(tab.AttrType.AttrType_TargetHpDamageAdd)\n        targetHpDamageAdd = this.ModifyLogicParameter(attack, targetHpDamageAdd, tab.Triggertype.Triggertype_TargetHpDamageAdd, defanseAbs)\n        let num = defanseAttrData.hp / defanseAttrData.maxHp * targetHpDamageAdd\n\n        // DamageCalculation.print(\"计算生命比例伤害增加\", num, \"---\", attackAttrData.hp, attackAttrData.maxHp, attackAttrData.getAttr(tab.AttrType.AttrType_TargetHpDamageAdd))\n        return num\n    }\n\n\n    /** 计算减伤 */\n    static calculateDeduceDamage(attackAttrData: FightAttrData, defanseAttrData: FightAttrData) {\n        let defanse = Math.max(\n            ((defanseAttrData.getAttr(tab.AttrType.AttrType_TotalDefence) - attackAttrData.getAttr(tab.AttrType.AttrType_BreakDefenceFixed)) * (FightMacro.PERCENT - (attackAttrData.getAttr(tab.AttrType.AttrType_BreakDefencePer) - defanseAttrData.getAttr(tab.AttrType.AttrType_Block))) / FightMacro.PERCENT) * ((FightMacro.PERCENT - attackAttrData.getAttr(tab.AttrType.AttrType_IgnorePer)) / FightMacro.PERCENT)\n            ,\n            0\n        )\n        // DamageCalculation.print(\"计算防御\", defanse, \"---\", defanseAttrData.getAttr(tab.AttrType.AttrType_TotalDefence), attackAttrData.getAttr(tab.AttrType.AttrType_BreakDefenceFixed), attackAttrData.getAttr(tab.AttrType.AttrType_BreakDefencePer), defanseAttrData.getAttr(tab.AttrType.AttrType_Block))\n\n        let num = defanse / (this.a + this.b * attackAttrData.level + this.c * attackAttrData.star + defanse + attackAttrData.getAttr(tab.AttrType.AttrType_DamageReduceCoefficientFix))\n        // DamageCalculation.print(\"计算减伤\", num, \"---\", defanse, attackAttrData.level, attackAttrData.star)\n        return num\n    }\n\n    /** 攻击治疗  */\n    static buff_AttackHeal(buff: Buff, index: number, effect: EffectTab) {\n        let addHp = buff.addOwner.getAttrData().getAttr(tab.AttrType.AttrType_TotalAttack) * effect.parm / FightMacro.PERCENT * (FightMacro.PERCENT + buff.addOwner.getAttrData().getAttr(tab.AttrType.AttrType_HealDeep)) / FightMacro.PERCENT\n        // DamageCalculation.print(\"计算攻击治疗\", addHp, \"---\", buff.addOwner.getAttrData().getAttr(tab.AttrType.AttrType_TotalAttack), effect.parm, buff.addOwner.getAttrData().getAttr(tab.AttrType.AttrType_HealDeep))\n        addHp = Math.floor(addHp)\n\n        let data = DamageData.get()\n        data.source = DamageSource.buff\n        data.damage = addHp\n        data.isHeal = true\n        data.sourceObjId = buff.owner.objId\n        DamageStatisticsData.ins.addBuffDamage(buff, buff.addOwner.abs, buff.owner.abs, data)\n\n        let abs = buff.owner.abs\n        abs.info.onHitDamage(data)\n\n        this.HpHealShield(data, abs.info)\n\n        DamageLab.addShowDamageNum(data, abs, 0)\n    }\n\n    /** 最大生命百分比回血  */\n    static buff_BigHpHeal(buff: Buff, index: number, effect: EffectTab) {\n        let data = buff.lockParm\n        if (data == null) {\n            let addHp = buff.owner.getAttrData().maxHp * effect.parm / FightMacro.PERCENT\n\n            // DamageCalculation.print(\"计算最大生命百分比回血\", addHp, \"---\", buff.owner.getAttrData().maxHp, effect.parm)\n\n            addHp = Math.floor(addHp)\n\n            data = DamageData.get()\n            data.source = DamageSource.buff\n            data.damage = addHp\n            data.isHealPer = true\n            data.sourceObjId = buff.owner.objId\n        }\n\n        buff.lockParm = DamageData.copy(data)\n        DamageStatisticsData.ins.addBuffDamage(buff, buff.addOwner.abs, buff.owner.abs, data)\n\n\n        let abs = buff.owner.abs\n        abs.info.onHitDamage(data)\n\n        this.HpHealShield(data, abs.info)\n\n        DamageLab.addShowDamageNum(data, abs, 0)\n    }\n\n    /** 生命回复增加护盾 */\n    static HpHealShield(hpDamageData: DamageData, absRoleInfo: AbsRoleInfo) {\n        let data = DamageData.get()\n        data.source = hpDamageData.source\n        data.damage = hpDamageData.damage * (absRoleInfo.attrData.getAttr(tab.AttrType.AttrType_HpHealShieldPer) / FightMacro.PERCENT * (FightMacro.PERCENT + absRoleInfo.attrData.getAttr(tab.AttrType.AttrType_ShieldDeep)) / FightMacro.PERCENT)\n        data.damage = Math.floor(data.damage)\n        data.isShield = true\n        data.sourceObjId = absRoleInfo.abs.objId\n\n        DamageStatisticsData.ins.addBuffDamage(null, absRoleInfo.abs, absRoleInfo.abs, data)\n\n        absRoleInfo.onHitDamage(data)\n    }\n\n    /** 当前生命百分比掉血   */\n    static buff_NowHpSubHeal(buff: Buff, index: number, effect: EffectTab) {\n        let data = buff.lockParm\n        let abs = buff.owner.abs\n        // if (data == null) {\n        let nowHp = abs.info.attrData.hp\n        let addHp = nowHp * effect.parm / FightMacro.PERCENT\n        // DamageCalculation.print(\"计算当前生命百分比掉血\", addHp, \"---\", buff.addOwner.getAttrData().hp, effect.parm)\n        addHp = Math.floor(addHp)\n\n        data = DamageData.get()\n        data.source = DamageSource.buff\n        data.damage = addHp\n        data.isPerSubHeal = true\n        data.isSelfDamage = buff.addOwner.objId == buff.owner.objId\n        data.sourceObjId = buff.owner.objId\n        // }\n        // buff.lockParm = DamageData.copy(data)\n\n        DamageStatisticsData.ins.addBuffDamage(buff, buff.addOwner.abs, buff.owner.abs, data)\n\n\n        abs.info.onHitDamage(data)\n\n        DamageLab.addShowDamageNum(data, abs, 0)\n    }\n\n    /** 最大生命百分比掉血   */\n    static buff_BigHpSubHeal(buff: Buff, index: number, effect: EffectTab) {\n        let data = buff.lockParm\n        if (data == null) {\n            let addHp = buff.owner.getAttrData().maxHp * effect.parm / FightMacro.PERCENT\n            // DamageCalculation.print(\"计算最大生命百分比掉血\", addHp, \"---\", buff.addOwner.getAttrData().maxHp, effect.parm)\n            addHp = Math.floor(addHp)\n\n            data = DamageData.get()\n            data.source = DamageSource.buff\n            data.damage = addHp\n            data.isPerSubHeal = true\n\n            data.isSelfDamage = buff.addOwner.objId == buff.owner.objId\n            data.sourceObjId = buff.owner.objId\n        }\n        buff.lockParm = DamageData.copy(data)\n\n        DamageStatisticsData.ins.addBuffDamage(buff, buff.addOwner.abs, buff.owner.abs, data)\n\n        let abs = buff.owner.abs\n        abs.info.onHitDamage(data)\n\n        DamageLab.addShowDamageNum(data, abs, 0)\n\n    }\n\n    /** 撕裂（流血）   */\n    static buff_TearEffect(buff: Buff, index: number, effect: EffectTab) {\n        let atk = buff.addOwner.getAttrData().getAttr(tab.AttrType.AttrType_TotalAttack)\n        let tearPer = buff.addOwner.getAttrData().getAttr(tab.AttrType.AttrType_AttackTear) * ((FightMacro.PERCENT + buff.addOwner.getAttrData().getAttr(tab.AttrType.AttrType_TearCoe)) / FightMacro.PERCENT)\n        let tearAdd = (FightMacro.PERCENT + buff.addOwner.getAttrData().getAttr(tab.AttrType.AttrType_TearDeep))\n\n        let addHp = atk * tearPer / FightMacro.PERCENT * tearAdd / FightMacro.PERCENT\n        addHp = Math.floor(addHp)\n\n        // DamageCalculation.print(\"计算撕裂\", addHp, \"---\", atk, tearPer, tearAdd)\n\n        let data = DamageData.get()\n        data.source = DamageSource.buff\n        data.damage = addHp\n        data.isTear = true\n        data.sourceObjId = buff.owner.objId\n        DamageStatisticsData.ins.addBuffDamage(buff, buff.addOwner.abs, buff.owner.abs, data)\n\n        let abs = buff.owner.abs\n        abs.info.onHitDamage(data)\n\n        DamageLab.addShowDamageNum(data, abs, 0)\n\n    }\n\n\n    /** 攻击护盾  */\n    static buff_AttackShield(buff: Buff, index: number, effect: EffectTab) {\n        let addHp = buff.addOwner.getAttrData().getAttr(tab.AttrType.AttrType_TotalAttack) * effect.parm / FightMacro.PERCENT * (FightMacro.PERCENT + buff.owner.getAttrData().getAttr(tab.AttrType.AttrType_ShieldDeep)) / FightMacro.PERCENT\n        addHp = Math.floor(addHp)\n\n        let data = DamageData.get()\n        data.source = DamageSource.buff\n        data.damage = addHp\n        data.isShield = true\n        data.sourceObjId = buff.owner.objId\n        DamageStatisticsData.ins.addBuffDamage(buff, buff.addOwner.abs, buff.owner.abs, data)\n\n        let abs = buff.owner.abs\n        abs.info.onHitDamage(data)\n    }\n\n    /** 最大生命护盾  */\n    static buff_BigHpShield(buff: Buff, index: number, effect: EffectTab) {\n        let data = buff.lockParm\n        if (data == null) {\n            let addHp = buff.owner.getAttrData().maxHp * effect.Parameters[0] / FightMacro.PERCENT * (FightMacro.PERCENT + buff.owner.getAttrData().getAttr(tab.AttrType.AttrType_ShieldDeep)) / FightMacro.PERCENT\n\n\n            addHp = Math.floor(addHp)\n\n            data = DamageData.get()\n            data.source = DamageSource.buff\n            data.damage = addHp\n            data.isShield = true\n            data.sourceObjId = buff.owner.objId\n        }\n\n        buff.lockParm = DamageData.copy(data)\n        DamageStatisticsData.ins.addBuffDamage(buff, buff.addOwner.abs, buff.owner.abs, data)\n\n        let abs = buff.owner.abs\n        abs.info.onHitDamage(data)\n    }\n\n\n\n\n    static print(...args) {\n        // console.log(...args)\n    }\n}"]}