{"version":3,"sources":["file:///C:/chickenStarClient/client/assets/scripts/logic/model/mail/MailData.ts"],"names":["_decorator","MailInfo","ccclass","property","MailData","maillInfos","ins","_instance","initMaillData","mails","key","info","merge","push","getMails","getMailInfoById","id","Number","find","a","receiveMailsRewardSucc","ids","IsRewardsReceived","isRead","deleteMails","index","findIndex","splice","setReadState"],"mappings":";;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;;AAEAC,MAAAA,Q,iBAAAA,Q;;;;;;;;;OACH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBH,U;AAE9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;0BAGaI,Q,WADZF,OAAO,CAAC,WAAD,C,2BAAR,MACaE,QADb,CACsB;AAAA;AAAA,eAEVC,UAFU;AAAA;;AAGG,mBAAHC,GAAG,GAAG;AACpB,cAAI,QAAQ,KAAKC,SAAjB,EAA4B;AACxB,iBAAKA,SAAL,GAAiB,IAAIH,QAAJ,EAAjB;AACH;;AACD,iBAAO,KAAKG,SAAZ;AACH;;AACDC,QAAAA,aAAa,CAACC,KAAD,EAAsB;AAC/B,eAAKJ,UAAL,GAAkB,EAAlB;;AACA,eAAK,IAAIK,GAAT,IAAgBD,KAAhB,EAAuB;AACnB,gBAAIE,IAAI,GAAG;AAAA;AAAA,uCAAX;AACAA,YAAAA,IAAI,CAACC,KAAL,CAAWH,KAAK,CAACC,GAAD,CAAhB;AACA,iBAAKL,UAAL,CAAgBQ,IAAhB,CAAqBF,IAArB;AACH;AAEJ;;AACDG,QAAAA,QAAQ,GAAG;AACP,iBAAO,KAAKT,UAAZ;AACH;;AACDU,QAAAA,eAAe,CAACC,EAAD,EAAa;AACxBA,UAAAA,EAAE,GAACC,MAAM,CAACD,EAAD,CAAT;AACA,iBAAO,KAAKX,UAAL,CAAgBa,IAAhB,CAAqBC,CAAC,IAAIA,CAAC,CAACH,EAAF,IAAQA,EAAlC,CAAP;AACH;;AACDI,QAAAA,sBAAsB,CAACC,GAAD,EAAgB;AAClC,eAAK,IAAIX,GAAT,IAAgBW,GAAhB,EAAqB;AACjB,gBAAIV,IAAI,GAAG,KAAKI,eAAL,CAAqBM,GAAG,CAACX,GAAD,CAAxB,CAAX;;AACA,gBAAIC,IAAJ,EAAU;AACNA,cAAAA,IAAI,CAACW,iBAAL,GAAyB,IAAzB;AACAX,cAAAA,IAAI,CAACY,MAAL,GAAY,IAAZ;AACH;AACJ;AACJ;;AACDC,QAAAA,WAAW,CAACH,GAAD,EAAgB;AACvB,eAAK,IAAIX,GAAT,IAAgBW,GAAhB,EAAqB;AACjB,gBAAIL,EAAE,GAACC,MAAM,CAACI,GAAG,CAACX,GAAD,CAAJ,CAAb;AACA,gBAAIe,KAAK,GAAG,KAAKpB,UAAL,CAAgBqB,SAAhB,CAA0BP,CAAC,IAAIF,MAAM,CAACE,CAAC,CAACH,EAAH,CAAN,IAAgBA,EAA/C,CAAZ;;AACA,gBAAIS,KAAK,IAAI,CAAb,EAAgB;AACZ,mBAAKpB,UAAL,CAAgBsB,MAAhB,CAAuBF,KAAvB,EAA8B,CAA9B;AACH;AACJ;AACJ;;AACDG,QAAAA,YAAY,CAACZ,EAAD,EAAa;AACrB,cAAIL,IAAI,GAAG,KAAKI,eAAL,CAAqBC,EAArB,CAAX;AACAL,UAAAA,IAAI,CAACY,MAAL,GAAc,IAAd;AACH;;AA9CiB,O,UACHhB,S","sourcesContent":["import { _decorator, Component, Node } from 'cc';\r\nimport { proto } from 'client_protocol';\r\nimport { MailInfo } from './MailInfo';\r\nconst { ccclass, property } = _decorator;\r\n\r\n/**\r\n * \r\n * MaillData\r\n * zhudingchao\r\n * Mon Jun 03 2024 11:05:27 GMT+0800 (中国标准时间)\r\n * db://assets/scripts/logic/model/mail/MaillData.ts\r\n *\r\n */\r\n\r\n@ccclass('MaillData')\r\nexport class MailData {\r\n    private static _instance: MailData;\r\n    private maillInfos: Array<MailInfo>;\r\n    public static get ins() {\r\n        if (null == this._instance) {\r\n            this._instance = new MailData();\r\n        }\r\n        return this._instance;\r\n    }\r\n    initMaillData(mails: proto.Mail[]) {\r\n        this.maillInfos = [];\r\n        for (let key in mails) {\r\n            let info = new MailInfo();\r\n            info.merge(mails[key]);\r\n            this.maillInfos.push(info);\r\n        }\r\n\r\n    }\r\n    getMails() {\r\n        return this.maillInfos;\r\n    }\r\n    getMailInfoById(id: number) {\r\n        id=Number(id);\r\n        return this.maillInfos.find(a => a.id == id);\r\n    }\r\n    receiveMailsRewardSucc(ids: number[]) {\r\n        for (let key in ids) {\r\n            let info = this.getMailInfoById(ids[key]);\r\n            if (info) {\r\n                info.IsRewardsReceived = true;\r\n                info.isRead=true;\r\n            }\r\n        }\r\n    }\r\n    deleteMails(ids: number[]) {\r\n        for (let key in ids) {\r\n            let id=Number(ids[key]);\r\n            let index = this.maillInfos.findIndex(a => Number(a.id) == id);\r\n            if (index >= 0) {\r\n                this.maillInfos.splice(index, 1);\r\n            }\r\n        }\r\n    }\r\n    setReadState(id: number) {\r\n        let info = this.getMailInfoById(id);\r\n        info.isRead = true;\r\n    }\r\n}"]}