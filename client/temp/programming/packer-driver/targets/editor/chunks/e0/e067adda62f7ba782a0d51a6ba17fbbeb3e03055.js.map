{"version":3,"sources":["file:///C:/chickenStarClient/client/assets/scripts/logic/model/item/ItemData.ts"],"names":["ItemData","_decorator","Func","RoleData","EventMgr","ItemInfo","LocalEvent","tab","RoleControl","RedMgr","RedDotType","RareBookData","ChannelMgr","P8PostEventName","AssociationData","ccclass","property","DiamondId","GoldId","items","ins","_instance","purge","length","initData","adds","simpleItems","refreshEvent","Bag_Compose","HeroBagRed","list","updateItemIds","isHaveStamina","isHaveChip","isUpdateBookRed","isBox","index","v","iteminfo","getByItemId","itemId","CurrencyType","CurrencyType_DailyActivity","count","num","postEvent","daily_40","daily_100","guildData","getAssocitionSimpleInfo","exp","merge","push","itemTable","BagType","BagType_Fragment","CurrencyType_Gold","getData","GetKeyValue_ConfigTable","BookStarUniversalMaterial","CurrencyType_Stamina","Type","ItemType","ItemType_Box","emitLocal","Item_Update","updateBookCanUpLevelAndStar","requestStaminaInfo","itemInfo","item","diamond","Number","gold","removes","ids","id","forBy","getItemInfosByType","remove","removeBy","getCount","getItems","isItemsEnough","key","currItem","isItemsEnoughByList","itemIds","counts","currNum"],"mappings":"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","sourcesContent":["import { Node, Prefab, _decorator } from \"cc\";\nimport { IClear } from \"../../../framework/base/IAbs\";\nimport { proto } from \"client_protocol\";\nimport { Func } from \"../../utils/Func\";\nimport { RoleData } from \"../role/RoleData\";\nimport { EventMgr } from \"../../mgr/EventMgr\";\nimport { ItemInfo } from \"./ItemInfo\";\nimport { LocalEvent } from \"../../define/LocalEvent\";\nimport { tab } from \"../../../Table/table_gen\";\nimport { ItemControl } from \"./ItemControl\";\nimport { RoleControl } from \"../role/RoleControl\";\nimport { RedMgr } from \"../../mgr/RedMgr\";\nimport { RedDotType } from \"../../red/RedDotType\";\nimport { RareBookControl } from \"../rareBook/RareBookControl\";\nimport { RareBookData } from \"../rareBook/RareBookData\";\nimport { ChannelMgr } from \"../../../channel/ChannelMgr\";\nimport { P8PostEventName } from \"../../../channel/ChannelDefine\";\nimport { AssociationData } from \"../association/AssociationData\";\n\n\nconst { ccclass, property } = _decorator;\n\n//配置表内货币id\nconst DiamondId = 1\nconst GoldId = 2\n\n/** 道具数据 */\nexport class ItemData implements IClear {\n    private static _instance: ItemData;\n    public static get ins() {\n        if (null == this._instance) {\n            this._instance = new ItemData();\n        }\n        return this._instance;\n    }\n\n    private items: ItemInfo[] = [];\n    purge(): void {\n        this.items.length = 0\n    }\n    initData() {\n        // let items=RoleData.ins.simpleItems;\n        this.adds(RoleData.ins.simpleItems as proto.Item[])\n         RedMgr.refreshEvent(RedDotType.Bag_Compose);\n         RedMgr.refreshEvent(RedDotType.HeroBagRed);\n\n    }\n\n\n    adds(list: proto.Item[]) {\n        if (list.length == 0) {\n            return\n        }\n        let updateItemIds = [];\n        let isHaveStamina = false;\n        let isHaveChip=false;\n        let isUpdateBookRed=false;\n        let isBox = false\n        \n        for (let index = 0; index < list.length; index++) {\n            const v = list[index];\n            let iteminfo = this.getByItemId(v.itemId)\n            if(v.itemId==tab.CurrencyType.CurrencyType_DailyActivity){\n                let count=iteminfo?iteminfo.num:0\n                if(count<40&&v.num>=40){\n                    ChannelMgr.postEvent(P8PostEventName.daily_40)\n                }\n                if(count<100&&v.num>=100){\n                    ChannelMgr.postEvent(P8PostEventName.daily_100)\n                }\n            }\n            if(v.itemId===84){\n                const guildData: proto.SimpleGuild = AssociationData.ins.getAssocitionSimpleInfo();\n                if(guildData){\n                    if(iteminfo){\n                        guildData.exp+=(v.num-iteminfo.num);\n                    }else{\n                        guildData.exp+=v.num;\n                    }\n                }\n            }\n            if (iteminfo == null) {\n                iteminfo = new ItemInfo();\n                iteminfo.merge(v);\n                this.items.push(iteminfo)\n\n            }\n            this.merge(iteminfo, v)\n            updateItemIds.push(iteminfo.itemId)\n            if (iteminfo.itemTable.BagType == tab.BagType.BagType_Fragment) {\n                isHaveChip = true;\n            }\n            if(!isUpdateBookRed){\n                isUpdateBookRed=(iteminfo.itemId>=25000&&iteminfo.itemId<30000)||iteminfo.itemId==tab.CurrencyType.CurrencyType_Gold||iteminfo.itemId===tab.getData().GetKeyValue_ConfigTable().BookStarUniversalMaterial;\n            }\n            if(v.itemId==tab.CurrencyType.CurrencyType_Stamina){\n                isHaveStamina=true;\n            }\n            if(iteminfo.itemTable.Type===tab.ItemType.ItemType_Box){\n                isBox = true;\n            }\n\n        }\n\n        EventMgr.emitLocal(LocalEvent.Item_Update, updateItemIds)\n        if(isHaveChip){\n            RedMgr.refreshEvent(RedDotType.Bag_Compose);\n        }\n        if(isUpdateBookRed){\n            RareBookData.ins.updateBookCanUpLevelAndStar();\n        }\n        if(isHaveStamina){\n            RoleControl.ins.requestStaminaInfo();\n        }\n        if(isBox){\n            RedMgr.refreshEvent(RedDotType.HeroBagRed);\n        }\n\n    }\n\n    merge(itemInfo: ItemInfo, item: proto.Item) {\n        //目前只需要同步数量\n        itemInfo.num = item.num\n\n        /** 同步角色身上常用货币数量 */\n        if (item.itemId == DiamondId) {\n            RoleData.ins.diamond = Number(item.num)\n\n        } else if (item.itemId == GoldId) {\n            RoleData.ins.gold = Number(item.num)\n\n        }\n    }\n\n    removes(ids: string[]) {\n\n    }\n\n\n    getByItemId(id: number): ItemInfo {\n        return Func.forBy(this.items, \"itemId\", id)\n    }\n    getItemInfosByType() {\n\n    }\n\n    remove(id: string) {\n        Func.removeBy(this.items, \"itemId\", id)\n    }\n\n    /** 道具数量 包含货币 */\n    getCount(id: number) {\n        let item = this.getByItemId(id)\n        return Number(item && item.num || 0)\n    }\n    getItems() {\n        return this.items;\n    }\n    /**\n     * 判断道具是否充足\n     * @param items \n     */\n    isItemsEnough(items: ItemInfo[]) {\n        for (let key in items) {\n            let currItem = this.getByItemId(items[key].itemId);\n            if (!currItem || currItem.num < items[key].num) {\n                return false;\n            }\n        }\n        return true;\n    }\n    /**\n     * 判断道具是否充足\n     * @param items \n     */\n    isItemsEnoughByList(itemIds: Array<number>, counts: Array<number>) {\n        for (let key in itemIds) {\n            let currNum = this.getCount(itemIds[key]);\n            if (currNum < counts[key]) {\n                return itemIds[key];\n            }\n        }\n        return 0;\n    }\n}"]}