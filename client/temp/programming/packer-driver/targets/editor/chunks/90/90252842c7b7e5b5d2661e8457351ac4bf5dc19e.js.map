{"version":3,"sources":["file:///C:/chickenStarClient/client/assets/scripts/logic/mgr/UIMgr.ts"],"names":["UIMgr","ShowTips","key","scene","director","getScene","nodeTipsContainer","getChildByName","prefab","Prefab","instantiate","name","addChild","setSiblingIndex","tipsCom","getComponent","AddTips","ShowItemNotEnoughTips","itemId","item","getData","ItemTableById","getValue","AcquireWay","length","ins","show","viewName","ItemGetWayPop","data","str","getCombineString","getLab","Name","Size","_decorator","error","view","AbsMgr","LoadResAsync","ResMgr","ViewBase","Func","tab","ViewName","ClientView","BlackTips","LangMgr","OpenFunctionMgr","LocalEvent","EventMgr","AssociationData","ccclass","property","camera2d","rootNode","uiNode","viewTypeMap","Map","visibleSize","_instance","init","setCamera","camera","setRootNode","root","uiData","viewTab","getViewTab","console","warn","nowView","getView","pfb","Path","ViewType","ViewType_Persist","addRef","addPersistRootNode","parent","addView","cocosNodeZIndex","zIndex","ZIndex","viewBase","loadShow","ViewType_View","ViewType_Pop","active","setzIndex","setOpenData","onShow","hideView","views","getViewListByViewType","index","v","isValid","onClose","destroy","splice","checkView","viewNode","ViewType_Diy","push","viewListData","forBy","getViewScr","_view","viewType","has","set","get","clearViewAndPop","forEach","value","pops","persists","releaseView","release","jumpLayer","module","tabId","closeFunc","opFuncName","deepArgs","moduleTab","ModuleTableByModuleType","isOpen","openId","guildOpen","guideOpenId","OpenFunctionId","checkFunctionIsOpen","GuildOpenFunction","emitLocal","JumpLayerSuceess","showFunctionTips","getVisibleSize","width","height"],"mappings":"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","sourcesContent":["import { Camera, Director, DynamicAtlasManager, Node, Prefab, Scene, Size, _decorator, director, error, game, instantiate, view } from \"cc\";\nimport { AbsMgr } from \"../../framework/base/IAbs\";\nimport { LoadResAsync, ResMgr } from \"./ResMgr\";\nimport { ViewBase } from \"../../framework/base/ViewBase\";\nimport { Func } from \"../utils/Func\";\nimport { tab } from \"../../Table/table_gen\";\nimport { ViewData, ViewName } from \"../define/ViewDefine\";\nimport { ClientView } from \"./ClientView\";\nimport { BlackTips } from \"../../Common/script/BlackTips\";\nimport { ModuleUtil } from \"../../Common/ModuleUtil\";\nimport { LangMgr } from \"./LangMgr\";\nimport { OpenFunctionMgr } from \"../../Common/component/OpenFunctionMgr\";\nimport { LocalEvent } from \"../define/LocalEvent\";\nimport { EventMgr } from \"./EventMgr\";\nimport { AssociationData } from \"../model/association/AssociationData\";\n\nconst { ccclass, property } = _decorator;\n\nexport interface ViewListData {\n    viewName: string\n    view: Node\n}\n\nexport class UIMgr extends AbsMgr {\n\n    private static _instance: UIMgr;\n    public static get ins() {\n        if (null == this._instance) {\n            this._instance = new UIMgr();\n        }\n        return this._instance;\n    }\n\n    init(): void {\n\n    }\n\n\n    camera2d: Camera = null\n    rootNode: Node\n    uiNode: Node\n    setCamera(camera: Camera) {\n        this.camera2d = camera\n    }\n    setRootNode(root: Node) {\n        this.rootNode = root\n        this.uiNode = root.getChildByName(\"uiNode\")\n    }\n\n    private viewTypeMap: Map<tab.ViewType, ViewListData[]> = new Map()\n\n    /** ViewName 记得查看ViewDefine */\n    async show(uiData: ViewData): Promise<Node> {\n        let viewTab = ClientView.ins.getViewTab(uiData.viewName)\n        if (viewTab == null) {\n            error(\"viewTab==null===viewName:\" + uiData.viewName)\n            return\n        }\n        if (viewTab[\"isLoading\"]) {\n            return\n        }\n        viewTab[\"isLoading\"] = true\n        console.warn(\"打开界面\", uiData.viewName)\n        let nowView = this.getView(viewTab.ViewName)\n        if (nowView == null) {\n            let pfb: Prefab = await LoadResAsync(viewTab.Path, Prefab)\n            if (pfb) {\n                nowView = instantiate(pfb)\n                if (viewTab.ViewType == tab.ViewType.ViewType_Persist) {\n                    pfb.addRef()\n                    director.addPersistRootNode(nowView)\n                } else {\n                    if (uiData.parent) {\n                        uiData.parent.addChild(nowView)\n                    } else {\n                        this.uiNode.addChild(nowView)\n                    }\n                }\n                this.addView(viewTab.ViewName, nowView)\n                Func.cocosNodeZIndex(nowView, uiData.zIndex || viewTab.ZIndex || 0)\n                let viewBase = nowView.getComponent(ViewBase)\n                if (viewBase) {\n                    viewBase.loadShow()\n                }\n            }\n        } else {\n            if (viewTab.ViewType == tab.ViewType.ViewType_View || viewTab.ViewType == tab.ViewType.ViewType_Pop) {\n                let zIndex = uiData.zIndex || viewTab.ZIndex || 0\n                nowView.active = true\n                Func.cocosNodeZIndex(nowView, zIndex + 1)\n                Func.setzIndex(nowView, zIndex)\n            }\n        }\n        if (nowView) {\n            let viewBase = nowView.getComponent(ViewBase)\n            if (viewBase) {\n                viewBase.setOpenData(uiData.data)\n                viewBase.onShow()\n            }\n        }\n        viewTab[\"isLoading\"] = false\n        return nowView\n    }\n\n    hideView(viewName: string) {\n        console.warn(\"销毁界面\", viewName)\n        let viewTab = ClientView.ins.getViewTab(viewName)\n        let views = this.getViewListByViewType(viewTab.ViewType)\n        for (let index = 0; index < views.length; index++) {\n            const v = views[index];\n            if (v.viewName == viewName) {\n                if (v.view && v.view.isValid) {\n                    if (viewTab.ViewType == tab.ViewType.ViewType_Persist) {\n                        v.view.getComponent(ViewBase).onClose()\n                        return true\n                    }\n                    v.view.destroy()\n                }\n                v.view = null\n                views.splice(index, 1)\n                this.checkView()\n                return true\n            }\n        }\n        return false\n    }\n\n    addView(viewName: string, viewNode: Node) {\n        let viewTab = ClientView.ins.getViewTab(viewName)\n        if (viewTab.ViewType == tab.ViewType.ViewType_Diy) {\n            return\n        }\n\n        let views = this.getViewListByViewType(viewTab.ViewType)\n        views.push({ viewName: viewName, view: viewNode })\n        this.checkView()\n    }\n\n    getView(viewName: string): Node {\n        let viewTab = ClientView.ins.getViewTab(viewName)\n        let views = this.getViewListByViewType(viewTab.ViewType)\n\n        let viewListData: ViewListData = Func.forBy(views, \"viewName\", viewName)\n        if (viewListData) {\n            return viewListData.view\n        }\n        return null\n    }\n\n    getViewScr(viewName: string) {\n        let _view: Node = this.getView(viewName)\n        if (_view) {\n            return _view.getComponent(viewName)\n        }\n    }\n\n    getViewListByViewType(viewType: tab.ViewType) {\n        if (!this.viewTypeMap.has(viewType)) {\n            this.viewTypeMap.set(viewType, [])\n        }\n        return this.viewTypeMap.get(viewType)\n    }\n\n    //只清理存储数据， 不做实际销毁，主要处理切换场景时把当前列表置空\n    clearViewAndPop() {\n        this.viewTypeMap.forEach((value, key) => {\n            if (key != tab.ViewType.ViewType_Persist) {\n                this.viewTypeMap.set(key, [])\n            }\n        })\n    }\n\n    checkView() {\n        let views = this.getViewListByViewType(tab.ViewType.ViewType_View)\n        let pops = this.getViewListByViewType(tab.ViewType.ViewType_Pop)\n        let persists = this.getViewListByViewType(tab.ViewType.ViewType_Persist)\n        if (views.length > 0) {\n            for (let index = 0; index < views.length; index++) {\n                const v = views[index];\n                v.view.active = index + 1 == views.length\n            }\n        }\n    }\n\n    releaseView(viewName: string) {\n        let viewTab = ClientView.ins.getViewTab(viewName)\n        if (viewTab) {\n            ResMgr.release(viewTab.Path, Prefab)\n        }\n    }\n\n    jumpLayer(module: tab.Module, tabId?: number, closeFunc?: Function, opFuncName?: tab.OpenFunctionName, deepArgs?: Number[]) {\n        let moduleTab = tab.getData().ModuleTableByModuleType.getValue(module)\n        let isOpen = false;\n        let openId = -1;\n\n        let guildOpen = false;\n        let guideOpenId = -1;\n        // 功能名称\n        if (moduleTab.OpenFunctionId.length > 1) {\n            if (tabId) {\n                openId = moduleTab.OpenFunctionId[tabId];\n            } else {\n                if (opFuncName) {\n                    openId = opFuncName;\n                } else {\n                    openId = moduleTab.OpenFunctionId[1];\n                }\n            }\n        } else if (moduleTab.OpenFunctionId.length === 1) {\n            openId = moduleTab.OpenFunctionId[0]\n        } else {\n            isOpen = true;\n        }\n        if (openId >= 0) {\n            isOpen = OpenFunctionMgr.ins.checkFunctionIsOpen(openId);\n        }\n        // 公会功能\n        if (moduleTab.GuildOpenFunction) {\n            guideOpenId = moduleTab.GuildOpenFunction\n        } else {\n            guildOpen = true;\n        }\n        if (guideOpenId >= 0) {\n            guildOpen = AssociationData.ins.checkFunctionIsOpen(guideOpenId);\n        }\n\n        if (isOpen && guildOpen) {\n            if (!tabId) {\n                if (deepArgs && deepArgs.length > 0) {\n                    this.show({ viewName: moduleTab.ViewName, data: deepArgs })\n                } else {\n                    this.show({ viewName: moduleTab.ViewName })\n                }\n            } else {\n                this.show({ viewName: moduleTab.ViewName, data: tabId })\n            }\n\n            if (closeFunc) {\n                closeFunc();\n            }\n            EventMgr.emitLocal(LocalEvent.JumpLayerSuceess, module)\n        } else {\n            if (guideOpenId > 0) {\n                AssociationData.ins.showFunctionTips(guideOpenId);\n            } else {\n                OpenFunctionMgr.ins.showFunctionTips(openId);\n            }\n        }\n    }\n\n\n    visibleSize: Size\n    getVisibleSize() {\n        if (this.visibleSize == null) {\n            this.visibleSize = new Size(view.getVisibleSize().width / 1.8, view.getVisibleSize().height / 1.8)\n        }\n        return this.visibleSize\n    }\n\n\n}\nexport async function ShowTips(key: string) {\n    let scene = director.getScene();\n    if (!scene) {\n        return;\n    }\n    let nodeTipsContainer = scene.getChildByName(\"BlackTips\");\n    if (!nodeTipsContainer) {\n        let prefab = await LoadResAsync('prefab/BlackTips', Prefab)\n        nodeTipsContainer = instantiate(prefab);\n        nodeTipsContainer.name = \"BlackTips\";\n        scene.addChild(nodeTipsContainer);\n        nodeTipsContainer.setSiblingIndex(1);\n    }\n    let tipsCom = nodeTipsContainer.getComponent(BlackTips);\n    if (!tipsCom) {\n        return;\n    }\n    tipsCom.AddTips(key);\n}\n/**\n * 提示物品不足\n * @param itemId \n */\nexport async function ShowItemNotEnoughTips(itemId: number) {\n    let item = tab.getData().ItemTableById.getValue(itemId);\n    if (item) {\n        if(item.AcquireWay.length>0){\n            UIMgr.ins.show({ viewName: ViewName.ItemGetWayPop ,data:{itemId:itemId}})\n        }else{\n            let str = LangMgr.getCombineString(\"Tips_itemshortage\", [LangMgr.getLab(item.Name)]);\n            ShowTips(str);\n        }\n    }\n\n}"]}