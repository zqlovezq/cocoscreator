{"version":3,"sources":["file:///C:/chickenStarClient/client/assets/scripts/logic/fight/base/buff/BuffControl.ts"],"names":["BuffControl","_decorator","AbsControl","Buff","Random","tab","BuffUI","FightRootControl","DamageCalculation","PlayerControl","EventMgr","FightEvent","DamageData","DamageSource","DamageLab","DamageStatisticsData","FightMacro","FrameControl","RevoltCheatControl","ccclass","property","poolUis","Map","soleId","ins","_instance","register","onFight","Injured","onInjured","init","clear","addSelfSoleId","checkSkillAddBuff","skill","attack","enemys","isHasBuff","buffTab","buffChance","isSuccess","index","AddBuff","length","addBuffTabs","AddBuffChance","checkChanceAddBuff","forEach","enemy","addBuff","objId","checkBulletAddBuff","bullet","owner","defanseAbs","info","isHasAddBuff","configTab","chance","addObjId","absRole","Id","isExitIng","getObjById","console","log","BuffType","BuffType_Loss","isNegativeBuffImmunity","buff","Rule","Rule_SingleCount","total","BuffGroup","getBuffGroupTotalCount","getBuffIdTotalCount","Number","getBuffByGroup","getBuff","get","setBuffTab","buffToTrigger","isCanRule","addRuleNumber","disposeRule","isClearByType","ClearType","ClearType_StackFull","removeBuffId","buffId","isValid","isBuffGroup","BuffGroup_RolesBuffLayerNum","onRolesBuffLayerNum","addRole","addOwner","ownerRole","onSkillTrigger","Triggertype","Triggertype_AddBuff","otherAbsInfo","removeBuffs","buffIds","v","removeBuffType","buffType","addBuffEffectUI","VFXID","buffUi","getBuffUI","isEffectShowBelow","getRootView","roleDown","addChild","node","isRole","roleUp","setBuff","pushBuffUI","addCount","BuffGroup_TransferDamage","showTransferDamageUI","removeBuffEffectUI","removeBuff","list","getBuffUIsById","totalCount","recycle","splice","tdList","getTransferDamageGroup","emitFight","buff_link","roles","getRoles","isActive","isDead","findBuffByBuffGroup","push","abs","maxNum","getBuffNumByObjType","objType","allRole","getObjList","tempBuff","tmpRole","ruleNumber","diff","j","getBuffNumByObjTypeAndBuffId","getData","BuffTableById","getValue","buffGroup","num","e","buffUI","getBodyId","set","ui","onTriggerEffect","ownerAbs","effectTabs","len","addBuffObjType","eff","EffectType","AttrType","AttrType_AttackHeal","buff_AttackHeal","AttrType_BigHpHeal","buff_BigHpHeal","AttrType_BigHpLoss","buff_BigHpSubHeal","AttrType_NowHpHeal","buff_NowHpSubHeal","AttrType_TearEffect","buff_TearEffect","AttrType_AttackShield","buff_AttackShield","AttrType_BigHpShield","buff_BigHpShield","data","absRoleInfo","isTransferDamage","copyData","copy","source","addBuffTransferDamage","onHitDamage","addShowDamageNum"],"mappings":"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","sourcesContent":["import { Node, _decorator, js, macro, sys } from \"cc\";\nimport { AbsControl } from \"../../../../framework/base/IAbs\";\nimport { AbsRole } from \"../obj/role/AbsRole\";\nimport { Buff } from \"./Buff\";\nimport { SkillTab } from \"../../power/powerTab/SkillTab\";\nimport { Bullet } from \"../obj/bullet/Bullet\";\nimport { SearchEnemy } from \"../ai/SearchEnemy\";\nimport { Random } from \"../../util/Random\";\nimport { tab } from \"../../../../Table/table_gen\";\nimport { BuffUI } from \"./BuffUI\";\nimport { FightRootControl } from \"../../FightRootControl\";\nimport { DamageCalculation } from \"../damage/DamageCalculation\";\nimport { BuffTab } from \"../../power/powerTab/BuffTab\";\nimport { AbsOwner } from \"../obj/AbsOwner\";\nimport { PlayerControl } from \"../obj/role/role/PlayerControl\";\nimport { EventMgr } from \"../../../mgr/EventMgr\";\nimport { FightEvent } from \"../../define/FightEvent\";\nimport { DamageData, DamageSource } from \"../damage/DamageData\";\nimport { AbsRoleInfo } from \"../obj/role/AbsRoleInfo\";\nimport { Role } from \"../obj/role/role/Role\";\nimport { DamageLab } from \"../damage/DamageLab\";\nimport { DamageStatisticsData } from \"../damage/DamageStatisticsData\";\nimport { FightMacro } from \"../../define/FightDefine\";\nimport { FrameControl } from \"../frame/FrameControl\";\nimport { AbsObjType } from \"../obj/AbsObj\";\nimport { RevoltCheatControl } from \"../../cheat/RevoltCheatControl\";\n\nconst { ccclass, property } = _decorator;\n\n\nexport class BuffControl extends AbsControl {\n\n    private static _instance: BuffControl;\n    public static get ins() {\n        if (null == this._instance) {\n            this._instance = new BuffControl();\n        }\n        return this._instance;\n    }\n\n    poolUis: Map<number, BuffUI[]> = new Map<number, BuffUI[]>()\n\n    register(): void {\n        EventMgr.onFight(FightEvent.Injured, this.onInjured, this)\n    }\n\n    soleId: number = 0\n    init(): void {\n        this.register()\n        this.poolUis.clear()\n    }\n\n    /** 自增组id */\n    addSelfSoleId() {\n        this.soleId++\n        return this.soleId\n    }\n\n    checkSkillAddBuff(skill: SkillTab, attack: AbsRole, enemys: AbsRole[]) {\n        if (skill.isHasBuff()) {\n            let buffTab: BuffTab\n            let buffChance: number = 0\n            let isSuccess = false\n            for (let index = 0; index < skill.AddBuff.length; index++) {\n                buffTab = skill.addBuffTabs[index]\n                buffChance = skill.AddBuffChance[index] || 0\n                isSuccess = this.checkChanceAddBuff(buffTab, buffChance)\n                if (isSuccess) {\n                    enemys.forEach((enemy) => {\n                        this.addBuff(buffTab, attack.objId, enemy)\n                    })\n                }\n            }\n        }\n    }\n\n    checkBulletAddBuff(bullet: Bullet, owner: AbsOwner, defanseAbs: AbsRole) {\n        if (bullet.info.isHasAddBuff()) {\n            let buffTab: BuffTab\n            let buffChance: number = 0\n            let isSuccess = false\n            for (let index = 0; index < bullet.info.configTab.AddBuff.length; index++) {\n                buffTab = bullet.info.configTab.addBuffTabs[index]\n                buffChance = bullet.info.configTab.AddBuffChance[index] || 0\n                isSuccess = this.checkChanceAddBuff(buffTab, buffChance)\n                if (isSuccess) {\n                    this.addBuff(buffTab, owner.objId, defanseAbs)\n                }\n            }\n        }\n    }\n\n    /** 检测概率是否成功 */\n    checkChanceAddBuff(buffTab: BuffTab, chance: number) {\n        //增加概率\n        return Random.isSuccess(chance)\n    }\n\n    addBuff(buffTab: BuffTab, addObjId: number, absRole: AbsRole) {\n        if (buffTab == null || buffTab.Id == null || FightRootControl.ins.isExitIng) {\n            return\n        }\n\n        if (FrameControl.ins.getObjById(addObjId)  == null){\n            console.log(\"buff来源已死亡\")//怪物策划（李奇硕，buff来源死亡，buff不生效）\n            return\n        }\n\n        if (buffTab.BuffType == tab.BuffType.BuffType_Loss) {// 减益  判定负面buff免疫\n            if (absRole.info.isNegativeBuffImmunity()) {\n                console.log(\"负面buff免疫\")\n                return\n            }\n        }\n\n\n        let buff: Buff\n        if (buffTab.Rule == tab.Rule.Rule_SingleCount) {//独立计数， 特殊处理\n            let total = 0\n            if (buffTab.BuffGroup) {\n                total = absRole.info.getBuffGroupTotalCount(buffTab.BuffGroup)\n            } else {\n                total = absRole.info.getBuffIdTotalCount(buffTab.Id)\n            }\n            if (buffTab.Number && total >= buffTab.Number) {\n                console.log(\"buff独立计数已满足\")\n                return\n            }\n        } else {\n            //判断是否是组buff\n            if (buffTab.BuffGroup) {\n                buff = absRole.info.getBuffByGroup(buffTab.BuffGroup)\n            } else {\n                buff = absRole.info.getBuff(buffTab.Id, addObjId)\n            }\n        }\n\n        if (buff == null) {\n            //添加buff\n            buff = Buff.get()\n            buff.setBuffTab(buffTab)\n\n            buff.soleId = this.addSelfSoleId()\n            buff.addObjId(addObjId)\n            buff.init()\n            absRole.info.addBuff(buff)\n            RevoltCheatControl.ins.addBuff(absRole,buff)\n\n            this.buffToTrigger(buff)\n\n        } else {\n            if (buff.isCanRule()) {\n                // console.log(absRole.getBodyId(), \"叠加buff\", buffTab.Id)\n                buff.addRuleNumber(false)\n                buff.disposeRule()\n                RevoltCheatControl.ins.addBuff(absRole,buff)\n\n                this.buffToTrigger(buff)\n            } else if (buff.isClearByType(tab.ClearType.ClearType_StackFull)) {\n                absRole.info.removeBuffId(buff.buffId)\n                // console.log(absRole.getBodyId(), \"buff不可叠加\", buffTab.Id)\n            }\n        }\n        if (buff && buff.isValid() && buff.configTab && buff.configTab.isBuffGroup(tab.BuffGroup.BuffGroup_RolesBuffLayerNum)) {\n            this.onRolesBuffLayerNum(buff)\n        }\n    }\n\n\n\n    buffToTrigger(buff: Buff) {\n        if (buff && buff.isValid()) {\n            let addRole = FrameControl.ins.getObjById(buff.addOwner.objId) as AbsRole\n            let ownerRole = FrameControl.ins.getObjById(buff.owner.objId) as AbsRole\n            if (addRole && ownerRole) {\n                addRole.info.onSkillTrigger(tab.Triggertype.Triggertype_AddBuff, { otherAbsInfo: ownerRole.info, buff: buff })\n            }\n\n        }\n    }\n\n\n    removeBuffs(buffIds: number[], absRole: AbsRole) {\n        for (let index = 0; index < buffIds.length; index++) {\n            const v = buffIds[index];\n            absRole.info.removeBuffId(v)\n        }\n    }\n\n    removeBuffType(buffType: tab.BuffType, absRole: AbsRole) {\n        absRole.info.removeBuffId(buffType)\n    }\n\n    addBuffEffectUI(buff: Buff, absRole: AbsRole) {\n        if (buff.configTab.VFXID) {\n\n            //一人身上多个施法者产生同一个buffId, 只显示一个特效，做显示数量\n            let buffUi = this.getBuffUI(absRole, buff.buffId)\n            if (buffUi == null) {\n                buffUi = BuffUI.get()\n                if (FightMacro.isEffectShowBelow(buff.configTab.VFXID)) {\n                    FightRootControl.ins.getRootView().roleDown.addChild(buffUi.node)\n                } else {\n                    if (absRole && absRole.isRole()){\n                        absRole.node.addChild(buffUi.node)\n                    }else{\n                        FightRootControl.ins.getRootView().roleUp.addChild(buffUi.node)\n                    }\n                    \n                }\n\n                buffUi.setBuff(buff.buffId, absRole)\n                this.pushBuffUI(absRole, buffUi)\n            }\n            buffUi.addCount()\n        }\n        if (buff.configTab.isBuffGroup(tab.BuffGroup.BuffGroup_TransferDamage)) {\n            this.showTransferDamageUI()\n        }\n    }\n    removeBuffEffectUI(buff: Buff, absRole: AbsRole) {\n        RevoltCheatControl.ins.removeBuff(absRole,buff)\n        if (buff.configTab.VFXID) {\n            let list = this.getBuffUIsById(absRole)\n            for (let index = 0; index < list.length; index++) {\n                const v = list[index];\n                if (v.buffId == buff.buffId) {\n                    v.totalCount -= 1\n                    if (v.totalCount <= 0) {\n                        v.recycle()\n                        list.splice(index, 1)\n                        break\n                    }\n                }\n            }\n        }\n        if (buff.configTab.isBuffGroup(tab.BuffGroup.BuffGroup_TransferDamage)) {\n            this.showTransferDamageUI()\n        }\n    }\n\n    showTransferDamageUI() {\n        let tdList = this.getTransferDamageGroup()\n        if (tdList.length > 0) {\n        }\n        EventMgr.emitFight(FightEvent.buff_link, tdList)\n    }\n\n    getTransferDamageGroup(): Role[] {\n        let roles = PlayerControl.ins.getRoles()\n\n        let tdList = []\n        for (let index = 0; index < roles.length; index++) {\n            const v = roles[index];\n            if (v.isActive && !v.isDead && v.info.findBuffByBuffGroup(tab.BuffGroup.BuffGroup_TransferDamage)) {\n                tdList.push(v)\n            }\n        }\n        return tdList\n    }\n\n    onRolesBuffLayerNum(buff: Buff) {\n        let absRole = buff.owner.abs\n\n        if (absRole.isRole()) {\n            let maxNum = this.getBuffNumByObjType(absRole.objType, buff.configTab.BuffGroup)\n            if (maxNum > 0) {\n                let allRole = FrameControl.ins.getObjList(absRole.objType) as Role[]\n                let tempBuff: Buff\n                for (let index = 0; index < allRole.length; index++) {\n                    const tmpRole = allRole[index];\n                    tempBuff = tmpRole.info.getBuffByGroup(buff.configTab.BuffGroup)\n                    if (tempBuff == null) {\n                        this.addBuff(buff.configTab, buff.addOwner.objId, tmpRole)\n                        tempBuff = tmpRole.info.getBuffByGroup(buff.configTab.BuffGroup)\n                    }\n                    //buff已添加，做层级\n                    if (tempBuff && maxNum > tempBuff.ruleNumber) {\n                        let diff = maxNum - tempBuff.ruleNumber\n                        for (let j = 0; j < diff; j++) {\n                            tempBuff.addRuleNumber(false)\n                            tempBuff.disposeRule()\n                        }\n                    }\n                }\n                // for (let index = 0; index < allRole.length; index++) {\n                //     const absRole = allRole[index];\n                //     tempBuff = absRole.info.getBuffByGroup(buff.configTab.BuffGroup)\n                //     console.log(\"每一人曾数：\",tempBuff.ruleNumber)\n                // }\n            }\n            // console.log(\"buff最大层数-----\", maxNum)\n        }\n    }\n\n    getBuffNumByObjTypeAndBuffId(objType: AbsObjType, buffId: number) {\n        let buffTab = tab.getData().BuffTableById.getValue(buffId)\n        if (buffTab) {\n            return this.getBuffNumByObjType(objType, buffTab.BuffGroup)\n        }\n        return 0\n    }\n\n    getBuffNumByObjType(objType: AbsObjType, buffGroup: tab.BuffGroup) {\n        let allRole = FrameControl.ins.getObjList(objType) as AbsRole[]\n        let num = 0\n        //先获取到当前最大层数\n        let buff: Buff\n        allRole.forEach(e => {\n            buff = e.info.getBuffByGroup(buffGroup)\n            if (buff && buff.ruleNumber > num) {\n                num = buff.ruleNumber\n            }\n        })\n        return num\n    }\n\n    pushBuffUI(abs: AbsRole, buffUI: BuffUI) {\n        this.getBuffUIsById(abs).push(buffUI)\n    }\n    getBuffUIsById(abs: AbsRole) {\n        let list = this.poolUis.get(abs.getBodyId())\n        if (list == null) {\n            list = []\n            this.poolUis.set(abs.getBodyId(), list)\n        }\n        return list\n    }\n\n    getBuffUI(abs: AbsRole, buffId: number) {\n        let list = this.getBuffUIsById(abs)\n        for (let index = 0; index < list.length; index++) {\n            let ui = list[index]\n            if (ui.buffId == buffId) {\n                return ui\n            }\n        }\n        return null\n    }\n\n    /** buff触发效果 */\n    onTriggerEffect(buff: Buff) {\n        let ownerAbs = buff.owner.abs\n        if (ownerAbs == null || (ownerAbs && (ownerAbs.isDead || !ownerAbs.isActive || ownerAbs.info == null))) {\n            return\n        }\n        \n        if (buff.configTab == null || buff.configTab.effectTabs == null) {\n            console.log(\"buff触发效果\", buff)\n            return\n        }\n        let len = buff.configTab.addBuffTabs.length\n        if (len) {\n            for (let index = 0; index < buff.configTab.addBuffTabs.length; index++) {\n                if (buff.configTab == null) {\n                    break\n                }\n                const v = buff.configTab.addBuffTabs[index];\n                if (buff.buffId == v.Id) {\n                    console.log(\"buff触发添加buff死循环------\", v)\n                    return\n                }\n                // console.log(\"buff触发添加buff\", v)\n                this.addBuff(v, buff.configTab.addBuffObjType == 1 ? buff.addOwner.objId : buff.owner.objId, buff.owner.abs)\n            }\n        }\n        // console.log(\"buff触发效果\", buff.configTab.effectTabs)\n        len = buff.configTab.effectTabs.length\n        for (let index = 0; index < len; index++) {\n            if (buff.configTab == null) {\n                break\n            }\n            const eff = buff.configTab.effectTabs[index];\n            switch (eff.EffectType) {\n                case tab.AttrType.AttrType_AttackHeal:\n                    DamageCalculation.buff_AttackHeal(buff, index, eff)\n                    break\n                case tab.AttrType.AttrType_BigHpHeal:\n                    DamageCalculation.buff_BigHpHeal(buff, index, eff)\n                    break\n                case tab.AttrType.AttrType_BigHpLoss:\n                    DamageCalculation.buff_BigHpSubHeal(buff, index, eff)\n                    break\n                case tab.AttrType.AttrType_NowHpHeal:\n                    DamageCalculation.buff_NowHpSubHeal(buff, index, eff)\n                    break\n                case tab.AttrType.AttrType_TearEffect:\n                    DamageCalculation.buff_TearEffect(buff, index, eff)\n                    break\n                case tab.AttrType.AttrType_AttackShield:\n                    DamageCalculation.buff_AttackShield(buff, index, eff)\n                    break\n                case tab.AttrType.AttrType_BigHpShield:\n                    DamageCalculation.buff_BigHpShield(buff, index, eff)\n                    break\n            }\n        }\n    }\n\n\n    onInjured(data: DamageData, absRoleInfo: AbsRoleInfo) {\n        if (data.isTransferDamage) {\n            return\n        }\n        //身上有链伤buff\n        if (absRoleInfo.abs && absRoleInfo.abs.isRole()) {\n            if (absRoleInfo.findBuffByBuffGroup(tab.BuffGroup.BuffGroup_TransferDamage)) {\n                let tdList = this.getTransferDamageGroup()\n                if (tdList.length > 1) {\n                    for (let index = 0; index < tdList.length; index++) {\n                        const v = tdList[index];\n                        if (absRoleInfo.abs != v && v.isActive && !v.isDead) {\n                            let copyData = DamageData.copy(data)\n                            copyData.source = DamageSource.buff\n                            copyData.isTransferDamage = true\n                            DamageStatisticsData.ins.addBuffTransferDamage(v, copyData)\n                            v.info.onHitDamage(copyData)\n                            DamageLab.addShowDamageNum(copyData, v)\n                        }\n                    }\n                }\n            }\n        }\n    }\n}"]}