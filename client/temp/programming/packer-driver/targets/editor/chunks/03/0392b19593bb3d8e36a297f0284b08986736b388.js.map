{"version":3,"sources":["file:///C:/chickenStarClient/client/assets/scripts/logic/model/login/LoginControl.ts"],"names":["LoginControl","_decorator","AbsControl","LoginData","Http","Net","EventMgr","LocalEvent","NetStateEvent","SceneMgr","ScenesName","UIMgr","Reconnect","proto","tab","RedMgr","RedDotType","Global","ChannelMgr","Waiting","WaitingTag","Func","CommonTipsPop","LangMgr","ccclass","property","RandomCharSet","isChangeServer","pingInterval","ins","_instance","init","connect","Connect","gatewayAddrs","register","onNetState","CONNCET","onNetConnect","CLOSE","onNetClose","onMsg","Ptl","LoginRsp","on_s2c_LoginRsp","CreateRoleRsp","on_s2c_CreateRoleRsp","Pong","on_s2c_Pong","registerCalculateFb","testLogin","red_TestLogin","refreshEvent","stateToChange","login1","login","sdkLogin","getUid","getToken","JSON","stringify","getSdkLoginData","uid","token","params","setItem","isCreatRole","addr","serverAddress","svcReviewGroup","loginServerTab","ReviewSvcGroup","svcGroup","SvcGroup","channel","channelType","password","reqParam","platform","APP_VERSION","Show","Login","request","host","method","cb","responseJson","console","log","ret","data","gateway_addr","openId","default_area","default_area_name","loginGroup","group","isLogin","jumpLayer","Module","Module_RoleInfoNoticePop","emitLocal","ServerMaintain","create","getCombineString","Hide","createRole","nickName","_prefixArr","_suffixArr","prefixSuffixTable","getData","RandomNameTable","i","length","push","FirstName","LastName","prefixRdm","Math","floor","random","suffixRdm","msg","Msg_CreateRoleReq","name","area","Send","CreateRoleReq","randomString","chars","result","hide","Msg_LoginReq","LoginReq","addPingInterval","clearPingInterval","setInterval","Msg_Ping","time","Date","getTime","Ping","clearInterval","param","Msg_PingDelay","delay","PingDelay","isLoginScene","loadScene","error","code","CommonErrorCode","NoRole","Succeed","RoleNameExist","RoleNameInvalid"],"mappings":";;;iTA4BaA,Y;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA5BEC,MAAAA,U,OAAAA,U;;AACNC,MAAAA,U,iBAAAA,U;;AACAC,MAAAA,S,iBAAAA,S;;AACFC,MAAAA,I;;AACEC,MAAAA,G,iBAAAA,G;;AACAC,MAAAA,Q,iBAAAA,Q;;AACAC,MAAAA,U,iBAAAA,U;AAAYC,MAAAA,a,iBAAAA,a;;AACZC,MAAAA,Q,iBAAAA,Q;AAAUC,MAAAA,U,iBAAAA,U;;AACVC,MAAAA,K,iBAAAA,K;;AACAC,MAAAA,S,kBAAAA,S;;AACAC,MAAAA,K,oBAAAA,K;;AACAC,MAAAA,G,kBAAAA,G;;AAGAC,MAAAA,M,kBAAAA,M;;AACAC,MAAAA,U,kBAAAA,U;;AACAC,MAAAA,M,kBAAAA,M;;AACAC,MAAAA,U,kBAAAA,U;;AACFC,MAAAA,O;AAAWC,MAAAA,U,kBAAAA,U;;AACTC,MAAAA,I,kBAAAA,I;;AACAC,MAAAA,a,kBAAAA,a;;AACAC,MAAAA,O,kBAAAA,O;;;;;;;;;OAGH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBxB,U;AAExByB,MAAAA,a,GAAgB,gE;;8BAET1B,Y,GAAN,MAAMA,YAAN;AAAA;AAAA,oCAAsC;AAAA;AAAA;AAAA,eAGlC2B,cAHkC,GAGR,KAHQ;AAgJzC;AAhJyC,eAiJzCC,YAjJyC;AAAA;;AAIpB,mBAAHC,GAAG,GAAG;AACpB,cAAI,QAAQ,KAAKC,SAAjB,EAA4B;AACxB,iBAAKA,SAAL,GAAiB,IAAI9B,YAAJ,EAAjB;AACH;;AACD,iBAAO,KAAK8B,SAAZ;AACH;;AAEDC,QAAAA,IAAI,GAAS;AACT,gBAAMA,IAAN;AACH;;AAEDC,QAAAA,OAAO,GAAG;AACN;AAAA;AAAA,0BAAIC,OAAJ,CAAa,GAAE;AAAA;AAAA,sCAAUJ,GAAV,CAAcK,YAAd,CAA2B,CAA3B,CAA8B,EAA7C;AACH;;AAEDC,QAAAA,QAAQ,GAAS;AAEb;AAAA;AAAA,oCAASC,UAAT,CAAoB;AAAA;AAAA,8CAAcC,OAAlC,EAA2C,KAAKC,YAAhD,EAA8D,IAA9D;AACA;AAAA;AAAA,oCAASF,UAAT,CAAoB;AAAA;AAAA,8CAAcG,KAAlC,EAAyC,KAAKC,UAA9C,EAA0D,IAA1D;AAEA;AAAA;AAAA,oCAASC,KAAT,CAAe;AAAA;AAAA,8BAAMC,GAAN,CAAUC,QAAzB,EAAmC,KAAKC,eAAxC,EAAyD,IAAzD;AACA;AAAA;AAAA,oCAASH,KAAT,CAAe;AAAA;AAAA,8BAAMC,GAAN,CAAUG,aAAzB,EAAwC,KAAKC,oBAA7C,EAAmE,IAAnE;AACA;AAAA;AAAA,oCAASL,KAAT,CAAe;AAAA;AAAA,8BAAMC,GAAN,CAAUK,IAAzB,EAA+B,KAAKC,WAApC,EAAiD,IAAjD,EAPa,CASb;;AACA;AAAA;AAAA,gCAAOnB,GAAP,CAAWoB,mBAAX,CAA+B;AAAA;AAAA,wCAAWC,SAA1C,EAAqD,KAAKC,aAA1D,EAAyE,IAAzE;AACA;AAAA;AAAA,gCAAOC,YAAP,CAAoB;AAAA;AAAA,wCAAWF,SAA/B;AACH;;AAEDC,QAAAA,aAAa,CAACE,aAAD,EAAqB;AAC9BA,UAAAA,aAAa,GAAG,EAAhB;AACAA,UAAAA,aAAa,CAACC,MAAd,GAAuB,IAAvB;AACAD,UAAAA,aAAa,CAACE,KAAd,GAAsB,EAAtB;AAGA,iBAAOF,aAAP;AACH;;AAEDG,QAAAA,QAAQ,GAAG;AACP,eAAKD,KAAL,CAAW;AAAA;AAAA,wCAAWE,MAAX,EAAX,EAAgC;AAAA;AAAA,wCAAWC,QAAX,EAAhC,EAAuDC,IAAI,CAACC,SAAL,CAAe;AAAA;AAAA,wCAAWC,eAAX,EAAf,CAAvD;AACH;;AAEDN,QAAAA,KAAK,CAACO,GAAD,EAAcC,KAAd,EAA6BC,MAAc,GAAG,EAA9C,EAAkD;AACnD;AAAA;AAAA,4BAAKC,OAAL,CAAa,cAAb,EAA6B,EAA7B;AACA;AAAA;AAAA,sCAAUpC,GAAV,CAAcqC,WAAd,GAA4B,KAA5B;AACA,cAAIC,IAAI,GAAG;AAAA;AAAA,sCAAUtC,GAAV,CAAcuC,aAAzB;AACA,cAAIC,cAAc,GAAG;AAAA;AAAA,sCAAUxC,GAAV,CAAcyC,cAAd,CAA6BC,cAAlD;AACA,cAAIC,QAAQ,GAAG;AAAA;AAAA,sCAAU3C,GAAV,CAAcyC,cAAd,CAA6BG,QAA5C;AACA,cAAIC,OAAO,GAAG;AAAA;AAAA,gCAAOC,WAArB;AACA,cAAIC,QAAQ,GAAG;AAAA;AAAA,sCAAU/C,GAAV,CAAc+C,QAA7B,CAPmD,CASnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAIC,QAAQ,GAAI,OAAMf,GAAI,UAASC,KAAM,aAAY;AAAA;AAAA,gCAAOe,QAAS,OAAMJ,OAAQ,UAASF,QAAS,iBAAgBH,cAAe,QAAO;AAAA;AAAA,gCAAOU,WAAY,WAAUf,MAAO,aAAYY,QAAS,EAApM;AAEA;AAAA;AAAA,kCAAQI,IAAR,CAAa;AAAA;AAAA,wCAAWC,KAAxB,EAA+B,CAA/B;AAEA;AAAA;AAAA,4BAAKC,OAAL,CAAa;AACTC,YAAAA,IAAI,EAAEhB,IADG;AAETiB,YAAAA,MAAM,EAAE,KAFC;AAGTP,YAAAA,QAAQ,EAAEA,QAHD;AAITQ,YAAAA,EAAE,EAAGC,YAAD,IAAkB;AAClBC,cAAAA,OAAO,CAACC,GAAR,CAAYF,YAAZ;;AACA,kBAAIA,YAAJ,EAAkB;AACd,oBAAIA,YAAY,CAACG,GAAb,IAAoB,CAApB,IAAyBH,YAAY,CAACI,IAA1C,EAAgD;AAC5C;AAAA;AAAA,8CAAU7D,GAAV,CAAciC,GAAd,GAAoBwB,YAAY,CAACI,IAAb,CAAkB5B,GAAtC;AACA;AAAA;AAAA,8CAAUjC,GAAV,CAAckC,KAAd,GAAsBuB,YAAY,CAACI,IAAb,CAAkB3B,KAAxC;AACA;AAAA;AAAA,8CAAUlC,GAAV,CAAcK,YAAd,GAA6BoD,YAAY,CAACI,IAAb,CAAkBC,YAA/C;AACA;AAAA;AAAA,8CAAU9D,GAAV,CAAc+D,MAAd,GAAuBN,YAAY,CAACI,IAAb,CAAkBE,MAAzC;AACA;AAAA;AAAA,8CAAU/D,GAAV,CAAcgE,YAAd,GAA6BP,YAAY,CAACI,IAAb,CAAkBG,YAA/C;AACA;AAAA;AAAA,8CAAUhE,GAAV,CAAciE,iBAAd,GAAkCR,YAAY,CAACI,IAAb,CAAkBI,iBAApD,CAN4C,CAQ5C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA;AAAA,8CAAUjE,GAAV,CAAckE,UAAd,GAA2BT,YAAY,CAACU,KAAxC;AACAT,kBAAAA,OAAO,CAACC,GAAR,CAAa,cAAa;AAAA;AAAA,8CAAU3D,GAAV,CAAckE,UAAW,EAAnD;AAEA;AAAA;AAAA,8CAAUlE,GAAV,CAAcoE,OAAd,GAAwB,IAAxB;AACA;AAAA;AAAA,kCAAIhE,OAAJ,CAAa,GAAE;AAAA;AAAA,8CAAUJ,GAAV,CAAcK,YAAd,CAA2B,CAA3B,CAA8B,EAA7C;AACA;AACH,iBAtBD,MAsBO,IAAIoD,YAAY,CAACG,GAAb,IAAoB,CAAxB,EAA2B;AAAC;AAC/B;AAAA;AAAA,sCAAM5D,GAAN,CAAUqE,SAAV,CAAoB;AAAA;AAAA,kCAAIC,MAAJ,CAAWC,wBAA/B;AACA;AAAA;AAAA,4CAASC,SAAT,CAAmB;AAAA;AAAA,gDAAWC,cAA9B;AACH,iBAHM,MAGA;AACH;AACA;AAAA;AAAA,sDAAcC,MAAd,CAAqB;AAAA;AAAA,0CAAQC,gBAAR,CAAyB,mBAAzB,EAA8C,CAAClB,YAAY,CAACG,GAAd,CAA9C,CAArB;AACH;AACJ;;AACD;AAAA;AAAA,sCAAQgB,IAAR,CAAa;AAAA;AAAA,4CAAWxB,KAAxB;AACH;AAtCQ,WAAb;AAwCH;;AAIDyB,QAAAA,UAAU,CAACC,QAAD,EAAmB;AACzB,cAAIC,UAAU,GAAG,EAAjB;AACA,cAAIC,UAAU,GAAG,EAAjB;AACA,cAAIC,iBAAiB,GAAG;AAAA;AAAA,0BAAIC,OAAJ,GAAcC,eAAtC;;AACA,eAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,iBAAiB,CAACI,MAAtC,EAA8CD,CAAC,EAA/C,EAAmD;AAC/C,gBAAIvB,IAAyB,GAAGoB,iBAAiB,CAACG,CAAD,CAAjD;;AACAL,YAAAA,UAAU,CAACO,IAAX,CAAgBzB,IAAI,CAAC0B,SAArB;;AACAP,YAAAA,UAAU,CAACM,IAAX,CAAgBzB,IAAI,CAAC2B,QAArB;AACH,WARwB,CASzB;;;AACA,cAAIC,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBb,UAAU,CAACM,MAAtC,CAAhB;AACA,cAAIQ,SAAS,GAAGH,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBZ,UAAU,CAACK,MAAtC,CAAhB;;AACA,cAAIP,QAAQ,KAAK,EAAjB,EAAqB;AACjBA,YAAAA,QAAQ,GAAGC,UAAU,CAACU,SAAD,CAAV,GAAwBT,UAAU,CAACa,SAAD,CAA7C;AACA;AAAA;AAAA,wCAAU7F,GAAV,CAAc8E,QAAd,GAAyBA,QAAzB;AACH,WAfwB,CAgBzB;;;AACA,cAAIgB,GAAG,GAAG,IAAI;AAAA;AAAA,8BAAMC,iBAAV,EAAV;AACAD,UAAAA,GAAG,CAACE,IAAJ,GAAWlB,QAAX;AACAgB,UAAAA,GAAG,CAACG,IAAJ,GAAW;AAAA;AAAA,sCAAUjG,GAAV,CAAcgE,YAAzB;AACA8B,UAAAA,GAAG,CAAC7C,QAAJ,GAAe;AAAA;AAAA,gCAAOA,QAAtB;AAEA;AAAA;AAAA,0BAAIiD,IAAJ,CAAS;AAAA;AAAA,8BAAMrF,GAAN,CAAUsF,aAAnB,EAAkCL,GAAlC;AACH;;AAEDM,QAAAA,YAAY,CAACf,MAAD,EAAiBgB,KAAjB,EAAwC;AAChD,cAAIC,MAAM,GAAG,EAAb;;AACA,eAAK,IAAIlB,CAAC,GAAGC,MAAb,EAAqBD,CAAC,GAAG,CAAzB,EAA4B,EAAEA,CAA9B,EAAiCkB,MAAM,IAAID,KAAK,CAACX,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBS,KAAK,CAAChB,MAAjC,CAAD,CAAf;;AACjC,iBAAOiB,MAAP;AACH;;AAID7F,QAAAA,YAAY,GAAG;AACXiD,UAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACA;AAAA;AAAA,sCAAU4C,IAAV;AACA,cAAIT,GAAG,GAAG,IAAI;AAAA;AAAA,8BAAMU,YAAV,EAAV;AACAV,UAAAA,GAAG,CAAC7D,GAAJ,GAAU;AAAA;AAAA,sCAAUjC,GAAV,CAAciC,GAAxB;AACA6D,UAAAA,GAAG,CAAC5D,KAAJ,GAAY;AAAA;AAAA,sCAAUlC,GAAV,CAAckC,KAA1B;AACA4D,UAAAA,GAAG,CAAC3B,KAAJ,GAAY;AAAA;AAAA,sCAAUnE,GAAV,CAAckE,UAA1B;AACA4B,UAAAA,GAAG,CAACG,IAAJ,GAAW;AAAA;AAAA,sCAAUjG,GAAV,CAAcgE,YAAzB;AACA;AAAA;AAAA,0BAAIkC,IAAJ,CAAS;AAAA;AAAA,8BAAMrF,GAAN,CAAU4F,QAAnB,EAA6BX,GAA7B;AAEA;AAAA;AAAA,4BAAK1D,OAAL,CAAa,eAAb,EAA8BN,IAAI,CAACC,SAAL,CAAe;AAAEkE,YAAAA,IAAI,EAAE;AAAA;AAAA,wCAAUjG,GAAV,CAAcgE,YAAtB;AAAoCgC,YAAAA,IAAI,EAAE;AAAA;AAAA,wCAAUhG,GAAV,CAAciE;AAAxD,WAAf,CAA9B;AAEA,eAAKyC,eAAL;AACH;;AAEDA,QAAAA,eAAe,GAAG;AACd,eAAKC,iBAAL;AACA,eAAK5G,YAAL,GAAoB6G,WAAW,CAAC,MAAM;AAClC,gBAAId,GAAG,GAAG,IAAI;AAAA;AAAA,gCAAMe,QAAV,EAAV;AACAf,YAAAA,GAAG,CAACgB,IAAJ,GAAW,IAAIC,IAAJ,GAAWC,OAAX,EAAX;AACA;AAAA;AAAA,4BAAId,IAAJ,CAAS;AAAA;AAAA,gCAAMrF,GAAN,CAAUoG,IAAnB,EAAyBnB,GAAzB;AACH,WAJ8B,EAI5B,KAJ4B,CAA/B;AAKH;;AAEDa,QAAAA,iBAAiB,GAAG;AAChB,cAAI,KAAK5G,YAAT,EAAuB;AACnBmH,YAAAA,aAAa,CAAC,KAAKnH,YAAN,CAAb;AACA,iBAAKA,YAAL,GAAoB,IAApB;AACH;AACJ;;AAEDoB,QAAAA,WAAW,CAAC2E,GAAD,EAAsB;AAC7B,cAAIqB,KAAK,GAAG,IAAI;AAAA;AAAA,8BAAMC,aAAV,EAAZ;AACAD,UAAAA,KAAK,CAACE,KAAN,GAAc,CAAC,IAAIN,IAAJ,GAAWC,OAAX,KAAuBlB,GAAG,CAACgB,IAA5B,IAAoC,CAAlD;AACA;AAAA;AAAA,0BAAIZ,IAAJ,CAAS;AAAA;AAAA,8BAAMrF,GAAN,CAAUyG,SAAnB,EAA8BH,KAA9B;AACH;;AAEDxG,QAAAA,UAAU,GAAG;AACT+C,UAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACA,eAAKgD,iBAAL;AACA;AAAA;AAAA,kCAAQ/B,IAAR,CAAa;AAAA;AAAA,wCAAWxB,KAAxB;;AACA,cAAI,CAAC,KAAKtD,cAAV,EAA0B;AACtB,gBAAI;AAAA;AAAA,sCAASyH,YAAT,EAAJ,EAA6B;AACzB7D,cAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACH,aAFD,MAEO;AACH;AAAA;AAAA,0CAAUe,MAAV;AACH;AACJ,WAND,MAMO;AACH;AAAA;AAAA,sCAAS1E,GAAT,CAAawH,SAAb,CAAuB;AAAA;AAAA,0CAAW9F,KAAlC;AACH;AAEJ;;AAEDX,QAAAA,eAAe,CAAC+E,GAAD,EAA0B;AACrC;AAAA;AAAA,kCAAQlB,IAAR,CAAa;AAAA;AAAA,wCAAWxB,KAAxB;;AACA,cAAI0C,GAAG,CAAC2B,KAAJ,IAAa,IAAjB,EAAuB;AACnB;AACA;AACH;;AAED,kBAAQ3B,GAAG,CAAC2B,KAAJ,CAAUC,IAAlB;AACI,iBAAK;AAAA;AAAA,gCAAMC,eAAN,CAAsBC,MAA3B;AACI;AAAA;AAAA,0CAAU5H,GAAV,CAAcqC,WAAd,GAA4B,IAA5B;AACA;AAAA;AAAA,0CAAUrC,GAAV,CAAc8E,QAAd,GAAyB,EAAzB;AACA,mBAAKD,UAAL,CAAgB;AAAA;AAAA,0CAAU7E,GAAV,CAAc8E,QAA9B;AACA;AALR;AAOH;;AAED7D,QAAAA,oBAAoB,CAAC6E,GAAD,EAA+B;AAC/C,cAAI,CAACA,GAAG,CAAC2B,KAAL,IAAc3B,GAAG,CAAC2B,KAAJ,CAAUC,IAAV,IAAkB;AAAA;AAAA,8BAAMC,eAAN,CAAsBE,OAA1D,EAAmE;AAC/D;AAAA;AAAA,wCAAU7H,GAAV,CAAcqC,WAAd,GAA4B,IAA5B,CAD+D,CAE/D;AACA;AACH,WAJD,MAIO,IAAIyD,GAAG,CAAC2B,KAAJ,CAAUC,IAAV,IAAkB;AAAA;AAAA,8BAAMC,eAAN,CAAsBG,aAA5C,EAA2D;AAC9D,iBAAKjD,UAAL,CAAgB;AAAA;AAAA,wCAAU7E,GAAV,CAAc8E,QAAd,GAAyB,KAAKsB,YAAL,CAAkB,CAAlB,EAAqBvG,aAArB,CAAzC;AAEH,WAHM,MAGA,IAAIiG,GAAG,CAAC2B,KAAJ,CAAUC,IAAV,IAAkB;AAAA;AAAA,8BAAMC,eAAN,CAAsBI,eAA5C,EAA6D;AAChE,iBAAKlD,UAAL,CAAgB;AAAA;AAAA,wCAAU7E,GAAV,CAAc8E,QAAd,GAAyB,KAAKsB,YAAL,CAAkB,CAAlB,EAAqBvG,aAArB,CAAzC;AACH,WAV8C,CAW/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACH;;AAtPwC,O;;AAAhC1B,MAAAA,Y,CAEM8B,S","sourcesContent":["import { Node, _decorator, sys } from \"cc\";\nimport { AbsControl, AbsMgr } from \"../../../framework/base/IAbs\";\nimport { LoginData } from \"./LoginData\";\nimport Http from \"../../net/Http\";\nimport { Net } from \"../../net/Net\";\nimport { EventMgr } from \"../../mgr/EventMgr\";\nimport { LocalEvent, NetStateEvent } from \"../../define/LocalEvent\";\nimport { SceneMgr, ScenesName } from \"../../mgr/SceneMgr\";\nimport { UIMgr } from \"../../mgr/UIMgr\";\nimport { Reconnect } from \"../Reconnect\";\nimport { proto } from \"client_protocol\";\nimport { tab } from \"../../../Table/table_gen\";\nimport { LoginScene } from \"../../../scene/LoginScene\";\nimport { RoleData } from \"../role/RoleData\";\nimport { RedMgr } from \"../../mgr/RedMgr\";\nimport { RedDotType } from \"../../red/RedDotType\";\nimport { Global } from \"../../../Global\";\nimport { ChannelMgr } from \"../../../channel/ChannelMgr\";\nimport Waiting, { WaitingTag } from \"../../../Common/script/Waiting\";\nimport { Func } from \"../../utils/Func\";\nimport { CommonTipsPop } from \"../common/CommonTipsPop\";\nimport { LangMgr } from \"../../mgr/LangMgr\";\n\n\nconst { ccclass, property } = _decorator;\n\nconst RandomCharSet = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n\nexport class LoginControl extends AbsControl {\n\n    private static _instance: LoginControl;\n    public isChangeServer: boolean = false;\n    public static get ins() {\n        if (null == this._instance) {\n            this._instance = new LoginControl();\n        }\n        return this._instance;\n    }\n\n    init(): void {\n        super.init()\n    }\n\n    connect() {\n        Net.Connect(`${LoginData.ins.gatewayAddrs[0]}`)\n    }\n\n    register(): void {\n\n        EventMgr.onNetState(NetStateEvent.CONNCET, this.onNetConnect, this)\n        EventMgr.onNetState(NetStateEvent.CLOSE, this.onNetClose, this)\n\n        EventMgr.onMsg(proto.Ptl.LoginRsp, this.on_s2c_LoginRsp, this)\n        EventMgr.onMsg(proto.Ptl.CreateRoleRsp, this.on_s2c_CreateRoleRsp, this)\n        EventMgr.onMsg(proto.Ptl.Pong, this.on_s2c_Pong, this)\n\n        //-----------------测试红点\n        RedMgr.ins.registerCalculateFb(RedDotType.testLogin, this.red_TestLogin, this)\n        RedMgr.refreshEvent(RedDotType.testLogin)\n    }\n\n    red_TestLogin(stateToChange: any) {\n        stateToChange = {}\n        stateToChange.login1 = true\n        stateToChange.login = {\n\n        }\n        return stateToChange\n    }\n\n    sdkLogin() {\n        this.login(ChannelMgr.getUid(), ChannelMgr.getToken(), JSON.stringify(ChannelMgr.getSdkLoginData()))\n    }\n\n    login(uid: string, token: string, params: string = \"\") {\n        Func.setItem(\"test_message\", \"\")\n        LoginData.ins.isCreatRole = false\n        let addr = LoginData.ins.serverAddress\n        let svcReviewGroup = LoginData.ins.loginServerTab.ReviewSvcGroup\n        let svcGroup = LoginData.ins.loginServerTab.SvcGroup\n        let channel = Global.channelType\n        let password = LoginData.ins.password\n\n        // uid = \"120512169\";\n        // token = \"2a4ea55d14cd182099cf7a3952f54024\"\n        // Global.platform = \"ios\"\n        // channel = 1;\n        // svcGroup = \"dev\";\n        // svcReviewGroup = \"dev\";\n        // Global.APP_VERSION = \"1.0.0\";\n        // params = JSON.stringify({\"account\":\"lzhlryt@163.com\",\"uid\":\"120512169\",\"istemp\":\"0\",\"nickname\":\"lzhlryt@163.com\",\"sessiontime\":1722592892,\"sessionid\":\"2a4ea55d14cd182099cf7a3952f54024\",\"remind\":false,\"ismobile\":false})\n        // password = \"111\"\n\n        let reqParam = `uid=${uid}&token=${token}&platform=${Global.platform}&ch=${channel}&group=${svcGroup}&review_group=${svcReviewGroup}&ver=${Global.APP_VERSION}&extras=${params}&password=${password}`;\n\n        Waiting.Show(WaitingTag.Login, 0)\n\n        Http.request({\n            host: addr,\n            method: \"GET\",\n            reqParam: reqParam,\n            cb: (responseJson) => {\n                console.log(responseJson)\n                if (responseJson) {\n                    if (responseJson.ret == 0 && responseJson.data) {\n                        LoginData.ins.uid = responseJson.data.uid;\n                        LoginData.ins.token = responseJson.data.token;\n                        LoginData.ins.gatewayAddrs = responseJson.data.gateway_addr\n                        LoginData.ins.openId = responseJson.data.openId\n                        LoginData.ins.default_area = responseJson.data.default_area\n                        LoginData.ins.default_area_name = responseJson.data.default_area_name\n\n                        // if (responseJson.group == LoginData.ins.loginServerTab.SvcGroup) {\n                        //     Global.SERVER_VERSION = Global.APP_VERSION\n                        // } else {\n                        //     //审核服\n                        //     responseJson.data.group = LoginData.ins.loginServerTab.ReviewSvcGroup\n                        //     Global.SERVER_VERSION = \"0.0.0\"\n                        // }\n\n                        LoginData.ins.loginGroup = responseJson.group\n                        console.log(`loginGroup=${LoginData.ins.loginGroup}`)\n\n                        LoginData.ins.isLogin = true\n                        Net.Connect(`${LoginData.ins.gatewayAddrs[0]}`)\n                        return\n                    } else if (responseJson.ret == 6) {//服务器维护中\n                        UIMgr.ins.jumpLayer(tab.Module.Module_RoleInfoNoticePop)\n                        EventMgr.emitLocal(LocalEvent.ServerMaintain)\n                    } else {\n                        //CommonTipsPop.create(`链接失败,code:${responseJson.ret}`)\n                        CommonTipsPop.create(LangMgr.getCombineString(\"Tips_connection_3\", [responseJson.ret]))\n                    }\n                }\n                Waiting.Hide(WaitingTag.Login)\n            }\n        })\n    }\n\n\n\n    createRole(nickName: string) {\n        let _prefixArr = [];\n        let _suffixArr = [];\n        let prefixSuffixTable = tab.getData().RandomNameTable;\n        for (let i = 0; i < prefixSuffixTable.length; i++) {\n            let data: tab.RandomNameTable = prefixSuffixTable[i];\n            _prefixArr.push(data.FirstName);\n            _suffixArr.push(data.LastName);\n        }\n        // 随机一个名字\n        let prefixRdm = Math.floor(Math.random() * _prefixArr.length);\n        let suffixRdm = Math.floor(Math.random() * _suffixArr.length);\n        if (nickName === \"\") {\n            nickName = _prefixArr[prefixRdm] + _suffixArr[suffixRdm]\n            LoginData.ins.nickName = nickName;\n        }\n        //发送创角协议\n        let msg = new proto.Msg_CreateRoleReq()\n        msg.name = nickName;\n        msg.area = LoginData.ins.default_area\n        msg.platform = Global.platform\n\n        Net.Send(proto.Ptl.CreateRoleReq, msg);\n    }\n\n    randomString(length: number, chars: string): string {\n        var result = '';\n        for (var i = length; i > 0; --i) result += chars[Math.floor(Math.random() * chars.length)];\n        return result;\n    }\n\n    //----------------处理回调---------------------\n    pingInterval: any\n    onNetConnect() {\n        console.log('ws onNetConnect')\n        Reconnect.hide()\n        let msg = new proto.Msg_LoginReq()\n        msg.uid = LoginData.ins.uid\n        msg.token = LoginData.ins.token\n        msg.group = LoginData.ins.loginGroup;\n        msg.area = LoginData.ins.default_area\n        Net.Send(proto.Ptl.LoginReq, msg)\n\n        Func.setItem(\"lastLoginArea\", JSON.stringify({ area: LoginData.ins.default_area, name: LoginData.ins.default_area_name }))\n\n        this.addPingInterval()\n    }\n\n    addPingInterval() {\n        this.clearPingInterval()\n        this.pingInterval = setInterval(() => {\n            let msg = new proto.Msg_Ping()\n            msg.time = new Date().getTime()\n            Net.Send(proto.Ptl.Ping, msg)\n        }, 30000)\n    }\n\n    clearPingInterval() {\n        if (this.pingInterval) {\n            clearInterval(this.pingInterval)\n            this.pingInterval = null\n        }\n    }\n\n    on_s2c_Pong(msg: proto.Msg_Pong) {\n        let param = new proto.Msg_PingDelay()\n        param.delay = (new Date().getTime() - msg.time) / 2\n        Net.Send(proto.Ptl.PingDelay, param)\n    }\n\n    onNetClose() {\n        console.log('ws onNetClose')\n        this.clearPingInterval()\n        Waiting.Hide(WaitingTag.Login)\n        if (!this.isChangeServer) {\n            if (SceneMgr.isLoginScene()) {\n                console.log(\"登录场景，走重登逻辑\")\n            } else {\n                Reconnect.create()\n            }\n        } else {\n            SceneMgr.ins.loadScene(ScenesName.login);\n        }\n\n    }\n\n    on_s2c_LoginRsp(msg: proto.Msg_LoginRsp) {\n        Waiting.Hide(WaitingTag.Login)\n        if (msg.error == null) {\n            // 等待角色信息\n            return\n        }\n\n        switch (msg.error.code) {\n            case proto.CommonErrorCode.NoRole:\n                LoginData.ins.isCreatRole = true;\n                LoginData.ins.nickName = \"\";\n                this.createRole(LoginData.ins.nickName);\n                break\n        }\n    }\n\n    on_s2c_CreateRoleRsp(msg: proto.Msg_CreateRoleRsp) {\n        if (!msg.error || msg.error.code == proto.CommonErrorCode.Succeed) {\n            LoginData.ins.isCreatRole = true\n            // // 等待角色信息\n            // return\n        } else if (msg.error.code == proto.CommonErrorCode.RoleNameExist) {\n            this.createRole(LoginData.ins.nickName + this.randomString(4, RandomCharSet))\n\n        } else if (msg.error.code == proto.CommonErrorCode.RoleNameInvalid) {\n            this.createRole(LoginData.ins.nickName + this.randomString(8, RandomCharSet))\n        }\n        // switch (msg.result) {\n        //     case proto.Msg_CreatRoleRsp.ErrorCode.Succeed:\n        //         LoginData.ins.isCreatRole = true;\n        //         break;\n        //     case proto.Msg_CreatRoleRsp.ErrorCode.InvalidName:\n        //         //名字非法，随机一个名字重新创建角色\n        //         this.createRole(LoginData.ins.nickName + this.randomString(8, RandomCharSet))\n        //         break;\n        //     case proto.Msg_CreatRoleRsp.ErrorCode.DuplicatedName:\n        //         //名字重复，在原来名字后面加随机字符串\n        //         this.createRole(LoginData.ins.nickName + this.randomString(4, RandomCharSet))\n        //         break;\n        //     default:\n        //         // Waiting.Hide(WaitingTag.Login)\n        //         // if (SdkManager.Instance.isSDK()) {\n        //         //     console.warn(\"55555555555555555\")\n        //         //     this.showLoginFail()\n        //         // }\n        //         break;\n        // }\n    }\n\n}"]}