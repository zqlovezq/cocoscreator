{"version":3,"sources":["file:///C:/chickenStarClient/client/assets/scripts/logic/model/bag/BagPop.ts"],"names":["_decorator","Button","Label","Node","ViewPop","proto","ItemData","ItemPoolMgr","tab","EventMgr","Net","EquipData","ShowTips","UIMgr","LangMgr","ViewName","HeroDataControl","RedMgr","RedDotType","ccclass","property","BagPop","bagDataMap","currBagType","bagItemNodes","register","onMsg","Ptl","ItemChangePush","on_s2c_Msg_ItemChangePush","UseHeroPieceOneClickRsp","on_s2c_UseHeroPieceOneClickRsp","msg","error","code","CommonErrorCode","Succeed","ins","show","viewName","CongratulationPop","data","rewards","start","initBagData","initBagView","Map","itemList","getItems","value","bagType","itemTable","BagType","BagType_None","Number","num","addByBagDataMap","equips","getEquips","isWear","BagType_Equip","BagType_Jade","sortBagData","Array","from","keys","type","info","isFind","list","get","isAdd","set","find","index","itemId","push","removeByBagData","findIndex","splice","removeBagEquipData","id","bagTypes","key","sort","a","b","Sort","removeComItem","nobtn_contentNode","parent","active","havebtn_contentNode","destroyAllChildren","EmptyNode","length","node","BagType_Fragment","createEquipItem","createItem","redNode","getChildByName","Type","ItemType","ItemType_Box","isRed","HeroBagRed","String","composeBtn","decomposeBtn","capacityNode","updateEquipNum","equipNumLab","string","equipMaxNumLab","getData","GetKeyValue_ConfigTable","EquipMaxNum","onClickToggle","event","console","log","onClickDecompose","onClickCompose","composeCount","i","itemTab","getByItemId","needCount","Quality","ItemQuality","ItemQuality_Purple","count","Math","floor","getHeroBagFull","getLab","Msg_UseHeroPieceOneClickReq","Send","UseHeroPieceOneClickReq","onClickAddTestData","FinishStageReq","isRefresh","sortTyps","updatedItems","ItemTableById","getValue","ItemType_Hero","ItemType_Equip","itemInfo","isSort","indexOf","removedItems","itemNum","updatedEquipments","getEquipInfoById","onDestroy","unTarget","name","putEquipItem","putCommonItem"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,M,OAAAA,M;AAAmBC,MAAAA,K,OAAAA,K;AAAYC,MAAAA,I,OAAAA,I;;AAC3CC,MAAAA,O,iBAAAA,O;;AACAC,MAAAA,K,oBAAAA,K;;AACAC,MAAAA,Q,iBAAAA,Q;;AAEAC,MAAAA,W,iBAAAA,W;;AAEAC,MAAAA,G,iBAAAA,G;;AACAC,MAAAA,Q,iBAAAA,Q;;AACAC,MAAAA,G,iBAAAA,G;;AACAC,MAAAA,S,iBAAAA,S;;AAGAC,MAAAA,Q,iBAAAA,Q;AAAUC,MAAAA,K,iBAAAA,K;;AACVC,MAAAA,O,kBAAAA,O;;AACAC,MAAAA,Q,kBAAAA,Q;;AACAC,MAAAA,e,kBAAAA,e;;AACAC,MAAAA,M,kBAAAA,M;;AACAC,MAAAA,U,kBAAAA,U;;;;;;;;;OACH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBpB,U;;wBAGjBqB,M,WADZF,OAAO,CAAC,QAAD,C,UAEHC,QAAQ,CAACnB,MAAD,C,UAERmB,QAAQ,CAACnB,MAAD,C,UAERmB,QAAQ,CAAClB,KAAD,C,UAERkB,QAAQ,CAAClB,KAAD,C,UAERkB,QAAQ,CAACjB,IAAD,C,UAERiB,QAAQ,CAACjB,IAAD,C,UAERiB,QAAQ,CAACjB,IAAD,C,UAERiB,QAAQ,CAACjB,IAAD,C,WAERiB,QAAQ,CAAClB,KAAD,C,WAERkB,QAAQ,CAAClB,KAAD,C,2BApBb,MACamB,MADb;AAAA;AAAA,8BACoC;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA,eAsBxBC,UAtBwB;AAAA,eAuBxBC,WAvBwB,GAuBF,CAvBE;AAAA,eAwBxBC,YAxBwB;AAAA;;AAyBhC;AACAC,QAAAA,QAAQ,GAAS;AACb;AAAA;AAAA,oCAASC,KAAT,CAAe;AAAA;AAAA,8BAAMC,GAAN,CAAUC,cAAzB,EAAyC,KAAKC,yBAA9C,EAAyE,IAAzE;AACA;AAAA;AAAA,oCAASH,KAAT,CAAe;AAAA;AAAA,8BAAMC,GAAN,CAAUG,uBAAzB,EAAkD,KAAKC,8BAAvD,EAAuF,IAAvF;AACH;;AACDA,QAAAA,8BAA8B,CAACC,GAAD,EAAyC;AACnE,cAAIA,GAAG,CAACC,KAAJ,IAAaD,GAAG,CAACC,KAAJ,CAAUC,IAAV,IAAkB;AAAA;AAAA,8BAAMC,eAAN,CAAsBC,OAAzD,EAAkE;AAClE;AAAA;AAAA,8BAAMC,GAAN,CAAUC,IAAV,CAAe;AAAEC,YAAAA,QAAQ,EAAE;AAAA;AAAA,sCAASC,iBAArB;AAAwCC,YAAAA,IAAI,EAAET,GAAG,CAACU;AAAlD,WAAf;AACH,SAjC+B,CAkChC;AACA;AAEA;;;AAEAC,QAAAA,KAAK,GAAG;AACJ,eAAKC,WAAL;AACA,eAAKpB,YAAL,GAAoB,EAApB,CAFI,CAGJ;;AACA,eAAKqB,WAAL;AAEH;;AACDD,QAAAA,WAAW,GAAG;AACV,eAAKtB,UAAL,GAAkB,IAAIwB,GAAJ,EAAlB;AACA,cAAIC,QAAQ,GAAG;AAAA;AAAA,oCAASV,GAAT,CAAaW,QAAb,EAAf;;AACA,eAAK,IAAIC,KAAT,IAAkBF,QAAlB,EAA4B;AACxB,gBAAIG,OAAO,GAAGD,KAAK,CAACE,SAAN,CAAgBC,OAA9B;;AACA,gBAAIF,OAAO,GAAG;AAAA;AAAA,4BAAIE,OAAJ,CAAYC,YAAtB,IAAsCC,MAAM,CAACL,KAAK,CAACM,GAAP,CAAN,GAAoB,CAA9D,EAAiE;AAC7D,mBAAKC,eAAL,CAAqBN,OAArB,EAA8BD,KAA9B;AACH;AACJ;;AACD,cAAIQ,MAAM,GAAG;AAAA;AAAA,sCAAUpB,GAAV,CAAcqB,SAAd,EAAb;;AACA,eAAK,IAAIT,KAAT,IAAkBQ,MAAlB,EAA0B;AACtB,gBAAI,CAACR,KAAK,CAACU,MAAX,EAAmB;AACf,kBAAIV,KAAK,CAACE,SAAN,CAAgBC,OAAhB,IAA2B;AAAA;AAAA,8BAAIA,OAAJ,CAAYQ,aAA3C,EAA0D;AACtD,qBAAKJ,eAAL,CAAqB;AAAA;AAAA,gCAAIJ,OAAJ,CAAYQ,aAAjC,EAAgDX,KAAhD;AACH,eAFD,MAEO,IAAIA,KAAK,CAACE,SAAN,CAAgBC,OAAhB,IAA2B;AAAA;AAAA,8BAAIA,OAAJ,CAAYS,YAA3C,EAAyD;AAC5D,qBAAKL,eAAL,CAAqB;AAAA;AAAA,gCAAIJ,OAAJ,CAAYS,YAAjC,EAA+CZ,KAA/C;AACH;AAEJ;AAEJ;;AACD,eAAKa,WAAL,CAAiBC,KAAK,CAACC,IAAN,CAAW,KAAK1C,UAAL,CAAgB2C,IAAhB,EAAX,CAAjB;AACH;;AACOT,QAAAA,eAAe,CAACU,IAAD,EAAeC,IAAf,EAA2CC,MAAM,GAAG,KAApD,EAA2D;AAC9E,cAAIC,IAAI,GAAG,KAAK/C,UAAL,CAAgBgD,GAAhB,CAAoBJ,IAApB,CAAX;AACA,cAAIK,KAAK,GAAG,KAAZ;;AACA,cAAI,CAACF,IAAL,EAAW;AACPA,YAAAA,IAAI,GAAG,EAAP;AACA,iBAAK/C,UAAL,CAAgBkD,GAAhB,CAAoBN,IAApB,EAA0BG,IAA1B;AACH;;AACD,cAAID,MAAJ,EAAY;AACR,gBAAInB,KAAK,GAAGoB,IAAI,CAACI,IAAL,CAAU,CAACxB,KAAD,EAAQyB,KAAR,KAAkB;AACpC,kBAAIzB,KAAK,CAAC0B,MAAN,IAAgBR,IAAI,CAACQ,MAAzB,EACI,OAAO1B,KAAP;AACP,aAHW,CAAZ;;AAIA,gBAAIA,KAAJ,EAAW;AACPA,cAAAA,KAAK,GAAGkB,IAAR;AACH,aAFD,MAEO;AACHE,cAAAA,IAAI,CAACO,IAAL,CAAUT,IAAV;AACAI,cAAAA,KAAK,GAAG,IAAR;AACH;AAEJ,WAZD,MAYO;AACHF,YAAAA,IAAI,CAACO,IAAL,CAAUT,IAAV;AACAI,YAAAA,KAAK,GAAG,IAAR;AACH;;AACD,iBAAOA,KAAP;AAEH;;AACOM,QAAAA,eAAe,CAAC3B,OAAD,EAAkByB,MAAlB,EAAkC;AACrD,cAAIN,IAAI,GAAG,KAAK/C,UAAL,CAAgBgD,GAAhB,CAAoBpB,OAApB,CAAX;;AACA,cAAImB,IAAJ,EAAU;AACN,gBAAIK,KAAK,GAAG,CAAC,CAAb;AACAA,YAAAA,KAAK,GAAGL,IAAI,CAACS,SAAL,CAAgB7B,KAAD,IAAWA,KAAK,CAAC0B,MAAN,IAAgBA,MAA1C,CAAR;;AACA,gBAAID,KAAK,IAAI,CAAb,EAAgB;AACZL,cAAAA,IAAI,CAACU,MAAL,CAAYL,KAAZ,EAAmB,CAAnB;AACH;AACJ;AACJ;;AACOM,QAAAA,kBAAkB,CAACC,EAAD,EAAa;AACnC,cAAIZ,IAAI,GAAG,KAAK/C,UAAL,CAAgBgD,GAAhB,CAAoB;AAAA;AAAA,0BAAIlB,OAAJ,CAAYQ,aAAhC,CAAX;;AACA,cAAIS,IAAJ,EAAU;AACN,gBAAIK,KAAK,GAAG,CAAC,CAAb;AACAA,YAAAA,KAAK,GAAGL,IAAI,CAACS,SAAL,CAAgB7B,KAAD,IAAWK,MAAM,CAACL,KAAK,CAACgC,EAAP,CAAN,IAAoBA,EAA9C,CAAR;;AACA,gBAAIP,KAAK,IAAI,CAAb,EAAgB;AACZL,cAAAA,IAAI,CAACU,MAAL,CAAYL,KAAZ,EAAmB,CAAnB;AACH;AACJ;AACJ;;AAEOZ,QAAAA,WAAW,CAACoB,QAAD,EAA0B;AACzC,eAAK,IAAIC,GAAT,IAAgBD,QAAhB,EAA0B;AACtB,gBAAIb,IAAI,GAAG,KAAK/C,UAAL,CAAgBgD,GAAhB,CAAoBY,QAAQ,CAACC,GAAD,CAA5B,CAAX;;AACA,gBAAId,IAAJ,EAAU;AACNA,cAAAA,IAAI,CAACe,IAAL,CAAU,CAACC,CAAD,EAAIC,CAAJ,KAAU;AAChB,uBAAOD,CAAC,CAAClC,SAAF,CAAYoC,IAAZ,GAAmBD,CAAC,CAACnC,SAAF,CAAYoC,IAAtC;AACH,eAFD;AAGH;AACJ;AAEJ;;AACD1C,QAAAA,WAAW,GAAG;AACV,eAAK2C,aAAL;AACA,eAAKC,iBAAL,CAAuBC,MAAvB,CAA8BA,MAA9B,CAAqCC,MAArC,GAA8C,KAA9C;AACA,eAAKC,mBAAL,CAAyBF,MAAzB,CAAgCA,MAAhC,CAAuCC,MAAvC,GAAgD,KAAhD;AACA,eAAKF,iBAAL,CAAuBI,kBAAvB;AACA,eAAKD,mBAAL,CAAyBC,kBAAzB;AACA,cAAIxB,IAAI,GAAG,KAAK/C,UAAL,CAAgBgD,GAAhB,CAAoB,KAAK/C,WAAzB,CAAX;AACA,eAAKuE,SAAL,CAAeH,MAAf,GAAwBtB,IAAI,GAAGA,IAAI,CAAC0B,MAAL,KAAgB,CAAnB,GAAuB,IAAnD;;AACA,eAAK,IAAIZ,GAAT,IAAgBd,IAAhB,EAAsB;AAClB,gBAAI2B,IAAS,GAAG,IAAhB;;AACA,gBAAI,KAAKzE,WAAL,IAAoB;AAAA;AAAA,4BAAI6B,OAAJ,CAAYQ,aAAhC,IAAiD,KAAKrC,WAAL,IAAoB;AAAA;AAAA,4BAAI6B,OAAJ,CAAY6C,gBAAjF,IAAqG,KAAK1E,WAAL,IAAoB;AAAA;AAAA,4BAAI6B,OAAJ,CAAYS,YAAzI,EAAuJ;AACnJ,mBAAK+B,mBAAL,CAAyBF,MAAzB,CAAgCA,MAAhC,CAAuCC,MAAvC,GAAgD,IAAhD;;AACA,kBAAI,KAAKpE,WAAL,IAAoB;AAAA;AAAA,8BAAI6B,OAAJ,CAAYQ,aAAhC,IAAiD,KAAKrC,WAAL,IAAoB;AAAA;AAAA,8BAAI6B,OAAJ,CAAYS,YAArF,EAAmG;AAC/FmC,gBAAAA,IAAI,GAAG;AAAA;AAAA,gDAAY3D,GAAZ,CAAgB6D,eAAhB,CAAgC7B,IAAI,CAACc,GAAD,CAApC,EAA2C,KAAKS,mBAAhD,CAAP;AACH,eAFD,MAEO;AACHI,gBAAAA,IAAI,GAAG;AAAA;AAAA,gDAAY3D,GAAZ,CAAgB8D,UAAhB,CAA2B9B,IAAI,CAACc,GAAD,CAA/B,EAAsC,KAAKS,mBAA3C,CAAP;AACH;AACJ,aAPD,MAOO;AACH,mBAAKH,iBAAL,CAAuBC,MAAvB,CAA8BA,MAA9B,CAAqCC,MAArC,GAA8C,IAA9C;AACAK,cAAAA,IAAI,GAAG;AAAA;AAAA,8CAAY3D,GAAZ,CAAgB8D,UAAhB,CAA2B9B,IAAI,CAACc,GAAD,CAA/B,EAAsC,KAAKM,iBAA3C,CAAP;AACA,oBAAMW,OAAO,GAAGJ,IAAI,CAACK,cAAL,CAAoB,QAApB,CAAhB;;AACA,kBAAGhC,IAAI,CAACc,GAAD,CAAJ,CAAUhC,SAAV,CAAoBmD,IAApB,KAA2B;AAAA;AAAA,8BAAIC,QAAJ,CAAaC,YAA3C,EAAwD;AACpD,oBAAGJ,OAAH,EAAW;AACPA,kBAAAA,OAAO,CAACT,MAAR,GAAiB;AAAA;AAAA,wCAAOtD,GAAP,CAAWoE,KAAX,CAAiB;AAAA;AAAA,gDAAWC,UAA5B,EAAuCC,MAAM,CAACtC,IAAI,CAACc,GAAD,CAAJ,CAAUR,MAAX,CAA7C,CAAjB;AACH;AACJ,eAJD,MAIK;AACD,oBAAGyB,OAAH,EAAW;AACPA,kBAAAA,OAAO,CAACT,MAAR,GAAiB,KAAjB;AACH;AACJ;AACJ;;AACD,iBAAKnE,YAAL,CAAkBoD,IAAlB,CAAuBoB,IAAvB;AACH;;AAED,eAAKY,UAAL,CAAgBZ,IAAhB,CAAqBL,MAArB,GAA8B,KAAKpE,WAAL,IAAoB;AAAA;AAAA,0BAAI6B,OAAJ,CAAY6C,gBAA9D;AACA,eAAKY,YAAL,CAAkBb,IAAlB,CAAuBL,MAAvB,GAAgC,KAAKpE,WAAL,IAAoB;AAAA;AAAA,0BAAI6B,OAAJ,CAAYQ,aAAhE,CAnCU,CAoCV;;AACA,cAAI,KAAKrC,WAAL,IAAoB;AAAA;AAAA,0BAAI6B,OAAJ,CAAYQ,aAApC,EAAmD;AAC/C,iBAAKkD,YAAL,CAAkBnB,MAAlB,GAA2B,IAA3B;AACA,iBAAKoB,cAAL;AACH,WAHD,MAGO;AACH,iBAAKD,YAAL,CAAkBnB,MAAlB,GAA2B,KAA3B;AACH;AAEJ;;AAEDoB,QAAAA,cAAc,GAAG;AACb,cAAI1C,IAAI,GAAG,KAAK/C,UAAL,CAAgBgD,GAAhB,CAAoB,KAAK/C,WAAzB,CAAX;AACA,eAAKyF,WAAL,CAAiBC,MAAjB,GAA0B5C,IAAI,GAAGA,IAAI,CAAC0B,MAAL,GAAc,EAAjB,GAAsB,GAApD;AACA,eAAKmB,cAAL,CAAoBD,MAApB,GAA6B;AAAA;AAAA,0BAAIE,OAAJ,GAAcC,uBAAd,GAAwCC,WAAxC,GAAsD,EAAnF;AACH;;AAGDC,QAAAA,aAAa,CAACC,KAAD,EAAQ9E,IAAR,EAAc;AACvB+E,UAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBhF,IAAtB;AACA,eAAKlB,WAAL,GAAmB+B,MAAM,CAACb,IAAD,CAAzB;AACA,eAAKI,WAAL;AAEH;AACD;AACJ;AACA;;;AACI6E,QAAAA,gBAAgB,GAAG,CAElB;AACD;AACJ;AACA;;;AACIC,QAAAA,cAAc,GAAG;AACb;AACA,cAAItD,IAAI,GAAG,KAAK/C,UAAL,CAAgBgD,GAAhB,CAAoB;AAAA;AAAA,0BAAIlB,OAAJ,CAAY6C,gBAAhC,CAAX;AACA,cAAI2B,YAAY,GAAG,CAAnB;;AACA,cAAI,CAACvD,IAAL,EAAW;AACP;AACH;;AACD,eAAK,IAAIwD,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGxD,IAAI,CAAC0B,MAAzB,EAAiC8B,CAAC,EAAlC,EAAsC;AAClC,kBAAMpF,IAAI,GAAG4B,IAAI,CAACwD,CAAD,CAAjB;AACA,kBAAMC,OAAO,GAAG;AAAA;AAAA,sCAASzF,GAAT,CAAa0F,WAAb,CAAyBtF,IAAI,CAACkC,MAA9B,CAAhB;AACA,gBAAIqD,SAAS,GAAG,CAAhB;;AACA,gBAAIF,OAAO,CAAC3E,SAAR,CAAkB8E,OAAlB,KAA8B;AAAA;AAAA,4BAAIC,WAAJ,CAAgBC,kBAAlD,EAAsE;AAClEH,cAAAA,SAAS,GAAG,EAAZ;AACH,aAFD,MAEO,IAAIF,OAAO,CAAC3E,SAAR,CAAkB8E,OAAlB,GAA4B;AAAA;AAAA,4BAAIC,WAAJ,CAAgBC,kBAAhD,EAAoE;AACvEH,cAAAA,SAAS,GAAG,EAAZ;AACH;;AACD,kBAAMI,KAAK,GAAG9E,MAAM,CAACb,IAAI,CAACc,GAAN,CAApB;;AACA,gBAAI6E,KAAK,IAAIJ,SAAb,EAAwB;AACpBJ,cAAAA,YAAY,IAAIS,IAAI,CAACC,KAAL,CAAWF,KAAK,GAAGJ,SAAnB,CAAhB;AACH;AACJ;;AACD,cAAIJ,YAAY,GAAG,CAAnB,EAAsB;AAClB,gBAAI;AAAA;AAAA,oDAAgBvF,GAAhB,CAAoBkG,cAApB,CAAmCX,YAAnC,CAAJ,EAAsD;AAClD;AAAA;AAAA,wCAAS;AAAA;AAAA,sCAAQY,MAAR,CAAe,gBAAf,CAAT;AACA;AACH;;AACD,gBAAIxG,GAAG,GAAG,IAAI;AAAA;AAAA,gCAAMyG,2BAAV,EAAV;AACA;AAAA;AAAA,4BAAIC,IAAJ,CAAS;AAAA;AAAA,gCAAM/G,GAAN,CAAUgH,uBAAnB,EAA4C3G,GAA5C;AACH,WAPD,MAOO;AACH;AAAA;AAAA,sCAAS;AAAA;AAAA,oCAAQwG,MAAR,CAAe,mBAAf,CAAT;AACH;AACJ;;AACDI,QAAAA,kBAAkB,GAAG;AACjB;AAAA;AAAA,0BAAIF,IAAJ,CAAS;AAAA;AAAA,8BAAM/G,GAAN,CAAUkH,cAAnB;AACH;;AACDhH,QAAAA,yBAAyB,CAACG,GAAD,EAAgC;AACrD,cAAI8G,SAAS,GAAG,KAAhB;AACA,cAAIC,QAAQ,GAAG,EAAf;;AACA,eAAK,IAAI9F,KAAT,IAAkBjB,GAAG,CAACgH,YAAtB,EAAoC;AAChC,gBAAIlB,OAAO,GAAG;AAAA;AAAA,4BAAIX,OAAJ,GAAc8B,aAAd,CAA4BC,QAA5B,CAAqCjG,KAAK,CAAC0B,MAA3C,CAAd;;AACA,gBAAImD,OAAO,CAACxB,IAAR,IAAgB;AAAA;AAAA,4BAAIC,QAAJ,CAAa4C,aAAjC,EAAgD;AAE5C,kBAAIrB,OAAO,CAACxB,IAAR,IAAgB;AAAA;AAAA,8BAAIC,QAAJ,CAAa6C,cAAjC,EAAiD,CAC7C;AACH,eAFD,MAEO;AACH,oBAAIC,QAAQ,GAAG;AAAA;AAAA,0CAAShH,GAAT,CAAa0F,WAAb,CAAyB9E,KAAK,CAAC0B,MAA/B,CAAf;AACA,oBAAI2E,MAAM,GAAG,KAAK9F,eAAL,CAAqBsE,OAAO,CAAC1E,OAA7B,EAAsCiG,QAAtC,EAAgD,IAAhD,CAAb;;AACA,oBAAIC,MAAJ,EAAY;AACR,sBAAIP,QAAQ,CAACQ,OAAT,CAAiBzB,OAAO,CAAC1E,OAAzB,IAAoC,CAAxC,EAA2C;AACvC2F,oBAAAA,QAAQ,CAACnE,IAAT,CAAckD,OAAO,CAAC1E,OAAtB;AACH;AACJ;AAEJ;;AACD,kBAAI0E,OAAO,CAAC1E,OAAR,IAAmB,KAAK7B,WAA5B,EAAyC;AACrCuH,gBAAAA,SAAS,GAAG,IAAZ;AACH;AACJ;AACJ;;AACD,eAAK,IAAI7F,KAAT,IAAkBjB,GAAG,CAACwH,YAAtB,EAAoC;AAChC,gBAAI1B,OAAO,GAAG;AAAA;AAAA,4BAAIX,OAAJ,GAAc8B,aAAd,CAA4BC,QAA5B,CAAqCjG,KAAK,CAAC0B,MAA3C,CAAd;;AACA,gBAAImD,OAAO,CAACxB,IAAR,IAAgB;AAAA;AAAA,4BAAIC,QAAJ,CAAa4C,aAAjC,EAAgD;AAC5C,kBAAIrB,OAAO,GAAG;AAAA;AAAA,8BAAIX,OAAJ,GAAc8B,aAAd,CAA4BC,QAA5B,CAAqCjG,KAAK,CAAC0B,MAA3C,CAAd;;AACA,kBAAImD,OAAO,CAACxB,IAAR,IAAgB;AAAA;AAAA,8BAAIC,QAAJ,CAAa6C,cAAjC,EAAiD;AAC7C;AACA,qBAAKpE,kBAAL,CAAwB1B,MAAM,CAACL,KAAK,CAACgC,EAAP,CAA9B;AACH,eAHD,MAGO;AACH,qBAAKJ,eAAL,CAAqBiD,OAAO,CAAC1E,OAA7B,EAAsCH,KAAK,CAAC0B,MAA5C;AACH;;AACD,kBAAImD,OAAO,CAAC1E,OAAR,IAAmB,KAAK7B,WAA5B,EAAyC;AACrCuH,gBAAAA,SAAS,GAAG,IAAZ;AACH;AACJ;AACJ;;AACD,eAAK,IAAI7F,KAAT,IAAkBjB,GAAG,CAACgH,YAAtB,EAAoC;AAChC,gBAAIlB,OAAO,GAAG;AAAA;AAAA,4BAAIX,OAAJ,GAAc8B,aAAd,CAA4BC,QAA5B,CAAqCjG,KAAK,CAAC0B,MAA3C,CAAd;AACA,kBAAM8E,OAAO,GAAGxG,KAAK,CAACM,GAAtB;;AACA,gBAAIkG,OAAO,KAAK,CAAhB,EAAmB;AACf,mBAAK5E,eAAL,CAAqBiD,OAAO,CAAC1E,OAA7B,EAAsCH,KAAK,CAAC0B,MAA5C;AACH;;AACD,gBAAImD,OAAO,CAAC1E,OAAR,IAAmB,KAAK7B,WAA5B,EAAyC;AACrCuH,cAAAA,SAAS,GAAG,IAAZ;AACH;AACJ,WAhDoD,CAiDrD;;;AACA,eAAK,IAAI7F,KAAT,IAAkBjB,GAAG,CAAC0H,iBAAtB,EAAyC;AACrC,gBAAIvF,IAAI,GAAG;AAAA;AAAA,wCAAU9B,GAAV,CAAcsH,gBAAd,CAA+B1G,KAAK,CAACgC,EAArC,CAAX;;AACA,gBAAI,CAACd,IAAI,CAACR,MAAV,EAAkB;AACd,mBAAKH,eAAL,CAAqB;AAAA;AAAA,8BAAIJ,OAAJ,CAAYQ,aAAjC,EAAgDO,IAAhD;AACH;;AACD,gBAAI,KAAK5C,WAAL,IAAoB;AAAA;AAAA,4BAAI6B,OAAJ,CAAYQ,aAApC,EAAmD;AAC/CkF,cAAAA,SAAS,GAAG,IAAZ;AACH;;AACD,gBAAIC,QAAQ,CAACQ,OAAT,CAAiB;AAAA;AAAA,4BAAInG,OAAJ,CAAYQ,aAA7B,IAA8C,CAAlD,EAAqD;AACjDmF,cAAAA,QAAQ,CAACnE,IAAT,CAAc;AAAA;AAAA,8BAAIxB,OAAJ,CAAYQ,aAA1B;AACH;AACJ;;AACD,cAAImF,QAAQ,CAAChD,MAAT,GAAkB,CAAtB,EAAyB;AACrB,iBAAKjC,WAAL,CAAiBiF,QAAjB;AACH;;AACD,cAAID,SAAJ,EAAe;AACX,iBAAKjG,WAAL;AACH,WAnEoD,CAoErD;;AAEH;;AACS+G,QAAAA,SAAS,GAAS;AACxB;AAAA;AAAA,oCAASC,QAAT,CAAkB,IAAlB;AACH;;AACOrE,QAAAA,aAAa,GAAG;AACpB,eAAK,IAAIL,GAAT,IAAgB,KAAK3D,YAArB,EAAmC;AAC/B,gBAAI,KAAKA,YAAL,CAAkB2D,GAAlB,EAAuB2E,IAAvB,IAA+B,eAAnC,EAAoD;AAChD;AAAA;AAAA,8CAAYzH,GAAZ,CAAgB0H,YAAhB,CAA6B,KAAKvI,YAAL,CAAkB2D,GAAlB,CAA7B;AACH,aAFD,MAEO;AACH;AAAA;AAAA,8CAAY9C,GAAZ,CAAgB2H,aAAhB,CAA8B,KAAKxI,YAAL,CAAkB2D,GAAlB,CAA9B;AACH;AAEJ;;AACD,eAAK3D,YAAL,GAAoB,EAApB;AACH;;AA1T+B,O;;;;;iBAET,I;;;;;;;iBAEF,I;;;;;;;iBAED,I;;;;;;;iBAEC,I;;;;;;;iBAEO,I;;;;;;;iBAEF,I;;;;;;;iBAEL,I;;;;;;;iBAEH,I;;;;;;;iBAEG,I;;;;;;;iBAEG,I","sourcesContent":["import { _decorator, Button, Component, Label, log, Node } from 'cc';\r\nimport { ViewPop } from '../../../framework/base/ViewPop';\r\nimport { proto } from 'client_protocol';\r\nimport { ItemData } from '../item/ItemData';\r\nimport { ItemInfo } from '../item/ItemInfo';\r\nimport { ItemPoolMgr } from '../item/ItemPoolMgr';\r\nimport { CommonItem } from '../item/CommonItem';\r\nimport { tab } from '../../../Table/table_gen';\r\nimport { EventMgr } from '../../mgr/EventMgr';\r\nimport { Net } from '../../net/Net';\r\nimport { EquipData } from '../equip/EquipData';\r\nimport { EquipInfo } from '../equip/EquipInfo';\r\nimport { EquipmentItem } from '../item/EquipmentItem';\r\nimport { ShowTips, UIMgr } from '../../mgr/UIMgr';\r\nimport { LangMgr } from '../../mgr/LangMgr';\r\nimport { ViewName } from '../../define/ViewDefine';\r\nimport { HeroDataControl } from '../hero/herobag/HeroDataControl';\r\nimport { RedMgr } from '../../mgr/RedMgr';\r\nimport { RedDotType } from '../../red/RedDotType';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('BagPop')\r\nexport class BagPop extends ViewPop {\r\n    @property(Button)\r\n    decomposeBtn: Button = null;\r\n    @property(Button)\r\n    composeBtn: Button = null;\r\n    @property(Label)\r\n    currNumLab: Label = null;\r\n    @property(Label)\r\n    totalNumLab: Label = null;\r\n    @property(Node)\r\n    havebtn_contentNode: Node = null;\r\n    @property(Node)\r\n    nobtn_contentNode: Node = null;\r\n    @property(Node)\r\n    capacityNode: Node = null;\r\n    @property(Node)\r\n    EmptyNode: Node = null;\r\n    @property(Label)\r\n    equipNumLab: Label = null;\r\n    @property(Label)\r\n    equipMaxNumLab: Label = null;\r\n\r\n    private bagDataMap: Map<number, Array<ItemInfo | EquipInfo>>;\r\n    private currBagType: number = 1;\r\n    private bagItemNodes: Array<Node>;\r\n    //private equipItemNodes: Array<EquipmentItem>;\r\n    register(): void {\r\n        EventMgr.onMsg(proto.Ptl.ItemChangePush, this.on_s2c_Msg_ItemChangePush, this)\r\n        EventMgr.onMsg(proto.Ptl.UseHeroPieceOneClickRsp, this.on_s2c_UseHeroPieceOneClickRsp, this)\r\n    }\r\n    on_s2c_UseHeroPieceOneClickRsp(msg: proto.Msg_UseHeroPieceOneClickRsp) {\r\n        if (msg.error && msg.error.code != proto.CommonErrorCode.Succeed) return;\r\n        UIMgr.ins.show({ viewName: ViewName.CongratulationPop, data: msg.rewards })\r\n    }\r\n    // onLoad(): void {\r\n    //     // super.onLoad();\r\n\r\n    // }\r\n\r\n    start() {\r\n        this.initBagData();\r\n        this.bagItemNodes = [];\r\n        // this.equipItemNodes=[];\r\n        this.initBagView();\r\n\r\n    }\r\n    initBagData() {\r\n        this.bagDataMap = new Map();\r\n        let itemList = ItemData.ins.getItems();\r\n        for (let value of itemList) {\r\n            let bagType = value.itemTable.BagType;\r\n            if (bagType > tab.BagType.BagType_None && Number(value.num) > 0) {\r\n                this.addByBagDataMap(bagType, value);\r\n            }\r\n        }\r\n        let equips = EquipData.ins.getEquips();\r\n        for (let value of equips) {\r\n            if (!value.isWear) {\r\n                if (value.itemTable.BagType == tab.BagType.BagType_Equip) {\r\n                    this.addByBagDataMap(tab.BagType.BagType_Equip, value);\r\n                } else if (value.itemTable.BagType == tab.BagType.BagType_Jade) {\r\n                    this.addByBagDataMap(tab.BagType.BagType_Jade, value);\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n        this.sortBagData(Array.from(this.bagDataMap.keys()));\r\n    }\r\n    private addByBagDataMap(type: number, info: ItemInfo | EquipInfo, isFind = false) {\r\n        let list = this.bagDataMap.get(type);\r\n        let isAdd = false;\r\n        if (!list) {\r\n            list = [];\r\n            this.bagDataMap.set(type, list);\r\n        }\r\n        if (isFind) {\r\n            let value = list.find((value, index) => {\r\n                if (value.itemId == info.itemId)\r\n                    return value;\r\n            });\r\n            if (value) {\r\n                value = info;\r\n            } else {\r\n                list.push(info);\r\n                isAdd = true;\r\n            }\r\n\r\n        } else {\r\n            list.push(info);\r\n            isAdd = true;\r\n        }\r\n        return isAdd;\r\n\r\n    }\r\n    private removeByBagData(bagType: number, itemId: number) {\r\n        let list = this.bagDataMap.get(bagType);\r\n        if (list) {\r\n            let index = -1;\r\n            index = list.findIndex((value) => value.itemId == itemId)\r\n            if (index >= 0) {\r\n                list.splice(index, 1);\r\n            }\r\n        }\r\n    }\r\n    private removeBagEquipData(id: number) {\r\n        let list = this.bagDataMap.get(tab.BagType.BagType_Equip);\r\n        if (list) {\r\n            let index = -1;\r\n            index = list.findIndex((value) => Number(value.id) == id)\r\n            if (index >= 0) {\r\n                list.splice(index, 1);\r\n            }\r\n        }\r\n    }\r\n\r\n    private sortBagData(bagTypes: Array<number>) {\r\n        for (let key in bagTypes) {\r\n            let list = this.bagDataMap.get(bagTypes[key]);\r\n            if (list) {\r\n                list.sort((a, b) => {\r\n                    return a.itemTable.Sort - b.itemTable.Sort;\r\n                })\r\n            }\r\n        }\r\n\r\n    }\r\n    initBagView() {\r\n        this.removeComItem();\r\n        this.nobtn_contentNode.parent.parent.active = false;\r\n        this.havebtn_contentNode.parent.parent.active = false;\r\n        this.nobtn_contentNode.destroyAllChildren();\r\n        this.havebtn_contentNode.destroyAllChildren();\r\n        let list = this.bagDataMap.get(this.currBagType);\r\n        this.EmptyNode.active = list ? list.length === 0 : true;\r\n        for (let key in list) {\r\n            let node:Node = null;\r\n            if (this.currBagType == tab.BagType.BagType_Equip || this.currBagType == tab.BagType.BagType_Fragment || this.currBagType == tab.BagType.BagType_Jade) {\r\n                this.havebtn_contentNode.parent.parent.active = true;\r\n                if (this.currBagType == tab.BagType.BagType_Equip || this.currBagType == tab.BagType.BagType_Jade) {\r\n                    node = ItemPoolMgr.ins.createEquipItem(list[key], this.havebtn_contentNode);\r\n                } else {\r\n                    node = ItemPoolMgr.ins.createItem(list[key], this.havebtn_contentNode);\r\n                }\r\n            } else {\r\n                this.nobtn_contentNode.parent.parent.active = true;\r\n                node = ItemPoolMgr.ins.createItem(list[key], this.nobtn_contentNode);\r\n                const redNode = node.getChildByName(\"redDot\");\r\n                if(list[key].itemTable.Type===tab.ItemType.ItemType_Box){\r\n                    if(redNode){\r\n                        redNode.active = RedMgr.ins.isRed(RedDotType.HeroBagRed,String(list[key].itemId));\r\n                    }\r\n                }else{\r\n                    if(redNode){\r\n                        redNode.active = false;\r\n                    }\r\n                }\r\n            }\r\n            this.bagItemNodes.push(node);\r\n        }\r\n\r\n        this.composeBtn.node.active = this.currBagType == tab.BagType.BagType_Fragment;\r\n        this.decomposeBtn.node.active = this.currBagType == tab.BagType.BagType_Equip;\r\n        // || this.currBagType == tab.BagType.BagType_Jade;\r\n        if (this.currBagType == tab.BagType.BagType_Equip) {\r\n            this.capacityNode.active = true;\r\n            this.updateEquipNum();\r\n        } else {\r\n            this.capacityNode.active = false;\r\n        }\r\n\r\n    }\r\n\r\n    updateEquipNum() {\r\n        let list = this.bagDataMap.get(this.currBagType);\r\n        this.equipNumLab.string = list ? list.length + \"\" : \"0\";\r\n        this.equipMaxNumLab.string = tab.getData().GetKeyValue_ConfigTable().EquipMaxNum + \"\";\r\n    }\r\n\r\n\r\n    onClickToggle(event, data) {\r\n        console.log(\"data==\", data)\r\n        this.currBagType = Number(data);\r\n        this.initBagView();\r\n\r\n    }\r\n    /**\r\n     * 点击分解\r\n     */\r\n    onClickDecompose() {\r\n\r\n    }\r\n    /**\r\n     * 点击一键合成\r\n     */\r\n    onClickCompose() {\r\n        // 先判断当前是否有可以合成的碎片\r\n        let list = this.bagDataMap.get(tab.BagType.BagType_Fragment);\r\n        let composeCount = 0;\r\n        if (!list) {\r\n            return;\r\n        }\r\n        for (let i = 0; i < list.length; i++) {\r\n            const data = list[i] as ItemInfo;\r\n            const itemTab = ItemData.ins.getByItemId(data.itemId);\r\n            let needCount = 0\r\n            if (itemTab.itemTable.Quality === tab.ItemQuality.ItemQuality_Purple) {\r\n                needCount = 30;\r\n            } else if (itemTab.itemTable.Quality > tab.ItemQuality.ItemQuality_Purple) {\r\n                needCount = 50;\r\n            }\r\n            const count = Number(data.num);\r\n            if (count >= needCount) {\r\n                composeCount += Math.floor(count / needCount);\r\n            }\r\n        }\r\n        if (composeCount > 0) {\r\n            if (HeroDataControl.ins.getHeroBagFull(composeCount)) {\r\n                ShowTips(LangMgr.getLab(\"Tips_herobag_1\"))\r\n                return\r\n            }\r\n            let msg = new proto.Msg_UseHeroPieceOneClickReq();\r\n            Net.Send(proto.Ptl.UseHeroPieceOneClickReq, msg)\r\n        } else {\r\n            ShowTips(LangMgr.getLab(\"CommonErrorCode_6\"))\r\n        }\r\n    }\r\n    onClickAddTestData() {\r\n        Net.Send(proto.Ptl.FinishStageReq);\r\n    }\r\n    on_s2c_Msg_ItemChangePush(msg: proto.Msg_ItemChangePush) {\r\n        let isRefresh = false;\r\n        let sortTyps = [];\r\n        for (let value of msg.updatedItems) {\r\n            let itemTab = tab.getData().ItemTableById.getValue(value.itemId);\r\n            if (itemTab.Type != tab.ItemType.ItemType_Hero) {\r\n\r\n                if (itemTab.Type == tab.ItemType.ItemType_Equip) {\r\n                    //根据装备唯一di 获取装备item\r\n                } else {\r\n                    let itemInfo = ItemData.ins.getByItemId(value.itemId)\r\n                    let isSort = this.addByBagDataMap(itemTab.BagType, itemInfo, true);\r\n                    if (isSort) {\r\n                        if (sortTyps.indexOf(itemTab.BagType) < 0) {\r\n                            sortTyps.push(itemTab.BagType);\r\n                        }\r\n                    }\r\n\r\n                }\r\n                if (itemTab.BagType == this.currBagType) {\r\n                    isRefresh = true;\r\n                }\r\n            }\r\n        }\r\n        for (let value of msg.removedItems) {\r\n            let itemTab = tab.getData().ItemTableById.getValue(value.itemId);\r\n            if (itemTab.Type != tab.ItemType.ItemType_Hero) {\r\n                let itemTab = tab.getData().ItemTableById.getValue(value.itemId);\r\n                if (itemTab.Type == tab.ItemType.ItemType_Equip) {\r\n                    //根据装备唯一di 获取装备item\r\n                    this.removeBagEquipData(Number(value.id))\r\n                } else {\r\n                    this.removeByBagData(itemTab.BagType, value.itemId)\r\n                }\r\n                if (itemTab.BagType == this.currBagType) {\r\n                    isRefresh = true;\r\n                }\r\n            }\r\n        }\r\n        for (let value of msg.updatedItems) {\r\n            let itemTab = tab.getData().ItemTableById.getValue(value.itemId);\r\n            const itemNum = value.num;\r\n            if (itemNum === 0) {\r\n                this.removeByBagData(itemTab.BagType, value.itemId)\r\n            }\r\n            if (itemTab.BagType == this.currBagType) {\r\n                isRefresh = true;\r\n            }\r\n        }\r\n        //刷新装备数据\r\n        for (let value of msg.updatedEquipments) {\r\n            let info = EquipData.ins.getEquipInfoById(value.id);\r\n            if (!info.isWear) {\r\n                this.addByBagDataMap(tab.BagType.BagType_Equip, info);\r\n            }\r\n            if (this.currBagType == tab.BagType.BagType_Equip) {\r\n                isRefresh = true;\r\n            }\r\n            if (sortTyps.indexOf(tab.BagType.BagType_Equip) < 0) {\r\n                sortTyps.push(tab.BagType.BagType_Equip);\r\n            }\r\n        }\r\n        if (sortTyps.length > 0) {\r\n            this.sortBagData(sortTyps);\r\n        }\r\n        if (isRefresh) {\r\n            this.initBagView();\r\n        }\r\n        // this.initBagView();\r\n\r\n    }\r\n    protected onDestroy(): void {\r\n        EventMgr.unTarget(this);\r\n    }\r\n    private removeComItem() {\r\n        for (let key in this.bagItemNodes) {\r\n            if (this.bagItemNodes[key].name == \"EquipmentItem\") {\r\n                ItemPoolMgr.ins.putEquipItem(this.bagItemNodes[key])\r\n            } else {\r\n                ItemPoolMgr.ins.putCommonItem(this.bagItemNodes[key])\r\n            }\r\n\r\n        }\r\n        this.bagItemNodes = [];\r\n    }\r\n\r\n}\r\n\r\n\r\n"]}