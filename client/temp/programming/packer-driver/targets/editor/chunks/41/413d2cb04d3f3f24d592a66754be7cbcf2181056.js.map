{"version":3,"sources":["file:///C:/chickenStarClient/client/assets/scripts/logic/fight/view/damage/FightDamageRankItem.ts"],"names":["_decorator","js","Label","ProgressBar","Sprite","ComponentBase","tab","LangMgr","FightRootControl","HeroDataControl","ccclass","property","FightDamageRankItem","info","register","setData","itemTab","getData","ItemTableById","getValue","itemId","iconImg","setTexture","Icon","itemQualityTab","ins","getItemQualityTableByStar","star","qualityImg","QualityFrame","nameLab","string","getLab","Name","setDamage","damage","total","secDamage","pro","Math","floor","bar","progress","barLab","formatStr","toString","damageToggle","testLab"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAuBC,MAAAA,E,OAAAA,E;AAAIC,MAAAA,K,OAAAA,K;AAAqBC,MAAAA,W,OAAAA,W;AAAaC,MAAAA,M,OAAAA,M;;AAE7DC,MAAAA,a,iBAAAA,a;;AACAC,MAAAA,G,iBAAAA,G;;AAEAC,MAAAA,O,iBAAAA,O;;AACAC,MAAAA,gB,iBAAAA,gB;;AACAC,MAAAA,e,iBAAAA,e;;;;;;;;;OAEH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBX,U;;qCAGjBY,mB,WADZF,OAAO,CAAC,qBAAD,C,UAEHC,QAAQ,CAACP,MAAD,C,UAERO,QAAQ,CAACP,MAAD,C,UAGRO,QAAQ,CAACT,KAAD,C,UAGRS,QAAQ,CAACR,WAAD,C,UAGRQ,QAAQ,CAACT,KAAD,C,UAGRS,QAAQ,CAACT,KAAD,C,2BAhBb,MACaU,mBADb;AAAA;AAAA,0CACuD;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA,eAkBnDC,IAlBmD,GAkB7B,IAlB6B;AAAA;;AAmBnDC,QAAAA,QAAQ,GAAS,CAEhB;;AACDC,QAAAA,OAAO,CAACF,IAAD,EAAsB;AACzB,eAAKA,IAAL,GAAYA,IAAZ;AAEA,cAAIG,OAAO,GAAG;AAAA;AAAA,0BAAIC,OAAJ,GAAcC,aAAd,CAA4BC,QAA5B,CAAqCN,IAAI,CAACO,MAA1C,CAAd;AAEA,eAAKC,OAAL,CAAaC,UAAb,CAAwBN,OAAO,CAACO,IAAhC;AAEA,cAAIC,cAAc,GAAG;AAAA;AAAA,kDAAgBC,GAAhB,CAAoBC,yBAApB,CAA8Cb,IAAI,CAACc,IAAnD,CAArB;AACA,eAAKC,UAAL,CAAgBN,UAAhB,CAA2BE,cAAc,CAACK,YAA1C;AAEA,eAAKC,OAAL,CAAaC,MAAb,GAAsB;AAAA;AAAA,kCAAQC,MAAR,CAAehB,OAAO,CAACiB,IAAvB,CAAtB;AAEH;;AAEDC,QAAAA,SAAS,CAACC,MAAD,EAAiBC,KAAjB,EAA+BC,SAA/B,EAAiD;AACtD,cAAIC,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAWL,MAAM,GAAG,GAAT,GAAeC,KAA1B,CAAV;AACA,eAAKK,GAAL,CAASC,QAAT,GAAoBH,IAAI,CAACC,KAAL,CAAWL,MAAM,GAAG,GAAT,GAAeC,KAA1B,IAAmC,GAAvD;AACA,eAAKO,MAAL,CAAYZ,MAAZ,GAAqB9B,EAAE,CAAC2C,SAAH,CAAa,KAAb,EAAoBN,GAAG,CAACO,QAAJ,EAApB,CAArB;;AAGA,cAAI;AAAA;AAAA,oDAAiBpB,GAAjB,CAAqBqB,YAAzB,EAAsC;AAClC,iBAAKC,OAAL,CAAahB,MAAb,GAAsB9B,EAAE,CAAC2C,SAAH,CAAa,iBAAb,EAA+BT,MAA/B,EAAsCE,SAAtC,CAAtB;AACH;AACJ;;AA7CkD,O;;;;;iBAE9B,I;;;;;;;iBAEH,I;;;;;;;iBAGD,I;;;;;;;iBAGE,I;;;;;;;iBAGH,I;;;;;;;iBAGC,I","sourcesContent":["import { _decorator, Component, js, Label, Node, Prefab, ProgressBar, Sprite } from \"cc\";\nimport { PlayerControl } from \"../../base/obj/role/role/PlayerControl\";\nimport { ComponentBase } from \"../../../../framework/base/ComponentBase\";\nimport { tab } from \"../../../../Table/table_gen\";\nimport { HeroFightInfo } from \"../../data/HeroFightInfo\";\nimport { LangMgr } from \"../../../mgr/LangMgr\";\nimport { FightRootControl } from \"../../FightRootControl\";\nimport { HeroDataControl } from \"../../../model/hero/herobag/HeroDataControl\";\n\nconst { ccclass, property } = _decorator;\n\n@ccclass('FightDamageRankItem')\nexport class FightDamageRankItem extends ComponentBase {\n    @property(Sprite)\n    qualityImg: Sprite = null;\n    @property(Sprite)\n    iconImg: Sprite = null;\n\n    @property(Label)\n    nameLab: Label = null\n\n    @property(ProgressBar)\n    bar: ProgressBar = null\n\n    @property(Label)\n    barLab: Label = null\n\n    @property(Label)\n    testLab: Label = null\n\n    info: HeroFightInfo = null\n    register(): void {\n\n    }\n    setData(info: HeroFightInfo) {\n        this.info = info\n\n        let itemTab = tab.getData().ItemTableById.getValue(info.itemId)\n\n        this.iconImg.setTexture(itemTab.Icon)\n\n        let itemQualityTab = HeroDataControl.ins.getItemQualityTableByStar(info.star);\n        this.qualityImg.setTexture(itemQualityTab.QualityFrame)\n        \n        this.nameLab.string = LangMgr.getLab(itemTab.Name)\n\n    }\n\n    setDamage(damage: number, total: number,secDamage:number) {\n        let pro = Math.floor(damage * 100 / total)\n        this.bar.progress = Math.floor(damage * 100 / total) / 100\n        this.barLab.string = js.formatStr(\"%s%\", pro.toString())\n\n\n        if (FightRootControl.ins.damageToggle){\n            this.testLab.string = js.formatStr(\"total:%s sec:%s\",damage,secDamage)\n        }\n    }\n}"]}