{"version":3,"sources":["file:///C:/chickenStarClient/client/assets/scripts/logic/fight/base/skill/SkillTriggerMap.ts"],"names":["_decorator","ccclass","property","tmpList","SkillTriggerMap","constructor","triggerMap","Map","clear","getListByType","type","has","get","set","addSkill","skill","isHasTrigger","triggerTabs","forEach","v","list","Triggertype","push","removeSkill","index","findIndex","Id","splice"],"mappings":";;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;;;;;;;;;OAKH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBF,U;AAExBG,MAAAA,O,GAAsB,E;AAE5B;AACA;;iCAEaC,e,WADZH,OAAO,CAAC,iBAAD,C,gBAAR,MACaG,eADb,CAC6B;AAGzBC,QAAAA,WAAW,GAAG;AAAA,eAFdC,UAEc,GAFwB,IAAIC,GAAJ,EAExB;AAEb;;AAEDC,QAAAA,KAAK,GAAG;AACJ,eAAKF,UAAL,CAAgBE,KAAhB;AACH;;AAEDC,QAAAA,aAAa,CAACC,IAAD,EAAwB;AACjC,cAAI,KAAKJ,UAAL,CAAgBK,GAAhB,CAAoBD,IAApB,CAAJ,EAA+B;AAC3B,mBAAO,KAAKJ,UAAL,CAAgBM,GAAhB,CAAoBF,IAApB,CAAP;AACH;;AACD,eAAKJ,UAAL,CAAgBO,GAAhB,CAAoBH,IAApB,EAA0B,EAA1B;AACA,iBAAO,KAAKJ,UAAL,CAAgBM,GAAhB,CAAoBF,IAApB,CAAP;AACH;;AAEDI,QAAAA,QAAQ,CAACC,KAAD,EAAkB;AACtB,cAAIA,KAAK,CAACC,YAAN,EAAJ,EAA0B;AACtBD,YAAAA,KAAK,CAACE,WAAN,CAAkBC,OAAlB,CAA2BC,CAAD,IAAO;AAC7B,kBAAIC,IAAI,GAAG,KAAKX,aAAL,CAAmBU,CAAC,CAACE,WAArB,CAAX;;AACA,kBAAID,IAAJ,EAAU;AACNA,gBAAAA,IAAI,CAACE,IAAL,CAAUP,KAAV;AACH;AACJ,aALD;AAMH;AACJ;;AAEDQ,QAAAA,WAAW,CAACR,KAAD,EAAkB;AACzB,cAAIA,KAAK,CAACC,YAAN,EAAJ,EAA0B;AACtBD,YAAAA,KAAK,CAACE,WAAN,CAAkBC,OAAlB,CAA2BC,CAAD,IAAO;AAC7B,kBAAIC,IAAI,GAAG,KAAKX,aAAL,CAAmBU,CAAC,CAACE,WAArB,CAAX;;AACA,kBAAID,IAAJ,EAAU;AACN,oBAAII,KAAK,GAAGJ,IAAI,CAACK,SAAL,CAAeN,CAAC,IAAIA,CAAC,CAACO,EAAF,IAAQX,KAAK,CAACW,EAAlC,CAAZ;;AACA,oBAAIF,KAAK,IAAI,CAAC,CAAd,EAAiB;AACbJ,kBAAAA,IAAI,CAACO,MAAL,CAAYH,KAAZ,EAAmB,CAAnB;AACH;AACJ;AACJ,aARD;AASH;AACJ;;AA1CwB,O","sourcesContent":["import { _decorator, Component } from \"cc\";\nimport { tab } from \"../../../../Table/table_gen\";\nimport { SkillTab } from \"../../power/powerTab/SkillTab\";\n\n\nconst { ccclass, property } = _decorator;\n\nconst tmpList: SkillTab[] = []\n\n/** 技能触发器 \n*/\n@ccclass('SkillTriggerMap')\nexport class SkillTriggerMap {\n    triggerMap: Map<number, SkillTab[]> = new Map()\n\n    constructor() {\n\n    }\n\n    clear() {\n        this.triggerMap.clear()\n    }\n\n    getListByType(type: tab.Triggertype) {\n        if (this.triggerMap.has(type)) {\n            return this.triggerMap.get(type)\n        }\n        this.triggerMap.set(type, [])\n        return this.triggerMap.get(type)\n    }\n\n    addSkill(skill: SkillTab) {\n        if (skill.isHasTrigger()) {\n            skill.triggerTabs.forEach((v) => {\n                let list = this.getListByType(v.Triggertype)\n                if (list) {\n                    list.push(skill)\n                }\n            })\n        }\n    }\n\n    removeSkill(skill: SkillTab) {\n        if (skill.isHasTrigger()) {\n            skill.triggerTabs.forEach((v) => {\n                let list = this.getListByType(v.Triggertype)\n                if (list) {\n                    let index = list.findIndex(v => v.Id == skill.Id)\n                    if (index != -1) {\n                        list.splice(index, 1)\n                    }\n                }\n            })\n        }\n    }\n}"]}