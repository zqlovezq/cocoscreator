{"version":3,"sources":["file:///C:/chickenStarClient/client/node_modules/long/index.js"],"names":["Long","low","high","unsigned","isLong","obj","ctz32","value","c","Math","clz32","fromInt","cachedObj","cache","UINT_CACHE","fromBits","INT_CACHE","fromNumber","isNaN","UZERO","ZERO","TWO_PWR_64_DBL","MAX_UNSIGNED_VALUE","TWO_PWR_63_DBL","MIN_VALUE","MAX_VALUE","neg","TWO_PWR_32_DBL","lowBits","highBits","fromString","str","radix","length","Error","RangeError","p","indexOf","substring","radixToPower","pow_dbl","result","i","size","min","parseInt","power","mul","add","fromValue","val","wasm","WebAssembly","Instance","Module","Uint8Array","exports","e","prototype","__isLong__","Object","defineProperty","pow","TWO_PWR_16_DBL","TWO_PWR_24_DBL","TWO_PWR_24","ONE","UONE","NEG_ONE","LongPrototype","toInt","toNumber","toString","isZero","isNegative","eq","radixLong","div","rem1","sub","rem","remDiv","intval","digits","getHighBits","getHighBitsUnsigned","getLowBits","getLowBitsUnsigned","getNumBitsAbs","bit","eqz","isPositive","isOdd","isEven","equals","other","notEquals","neq","ne","lessThan","comp","lt","lessThanOrEqual","lte","le","greaterThan","gt","greaterThanOrEqual","gte","ge","compare","thisNeg","otherNeg","negate","not","addend","a48","a32","a16","a00","b48","b32","b16","b00","c48","c32","c16","c00","subtract","subtrahend","multiply","multiplier","divide","divisor","approx","res","halfThis","shr","shl","toUnsigned","shru","max","floor","log2","ceil","log","LN2","delta","approxRes","approxRem","modulo","mod","countLeadingZeros","clz","countTrailingZeros","ctz","and","or","xor","shiftLeft","numBits","shiftRight","shiftRightUnsigned","shr_u","rotateLeft","b","rotl","rotateRight","rotr","toSigned","toBytes","toBytesLE","toBytesBE","hi","lo","fromBytes","bytes","fromBytesLE","fromBytesBE"],"mappings":"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AAI,GAAG,IAAIC,WAAW,CAACC,QAAhB,CAAyB,IAAID,WAAW,CAACE,MAAhB,CAAuB,IAAIC,UAAJ,CAAe,CACpE,CADoE,EACjE,EADiE,EAC7D,GAD6D,EACxD,GADwD,EACnD,CADmD,EAChD,CADgD,EAC7C,CAD6C,EAC1C,CAD0C,EACvC,CADuC,EACpC,EADoC,EAChC,CADgC,EAC7B,EAD6B,EACzB,CADyB,EACtB,CADsB,EACnB,GADmB,EACd,EADc,EACV,CADU,EACP,GADO,EACF,GADE,EACG,GADH,EACQ,GADR,EACa,CADb,EACgB,GADhB,EACqB,CADrB,EACwB,CADxB,EAC2B,CAD3B,EAC8B,CAD9B,EACiC,CADjC,EACoC,CADpC,EACuC,CADvC,EAC0C,CAD1C,EAC6C,CAD7C,EACgD,CADhD,EACmD,CADnD,EACsD,CADtD,EACyD,GADzD,EAC8D,CAD9D,EACiE,EADjE,EACqE,CADrE,EACwE,EADxE,EAC4E,CAD5E,EAC+E,EAD/E,EACmF,CADnF,EACsF,CADtF,EACyF,GADzF,EAC8F,GAD9F,EACmG,GADnG,EACwG,CADxG,EAC2G,CAD3G,EAC8G,CAD9G,EACiH,GADjH,EACsH,GADtH,EAC2H,GAD3H,EACgI,EADhI,EACoI,GADpI,EACyI,CADzI,EAC4I,CAD5I,EAC+I,CAD/I,EACkJ,GADlJ,EACuJ,GADvJ,EAC4J,GAD5J,EACiK,EADjK,EACqK,GADrK,EAC0K,CAD1K,EAC6K,CAD7K,EACgL,CADhL,EACmL,GADnL,EACwL,GADxL,EAC6L,GAD7L,EACkM,EADlM,EACsM,GADtM,EAC2M,CAD3M,EAC8M,CAD9M,EACiN,CADjN,EACoN,GADpN,EACyN,GADzN,EAC8N,GAD9N,EACmO,EADnO,EACuO,GADvO,EAC4O,CAD5O,EAC+O,CAD/O,EACkP,CADlP,EACqP,GADrP,EAC0P,GAD1P,EAC+P,GAD/P,EACoQ,EADpQ,EACwQ,GADxQ,EAC6Q,GAD7Q,EACkR,GADlR,EACuR,GADvR,EAC4R,CAD5R,EAC+R,CAD/R,EACkS,EADlS,EACsS,GADtS,EAC2S,CAD3S,EAC8S,CAD9S,EACiT,CADjT,EACoT,CADpT,EACuT,EADvT,EAC2T,CAD3T,EAC8T,EAD9T,EACkU,EADlU,EACsU,CADtU,EACyU,CADzU,EAC4U,GAD5U,EACiV,EADjV,EACqV,CADrV,EACwV,GADxV,EAC6V,EAD7V,EACiW,CADjW,EACoW,GADpW,EACyW,EADzW,EAC6W,EAD7W,EACiX,GADjX,EACsX,GADtX,EAC2X,EAD3X,EAC+X,CAD/X,EACkY,GADlY,EACuY,EADvY,EAC2Y,CAD3Y,EAC8Y,GAD9Y,EACmZ,EADnZ,EACuZ,EADvZ,EAC2Z,GAD3Z,EACga,GADha,EACqa,GADra,EAC0a,EAD1a,EAC8a,CAD9a,EACib,EADjb,EACqb,EADrb,EACyb,GADzb,EAC8b,GAD9b,EACmc,EADnc,EACuc,CADvc,EAC0c,EAD1c,EAC8c,CAD9c,EACid,GADjd,EACsd,EADtd,EAC0d,EAD1d,EAC8d,CAD9d,EACie,CADje,EACoe,GADpe,EACye,EADze,EAC6e,CAD7e,EACgf,GADhf,EACqf,EADrf,EACyf,CADzf,EAC4f,GAD5f,EACigB,EADjgB,EACqgB,EADrgB,EACygB,GADzgB,EAC8gB,GAD9gB,EACmhB,EADnhB,EACuhB,CADvhB,EAC0hB,GAD1hB,EAC+hB,EAD/hB,EACmiB,CADniB,EACsiB,GADtiB,EAC2iB,EAD3iB,EAC+iB,EAD/iB,EACmjB,GADnjB,EACwjB,GADxjB,EAC6jB,GAD7jB,EACkkB,EADlkB,EACskB,CADtkB,EACykB,EADzkB,EAC6kB,EAD7kB,EACilB,GADjlB,EACslB,GADtlB,EAC2lB,EAD3lB,EAC+lB,CAD/lB,EACkmB,EADlmB,EACsmB,CADtmB,EACymB,GADzmB,EAC8mB,EAD9mB,EACknB,EADlnB,EACsnB,CADtnB,EACynB,CADznB,EAC4nB,GAD5nB,EACioB,EADjoB,EACqoB,CADroB,EACwoB,GADxoB,EAC6oB,EAD7oB,EACipB,CADjpB,EACopB,GADppB,EACypB,EADzpB,EAC6pB,EAD7pB,EACiqB,GADjqB,EACsqB,GADtqB,EAC2qB,EAD3qB,EAC+qB,CAD/qB,EACkrB,GADlrB,EACurB,EADvrB,EAC2rB,CAD3rB,EAC8rB,GAD9rB,EACmsB,EADnsB,EACusB,EADvsB,EAC2sB,GAD3sB,EACgtB,GADhtB,EACqtB,GADrtB,EAC0tB,EAD1tB,EAC8tB,CAD9tB,EACiuB,EADjuB,EACquB,EADruB,EACyuB,GADzuB,EAC8uB,GAD9uB,EACmvB,EADnvB,EACuvB,CADvvB,EAC0vB,EAD1vB,EAC8vB,CAD9vB,EACiwB,GADjwB,EACswB,EADtwB,EAC0wB,EAD1wB,EAC8wB,CAD9wB,EACixB,CADjxB,EACoxB,GADpxB,EACyxB,EADzxB,EAC6xB,CAD7xB,EACgyB,GADhyB,EACqyB,EADryB,EACyyB,CADzyB,EAC4yB,GAD5yB,EACizB,EADjzB,EACqzB,EADrzB,EACyzB,GADzzB,EAC8zB,GAD9zB,EACm0B,EADn0B,EACu0B,CADv0B,EAC00B,GAD10B,EAC+0B,EAD/0B,EACm1B,CADn1B,EACs1B,GADt1B,EAC21B,EAD31B,EAC+1B,EAD/1B,EACm2B,GADn2B,EACw2B,GADx2B,EAC62B,GAD72B,EACk3B,EADl3B,EACs3B,CADt3B,EACy3B,EADz3B,EAC63B,EAD73B,EACi4B,GADj4B,EACs4B,GADt4B,EAC24B,EAD34B,EAC+4B,CAD/4B,EACk5B,EADl5B,EACs5B,CADt5B,EACy5B,GADz5B,EAC85B,EAD95B,EACk6B,EADl6B,EACs6B,CADt6B,EACy6B,CADz6B,EAC46B,GAD56B,EACi7B,EADj7B,EACq7B,CADr7B,EACw7B,GADx7B,EAC67B,EAD77B,EACi8B,CADj8B,EACo8B,GADp8B,EACy8B,EADz8B,EAC68B,EAD78B,EACi9B,GADj9B,EACs9B,GADt9B,EAC29B,EAD39B,EAC+9B,CAD/9B,EACk+B,GADl+B,EACu+B,EADv+B,EAC2+B,CAD3+B,EAC8+B,GAD9+B,EACm/B,EADn/B,EACu/B,EADv/B,EAC2/B,GAD3/B,EACggC,GADhgC,EACqg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","sourcesContent":["/**\n * @license\n * Copyright 2009 The Closure Library Authors\n * Copyright 2020 Daniel Wirtz / The long.js Authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\n// WebAssembly optimizations to do native i64 multiplication and divide\nvar wasm = null;\ntry {\n  wasm = new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([\n    0, 97, 115, 109, 1, 0, 0, 0, 1, 13, 2, 96, 0, 1, 127, 96, 4, 127, 127, 127, 127, 1, 127, 3, 7, 6, 0, 1, 1, 1, 1, 1, 6, 6, 1, 127, 1, 65, 0, 11, 7, 50, 6, 3, 109, 117, 108, 0, 1, 5, 100, 105, 118, 95, 115, 0, 2, 5, 100, 105, 118, 95, 117, 0, 3, 5, 114, 101, 109, 95, 115, 0, 4, 5, 114, 101, 109, 95, 117, 0, 5, 8, 103, 101, 116, 95, 104, 105, 103, 104, 0, 0, 10, 191, 1, 6, 4, 0, 35, 0, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 126, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 127, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 128, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 129, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 130, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11\n  ])), {}).exports;\n} catch (e) {\n  // no wasm support :(\n}\n\n/**\n * Constructs a 64 bit two's-complement integer, given its low and high 32 bit values as *signed* integers.\n *  See the from* functions below for more convenient ways of constructing Longs.\n * @exports Long\n * @class A Long class for representing a 64 bit two's-complement integer value.\n * @param {number} low The low (signed) 32 bits of the long\n * @param {number} high The high (signed) 32 bits of the long\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @constructor\n */\nfunction Long(low, high, unsigned) {\n\n  /**\n   * The low 32 bits as a signed value.\n   * @type {number}\n   */\n  this.low = low | 0;\n\n  /**\n   * The high 32 bits as a signed value.\n   * @type {number}\n   */\n  this.high = high | 0;\n\n  /**\n   * Whether unsigned or not.\n   * @type {boolean}\n   */\n  this.unsigned = !!unsigned;\n}\n\n// The internal representation of a long is the two given signed, 32-bit values.\n// We use 32-bit pieces because these are the size of integers on which\n// Javascript performs bit-operations.  For operations like addition and\n// multiplication, we split each number into 16 bit pieces, which can easily be\n// multiplied within Javascript's floating-point representation without overflow\n// or change in sign.\n//\n// In the algorithms below, we frequently reduce the negative case to the\n// positive case by negating the input(s) and then post-processing the result.\n// Note that we must ALWAYS check specially whether those values are MIN_VALUE\n// (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as\n// a positive number, it overflows back into a negative).  Not handling this\n// case would often result in infinite recursion.\n//\n// Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the from*\n// methods on which they depend.\n\n/**\n * An indicator used to reliably determine if an object is a Long or not.\n * @type {boolean}\n * @const\n * @private\n */\nLong.prototype.__isLong__;\n\nObject.defineProperty(Long.prototype, \"__isLong__\", { value: true });\n\n/**\n * @function\n * @param {*} obj Object\n * @returns {boolean}\n * @inner\n */\nfunction isLong(obj) {\n  return (obj && obj[\"__isLong__\"]) === true;\n}\n\n/**\n * @function\n * @param {*} value number\n * @returns {number}\n * @inner\n */\nfunction ctz32(value) {\n  var c = Math.clz32(value & -value);\n  return value ? 31 - c : c;\n}\n\n/**\n * Tests if the specified object is a Long.\n * @function\n * @param {*} obj Object\n * @returns {boolean}\n */\nLong.isLong = isLong;\n\n/**\n * A cache of the Long representations of small integer values.\n * @type {!Object}\n * @inner\n */\nvar INT_CACHE = {};\n\n/**\n * A cache of the Long representations of small unsigned integer values.\n * @type {!Object}\n * @inner\n */\nvar UINT_CACHE = {};\n\n/**\n * @param {number} value\n * @param {boolean=} unsigned\n * @returns {!Long}\n * @inner\n */\nfunction fromInt(value, unsigned) {\n  var obj, cachedObj, cache;\n  if (unsigned) {\n    value >>>= 0;\n    if (cache = (0 <= value && value < 256)) {\n      cachedObj = UINT_CACHE[value];\n      if (cachedObj)\n        return cachedObj;\n    }\n    obj = fromBits(value, 0, true);\n    if (cache)\n      UINT_CACHE[value] = obj;\n    return obj;\n  } else {\n    value |= 0;\n    if (cache = (-128 <= value && value < 128)) {\n      cachedObj = INT_CACHE[value];\n      if (cachedObj)\n        return cachedObj;\n    }\n    obj = fromBits(value, value < 0 ? -1 : 0, false);\n    if (cache)\n      INT_CACHE[value] = obj;\n    return obj;\n  }\n}\n\n/**\n * Returns a Long representing the given 32 bit integer value.\n * @function\n * @param {number} value The 32 bit integer in question\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {!Long} The corresponding Long value\n */\nLong.fromInt = fromInt;\n\n/**\n * @param {number} value\n * @param {boolean=} unsigned\n * @returns {!Long}\n * @inner\n */\nfunction fromNumber(value, unsigned) {\n  if (isNaN(value))\n    return unsigned ? UZERO : ZERO;\n  if (unsigned) {\n    if (value < 0)\n      return UZERO;\n    if (value >= TWO_PWR_64_DBL)\n      return MAX_UNSIGNED_VALUE;\n  } else {\n    if (value <= -TWO_PWR_63_DBL)\n      return MIN_VALUE;\n    if (value + 1 >= TWO_PWR_63_DBL)\n      return MAX_VALUE;\n  }\n  if (value < 0)\n    return fromNumber(-value, unsigned).neg();\n  return fromBits((value % TWO_PWR_32_DBL) | 0, (value / TWO_PWR_32_DBL) | 0, unsigned);\n}\n\n/**\n * Returns a Long representing the given value, provided that it is a finite number. Otherwise, zero is returned.\n * @function\n * @param {number} value The number in question\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {!Long} The corresponding Long value\n */\nLong.fromNumber = fromNumber;\n\n/**\n * @param {number} lowBits\n * @param {number} highBits\n * @param {boolean=} unsigned\n * @returns {!Long}\n * @inner\n */\nfunction fromBits(lowBits, highBits, unsigned) {\n  return new Long(lowBits, highBits, unsigned);\n}\n\n/**\n * Returns a Long representing the 64 bit integer that comes by concatenating the given low and high bits. Each is\n *  assumed to use 32 bits.\n * @function\n * @param {number} lowBits The low 32 bits\n * @param {number} highBits The high 32 bits\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {!Long} The corresponding Long value\n */\nLong.fromBits = fromBits;\n\n/**\n * @function\n * @param {number} base\n * @param {number} exponent\n * @returns {number}\n * @inner\n */\nvar pow_dbl = Math.pow; // Used 4 times (4*8 to 15+4)\n\n/**\n * @param {string} str\n * @param {(boolean|number)=} unsigned\n * @param {number=} radix\n * @returns {!Long}\n * @inner\n */\nfunction fromString(str, unsigned, radix) {\n  if (str.length === 0)\n    throw Error('empty string');\n  if (typeof unsigned === 'number') {\n    // For goog.math.long compatibility\n    radix = unsigned;\n    unsigned = false;\n  } else {\n    unsigned = !!unsigned;\n  }\n  if (str === \"NaN\" || str === \"Infinity\" || str === \"+Infinity\" || str === \"-Infinity\")\n    return unsigned ? UZERO : ZERO;\n  radix = radix || 10;\n  if (radix < 2 || 36 < radix)\n    throw RangeError('radix');\n\n  var p;\n  if ((p = str.indexOf('-')) > 0)\n    throw Error('interior hyphen');\n  else if (p === 0) {\n    return fromString(str.substring(1), unsigned, radix).neg();\n  }\n\n  // Do several (8) digits each time through the loop, so as to\n  // minimize the calls to the very expensive emulated div.\n  var radixToPower = fromNumber(pow_dbl(radix, 8));\n\n  var result = ZERO;\n  for (var i = 0; i < str.length; i += 8) {\n    var size = Math.min(8, str.length - i),\n      value = parseInt(str.substring(i, i + size), radix);\n    if (size < 8) {\n      var power = fromNumber(pow_dbl(radix, size));\n      result = result.mul(power).add(fromNumber(value));\n    } else {\n      result = result.mul(radixToPower);\n      result = result.add(fromNumber(value));\n    }\n  }\n  result.unsigned = unsigned;\n  return result;\n}\n\n/**\n * Returns a Long representation of the given string, written using the specified radix.\n * @function\n * @param {string} str The textual representation of the Long\n * @param {(boolean|number)=} unsigned Whether unsigned or not, defaults to signed\n * @param {number=} radix The radix in which the text is written (2-36), defaults to 10\n * @returns {!Long} The corresponding Long value\n */\nLong.fromString = fromString;\n\n/**\n * @function\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val\n * @param {boolean=} unsigned\n * @returns {!Long}\n * @inner\n */\nfunction fromValue(val, unsigned) {\n  if (typeof val === 'number')\n    return fromNumber(val, unsigned);\n  if (typeof val === 'string')\n    return fromString(val, unsigned);\n  // Throws for non-objects, converts non-instanceof Long:\n  return fromBits(val.low, val.high, typeof unsigned === 'boolean' ? unsigned : val.unsigned);\n}\n\n/**\n * Converts the specified value to a Long using the appropriate from* function for its type.\n * @function\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val Value\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {!Long}\n */\nLong.fromValue = fromValue;\n\n// NOTE: the compiler should inline these constant values below and then remove these variables, so there should be\n// no runtime penalty for these.\n\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_16_DBL = 1 << 16;\n\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_24_DBL = 1 << 24;\n\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_32_DBL = TWO_PWR_16_DBL * TWO_PWR_16_DBL;\n\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_64_DBL = TWO_PWR_32_DBL * TWO_PWR_32_DBL;\n\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_63_DBL = TWO_PWR_64_DBL / 2;\n\n/**\n * @type {!Long}\n * @const\n * @inner\n */\nvar TWO_PWR_24 = fromInt(TWO_PWR_24_DBL);\n\n/**\n * @type {!Long}\n * @inner\n */\nvar ZERO = fromInt(0);\n\n/**\n * Signed zero.\n * @type {!Long}\n */\nLong.ZERO = ZERO;\n\n/**\n * @type {!Long}\n * @inner\n */\nvar UZERO = fromInt(0, true);\n\n/**\n * Unsigned zero.\n * @type {!Long}\n */\nLong.UZERO = UZERO;\n\n/**\n * @type {!Long}\n * @inner\n */\nvar ONE = fromInt(1);\n\n/**\n * Signed one.\n * @type {!Long}\n */\nLong.ONE = ONE;\n\n/**\n * @type {!Long}\n * @inner\n */\nvar UONE = fromInt(1, true);\n\n/**\n * Unsigned one.\n * @type {!Long}\n */\nLong.UONE = UONE;\n\n/**\n * @type {!Long}\n * @inner\n */\nvar NEG_ONE = fromInt(-1);\n\n/**\n * Signed negative one.\n * @type {!Long}\n */\nLong.NEG_ONE = NEG_ONE;\n\n/**\n * @type {!Long}\n * @inner\n */\nvar MAX_VALUE = fromBits(0xFFFFFFFF | 0, 0x7FFFFFFF | 0, false);\n\n/**\n * Maximum signed value.\n * @type {!Long}\n */\nLong.MAX_VALUE = MAX_VALUE;\n\n/**\n * @type {!Long}\n * @inner\n */\nvar MAX_UNSIGNED_VALUE = fromBits(0xFFFFFFFF | 0, 0xFFFFFFFF | 0, true);\n\n/**\n * Maximum unsigned value.\n * @type {!Long}\n */\nLong.MAX_UNSIGNED_VALUE = MAX_UNSIGNED_VALUE;\n\n/**\n * @type {!Long}\n * @inner\n */\nvar MIN_VALUE = fromBits(0, 0x80000000 | 0, false);\n\n/**\n * Minimum signed value.\n * @type {!Long}\n */\nLong.MIN_VALUE = MIN_VALUE;\n\n/**\n * @alias Long.prototype\n * @inner\n */\nvar LongPrototype = Long.prototype;\n\n/**\n * Converts the Long to a 32 bit integer, assuming it is a 32 bit integer.\n * @this {!Long}\n * @returns {number}\n */\nLongPrototype.toInt = function toInt() {\n  return this.unsigned ? this.low >>> 0 : this.low;\n};\n\n/**\n * Converts the Long to a the nearest floating-point representation of this value (double, 53 bit mantissa).\n * @this {!Long}\n * @returns {number}\n */\nLongPrototype.toNumber = function toNumber() {\n  if (this.unsigned)\n    return ((this.high >>> 0) * TWO_PWR_32_DBL) + (this.low >>> 0);\n  return this.high * TWO_PWR_32_DBL + (this.low >>> 0);\n};\n\n/**\n * Converts the Long to a string written in the specified radix.\n * @this {!Long}\n * @param {number=} radix Radix (2-36), defaults to 10\n * @returns {string}\n * @override\n * @throws {RangeError} If `radix` is out of range\n */\nLongPrototype.toString = function toString(radix) {\n  radix = radix || 10;\n  if (radix < 2 || 36 < radix)\n    throw RangeError('radix');\n  if (this.isZero())\n    return '0';\n  if (this.isNegative()) { // Unsigned Longs are never negative\n    if (this.eq(MIN_VALUE)) {\n      // We need to change the Long value before it can be negated, so we remove\n      // the bottom-most digit in this base and then recurse to do the rest.\n      var radixLong = fromNumber(radix),\n        div = this.div(radixLong),\n        rem1 = div.mul(radixLong).sub(this);\n      return div.toString(radix) + rem1.toInt().toString(radix);\n    } else\n      return '-' + this.neg().toString(radix);\n  }\n\n  // Do several (6) digits each time through the loop, so as to\n  // minimize the calls to the very expensive emulated div.\n  var radixToPower = fromNumber(pow_dbl(radix, 6), this.unsigned),\n    rem = this;\n  var result = '';\n  while (true) {\n    var remDiv = rem.div(radixToPower),\n      intval = rem.sub(remDiv.mul(radixToPower)).toInt() >>> 0,\n      digits = intval.toString(radix);\n    rem = remDiv;\n    if (rem.isZero())\n      return digits + result;\n    else {\n      while (digits.length < 6)\n        digits = '0' + digits;\n      result = '' + digits + result;\n    }\n  }\n};\n\n/**\n * Gets the high 32 bits as a signed integer.\n * @this {!Long}\n * @returns {number} Signed high bits\n */\nLongPrototype.getHighBits = function getHighBits() {\n  return this.high;\n};\n\n/**\n * Gets the high 32 bits as an unsigned integer.\n * @this {!Long}\n * @returns {number} Unsigned high bits\n */\nLongPrototype.getHighBitsUnsigned = function getHighBitsUnsigned() {\n  return this.high >>> 0;\n};\n\n/**\n * Gets the low 32 bits as a signed integer.\n * @this {!Long}\n * @returns {number} Signed low bits\n */\nLongPrototype.getLowBits = function getLowBits() {\n  return this.low;\n};\n\n/**\n * Gets the low 32 bits as an unsigned integer.\n * @this {!Long}\n * @returns {number} Unsigned low bits\n */\nLongPrototype.getLowBitsUnsigned = function getLowBitsUnsigned() {\n  return this.low >>> 0;\n};\n\n/**\n * Gets the number of bits needed to represent the absolute value of this Long.\n * @this {!Long}\n * @returns {number}\n */\nLongPrototype.getNumBitsAbs = function getNumBitsAbs() {\n  if (this.isNegative()) // Unsigned Longs are never negative\n    return this.eq(MIN_VALUE) ? 64 : this.neg().getNumBitsAbs();\n  var val = this.high != 0 ? this.high : this.low;\n  for (var bit = 31; bit > 0; bit--)\n    if ((val & (1 << bit)) != 0)\n      break;\n  return this.high != 0 ? bit + 33 : bit + 1;\n};\n\n/**\n * Tests if this Long's value equals zero.\n * @this {!Long}\n * @returns {boolean}\n */\nLongPrototype.isZero = function isZero() {\n  return this.high === 0 && this.low === 0;\n};\n\n/**\n * Tests if this Long's value equals zero. This is an alias of {@link Long#isZero}.\n * @returns {boolean}\n */\nLongPrototype.eqz = LongPrototype.isZero;\n\n/**\n * Tests if this Long's value is negative.\n * @this {!Long}\n * @returns {boolean}\n */\nLongPrototype.isNegative = function isNegative() {\n  return !this.unsigned && this.high < 0;\n};\n\n/**\n * Tests if this Long's value is positive or zero.\n * @this {!Long}\n * @returns {boolean}\n */\nLongPrototype.isPositive = function isPositive() {\n  return this.unsigned || this.high >= 0;\n};\n\n/**\n * Tests if this Long's value is odd.\n * @this {!Long}\n * @returns {boolean}\n */\nLongPrototype.isOdd = function isOdd() {\n  return (this.low & 1) === 1;\n};\n\n/**\n * Tests if this Long's value is even.\n * @this {!Long}\n * @returns {boolean}\n */\nLongPrototype.isEven = function isEven() {\n  return (this.low & 1) === 0;\n};\n\n/**\n * Tests if this Long's value equals the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nLongPrototype.equals = function equals(other) {\n  if (!isLong(other))\n    other = fromValue(other);\n  if (this.unsigned !== other.unsigned && (this.high >>> 31) === 1 && (other.high >>> 31) === 1)\n    return false;\n  return this.high === other.high && this.low === other.low;\n};\n\n/**\n * Tests if this Long's value equals the specified's. This is an alias of {@link Long#equals}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nLongPrototype.eq = LongPrototype.equals;\n\n/**\n * Tests if this Long's value differs from the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nLongPrototype.notEquals = function notEquals(other) {\n  return !this.eq(/* validates */ other);\n};\n\n/**\n * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nLongPrototype.neq = LongPrototype.notEquals;\n\n/**\n * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nLongPrototype.ne = LongPrototype.notEquals;\n\n/**\n * Tests if this Long's value is less than the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nLongPrototype.lessThan = function lessThan(other) {\n  return this.comp(/* validates */ other) < 0;\n};\n\n/**\n * Tests if this Long's value is less than the specified's. This is an alias of {@link Long#lessThan}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nLongPrototype.lt = LongPrototype.lessThan;\n\n/**\n * Tests if this Long's value is less than or equal the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nLongPrototype.lessThanOrEqual = function lessThanOrEqual(other) {\n  return this.comp(/* validates */ other) <= 0;\n};\n\n/**\n * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nLongPrototype.lte = LongPrototype.lessThanOrEqual;\n\n/**\n * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nLongPrototype.le = LongPrototype.lessThanOrEqual;\n\n/**\n * Tests if this Long's value is greater than the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nLongPrototype.greaterThan = function greaterThan(other) {\n  return this.comp(/* validates */ other) > 0;\n};\n\n/**\n * Tests if this Long's value is greater than the specified's. This is an alias of {@link Long#greaterThan}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nLongPrototype.gt = LongPrototype.greaterThan;\n\n/**\n * Tests if this Long's value is greater than or equal the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nLongPrototype.greaterThanOrEqual = function greaterThanOrEqual(other) {\n  return this.comp(/* validates */ other) >= 0;\n};\n\n/**\n * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nLongPrototype.gte = LongPrototype.greaterThanOrEqual;\n\n/**\n * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nLongPrototype.ge = LongPrototype.greaterThanOrEqual;\n\n/**\n * Compares this Long's value with the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\n *  if the given one is greater\n */\nLongPrototype.compare = function compare(other) {\n  if (!isLong(other))\n    other = fromValue(other);\n  if (this.eq(other))\n    return 0;\n  var thisNeg = this.isNegative(),\n    otherNeg = other.isNegative();\n  if (thisNeg && !otherNeg)\n    return -1;\n  if (!thisNeg && otherNeg)\n    return 1;\n  // At this point the sign bits are the same\n  if (!this.unsigned)\n    return this.sub(other).isNegative() ? -1 : 1;\n  // Both are positive if at least one is unsigned\n  return (other.high >>> 0) > (this.high >>> 0) || (other.high === this.high && (other.low >>> 0) > (this.low >>> 0)) ? -1 : 1;\n};\n\n/**\n * Compares this Long's value with the specified's. This is an alias of {@link Long#compare}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\n *  if the given one is greater\n */\nLongPrototype.comp = LongPrototype.compare;\n\n/**\n * Negates this Long's value.\n * @this {!Long}\n * @returns {!Long} Negated Long\n */\nLongPrototype.negate = function negate() {\n  if (!this.unsigned && this.eq(MIN_VALUE))\n    return MIN_VALUE;\n  return this.not().add(ONE);\n};\n\n/**\n * Negates this Long's value. This is an alias of {@link Long#negate}.\n * @function\n * @returns {!Long} Negated Long\n */\nLongPrototype.neg = LongPrototype.negate;\n\n/**\n * Returns the sum of this and the specified Long.\n * @this {!Long}\n * @param {!Long|number|string} addend Addend\n * @returns {!Long} Sum\n */\nLongPrototype.add = function add(addend) {\n  if (!isLong(addend))\n    addend = fromValue(addend);\n\n  // Divide each number into 4 chunks of 16 bits, and then sum the chunks.\n\n  var a48 = this.high >>> 16;\n  var a32 = this.high & 0xFFFF;\n  var a16 = this.low >>> 16;\n  var a00 = this.low & 0xFFFF;\n\n  var b48 = addend.high >>> 16;\n  var b32 = addend.high & 0xFFFF;\n  var b16 = addend.low >>> 16;\n  var b00 = addend.low & 0xFFFF;\n\n  var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\n  c00 += a00 + b00;\n  c16 += c00 >>> 16;\n  c00 &= 0xFFFF;\n  c16 += a16 + b16;\n  c32 += c16 >>> 16;\n  c16 &= 0xFFFF;\n  c32 += a32 + b32;\n  c48 += c32 >>> 16;\n  c32 &= 0xFFFF;\n  c48 += a48 + b48;\n  c48 &= 0xFFFF;\n  return fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\n};\n\n/**\n * Returns the difference of this and the specified Long.\n * @this {!Long}\n * @param {!Long|number|string} subtrahend Subtrahend\n * @returns {!Long} Difference\n */\nLongPrototype.subtract = function subtract(subtrahend) {\n  if (!isLong(subtrahend))\n    subtrahend = fromValue(subtrahend);\n  return this.add(subtrahend.neg());\n};\n\n/**\n * Returns the difference of this and the specified Long. This is an alias of {@link Long#subtract}.\n * @function\n * @param {!Long|number|string} subtrahend Subtrahend\n * @returns {!Long} Difference\n */\nLongPrototype.sub = LongPrototype.subtract;\n\n/**\n * Returns the product of this and the specified Long.\n * @this {!Long}\n * @param {!Long|number|string} multiplier Multiplier\n * @returns {!Long} Product\n */\nLongPrototype.multiply = function multiply(multiplier) {\n  if (this.isZero())\n    return this;\n  if (!isLong(multiplier))\n    multiplier = fromValue(multiplier);\n\n  // use wasm support if present\n  if (wasm) {\n    var low = wasm[\"mul\"](this.low,\n      this.high,\n      multiplier.low,\n      multiplier.high);\n    return fromBits(low, wasm[\"get_high\"](), this.unsigned);\n  }\n\n  if (multiplier.isZero())\n    return this.unsigned ? UZERO : ZERO;\n  if (this.eq(MIN_VALUE))\n    return multiplier.isOdd() ? MIN_VALUE : ZERO;\n  if (multiplier.eq(MIN_VALUE))\n    return this.isOdd() ? MIN_VALUE : ZERO;\n\n  if (this.isNegative()) {\n    if (multiplier.isNegative())\n      return this.neg().mul(multiplier.neg());\n    else\n      return this.neg().mul(multiplier).neg();\n  } else if (multiplier.isNegative())\n    return this.mul(multiplier.neg()).neg();\n\n  // If both longs are small, use float multiplication\n  if (this.lt(TWO_PWR_24) && multiplier.lt(TWO_PWR_24))\n    return fromNumber(this.toNumber() * multiplier.toNumber(), this.unsigned);\n\n  // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.\n  // We can skip products that would overflow.\n\n  var a48 = this.high >>> 16;\n  var a32 = this.high & 0xFFFF;\n  var a16 = this.low >>> 16;\n  var a00 = this.low & 0xFFFF;\n\n  var b48 = multiplier.high >>> 16;\n  var b32 = multiplier.high & 0xFFFF;\n  var b16 = multiplier.low >>> 16;\n  var b00 = multiplier.low & 0xFFFF;\n\n  var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\n  c00 += a00 * b00;\n  c16 += c00 >>> 16;\n  c00 &= 0xFFFF;\n  c16 += a16 * b00;\n  c32 += c16 >>> 16;\n  c16 &= 0xFFFF;\n  c16 += a00 * b16;\n  c32 += c16 >>> 16;\n  c16 &= 0xFFFF;\n  c32 += a32 * b00;\n  c48 += c32 >>> 16;\n  c32 &= 0xFFFF;\n  c32 += a16 * b16;\n  c48 += c32 >>> 16;\n  c32 &= 0xFFFF;\n  c32 += a00 * b32;\n  c48 += c32 >>> 16;\n  c32 &= 0xFFFF;\n  c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;\n  c48 &= 0xFFFF;\n  return fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\n};\n\n/**\n * Returns the product of this and the specified Long. This is an alias of {@link Long#multiply}.\n * @function\n * @param {!Long|number|string} multiplier Multiplier\n * @returns {!Long} Product\n */\nLongPrototype.mul = LongPrototype.multiply;\n\n/**\n * Returns this Long divided by the specified. The result is signed if this Long is signed or\n *  unsigned if this Long is unsigned.\n * @this {!Long}\n * @param {!Long|number|string} divisor Divisor\n * @returns {!Long} Quotient\n */\nLongPrototype.divide = function divide(divisor) {\n  if (!isLong(divisor))\n    divisor = fromValue(divisor);\n  if (divisor.isZero())\n    throw Error('division by zero');\n\n  // use wasm support if present\n  if (wasm) {\n    // guard against signed division overflow: the largest\n    // negative number / -1 would be 1 larger than the largest\n    // positive number, due to two's complement.\n    if (!this.unsigned &&\n      this.high === -0x80000000 &&\n      divisor.low === -1 && divisor.high === -1) {\n      // be consistent with non-wasm code path\n      return this;\n    }\n    var low = (this.unsigned ? wasm[\"div_u\"] : wasm[\"div_s\"])(\n      this.low,\n      this.high,\n      divisor.low,\n      divisor.high\n    );\n    return fromBits(low, wasm[\"get_high\"](), this.unsigned);\n  }\n\n  if (this.isZero())\n    return this.unsigned ? UZERO : ZERO;\n  var approx, rem, res;\n  if (!this.unsigned) {\n    // This section is only relevant for signed longs and is derived from the\n    // closure library as a whole.\n    if (this.eq(MIN_VALUE)) {\n      if (divisor.eq(ONE) || divisor.eq(NEG_ONE))\n        return MIN_VALUE;  // recall that -MIN_VALUE == MIN_VALUE\n      else if (divisor.eq(MIN_VALUE))\n        return ONE;\n      else {\n        // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.\n        var halfThis = this.shr(1);\n        approx = halfThis.div(divisor).shl(1);\n        if (approx.eq(ZERO)) {\n          return divisor.isNegative() ? ONE : NEG_ONE;\n        } else {\n          rem = this.sub(divisor.mul(approx));\n          res = approx.add(rem.div(divisor));\n          return res;\n        }\n      }\n    } else if (divisor.eq(MIN_VALUE))\n      return this.unsigned ? UZERO : ZERO;\n    if (this.isNegative()) {\n      if (divisor.isNegative())\n        return this.neg().div(divisor.neg());\n      return this.neg().div(divisor).neg();\n    } else if (divisor.isNegative())\n      return this.div(divisor.neg()).neg();\n    res = ZERO;\n  } else {\n    // The algorithm below has not been made for unsigned longs. It's therefore\n    // required to take special care of the MSB prior to running it.\n    if (!divisor.unsigned)\n      divisor = divisor.toUnsigned();\n    if (divisor.gt(this))\n      return UZERO;\n    if (divisor.gt(this.shru(1))) // 15 >>> 1 = 7 ; with divisor = 8 ; true\n      return UONE;\n    res = UZERO;\n  }\n\n  // Repeat the following until the remainder is less than other:  find a\n  // floating-point that approximates remainder / other *from below*, add this\n  // into the result, and subtract it from the remainder.  It is critical that\n  // the approximate value is less than or equal to the real value so that the\n  // remainder never becomes negative.\n  rem = this;\n  while (rem.gte(divisor)) {\n    // Approximate the result of division. This may be a little greater or\n    // smaller than the actual value.\n    approx = Math.max(1, Math.floor(rem.toNumber() / divisor.toNumber()));\n\n    // We will tweak the approximate result by changing it in the 48-th digit or\n    // the smallest non-fractional digit, whichever is larger.\n    var log2 = Math.ceil(Math.log(approx) / Math.LN2),\n      delta = (log2 <= 48) ? 1 : pow_dbl(2, log2 - 48),\n\n      // Decrease the approximation until it is smaller than the remainder.  Note\n      // that if it is too large, the product overflows and is negative.\n      approxRes = fromNumber(approx),\n      approxRem = approxRes.mul(divisor);\n    while (approxRem.isNegative() || approxRem.gt(rem)) {\n      approx -= delta;\n      approxRes = fromNumber(approx, this.unsigned);\n      approxRem = approxRes.mul(divisor);\n    }\n\n    // We know the answer can't be zero... and actually, zero would cause\n    // infinite recursion since we would make no progress.\n    if (approxRes.isZero())\n      approxRes = ONE;\n\n    res = res.add(approxRes);\n    rem = rem.sub(approxRem);\n  }\n  return res;\n};\n\n/**\n * Returns this Long divided by the specified. This is an alias of {@link Long#divide}.\n * @function\n * @param {!Long|number|string} divisor Divisor\n * @returns {!Long} Quotient\n */\nLongPrototype.div = LongPrototype.divide;\n\n/**\n * Returns this Long modulo the specified.\n * @this {!Long}\n * @param {!Long|number|string} divisor Divisor\n * @returns {!Long} Remainder\n */\nLongPrototype.modulo = function modulo(divisor) {\n  if (!isLong(divisor))\n    divisor = fromValue(divisor);\n\n  // use wasm support if present\n  if (wasm) {\n    var low = (this.unsigned ? wasm[\"rem_u\"] : wasm[\"rem_s\"])(\n      this.low,\n      this.high,\n      divisor.low,\n      divisor.high\n    );\n    return fromBits(low, wasm[\"get_high\"](), this.unsigned);\n  }\n\n  return this.sub(this.div(divisor).mul(divisor));\n};\n\n/**\n * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\n * @function\n * @param {!Long|number|string} divisor Divisor\n * @returns {!Long} Remainder\n */\nLongPrototype.mod = LongPrototype.modulo;\n\n/**\n * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\n * @function\n * @param {!Long|number|string} divisor Divisor\n * @returns {!Long} Remainder\n */\nLongPrototype.rem = LongPrototype.modulo;\n\n/**\n * Returns the bitwise NOT of this Long.\n * @this {!Long}\n * @returns {!Long}\n */\nLongPrototype.not = function not() {\n  return fromBits(~this.low, ~this.high, this.unsigned);\n};\n\n/**\n * Returns count leading zeros of this Long.\n * @this {!Long}\n * @returns {!number}\n */\nLongPrototype.countLeadingZeros = function countLeadingZeros() {\n  return this.high ? Math.clz32(this.high) : Math.clz32(this.low) + 32;\n};\n\n/**\n * Returns count leading zeros. This is an alias of {@link Long#countLeadingZeros}.\n * @function\n * @param {!Long}\n * @returns {!number}\n */\nLongPrototype.clz = LongPrototype.countLeadingZeros;\n\n/**\n * Returns count trailing zeros of this Long.\n * @this {!Long}\n * @returns {!number}\n */\nLongPrototype.countTrailingZeros = function countTrailingZeros() {\n  return this.low ? ctz32(this.low) : ctz32(this.high) + 32;\n};\n\n/**\n * Returns count trailing zeros. This is an alias of {@link Long#countTrailingZeros}.\n * @function\n * @param {!Long}\n * @returns {!number}\n */\nLongPrototype.ctz = LongPrototype.countTrailingZeros;\n\n/**\n * Returns the bitwise AND of this Long and the specified.\n * @this {!Long}\n * @param {!Long|number|string} other Other Long\n * @returns {!Long}\n */\nLongPrototype.and = function and(other) {\n  if (!isLong(other))\n    other = fromValue(other);\n  return fromBits(this.low & other.low, this.high & other.high, this.unsigned);\n};\n\n/**\n * Returns the bitwise OR of this Long and the specified.\n * @this {!Long}\n * @param {!Long|number|string} other Other Long\n * @returns {!Long}\n */\nLongPrototype.or = function or(other) {\n  if (!isLong(other))\n    other = fromValue(other);\n  return fromBits(this.low | other.low, this.high | other.high, this.unsigned);\n};\n\n/**\n * Returns the bitwise XOR of this Long and the given one.\n * @this {!Long}\n * @param {!Long|number|string} other Other Long\n * @returns {!Long}\n */\nLongPrototype.xor = function xor(other) {\n  if (!isLong(other))\n    other = fromValue(other);\n  return fromBits(this.low ^ other.low, this.high ^ other.high, this.unsigned);\n};\n\n/**\n * Returns this Long with bits shifted to the left by the given amount.\n * @this {!Long}\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\nLongPrototype.shiftLeft = function shiftLeft(numBits) {\n  if (isLong(numBits))\n    numBits = numBits.toInt();\n  if ((numBits &= 63) === 0)\n    return this;\n  else if (numBits < 32)\n    return fromBits(this.low << numBits, (this.high << numBits) | (this.low >>> (32 - numBits)), this.unsigned);\n  else\n    return fromBits(0, this.low << (numBits - 32), this.unsigned);\n};\n\n/**\n * Returns this Long with bits shifted to the left by the given amount. This is an alias of {@link Long#shiftLeft}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\nLongPrototype.shl = LongPrototype.shiftLeft;\n\n/**\n * Returns this Long with bits arithmetically shifted to the right by the given amount.\n * @this {!Long}\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\nLongPrototype.shiftRight = function shiftRight(numBits) {\n  if (isLong(numBits))\n    numBits = numBits.toInt();\n  if ((numBits &= 63) === 0)\n    return this;\n  else if (numBits < 32)\n    return fromBits((this.low >>> numBits) | (this.high << (32 - numBits)), this.high >> numBits, this.unsigned);\n  else\n    return fromBits(this.high >> (numBits - 32), this.high >= 0 ? 0 : -1, this.unsigned);\n};\n\n/**\n * Returns this Long with bits arithmetically shifted to the right by the given amount. This is an alias of {@link Long#shiftRight}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\nLongPrototype.shr = LongPrototype.shiftRight;\n\n/**\n * Returns this Long with bits logically shifted to the right by the given amount.\n * @this {!Long}\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\nLongPrototype.shiftRightUnsigned = function shiftRightUnsigned(numBits) {\n  if (isLong(numBits)) numBits = numBits.toInt();\n  if ((numBits &= 63) === 0) return this;\n  if (numBits < 32) return fromBits((this.low >>> numBits) | (this.high << (32 - numBits)), this.high >>> numBits, this.unsigned);\n  if (numBits === 32) return fromBits(this.high, 0, this.unsigned);\n  return fromBits(this.high >>> (numBits - 32), 0, this.unsigned);\n};\n\n/**\n * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\nLongPrototype.shru = LongPrototype.shiftRightUnsigned;\n\n/**\n * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\nLongPrototype.shr_u = LongPrototype.shiftRightUnsigned;\n\n/**\n * Returns this Long with bits rotated to the left by the given amount.\n * @this {!Long}\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Rotated Long\n */\nLongPrototype.rotateLeft = function rotateLeft(numBits) {\n  var b;\n  if (isLong(numBits)) numBits = numBits.toInt();\n  if ((numBits &= 63) === 0) return this;\n  if (numBits === 32) return fromBits(this.high, this.low, this.unsigned);\n  if (numBits < 32) {\n    b = (32 - numBits);\n    return fromBits(((this.low << numBits) | (this.high >>> b)), ((this.high << numBits) | (this.low >>> b)), this.unsigned);\n  }\n  numBits -= 32;\n  b = (32 - numBits);\n  return fromBits(((this.high << numBits) | (this.low >>> b)), ((this.low << numBits) | (this.high >>> b)), this.unsigned);\n}\n/**\n * Returns this Long with bits rotated to the left by the given amount. This is an alias of {@link Long#rotateLeft}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Rotated Long\n */\nLongPrototype.rotl = LongPrototype.rotateLeft;\n\n/**\n * Returns this Long with bits rotated to the right by the given amount.\n * @this {!Long}\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Rotated Long\n */\nLongPrototype.rotateRight = function rotateRight(numBits) {\n  var b;\n  if (isLong(numBits)) numBits = numBits.toInt();\n  if ((numBits &= 63) === 0) return this;\n  if (numBits === 32) return fromBits(this.high, this.low, this.unsigned);\n  if (numBits < 32) {\n    b = (32 - numBits);\n    return fromBits(((this.high << b) | (this.low >>> numBits)), ((this.low << b) | (this.high >>> numBits)), this.unsigned);\n  }\n  numBits -= 32;\n  b = (32 - numBits);\n  return fromBits(((this.low << b) | (this.high >>> numBits)), ((this.high << b) | (this.low >>> numBits)), this.unsigned);\n}\n/**\n * Returns this Long with bits rotated to the right by the given amount. This is an alias of {@link Long#rotateRight}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Rotated Long\n */\nLongPrototype.rotr = LongPrototype.rotateRight;\n\n/**\n * Converts this Long to signed.\n * @this {!Long}\n * @returns {!Long} Signed long\n */\nLongPrototype.toSigned = function toSigned() {\n  if (!this.unsigned)\n    return this;\n  return fromBits(this.low, this.high, false);\n};\n\n/**\n * Converts this Long to unsigned.\n * @this {!Long}\n * @returns {!Long} Unsigned long\n */\nLongPrototype.toUnsigned = function toUnsigned() {\n  if (this.unsigned)\n    return this;\n  return fromBits(this.low, this.high, true);\n};\n\n/**\n * Converts this Long to its byte representation.\n * @param {boolean=} le Whether little or big endian, defaults to big endian\n * @this {!Long}\n * @returns {!Array.<number>} Byte representation\n */\nLongPrototype.toBytes = function toBytes(le) {\n  return le ? this.toBytesLE() : this.toBytesBE();\n};\n\n/**\n * Converts this Long to its little endian byte representation.\n * @this {!Long}\n * @returns {!Array.<number>} Little endian byte representation\n */\nLongPrototype.toBytesLE = function toBytesLE() {\n  var hi = this.high,\n    lo = this.low;\n  return [\n    lo & 0xff,\n    lo >>> 8 & 0xff,\n    lo >>> 16 & 0xff,\n    lo >>> 24,\n    hi & 0xff,\n    hi >>> 8 & 0xff,\n    hi >>> 16 & 0xff,\n    hi >>> 24\n  ];\n};\n\n/**\n * Converts this Long to its big endian byte representation.\n * @this {!Long}\n * @returns {!Array.<number>} Big endian byte representation\n */\nLongPrototype.toBytesBE = function toBytesBE() {\n  var hi = this.high,\n    lo = this.low;\n  return [\n    hi >>> 24,\n    hi >>> 16 & 0xff,\n    hi >>> 8 & 0xff,\n    hi & 0xff,\n    lo >>> 24,\n    lo >>> 16 & 0xff,\n    lo >>> 8 & 0xff,\n    lo & 0xff\n  ];\n};\n\n/**\n * Creates a Long from its byte representation.\n * @param {!Array.<number>} bytes Byte representation\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @param {boolean=} le Whether little or big endian, defaults to big endian\n * @returns {Long} The corresponding Long value\n */\nLong.fromBytes = function fromBytes(bytes, unsigned, le) {\n  return le ? Long.fromBytesLE(bytes, unsigned) : Long.fromBytesBE(bytes, unsigned);\n};\n\n/**\n * Creates a Long from its little endian byte representation.\n * @param {!Array.<number>} bytes Little endian byte representation\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {Long} The corresponding Long value\n */\nLong.fromBytesLE = function fromBytesLE(bytes, unsigned) {\n  return new Long(\n    bytes[0] |\n    bytes[1] << 8 |\n    bytes[2] << 16 |\n    bytes[3] << 24,\n    bytes[4] |\n    bytes[5] << 8 |\n    bytes[6] << 16 |\n    bytes[7] << 24,\n    unsigned\n  );\n};\n\n/**\n * Creates a Long from its big endian byte representation.\n * @param {!Array.<number>} bytes Big endian byte representation\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {Long} The corresponding Long value\n */\nLong.fromBytesBE = function fromBytesBE(bytes, unsigned) {\n  return new Long(\n    bytes[4] << 24 |\n    bytes[5] << 16 |\n    bytes[6] << 8 |\n    bytes[7],\n    bytes[0] << 24 |\n    bytes[1] << 16 |\n    bytes[2] << 8 |\n    bytes[3],\n    unsigned\n  );\n};\n\nexport default Long;\n"]}