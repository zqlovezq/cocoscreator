{"version":3,"sources":["file:///C:/chickenStarClient/client/assets/scripts/Common/component/OpenFunctionMgr.ts"],"names":["OpenFunctionMgr","_decorator","AbsControl","proto","tab","LangMgr","ShowTips","RoleData","Net","EventMgr","LocalEvent","ActivityData","RookieTaskMgr","PayData","BattleMainDataControl","ccclass","property","_openMap","Map","_waitPopOpenName","ins","_instance","setOpenFunctionData","data","i","length","set","name","getOpenFunctionData","openFunc","get","changeOpenFunctionDataByName","obj","isReceivedRewards","pushOpenFunctionData","checkFunctionRefresh","opTab","getData","OpenFunctionTableByName","getValue","FunctionUnlockAnimation","Type","FunctionType","FunctionType_Activity","getActivityIsOpenByOPName","waitPopOpenName","push","emitLocal","checkOpenFuncPop","openFunctions","checkFunctionIsOpen","extraOpenFunc","OpenFunctionName","OpenFunctionName_None","extra","checkExtraFunctionOpen","isOpen","openTab","act","Name","OpenFunctionName_LimitBenifit","limitedRewardMsg","isShowLimit","OpenFunctionName_ActivityNewPlayerTask","OpenFunctionName_ActivityNewPlayerTask2","openName1","openName2","data1","getTrialTask","data2","Boolean","OpenFunctionName_FirstRecharge","rechargeData","getFirstRechargeTable","BattleLv","PlayerLv","CreateDay","getIsPasstStageByStageId","level","newDate","Date","createTime","tomorrow","getFullYear","getMonth","getDate","times","getServerUtcTime","getTime","nowDay","Math","ceil","showFunctionTips","pveTab","PveStageTableByStageId","getLab","StageName","Privileged","PrivilegedType","VipLv","tipsArr","tips","getCombineString","TipsKey","BattlePassTable","passTab","openFuncName","OpenFunction","pass_msg","Msg_GetBattlePassInfoMapReq","Send","Ptl","GetBattlePassInfoMapReq","trial_msg","Msg_GetNewPlayerTrialMapReq","GetNewPlayerTrialMapReq","OpenFunctionName_SpecialGiftDaily","OpenFunctionName_SpecialGiftWeekly","OpenFunctionName_SpecialGiftMonthly","openFuncRed","OpenFunctionName_NewPlayerMall","OpenFunctionName_NewPlayerMall2","fixed_msg","Msg_GetFixedShopInfoMapReq","GetFixedShopInfoMapReq","OpenFunctionName_AutoSelectRogue","OpenFunctionName_SignInGift","sign_msg","Msg_GetSignInGiftInfoReq","GetSignInGiftInfoReq","list"],"mappings":"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","sourcesContent":["import { _decorator } from \"cc\";\r\nimport { AbsControl } from \"../../framework/base/IAbs\";\r\nimport { proto } from \"client_protocol\";\r\nimport { tab } from \"../../Table/table_gen\";\r\nimport { LangMgr } from \"../../logic/mgr/LangMgr\";\r\nimport { ShowTips, UIMgr } from \"../../logic/mgr/UIMgr\";\r\nimport { RoleData } from \"../../logic/model/role/RoleData\";\r\nimport { Net } from \"../../logic/net/Net\";\r\nimport { ViewName } from \"../../logic/define/ViewDefine\";\r\nimport { EventMgr } from \"../../logic/mgr/EventMgr\";\r\nimport { LocalEvent } from \"../../logic/define/LocalEvent\";\r\nimport { ActivityData } from \"../../logic/model/activity/ActivityData\";\r\nimport { RookieTaskMgr } from \"../../logic/model/activity/rookieTask/RookieTaskMgr\";\r\nimport { PayData } from \"../../logic/model/pay/PayData\";\r\nimport { SettingsManager } from \"../../logic/model/role/SettingsManager\";\r\nimport { BattleMainDataControl } from \"../../logic/model/home/battle/BattleMainDataControl\";\r\n\r\n\r\nconst { ccclass, property } = _decorator;\r\n\r\n/** 功能开启 */\r\nexport class OpenFunctionMgr extends AbsControl {\r\n    private _openMap: Map<tab.OpenFunctionName, proto.IOpenFunction> = new Map();\r\n    private static _instance: OpenFunctionMgr;\r\n    private _waitPopOpenName: Array<tab.OpenFunctionName> = [];\r\n\r\n    public static get ins() {\r\n        if (null == this._instance) {\r\n            this._instance = new OpenFunctionMgr();\r\n        }\r\n        return this._instance;\r\n    }\r\n    // 设置开放功能列表\r\n    setOpenFunctionData(data: proto.IOpenFunction[]) {\r\n        for (let i = 0; i < data.length; i++) {\r\n            this._openMap.set(data[i].name, data[i]);\r\n        }\r\n    }\r\n    // 获取开放功能列表\r\n    getOpenFunctionData(openFunc: tab.OpenFunctionName): proto.IOpenFunction {\r\n        return this._openMap.get(openFunc);\r\n    }\r\n    // 领取奖励之后修改列表\r\n    changeOpenFunctionDataByName(openFunc: tab.OpenFunctionName) {\r\n        const obj: proto.IOpenFunction = this._openMap.get(openFunc);\r\n        obj.isReceivedRewards = true;\r\n    }\r\n    pushOpenFunctionData(data: proto.IOpenFunction[]) {\r\n\r\n        for (let i = 0; i < data.length; i++) {\r\n            this._openMap.set(data[i].name, data[i]);\r\n            // 如果开启的功能中有战令系统 像服务器发送刷新战令功能请求\r\n            this.checkFunctionRefresh(data[i])\r\n            let opTab = tab.getData().OpenFunctionTableByName.getValue(data[i].name)\r\n            if (opTab.FunctionUnlockAnimation && opTab.FunctionUnlockAnimation != \"\") {\r\n                if (opTab.Type == tab.FunctionType.FunctionType_Activity) {\r\n                    if (ActivityData.ins.getActivityIsOpenByOPName(data[i].name)) {\r\n                        this.waitPopOpenName.push(data[i].name);\r\n                    }\r\n                } else {\r\n                    this.waitPopOpenName.push(data[i].name);\r\n                }\r\n\r\n            }\r\n        }\r\n        EventMgr.emitLocal(LocalEvent.checkOpenFuncPop);\r\n        EventMgr.emitLocal(LocalEvent.openFunctions);\r\n        // if(names.length>0){\r\n        //     UIMgr.ins.show({viewName:ViewName.FunctionUnlockPop,data:{\"functionNames\":names}})\r\n        // }\r\n\r\n    }\r\n    // 检测功能开启\r\n    checkFunctionIsOpen(openFunc: tab.OpenFunctionName, extraOpenFunc?: tab.OpenFunctionName) {\r\n        if (openFunc === tab.OpenFunctionName.OpenFunctionName_None) {\r\n            return true;\r\n        }\r\n        let obj: proto.IOpenFunction = this._openMap.get(openFunc);\r\n\r\n        let extra = true;\r\n        if (extraOpenFunc) {\r\n            extra = this.checkExtraFunctionOpen(extraOpenFunc);\r\n        }\r\n\r\n        if (obj && obj.name === openFunc && extra) {\r\n\r\n            if (obj.isOpen) {\r\n                let openTab = tab.getData().OpenFunctionTableByName.getValue(openFunc);\r\n                if (openTab.Type == tab.FunctionType.FunctionType_Activity) {\r\n                    let act = ActivityData.ins.getActivityIsOpenByOPName(openFunc);\r\n                    return act;\r\n                } else {\r\n                    if (openTab.Name === tab.OpenFunctionName.OpenFunctionName_LimitBenifit) {\r\n                        return ActivityData.ins.limitedRewardMsg && ActivityData.ins.isShowLimit()\r\n                    } else if (openTab.Name === tab.OpenFunctionName.OpenFunctionName_ActivityNewPlayerTask || openTab.Name === tab.OpenFunctionName.OpenFunctionName_ActivityNewPlayerTask2) {\r\n                        const openName1 = tab.OpenFunctionName.OpenFunctionName_ActivityNewPlayerTask;\r\n                        const openName2 = tab.OpenFunctionName.OpenFunctionName_ActivityNewPlayerTask2;\r\n                        const data1 = RookieTaskMgr.ins.getTrialTask(openName1);\r\n                        const data2 = RookieTaskMgr.ins.getTrialTask(openName2);\r\n                        return Boolean(data1 || data2);\r\n                    } else if (openTab.Name === tab.OpenFunctionName.OpenFunctionName_FirstRecharge) {\r\n                        let rechargeData = PayData.ins.getFirstRechargeTable();\r\n                        return rechargeData !== null;\r\n                    } else {\r\n                        return true;\r\n                    }\r\n                }\r\n\r\n            } else {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n    checkExtraFunctionOpen(openFunc: tab.OpenFunctionName): boolean {\r\n        const openTab = tab.getData().OpenFunctionTableByName.getValue(openFunc);\r\n        const BattleLv = openTab.BattleLv\r\n        const PlayerLv = openTab.PlayerLv;\r\n        const CreateDay = openTab.CreateDay;\r\n        if (BattleLv) {\r\n            return BattleMainDataControl.ins.getIsPasstStageByStageId(BattleLv);\r\n        }\r\n        if (PlayerLv) {\r\n            return RoleData.ins.level >= PlayerLv;\r\n        }\r\n        if (CreateDay) {\r\n            const newDate = new Date(RoleData.ins.createTime * 1000);\r\n            const tomorrow = new Date(newDate.getFullYear(), newDate.getMonth(), newDate.getDate() + 1);\r\n            const times = RoleData.ins.getServerUtcTime() - tomorrow.getTime() / 1000;\r\n            let nowDay = 1;\r\n            if (times > 0) {\r\n                nowDay = Math.ceil((RoleData.ins.getServerUtcTime() - tomorrow.getTime() / 1000) / 86400) + 1;\r\n            }\r\n            return nowDay >= CreateDay;\r\n        }\r\n        return true\r\n    }\r\n    // 显示开启条件\r\n    showFunctionTips(openFunc: tab.OpenFunctionName) {\r\n        const openTab = tab.getData().OpenFunctionTableByName.getValue(openFunc);\r\n        const pveTab = tab.getData().PveStageTableByStageId.getValue(openTab.BattleLv)\r\n        const BattleLv = pveTab ? LangMgr.getLab(pveTab.StageName) : \"\";\r\n        const PlayerLv = openTab.PlayerLv;\r\n        const CreateDay = openTab.CreateDay;\r\n        const Privileged = LangMgr.getLab(tab.PrivilegedType[openTab.Privileged]);\r\n        const VipLv = openTab.VipLv;\r\n        const tipsArr = [BattleLv, PlayerLv, CreateDay, VipLv, Privileged]\r\n        let tips = \"\"\r\n        tips = LangMgr.getCombineString(openTab.TipsKey, tipsArr);\r\n        ShowTips(tips);\r\n    }\r\n    // 检查是否有特殊系统开启\r\n    checkFunctionRefresh(data: proto.IOpenFunction) {\r\n        // 战令开启\r\n        for (let i = 0; i < tab.getData().BattlePassTable.length; i++) {\r\n            const passTab: tab.BattlePassTable = tab.getData().BattlePassTable[i];\r\n            const openFuncName = passTab.OpenFunction;\r\n            if (data.name === openFuncName && data.isOpen) {\r\n                let pass_msg = new proto.Msg_GetBattlePassInfoMapReq();\r\n                Net.Send(proto.Ptl.GetBattlePassInfoMapReq, pass_msg);\r\n                break;\r\n            }\r\n        }\r\n        switch (data.name) {\r\n            //试炼开启\r\n            case tab.OpenFunctionName.OpenFunctionName_ActivityNewPlayerTask:\r\n            case tab.OpenFunctionName.OpenFunctionName_ActivityNewPlayerTask2:\r\n                // 试炼开启\r\n                if (data.isOpen) {\r\n                    let trial_msg = new proto.Msg_GetNewPlayerTrialMapReq();\r\n                    Net.Send(proto.Ptl.GetNewPlayerTrialMapReq, trial_msg);\r\n                }\r\n                break\r\n            // 精彩活动开启\r\n            case tab.OpenFunctionName.OpenFunctionName_SpecialGiftDaily:\r\n            case tab.OpenFunctionName.OpenFunctionName_SpecialGiftWeekly:\r\n            case tab.OpenFunctionName.OpenFunctionName_SpecialGiftMonthly:\r\n                EventMgr.emitLocal(LocalEvent.openFuncRed);\r\n                break;\r\n            case tab.OpenFunctionName.OpenFunctionName_NewPlayerMall:\r\n            case tab.OpenFunctionName.OpenFunctionName_NewPlayerMall2:\r\n                let fixed_msg = new proto.Msg_GetFixedShopInfoMapReq();\r\n                Net.Send(proto.Ptl.GetFixedShopInfoMapReq, fixed_msg);\r\n                break;\r\n            case tab.OpenFunctionName.OpenFunctionName_AutoSelectRogue:\r\n                // SettingsManager.ins.setSetting(\"isAutoSelectRogue\", data.isOpen);\r\n                break;\r\n            // 百抽活动\r\n            case tab.OpenFunctionName.OpenFunctionName_SignInGift:\r\n                let sign_msg = new proto.Msg_GetSignInGiftInfoReq();\r\n                Net.Send(proto.Ptl.GetSignInGiftInfoReq, sign_msg);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 需要等待弹窗开启功能弹窗的列表\r\n     */\r\n    get waitPopOpenName() {\r\n        if (!this._waitPopOpenName) {\r\n            this._waitPopOpenName = [];\r\n        }\r\n        return this._waitPopOpenName;\r\n    }\r\n    set waitPopOpenName(list: Array<number>) {\r\n        this._waitPopOpenName = list;\r\n    }\r\n}"]}