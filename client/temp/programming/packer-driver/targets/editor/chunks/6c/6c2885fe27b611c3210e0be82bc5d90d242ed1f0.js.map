{"version":3,"sources":["file:///C:/chickenStarClient/client/assets/scripts/logic/model/association/AssociationSkillPop.ts"],"names":["_decorator","Button","Color","Label","log","Node","ProgressBar","Sprite","SpriteFrame","ViewPop","ShowItemNotEnoughTips","UIMgr","ViewName","AssociationData","AssociationControl","EventMgr","proto","tab","LangMgr","ItemData","GameUtil","ccclass","property","AssociationSkillPop","curClass","HeroClass","HeroClass_Assassin","onShow","setView","setSkillInfo","setCurInfo","onDestroy","register","onMsg","Ptl","ResetGuildSkillRsp","on_s2c_ResetGuildSkillRsp","UpgradeGuildSkillRsp","on_s2c_UpgradeGuildSkillRsp","unRegister","resetGuildSkill","lv","ins","getSkillLvByClass","show","viewName","AssociationSkillResetPop","data","showAllSkillAttr","AssociationAttrPop","getGuildAttr","onClickLvUp","config","isMaterialEnough","isEnough","itemid","isLevelMax","isSkillLevelMax","console","reqUpgradeGuildSkill","switchClass","e","heroClass","Number","msg","error","code","CommonErrorCode","Succeed","heroClassTab","getData","HeroClassTableByHeroClass","getValue","showLv","Math","ceil","tabs","getSkillTabsByClass","arrTabs","i","length","_tab","ShowLevel","push","progress_bar_skill","progress","node_final_img","active","k","item","node_skills","info_node","getChildByName","lock_node","lock_node_img","select_img","lv_txt","getComponent","att_txt","tabData","string","String","getLab","AttrType","AttrTypes","AttrValue","node","setTexture","Icon","j","HeroClass_Warrior","toggle_lv","floor","toggle_node","node_toggle","children","toggle_node_lv","getCurSkillTabByClass","_lv","Level","sp_common_info_icon","parent","sp_info_icon","lbl_info_icon","getCombineString","spriteFrame","frames_icon","node_attr_layout","attr_node","attrTabData","HeroAttrClientTableByType","attr_icon","attr_value","_tabData","ShowPercent","convertNumber","node_cost_layout","cost_node","CostItemIds","cost_icon","cost_need_value","cost_have_value","costId","itemData","ItemTableById","costCount","CostItemCount","costHaveCount","getCount","color","fromHEX","GetKeyValue_ConfigTable","InterfaceTxtRed","node_lv_up","interactable","grayscale","clickAttrBtn","event","args","currentTarget","CommonBlackTipsPop","worldPosition"],"mappings":"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","sourcesContent":["import { _decorator, Button, Color, Component, EventTouch, Label, log, Node, Prefab, ProgressBar, Sprite, SpriteFrame } from 'cc';\r\nimport { ViewPop } from '../../../framework/base/ViewPop';\r\nimport { ShowItemNotEnoughTips, UIMgr } from '../../mgr/UIMgr';\r\nimport { ViewName } from '../../define/ViewDefine';\r\nimport { AssociationData } from './AssociationData';\r\nimport { AssociationControl } from './AssociationControl';\r\nimport { EventMgr } from '../../mgr/EventMgr';\r\nimport { proto } from 'client_protocol';\r\nimport { tab } from '../../../Table/table_gen';\r\nimport { LangMgr } from '../../mgr/LangMgr';\r\nimport { ItemData } from '../item/ItemData';\r\nimport { GameUtil } from '../../utils/GameUtil';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('AssociationSkillPop')\r\nexport class AssociationSkillPop extends ViewPop {\r\n    @property([Node])\r\n    node_skills: Node[] = [];\r\n    @property([SpriteFrame])\r\n    frames_icon: SpriteFrame[] = [];\r\n    @property(Node)\r\n    node_attr_layout: Node = null;\r\n    @property(Node)\r\n    node_cost_layout: Node = null;\r\n    @property(Node)\r\n    node_toggle: Node = null;\r\n    @property(Sprite)\r\n    sp_common_info_icon: Sprite = null;\r\n    @property(Sprite)\r\n    sp_info_icon: Sprite = null;\r\n    @property(Label)\r\n    lbl_info_icon: Label = null;\r\n    @property(Node)\r\n    node_lv_up: Node = null;\r\n    @property(ProgressBar)\r\n    progress_bar_skill: ProgressBar = null;\r\n    @property(Node)\r\n    node_final_img: Node = null;\r\n    private curClass: tab.HeroClass = tab.HeroClass.HeroClass_Assassin;\r\n    onShow(): void {\r\n        this.curClass = tab.HeroClass.HeroClass_Assassin;\r\n        this.setView();\r\n    }\r\n    setView() {\r\n        this.setSkillInfo();\r\n        this.setCurInfo();\r\n    }\r\n    protected onDestroy(): void {\r\n        super.onDestroy();\r\n    }\r\n    register(): void {\r\n        EventMgr.onMsg(proto.Ptl.ResetGuildSkillRsp, this.on_s2c_ResetGuildSkillRsp, this);\r\n        EventMgr.onMsg(proto.Ptl.UpgradeGuildSkillRsp, this.on_s2c_UpgradeGuildSkillRsp, this);\r\n    }\r\n    unRegister(): void {\r\n        super.unRegister();\r\n    }\r\n    /* 重置技能 */\r\n    resetGuildSkill() {\r\n        const lv = AssociationData.ins.getSkillLvByClass(this.curClass);\r\n        if (lv > 0) {\r\n            UIMgr.ins.show({ viewName: ViewName.AssociationSkillResetPop, data: this.curClass })\r\n        }\r\n    }\r\n    /* 点击显示全体属性 */\r\n    showAllSkillAttr() {\r\n        UIMgr.ins.show({ viewName: ViewName.AssociationAttrPop, data: { \"attrMap\": AssociationData.ins.getGuildAttr(this.curClass) } })\r\n    }\r\n    /* 升级属性 */\r\n    onClickLvUp() {\r\n        // 是否资源充足\r\n        const config = AssociationData.ins.isMaterialEnough(this.curClass);\r\n        if (!config.isEnough) {\r\n            ShowItemNotEnoughTips(config.itemid);\r\n            return\r\n        }\r\n        // 是否达到等级上限\r\n        const isLevelMax = AssociationData.ins.isSkillLevelMax(this.curClass)\r\n        if (isLevelMax) {\r\n            console.log(\"等级上限\")\r\n            return;\r\n        }\r\n        AssociationControl.ins.reqUpgradeGuildSkill(this.curClass);\r\n    }\r\n    switchClass(e: EventTouch, heroClass: string) {\r\n        if (this.curClass == Number(heroClass)) {\r\n            return;\r\n        }\r\n        this.curClass = Number(heroClass);\r\n        this.setView();\r\n    }\r\n    on_s2c_ResetGuildSkillRsp(msg: proto.Msg_ResetGuildSkillRsp) {\r\n        if (msg.error && msg.error.code != proto.CommonErrorCode.Succeed) return;\r\n        log(\"cocos 重置公会技能成功\");\r\n        this.setView();\r\n    }\r\n    on_s2c_UpgradeGuildSkillRsp(msg: proto.Msg_UpgradeGuildSkillRsp) {\r\n        if (msg.error && msg.error.code != proto.CommonErrorCode.Succeed) return;\r\n        log(\"cocos 升级公会技能成功\")\r\n        this.setView()\r\n    }\r\n    setSkillInfo() {\r\n        const heroClassTab = tab.getData().HeroClassTableByHeroClass.getValue(this.curClass);\r\n        const lv = AssociationData.ins.getSkillLvByClass(this.curClass);\r\n        const showLv = Math.ceil((lv + 1) / 6);\r\n        const tabs = AssociationData.ins.getSkillTabsByClass(this.curClass);\r\n        const arrTabs = [];\r\n        for (let i = 0; i < tabs.length; i++) {\r\n            const _tab = tabs[i];\r\n            if (showLv === _tab.ShowLevel) {\r\n                arrTabs.push(_tab);\r\n            }\r\n        }\r\n        if (lv % 6 === 5) {\r\n            this.progress_bar_skill.progress = 1;\r\n            this.node_final_img.active = true;\r\n        } else {\r\n            this.progress_bar_skill.progress = (lv % 6) / 5;\r\n            this.node_final_img.active = false;\r\n        }\r\n        for (let k = 0; k < 6; k++) {\r\n            const item = this.node_skills[k];\r\n            const info_node = item.getChildByName(\"info_node\");\r\n            const lock_node = item.getChildByName(\"lock_node\");\r\n            const lock_node_img = lock_node.getChildByName(\"img\");\r\n            const select_img = item.getChildByName(\"select_img\");\r\n            const lv_txt = info_node.getChildByName(\"lv_txt\").getComponent(Label);\r\n            const att_txt = info_node.getChildByName(\"attr_txt\").getComponent(Label)\r\n            const tabData: tab.GuildAttrTable = arrTabs[k];\r\n            select_img.active = k === lv % 6;\r\n            lock_node.active = k >= lv % 6;\r\n            lock_node_img.active = k > lv % 6;\r\n            if (tabData) {\r\n                item.active = true;\r\n                lv_txt.string = String(showLv);\r\n                if (k !== 5) {\r\n                    att_txt.string = LangMgr.getLab(tab.AttrType[tabData.AttrTypes[0]]) + \"+\" + tabData.AttrValue[0];\r\n                } else {\r\n                    att_txt.node.active = false\r\n                }\r\n            } else {\r\n                lv_txt.string = String(showLv);\r\n                lock_node.active = false;\r\n                // att_txt.node.active = false;\r\n            }\r\n            if (k === 5) {\r\n                item.getChildByName(\"icon\").getComponent(Sprite).setTexture(heroClassTab.Icon);\r\n            }\r\n        }\r\n        for (let j = tab.HeroClass.HeroClass_Assassin; j <= tab.HeroClass.HeroClass_Warrior; j++) {\r\n            const toggle_lv = Math.floor(AssociationData.ins.getSkillLvByClass(j) / 6);\r\n            const toggle_node = this.node_toggle.children[j - 1];\r\n            const toggle_node_lv = toggle_node.getChildByName(\"lv_txt\").getComponent(Label);\r\n            toggle_node_lv.string = String(toggle_lv);\r\n        }\r\n    }\r\n    setCurInfo() {\r\n        // 当前属性\r\n        const heroClassTab = tab.getData().HeroClassTableByHeroClass.getValue(this.curClass);\r\n        const tabData = AssociationData.ins.getCurSkillTabByClass(this.curClass);\r\n        const _lv = tabData.Level % 6;\r\n        this.sp_common_info_icon.node.parent.active = false;\r\n        this.sp_info_icon.node.parent.active = false;\r\n        if (_lv == 0) {\r\n            this.sp_info_icon.node.parent.active = true;\r\n            this.sp_info_icon.setTexture(heroClassTab.Icon)\r\n            this.lbl_info_icon.string = LangMgr.getCombineString(\"Tips_guildattr_6\", [LangMgr.getLab(tab.HeroClass[this.curClass]), tabData.ShowLevel])\r\n        } else {\r\n            this.sp_common_info_icon.node.parent.active = true;\r\n            this.sp_common_info_icon.spriteFrame = this.frames_icon[(tabData.Level - 1) % 6];\r\n            this.lbl_info_icon.string = LangMgr.getCombineString(\"Tips_guildattr_\" + _lv, [LangMgr.getLab(tab.HeroClass[this.curClass]), tabData.ShowLevel])\r\n        }\r\n        for (let i = 0; i < this.node_attr_layout.children.length; i++) {\r\n            const attr_node = this.node_attr_layout.children[i];\r\n            if (tabData.AttrTypes[i]) {\r\n                const attrTabData = tab.getData().HeroAttrClientTableByType.getValue(tabData.AttrTypes[i])\r\n                attr_node.active = true;\r\n                const attr_icon = attr_node.getChildByName(\"icon\").getComponent(Sprite);\r\n                const attr_value = attr_node.getChildByName(\"now_txt\").getComponent(Label);\r\n                attr_icon.setTexture(attrTabData.Icon);\r\n                // attr_value.string = String(tabData.AttrValue[i]);\r\n                let _tabData:tab.HeroAttrClientTable = tab.getData().HeroAttrClientTableByType.getValue(tabData.AttrTypes[i])\r\n                attr_value.string=_tabData.ShowPercent?(tabData.AttrValue[i]/100)+\"%\":GameUtil.convertNumber(tabData.AttrValue[i])+\"\"\r\n            } else {\r\n                attr_node.active = false;\r\n            }\r\n        }\r\n        // 当前消耗\r\n        for (let k = 0; k < this.node_cost_layout.children.length; k++) {\r\n            const cost_node = this.node_cost_layout.children[k];\r\n            if (tabData.CostItemIds[k]) {\r\n                cost_node.active = true;\r\n                const cost_icon = cost_node.getChildByName(\"icon\").getComponent(Sprite);\r\n                const cost_need_value = cost_node.getChildByName(\"need_txt\").getComponent(Label);\r\n                const cost_have_value = cost_node.getChildByName(\"have_txt\").getComponent(Label);\r\n                const costId = tabData.CostItemIds[k];\r\n                const itemData = tab.getData().ItemTableById.getValue(costId);\r\n                const costCount = tabData.CostItemCount[k];\r\n                const costHaveCount = ItemData.ins.getCount(costId);\r\n                cost_icon.setTexture(itemData.Icon);\r\n                cost_need_value.string = GameUtil.convertNumber(costCount);\r\n                cost_have_value.string = GameUtil.convertNumber(costHaveCount);\r\n\r\n                if(costCount>costHaveCount){\r\n                    cost_have_value.color = new Color().fromHEX(tab.getData().GetKeyValue_ConfigTable().InterfaceTxtRed);\r\n                }else{\r\n                    cost_have_value.color = new Color().fromHEX(\"#FFFFFF\");\r\n                }\r\n\r\n            } else {\r\n                cost_node.active = false;\r\n            }\r\n        }\r\n        const isLevelMax = AssociationData.ins.isSkillLevelMax(this.curClass);\r\n        this.node_lv_up.getComponent(Button).interactable = !isLevelMax;\r\n        this.node_lv_up.getComponent(Sprite).grayscale = isLevelMax;\r\n    }\r\n    clickAttrBtn(event:EventTouch,args:string){\r\n        let node:Node=event.currentTarget;\r\n        const tabData = AssociationData.ins.getCurSkillTabByClass(this.curClass);\r\n        UIMgr.ins.show({ viewName: ViewName.CommonBlackTipsPop,data:{\"worldPos\":node.worldPosition,\"WordTableKey\":tab.AttrType[tabData.AttrTypes[args]] }});\r\n    }\r\n}\r\n\r\n\r\n"]}