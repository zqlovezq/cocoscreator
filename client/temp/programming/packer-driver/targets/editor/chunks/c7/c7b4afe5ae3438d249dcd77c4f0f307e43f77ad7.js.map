{"version":3,"sources":["file:///C:/chickenStarClient/client/assets/scripts/scene/SceneBase.ts"],"names":["_decorator","Camera","Component","find","instantiate","Node","Prefab","ResolutionPolicy","UITransformComponent","view","UIMgr","ViewSize","ccclass","property","SceneBase","defaultView","onLoad","ins","setCamera","camera2d","setRootNode","rootNode","register","resize","showDefaultPfb","defaultPfb","uiNode","addChild","addView","name","canvasNames","console","log","dr","getDesignResolutionSize","s","getFrameSize","rw","width","rh","height","finalW","finalH","setDesignResolutionSize","UNKNOWN","init","index","length","canvasName","cancas","cvs","getComponent"],"mappings":"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","sourcesContent":["import { _decorator, Camera, Component, director, find, instantiate, Node, Prefab, ResolutionPolicy, UITransform, UITransformComponent, view } from 'cc';\nimport { UIMgr } from '../logic/mgr/UIMgr';\nimport { IEvent } from '../framework/base/IAbs';\nimport { ResMgr } from '../logic/mgr/ResMgr';\nimport { ViewSize } from '../logic/define/ViewDefine';\nconst { ccclass, property } = _decorator;\n\n\n@ccclass('SceneBase')\nexport class SceneBase extends Component implements IEvent {\n\n    @property(Camera)\n    camera2d: Camera = null\n\n    @property(Node)\n    rootNode: Node = null\n\n    @property(Prefab)\n    defaultPfb: Prefab = null\n\n    defaultView: Node\n    protected onLoad(): void {\n        UIMgr.ins.setCamera(this.camera2d)\n        UIMgr.ins.setRootNode(this.rootNode)\n        this.register()\n        this.resize([\"Canvas\"])\n    }\n\n    showDefaultPfb(): void {\n        if (this.defaultPfb) {\n            this.defaultView = instantiate(this.defaultPfb)\n            UIMgr.ins.uiNode.addChild(this.defaultView)\n            UIMgr.ins.addView(this.defaultView.name, this.defaultView)\n        }\n    }\n\n    register(): void {\n    }\n    // protected update(dt: number): void {\n    //     console.log(\"帧率\",dt)\n    // }\n\n    public resize(canvasNames: string[]) {\n        //根据屏幕大小决定适配策略\n        //想明白原理，请阅读本文 https://blog.csdn.net/qq_36720848/article/details/89742451\n        console.log(view)\n\n        let dr = view.getDesignResolutionSize();\n        var s = view.getFrameSize();\n        var rw = s.width;\n        var rh = s.height;\n        var finalW = rw;\n        var finalH = rh;\n\n        if ((rw / rh) > (dr.width / dr.height)) {\n            //!#zh: 是否优先将设计分辨率高度撑满视图高度。 */\n            //cvs.fitHeight = true;\n\n            //如果更长，则用定高\n            finalH = dr.height;\n            finalW = finalH * rw / rh;\n        }\n        else {\n            /*!#zh: 是否优先将设计分辨率宽度撑满视图宽度。 */\n            //cvs.fitWidth = true;\n            //如果更短，则用定宽\n            finalW = dr.width;\n            finalH = rh / rw * finalW;\n        }\n\n        view.setDesignResolutionSize(finalW, finalH, ResolutionPolicy.UNKNOWN);\n        ViewSize.init()\n        for (let index = 0; index < canvasNames.length; index++) {\n            const canvasName = canvasNames[index];\n            let cancas = find(canvasName)\n            if (cancas) {\n                let cvs = cancas.getComponent(UITransformComponent);\n                if (cvs) {\n                    cvs.width = finalW;\n                    cvs.height = finalH;\n                }\n            }\n        }\n    }\n}\n\n"]}