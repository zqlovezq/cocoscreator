{"version":3,"sources":["file:///C:/chickenStarClient/client/assets/scripts/logic/fight/view/common/FightBossTopBarItem.ts"],"names":["_decorator","Label","Animation","FightBossBarItem","FightMacro","EventMgr","WorldBossControll","FightEvent","FightData","ccclass","property","FightBossTopBarItem","isFirst","onLoad","onFight","World_Boss_LvUp","onLvUp","anim","node","active","hpCount","ins","isWorlBoss","onDestroy","unTarget","play","changeColor","setAttrData","data","updateHp","update","dt","lastHp","totalTackDamage","damageLab","string","damageStr","hpBar2","progress","damagePercent","nowLv","nowBarCount","barSfs","length","hpBar1","barSprite","spriteFrame"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAsCC,MAAAA,K,OAAAA,K;AAAuDC,MAAAA,S,OAAAA,S;;AAK7FC,MAAAA,gB,iBAAAA,gB;;AAEAC,MAAAA,U,iBAAAA,U;;AACAC,MAAAA,Q,iBAAAA,Q;;AACAC,MAAAA,iB,iBAAAA,iB;;AACAC,MAAAA,U,iBAAAA,U;;AACAC,MAAAA,S,iBAAAA,S;;;;;;;;;OAEH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBV,U;AAC9B;;qCAEaW,mB,WADZF,OAAO,CAAC,qBAAD,C,UAEHC,QAAQ,CAACT,KAAD,C,UAGRS,QAAQ,CAACR,SAAD,C,2BALb,MACaS,mBADb;AAAA;AAAA,gDAC0D;AAAA;AAAA;;AAAA;;AAAA;;AAAA,eAMtDC,OANsD,GAMnC,IANmC;AAAA;;AAO5CC,QAAAA,MAAM,GAAS;AACrB;AAAA;AAAA,oCAASC,OAAT,CAAiB;AAAA;AAAA,wCAAWC,eAA5B,EAA6C,KAAKC,MAAlD,EAA0D,IAA1D;AACA,eAAKC,IAAL,CAAUC,IAAV,CAAeC,MAAf,GAAwB,KAAKC,OAAL,CAAaF,IAAb,CAAkBC,MAAlB,GAA2B;AAAA;AAAA,sCAAUE,GAAV,CAAcC,UAAd,EAAnD;AACH;;AAESC,QAAAA,SAAS,GAAS;AACxB;AAAA;AAAA,oCAASC,QAAT,CAAkB,IAAlB;AACH;;AAEDR,QAAAA,MAAM,GAAG;AACL,eAAKC,IAAL,CAAUQ,IAAV;AACA,eAAKC,WAAL;AACH;;AAEDC,QAAAA,WAAW,CAACC,IAAD,EAAsB;AAC7B,gBAAMD,WAAN,CAAkBC,IAAlB;AACA,eAAKC,QAAL;AACA,eAAKH,WAAL;AACH;;AAESI,QAAAA,MAAM,CAACC,EAAD,EAAmB;AAC/B,cAAI,KAAKC,MAAL,IAAe;AAAA;AAAA,sDAAkBX,GAAlB,CAAsBY,eAAzC,EAA0D;AACtD,iBAAKJ,QAAL;AACH;AACJ;;AAEDA,QAAAA,QAAQ,GAAG;AACP,eAAKG,MAAL,GAAc;AAAA;AAAA,sDAAkBX,GAAlB,CAAsBY,eAApC;AACA,eAAKC,SAAL,CAAeC,MAAf,GAAwB;AAAA;AAAA,wCAAWC,SAAX,CAAqB,KAAKJ,MAA1B,CAAxB;AACA,eAAKK,MAAL,CAAYC,QAAZ,GAAuB;AAAA;AAAA,sDAAkBjB,GAAlB,CAAsBkB,aAAtB,EAAvB;AACH;;AAEDb,QAAAA,WAAW,GAAG;AACV,eAAKN,OAAL,CAAae,MAAb,GAAsB,MAAM;AAAA;AAAA,sDAAkBd,GAAlB,CAAsBmB,KAAlD;AACA,cAAIC,WAAW,GAAG;AAAA;AAAA,sDAAkBpB,GAAlB,CAAsBmB,KAAtB,GAA8B,KAAKE,MAAL,CAAYC,MAA5D;AACA,eAAKC,MAAL,CAAYC,SAAZ,CAAsBC,WAAtB,GAAoC,KAAKJ,MAAL,CAAY,CAAC,KAAK9B,OAAL,GAAgB6B,WAAW,GAAG,CAA9B,GAAmC,KAAKC,MAAL,CAAYC,MAAZ,GAAqB,CAAzD,IAA8D,KAAKD,MAAL,CAAYC,MAAtF,CAApC;AACA,eAAKC,MAAL,CAAYN,QAAZ,GAAuB,CAAvB;AACA,eAAKD,MAAL,CAAYQ,SAAZ,CAAsBC,WAAtB,GAAoC,KAAKJ,MAAL,CAAYD,WAAZ,CAApC;AACA,eAAK7B,OAAL,GAAe,KAAf;AACH;;AA9CqD,O;;;;;iBAEnC,I;;;;;;;iBAGD,I","sourcesContent":["import { _decorator, Button, Color, Component, Label, Node, Prefab, ProgressBar, Sprite, SpriteFrame, Animation } from \"cc\";\n\nimport { FightAttrData } from \"../../data/FightAttrData\";\nimport { Monster } from \"../../base/obj/role/monster/Monster\";\nimport { LangMgr } from \"../../../mgr/LangMgr\";\nimport { FightBossBarItem } from \"./FightBossBarItem\";\nimport { tab } from \"../../../../Table/table_gen\";\nimport { FightMacro } from \"../../define/FightDefine\";\nimport { EventMgr } from \"../../../mgr/EventMgr\";\nimport { WorldBossControll } from \"../../stage/WorldBossControll\";\nimport { FightEvent } from \"../../define/FightEvent\";\nimport { FightData } from \"../../data/FightData\";\n\nconst { ccclass, property } = _decorator;\n/** 战斗世界BOSS进度条，等级， 血条*/\n@ccclass('FightBossTopBarItem')\nexport class FightBossTopBarItem extends FightBossBarItem {\n    @property(Label)\n    damageLab: Label = null\n\n    @property(Animation)\n    anim: Animation = null\n    isFirst: boolean = true\n    protected onLoad(): void {\n        EventMgr.onFight(FightEvent.World_Boss_LvUp, this.onLvUp, this)\n        this.anim.node.active = this.hpCount.node.active = FightData.ins.isWorlBoss()\n    }\n\n    protected onDestroy(): void {\n        EventMgr.unTarget(this)\n    }\n\n    onLvUp() {\n        this.anim.play()\n        this.changeColor()\n    }\n\n    setAttrData(data: FightAttrData) {\n        super.setAttrData(data)\n        this.updateHp()\n        this.changeColor()\n    }\n\n    protected update(dt: number): void {\n        if (this.lastHp != WorldBossControll.ins.totalTackDamage) {\n            this.updateHp()\n        }\n    }\n\n    updateHp() {\n        this.lastHp = WorldBossControll.ins.totalTackDamage\n        this.damageLab.string = FightMacro.damageStr(this.lastHp)\n        this.hpBar2.progress = WorldBossControll.ins.damagePercent()\n    }\n\n    changeColor() {\n        this.hpCount.string = \"x\" + WorldBossControll.ins.nowLv\n        let nowBarCount = WorldBossControll.ins.nowLv % this.barSfs.length\n        this.hpBar1.barSprite.spriteFrame = this.barSfs[(this.isFirst ? (nowBarCount - 1) : this.barSfs.length - 1) % this.barSfs.length]\n        this.hpBar1.progress = 1\n        this.hpBar2.barSprite.spriteFrame = this.barSfs[nowBarCount]\n        this.isFirst = false\n    }\n}"]}