{"version":3,"sources":["file:///C:/chickenStarClient/client/assets/scripts/logic/model/friends/FriendData.ts"],"names":["_decorator","log","SimpleRoleInfo","proto","RedMgr","RedDotType","tab","ccclass","property","FriendData","_friendMap","_applyMap","_blackMap","_recommendMap","isInitMyFirend","isInitApply","isInitBlack","isInitRecommend","_removeFiendMsg","_friendOnlineTimeMsg","_friendPowerScoreMsg","giftListMsg","purge","ins","_instance","friendMap","Map","applyMap","blackMap","recommendMap","removeFiendMsg","friendOnlineTimeMsg","friendPowerScoreMsg","initFrendData","msg","type","FriendListType","FriendList","list","key","info","merge","set","id","setGiftState","handleCacheData","refreshEvent","FriendValueReceive","BlackList","ApplyList","FriendApply","initRecommendFriendData","clear","addFriendInfo","get","role","index","givingList","indexOf","isGiveGift","idx","recvList","receiveGiftState","giftList","givingGiftSucc","roleIds","push","receiveGiftSucc","error","code","CommonErrorCode","Succeed","roleId","splice","giftPush","map","length","remove","has","delete","offlineTime","powerScore","removeFiendInfo","updateFriendOnlineTime","getSimpleRoleInfoByRoleID","updatFriendPowerScore","getRecommendInfos","Array","from","values","getMyFreindInfos","getApplyInfos","getBlackInfos","getMyFriendNum","size","getReceiveGiftNum","getGiveGiftNum","getNotReceiveGiftNum","getData","GetKeyValue_ConfigTable","GiftRecvMaxCount","myFreind","len","findIndex","a"],"mappings":"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","sourcesContent":["import { _decorator, Component, log, Node } from 'cc';\r\nimport { IClear } from '../../../framework/base/IAbs';\r\nimport { SimpleRoleInfo } from './SimpleRoleInfo';\r\nimport { proto } from 'client_protocol';\r\nimport { RedMgr } from '../../mgr/RedMgr';\r\nimport { RedDotType } from '../../red/RedDotType';\r\nimport { tab } from '../../../Table/table_gen';\r\nconst { ccclass, property } = _decorator;\r\n\r\n/**\r\n * \r\n * FriendData\r\n * zhudingchao\r\n * Fri Jun 07 2024 11:11:08 GMT+0800 (中国标准时间)\r\n * db://assets/scripts/logic/model/friends/FriendData.ts\r\n *\r\n */\r\n\r\n@ccclass('FriendData')\r\nexport class FriendData implements IClear {\r\n    private _friendMap: Map<string, SimpleRoleInfo>;\r\n    private _applyMap: Map<string, SimpleRoleInfo>\r\n    private _blackMap: Map<string, SimpleRoleInfo>;\r\n    private _recommendMap: Map<string, SimpleRoleInfo>;\r\n    public isInitMyFirend: boolean = false;\r\n    public isInitApply: boolean = false;\r\n    public isInitBlack: boolean = false;\r\n    public isInitRecommend: boolean = false;\r\n    private _removeFiendMsg: Array<proto.Msg_RemoveFriendPush>;\r\n    private _friendOnlineTimeMsg: Array<proto.Msg_UpdateFriendOnlineTime>;\r\n    private _friendPowerScoreMsg: Array<proto.Msg_UpdatFriendPowerScore>;\r\n    public giftListMsg: proto.Msg_SyncGiftList;\r\n    purge(): void {\r\n        // this._friendMap.clear();\r\n        // this._applyMap.clear();\r\n        // this._blackMap.clear();\r\n        // this._recommendMap.clear();\r\n\r\n    }\r\n\r\n    private static _instance: FriendData;\r\n    public static get ins() {\r\n        if (null == this._instance) {\r\n            this._instance = new FriendData();\r\n        }\r\n        return this._instance;\r\n    }\r\n    /**\r\n     * 好友map\r\n     */\r\n    get friendMap() {\r\n        if (!this._friendMap) {\r\n            this._friendMap = new Map();\r\n        }\r\n        return this._friendMap;\r\n    }\r\n\r\n    /**\r\n     * 申请添加好友map\r\n     */\r\n    get applyMap() {\r\n        if (!this._applyMap) {\r\n            this._applyMap = new Map();\r\n        }\r\n        return this._applyMap;\r\n    }\r\n    /**\r\n     * 黑名单\r\n     */\r\n    get blackMap() {\r\n        if (!this._blackMap) {\r\n            this._blackMap = new Map();\r\n        }\r\n        return this._blackMap;\r\n    }\r\n    /**\r\n     * 推荐好友map\r\n     */\r\n    get recommendMap() {\r\n        if (!this._recommendMap) {\r\n            this._recommendMap = new Map();\r\n        }\r\n        return this._recommendMap;\r\n    }\r\n    /**\r\n     * 待移除的好友数据\r\n     */\r\n    private get removeFiendMsg() {\r\n        if (!this._removeFiendMsg) {\r\n            this._removeFiendMsg = [];\r\n        }\r\n        return this._removeFiendMsg;\r\n    }\r\n\r\n    /**\r\n     * 待处理的更新用户离线时间消息\r\n     */\r\n    private get friendOnlineTimeMsg() {\r\n        if (!this._friendOnlineTimeMsg) {\r\n            this._friendOnlineTimeMsg = [];\r\n        }\r\n        return this._friendOnlineTimeMsg;\r\n    }\r\n    /**\r\n     * 待处理的更新用户战力消息\r\n     */\r\n    private get friendPowerScoreMsg() {\r\n        if (!this._friendPowerScoreMsg) {\r\n            this._friendPowerScoreMsg = [];\r\n        }\r\n        return this._friendPowerScoreMsg;\r\n    }\r\n    initFrendData(msg: proto.Msg_GetFriendSimpleRoleRsp) {\r\n        if (msg.type == proto.FriendListType.FriendList) {\r\n            this.isInitMyFirend = true;\r\n            let list = msg.list;\r\n            for (let key in list) {\r\n                let info = new SimpleRoleInfo();\r\n                info.merge(list[key]);\r\n                this.friendMap.set(info.id, info);\r\n                info.type = proto.FriendListType.FriendList;\r\n                this.setGiftState(info);\r\n            }\r\n            this.handleCacheData(this.friendMap, msg.type);\r\n            RedMgr.refreshEvent(RedDotType.FriendValueReceive);\r\n        } else if (msg.type == proto.FriendListType.BlackList) {\r\n            this.isInitBlack = true;\r\n            let list = msg.list;\r\n            for (let key in list) {\r\n                let info = new SimpleRoleInfo();\r\n                info.merge(list[key]);\r\n                this.blackMap.set(info.id, info);\r\n                info.type = proto.FriendListType.BlackList;\r\n            }\r\n            this.handleCacheData(this.blackMap, msg.type);\r\n        } else if (msg.type == proto.FriendListType.ApplyList) {\r\n            this.isInitApply = true;\r\n            let list = msg.list;\r\n            for (let key in list) {\r\n                let info = new SimpleRoleInfo();\r\n                info.merge(list[key]);\r\n                this.applyMap.set(info.id, info);\r\n                info.type = proto.FriendListType.ApplyList;\r\n            }\r\n            this.handleCacheData(this.applyMap, msg.type);\r\n            RedMgr.refreshEvent(RedDotType.FriendApply);\r\n        }\r\n\r\n    }\r\n    initRecommendFriendData(list: proto.ISimpleRole[]) {\r\n        this.recommendMap.clear();\r\n        for (let key in list) {\r\n            let info = new SimpleRoleInfo();\r\n            info.merge(list[key]);\r\n            this.recommendMap.set(info.id, info);\r\n        }\r\n        this.isInitRecommend = true;\r\n    }\r\n    addFriendInfo(msg: proto.Msg_AddFriendPush) {\r\n        if (msg.type == proto.FriendListType.FriendList) {\r\n            let info = this.friendMap.get(msg.role.id);\r\n            if (info) {\r\n                info.merge(msg.role);\r\n            } else {\r\n                info = new SimpleRoleInfo();\r\n                info.merge(msg.role);\r\n                this.friendMap.set(info.id, info);\r\n                this.setGiftState(info);\r\n            }\r\n            info.type = proto.FriendListType.FriendList;\r\n        } else if (msg.type == proto.FriendListType.BlackList) {\r\n            let info = this.blackMap.get(msg.role.id);\r\n            if (info) {\r\n                info.merge(msg.role);\r\n            } else {\r\n                info = new SimpleRoleInfo();\r\n                info.merge(msg.role);\r\n                this.blackMap.set(info.id, info);\r\n            }\r\n            info.type = proto.FriendListType.BlackList;\r\n        } else if (msg.type == proto.FriendListType.ApplyList) {\r\n            let info = this.applyMap.get(msg.role.id);\r\n            if (info) {\r\n                info.merge(msg.role);\r\n            } else {\r\n                info = new SimpleRoleInfo();\r\n                info.merge(msg.role);\r\n                this.applyMap.set(info.id, info);\r\n            }\r\n            info.type = proto.FriendListType.ApplyList;\r\n            RedMgr.refreshEvent(RedDotType.FriendApply);\r\n        }\r\n        RedMgr.refreshEvent(RedDotType.FriendValueReceive);\r\n\r\n    }\r\n    setGiftState(info: SimpleRoleInfo) {\r\n        if (this.giftListMsg) {\r\n            let index = this.giftListMsg.givingList.indexOf(info.id);\r\n            info.isGiveGift = index >= 0;\r\n            let idx = this.giftListMsg.recvList.indexOf(info.id);\r\n            if (idx >= 0) {\r\n                info.receiveGiftState = 2;\r\n            } else {\r\n                idx = this.giftListMsg.giftList.indexOf(info.id);\r\n                if (idx >= 0) {\r\n                    info.receiveGiftState = 1;\r\n                } else {\r\n                    info.receiveGiftState = 0;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * 赠与礼物成功\r\n     */\r\n    givingGiftSucc(roleIds: string[]) {\r\n        if (this.giftListMsg) {\r\n            for (let key in roleIds) {\r\n                let idx = this.giftListMsg.givingList.indexOf(roleIds[key]);\r\n                if (idx < 0) {\r\n                    this.giftListMsg.givingList.push(roleIds[key]);\r\n                }\r\n                let info = this.friendMap.get(roleIds[key]);\r\n                if (info) {\r\n                    info.isGiveGift = true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * 领取礼物成功\r\n     * @param roleIds \r\n     */\r\n    receiveGiftSucc(roleIds: proto.IRecvGiftResult[]) {\r\n        if (this.giftListMsg) {\r\n            for (let key in roleIds) {\r\n                if (!roleIds[key].error || roleIds[key].error.code == proto.CommonErrorCode.Succeed) {\r\n                    let idx = this.giftListMsg.recvList.indexOf(roleIds[key].roleId);\r\n                    if (idx < 0) {\r\n                        this.giftListMsg.recvList.push(roleIds[key].roleId);\r\n                    }\r\n                    let info = this.friendMap.get(roleIds[key].roleId);\r\n                    if (info) {\r\n                        info.receiveGiftState = 2;\r\n                    }\r\n                    let index = this.giftListMsg.giftList.indexOf(roleIds[key].roleId);\r\n                    if (index >= 0) {\r\n                        this.giftListMsg.giftList.splice(index, 1);\r\n                    }\r\n                } else {\r\n                    log(\"领取礼物错误=====\", roleIds[key])\r\n                }\r\n\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * 收到好友送礼物\r\n     */\r\n    giftPush(roleId: string) {\r\n        if (this.giftListMsg) {\r\n            let index = this.giftListMsg.giftList.indexOf(roleId);\r\n            if (index < 0) {\r\n                this.giftListMsg.giftList.push(roleId);\r\n            }\r\n            let info = this.friendMap.get(roleId);\r\n            if (info) {\r\n                info.receiveGiftState = 1;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * 处理前端提前收到的数据消息\r\n     */\r\n    private handleCacheData(map: Map<string, SimpleRoleInfo>, type: proto.FriendListType) {\r\n        if (this.removeFiendMsg.length > 0) {\r\n            let remove = [];\r\n            for (let key in this.removeFiendMsg) {\r\n                if (this.removeFiendMsg[key].type == type) {\r\n                    let roleId = this.removeFiendMsg[key].roleId;\r\n                    if (map.has(roleId)) {\r\n                        map.delete(roleId);\r\n                        remove.push(this.removeFiendMsg[key]);\r\n                    }\r\n                }\r\n\r\n            }\r\n            if (remove.length > 0) {\r\n                for (let key in remove) {\r\n                    let index = this.removeFiendMsg.indexOf(remove[key]);\r\n                    if (index >= 0) {\r\n                        this.removeFiendMsg.splice(index, 1);\r\n                    }\r\n                }\r\n            }\r\n            remove = null;\r\n        }\r\n\r\n        if (this.friendOnlineTimeMsg.length > 0) {\r\n            let remove = [];\r\n            for (let key in this.friendOnlineTimeMsg) {\r\n                let roleId = this.friendOnlineTimeMsg[key].roleId;\r\n                let info = map.get(roleId);\r\n                if (info) {\r\n                    info.offlineTime = this.friendOnlineTimeMsg[key].offlineTime;\r\n                    remove.push(this.friendOnlineTimeMsg[key]);\r\n                }\r\n            }\r\n            if (remove.length > 0) {\r\n                for (let key in remove) {\r\n                    let index = this.friendOnlineTimeMsg.indexOf(remove[key]);\r\n                    if (index >= 0) {\r\n                        this.friendOnlineTimeMsg.splice(index, 1);\r\n                    }\r\n                }\r\n            }\r\n            remove = null;\r\n        }\r\n\r\n        if (this.friendPowerScoreMsg.length > 0) {\r\n            let remove = [];\r\n            for (let key in this.friendPowerScoreMsg) {\r\n                let roleId = this.friendPowerScoreMsg[key].roleId;\r\n                let info = map.get(roleId);\r\n                if (info) {\r\n                    info.powerScore = this.friendPowerScoreMsg[key].powerScore;\r\n                    remove.push(this.friendPowerScoreMsg[key]);\r\n                }\r\n            }\r\n            if (remove.length > 0) {\r\n                for (let key in remove) {\r\n                    let index = this.friendPowerScoreMsg.indexOf(remove[key]);\r\n                    if (index >= 0) {\r\n                        this.friendPowerScoreMsg.splice(index, 1);\r\n                    }\r\n                }\r\n            }\r\n            remove = null;\r\n        }\r\n    }\r\n    removeFiendInfo(msg: proto.Msg_RemoveFriendPush) {\r\n        if (msg.type == proto.FriendListType.FriendList) {\r\n            if (this.friendMap.has(msg.roleId)) {\r\n                this.friendMap.delete(msg.roleId);\r\n            } else {\r\n                this.removeFiendMsg.push(msg);\r\n            }\r\n\r\n        } else if (msg.type == proto.FriendListType.BlackList) {\r\n            if (this.blackMap.has(msg.roleId)) {\r\n                this.blackMap.delete(msg.roleId);\r\n            } else {\r\n                this.removeFiendMsg.push(msg);\r\n            }\r\n        } else if (msg.type == proto.FriendListType.ApplyList) {\r\n            if (this.applyMap.has(msg.roleId)) {\r\n                this.applyMap.delete(msg.roleId);\r\n            } else {\r\n                this.removeFiendMsg.push(msg);\r\n            }\r\n            RedMgr.refreshEvent(RedDotType.FriendApply);\r\n        }\r\n        RedMgr.refreshEvent(RedDotType.FriendValueReceive);\r\n    }\r\n\r\n    updateFriendOnlineTime(msg: proto.Msg_UpdateFriendOnlineTime) {\r\n        let info = this.getSimpleRoleInfoByRoleID(msg.roleId);\r\n        if (info) {\r\n            info.offlineTime = msg.offlineTime;\r\n        } else {\r\n            this.friendOnlineTimeMsg.push(msg);\r\n        }\r\n    }\r\n\r\n    updatFriendPowerScore(msg: proto.Msg_UpdatFriendPowerScore) {\r\n        let info = this.getSimpleRoleInfoByRoleID(msg.roleId);\r\n        if (info) {\r\n            info.powerScore = msg.powerScore;\r\n        } else {\r\n            this.friendPowerScoreMsg.push(msg);\r\n        }\r\n    }\r\n    getSimpleRoleInfoByRoleID(roleId: string) {\r\n        if (this.friendMap.has(roleId)) {\r\n            return this.friendMap.get(roleId);\r\n        }\r\n        if (this.blackMap.has(roleId)) {\r\n            return this.blackMap.get(roleId);\r\n        }\r\n        if (this.applyMap.has(roleId)) {\r\n            return this.applyMap.get(roleId);\r\n        }\r\n        return null;\r\n    }\r\n    getRecommendInfos() {\r\n        return Array.from(this.recommendMap.values());\r\n    }\r\n    getMyFreindInfos() {\r\n        return Array.from(this.friendMap.values());\r\n    }\r\n    getApplyInfos() {\r\n        return Array.from(this.applyMap.values());\r\n    }\r\n    getBlackInfos() {\r\n        return Array.from(this.blackMap.values());\r\n    }\r\n    getMyFriendNum() {\r\n        return this.friendMap.size;\r\n    }\r\n    getReceiveGiftNum() {\r\n        if (this.giftListMsg) {\r\n            return this.giftListMsg.recvList.length;\r\n        }\r\n        return 0;\r\n    }\r\n    getGiveGiftNum() {\r\n        if (this.giftListMsg) {\r\n            return this.giftListMsg.givingList.length;\r\n        }\r\n        return 0;\r\n    }\r\n    getNotReceiveGiftNum() {\r\n        if (this.giftListMsg) {\r\n            if (this.giftListMsg.recvList.length >= tab.getData().GetKeyValue_ConfigTable().GiftRecvMaxCount) {\r\n                return 0\r\n            }\r\n            let myFreind = this.getMyFreindInfos();\r\n            if (myFreind.length > 0) {\r\n                let len = 0;\r\n                for (let key in this.giftListMsg.giftList) {\r\n                    let id = this.giftListMsg.giftList[key];\r\n                    if (myFreind.findIndex(a => a.id == id) >= 0) {\r\n                        len++;\r\n                    }\r\n\r\n                }\r\n                return len;\r\n            } else {\r\n                return 0;\r\n            }\r\n\r\n\r\n        }\r\n        return 0;\r\n    }\r\n\r\n\r\n}"]}