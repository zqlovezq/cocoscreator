{"version":3,"sources":["file:///C:/chickenStarClient/client/assets/scripts/logic/guide/GuideDialogue.ts"],"names":["_decorator","AudioClip","AudioSource","Component","Node","RichText","Sprite","Vec3","EventMgr","LocalEvent","tab","LangMgr","LoadResAsync","ccclass","property","GuideDialogue","m_HideCallback","m_AutoHide","soundId","canHide","start","onLocal","HideDialogue","hide","setDialogude","id","callback","self","node","on","EventType","TOUCH_START","event","targetOff","dialogueTab","getData","GuideDialogueTableById","getValue","leftNode","getChildByName","rightNode","active","showNode","IsLeft","node_block","pos","getPosition","setPosition","x","PosX","y","PosY","richTextLbl","getComponent","string","getLab","setTexture","Head","Sound","soundTD","SoundTableById","console","error","undefined","Path","then","audioClip","guide_audio","clip","play","stop","DoCallback","removeFromParent","destroy"],"mappings":"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","sourcesContent":["import { _decorator, AudioClip, AudioSource, Component, Node, RichText, Sprite, Vec3 } from 'cc';\r\nimport { EventMgr } from '../mgr/EventMgr';\r\nimport { LocalEvent } from '../define/LocalEvent';\r\nimport { tab } from '../../Table/table_gen';\r\nimport { LangMgr } from '../mgr/LangMgr';\r\nimport Sound, { PlaySound } from '../utils/Sound';\r\nimport { LoadResAsync } from '../mgr/ResMgr';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('GuideDialogue')\r\nexport class GuideDialogue extends Component {\r\n    @property(Node)\r\n    node_block: Node = null;\r\n    @property(AudioSource)\r\n    guide_audio:AudioSource = null;\r\n    protected m_HideCallback: Function;\r\n    protected m_AutoHide: boolean = true;\r\n    private soundId: number = 0;\r\n    private canHide:boolean = false;\r\n    start() {\r\n        EventMgr.onLocal(LocalEvent.HideDialogue, () => {\r\n            this.hide()\r\n        }, this)\r\n    }\r\n    setDialogude(id: string, callback?: Function) {\r\n        var self = this;\r\n        this.canHide = true;\r\n        if (callback) {\r\n            this.node.on(Node.EventType.TOUCH_START, (event: Event) => {\r\n                this.hide();\r\n            }, this)\r\n        } else {\r\n            this.node.targetOff(this.node);\r\n        }\r\n        // 通过id获取tab列表\r\n        const dialogueTab = tab.getData().GuideDialogueTableById.getValue(id);\r\n        this.m_HideCallback = callback;\r\n        const leftNode = this.node.getChildByName(\"left_node\");\r\n        const rightNode = this.node.getChildByName(\"right_node\");\r\n        leftNode.active = false;\r\n        rightNode.active = false;\r\n        const showNode: Node = dialogueTab.IsLeft ? leftNode : rightNode;\r\n        this.node_block.active = false;\r\n        const pos = showNode.getPosition();\r\n        showNode.setPosition(new Vec3(pos.x + dialogueTab.PosX, pos.y + dialogueTab.PosY, 0))\r\n        showNode.active = true;\r\n        const richTextLbl = showNode.getChildByName(\"bg\").getChildByName(\"RichText\").getComponent(RichText);\r\n        richTextLbl.string = LangMgr.getLab(id);\r\n        showNode.getChildByName(\"img\").getComponent(Sprite).setTexture(dialogueTab.Head);\r\n        if(dialogueTab.Sound){\r\n            let soundTD = tab.getData().SoundTableById.getValue(dialogueTab.Sound);\r\n            if (!soundTD) {\r\n                console.error(\"cannot found sound:\" + dialogueTab.Sound)\r\n                return undefined;\r\n            }\r\n            if(soundTD.Path){\r\n                LoadResAsync(soundTD.Path, AudioClip).then(audioClip => {\r\n                    if(self.canHide){\r\n                        this.guide_audio.clip = audioClip;\r\n                        this.guide_audio.play();\r\n                    }\r\n                })\r\n            }\r\n        }\r\n    }\r\n    protected hide() {\r\n        this.canHide = false;\r\n        this.guide_audio.stop();\r\n        this.DoCallback()\r\n        this.node.removeFromParent()\r\n        this.node.destroy();\r\n    }\r\n    protected DoCallback() {\r\n        if (this.m_HideCallback) {\r\n            let callback = this.m_HideCallback;\r\n            this.m_HideCallback = null;\r\n            callback();\r\n        }\r\n    }\r\n}\r\n\r\n\r\n"]}