{"version":3,"sources":["file:///C:/chickenStarClient/client/node_modules/protobufjs/src/index-light.js"],"names":["_cjsLoader","_req","__cjsMetaURL","_req0","_req1","_req2","_req3","_req4","_req5","_req6","_req7","_req8","_req9","_req10","_req11","_req12","_req13","_req14","_req15","_req16","_req17","url","define","exports","require","module","__filename","__dirname","protobuf","build","load","filename","root","callback","Root","loadSync","encoder","decoder","verifier","converter","ReflectionObject","Namespace","Enum","Type","Field","OneOf","MapField","Service","Method","Message","wrappers","types","util","_configure","_cjsExports"],"mappings":"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","sourcesContent":["import _cjsLoader from 'cce:/internal/ml/cjs-loader.mjs';\nimport { __cjsMetaURL as _req} from './index-minimal';\nimport { __cjsMetaURL as _req0} from './encoder';\nimport { __cjsMetaURL as _req1} from './decoder';\nimport { __cjsMetaURL as _req2} from './verifier';\nimport { __cjsMetaURL as _req3} from './converter';\nimport { __cjsMetaURL as _req4} from './object';\nimport { __cjsMetaURL as _req5} from './namespace';\nimport { __cjsMetaURL as _req6} from './root';\nimport { __cjsMetaURL as _req7} from './enum';\nimport { __cjsMetaURL as _req8} from './type';\nimport { __cjsMetaURL as _req9} from './field';\nimport { __cjsMetaURL as _req10} from './oneof';\nimport { __cjsMetaURL as _req11} from './mapfield';\nimport { __cjsMetaURL as _req12} from './service';\nimport { __cjsMetaURL as _req13} from './method';\nimport { __cjsMetaURL as _req14} from './message';\nimport { __cjsMetaURL as _req15} from './wrappers';\nimport { __cjsMetaURL as _req16} from './types';\nimport { __cjsMetaURL as _req17} from './util';\nlet _cjsExports;\nconst __cjsMetaURL = import.meta.url;\n_cjsLoader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {\n// #region ORIGINAL CODE\n\n\n \"use strict\";\n var protobuf = module.exports = require(\"./index-minimal\");\n\n protobuf.build = \"light\";\n\n /**\n  * A node-style callback as used by {@link load} and {@link Root#load}.\n  * @typedef LoadCallback\n  * @type {function}\n  * @param {Error|null} error Error, if any, otherwise `null`\n  * @param {Root} [root] Root, if there hasn't been an error\n  * @returns {undefined}\n  */\n\n /**\n  * Loads one or multiple .proto or preprocessed .json files into a common root namespace and calls the callback.\n  * @param {string|string[]} filename One or multiple files to load\n  * @param {Root} root Root namespace, defaults to create a new one if omitted.\n  * @param {LoadCallback} callback Callback function\n  * @returns {undefined}\n  * @see {@link Root#load}\n  */\n function load(filename, root, callback) {\n     if (typeof root === \"function\") {\n         callback = root;\n         root = new protobuf.Root();\n     } else if (!root)\n         root = new protobuf.Root();\n     return root.load(filename, callback);\n }\n\n /**\n  * Loads one or multiple .proto or preprocessed .json files into a common root namespace and calls the callback.\n  * @name load\n  * @function\n  * @param {string|string[]} filename One or multiple files to load\n  * @param {LoadCallback} callback Callback function\n  * @returns {undefined}\n  * @see {@link Root#load}\n  * @variation 2\n  */\n // function load(filename:string, callback:LoadCallback):undefined\n\n /**\n  * Loads one or multiple .proto or preprocessed .json files into a common root namespace and returns a promise.\n  * @name load\n  * @function\n  * @param {string|string[]} filename One or multiple files to load\n  * @param {Root} [root] Root namespace, defaults to create a new one if omitted.\n  * @returns {Promise<Root>} Promise\n  * @see {@link Root#load}\n  * @variation 3\n  */\n // function load(filename:string, [root:Root]):Promise<Root>\n\n protobuf.load = load;\n\n /**\n  * Synchronously loads one or multiple .proto or preprocessed .json files into a common root namespace (node only).\n  * @param {string|string[]} filename One or multiple files to load\n  * @param {Root} [root] Root namespace, defaults to create a new one if omitted.\n  * @returns {Root} Root namespace\n  * @throws {Error} If synchronous fetching is not supported (i.e. in browsers) or if a file's syntax is invalid\n  * @see {@link Root#loadSync}\n  */\n function loadSync(filename, root) {\n     if (!root)\n         root = new protobuf.Root();\n     return root.loadSync(filename);\n }\n\n protobuf.loadSync = loadSync;\n\n // Serialization\n protobuf.encoder          = require(\"./encoder\");\n protobuf.decoder          = require(\"./decoder\");\n protobuf.verifier         = require(\"./verifier\");\n protobuf.converter        = require(\"./converter\");\n\n // Reflection\n protobuf.ReflectionObject = require(\"./object\");\n protobuf.Namespace        = require(\"./namespace\");\n protobuf.Root             = require(\"./root\");\n protobuf.Enum             = require(\"./enum\");\n protobuf.Type             = require(\"./type\");\n protobuf.Field            = require(\"./field\");\n protobuf.OneOf            = require(\"./oneof\");\n protobuf.MapField         = require(\"./mapfield\");\n protobuf.Service          = require(\"./service\");\n protobuf.Method           = require(\"./method\");\n\n // Runtime\n protobuf.Message          = require(\"./message\");\n protobuf.wrappers         = require(\"./wrappers\");\n\n // Utility\n protobuf.types            = require(\"./types\");\n protobuf.util             = require(\"./util\");\n\n // Set up possibly cyclic reflection dependencies\n protobuf.ReflectionObject._configure(protobuf.Root);\n protobuf.Namespace._configure(protobuf.Type, protobuf.Service, protobuf.Enum);\n protobuf.Root._configure(protobuf.Type);\n protobuf.Field._configure(protobuf.Type);\n\n\n// #endregion ORIGINAL CODE\n\n_cjsExports = module.exports;\n\n\n}, () => ({\n  './index-minimal': _req,\n  './encoder': _req0,\n  './decoder': _req1,\n  './verifier': _req2,\n  './converter': _req3,\n  './object': _req4,\n  './namespace': _req5,\n  './root': _req6,\n  './enum': _req7,\n  './type': _req8,\n  './field': _req9,\n  './oneof': _req10,\n  './mapfield': _req11,\n  './service': _req12,\n  './method': _req13,\n  './message': _req14,\n  './wrappers': _req15,\n  './types': _req16,\n  './util': _req17,\n}));\nexport { _cjsExports as default };\nexport { __cjsMetaURL }\n"]}