{"version":3,"sources":["file:///C:/chickenStarClient/client/assets/scripts/framework/base/ViewBase.ts"],"names":["_decorator","BlockInputEvents","Color","Layers","Node","Sprite","tween","UITransform","Vec3","view","UIMgr","Func","ComponentBase","ccclass","property","ViewBase","displayName","type","grayNode","openData","onLoad","isBlockInput","registerBlockInput","onDestroy","ins","releaseView","node","name","onShow","close","nodeName","hideView","setOpenData","obj","rewriteData","blockInputNode","layer","Enum","UI_2D","uitrans","addComponent","setContentSize","getDesignResolutionSize","addChild","cocosNodeZIndex","loadShow","loadAction","loadGrayMask","call","showAction","to","scale","start","getVisibleSize","showGray","spr","sizeMode","SizeMode","CUSTOM","setTexture","color","closeWhenClickEmpty","scheduleOnce","once","EventType","TOUCH_END","onClose","active"],"mappings":"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","sourcesContent":["import { _decorator, BlockInputEvents, Button, Color, Component, director, instantiate, Layers, Node, Prefab, ResolutionPolicy, Sprite, tween, UITransform, Vec3, view } from 'cc';\nimport { UIMgr } from '../../logic/mgr/UIMgr';\nimport { IEvent } from './IAbs';\nimport { Func } from '../../logic/utils/Func';\nimport { EventMgr } from '../../logic/mgr/EventMgr';\nimport { ComponentBase } from './ComponentBase';\nconst { ccclass, property } = _decorator;\n\n\n@ccclass('ViewBase')\nexport class ViewBase extends ComponentBase implements IEvent {\n    @property({ displayName: '防止输入穿透到下层节点' })\n    isBlockInput: boolean = true\n\n    @property({ displayName: '是否点击空白处关闭' })\n    closeWhenClickEmpty: boolean = true\n\n    @property({ displayName: '是否播放弹出动画' })\n    showAction: boolean = true\n\n    @property({ type: 0, displayName: '是否有黑背景' })\n    showGray: boolean = true;\n    grayNode: Node\n\n    public openData: any\n    protected onLoad(): void {\n        super.onLoad()\n        if (this.isBlockInput) {\n            this.registerBlockInput()\n        }\n    }\n\n    protected onDestroy(): void {\n        super.onDestroy()\n        UIMgr.ins.releaseView(this.node.name)\n    }\n\n    /**\n     * 初始方法\n     * @param obj \n     */\n    onShow() {\n\n    }\n\n    protected close() {\n        let nodeName = this.node.name\n\n        UIMgr.ins.hideView(nodeName)\n    }\n\n    /**\n     * 设置界面打开数据\n     * @param obj \n     */\n    setOpenData(obj: any) {\n        this.openData = obj\n        if (obj) {\n            this.rewriteData()\n        }\n    }\n    rewriteData() {\n        // throw new Error(\"Method not implemented.\");\n    }\n\n    registerBlockInput() {\n\n        let blockInputNode = new Node(\"BlockInputNode\")\n        blockInputNode.layer = Layers.Enum.UI_2D\n        let uitrans = blockInputNode.addComponent(UITransform)\n        blockInputNode.addComponent(BlockInputEvents)\n        uitrans.setContentSize(view.getDesignResolutionSize())\n        this.node.addChild(blockInputNode)\n        Func.cocosNodeZIndex(blockInputNode, -3)\n    }\n\n\n\n    loadShow(): void {\n        this.loadAction(() => {\n            this.loadGrayMask()\n        })\n    }\n    loadAction(call: Function) {\n        if (this.showAction) {\n            tween(this.node)\n                .to(0.12, { scale: new Vec3(1.1, 1.1, 1.1) })\n                .to(0.06, { scale: new Vec3(1, 1, 1) })\n                .call(() => {\n                    call()\n                })\n                .start()\n        } else {\n            call()\n        }\n    }\n\n    loadGrayMask() {\n        this.grayNode = new Node(\"GrayNode\")\n        this.grayNode.layer = Layers.Enum.UI_2D\n        let uitrans = this.grayNode.addComponent(UITransform)\n        uitrans.setContentSize(view.getVisibleSize())\n\n        this.node.addChild(this.grayNode)\n        Func.cocosNodeZIndex(this.grayNode, -2)\n        if (this.showGray) {\n            let spr = this.grayNode.addComponent(Sprite)\n            spr.sizeMode = Sprite.SizeMode.CUSTOM\n            spr.setTexture(\"textrue/bg_1\")\n            spr.color = new Color(0, 0, 0, 150)\n        }\n        if (this.closeWhenClickEmpty) {\n            this.scheduleOnce(() => {\n                this.grayNode.once(Node.EventType.TOUCH_END, () => {\n                    this.onClose()\n                }, this)\n            }, 0.05)\n        }\n    }\n\n    onClose() {\n        if (this.showAction) {\n            this.grayNode ? this.grayNode.active = false : false\n            tween(this.node)\n                .to(0.06, { scale: new Vec3(1.1, 1.1, 1.1) })\n                .to(0.03, { scale: new Vec3(0.5, 0.5, 0.5) })\n                .call(() => {\n                    this.close()\n                })\n                .start()\n        } else {\n            this.close()\n        }\n        // this.close()\n    }\n}\n\n"]}