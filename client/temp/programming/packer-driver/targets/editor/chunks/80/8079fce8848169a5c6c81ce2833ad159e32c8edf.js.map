{"version":3,"sources":["file:///C:/chickenStarClient/client/assets/scripts/framework/collision/CollisionObject.ts"],"names":["CCInteger","Color","Component","Layers","Node","PhysicsSystem","Rect","Size","Sprite","TransformBit","Vec3","_decorator","ccenum","UITransform","ColliderMgr","ShapeType","CollisionBox","CollisionSphere","CollisionArc","Func","MathAngle","ccclass","property","Trigger","Dirty","CollisionObject","group","tooltip","type","PhysicsGroup","visible","Box","Arc","agent","ignoreTrigger","speed","angle","voAngle","voRatio","isDirty","RTS","shape","body","isRecycle","bobyGraphics","onLoad","reset","setIgnoreTrigger","velocity","x","y","value","isIgnoreTrigger","isDestroy","isRemove","initBoby","center","size","Sphere","radius","arcAngle","arcHeading","initGraphics","inst","create","isAgent","priority","neighborDist","maxRadius","maxVelocity","mask","instance","collisionMatrix","insert","updateGroup","_group","setPosition","position","node","T","updatePostion","setRotation","rotation","R","setAngle","addAngle","updateDirty","setScale","scale","S","setAnchor","anchor","c0","c1","uts","getComponent","anchorPoint","s","contentSize","width","height","getRotation","getPosition","getScale","remove","retrieve","setColor","color","init","onTrigger","b","trigger","enter","stay","exit","hasChangeDirty","flag","hasChangedFlags","POSITION","ROTATION","SCALE","NON","onDestroy","unscheduleAllCallbacks","recycle","setTrigger","insertFrame","updateFrame","dt","removeFrame","lateUpdateFrame","getVoAngle","getVoRatio","setVelocityAndRatio","ve","ratio","setVelocity","directionToAngle","multiplyScalar","set","setVelocityAngle","angleToDirection","velocityFlip","z","rect","drawRect","RED","layer","drawCircle","drawArc","def_node","getChildByName","Enum","DEFAULT","addChild","spr","addComponent","sizeMode","SizeMode","CUSTOM","BLACK","setTexture","setContentSize","preCollider","lateCollider"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,S,OAAAA,S;AAAWC,MAAAA,K,OAAAA,K;AAAOC,MAAAA,S,OAAAA,S;AAAqBC,MAAAA,M,OAAAA,M;AAAQC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,a,OAAAA,a;AAAqBC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,M,OAAAA,M;AAAQC,MAAAA,Y,OAAAA,Y;AAAoBC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,U,OAAAA,U;AAAYC,MAAAA,M,OAAAA,M;AAGpIC,MAAAA,W,OAAAA,W;;AADAC,MAAAA,W,iBAAAA,W;;AAEAC,MAAAA,S,iBAAAA,S;AAA2BC,MAAAA,Y,iBAAAA,Y;AAAcC,MAAAA,e,iBAAAA,e;AAAiBC,MAAAA,Y,iBAAAA,Y;;AAC1DC,MAAAA,I,iBAAAA,I;;AAEAC,MAAAA,S,iBAAAA,S;;;;;;;;;;;OAKH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBX,U;;yBAElBY,O,0BAAAA,O;AAAAA,QAAAA,O,CAAAA,O;AAAAA,QAAAA,O,CAAAA,O;AAAAA,QAAAA,O,CAAAA,O;AAAAA,QAAAA,O,CAAAA,O;eAAAA,O;;;AAQX;;uBAGWC,K,0BAAAA,K;AAAAA,QAAAA,K,CAAAA,K;AAAAA,QAAAA,K,CAAAA,K;AAAAA,QAAAA,K,CAAAA,K;AAAAA,QAAAA,K,CAAAA,K;AAAAA,QAAAA,K,CAAAA,K;AAAAA,QAAAA,K,CAAAA,K;eAAAA,K;;;AAOX;AAEDZ,MAAAA,MAAM;AAAA;AAAA,iCAAN;;iCAEaa,e,WADZJ,OAAO,CAAC,iBAAD,C,UAGHC,QAAQ,CAAC;AAAEI,QAAAA,KAAK,EAAE,eAAT;AAA0BC,QAAAA,OAAO,EAAE;AAAnC,OAAD,C,UAGRL,QAAQ,CAAC;AAAEM,QAAAA,IAAI,EAAEvB,aAAa,CAACwB,YAAtB;AAAoCH,QAAAA,KAAK,EAAE;AAA3C,OAAD,C,UAGRJ,QAAQ,CAAC;AAAEM,QAAAA,IAAI;AAAA;AAAA,kCAAN;AAAmBF,QAAAA,KAAK,EAAE;AAA1B,OAAD,C,UAGRJ,QAAQ,CAAC;AAAEI,QAAAA,KAAK,EAAE;AAAT,OAAD,C,UAGRJ,QAAQ,CAAC;AAAEI,QAAAA,KAAK,EAAE,OAAT;;AAAkBI,QAAAA,OAAO,GAAG;AAAE,iBAAO,KAAKF,IAAL,IAAa;AAAA;AAAA,sCAAUG,GAA9B;AAAoC;;AAAlE,OAAD,C,UAGRT,QAAQ,CAAC;AAAEI,QAAAA,KAAK,EAAE,OAAT;;AAAkBI,QAAAA,OAAO,GAAG;AAAE,iBAAO,KAAKF,IAAL,IAAa;AAAA;AAAA,sCAAUG,GAA9B;AAAoC;;AAAlE,OAAD,C,UAGRT,QAAQ,CAAC;AAAEI,QAAAA,KAAK,EAAE,OAAT;;AAAkBI,QAAAA,OAAO,GAAG;AAAE,iBAAO,KAAKF,IAAL,IAAa;AAAA;AAAA,sCAAUI,GAA9B;AAAoC;;AAAlE,OAAD,C,UAERV,QAAQ,CAAC;AAAEI,QAAAA,KAAK,EAAE,OAAT;;AAAkBI,QAAAA,OAAO,GAAG;AAAE,iBAAO,KAAKF,IAAL,IAAa;AAAA;AAAA,sCAAUI,GAA9B;AAAoC;;AAAlE,OAAD,C,WAGRV,QAAQ,CAAC;AAAEI,QAAAA,KAAK,EAAE;AAAT,OAAD,C,WAGRJ,QAAQ,CAAC;AAAEM,QAAAA,IAAI,EAAE5B,SAAR;AAAmB0B,QAAAA,KAAK,EAAE,OAA1B;;AAAmCI,QAAAA,OAAO,GAAG;AAAE,iBAAO,KAAKG,KAAZ;AAAoB;;AAAnE,OAAD,C,WAGRX,QAAQ,CAAC;AAAEI,QAAAA,KAAK,EAAE,OAAT;;AAAkBI,QAAAA,OAAO,GAAG;AAAE,iBAAO,KAAKG,KAAZ;AAAoB;;AAAlD,OAAD,C,WAGRX,QAAQ,CAAC;AAAEI,QAAAA,KAAK,EAAE,OAAT;;AAAkBI,QAAAA,OAAO,GAAG;AAAE,iBAAO,KAAKG,KAAZ;AAAoB;;AAAlD,OAAD,C,WAQRX,QAAQ,CAACZ,IAAD,C,2BA3Cb,MACae,eADb,SACqCvB,SADrC,CACiE;AAAA;AAAA;;AAAA;;AAGnC;AAHmC;;AAMjB;AANiB;;AAS5B;AAT4B;;AAYjC;AAZiC;;AAepC;AAfoC;;AAkBzC;AAlByC;;AAqBvC;AArBuC;;AAuBrC;AAvBqC;;AA0BrC;AA1BqC;;AA6BvC;AA7BuC;;AAgCtC;AAhCsC;;AAmCpC;AAnCoC,eAqC7DgC,aArC6D,GAqCpC,KArCoC;AAqC/B;AAE9B;AAvC6D,eAwC7DC,KAxC6D,GAwC7C,CAxC6C;AAwC1C;AAxC0C,eAyC7DC,KAzC6D,GAyC7C,CAzC6C;;AAyC1C;AAzC0C;;AA2ChC;AA3CgC,eA4C7DC,OA5C6D,GA4C3C,CA5C2C;AA4CzC;AA5CyC,eA6C7DC,OA7C6D,GA6C3C,CA7C2C;AA6CzC;AA7CyC,eA+C7DC,OA/C6D,GA+C5Cf,KAAK,CAACgB,GA/CsC;AAAA,eAgD7DC,KAhD6D,GAgDrC,IAhDqC;AAAA,eAiD7DC,IAjD6D,GAiDvC,IAjDuC;AAAA,eAkD7DC,SAlD6D,GAkDxC,KAlDwC;AAAA,eAmD7DC,YAnD6D;AAAA;;AAqD7DC,QAAAA,MAAM,GAAG,CAER;;AAEDC,QAAAA,KAAK,GAAG;AACJ,eAAKC,gBAAL,CAAsB,KAAtB;AACA,eAAKC,QAAL,CAAcC,CAAd,GAAkB,CAAlB;AACA,eAAKD,QAAL,CAAcE,CAAd,GAAkB,CAAlB;AACA,eAAKb,OAAL,GAAe,CAAf;AACA,eAAKC,OAAL,GAAe,CAAf;AACA,eAAKI,IAAL,GAAY,IAAZ;AACH;;AAEDK,QAAAA,gBAAgB,CAACI,KAAD,EAAiB;AAC7B,eAAKjB,aAAL,GAAqBiB,KAArB;;AACA,cAAI,KAAKT,IAAT,EAAe;AACX,iBAAKA,IAAL,CAAUU,eAAV,GAA4B,KAAKlB,aAAjC;AACH;AACJ;;AAEDmB,QAAAA,SAAS,GAAG;AACR,iBAAO,KAAKV,SAAL,IAAmB,KAAKD,IAAL,IAAa,KAAKA,IAAL,CAAUY,QAAjD;AACH;;AAEDC,QAAAA,QAAQ,GAAG;AACP;AACA,kBAAQ,KAAK3B,IAAb;AACI,iBAAK;AAAA;AAAA,wCAAUG,GAAf;AACI,mBAAKU,KAAL,GAAa;AAAA;AAAA,gDAAiB,KAAKe,MAAtB,EAA8B,KAAKC,IAAnC,CAAb;AACA;;AACJ,iBAAK;AAAA;AAAA,wCAAUC,MAAf;AACI,mBAAKjB,KAAL,GAAa;AAAA;AAAA,sDAAoB,KAAKe,MAAzB,EAAiC,KAAKG,MAAtC,CAAb;AACA;;AACJ,iBAAK;AAAA;AAAA,wCAAU3B,GAAf;AACI,mBAAKS,KAAL,GAAa;AAAA;AAAA,gDAAiB,KAAKe,MAAtB,EAA8B,KAAKG,MAAnC,EAA2C,KAAKC,QAAhD,EAA0D,KAAKC,UAA/D,CAAb;AACA;AATR;;AAWA,eAAKC,YAAL,GAbO,CAeP;;AACA,eAAKpB,IAAL,GAAY;AAAA;AAAA,0CAAYqB,IAAZ,CAAiBC,MAAjB,CAAwB,IAAxB,CAAZ;AAGA,eAAKtB,IAAL,CAAUD,KAAV,GAAkB,KAAKA,KAAvB,CAnBO,CAmBuB;;AAC9B,eAAKC,IAAL,CAAUhB,KAAV,GAAkB,KAAKA,KAAvB,CApBO,CAoBuB;;AAC9B,eAAKgB,IAAL,CAAUuB,OAAV,GAAoB,KAAKhC,KAAzB,CArBO,CAqByB;;AAChC,eAAKS,IAAL,CAAUwB,QAAV,GAAqB,KAAKA,QAA1B,CAtBO,CAsB6B;;AACpC,eAAKxB,IAAL,CAAUyB,YAAV,GAAyB,KAAKC,SAA9B,CAvBO,CAuBkC;;AACzC,eAAK1B,IAAL,CAAU2B,WAAV,GAAwB,KAAKA,WAA7B,CAxBO,CAwBmC;;AAC1C,eAAK3B,IAAL,CAAU4B,IAAV,GAAiBjE,aAAa,CAACkE,QAAd,CAAuBC,eAAvB,CAAuC,KAAK9C,KAA5C,CAAjB,CAzBO,CA2BP;;AACA;AAAA;AAAA,0CAAYqC,IAAZ,CAAiBU,MAAjB,CAAwB,KAAK/B,IAA7B;AAEA,eAAKH,OAAL,GAAef,KAAK,CAACgB,GAArB,CA9BO,CA8BqB;AAC/B;AAGD;;;AACAkC,QAAAA,WAAW,CAACC,MAAD,EAAyB;AAChC,eAAKjD,KAAL,GAAarB,aAAa,CAACwB,YAAd,CAA2B8C,MAA3B,CAAb;;AACA,cAAI,KAAKjC,IAAT,EAAe;AACX,iBAAKA,IAAL,CAAUhB,KAAV,GAAkB,KAAKA,KAAvB;AACA,iBAAKgB,IAAL,CAAU4B,IAAV,GAAiBjE,aAAa,CAACkE,QAAd,CAAuBC,eAAvB,CAAuC,KAAK9C,KAA5C,CAAjB;AACH;AACJ,SAtH4D,CAwH7D;;;AACAkD,QAAAA,WAAW,CAACC,QAAD,EAAiB;AACxB,eAAKC,IAAL,CAAUD,QAAV,GAAqBA,QAArB;AACA,eAAKtC,OAAL,IAAgBf,KAAK,CAACuD,CAAtB;AACH;;AAEDC,QAAAA,aAAa,GAAG;AACZ,eAAKzC,OAAL,IAAgBf,KAAK,CAACgB,GAAtB;AACH,SAhI4D,CAkI7D;;;AACAyC,QAAAA,WAAW,CAACC,QAAD,EAAiB;AACxB,eAAKJ,IAAL,CAAUI,QAAV,GAAqBA,QAArB;AACA,eAAK3C,OAAL,IAAgBf,KAAK,CAAC2D,CAAtB;AACH;;AAEDC,QAAAA,QAAQ,CAAChD,KAAD,EAAgB;AACpB,eAAK0C,IAAL,CAAU1C,KAAV,GAAkBA,KAAlB;AACA,eAAKG,OAAL,IAAgBf,KAAK,CAAC2D,CAAtB;AACH;;AAEDE,QAAAA,QAAQ,CAACjD,KAAD,EAAgB;AACpB,eAAKgD,QAAL,CAAc,KAAKN,IAAL,CAAU1C,KAAV,GAAkBA,KAAhC;AACH;;AAIDkD,QAAAA,WAAW,GAAG;AACV,eAAK/C,OAAL,IAAgBf,KAAK,CAAC2D,CAAtB;AACH,SArJ4D,CAuJ7D;;;AACAI,QAAAA,QAAQ,CAACC,KAAD,EAAc;AAClB,eAAKV,IAAL,CAAUU,KAAV,GAAkBA,KAAlB;AACA,eAAKjD,OAAL,IAAgBf,KAAK,CAACiE,CAAtB;AACH,SA3J4D,CA6J7D;;;AACAC,QAAAA,SAAS,CAACC,MAAD,EAAe;AAEpB,cAAIC,EAAE,GAAG,KAAKpC,MAAd;AACA,cAAIqC,EAAE,GAAG,KAAKpD,KAAL,CAAWe,MAApB;AACA,cAAIsC,GAAG,GAAG,KAAKhB,IAAL,CAAUiB,YAAV,CAAuBlF,WAAvB,CAAV;;AACA,cAAIiF,GAAJ,EAAS;AACLA,YAAAA,GAAG,CAACE,WAAJ,GAAkBL,MAAlB;AAEA,gBAAIM,CAAC,GAAGH,GAAG,CAACI,WAAZ;AACAL,YAAAA,EAAE,CAAC5C,CAAH,GAAO,CAAC,MAAM0C,MAAM,CAAC1C,CAAd,IAAmBgD,CAAC,CAACE,KAArB,GAA6BP,EAAE,CAAC3C,CAAvC;AACA4C,YAAAA,EAAE,CAAC3C,CAAH,GAAO,CAAC,MAAMyC,MAAM,CAACzC,CAAd,IAAmB+C,CAAC,CAACG,MAArB,GAA8BR,EAAE,CAAC1C,CAAxC;AAEA,iBAAKX,OAAL,IAAgBf,KAAK,CAACuD,CAAtB;AACH;AACJ;;AAEDsB,QAAAA,WAAW,GAAG;AAAE,iBAAO,KAAKvB,IAAL,CAAUI,QAAjB;AAA4B;;AAC5CoB,QAAAA,WAAW,GAAG;AAAE,iBAAO,KAAKxB,IAAL,CAAUD,QAAjB;AAA4B;;AAC5C0B,QAAAA,QAAQ,GAAG;AAAE,iBAAO,KAAKzB,IAAL,CAAUU,KAAjB;AAAyB,SAhLuB,CAkL7D;;;AACAgB,QAAAA,MAAM,CAACC,QAAiB,GAAG,IAArB,EAA2B;AAE7B;AACA;AAAA;AAAA,0CAAY1C,IAAZ,CAAiByC,MAAjB,CAAwB,KAAK9D,IAA7B,EAAmC+D,QAAnC;AACA,iBAAO,KAAK3B,IAAZ;AACH,SAxL4D,CA0L7D;;;AACAL,QAAAA,MAAM,GAAG;AACL;AACA;AAAA;AAAA,0CAAYV,IAAZ,CAAiBU,MAAjB,CAAwB,KAAK/B,IAA7B,EAAmC,IAAnC;AACH;;AAEDgE,QAAAA,QAAQ,CAACC,KAAD,EAAe,CAAG;;AAC1BC,QAAAA,IAAI,GAAG,CAAG,CAjMmD,CAmM7D;AACA;;;AACAC,QAAAA,SAAS,CAACC,CAAD,EAASC,OAAT,EAAuB;AAE5B,kBAAQA,OAAR;AACI,iBAAKxF,OAAO,CAACyF,KAAb;AACI;AACA;;AACJ,iBAAKzF,OAAO,CAAC0F,IAAb;AACI;AACA;;AACJ,iBAAK1F,OAAO,CAAC2F,IAAb;AACI;AACA;AATR;AAWH;;AAEDC,QAAAA,cAAc,GAAG;AACb,cAAI5E,OAAO,GAAG,KAAKA,OAAnB;AACA,cAAI6E,IAAI,GAAG,KAAKtC,IAAL,CAAUuC,eAArB;;AACA,cAAID,IAAJ,EAAU;AACN,gBAAIA,IAAI,GAAG3G,YAAY,CAAC6G,QAAxB,EAAkC/E,OAAO,IAAIf,KAAK,CAACuD,CAAjB;AAClC,gBAAIqC,IAAI,GAAG3G,YAAY,CAAC8G,QAAxB,EAAkChF,OAAO,IAAIf,KAAK,CAAC2D,CAAjB;AAClC,gBAAIiC,IAAI,GAAG3G,YAAY,CAAC+G,KAAxB,EAA+BjF,OAAO,IAAIf,KAAK,CAACiE,CAAjB;AAClC;;AAED,eAAKlD,OAAL,GAAef,KAAK,CAACiG,GAArB;AAEA,iBAAOlF,OAAP;AACH;;AAEDmF,QAAAA,SAAS,GAAG;AAER,eAAKC,sBAAL;AACA,eAAKlF,KAAL,GAAa,IAAb;AACA,eAAKC,IAAL,GAAY,IAAZ;AAEH;AAED;;;AACAkF,QAAAA,OAAO,GAAG;AACN,eAAKC,UAAL,CAAgB,KAAhB;AACA,eAAKrB,MAAL,CAAY,IAAZ;AACH;;AAEDqB,QAAAA,UAAU,CAACd,OAAD,EAAmB;AACzB,eAAKA,OAAL,GAAeA,OAAf;AACH;;AAEDe,QAAAA,WAAW,GAAG,CAEb;;AAEDC,QAAAA,WAAW,CAACC,EAAD,EAAa,CAEvB;;AAEDC,QAAAA,WAAW,GAAS,CACnB;;AAEDC,QAAAA,eAAe,GAAS,CACvB;;AAEDC,QAAAA,UAAU,GAAW;AACjB,iBAAO,KAAK9F,OAAZ;AACH;;AAED+F,QAAAA,UAAU,GAAW;AACjB,iBAAO,KAAK9F,OAAZ;AACH;;AAED+F,QAAAA,mBAAmB,CAACC,EAAD,EAAWC,KAAX,EAA0B;AACzC,eAAKjG,OAAL,GAAeiG,KAAf;AACA,eAAKC,WAAL,CAAiBF,EAAjB;AACH;;AAEDE,QAAAA,WAAW,CAACF,EAAD,EAAW;AAClB,eAAKjG,OAAL,GAAe;AAAA;AAAA,sCAAUoG,gBAAV,CAA2BH,EAA3B,CAAf;AACAA,UAAAA,EAAE,CAACI,cAAH,CAAkB,KAAKvG,KAAL,GAAa,KAAKG,OAApC;AACA,eAAKU,QAAL,CAAc2F,GAAd,CAAkBL,EAAlB;AACH;;AAEDM,QAAAA,gBAAgB,CAACxG,KAAD,EAAgB;AAC5B,eAAKC,OAAL,GAAeD,KAAf;AACA;AAAA;AAAA,sCAAUyG,gBAAV,CAA2BzG,KAA3B,EAAkC,KAAKY,QAAvC;AACA,eAAKA,QAAL,CAAc0F,cAAd,CAA6B,KAAKvG,KAAL,GAAa,KAAKG,OAA/C;AACH;;AAEDwG,QAAAA,YAAY,GAAG;AACX,eAAK9F,QAAL,CAAcC,CAAd,GAAkB,CAAC,KAAKD,QAAL,CAAcC,CAAjC;AACA,eAAKD,QAAL,CAAcE,CAAd,GAAkB,CAAC,KAAKF,QAAL,CAAcE,CAAjC;AACA,eAAKqC,QAAL,CAAc,IAAI7E,IAAJ,CAAS,CAAC,CAAD,GAAK,KAAK6F,QAAL,GAAgBtD,CAA9B,EAAiC,KAAKsD,QAAL,GAAgBrD,CAAjD,EAAoD,KAAKqD,QAAL,GAAgBwC,CAApE,CAAd;AACH;;AACDjF,QAAAA,YAAY,GAAG;AACX;AACA,kBAAQ,KAAKlC,IAAb;AACI,iBAAK;AAAA;AAAA,wCAAUG,GAAf;AACI,kBAAIiH,IAAI,GAAG,IAAI1I,IAAJ,CAAS,KAAKkD,MAAL,CAAYP,CAAZ,GAAgB,KAAKQ,IAAL,CAAUR,CAAV,GAAc,CAAvC,EAA0C,KAAKO,MAAL,CAAYN,CAAZ,GAAgB,KAAKO,IAAL,CAAUP,CAAV,GAAc,CAAxE,EAA2E,KAAKO,IAAL,CAAUR,CAArF,EAAwF,KAAKQ,IAAL,CAAUP,CAAlG,CAAX,CADJ,CAEI;;AACA,mBAAKN,YAAL,GAAoB;AAAA;AAAA,gCAAKqG,QAAL,CAAcD,IAAd,EAAoB,KAAKlE,IAAzB,EAA+B7E,KAAK,CAACiJ,GAArC,EAA0C,KAAKpE,IAAL,CAAUqE,KAApD,EAA2D,KAAKvG,YAAhE,CAApB;AACA;;AACJ,iBAAK;AAAA;AAAA,wCAAUc,MAAf;AACI,mBAAKd,YAAL,GAAoB;AAAA;AAAA,gCAAKwG,UAAL,CAAgB,KAAKzF,MAArB,EAA6B,KAAKH,MAAlC,EAA0C,KAAKsB,IAA/C,EAAqD7E,KAAK,CAACiJ,GAA3D,EAAgE,KAAKpE,IAAL,CAAUqE,KAA1E,EAAiF,KAAKvG,YAAtF,CAApB;AACA;;AACJ,iBAAK;AAAA;AAAA,wCAAUZ,GAAf;AACI,mBAAKY,YAAL,GAAoB;AAAA;AAAA,gCAAKyG,OAAL,CAAa,KAAK1F,MAAlB,EAA0B,KAAKC,QAA/B,EAAyC,CAAzC,EAA4C,KAAKkB,IAAjD,EAAuD7E,KAAK,CAACiJ,GAA7D,EAAkE,KAAKpE,IAAL,CAAUqE,KAA5E,EAAmF,KAAKvG,YAAxF,CAApB;AACA,mBAAKwC,QAAL,CAAc,KAAKvB,UAAnB;AACA;AAZR;;AAeA,cAAIyF,QAAQ,GAAG,KAAKxE,IAAL,CAAUyE,cAAV,CAAyB,UAAzB,CAAf;;AACA,cAAID,QAAQ,IAAI,IAAhB,EAAsB;AAClBA,YAAAA,QAAQ,GAAG,IAAIlJ,IAAJ,CAAS,UAAT,CAAX;AACAkJ,YAAAA,QAAQ,CAACH,KAAT,GAAiBhJ,MAAM,CAACqJ,IAAP,CAAYC,OAA7B;AACA,iBAAK3E,IAAL,CAAU4E,QAAV,CAAmBJ,QAAnB;AACA,gBAAIK,GAAG,GAAGL,QAAQ,CAACM,YAAT,CAAsBpJ,MAAtB,CAAV;AACAmJ,YAAAA,GAAG,CAACE,QAAJ,GAAerJ,MAAM,CAACsJ,QAAP,CAAgBC,MAA/B;AACAJ,YAAAA,GAAG,CAAChD,KAAJ,GAAY1G,KAAK,CAAC+J,KAAlB;AACAL,YAAAA,GAAG,CAACM,UAAJ,CAAe,cAAf;AACAN,YAAAA,GAAG,CAAC5D,YAAJ,CAAiBlF,WAAjB,EAA8BqJ,cAA9B,CAA6C,IAAI3J,IAAJ,CAAS,EAAT,EAAa,CAAb,CAA7C;AACH;AACJ;;AAED4J,QAAAA,WAAW,GAAG,CAEb;;AACDC,QAAAA,YAAY,GAAG,CAEd;;AAnU4D,O;;;;;iBAG1C,K;;;;;;;iBAGX/J,aAAa,CAACwB,YAAd,CAA2B4H,O;;;;;;;iBAGjB;AAAA;AAAA,sCAAU1H,G;;;;;;;iBAGb,IAAIrB,IAAJ,E;;;;;;;iBAGF,IAAIA,IAAJ,E;;;;;;;iBAGI,C;;;;;;;iBAGE,C;;;;;;;iBAEE,C;;;;;;;iBAGJ,K;;;;;;;iBAGE,C;;;;;;;iBAGC,C;;;;;;;iBAGE,C;;;;;;;iBAQL,IAAIA,IAAJ,E","sourcesContent":["import { CCInteger, Color, Component, Graphics, Layers, Node, PhysicsSystem, Quat, Rect, Size, Sprite, TransformBit, Vec2, Vec3, _decorator, ccenum, v3 } from 'cc';\nimport { CollisionBody } from './CollisionBody';\nimport { ColliderMgr } from './ColliderMgr';\nimport { UITransform } from 'cc';\nimport { ShapeType, CollisionShape, CollisionBox, CollisionSphere, CollisionArc } from './CollisionShape';\nimport { Func } from '../../logic/utils/Func';\nimport { IFrame } from '../../logic/fight/base/frame/IFrame';\nimport { MathAngle } from './Maths';\nimport { CocosUtil } from '../../logic/utils/CocosUtil';\nimport Fixed from './Fixed';\nimport { IReset } from '../base/IAbs';\nimport { CollisionGroup } from '../../logic/fight/define/FightDefine';\nconst { ccclass, property } = _decorator;\n\nexport enum Trigger {\n    default = 0,\n    /** 碰撞 */\n    enter = 1,\n    /** 持续 */\n    stay = 2,\n    /** 离开 */\n    exit = 3,\n};\n\n\nexport enum Dirty {\n    R = 1,\n    T = 2,\n    S = 4,\n    RTS = 7,\n    RS = R | S,\n    NON = 0,\n};\n\nccenum(ShapeType)\n@ccclass('CollisionObject')\nexport class CollisionObject extends Component implements IFrame {\n\n    @property({ group: \"CollisionBody\", tooltip: \"碰撞开关\" })\n    trigger: boolean = false; //碰撞开关\n\n    @property({ type: PhysicsSystem.PhysicsGroup, group: \"CollisionBody\" })\n    group = PhysicsSystem.PhysicsGroup.DEFAULT; //碰撞分组\n\n    @property({ type: ShapeType, group: \"Shape\" })\n    type: ShapeType = ShapeType.Box; //相交形状类型\n\n    @property({ group: \"Shape\" })\n    center: Vec3 = new Vec3();  //偏移位置，是shape相对node节点的中心偏移\n\n    @property({ group: \"Shape\", visible() { return this.type == ShapeType.Box; } })\n    size: Vec3 = new Vec3(); //方块的长宽高\n\n    @property({ group: \"Shape\", visible() { return this.type != ShapeType.Box; } })\n    radius: number = 0; //半径，sphere 或者 capsule\n\n    @property({ group: \"Shape\", visible() { return this.type == ShapeType.Arc; } })\n    arcAngle: number = 0; //扇形开口角度\n    @property({ group: \"Shape\", visible() { return this.type == ShapeType.Arc; } })\n    arcHeading: number = 0; //扇形指向\n\n    @property({ group: \"Agent\" })\n    agent: boolean = false; //Agent开关\n\n    @property({ type: CCInteger, group: \"Agent\", visible() { return this.agent; } })\n    priority: number = 0; //Agent避让优先级,越大优先级越高\n\n    @property({ group: \"Agent\", visible() { return this.agent; } })\n    maxRadius: number = 0; //Agent碰撞半径,小于等于物体体积\n\n    @property({ group: \"Agent\", visible() { return this.agent; } })\n    maxVelocity: number = 0; //Agent最大速度,小于等于物体速度\n\n    ignoreTrigger: boolean = false//忽略碰撞\n\n    //常用变量\n    speed: number = 0; //最大速度\n    angle: number = 0; //旋转角度\n    @property(Vec3)\n    velocity: Vec3 = new Vec3(); //当前速度\n    voAngle: number = 0 //vo角度\n    voRatio: number = 1 //vo比例\n\n    isDirty: Dirty = Dirty.RTS;\n    shape: CollisionShape = null;\n    body: CollisionBody = null;\n    isRecycle: boolean = false\n    bobyGraphics: Graphics\n\n    onLoad() {\n\n    }\n\n    reset() {\n        this.setIgnoreTrigger(false)\n        this.velocity.x = 0\n        this.velocity.y = 0\n        this.voAngle = 0\n        this.voRatio = 1\n        this.body = null\n    }\n\n    setIgnoreTrigger(value: boolean) {\n        this.ignoreTrigger = value\n        if (this.body) {\n            this.body.isIgnoreTrigger = this.ignoreTrigger\n        }\n    }\n\n    isDestroy() {\n        return this.isRecycle || (this.body && this.body.isRemove)\n    }\n\n    initBoby() {\n        //创建碰撞形状\n        switch (this.type) {\n            case ShapeType.Box:\n                this.shape = new CollisionBox(this.center, this.size);\n                break;\n            case ShapeType.Sphere:\n                this.shape = new CollisionSphere(this.center, this.radius);\n                break;\n            case ShapeType.Arc:\n                this.shape = new CollisionArc(this.center, this.radius, this.arcAngle, this.arcHeading);\n                break\n        }\n        this.initGraphics()\n\n        //创建碰撞body容器\n        this.body = ColliderMgr.inst.create(this);\n\n\n        this.body.shape = this.shape; //绑定碰撞形状\n        this.body.group = this.group; //碰撞分组掩码\n        this.body.isAgent = this.agent; // agent 检测开关\n        this.body.priority = this.priority; // agent 避让优先级\n        this.body.neighborDist = this.maxRadius; // agent 体积半径\n        this.body.maxVelocity = this.maxVelocity; // agent 最大速度\n        this.body.mask = PhysicsSystem.instance.collisionMatrix[this.group];\n\n        //把body加入碰撞管理\n        ColliderMgr.inst.insert(this.body);\n\n        this.isDirty = Dirty.RTS;   //首次更新标记\n    }\n\n\n    /** 更新碰撞分组 */\n    updateGroup(_group: CollisionGroup) {\n        this.group = PhysicsSystem.PhysicsGroup[_group]\n        if (this.body) {\n            this.body.group = this.group\n            this.body.mask = PhysicsSystem.instance.collisionMatrix[this.group];\n        }\n    }\n\n    //同步位置到body\n    setPosition(position: Vec3) {\n        this.node.position = position;\n        this.isDirty |= Dirty.T;\n    }\n\n    updatePostion() {\n        this.isDirty |= Dirty.RTS;\n    }\n\n    //同步旋转到body\n    setRotation(rotation: Quat) {\n        this.node.rotation = rotation;\n        this.isDirty |= Dirty.R;\n    }\n\n    setAngle(angle: number) {\n        this.node.angle = angle\n        this.isDirty |= Dirty.R;\n    }\n\n    addAngle(angle: number) {\n        this.setAngle(this.node.angle + angle)\n    }\n\n\n\n    updateDirty() {\n        this.isDirty |= Dirty.R;\n    }\n\n    //同步缩放到body\n    setScale(scale: Vec3) {\n        this.node.scale = scale;\n        this.isDirty |= Dirty.S;\n    }\n\n    //设置瞄点，2D专用\n    setAnchor(anchor: Vec2) {\n\n        let c0 = this.center;\n        let c1 = this.shape.center;\n        let uts = this.node.getComponent(UITransform);\n        if (uts) {\n            uts.anchorPoint = anchor;\n\n            let s = uts.contentSize;\n            c1.x = (0.5 - anchor.x) * s.width + c0.x;\n            c1.y = (0.5 - anchor.y) * s.height + c0.y;\n\n            this.isDirty |= Dirty.T;\n        }\n    }\n\n    getRotation() { return this.node.rotation; }\n    getPosition() { return this.node.position; }\n    getScale() { return this.node.scale; }\n\n    //删除当前节点\n    remove(retrieve: boolean = true) {\n\n        //移除body, retrieve: 是否回收body ？\n        ColliderMgr.inst.remove(this.body, retrieve);\n        return this.node;\n    }\n\n    //重新添加到碰撞管理器\n    insert() {\n        //插入body, 强制更新body数据\n        ColliderMgr.inst.insert(this.body, true);\n    }\n\n    setColor(color: Color) { }\n    init() { }\n\n    //trigger 回调 enter,stay exit\n    //CollisionBody /Trigger\n    onTrigger(b: any, trigger: any) {\n\n        switch (trigger) {\n            case Trigger.enter:\n                //onTriggerEnter();\n                break;\n            case Trigger.stay:\n                //onTriggerStay();\n                break;\n            case Trigger.exit:\n                //onTriggerExit();\n                break;\n        }\n    }\n\n    hasChangeDirty() {\n        let isDirty = this.isDirty\n        let flag = this.node.hasChangedFlags;\n        if (flag) {\n            if (flag & TransformBit.POSITION) isDirty |= Dirty.T;\n            if (flag & TransformBit.ROTATION) isDirty |= Dirty.R;\n            if (flag & TransformBit.SCALE) isDirty |= Dirty.S;\n        }\n\n        this.isDirty = Dirty.NON;\n\n        return isDirty;\n    }\n\n    onDestroy() {\n\n        this.unscheduleAllCallbacks();\n        this.shape = null;\n        this.body = null;\n\n    }\n\n    /** 回收 */\n    recycle() {\n        this.setTrigger(false)\n        this.remove(true)\n    }\n\n    setTrigger(trigger: boolean) {\n        this.trigger = trigger\n    }\n\n    insertFrame() {\n\n    }\n\n    updateFrame(dt: number) {\n\n    }\n\n    removeFrame(): void {\n    }\n\n    lateUpdateFrame(): void {\n    }\n\n    getVoAngle(): number {\n        return this.voAngle\n    }\n\n    getVoRatio(): number {\n        return this.voRatio\n    }\n\n    setVelocityAndRatio(ve: Vec3, ratio: number) {\n        this.voRatio = ratio\n        this.setVelocity(ve)\n    }\n\n    setVelocity(ve: Vec3) {\n        this.voAngle = MathAngle.directionToAngle(ve)\n        ve.multiplyScalar(this.speed * this.voRatio)\n        this.velocity.set(ve)\n    }\n\n    setVelocityAngle(angle: number) {\n        this.voAngle = angle\n        MathAngle.angleToDirection(angle, this.velocity)\n        this.velocity.multiplyScalar(this.speed * this.voRatio)\n    }\n\n    velocityFlip() {\n        this.velocity.x = -this.velocity.x\n        this.velocity.y = -this.velocity.y\n        this.setScale(new Vec3(-1 * this.getScale().x, this.getScale().y, this.getScale().z))\n    }\n    initGraphics() {\n        //创建碰撞形状\n        switch (this.type) {\n            case ShapeType.Box:\n                let rect = new Rect(this.center.x - this.size.x / 2, this.center.y - this.size.y / 2, this.size.x, this.size.y)\n                // let rect = new Rect(this.center.x, this.center.y - this.size.y / 2, this.size.x, this.size.y)\n                this.bobyGraphics = Func.drawRect(rect, this.node, Color.RED, this.node.layer, this.bobyGraphics)\n                break;\n            case ShapeType.Sphere:\n                this.bobyGraphics = Func.drawCircle(this.radius, this.center, this.node, Color.RED, this.node.layer, this.bobyGraphics)\n                break;\n            case ShapeType.Arc:\n                this.bobyGraphics = Func.drawArc(this.radius, this.arcAngle, 0, this.node, Color.RED, this.node.layer, this.bobyGraphics)\n                this.setAngle(this.arcHeading)\n                break\n        }\n\n        let def_node = this.node.getChildByName(\"def_node\")\n        if (def_node == null) {\n            def_node = new Node(\"def_node\")\n            def_node.layer = Layers.Enum.DEFAULT\n            this.node.addChild(def_node)\n            let spr = def_node.addComponent(Sprite)\n            spr.sizeMode = Sprite.SizeMode.CUSTOM\n            spr.color = Color.BLACK\n            spr.setTexture(\"textrue/bg_1\")\n            spr.getComponent(UITransform).setContentSize(new Size(50, 5))\n        }\n    }\n\n    preCollider() {\n\n    }\n    lateCollider() {\n\n    }\n}\n\n"]}