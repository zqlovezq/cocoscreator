{"version":3,"sources":["file:///C:/chickenStarClient/client/assets/scripts/logic/model/association/AssociationDonatePop.ts"],"names":["_decorator","Button","Label","Node","Sprite","ViewPop","AssociationData","CommonItem","tab","AssociationControl","ItemInfo","EventMgr","proto","CommonTipsPop","ShowItemNotEnoughTips","RoleData","LangMgr","ccclass","property","AssociationDonatePop","_maxRemainSignCount","_itemCount","_curCostDiamond","onShow","refreshSignView","onDestroy","register","onMsg","Ptl","SignGuildRsp","on_s2c_SignGuildRsp","unRegister","guildInfo","ins","getAssocitionInfo","signCount","signTimes","maxSignCount","getData","GuildSignInTable","length","guildSignTab","GuildSignInTableById","getValue","lbl_remain_time","string","node_sign","getComponent","interactable","grayscale","award","itemId","RewardItemIds","num","RewardCount","common_item","initData","updateLbl","onClickSign","CostCount","reqSignGuild","tipsStr","getCombineString","create","val","diamond","clickAdd","clickSub","clickMax","lbl_num","String","node_free","active","node_cost","totalCount","i","SignInCostDiamond","lbl_cost_diamon","msg","error","code","CommonErrorCode","Succeed"],"mappings":"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","sourcesContent":["import { _decorator, Button, Component, Label, Node, Sprite } from 'cc';\r\nimport { ViewPop } from '../../../framework/base/ViewPop';\r\nimport { AssociationData } from './AssociationData';\r\nimport { CommonItem } from '../item/CommonItem';\r\nimport { tab } from '../../../Table/table_gen';\r\nimport { AssociationControl } from './AssociationControl';\r\nimport { ItemInfo } from '../item/ItemInfo';\r\nimport { EventMgr } from '../../mgr/EventMgr';\r\nimport { proto } from 'client_protocol';\r\nimport { CommonTipsPop } from '../common/CommonTipsPop';\r\nimport { ShowItemNotEnoughTips } from '../../mgr/UIMgr';\r\nimport { RoleData } from '../role/RoleData';\r\nimport { LangMgr } from '../../mgr/LangMgr';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('AssociationDonatePop')\r\nexport class AssociationDonatePop extends ViewPop {\r\n    @property(CommonItem)\r\n    common_item: CommonItem = null;\r\n    @property(Node)\r\n    node_free: Node = null;\r\n    @property(Node)\r\n    node_cost = null;\r\n    @property(Label)\r\n    lbl_remain_time: Label = null;\r\n    @property(Label)\r\n    lbl_cost_diamon: Label = null;\r\n    @property(Label)\r\n    lbl_num: Label = null;\r\n    @property(Node)\r\n    node_sign: Node = null;\r\n    private _maxRemainSignCount: number = 0;\r\n    private _itemCount: number = 0;\r\n    private _curCostDiamond:number = 0;\r\n    onShow(): void {\r\n        this.refreshSignView();\r\n    }\r\n    protected onDestroy(): void {\r\n        super.onDestroy();\r\n    }\r\n    register(): void {\r\n        /* 监听公会签到 */\r\n        EventMgr.onMsg(proto.Ptl.SignGuildRsp, this.on_s2c_SignGuildRsp, this);\r\n    }\r\n    unRegister(): void {\r\n        super.unRegister();\r\n    }\r\n    /* 签到信息 */\r\n    refreshSignView() {\r\n        // 当前签到次数\r\n        const guildInfo = AssociationData.ins.getAssocitionInfo();\r\n        const signCount = guildInfo.signTimes;\r\n        // 根据签到次数显示item\r\n        const maxSignCount = tab.getData().GuildSignInTable.length\r\n        const guildSignTab = tab.getData().GuildSignInTableById.getValue(signCount + 1 > maxSignCount ? maxSignCount : signCount + 1);\r\n        this._maxRemainSignCount = maxSignCount - signCount;\r\n        this.lbl_remain_time.string = this._maxRemainSignCount + \"/\" + maxSignCount;\r\n        if (this._maxRemainSignCount > 0) {\r\n            this._itemCount = 1;\r\n        } else {\r\n            this.node_sign.getComponent(Button).interactable = false;\r\n            this.node_sign.getComponent(Sprite).grayscale = true;\r\n        }\r\n        const award = new ItemInfo();\r\n        award.itemId = guildSignTab.RewardItemIds[0];\r\n        award.num = guildSignTab.RewardCount[0];\r\n        this.common_item.initData(award);\r\n        this.updateLbl();\r\n    }\r\n    onClickSign() {\r\n        let CostCount = this._curCostDiamond;\r\n        if(CostCount===0){\r\n            AssociationControl.ins.reqSignGuild(this._itemCount);\r\n            return\r\n        }\r\n        const tipsStr = LangMgr.getCombineString(\"ui_association_3\", [ CostCount,this._itemCount]);\r\n        CommonTipsPop.create(tipsStr, ((val) => {\r\n            if (val) {\r\n                if (RoleData.ins.diamond < CostCount) {\r\n                    ShowItemNotEnoughTips(1);\r\n                } else {\r\n                    AssociationControl.ins.reqSignGuild(this._itemCount);\r\n                }\r\n            }\r\n        }))\r\n    }\r\n    private clickAdd() {\r\n        this._itemCount++;\r\n        if (this._itemCount > this._maxRemainSignCount) {\r\n            this._itemCount = this._maxRemainSignCount;\r\n        }\r\n        this.updateLbl();\r\n    }\r\n    // sub碎片\r\n    private clickSub() {\r\n        this._itemCount--;\r\n        if (this._maxRemainSignCount >= 1 && this._itemCount < 1) {\r\n            this._itemCount = 1;\r\n        }\r\n        if (this._itemCount < 0) {\r\n            this._itemCount = 0;\r\n        }\r\n        this.updateLbl();\r\n    }\r\n    // max碎片\r\n    private clickMax() {\r\n        this._itemCount = this._maxRemainSignCount;\r\n        this.updateLbl();\r\n    }\r\n    updateLbl() {\r\n        this.lbl_num.string = String(this._itemCount);\r\n        this.node_free.active = false;\r\n        this.node_cost.active = false;\r\n        const guildInfo = AssociationData.ins.getAssocitionInfo();\r\n        const signCount = guildInfo.signTimes;\r\n        let totalCount = 0\r\n        for (let i = signCount + 1; i <= signCount + this._itemCount; i++) {\r\n            const guildSignTab = tab.getData().GuildSignInTableById.getValue(i);\r\n            if(guildSignTab){\r\n                totalCount += guildSignTab.SignInCostDiamond;\r\n            }\r\n        }\r\n        if(totalCount===0){\r\n            this.node_free.active = true;\r\n        }else{\r\n            this.node_cost.active = true;\r\n            this.lbl_cost_diamon.string = String(totalCount);\r\n        }\r\n        this._curCostDiamond = totalCount;\r\n    }\r\n    on_s2c_SignGuildRsp(msg: proto.Msg_SignGuildRsp) {\r\n        if (msg.error && msg.error.code != proto.CommonErrorCode.Succeed) return;\r\n        this.refreshSignView();\r\n    }\r\n}\r\n\r\n\r\n"]}