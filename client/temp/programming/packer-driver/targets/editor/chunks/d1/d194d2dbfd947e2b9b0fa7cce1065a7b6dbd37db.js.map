{"version":3,"sources":["file:///C:/chickenStarClient/client/assets/scripts/logic/fight/base/obj/role/role/RoleInfo.ts"],"names":["_decorator","AbsRoleInfo","tab","Func","EventMgr","FightEvent","SkillControl","SkillGroupCd","ccclass","property","RoleInfo","constructor","abs","configTab","heroStarTab","heroFightInfo","rogueAttr","Map","posIndex","skillGroupCDMap","holdTimeTrigger","set","AttackType","AttackType_Attack","AttackType_ActionAttack","init","reset","length","setHeroInfo","hero","setConfigId","itemId","setAttrList","attrList","attrData","star","index","skillList","v","skill","skillPowers","createTypeAnyId","PowerType","PowerType_SkillTable","addTakeSkill","iterator","setAbsInfo","id","setConfigTab","getData","HeroTableById","getValue","forBy2","HeroStarUpTable","skillGroupMap","createSkillGroup","SkillGroupIds","sysnHeroAddAttackCount","console","log","normalGroupCD","get","weaponeGroupCD","inSkillGroupCD","skillType","cb","inCd","resetTestGroupId","switchSkillGroup","updateFrame","dt","_weaponeGroup","isCDing","isAudo","useWeaponSkill","targetPos","weaponeGroup","isDead","isActive","nowSkill","isInCD","checkSkillGroupUse","ins","useSkillTarget","useSkillBullet","subAttackByType","emitFight","Skill_Attack_Count_Change","configId","checkSkillCD","inWeaponeCd","fillUp","onLevelUp","lastLv","lv","level","levelUpEffect","Role_Level_Up","isHeroClassWarrior","Class","HeroClass","HeroClass_Warrior","isHeroClass","heroClass","subNormalAttack","count","normalGroup","normalFillUp","addNormalAttackCount","skillGroup","Role_change_SkillGroup","attrChange","attrType","value","AttrType","AttrType_AttackNum","setHeroAttackCount","getAttr","addEffect","effectTab","Parameters","addLevelEffect","levelEffects","push","removeEffect","remove","indexOf","upLv","num","addAttr","EffectType","upCount","refreshHoldTime","onBorn","initHoldTimeTrigger","Create_HoldTime_Effect","tempSkills","j","skills","takeSkills","triggerTabs","triggerTab","TriggerCondition","TriggerCondition_HoldTime","getLevel"],"mappings":"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","sourcesContent":["import { _decorator, Component, Vec3 } from \"cc\";\nimport { AbsRoleInfo } from \"../AbsRoleInfo\";\nimport { tab } from \"../../../../../../Table/table_gen\";\nimport { Func } from \"../../../../../utils/Func\";\nimport { EventMgr } from \"../../../../../mgr/EventMgr\";\nimport { FightEvent } from \"../../../../define/FightEvent\";\nimport { Role } from \"./Role\";\nimport { HeroFightInfo } from \"../../../../data/HeroFightInfo\";\nimport { EffectTab } from \"../../../../power/powerTab/EffectTab\";\nimport { SkillTab } from \"../../../../power/powerTab/SkillTab\";\nimport { SkillGroupTab } from \"../../../../power/powerTab/SkillGroupTab\";\nimport { SkillPowerControl } from \"../../../skill/SkillPowerControl\";\nimport { SkillControl } from \"../../../skill/SkillControl\";\nimport { SkillGroupCd } from \"../../../skill/SkillGroupCd\";\nimport { SkillTriggerTab } from \"../../../../power/powerTab/SkillTriggerTab\";\n\nconst { ccclass, property } = _decorator;\n\n@ccclass('RoleInfo')\nexport class RoleInfo extends AbsRoleInfo {\n    abs: Role\n    configTab: tab.HeroTable\n    heroStarTab: tab.HeroStarUpTable\n\n    heroFightInfo: HeroFightInfo //英雄数据\n    /** rogue属性*/\n    rogueAttr: Map<string, number> = new Map()\n\n    /** 位置索引 */\n    posIndex: number = 0\n\n    skillGroupCDMap: Map<tab.AttackType, SkillGroupCd> = new Map()\n\n    holdTimeTrigger: SkillTriggerTab[] = []\n\n\n    constructor() {\n        super()\n        this.skillGroupCDMap.set(tab.AttackType.AttackType_Attack, new SkillGroupCd())\n        this.skillGroupCDMap.set(tab.AttackType.AttackType_ActionAttack, new SkillGroupCd())\n    }\n    init(): void {\n        super.init()\n    }\n\n    reset(): void {\n        super.reset()\n\n        this.holdTimeTrigger.length = 0\n    }\n\n    setHeroInfo(hero: HeroFightInfo) {\n        this.reset()\n        this.heroFightInfo = hero\n        this.setConfigId(this.heroFightInfo.itemId)\n        /** 设置局外带进来的属性 */\n        this.setAttrList(this.heroFightInfo.attrList)\n        this.attrData.star = this.heroFightInfo.star\n        /** 设置局外带进来的技能 */\n        for (let index = 0; index < this.heroFightInfo.skillList.length; index++) {\n            const v = this.heroFightInfo.skillList[index];\n            let skill = this.skillPowers.createTypeAnyId(tab.PowerType.PowerType_SkillTable, v) as SkillTab\n            this.addTakeSkill(skill, false)\n        }\n\n        for (const iterator of this.skillGroupCDMap) {\n            iterator[1].setAbsInfo(this)\n        }\n    }\n\n    setConfigId(id: number) {\n        super.setConfigId(id)\n        this.setConfigTab(tab.getData().HeroTableById.getValue(id))\n\n        this.heroStarTab = Func.forBy2(tab.getData().HeroStarUpTable, \"HeroId\", id, \"HeroStar\", this.heroFightInfo.star)\n\n        this.skillGroupMap.set(tab.AttackType.AttackType_Attack, this.createSkillGroup(this.heroStarTab.SkillGroupIds) as SkillGroupTab)\n        this.sysnHeroAddAttackCount()\n        console.log(\"RoleInfo\", this)\n    }\n\n    get normalGroupCD() {\n        return this.skillGroupCDMap.get(tab.AttackType.AttackType_Attack)\n    }\n    get weaponeGroupCD() {\n        return this.skillGroupCDMap.get(tab.AttackType.AttackType_ActionAttack)\n    }\n\n    inSkillGroupCD(skillType: tab.AttackType, cb: Function) {\n        this.skillGroupCDMap.get(skillType).inCd(this.skillGroupMap.get(skillType), cb)\n        return this.skillGroupCDMap.get(skillType)\n    }\n\n    resetTestGroupId(id: number) {\n        if (id == 0) {\n            return\n        }\n        this.switchSkillGroup(this.createSkillGroup(id) as SkillGroupTab)\n    }\n\n    updateFrame(dt: number) {\n        super.updateFrame(dt)\n\n        if (this._weaponeGroup) {\n            if (this.weaponeGroupCD.isCDing) {\n                this.weaponeGroupCD.updateFrame(dt)\n            } else if (this.isAudo) {\n                this.useWeaponSkill(null)\n            }\n        }\n    }\n\n    useWeaponSkill(targetPos: Vec3) {\n        if (this.weaponeGroup == null) {\n            return\n        }\n        if (this.abs == null) {\n            return\n        }\n        if (this.abs.isDead) {\n            return\n        }\n        if (!this.abs.isActive) {\n            return\n        }\n        if (this.weaponeGroupCD.isCDing) {\n            return\n        }\n        if (this.weaponeGroup.nowSkill.isInCD(this.attrData)) {\n            return\n        }\n        if (targetPos == null) {\n            if (!this.checkSkillGroupUse(tab.AttackType.AttackType_ActionAttack)) {\n                return\n            }\n        }\n        SkillControl.ins.useSkillTarget(this.weaponeGroup.nowSkill, this.abs)\n        SkillControl.ins.useSkillBullet(this.weaponeGroup.nowSkill, this.abs, targetPos)\n        this.subAttackByType(tab.AttackType.AttackType_ActionAttack, 1)\n        EventMgr.emitFight(FightEvent.Skill_Attack_Count_Change, this.weaponeGroup.configId)\n        if (this.weaponeGroup.checkSkillCD()) {\n            // console.log(\"进入cd\")\n            this.inWeaponeCd()\n        }\n    }\n\n    inWeaponeCd() {\n        this.inSkillGroupCD(tab.AttackType.AttackType_ActionAttack, () => {\n            // console.log(\"cd完成---\")\n            this.weaponeGroup.fillUp()\n            EventMgr.emitFight(FightEvent.Skill_Attack_Count_Change, this.weaponeGroup.configId)\n        })\n    }\n\n    onLevelUp(lastLv: number, lv: number) {\n        this.attrData.level = lv\n        this.levelUpEffect(lastLv, lv)\n        EventMgr.emitFight(FightEvent.Role_Level_Up, this.heroFightInfo.itemId, lastLv, lv)\n        if (lastLv == 0) {\n            return\n        }\n        this.abs.onLevelUp()\n    }\n\n    /** 是否为战士 */\n    isHeroClassWarrior() {\n        return this.configTab.Class == tab.HeroClass.HeroClass_Warrior\n    }\n\n    isHeroClass(heroClass: tab.HeroClass) {\n        return this.configTab.Class == heroClass\n    }\n\n    subNormalAttack(count: number): void {\n        super.subNormalAttack(count)\n        EventMgr.emitFight(FightEvent.Skill_Attack_Count_Change, this.normalGroup.configId)\n    }\n\n    normalFillUp() {\n        this.normalGroup.fillUp()\n        EventMgr.emitFight(FightEvent.Skill_Attack_Count_Change, this.normalGroup.configId)\n    }\n\n    addNormalAttackCount(count: number) {\n        super.addNormalAttackCount(count)\n        EventMgr.emitFight(FightEvent.Skill_Attack_Count_Change, this.normalGroup.configId)\n    }\n\n    switchSkillGroup(skillGroup: SkillGroupTab) {\n        super.switchSkillGroup(skillGroup)\n        this.sysnHeroAddAttackCount()\n        EventMgr.emitFight(FightEvent.Role_change_SkillGroup, this)\n    }\n\n\n    attrChange(attrType: tab.AttrType, value: number): void {\n        super.attrChange(attrType, value)\n        if (attrType == tab.AttrType.AttrType_AttackNum) {\n            this.sysnHeroAddAttackCount()\n        }\n    }\n\n    sysnHeroAddAttackCount() {\n        if (this.normalGroup) {\n            this.normalGroup.setHeroAttackCount(this.attrData.getAttr(tab.AttrType.AttrType_AttackNum))\n            EventMgr.emitFight(FightEvent.Skill_Attack_Count_Change, this.normalGroup.configId)\n        }\n    }\n\n    addEffect(effectTab: EffectTab) {\n        super.addEffect(effectTab)\n        if (effectTab.Parameters[1]) {\n            this.addLevelEffect(effectTab, this.heroFightInfo.level)\n            this.levelEffects.push(effectTab)\n        }\n    }\n\n    removeEffect(effectTab: EffectTab) {\n        super.removeEffect(effectTab)\n        if (effectTab.Parameters[1]) {\n            Func.remove(this.levelEffects, this.levelEffects.indexOf(effectTab))\n        }\n    }\n\n    addLevelEffect(effectTab: EffectTab, upLv: number) {\n        let num = effectTab.Parameters[1];\n        this.attrData.addAttr(effectTab.EffectType, num * upLv)\n    }\n\n    /** 处理根据英雄等级增加的属性 */\n    levelUpEffect(lastLv: number, lv: number) {\n        let upCount = lv - lastLv\n        if (upCount <= 0) {\n            return\n        }\n        for (let index = 0; index < this.levelEffects.length; index++) {\n            this.addLevelEffect(this.levelEffects[index], upCount)\n        }\n    }\n\n    refreshHoldTime() {\n        super.refreshHoldTime()\n    }\n\n    onBorn() {\n        this.initHoldTimeTrigger()\n        super.onBorn()\n        if (this.holdTimeTrigger.length) {\n            EventMgr.emitFight(FightEvent.Create_HoldTime_Effect, this.abs)\n        }\n    }\n\n    initHoldTimeTrigger() {\n        this.holdTimeTrigger.length = 0\n        let tempSkills: SkillTab[] = []\n        let skillGroup = this.normalGroup\n\n        let skill: SkillTab\n        for (let j = 0; j < skillGroup.skills.length; j++) {\n            skill = skillGroup.skills[j]\n            tempSkills.push(skill)\n        }\n        if (this.weaponeGroup) {//招式\n            for (let j = 0; j < this.weaponeGroup.skills.length; j++) {\n                skill = this.weaponeGroup.skills[j]\n                tempSkills.push(skill)\n            }\n        }\n        for (let index = 0; index < this.takeSkills.length; index++) {\n            skill = this.takeSkills[index]\n            tempSkills.push(skill)\n        }\n\n        for (let index = 0; index < tempSkills.length; index++) {\n            const skill = tempSkills[index];\n            for (let index = 0; index < skill.triggerTabs.length; index++) {\n                const triggerTab = skill.triggerTabs[index];\n                if (triggerTab.TriggerCondition == tab.TriggerCondition.TriggerCondition_HoldTime) {\n                    this.holdTimeTrigger.push(triggerTab)\n                }\n            }\n        }\n    }\n\n    getLevel() {\n        return this.heroFightInfo.level\n    }\n}"]}