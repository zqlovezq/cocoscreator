{"version":3,"sources":["file:///C:/chickenStarClient/client/assets/scripts/logic/model/jianghu/everyDayChallenge/EveryDayChallengeView.ts"],"names":["_decorator","Button","Label","Node","RichText","Sprite","ViewScreen","EveryDayChallengeBoxItem","tab","getTimeUntilNextDay","handleNumerText","setTextTime","LangMgr","GameplayViewDataMgr","ShowTips","UIMgr","ViewName","OpenFunctionMgr","RoleData","TimeUtil","GameplayControl","BattleMainDataControl","ItemData","proto","Net","AdMgr","EventMgr","ccclass","property","EveryDayChallengeView","endTimer","difficulty","table","totalScore","updateTimer","timerLab","string","unschedule","register","onMsg","Ptl","DailyChallengeDataPush","on_s2c_DailyChallengeDataPush","DailyChallengeLevelRsp","on_s2c_DailyChallengeLevelRsp","DailyChallengeRewardRsp","on_s2c_DailyChallengeRewardRsp","DailyChallengeSweepRsp","on_s2c_DailyChallengeSweepRsp","DailyChallengeWatchAdvRsp","on_s2c_DailyChallengeWatchAdvRsp","onShow","initView","ins","dailyChallengeDataMsg","level","getData","DailyChallengeLevelTableByLevel","getValue","score","difficutyLab","getCombineString","initBoxItem","initEndTimer","initEventView","updateBtnState","initDownBtn","schedule","currScore","scoreLab","receivedScore","requires","Require","i","length","dropId","DropId","boxItems","pveBuffIds","dailyChallengeBuffs","key","pveBuffTable","PveStageBuffTableById","node","eventNodes","sprite","getChildByName","getComponent","setTexture","ShowIcon","getLab","Show","IsEasier","downNode","active","cd","Number","setCdTimerLab","getServerUtcTime","grayscale","enabled","downCdTimer","data","formaterWithOutSecond3","str","cdTimerLab","maxNum","GetKeyValue_ConfigTable","DailyChallengeCount","totalNum","challengeCount","battleBtnNode","sweepBtnNode","timesBtnNode","maxScoreNode","lastTimer","challengeTotalCount","pveTab","PveStageTableByStageId","StageId","resnumLab","CostItemNum","maxScore","isOpen","checkFunctionIsOpen","OpenFunctionName","OpenFunctionName_DailyChallengeSweepAll","maxScoreLab","onHelpBtn","show","viewName","EveryDayChallengeHelpPop","onClickDown","requestDailyChallengeLevel","Level","onClickUpBtn","nextTable","getIsPasstStageByStageId","MainStageLimit","chapter","StageName","onChallengeBtn","num","id","isItemsEnoughByList","CurrencyType","CurrencyType_Stamina","msg","Msg_StartStageReq","stageId","Send","StartStageReq","ResourceBuyPop","onClickSweepBtn","requestDailyChallengeSweep","onClikcAddTimeBtn","playVideoAd","AdType","AdType_DailyChallenge","requestDailyChallengeWatchAdv","error","code","CommonErrorCode","Succeed","rewards","CongratulationPop","onClikhideView","onClose","GameplayView"],"mappings":"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","sourcesContent":["import { _decorator, Button, Component, Label, Node, RichText, Sprite } from 'cc';\r\nimport { ViewScreen } from '../../../../framework/base/ViewScreen';\r\nimport { EveryDayChallengeBoxItem } from './EveryDayChallengeBoxItem';\r\nimport { tab } from '../../../../Table/table_gen';\r\nimport { GameUtil, getTimeUntilNextDay, handleNumerText, setTextTime } from '../../../utils/GameUtil';\r\nimport { LangMgr } from '../../../mgr/LangMgr';\r\nimport { GameplayViewDataMgr } from '../GameplayViewDataMgr';\r\nimport { ShowTips, UIMgr } from '../../../mgr/UIMgr';\r\nimport { ViewName } from '../../../define/ViewDefine';\r\nimport { OpenFunctionMgr } from '../../../../Common/component/OpenFunctionMgr';\r\nimport { RoleData } from '../../role/RoleData';\r\nimport { TimeUtil } from '../../../utils/TimeUtil';\r\nimport { GameplayControl } from '../GameplayControl';\r\nimport { BattleMainDataControl } from '../../home/battle/BattleMainDataControl';\r\nimport { ItemData } from '../../item/ItemData';\r\nimport { proto } from 'client_protocol';\r\nimport { Net } from '../../../net/Net';\r\nimport { AdMgr } from '../../AdMgr';\r\nimport { EventMgr } from '../../../mgr/EventMgr';\r\nconst { ccclass, property } = _decorator;\r\n\r\n/**\r\n * \r\n * EveryDayChallengeView\r\n * zhudingchao\r\n * Wed Jul 10 2024 10:50:32 GMT+0800 (中国标准时间)\r\n * db://assets/scripts/logic/model/jianghu/everyDayChallenge/EveryDayChallengeView.ts\r\n *\r\n */\r\n\r\n@ccclass('EveryDayChallengeView')\r\nexport class EveryDayChallengeView extends ViewScreen {\r\n    @property(Label)\r\n    timerLab: Label = null;\r\n    @property(RichText)\r\n    difficutyLab: RichText = null;\r\n    @property(Label)\r\n    cdTimerLab: Label = null;\r\n    @property(Node)\r\n    downNode: Node = null;\r\n    @property(Label)\r\n    scoreLab: Label = null;\r\n    @property([Node])\r\n    eventNodes: Array<Node> = [];\r\n    @property(Node)\r\n    battleBtnNode: Node = null;\r\n    @property(Node)\r\n    sweepBtnNode: Node = null;\r\n    @property(Node)\r\n    timesBtnNode: Node = null;\r\n    @property(Node)\r\n    maxScoreNode: Node = null;\r\n    @property(Label)\r\n    maxScoreLab: Label = null;\r\n    @property([EveryDayChallengeBoxItem])\r\n    boxItems: Array<EveryDayChallengeBoxItem> = [];\r\n    @property(Label)\r\n    resnumLab: Label = null;\r\n\r\n    private endTimer: number = 0;\r\n    private difficulty: number = 1;\r\n    private table: tab.DailyChallengeLevelTable;\r\n    private totalScore: number;\r\n\r\n    register(): void {\r\n        EventMgr.onMsg(proto.Ptl.DailyChallengeDataPush, this.on_s2c_DailyChallengeDataPush, this);\r\n        EventMgr.onMsg(proto.Ptl.DailyChallengeLevelRsp, this.on_s2c_DailyChallengeLevelRsp, this);\r\n        EventMgr.onMsg(proto.Ptl.DailyChallengeRewardRsp, this.on_s2c_DailyChallengeRewardRsp, this);\r\n        EventMgr.onMsg(proto.Ptl.DailyChallengeSweepRsp, this.on_s2c_DailyChallengeSweepRsp, this);\r\n        EventMgr.onMsg(proto.Ptl.DailyChallengeWatchAdvRsp, this.on_s2c_DailyChallengeWatchAdvRsp, this);\r\n\r\n    }\r\n    onShow(): void {\r\n        this.initView();\r\n\r\n    }\r\n    initView() {\r\n        this.difficulty = GameplayViewDataMgr.ins.dailyChallengeDataMsg.level;\r\n        this.table = tab.getData().DailyChallengeLevelTableByLevel.getValue(this.difficulty);\r\n        this.totalScore = GameplayViewDataMgr.ins.dailyChallengeDataMsg.score;\r\n        //this.difficutyLab.string = this.difficulty + \"\";\r\n        this.difficutyLab.string = LangMgr.getCombineString(\"ui_everyday_2\", [this.difficulty]);\r\n        this.initBoxItem();\r\n        this.initEndTimer();\r\n        this.initEventView();\r\n        this.updateBtnState();\r\n        this.initDownBtn();\r\n    }\r\n    initEndTimer() {\r\n        this.unschedule(this.updateTimer)\r\n        this.endTimer = getTimeUntilNextDay();\r\n        this.timerLab.string = setTextTime(this.endTimer);\r\n        this.schedule(this.updateTimer, 1)\r\n    }\r\n    updateTimer = () => {\r\n        this.endTimer--;\r\n        if (this.endTimer >= 0) {\r\n            this.timerLab.string = setTextTime(this.endTimer);\r\n        } else {\r\n            this.unschedule(this.updateTimer)\r\n        }\r\n    }\r\n    initBoxItem() {\r\n\r\n        let currScore = this.totalScore;\r\n        this.scoreLab.string = currScore + \"\";\r\n        let receivedScore = GameplayViewDataMgr.ins.dailyChallengeDataMsg.receivedScore;\r\n\r\n        let requires = this.table.Require;\r\n        for (let i: number = 0; i < requires.length; i++) {\r\n            let dropId = this.table.DropId[i];\r\n            this.boxItems[i].initView(i == 0 ? 0 : requires[i - 1], requires[i], currScore, dropId, requires[i] <= receivedScore)\r\n        }\r\n\r\n    }\r\n    initEventView() {\r\n        // let buffId = 1;\r\n        // let buffTable = tab.getData().DailyChallengeBuffTableById.getValue(buffId);\r\n        let pveBuffIds = GameplayViewDataMgr.ins.dailyChallengeBuffs;\r\n        for (let key in pveBuffIds) {\r\n            let pveBuffTable = tab.getData().PveStageBuffTableById.getValue(pveBuffIds[key]);\r\n            let node = this.eventNodes[key];\r\n            let sprite = node.getChildByName(\"icon\").getComponent(Sprite);\r\n            sprite.setTexture(pveBuffTable.ShowIcon);\r\n            node.getChildByName(\"boxscore_txt\").getComponent(Label).string = LangMgr.getLab(pveBuffTable.Show);\r\n        }\r\n    }\r\n    initDownBtn() {\r\n        if (this.table.IsEasier) {\r\n            this.downNode.active = true;\r\n            let cd = Number(GameplayViewDataMgr.ins.dailyChallengeDataMsg.cd);\r\n            if (cd > 0) {\r\n                this.setCdTimerLab(cd - RoleData.ins.getServerUtcTime())\r\n                this.downNode.getComponent(Sprite).grayscale = true;\r\n                this.downNode.getComponent(Button).enabled = false;\r\n            } else {\r\n                this.downNode.getComponent(Sprite).grayscale = false;\r\n                this.downNode.getComponent(Button).enabled = true;\r\n            }\r\n        } else {\r\n            this.downNode.active = false;\r\n        }\r\n\r\n    }\r\n\r\n    setCdTimerLab(downCdTimer: number) {\r\n        let data = TimeUtil.formaterWithOutSecond3(downCdTimer);\r\n        let str = \"\";\r\n        if (data[\"day\"] > 0) {\r\n            str += data[\"day\"] + LangMgr.getLab(\"Tips_common_day\")\r\n        }\r\n        if (data['hours'] > 0) {\r\n            str += data[\"hours\"] + LangMgr.getLab(\"Tips_common_hour\")\r\n        }\r\n        if (data['minutes'] > 0) {\r\n            str += data[\"minutes\"] + LangMgr.getLab(\"Tips_common_minute\")\r\n        }\r\n        this.cdTimerLab.string = str;\r\n    }\r\n    updateBtnState() {\r\n        let maxNum = tab.getData().GetKeyValue_ConfigTable().DailyChallengeCount;\r\n        let totalNum = GameplayViewDataMgr.ins.dailyChallengeDataMsg.challengeCount;\r\n        if (totalNum >= maxNum) {\r\n            this.battleBtnNode.active = false;\r\n            this.sweepBtnNode.active = false;\r\n            this.timesBtnNode.active = false;\r\n            this.maxScoreNode.active = false;\r\n        } else {\r\n            this.maxScoreNode.active = false;\r\n            this.sweepBtnNode.active = false;\r\n            let lastTimer = GameplayViewDataMgr.ins.dailyChallengeDataMsg.challengeTotalCount - GameplayViewDataMgr.ins.dailyChallengeDataMsg.challengeCount;\r\n            this.battleBtnNode.active = lastTimer > 0;\r\n            this.timesBtnNode.active = lastTimer == 0;\r\n            if (lastTimer > 0) {\r\n                let pveTab = tab.getData().PveStageTableByStageId.getValue(this.table.StageId);\r\n                this.resnumLab.string = pveTab.CostItemNum[0] + \"\"\r\n            }\r\n            let maxScore = GameplayViewDataMgr.ins.dailyChallengeDataMsg.maxScore;\r\n            if (maxScore > 0 && lastTimer > 0) {\r\n                let isOpen = OpenFunctionMgr.ins.checkFunctionIsOpen(tab.OpenFunctionName.OpenFunctionName_DailyChallengeSweepAll);\r\n                if (isOpen) {\r\n                    this.sweepBtnNode.active = true;\r\n                    this.maxScoreNode.active = true;\r\n                    this.maxScoreLab.string = handleNumerText(maxScore);\r\n                } else {\r\n                    this.sweepBtnNode.active = false;\r\n                    this.maxScoreNode.active = false;\r\n                }\r\n            }else{\r\n                // this.maxScoreNode.active = true;\r\n            }\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    onHelpBtn() {\r\n        UIMgr.ins.show({ viewName: ViewName.EveryDayChallengeHelpPop })\r\n    }\r\n\r\n    onClickDown() {\r\n        if (this.table.IsEasier) {\r\n            let cd = Number(GameplayViewDataMgr.ins.dailyChallengeDataMsg.cd);\r\n            if (cd <= 0) {\r\n                GameplayControl.ins.requestDailyChallengeLevel(this.table.Level - 1);\r\n            }\r\n        }\r\n    }\r\n    onClickUpBtn() {\r\n        let nextTable = tab.getData().DailyChallengeLevelTableByLevel.getValue(this.table.Level + 1);\r\n        if (nextTable) {\r\n            if (BattleMainDataControl.ins.getIsPasstStageByStageId(nextTable.MainStageLimit)) {\r\n                GameplayControl.ins.requestDailyChallengeLevel(nextTable.Level);\r\n            } else {\r\n                let chapter = tab.getData().PveStageTableByStageId.getValue(nextTable.MainStageLimit);\r\n                if (chapter) {\r\n                    ShowTips(LangMgr.getCombineString(\"Tips_dailychallengeunlockdifficulty\", [LangMgr.getLab(chapter.StageName)]));\r\n                }\r\n            }\r\n        } else {\r\n            ShowTips(LangMgr.getLab(\"Tips_dailychallenge_1\"))\r\n            //ShowTips(\"已达到当前最高难度\")\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n    onChallengeBtn() {\r\n        let pveTab = tab.getData().PveStageTableByStageId.getValue(this.table.StageId);\r\n        let num = pveTab.CostItemNum[0];\r\n        let id = ItemData.ins.isItemsEnoughByList([tab.CurrencyType.CurrencyType_Stamina], [num]);\r\n        if (id <= 0) {\r\n            let msg = new proto.Msg_StartStageReq();\r\n            msg.stageId = this.table.StageId;\r\n            Net.Send(proto.Ptl.StartStageReq, msg)\r\n        } else {\r\n            ShowTips(LangMgr.getLab(\"Tips_dailychallenge_2\"))\r\n            //ShowTips(\"体力不足\");\r\n            UIMgr.ins.show({ viewName: ViewName.ResourceBuyPop, data: { \"itemId\": tab.CurrencyType.CurrencyType_Stamina } })\r\n        }\r\n\r\n    }\r\n    onClickSweepBtn() {\r\n        let pveTab = tab.getData().PveStageTableByStageId.getValue(this.table.StageId);\r\n        let num = pveTab.CostItemNum[0];\r\n        let id = ItemData.ins.isItemsEnoughByList([tab.CurrencyType.CurrencyType_Stamina], [num]);\r\n        if (id <= 0) {\r\n            GameplayControl.ins.requestDailyChallengeSweep();\r\n        } else {\r\n            ShowTips(LangMgr.getLab(\"Tips_dailychallenge_2\"))\r\n            //ShowTips(\"体力不足\");\r\n            UIMgr.ins.show({ viewName: ViewName.ResourceBuyPop, data: { \"itemId\": tab.CurrencyType.CurrencyType_Stamina } })\r\n        }\r\n    }\r\n    onClikcAddTimeBtn() {\r\n        AdMgr.ins.playVideoAd(tab.AdType.AdType_DailyChallenge, () => {\r\n            GameplayControl.ins.requestDailyChallengeWatchAdv();\r\n        })\r\n    }\r\n    on_s2c_DailyChallengeDataPush(msg: proto.Msg_DailyChallengeDataPush) {\r\n        this.initView();\r\n    }\r\n    on_s2c_DailyChallengeLevelRsp(msg: proto.Msg_DailyChallengeLevelRsp) {\r\n        if (!msg.error || msg.error.code == proto.CommonErrorCode.Succeed) {\r\n            this.initView();\r\n        }\r\n    }\r\n\r\n    on_s2c_DailyChallengeRewardRsp(msg: proto.Msg_DailyChallengeRewardRsp) {\r\n        if (!msg.error || msg.error.code == proto.CommonErrorCode.Succeed) {\r\n            this.initBoxItem();\r\n            if(msg.rewards&&msg.rewards.length>0){\r\n                UIMgr.ins.show({ viewName: ViewName.CongratulationPop, data: msg.rewards })\r\n            }\r\n           \r\n        }\r\n    }\r\n    on_s2c_DailyChallengeSweepRsp(msg: proto.Msg_DailyChallengeSweepRsp) {\r\n        if (!msg.error || msg.error.code == proto.CommonErrorCode.Succeed) {\r\n            this.initView();\r\n        }\r\n    }\r\n    on_s2c_DailyChallengeWatchAdvRsp(msg: proto.Msg_DailyChallengeWatchAdvRsp) {\r\n        if (!msg.error || msg.error.code == proto.CommonErrorCode.Succeed) {\r\n            this.updateBtnState();\r\n\r\n        }\r\n    }\r\n    onClikhideView() {\r\n        this.onClose();\r\n        UIMgr.ins.show({ viewName: ViewName.GameplayView })\r\n    }\r\n\r\n}"]}