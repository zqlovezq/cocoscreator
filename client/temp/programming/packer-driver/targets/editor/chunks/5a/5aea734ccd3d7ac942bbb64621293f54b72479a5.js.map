{"version":3,"sources":["file:///C:/chickenStarClient/client/assets/scripts/logic/fight/view/rogue/RoguePop.ts"],"names":["_decorator","CCFloat","instantiate","Label","log","Node","Prefab","ViewPop","ShowTips","UIMgr","DropControl","RogueControl","RogueBaseItem","EventMgr","tab","FightRoleTeam","FightWeaponTeam","FightData","PlayerControl","ViewName","LocalEvent","GuideController","FightMsgControl","HeroTeamControl","HeroData","AdMgr","SettingsManager","LangMgr","PREVIEW","ccclass","property","RoguePop","rogueSelect","totalRefreshTime","rogueIndex","heroScoreMap","Map","create","ins","isDestory","pause","rogueDrops","length","show","viewName","hide","isInFightGuiding","holeMask","node","active","isTest","emitLocal","hidePop","hideView","onLoad","scheduleOnce","timeTouchNode","canClickTime","testRefreshBtn","register","onShow","refresh","ShowPop","updateRefreshBtn","getRefreshRogueTotalTime","lastTime","refreshRogueTime","refreshBtn","adrefreshBtn","refreshTimeLab","string","adRefreshTimeLab","isSelfRefresh","getList","fightTeam","fightWeapon","showType","type","showList","list","onCloseClick","idx","index","titleNodes","v","select_layout","destroyAllChildren","rogueInfo","nn","rogueTab","Sort","VirtualItemType","VirtualItemType_Eggs","heroPfb","weaponPfb","addChild","name","rogueBase","getComponent","setOwner","setData","showRogueChoose","caleRecommendRogue","unschedule","_rogueItem","getChildByName","isValid","getSetting","showChoose","onClick","onItemClick","info","console","addRogueId","checkNext","unscheduleAllCallbacks","onRefreshClick","getLab","addRefreshRogueTime","onRefreshClicktEST","onAdRefreshClick","playVideoAd","AdType","AdType_RogueRefreshByAdvert","onClickWeapon","WeaponPop","baseScores","getData","GetKeyValue_ConfigTable","RogueHeroRankScore","leaderScore","RogueCaptainScore","WarriorScore","RogueWarriorScore","teams","getTeam","clear","_maxScore","levels","i","_lv","level","push","sort","lv1","lv2","j","_heroClass","heroClass","levelIndex","indexOf","_baseScore","_leader","getLeader","_leaderClass","configTab","Class","_addScore","HeroClass","HeroClass_Warrior","_heroScore","set","maxScore","_index","score","heroItemId","getByItemId","heroTable","get","isLeader","RogueCaptainUpMul","bookTab","BookTableById","getValue","BookId","caleRecommendRogueWeapen","setExtraStar","children","child","star","RogueSeparatedScore","setStar","baseScore","buildsScore","RogueBookBuildsScore","buildsCoreScore","RogueBookCoreScore","buildsSkillScore","RogueBookSkillScore","buildsDefaultScore","RogueBookBaseScore","buildsKeyScore","RogueBookKeyScore","totalScore","curScore","maxWeapenScore","validList","rogueInfos","_rogueInfo","Id","Condition","scoreArr","k","bookID","_score","Builds","Builds_Core","Builds_Skill","Builds_None","getTeamCountSchool","Math","floor","max","sumScore","reduce","accumulator","currentValue","buildId","str","buldsScore","heroInfo","getById","heroId","builds","heroClassTable"],"mappings":"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","sourcesContent":["import { _decorator, CCFloat, Component, instantiate, Label, log, Node, Prefab, UITransform } from 'cc';\nimport { ViewPop } from '../../../../framework/base/ViewPop';\nimport { ShowTips, UIMgr } from '../../../mgr/UIMgr';\nimport { DropControl } from '../../drop/DropControl';\nimport { RogueControl, RogueSelect, RogueType } from './RogueControl';\nimport { RogueInfo } from './RogueInfo';\nimport { RogueHeroItem } from './RogueHeroItem';\nimport { RogueBaseItem } from './RogueBaseItem';\nimport { EventMgr } from '../../../mgr/EventMgr';\nimport { FightEvent } from '../../define/FightEvent';\nimport { FightRootControl } from '../../FightRootControl';\nimport { tab } from '../../../../Table/table_gen';\nimport { FightRoleTeam } from '../common/FightRoleTeam';\nimport { FightWeaponTeam } from '../common/FightWeaponTeam';\nimport { FightData } from '../../data/FightData';\nimport { PlayerControl } from '../../base/obj/role/role/PlayerControl';\nimport { ViewName } from '../../../define/ViewDefine';\nimport { LocalEvent } from '../../../define/LocalEvent';\nimport { GuideController } from '../../../guide/GuideController';\nimport { FightMsgControl } from '../../FightMsgControl';\nimport { HeroTeamControl } from '../../../model/hero/HeroTeamControl';\nimport { HeroData } from '../../../model/hero/HeroData';\nimport { AdMgr } from '../../../model/AdMgr';\nimport { SettingsManager } from '../../../model/role/SettingsManager';\nimport { LangMgr } from '../../../mgr/LangMgr';\nimport { sortByVocation } from '../../../utils/GameUtil';\nimport { PREVIEW } from 'cc/env';\nconst { ccclass, property } = _decorator;\n\n/** 肉鸽界面 */\n@ccclass('RoguePop')\nexport class RoguePop extends ViewPop {\n\n    static async create() {\n        if (FightData.ins.isDestory) {\n            return\n        }\n        if (FightData.ins.pause) {\n            return\n        }\n        if (DropControl.ins.rogueDrops.length == 0) {\n            return\n        }\n        FightData.ins.pause = true\n        await UIMgr.ins.show({ viewName: \"RoguePop\" })\n    }\n\n    static hide() {\n        if (!GuideController.ins.isInFightGuiding() || !GuideController.ins.holeMask.node.active || FightMsgControl.ins.isTest) {\n            FightData.ins.pause = false\n        }\n        if (GuideController.ins.isInFightGuiding()) {\n            EventMgr.emitLocal(LocalEvent.hidePop);\n        }\n        UIMgr.ins.hideView(\"RoguePop\")\n    }\n\n    @property([Node])\n    titleNodes: Node[] = []\n\n    @property(Node)\n    select_layout: Node = null\n\n    @property(Prefab)\n    heroPfb: Prefab = null\n\n    @property(Prefab)\n    weaponPfb: Prefab = null\n\n    @property(FightRoleTeam)\n    fightTeam: FightRoleTeam = null\n    @property(FightWeaponTeam)\n    fightWeapon: FightWeaponTeam = null\n\n    @property(Node)\n    refreshBtn: Node = null;\n    @property(Label)\n    refreshTimeLab: Label = null;\n    @property(Node)\n    adrefreshBtn: Node = null;\n    @property(Label)\n    adRefreshTimeLab: Label = null;\n    @property(Node)\n    timeTouchNode: Node = null\n    @property(CCFloat)\n    canClickTime: number = 1\n\n    @property(Node)\n    testRefreshBtn: Node = null;\n\n\n\n    rogueSelect: RogueSelect\n    totalRefreshTime: number = 0;\n    rogueIndex: number = 0;\n    protected onLoad(): void {\n        super.onLoad()\n        this.scheduleOnce(() => {\n            this.timeTouchNode.active = false\n        }, this.canClickTime)\n        this.testRefreshBtn.active = PREVIEW\n    }\n    register(): void {\n\n    }\n\n    onShow(): void {\n        this.refresh()\n        if (GuideController.ins.isInFightGuiding()) {\n            EventMgr.emitLocal(LocalEvent.ShowPop);\n        }\n    }\n\n    updateRefreshBtn() {\n        this.totalRefreshTime = RogueControl.ins.getRefreshRogueTotalTime();\n        let lastTime = this.totalRefreshTime - RogueControl.ins.refreshRogueTime;\n        if (lastTime == 0) {\n            this.refreshBtn.active = false;\n            this.adrefreshBtn.active = false;\n        } else if (lastTime > 1) {\n            this.refreshBtn.active = true;\n            this.adrefreshBtn.active = false;\n            this.refreshTimeLab.string = (this.totalRefreshTime - RogueControl.ins.refreshRogueTime) + \"/\" + this.totalRefreshTime;\n        } else {\n            this.refreshBtn.active = false;\n            this.adrefreshBtn.active = true;\n\n            this.adRefreshTimeLab.string = \"1/1\";\n        }\n    }\n    /**\n     * \n     * @param isSelfRefresh 是否用户手动点击刷新按钮\n     */\n    refresh(isSelfRefresh: boolean = false) {\n       \n        this.rogueSelect = RogueControl.ins.getList(isSelfRefresh)\n        this.fightTeam.refresh(true)\n        this.fightWeapon.refresh(true)\n        // this.totalRefreshTime = RogueControl.ins.getRefreshRogueTotalTime();\n        this.updateRefreshBtn();\n        this.showType(this.rogueSelect.type)\n        this.showList()\n        if (this.rogueSelect.list.length == 0) {\n            this.onCloseClick()\n            return\n        }\n    }\n\n    showType(idx: number) {\n        for (let index = 0; index < this.titleNodes.length; index++) {\n            const v = this.titleNodes[index];\n            v.active = index == idx\n        }\n    }\n\n    showList() {\n        this.select_layout.destroyAllChildren()\n        for (let index = 0; index < this.rogueSelect.list.length; index++) {\n            const rogueInfo = this.rogueSelect.list[index];\n            if (rogueInfo == null) {\n                continue\n            }\n            let nn\n            if (rogueInfo.rogueTab.Sort == tab.VirtualItemType.VirtualItemType_Eggs) {\n                nn = instantiate(this.heroPfb)\n            } else {\n                nn = instantiate(this.weaponPfb)\n            }\n            this.select_layout.addChild(nn)\n            nn.name = \"RogueHeroItem\" + index;\n            let rogueBase: RogueBaseItem = nn.getComponent(RogueBaseItem)\n            rogueBase.setOwner(this)\n            rogueBase.setData(rogueInfo)\n        }\n        if (FightMsgControl.ins.isTest) {\n            return\n        }\n\n        if (FightMsgControl.ins.isTest || this.rogueSelect.list.length <= 1) {\n            this.rogueIndex = 0;\n            this.scheduleOnce(this.showRogueChoose, 5)\n            return\n        }\n        this.rogueIndex = this.caleRecommendRogue();\n        this.unschedule(this.showRogueChoose);\n        this.scheduleOnce(this.showRogueChoose, 5)\n    }\n\n    showRogueChoose() {\n        const _rogueItem = this.select_layout.getChildByName(\"RogueHeroItem\" + this.rogueIndex);\n        if (_rogueItem && _rogueItem.isValid) {\n            if (SettingsManager.ins.getSetting(\"isAutoSelectRogue\")) {\n                _rogueItem.getComponent(RogueBaseItem).showChoose();\n                // _rogueItem.getComponent(RogueBaseItem).onClick();\n                this.scheduleOnce(() => {\n                    if (_rogueItem && _rogueItem.isValid) {\n                        _rogueItem.getComponent(RogueBaseItem).onClick();\n                    }\n                }, 0.5)\n            } else {\n                _rogueItem.getComponent(RogueBaseItem).showChoose();\n            }\n        }\n    }\n\n    onItemClick(info: RogueInfo) {\n        console.log(info)\n        RogueControl.ins.addRogueId(info)\n        this.checkNext()\n    }\n\n    checkNext() {\n        if (DropControl.ins.rogueDrops.length > 0) {\n            this.unscheduleAllCallbacks()\n            this.refresh()\n            return\n        }\n        RoguePop.hide()\n    }\n\n    onRefreshClick() {\n        if (RogueControl.ins.refreshRogueTime >= this.totalRefreshTime) {\n            //ShowTips(\"刷新次数已用完\");\n            ShowTips(LangMgr.getLab(\"Tips_refresh_1\"));\n        } else {\n            RogueControl.ins.addRefreshRogueTime();\n            this.refresh(true);\n        }\n\n    }\n\n    onRefreshClicktEST(){\n        this.refresh(true);\n    }\n    onAdRefreshClick() {\n        if (RogueControl.ins.refreshRogueTime >= this.totalRefreshTime) {\n            //ShowTips(\"刷新次数已用完\");\n            ShowTips(LangMgr.getLab(\"Tips_refresh_1\"));\n        } else {\n            AdMgr.ins.playVideoAd(tab.AdType.AdType_RogueRefreshByAdvert, () => {\n                RogueControl.ins.addRefreshRogueTime();\n                this.refresh(true)\n            })\n\n        }\n\n\n\n    }\n\n    onClickWeapon() {\n        UIMgr.ins.show({ viewName: ViewName.WeaponPop })\n    }\n    onCloseClick() {\n        RoguePop.hide()\n    }\n    heroScoreMap: Map<number, number> = new Map();\n    // 写一个推荐肉鸽算法 返回积分最高的肉鸽index\n    caleRecommendRogue(): number {\n        const baseScores = tab.getData().GetKeyValue_ConfigTable().RogueHeroRankScore;\n        const leaderScore = tab.getData().GetKeyValue_ConfigTable().RogueCaptainScore;\n        const WarriorScore = tab.getData().GetKeyValue_ConfigTable().RogueWarriorScore;\n        const teams = HeroTeamControl.ins.getTeam();\n        this.heroScoreMap.clear();\n        let _maxScore = 0;\n        // let _leaderScore = 0;\n        let levels = [];\n        for (let i = 0; i < teams.length; i++) {\n            const _lv = teams[i].level;\n            levels.push(_lv);\n        }\n        levels = levels.sort((lv1, lv2) => {\n            return lv2 - lv1;\n        })\n        for (let j = 0; j < teams.length; j++) {\n            const _heroClass = teams[j].heroClass;\n            const levelIndex = levels.indexOf(teams[j].level)\n            const _baseScore = baseScores[levelIndex];\n            levels[levelIndex] = 0;\n            // 获取队长职业\n            const _leader = PlayerControl.ins.getLeader();\n            let _leaderClass = 0\n            if (_leader) {\n                _leaderClass = _leader.info.configTab.Class;\n            }\n            let _addScore = 0;\n            if (_heroClass === _leaderClass) {\n                if (_heroClass === tab.HeroClass.HeroClass_Warrior) {\n                    _addScore = leaderScore + WarriorScore;\n                } else {\n                    _addScore = leaderScore\n                }\n                // _leaderScore = _baseScore+_addScore;\n            } else {\n                if (_heroClass === tab.HeroClass.HeroClass_Warrior) {\n                    _addScore = WarriorScore;\n                }\n            }\n            const _heroScore = _baseScore + _addScore;\n            if (_maxScore < _heroScore) {\n                _maxScore = _heroScore;\n            }\n            this.heroScoreMap.set(_heroClass, _heroScore);\n        }\n        // 设置基础分完毕\n        log(\"cocos肉鸽 设置肉鸽的基础分完毕=\", this.heroScoreMap);\n        let maxScore = 0;\n        let _index = 0;\n        for (let index = 0; index < this.rogueSelect.list.length; index++) {\n            const rogueInfo: RogueInfo = this.rogueSelect.list[index];\n            if (rogueInfo == null) {\n                continue\n            }\n            // 如果当前是武器 武器算法\n            let score = 0;\n            if (rogueInfo.heroItemId) {\n                const heroClass = HeroData.ins.getByItemId(rogueInfo.heroItemId).heroTable.Class;\n                score = this.heroScoreMap.get(heroClass)\n\n                const _leader = PlayerControl.ins.getLeader();\n                let _leaderClass = 0\n                if (_leader) {\n                    _leaderClass = _leader.info.configTab.Class;\n                }\n                const isLeader = heroClass === _leaderClass\n                if (isLeader) {\n                    score *= tab.getData().GetKeyValue_ConfigTable().RogueCaptainUpMul;\n                    console.log(`cocos肉鸽 当前~~~~~~~~~~~~~~index=${index},当前为队长计算出的积分为=${score}`);\n                }\n\n            } else {\n                const bookTab = tab.getData().BookTableById.getValue(rogueInfo.rogueTab.BookId)\n                score = this.caleRecommendRogueWeapen(rogueInfo, this.heroScoreMap.get(bookTab.Class), _maxScore);\n            }\n            console.log(`cocos肉鸽 当前~~~~~~~~~~~~~~index=${index},当前计算出的积分为=${score}`);\n            if(rogueInfo.rogueTab.Sort!==tab.VirtualItemType.VirtualItemType_Eggs){\n                this.setExtraStar(index,score);\n            }\n\n\n            if (score > maxScore) {\n                maxScore = score;\n                _index = index;\n            }\n        }\n        return _index;\n    }\n    setExtraStar(index: number, score: number) {\n        let nn = null;\n        for(let i=0;i<this.select_layout.children.length;i++){\n            const child = this.select_layout.children[i];\n            if(child.name===\"RogueHeroItem\" + index&&child.active){\n                nn = child;\n            }\n        }\n        // let nn = this.select_layout.getChildByName(\"RogueHeroItem\" + index);\n        let rogueBase: RogueBaseItem = nn.getComponent(RogueBaseItem)\n        let star = 0;\n        if (score >= tab.getData().GetKeyValue_ConfigTable().RogueSeparatedScore[0]) {\n            star = 3;\n        } else if (score < tab.getData().GetKeyValue_ConfigTable().RogueSeparatedScore[1]) {\n            star = 1;\n        } else {\n            star = 2;\n        }\n        rogueBase.setStar(star)\n    }\n    caleRecommendRogueWeapen(rogueInfo: RogueInfo, baseScore: number, maxScore: number): number {\n        const buildsScore = tab.getData().GetKeyValue_ConfigTable().RogueBookBuildsScore;\n        const buildsCoreScore = tab.getData().GetKeyValue_ConfigTable().RogueBookCoreScore;\n        const buildsSkillScore = tab.getData().GetKeyValue_ConfigTable().RogueBookSkillScore;\n        const buildsDefaultScore = tab.getData().GetKeyValue_ConfigTable().RogueBookBaseScore;\n        const buildsKeyScore = tab.getData().GetKeyValue_ConfigTable().RogueBookKeyScore;\n        let totalScore = 0;\n        let curScore = 0;\n        let maxWeapenScore = 0;\n        // 通过肉鸽id获取所有的前置条件的肉鸽ids\n        // 获取生效值\n        const validList = RogueControl.ins.validList;\n        const rogueInfos = [rogueInfo];\n        for (let i = 0; i < validList.length; i++) {\n            const _rogueInfo = validList[i];\n            if (_rogueInfo.Id === rogueInfo.Id) {\n                continue;\n            }\n            if (_rogueInfo.rogueTab.Condition === rogueInfo.rogueTab.Id) {\n                rogueInfos.push(_rogueInfo);\n            }\n        }\n        const scoreArr = [];\n        log(\"cocos肉鸽 rogueInfos=\", rogueInfos)\n        for (let k = 0; k < rogueInfos.length; k++) {\n            const bookID = rogueInfos[k].rogueTab.BookId;\n            const bookTab = tab.getData().BookTableById.getValue(bookID);\n            let _score = 0;\n            if (bookTab.Builds === tab.Builds.Builds_Core) {\n                // 核心\n                if (baseScore === maxScore) {\n                    _score = baseScore * buildsCoreScore;\n                }\n                console.log(`cocos肉鸽 核心积分=${_score}`)\n            } else if (bookTab.Builds === tab.Builds.Builds_Skill) {\n                // 招式\n                if (baseScore === maxScore) {\n                    _score = baseScore * buildsSkillScore;\n                }\n                console.log(`cocos肉鸽 招式积分=${_score}`)\n            } else if (bookTab.Builds === tab.Builds.Builds_None) {\n                _score = buildsDefaultScore;\n            } else {\n                // 流派\n                // 找出当前流派的英雄数量\n                // const buildCount = this.getTeamCountSchool(bookTab.Builds)\n                // const str = tab.Builds[bookTab.Builds];\n                // if (str.indexOf(\"1\") > -1) {\n                //     // 流派1\n                //     _score = baseScore * buildCount * buildsScore[0]\n                //     console.log(`cocos肉鸽 流派1积分=${_score}`)\n                // } else {\n                //     // 流派2\n                //     _score = baseScore * buildCount * buildsScore[1];\n                //     console.log(`cocos肉鸽 流派2积分=${_score}`)\n                // }\n                _score = this.getTeamCountSchool(bookTab.Builds);\n            }\n\n            scoreArr.push(Math.floor(_score * 100) / 100)\n        }\n        curScore = scoreArr[0];\n        maxWeapenScore = Math.max(...scoreArr);\n        const sumScore = scoreArr.reduce((accumulator, currentValue) => accumulator + currentValue, 0);\n        totalScore = Math.floor(sumScore * buildsKeyScore * 100) / 100;\n        console.log(`cocos肉鸽 积分数组为=${scoreArr}`)\n        return Math.max(...[totalScore, curScore, maxWeapenScore])\n    }\n    // 获取队伍中流派\n    getTeamCountSchool(buildId: tab.Builds): number {\n        const buildsScore = tab.getData().GetKeyValue_ConfigTable().RogueBookBuildsScore;\n        let score = 0;\n        const str = tab.Builds[buildId];\n        let buldsScore = str.indexOf(\"1\") > -1 ? buildsScore[0] : buildsScore[1]\n        const teams = HeroTeamControl.ins.getTeam();\n        for (let i = 0; i < teams.length; i++) {\n            const heroInfo = HeroData.ins.getById(teams[i].heroId);\n            const builds = heroInfo.heroTable.Builds;\n            if (builds.indexOf(buildId) > -1) {\n                if (this.heroScoreMap.get(heroInfo.heroClassTable.HeroClass) * buldsScore > score) {\n                    score = this.heroScoreMap.get(heroInfo.heroClassTable.HeroClass) * buldsScore\n                }\n            }\n        }\n        return score\n    }\n}"]}