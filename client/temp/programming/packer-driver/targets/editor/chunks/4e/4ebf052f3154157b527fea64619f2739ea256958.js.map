{"version":3,"sources":["file:///C:/chickenStarClient/client/assets/scripts/Table/table.ts"],"names":["LoadTable","worldPath","progressCallback","Promise","resolve","console","log","paths","push","resources","load","JsonAsset","error","resource","worldData","index","length","v","name","InitData","json","assetManager","releaseAsset","tab"],"mappings":";;;;;AAGO,WAASA,SAAT,CAAmBC,SAAnB,EAAsCC,gBAAtC,EAAyI;AAC5I,WAAO,IAAIC,OAAJ,CAAYC,OAAO,IAAI;AAC1BC,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBL,SAAxB;AACA,UAAIM,KAAK,GAAG,EAAZ;AACAA,MAAAA,KAAK,CAACC,IAAN,CAAW,qBAAX;AACAD,MAAAA,KAAK,CAACC,IAAN,CAAWP,SAAX,EAJ0B,CAIJ;;AACtBQ,MAAAA,SAAS,CAACC,IAAV,CAAeH,KAAf,EAAsBI,SAAtB,EAAiCT,gBAAjC,EAAmD,CAACU,KAAD,EAAeC,QAAf,KAAiC;AAChF,YAAID,KAAJ,EAAW;AACP,gBAAMA,KAAN;AACH;;AAED,YAAIE,SAAS,GAAG,EAAhB;;AACA,aAAK,IAAIC,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGF,QAAQ,CAACG,MAArC,EAA6CD,KAAK,EAAlD,EAAsD;AAClD,gBAAME,CAAC,GAAGJ,QAAQ,CAACE,KAAD,CAAlB;;AACA,cAAIE,CAAC,CAACC,IAAF,IAAU,WAAd,EAA2B;AACvB;AAAA;AAAA,4BAAIC,QAAJ,CAAaF,CAAC,CAACG,IAAf;AACAC,YAAAA,YAAY,CAACC,YAAb,CAA0BL,CAA1B;AACH;AACJ;;AACDb,QAAAA,OAAO;AACV,OAdD,EAL0B,CAoB1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEH,KA7BM,CAAP;AA8BH;;;;;;uBA/BeJ,S;;;;;;;;;AAHPW,MAAAA,S,OAAAA,S;AAAWU,MAAAA,Y,OAAAA,Y;AAAcZ,MAAAA,S,OAAAA,S;;AACzBc,MAAAA,G,iBAAAA,G","sourcesContent":["import { JsonAsset, assetManager, resources } from \"cc\";\r\nimport { tab } from \"./table_gen\";\r\n\r\nexport function LoadTable(worldPath: string, progressCallback?: (completedCount: number, totalCount: number, item: any) => void): Promise<void> {\r\n    return new Promise(resolve => {\r\n        console.log(\"worldKey\", worldPath)\r\n        let paths = []\r\n        paths.push('tabledata/table_gen')\r\n        paths.push(worldPath) //多语言\r\n        resources.load(paths, JsonAsset, progressCallback, (error: Error, resource: any) => {\r\n            if (error) {\r\n                throw error;\r\n            }\r\n\r\n            let worldData = {}\r\n            for (let index = 0; index < resource.length; index++) {\r\n                const v = resource[index];\r\n                if (v.name == 'table_gen') {\r\n                    tab.InitData(v.json)\r\n                    assetManager.releaseAsset(v)\r\n                }\r\n            }\r\n            resolve();\r\n        })\r\n        // resources.load('tabledata/table_gen', JsonAsset, progressCallback, (error: Error, resource: any)=>{\r\n        //     if(error) {\r\n        //          throw error;\r\n        //     }\r\n        //     tab.InitData(resource.json)\r\n        //     assetManager.releaseAsset(resource)\r\n        //     resolve();\r\n        // })\r\n\r\n    })\r\n}}