{"version":3,"sources":["file:///C:/chickenStarClient/client/assets/scripts/logic/model/mutation/TalentBigTipsPop.ts"],"names":["_decorator","Component","Label","Node","Sprite","tab","LangMgr","proto","Net","ShowItemNotEnoughTips","ItemData","RoleData","GameUtil","ccclass","property","TalentBigTipsPop","_talentData","setData","data","node","active","equipSkillTab","getData","EquipSkillTableById","getValue","AttrValue","ItemTableById","MaterialIdList","lbl_name","string","getLab","SkillName","lbl_value","SkillDesc","lbl_gold","convertNumber","MaterialCountList","sp_gold","setTexture","Icon","node_learn","lock_before_node","lock_node","unlock_node","bigLevel","ins","gene","bigGeneLevel","smallLevel","smallGeneLevel","UnlockArgs","Id","clickBtn","needGeneRes","haveCount","getCount","msg","Msg_UpgradeGeneLevelReq","type","Type","Send","Ptl","UpgradeGeneLevelReq"],"mappings":"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","sourcesContent":["import { _decorator, Component, Label, Node, Sprite } from 'cc';\r\nimport { tab } from '../../../Table/table_gen';\r\nimport { LangMgr } from '../../mgr/LangMgr';\r\nimport { proto } from 'client_protocol';\r\nimport { Net } from '../../net/Net';\r\nimport { ShowItemNotEnoughTips, ShowTips } from '../../mgr/UIMgr';\r\nimport { ItemData } from '../item/ItemData';\r\nimport { RoleData } from '../role/RoleData';\r\nimport { GameUtil } from '../../utils/GameUtil';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('TalentBigTipsPop')\r\nexport class TalentBigTipsPop extends Component {\r\n    @property(Label)\r\n    lbl_name:Label = null;\r\n    @property(Label)\r\n    lbl_value:Label = null;\r\n    @property(Label)\r\n    lbl_lock_level:Label = null;\r\n    @property(Label)\r\n    lbl_gold:Label = null;\r\n    @property(Sprite)\r\n    sp_gold:Sprite = null;\r\n\r\n\r\n    @property(Node)\r\n    node_learn:Node = null;\r\n    @property(Node)\r\n    lock_node:Node = null;\r\n    @property(Node)\r\n    lock_before_node:Node = null;\r\n    @property(Node)\r\n    unlock_node:Node = null;\r\n    private _talentData:tab.GeneLevelTable = null;\r\n    setData(data:tab.GeneLevelTable){\r\n        this._talentData = data;\r\n        this.node.active = true;\r\n        const equipSkillTab = tab.getData().EquipSkillTableById.getValue(data.AttrValue);\r\n        const ItemData = tab.getData().ItemTableById.getValue(data.MaterialIdList[0])\r\n        this.lbl_name.string=LangMgr.getLab(equipSkillTab.SkillName);\r\n        this.lbl_value.string = LangMgr.getLab(equipSkillTab.SkillDesc);\r\n        this.lbl_gold.string = GameUtil.convertNumber(data.MaterialCountList[0],true);\r\n        this.sp_gold.setTexture(ItemData.Icon);\r\n        this.node_learn.active = false;\r\n        this.lock_before_node.active = false;\r\n        this.lock_node.active = false;\r\n        this.unlock_node.active = false;\r\n        // 获取当前的level\r\n        const bigLevel = 10000+RoleData.ins.gene.bigGeneLevel;\r\n        const smallLevel = RoleData.ins.gene.smallGeneLevel;\r\n        if(smallLevel>=this._talentData.UnlockArgs){\r\n            if(this._talentData.Id==bigLevel+1){\r\n                this.node_learn.active = true;\r\n            }else if(this._talentData.Id<bigLevel+1){\r\n                this.unlock_node.active = true;\r\n            }else{\r\n                this.lock_before_node.active = true;\r\n            }\r\n        }else{\r\n            this.lock_node.active = true;\r\n        }\r\n    }\r\n    clickBtn(){\r\n        const needGeneRes = this._talentData.MaterialCountList[0];\r\n        const haveCount = ItemData.ins.getCount(this._talentData.MaterialIdList[0]);\r\n        if(haveCount<needGeneRes){\r\n            ShowItemNotEnoughTips(this._talentData.MaterialIdList[0]);\r\n            return \r\n        }\r\n        this.node.active = false;\r\n        let msg = new proto.Msg_UpgradeGeneLevelReq();\r\n        msg.type = this._talentData.Type;\r\n        Net.Send(proto.Ptl.UpgradeGeneLevelReq , msg)\r\n    }\r\n}\r\n\r\n\r\n"]}