{"version":3,"sources":["file:///C:/chickenStarClient/client/assets/scripts/logic/model/chat/ChatData.ts"],"names":["_decorator","ChatMessageInfo","EventMgr","LocalEvent","ccclass","property","ChatData","_channelMap","_chatMrssageMap","newMessageInfo","ins","_instance","purge","channelMap","Map","chatMrssageMap","initChannels","channels","key","set","Number","Id","type","deleteChannel","id","delete","getChanneIdByType","forEach","value","getChanneTypeById","get","chatMessagePush","message","info","merge","channelId","list","push","length","splice","emitLocal","ChatMessage_Change","getMessageInfosByType","has"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;;AAGAC,MAAAA,e,iBAAAA,e;;AACAC,MAAAA,Q,iBAAAA,Q;;AACAC,MAAAA,U,iBAAAA,U;;;;;;;;;OACH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBL,U;AAE9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;0BAGaM,Q,WADZF,OAAO,CAAC,UAAD,C,2BAAR,MACaE,QADb,CACwC;AAAA;AAAA,eAC5BC,WAD4B;AAAA,eAE5BC,eAF4B;AAAA,eAI7BC,cAJ6B,GAIE,IAJF;AAAA;;AAKf,mBAAHC,GAAG,GAAG;AACpB,cAAI,QAAQ,KAAKC,SAAjB,EAA4B;AACxB,iBAAKA,SAAL,GAAiB,IAAIL,QAAJ,EAAjB;AACH;;AACD,iBAAO,KAAKK,SAAZ;AACH;;AAEDC,QAAAA,KAAK,GAAG,CAEP;;AACa,YAAVC,UAAU,GAAG;AACb,cAAI,CAAC,KAAKN,WAAV,EAAuB;AACnB,iBAAKA,WAAL,GAAmB,IAAIO,GAAJ,EAAnB;AACH;;AACD,iBAAO,KAAKP,WAAZ;AACH;;AACiB,YAAdQ,cAAc,GAAG;AACjB,cAAI,CAAC,KAAKP,eAAV,EAA2B;AACvB,iBAAKA,eAAL,GAAuB,IAAIM,GAAJ,EAAvB;AACH;;AACD,iBAAO,KAAKN,eAAZ;AACH;;AACDQ,QAAAA,YAAY,CAACC,QAAD,EAAiC;AACzC,eAAK,IAAIC,GAAT,IAAgBD,QAAhB,EAA0B;AACtB,iBAAKJ,UAAL,CAAgBM,GAAhB,CAAoBC,MAAM,CAACH,QAAQ,CAACC,GAAD,CAAR,CAAcG,EAAf,CAA1B,EAA8CJ,QAAQ,CAACC,GAAD,CAAR,CAAcI,IAA5D;AACH;AACJ,SA/BmC,CAgCpC;;;AACAC,QAAAA,aAAa,CAACC,EAAD,EAAW;AACpB,eAAKX,UAAL,CAAgBY,MAAhB,CAAuBD,EAAvB;AACH;;AACDE,QAAAA,iBAAiB,CAACJ,IAAD,EAA4B;AACzC,cAAIE,EAAE,GAAC,CAAP;AACA,eAAKX,UAAL,CAAgBc,OAAhB,CAAwB,CAACC,KAAD,EAAOV,GAAP,KAAa;AACjC,gBAAGI,IAAI,IAAEM,KAAT,EAAe;AACXJ,cAAAA,EAAE,GAACN,GAAH;AACA,qBAAOA,GAAP;AACH;AACJ,WALD;AAMA,iBAAOM,EAAP;AACH;;AACDK,QAAAA,iBAAiB,CAACL,EAAD,EAAW;AACxB,iBAAO,KAAKX,UAAL,CAAgBiB,GAAhB,CAAoBV,MAAM,CAACI,EAAD,CAA1B,CAAP;AACH;;AACDO,QAAAA,eAAe,CAACC,OAAD,EAA6B;AACxC,cAAIC,IAAI,GAAG;AAAA;AAAA,mDAAX;AACAA,UAAAA,IAAI,CAACC,KAAL,CAAWF,OAAX;AACA,cAAIV,IAAI,GAAG,KAAKT,UAAL,CAAgBiB,GAAhB,CAAoBV,MAAM,CAACa,IAAI,CAACE,SAAN,CAA1B,CAAX;AACA,cAAIC,IAAI,GAAG,KAAKrB,cAAL,CAAoBe,GAApB,CAAwBR,IAAxB,CAAX;;AACA,cAAI,CAACc,IAAL,EAAW;AACPA,YAAAA,IAAI,GAAG,EAAP;AACA,iBAAKrB,cAAL,CAAoBI,GAApB,CAAwBG,IAAxB,EAA8Bc,IAA9B;AACH;;AACDA,UAAAA,IAAI,CAACC,IAAL,CAAUJ,IAAV;;AACA,cAAGG,IAAI,CAACE,MAAL,GAAY,EAAf,EAAkB;AACdF,YAAAA,IAAI,CAACG,MAAL,CAAY,CAAZ,EAAcH,IAAI,CAACE,MAAL,GAAY,EAA1B;AACH;;AACD,eAAK7B,cAAL,GAAoBwB,IAApB;AACA;AAAA;AAAA,oCAASO,SAAT,CAAmB;AAAA;AAAA,wCAAWC,kBAA9B;AACH;;AACDC,QAAAA,qBAAqB,CAACpB,IAAD,EAA8B;AAC/C,cAAI,KAAKP,cAAL,CAAoB4B,GAApB,CAAwBrB,IAAxB,CAAJ,EAAmC;AAC/B,mBAAO,KAAKP,cAAL,CAAoBe,GAApB,CAAwBR,IAAxB,CAAP;AACH;;AACD,iBAAO,EAAP;AACH;;AAtEmC,O,UAGrBX,S","sourcesContent":["import { _decorator, Component, Node } from 'cc';\r\nimport { IClear } from '../../../framework/base/IAbs';\r\nimport { proto } from 'client_protocol';\r\nimport { ChatMessageInfo } from './ChatMessageInfo';\r\nimport { EventMgr } from '../../mgr/EventMgr';\r\nimport { LocalEvent } from '../../define/LocalEvent';\r\nconst { ccclass, property } = _decorator;\r\n\r\n/**\r\n * \r\n * ChatData\r\n * zhudingchao\r\n * Thu Jun 13 2024 16:31:10 GMT+0800 (中国标准时间)\r\n * db://assets/scripts/logic/model/chat/ChatData.ts\r\n *\r\n */\r\n\r\n@ccclass('ChatData')\r\nexport class ChatData implements IClear {\r\n    private _channelMap: Map<number, proto.ChatChannelType>;\r\n    private _chatMrssageMap: Map<proto.ChatChannelType, Array<ChatMessageInfo>>;\r\n    private static _instance: ChatData;\r\n    public newMessageInfo:ChatMessageInfo=null;\r\n    public static get ins() {\r\n        if (null == this._instance) {\r\n            this._instance = new ChatData();\r\n        }\r\n        return this._instance;\r\n    }\r\n\r\n    purge() {\r\n\r\n    }\r\n    get channelMap() {\r\n        if (!this._channelMap) {\r\n            this._channelMap = new Map();\r\n        }\r\n        return this._channelMap;\r\n    }\r\n    get chatMrssageMap() {\r\n        if (!this._chatMrssageMap) {\r\n            this._chatMrssageMap = new Map();\r\n        }\r\n        return this._chatMrssageMap;\r\n    }\r\n    initChannels(channels: proto.IChatChannel[]) {\r\n        for (let key in channels) {\r\n            this.channelMap.set(Number(channels[key].Id), channels[key].type);\r\n        }\r\n    }\r\n    // 退出频道\r\n    deleteChannel(id:number){\r\n        this.channelMap.delete(id)\r\n    }\r\n    getChanneIdByType(type:proto.ChatChannelType){\r\n        let id=0;\r\n        this.channelMap.forEach((value,key)=>{\r\n            if(type==value){\r\n                id=key;\r\n                return key;\r\n            }\r\n        })\r\n        return id;\r\n    }\r\n    getChanneTypeById(id:number){\r\n        return this.channelMap.get(Number(id));\r\n    }\r\n    chatMessagePush(message: proto.ChatMessage) {\r\n        let info = new ChatMessageInfo();\r\n        info.merge(message);\r\n        let type = this.channelMap.get(Number(info.channelId));\r\n        let list = this.chatMrssageMap.get(type);\r\n        if (!list) {\r\n            list = [];\r\n            this.chatMrssageMap.set(type, list);\r\n        }\r\n        list.push(info);\r\n        if(list.length>50){\r\n            list.splice(0,list.length-50);\r\n        }\r\n        this.newMessageInfo=info;\r\n        EventMgr.emitLocal(LocalEvent.ChatMessage_Change);\r\n    }\r\n    getMessageInfosByType(type: proto.ChatChannelType) {\r\n        if (this.chatMrssageMap.has(type)) {\r\n            return this.chatMrssageMap.get(type);\r\n        }\r\n        return [];\r\n    }\r\n\r\n}"]}